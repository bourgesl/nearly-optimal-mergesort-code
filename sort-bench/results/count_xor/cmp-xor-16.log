# Run complete. Total time: 00:05:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             (size)  Mode  Cnt     Score   Error  Units
ArrayXorBenchmark.array4_Original    1000000  avgt   20  3147,080 ± 6,635  us/op
ArrayXorBenchmark.array4_Unsafe      1000000  avgt   20  2528,922 ± 3,100  us/op
ArrayXorBenchmark.array4_Unsafe2     1000000  avgt   20  2531,121 ± 5,059  us/op

ArrayXorBenchmark.arrayAndOriginal   1000000  avgt   20   682,777 ± 1,580  us/op
ArrayXorBenchmark.arrayAnd_Unsafe    1000000  avgt   20   637,330 ± 3,612  us/op

ArrayXorBenchmark.arrayXorOriginal   1000000  avgt   20   776,650 ± 1,976  us/op
ArrayXorBenchmark.arrayXor_Masked    1000000  avgt   20   813,705 ± 2,188  us/op
ArrayXorBenchmark.arrayXor_Masked_2  1000000  avgt   20   778,164 ± 1,780  us/op
ArrayXorBenchmark.arrayXor_Masked_3  1000000  avgt   20   776,476 ± 2,202  us/op
ArrayXorBenchmark.arrayXor_Masked_4  1000000  avgt   20   814,607 ± 1,690  us/op
ArrayXorBenchmark.arrayXor_Unsafe    1000000  avgt   20   715,067 ± 2,719  us/op

