max(arraySize): 50
subSizeList: [1, 4, 16, 64]
# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 0.00% complete, ETA 00:19:12
# Fork: 1 of 2
# Warmup Iteration   1: 19.641 ns/op
# Warmup Iteration   2: 21.994 ns/op
# Warmup Iteration   3: 15.023 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.254 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.016 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.391 ns/op
Iteration   7: 17.030 ns/op
Iteration   8: 17.030 ns/op
Iteration   9: 17.037 ns/op
Iteration  10: 14.939 ns/op

# Run progress: 0.07% complete, ETA 00:44:29
# Fork: 2 of 2
# Warmup Iteration   1: 19.376 ns/op
# Warmup Iteration   2: 23.175 ns/op
# Warmup Iteration   3: 15.067 ns/op
Iteration   1: 17.099 ns/op
Iteration   2: 15.284 ns/op
Iteration   3: 17.010 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.375 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.034 ns/op
Iteration  10: 14.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.832 ns/op [Average]
  (min, avg, max) = (14.939, 16.292, 17.109), stdev = 0.958
  CI (99.9%): [15.460, 17.124] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 0.14% complete, ETA 00:41:48
# Fork: 1 of 2
# Warmup Iteration   1: 751.979 ns/op
# Warmup Iteration   2: 398.773 ns/op
# Warmup Iteration   3: 286.043 ns/op
Iteration   1: 288.730 ns/op
Iteration   2: 286.053 ns/op
Iteration   3: 288.632 ns/op
Iteration   4: 288.767 ns/op
Iteration   5: 288.002 ns/op
Iteration   6: 285.775 ns/op
Iteration   7: 287.457 ns/op
Iteration   8: 287.399 ns/op
Iteration   9: 287.361 ns/op
Iteration  10: 286.081 ns/op

# Run progress: 0.21% complete, ETA 00:41:01
# Fork: 2 of 2
# Warmup Iteration   1: 742.605 ns/op
# Warmup Iteration   2: 412.995 ns/op
# Warmup Iteration   3: 289.911 ns/op
Iteration   1: 290.694 ns/op
Iteration   2: 298.619 ns/op
Iteration   3: 290.906 ns/op
Iteration   4: 290.719 ns/op
Iteration   5: 290.822 ns/op
Iteration   6: 290.139 ns/op
Iteration   7: 290.911 ns/op
Iteration   8: 290.907 ns/op
Iteration   9: 300.992 ns/op
Iteration  10: 298.293 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  290.363 ±(99.9%) 3.692 ns/op [Average]
  (min, avg, max) = (285.775, 290.363, 300.992), stdev = 4.251
  CI (99.9%): [286.671, 294.055] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 0.28% complete, ETA 00:40:22
# Fork: 1 of 2
# Warmup Iteration   1: 374.760 ns/op
# Warmup Iteration   2: 382.346 ns/op
# Warmup Iteration   3: 263.172 ns/op
Iteration   1: 261.521 ns/op
Iteration   2: 262.790 ns/op
Iteration   3: 261.326 ns/op
Iteration   4: 262.733 ns/op
Iteration   5: 261.475 ns/op
Iteration   6: 263.063 ns/op
Iteration   7: 261.460 ns/op
Iteration   8: 261.502 ns/op
Iteration   9: 261.437 ns/op
Iteration  10: 263.051 ns/op

# Run progress: 0.35% complete, ETA 00:39:58
# Fork: 2 of 2
# Warmup Iteration   1: 356.758 ns/op
# Warmup Iteration   2: 372.056 ns/op
# Warmup Iteration   3: 257.189 ns/op
Iteration   1: 255.967 ns/op
Iteration   2: 257.459 ns/op
Iteration   3: 255.214 ns/op
Iteration   4: 257.090 ns/op
Iteration   5: 254.692 ns/op
Iteration   6: 256.412 ns/op
Iteration   7: 255.757 ns/op
Iteration   8: 255.498 ns/op
Iteration   9: 254.657 ns/op
Iteration  10: 257.280 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  259.019 ±(99.9%) 2.794 ns/op [Average]
  (min, avg, max) = (254.657, 259.019, 263.063), stdev = 3.218
  CI (99.9%): [256.225, 261.814] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 0.42% complete, ETA 00:39:42
# Fork: 1 of 2
# Warmup Iteration   1: 1984.157 ns/op
# Warmup Iteration   2: 411.923 ns/op
# Warmup Iteration   3: 305.081 ns/op
Iteration   1: 302.198 ns/op
Iteration   2: 304.210 ns/op
Iteration   3: 301.828 ns/op
Iteration   4: 306.743 ns/op
Iteration   5: 302.376 ns/op
Iteration   6: 303.250 ns/op
Iteration   7: 301.814 ns/op
Iteration   8: 301.764 ns/op
Iteration   9: 301.855 ns/op
Iteration  10: 303.208 ns/op

# Run progress: 0.49% complete, ETA 00:39:28
# Fork: 2 of 2
# Warmup Iteration   1: 1363.122 ns/op
# Warmup Iteration   2: 410.326 ns/op
# Warmup Iteration   3: 300.848 ns/op
Iteration   1: 298.887 ns/op
Iteration   2: 300.550 ns/op
Iteration   3: 298.642 ns/op
Iteration   4: 303.553 ns/op
Iteration   5: 298.531 ns/op
Iteration   6: 300.451 ns/op
Iteration   7: 298.791 ns/op
Iteration   8: 298.643 ns/op
Iteration   9: 298.740 ns/op
Iteration  10: 300.453 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  301.324 ±(99.9%) 1.953 ns/op [Average]
  (min, avg, max) = (298.531, 301.324, 306.743), stdev = 2.249
  CI (99.9%): [299.372, 303.277] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 0.56% complete, ETA 00:39:19
# Fork: 1 of 2
# Warmup Iteration   1: 335.676 ns/op
# Warmup Iteration   2: 281.619 ns/op
# Warmup Iteration   3: 191.683 ns/op
Iteration   1: 190.069 ns/op
Iteration   2: 191.609 ns/op
Iteration   3: 190.056 ns/op
Iteration   4: 191.814 ns/op
Iteration   5: 190.043 ns/op
Iteration   6: 191.584 ns/op
Iteration   7: 190.159 ns/op
Iteration   8: 190.105 ns/op
Iteration   9: 190.159 ns/op
Iteration  10: 191.618 ns/op

# Run progress: 0.63% complete, ETA 00:39:14
# Fork: 2 of 2
# Warmup Iteration   1: 327.988 ns/op
# Warmup Iteration   2: 280.165 ns/op
# Warmup Iteration   3: 189.931 ns/op
Iteration   1: 188.524 ns/op
Iteration   2: 189.919 ns/op
Iteration   3: 188.345 ns/op
Iteration   4: 190.575 ns/op
Iteration   5: 188.353 ns/op
Iteration   6: 189.941 ns/op
Iteration   7: 188.290 ns/op
Iteration   8: 188.331 ns/op
Iteration   9: 188.392 ns/op
Iteration  10: 189.889 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  189.889 ±(99.9%) 1.037 ns/op [Average]
  (min, avg, max) = (188.290, 189.889, 191.814), stdev = 1.194
  CI (99.9%): [188.851, 190.926] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 0.69% complete, ETA 00:39:10
# Fork: 1 of 2
# Warmup Iteration   1: 375.972 ns/op
# Warmup Iteration   2: 359.326 ns/op
# Warmup Iteration   3: 240.330 ns/op
Iteration   1: 244.696 ns/op
Iteration   2: 240.033 ns/op
Iteration   3: 242.808 ns/op
Iteration   4: 265.576 ns/op
Iteration   5: 263.750 ns/op
Iteration   6: 262.297 ns/op
Iteration   7: 263.553 ns/op
Iteration   8: 263.388 ns/op
Iteration   9: 263.826 ns/op
Iteration  10: 262.113 ns/op

# Run progress: 0.76% complete, ETA 00:39:04
# Fork: 2 of 2
# Warmup Iteration   1: 431.365 ns/op
# Warmup Iteration   2: 332.738 ns/op
# Warmup Iteration   3: 240.249 ns/op
Iteration   1: 244.757 ns/op
Iteration   2: 240.030 ns/op
Iteration   3: 242.823 ns/op
Iteration   4: 265.443 ns/op
Iteration   5: 263.885 ns/op
Iteration   6: 262.285 ns/op
Iteration   7: 263.718 ns/op
Iteration   8: 263.430 ns/op
Iteration   9: 263.839 ns/op
Iteration  10: 262.113 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  257.218 ±(99.9%) 8.657 ns/op [Average]
  (min, avg, max) = (240.030, 257.218, 265.576), stdev = 9.969
  CI (99.9%): [248.562, 265.875] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 0.83% complete, ETA 00:39:00
# Fork: 1 of 2
# Warmup Iteration   1: 19.425 ns/op
# Warmup Iteration   2: 21.211 ns/op
# Warmup Iteration   3: 15.103 ns/op
Iteration   1: 17.090 ns/op
Iteration   2: 15.273 ns/op
Iteration   3: 17.037 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.372 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 14.963 ns/op

# Run progress: 0.90% complete, ETA 00:38:56
# Fork: 2 of 2
# Warmup Iteration   1: 19.070 ns/op
# Warmup Iteration   2: 23.555 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.079 ns/op
Iteration   2: 15.268 ns/op
Iteration   3: 17.037 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.353 ns/op
Iteration   7: 17.060 ns/op
Iteration   8: 17.039 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.295 ±(99.9%) 0.834 ns/op [Average]
  (min, avg, max) = (14.963, 16.295, 17.110), stdev = 0.961
  CI (99.9%): [15.460, 17.129] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 0.97% complete, ETA 00:38:50
# Fork: 1 of 2
# Warmup Iteration   1: 73.201 ns/op
# Warmup Iteration   2: 75.319 ns/op
# Warmup Iteration   3: 50.391 ns/op
Iteration   1: 233.024 ns/op
Iteration   2: 51.264 ns/op
Iteration   3: 51.519 ns/op
Iteration   4: 50.911 ns/op
Iteration   5: 51.648 ns/op
Iteration   6: 50.288 ns/op
Iteration   7: 51.564 ns/op
Iteration   8: 51.520 ns/op
Iteration   9: 51.532 ns/op
Iteration  10: 50.349 ns/op

# Run progress: 1.04% complete, ETA 00:38:53
# Fork: 2 of 2
# Warmup Iteration   1: 79.899 ns/op
# Warmup Iteration   2: 84.237 ns/op
# Warmup Iteration   3: 50.457 ns/op
Iteration   1: 51.503 ns/op
Iteration   2: 51.277 ns/op
Iteration   3: 51.535 ns/op
Iteration   4: 50.851 ns/op
Iteration   5: 51.597 ns/op
Iteration   6: 50.493 ns/op
Iteration   7: 51.467 ns/op
Iteration   8: 51.465 ns/op
Iteration   9: 51.459 ns/op
Iteration  10: 50.154 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  60.271 ±(99.9%) 35.312 ns/op [Average]
  (min, avg, max) = (50.154, 60.271, 233.024), stdev = 40.665
  CI (99.9%): [24.959, 95.582] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 1.11% complete, ETA 00:38:50
# Fork: 1 of 2
# Warmup Iteration   1: 63.423 ns/op
# Warmup Iteration   2: 74.436 ns/op
# Warmup Iteration   3: 45.951 ns/op
Iteration   1: 44.442 ns/op
Iteration   2: 45.900 ns/op
Iteration   3: 44.409 ns/op
Iteration   4: 46.122 ns/op
Iteration   5: 44.536 ns/op
Iteration   6: 45.876 ns/op
Iteration   7: 44.485 ns/op
Iteration   8: 44.544 ns/op
Iteration   9: 44.407 ns/op
Iteration  10: 45.814 ns/op

# Run progress: 1.18% complete, ETA 00:38:46
# Fork: 2 of 2
# Warmup Iteration   1: 64.316 ns/op
# Warmup Iteration   2: 69.542 ns/op
# Warmup Iteration   3: 45.882 ns/op
Iteration   1: 44.538 ns/op
Iteration   2: 46.111 ns/op
Iteration   3: 44.397 ns/op
Iteration   4: 46.054 ns/op
Iteration   5: 44.473 ns/op
Iteration   6: 45.887 ns/op
Iteration   7: 44.478 ns/op
Iteration   8: 44.462 ns/op
Iteration   9: 44.489 ns/op
Iteration  10: 45.891 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.066 ±(99.9%) 0.652 ns/op [Average]
  (min, avg, max) = (44.397, 45.066, 46.122), stdev = 0.751
  CI (99.9%): [44.414, 45.718] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 1.25% complete, ETA 00:38:43
# Fork: 1 of 2
# Warmup Iteration   1: 194.178 ns/op
# Warmup Iteration   2: 82.472 ns/op
# Warmup Iteration   3: 50.462 ns/op
Iteration   1: 49.115 ns/op
Iteration   2: 50.448 ns/op
Iteration   3: 49.104 ns/op
Iteration   4: 54.072 ns/op
Iteration   5: 49.021 ns/op
Iteration   6: 50.401 ns/op
Iteration   7: 49.057 ns/op
Iteration   8: 49.100 ns/op
Iteration   9: 49.104 ns/op
Iteration  10: 50.455 ns/op

# Run progress: 1.32% complete, ETA 00:38:41
# Fork: 2 of 2
# Warmup Iteration   1: 184.709 ns/op
# Warmup Iteration   2: 76.252 ns/op
# Warmup Iteration   3: 50.403 ns/op
Iteration   1: 49.007 ns/op
Iteration   2: 50.392 ns/op
Iteration   3: 49.130 ns/op
Iteration   4: 53.905 ns/op
Iteration   5: 49.078 ns/op
Iteration   6: 50.575 ns/op
Iteration   7: 49.017 ns/op
Iteration   8: 49.014 ns/op
Iteration   9: 49.073 ns/op
Iteration  10: 50.464 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.977 ±(99.9%) 1.314 ns/op [Average]
  (min, avg, max) = (49.007, 49.977, 54.072), stdev = 1.514
  CI (99.9%): [48.662, 51.291] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 1.39% complete, ETA 00:38:39
# Fork: 1 of 2
# Warmup Iteration   1: 67.032 ns/op
# Warmup Iteration   2: 81.005 ns/op
# Warmup Iteration   3: 49.277 ns/op
Iteration   1: 47.846 ns/op
Iteration   2: 49.124 ns/op
Iteration   3: 47.936 ns/op
Iteration   4: 49.190 ns/op
Iteration   5: 47.978 ns/op
Iteration   6: 49.194 ns/op
Iteration   7: 47.968 ns/op
Iteration   8: 48.084 ns/op
Iteration   9: 47.905 ns/op
Iteration  10: 49.133 ns/op

# Run progress: 1.46% complete, ETA 00:38:36
# Fork: 2 of 2
# Warmup Iteration   1: 67.856 ns/op
# Warmup Iteration   2: 81.744 ns/op
# Warmup Iteration   3: 49.366 ns/op
Iteration   1: 47.971 ns/op
Iteration   2: 49.210 ns/op
Iteration   3: 48.126 ns/op
Iteration   4: 49.151 ns/op
Iteration   5: 47.870 ns/op
Iteration   6: 49.135 ns/op
Iteration   7: 47.983 ns/op
Iteration   8: 47.962 ns/op
Iteration   9: 47.989 ns/op
Iteration  10: 49.238 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.450 ±(99.9%) 0.528 ns/op [Average]
  (min, avg, max) = (47.846, 48.450, 49.238), stdev = 0.608
  CI (99.9%): [47.921, 48.978] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 1.53% complete, ETA 00:38:32
# Fork: 1 of 2
# Warmup Iteration   1: 176.058 ns/op
# Warmup Iteration   2: 174.014 ns/op
# Warmup Iteration   3: 115.494 ns/op
Iteration   1: 117.677 ns/op
Iteration   2: 116.327 ns/op
Iteration   3: 118.899 ns/op
Iteration   4: 134.376 ns/op
Iteration   5: 136.010 ns/op
Iteration   6: 134.082 ns/op
Iteration   7: 134.979 ns/op
Iteration   8: 135.497 ns/op
Iteration   9: 134.925 ns/op
Iteration  10: 133.247 ns/op

# Run progress: 1.60% complete, ETA 00:38:29
# Fork: 2 of 2
# Warmup Iteration   1: 173.657 ns/op
# Warmup Iteration   2: 173.929 ns/op
# Warmup Iteration   3: 115.666 ns/op
Iteration   1: 117.735 ns/op
Iteration   2: 116.108 ns/op
Iteration   3: 118.743 ns/op
Iteration   4: 134.274 ns/op
Iteration   5: 135.600 ns/op
Iteration   6: 134.364 ns/op
Iteration   7: 135.016 ns/op
Iteration   8: 135.373 ns/op
Iteration   9: 134.810 ns/op
Iteration  10: 133.033 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  129.554 ±(99.9%) 7.029 ns/op [Average]
  (min, avg, max) = (116.108, 129.554, 136.010), stdev = 8.095
  CI (99.9%): [122.525, 136.583] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 1.67% complete, ETA 00:38:26
# Fork: 1 of 2
# Warmup Iteration   1: 20.190 ns/op
# Warmup Iteration   2: 23.448 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.012 ns/op
Iteration   4: 15.015 ns/op
Iteration   5: 17.124 ns/op
Iteration   6: 15.375 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.025 ns/op
Iteration   9: 17.024 ns/op
Iteration  10: 14.968 ns/op

# Run progress: 1.74% complete, ETA 00:38:23
# Fork: 2 of 2
# Warmup Iteration   1: 19.405 ns/op
# Warmup Iteration   2: 23.236 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.028 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.357 ns/op
Iteration   7: 17.027 ns/op
Iteration   8: 17.031 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.830 ns/op [Average]
  (min, avg, max) = (14.968, 16.290, 17.124), stdev = 0.956
  CI (99.9%): [15.460, 17.121] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 1.81% complete, ETA 00:38:21
# Fork: 1 of 2
# Warmup Iteration   1: 73.688 ns/op
# Warmup Iteration   2: 72.637 ns/op
# Warmup Iteration   3: 50.287 ns/op
Iteration   1: 51.432 ns/op
Iteration   2: 51.163 ns/op
Iteration   3: 51.428 ns/op
Iteration   4: 50.796 ns/op
Iteration   5: 51.520 ns/op
Iteration   6: 50.258 ns/op
Iteration   7: 51.442 ns/op
Iteration   8: 51.435 ns/op
Iteration   9: 51.427 ns/op
Iteration  10: 50.105 ns/op

# Run progress: 1.88% complete, ETA 00:38:19
# Fork: 2 of 2
# Warmup Iteration   1: 72.615 ns/op
# Warmup Iteration   2: 105.105 ns/op
# Warmup Iteration   3: 50.264 ns/op
Iteration   1: 51.467 ns/op
Iteration   2: 51.205 ns/op
Iteration   3: 51.464 ns/op
Iteration   4: 50.783 ns/op
Iteration   5: 51.498 ns/op
Iteration   6: 50.212 ns/op
Iteration   7: 51.450 ns/op
Iteration   8: 51.451 ns/op
Iteration   9: 51.451 ns/op
Iteration  10: 50.142 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.106 ±(99.9%) 0.452 ns/op [Average]
  (min, avg, max) = (50.105, 51.106, 51.520), stdev = 0.520
  CI (99.9%): [50.655, 51.558] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 1.94% complete, ETA 00:38:17
# Fork: 1 of 2
# Warmup Iteration   1: 63.753 ns/op
# Warmup Iteration   2: 70.439 ns/op
# Warmup Iteration   3: 45.802 ns/op
Iteration   1: 44.417 ns/op
Iteration   2: 45.909 ns/op
Iteration   3: 44.392 ns/op
Iteration   4: 46.038 ns/op
Iteration   5: 44.442 ns/op
Iteration   6: 45.811 ns/op
Iteration   7: 44.413 ns/op
Iteration   8: 44.403 ns/op
Iteration   9: 44.402 ns/op
Iteration  10: 45.773 ns/op

# Run progress: 2.01% complete, ETA 00:38:15
# Fork: 2 of 2
# Warmup Iteration   1: 64.261 ns/op
# Warmup Iteration   2: 70.383 ns/op
# Warmup Iteration   3: 45.815 ns/op
Iteration   1: 44.434 ns/op
Iteration   2: 45.880 ns/op
Iteration   3: 44.422 ns/op
Iteration   4: 46.091 ns/op
Iteration   5: 44.470 ns/op
Iteration   6: 45.821 ns/op
Iteration   7: 44.407 ns/op
Iteration   8: 44.362 ns/op
Iteration   9: 44.412 ns/op
Iteration  10: 45.772 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.004 ±(99.9%) 0.646 ns/op [Average]
  (min, avg, max) = (44.362, 45.004, 46.091), stdev = 0.744
  CI (99.9%): [44.358, 45.650] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 2.08% complete, ETA 00:38:12
# Fork: 1 of 2
# Warmup Iteration   1: 212.098 ns/op
# Warmup Iteration   2: 75.210 ns/op
# Warmup Iteration   3: 50.383 ns/op
Iteration   1: 48.979 ns/op
Iteration   2: 50.379 ns/op
Iteration   3: 49.000 ns/op
Iteration   4: 53.824 ns/op
Iteration   5: 49.084 ns/op
Iteration   6: 50.356 ns/op
Iteration   7: 49.096 ns/op
Iteration   8: 49.040 ns/op
Iteration   9: 49.005 ns/op
Iteration  10: 50.385 ns/op

# Run progress: 2.15% complete, ETA 00:38:09
# Fork: 2 of 2
# Warmup Iteration   1: 215.406 ns/op
# Warmup Iteration   2: 74.768 ns/op
# Warmup Iteration   3: 50.391 ns/op
Iteration   1: 48.960 ns/op
Iteration   2: 50.367 ns/op
Iteration   3: 48.994 ns/op
Iteration   4: 53.816 ns/op
Iteration   5: 48.970 ns/op
Iteration   6: 50.342 ns/op
Iteration   7: 49.019 ns/op
Iteration   8: 49.002 ns/op
Iteration   9: 49.003 ns/op
Iteration  10: 50.356 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.899 ±(99.9%) 1.283 ns/op [Average]
  (min, avg, max) = (48.960, 49.899, 53.824), stdev = 1.478
  CI (99.9%): [48.616, 51.182] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 2.22% complete, ETA 00:38:07
# Fork: 1 of 2
# Warmup Iteration   1: 67.892 ns/op
# Warmup Iteration   2: 71.154 ns/op
# Warmup Iteration   3: 49.167 ns/op
Iteration   1: 47.804 ns/op
Iteration   2: 49.084 ns/op
Iteration   3: 47.921 ns/op
Iteration   4: 49.153 ns/op
Iteration   5: 47.896 ns/op
Iteration   6: 49.103 ns/op
Iteration   7: 47.934 ns/op
Iteration   8: 47.868 ns/op
Iteration   9: 47.928 ns/op
Iteration  10: 49.124 ns/op

# Run progress: 2.29% complete, ETA 00:38:04
# Fork: 2 of 2
# Warmup Iteration   1: 70.772 ns/op
# Warmup Iteration   2: 69.199 ns/op
# Warmup Iteration   3: 49.133 ns/op
Iteration   1: 47.811 ns/op
Iteration   2: 49.175 ns/op
Iteration   3: 47.894 ns/op
Iteration   4: 49.179 ns/op
Iteration   5: 47.782 ns/op
Iteration   6: 49.115 ns/op
Iteration   7: 47.899 ns/op
Iteration   8: 47.885 ns/op
Iteration   9: 47.893 ns/op
Iteration  10: 49.200 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.382 ±(99.9%) 0.554 ns/op [Average]
  (min, avg, max) = (47.782, 48.382, 49.200), stdev = 0.638
  CI (99.9%): [47.829, 48.936] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 2.36% complete, ETA 00:38:03
# Fork: 1 of 2
# Warmup Iteration   1: 180.746 ns/op
# Warmup Iteration   2: 168.462 ns/op
# Warmup Iteration   3: 115.367 ns/op
Iteration   1: 117.561 ns/op
Iteration   2: 115.994 ns/op
Iteration   3: 118.508 ns/op
Iteration   4: 134.191 ns/op
Iteration   5: 135.442 ns/op
Iteration   6: 134.275 ns/op
Iteration   7: 134.993 ns/op
Iteration   8: 135.243 ns/op
Iteration   9: 134.807 ns/op
Iteration  10: 133.298 ns/op

# Run progress: 2.43% complete, ETA 00:38:01
# Fork: 2 of 2
# Warmup Iteration   1: 160.878 ns/op
# Warmup Iteration   2: 168.756 ns/op
# Warmup Iteration   3: 115.402 ns/op
Iteration   1: 117.597 ns/op
Iteration   2: 115.794 ns/op
Iteration   3: 118.534 ns/op
Iteration   4: 134.031 ns/op
Iteration   5: 135.327 ns/op
Iteration   6: 134.181 ns/op
Iteration   7: 135.067 ns/op
Iteration   8: 134.186 ns/op
Iteration   9: 134.668 ns/op
Iteration  10: 133.015 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  129.335 ±(99.9%) 7.041 ns/op [Average]
  (min, avg, max) = (115.794, 129.335, 135.442), stdev = 8.109
  CI (99.9%): [122.294, 136.377] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 2.50% complete, ETA 00:38:00
# Fork: 1 of 2
# Warmup Iteration   1: 20.736 ns/op
# Warmup Iteration   2: 23.125 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.259 ns/op
Iteration   3: 17.026 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.101 ns/op
Iteration   6: 15.378 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.026 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.973 ns/op

# Run progress: 2.57% complete, ETA 00:37:58
# Fork: 2 of 2
# Warmup Iteration   1: 20.085 ns/op
# Warmup Iteration   2: 23.293 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.282 ns/op
Iteration   3: 17.009 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.381 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 16.997 ns/op
Iteration  10: 14.955 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.955, 16.288, 17.108), stdev = 0.953
  CI (99.9%): [15.461, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 2.64% complete, ETA 00:37:56
# Fork: 1 of 2
# Warmup Iteration   1: 84.046 ns/op
# Warmup Iteration   2: 83.985 ns/op
# Warmup Iteration   3: 54.399 ns/op
Iteration   1: 55.247 ns/op
Iteration   2: 54.480 ns/op
Iteration   3: 55.290 ns/op
Iteration   4: 54.831 ns/op
Iteration   5: 55.228 ns/op
Iteration   6: 54.402 ns/op
Iteration   7: 55.251 ns/op
Iteration   8: 55.218 ns/op
Iteration   9: 55.277 ns/op
Iteration  10: 54.459 ns/op

# Run progress: 2.71% complete, ETA 00:37:53
# Fork: 2 of 2
# Warmup Iteration   1: 87.129 ns/op
# Warmup Iteration   2: 80.345 ns/op
# Warmup Iteration   3: 54.121 ns/op
Iteration   1: 56.312 ns/op
Iteration   2: 54.149 ns/op
Iteration   3: 55.454 ns/op
Iteration   4: 54.436 ns/op
Iteration   5: 55.098 ns/op
Iteration   6: 54.408 ns/op
Iteration   7: 55.314 ns/op
Iteration   8: 55.192 ns/op
Iteration   9: 55.249 ns/op
Iteration  10: 54.130 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  54.971 ±(99.9%) 0.472 ns/op [Average]
  (min, avg, max) = (54.130, 54.971, 56.312), stdev = 0.543
  CI (99.9%): [54.500, 55.443] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 2.78% complete, ETA 00:37:51
# Fork: 1 of 2
# Warmup Iteration   1: 63.646 ns/op
# Warmup Iteration   2: 65.348 ns/op
# Warmup Iteration   3: 45.823 ns/op
Iteration   1: 44.466 ns/op
Iteration   2: 45.874 ns/op
Iteration   3: 44.384 ns/op
Iteration   4: 46.050 ns/op
Iteration   5: 44.442 ns/op
Iteration   6: 45.850 ns/op
Iteration   7: 44.358 ns/op
Iteration   8: 44.400 ns/op
Iteration   9: 44.408 ns/op
Iteration  10: 45.758 ns/op

# Run progress: 2.85% complete, ETA 00:37:50
# Fork: 2 of 2
# Warmup Iteration   1: 64.151 ns/op
# Warmup Iteration   2: 63.182 ns/op
# Warmup Iteration   3: 45.807 ns/op
Iteration   1: 44.414 ns/op
Iteration   2: 45.916 ns/op
Iteration   3: 44.404 ns/op
Iteration   4: 46.035 ns/op
Iteration   5: 44.457 ns/op
Iteration   6: 45.783 ns/op
Iteration   7: 44.376 ns/op
Iteration   8: 44.375 ns/op
Iteration   9: 44.401 ns/op
Iteration  10: 45.828 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.999 ±(99.9%) 0.649 ns/op [Average]
  (min, avg, max) = (44.358, 44.999, 46.050), stdev = 0.747
  CI (99.9%): [44.350, 45.648] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 2.92% complete, ETA 00:37:50
# Fork: 1 of 2
# Warmup Iteration   1: 405.708 ns/op
# Warmup Iteration   2: 102.157 ns/op
# Warmup Iteration   3: 68.305 ns/op
Iteration   1: 67.002 ns/op
Iteration   2: 68.367 ns/op
Iteration   3: 67.108 ns/op
Iteration   4: 69.028 ns/op
Iteration   5: 67.387 ns/op
Iteration   6: 68.142 ns/op
Iteration   7: 67.120 ns/op
Iteration   8: 67.157 ns/op
Iteration   9: 67.112 ns/op
Iteration  10: 68.325 ns/op

# Run progress: 2.99% complete, ETA 00:37:48
# Fork: 2 of 2
# Warmup Iteration   1: 378.377 ns/op
# Warmup Iteration   2: 90.740 ns/op
# Warmup Iteration   3: 67.873 ns/op
Iteration   1: 66.839 ns/op
Iteration   2: 68.150 ns/op
Iteration   3: 65.556 ns/op
Iteration   4: 68.616 ns/op
Iteration   5: 66.683 ns/op
Iteration   6: 67.751 ns/op
Iteration   7: 65.563 ns/op
Iteration   8: 65.461 ns/op
Iteration   9: 65.577 ns/op
Iteration  10: 67.761 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  67.235 ±(99.9%) 0.932 ns/op [Average]
  (min, avg, max) = (65.461, 67.235, 69.028), stdev = 1.073
  CI (99.9%): [66.303, 68.167] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 3.06% complete, ETA 00:37:45
# Fork: 1 of 2
# Warmup Iteration   1: 66.870 ns/op
# Warmup Iteration   2: 68.501 ns/op
# Warmup Iteration   3: 49.156 ns/op
Iteration   1: 47.793 ns/op
Iteration   2: 49.138 ns/op
Iteration   3: 47.909 ns/op
Iteration   4: 49.125 ns/op
Iteration   5: 47.806 ns/op
Iteration   6: 49.065 ns/op
Iteration   7: 47.924 ns/op
Iteration   8: 47.928 ns/op
Iteration   9: 47.919 ns/op
Iteration  10: 49.148 ns/op

# Run progress: 3.13% complete, ETA 00:37:43
# Fork: 2 of 2
# Warmup Iteration   1: 66.855 ns/op
# Warmup Iteration   2: 68.611 ns/op
# Warmup Iteration   3: 49.152 ns/op
Iteration   1: 47.822 ns/op
Iteration   2: 49.122 ns/op
Iteration   3: 47.906 ns/op
Iteration   4: 49.141 ns/op
Iteration   5: 47.844 ns/op
Iteration   6: 49.105 ns/op
Iteration   7: 47.917 ns/op
Iteration   8: 47.901 ns/op
Iteration   9: 47.947 ns/op
Iteration  10: 49.179 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.382 ±(99.9%) 0.544 ns/op [Average]
  (min, avg, max) = (47.793, 48.382, 49.179), stdev = 0.626
  CI (99.9%): [47.838, 48.926] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 3.19% complete, ETA 00:37:41
# Fork: 1 of 2
# Warmup Iteration   1: 167.606 ns/op
# Warmup Iteration   2: 173.140 ns/op
# Warmup Iteration   3: 121.710 ns/op
Iteration   1: 123.140 ns/op
Iteration   2: 128.743 ns/op
Iteration   3: 123.335 ns/op
Iteration   4: 137.330 ns/op
Iteration   5: 137.732 ns/op
Iteration   6: 136.254 ns/op
Iteration   7: 136.951 ns/op
Iteration   8: 137.077 ns/op
Iteration   9: 136.893 ns/op
Iteration  10: 136.054 ns/op

# Run progress: 3.26% complete, ETA 00:37:38
# Fork: 2 of 2
# Warmup Iteration   1: 164.897 ns/op
# Warmup Iteration   2: 157.961 ns/op
# Warmup Iteration   3: 121.613 ns/op
Iteration   1: 122.771 ns/op
Iteration   2: 128.990 ns/op
Iteration   3: 123.183 ns/op
Iteration   4: 136.772 ns/op
Iteration   5: 136.644 ns/op
Iteration   6: 134.880 ns/op
Iteration   7: 135.826 ns/op
Iteration   8: 136.824 ns/op
Iteration   9: 135.981 ns/op
Iteration  10: 134.641 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  133.001 ±(99.9%) 4.878 ns/op [Average]
  (min, avg, max) = (122.771, 133.001, 137.732), stdev = 5.617
  CI (99.9%): [128.123, 137.879] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 3.33% complete, ETA 00:37:36
# Fork: 1 of 2
# Warmup Iteration   1: 19.121 ns/op
# Warmup Iteration   2: 23.204 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.260 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.362 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.010 ns/op
Iteration   9: 17.027 ns/op
Iteration  10: 14.967 ns/op

# Run progress: 3.40% complete, ETA 00:37:34
# Fork: 2 of 2
# Warmup Iteration   1: 19.714 ns/op
# Warmup Iteration   2: 22.952 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.075 ns/op
Iteration   2: 15.259 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.382 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.036 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 14.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.830 ns/op [Average]
  (min, avg, max) = (14.967, 16.290, 17.110), stdev = 0.956
  CI (99.9%): [15.460, 17.120] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 3.47% complete, ETA 00:37:31
# Fork: 1 of 2
# Warmup Iteration   1: 165.548 ns/op
# Warmup Iteration   2: 136.671 ns/op
# Warmup Iteration   3: 91.143 ns/op
Iteration   1: 92.251 ns/op
Iteration   2: 90.834 ns/op
Iteration   3: 92.127 ns/op
Iteration   4: 91.047 ns/op
Iteration   5: 92.388 ns/op
Iteration   6: 90.610 ns/op
Iteration   7: 92.144 ns/op
Iteration   8: 92.059 ns/op
Iteration   9: 92.236 ns/op
Iteration  10: 90.747 ns/op

# Run progress: 3.54% complete, ETA 00:37:29
# Fork: 2 of 2
# Warmup Iteration   1: 165.238 ns/op
# Warmup Iteration   2: 129.401 ns/op
# Warmup Iteration   3: 91.106 ns/op
Iteration   1: 92.247 ns/op
Iteration   2: 90.855 ns/op
Iteration   3: 92.337 ns/op
Iteration   4: 91.057 ns/op
Iteration   5: 92.367 ns/op
Iteration   6: 90.627 ns/op
Iteration   7: 92.260 ns/op
Iteration   8: 92.336 ns/op
Iteration   9: 92.355 ns/op
Iteration  10: 90.691 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.679 ±(99.9%) 0.643 ns/op [Average]
  (min, avg, max) = (90.610, 91.679, 92.388), stdev = 0.741
  CI (99.9%): [91.035, 92.322] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 3.61% complete, ETA 00:37:26
# Fork: 1 of 2
# Warmup Iteration   1: 67.280 ns/op
# Warmup Iteration   2: 64.321 ns/op
# Warmup Iteration   3: 45.802 ns/op
Iteration   1: 44.445 ns/op
Iteration   2: 45.907 ns/op
Iteration   3: 44.376 ns/op
Iteration   4: 46.015 ns/op
Iteration   5: 44.441 ns/op
Iteration   6: 45.850 ns/op
Iteration   7: 44.412 ns/op
Iteration   8: 44.405 ns/op
Iteration   9: 44.361 ns/op
Iteration  10: 45.866 ns/op

# Run progress: 3.68% complete, ETA 00:37:25
# Fork: 2 of 2
# Warmup Iteration   1: 64.511 ns/op
# Warmup Iteration   2: 71.500 ns/op
# Warmup Iteration   3: 45.804 ns/op
Iteration   1: 44.447 ns/op
Iteration   2: 45.906 ns/op
Iteration   3: 44.377 ns/op
Iteration   4: 46.018 ns/op
Iteration   5: 44.450 ns/op
Iteration   6: 45.795 ns/op
Iteration   7: 44.429 ns/op
Iteration   8: 44.390 ns/op
Iteration   9: 44.400 ns/op
Iteration  10: 45.761 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.003 ±(99.9%) 0.648 ns/op [Average]
  (min, avg, max) = (44.361, 45.003, 46.018), stdev = 0.746
  CI (99.9%): [44.355, 45.650] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 3.75% complete, ETA 00:37:22
# Fork: 1 of 2
# Warmup Iteration   1: 314.410 ns/op
# Warmup Iteration   2: 161.111 ns/op
# Warmup Iteration   3: 110.118 ns/op
Iteration   1: 108.674 ns/op
Iteration   2: 110.654 ns/op
Iteration   3: 108.538 ns/op
Iteration   4: 110.539 ns/op
Iteration   5: 108.813 ns/op
Iteration   6: 109.978 ns/op
Iteration   7: 108.542 ns/op
Iteration   8: 108.516 ns/op
Iteration   9: 108.546 ns/op
Iteration  10: 110.435 ns/op

# Run progress: 3.82% complete, ETA 00:37:20
# Fork: 2 of 2
# Warmup Iteration   1: 320.729 ns/op
# Warmup Iteration   2: 150.239 ns/op
# Warmup Iteration   3: 109.337 ns/op
Iteration   1: 108.354 ns/op
Iteration   2: 109.993 ns/op
Iteration   3: 107.863 ns/op
Iteration   4: 109.609 ns/op
Iteration   5: 107.903 ns/op
Iteration   6: 109.253 ns/op
Iteration   7: 108.067 ns/op
Iteration   8: 107.947 ns/op
Iteration   9: 108.040 ns/op
Iteration  10: 109.209 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  108.974 ±(99.9%) 0.806 ns/op [Average]
  (min, avg, max) = (107.863, 108.974, 110.654), stdev = 0.929
  CI (99.9%): [108.167, 109.780] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 3.89% complete, ETA 00:37:18
# Fork: 1 of 2
# Warmup Iteration   1: 73.217 ns/op
# Warmup Iteration   2: 72.184 ns/op
# Warmup Iteration   3: 49.157 ns/op
Iteration   1: 47.790 ns/op
Iteration   2: 49.179 ns/op
Iteration   3: 47.915 ns/op
Iteration   4: 49.153 ns/op
Iteration   5: 47.774 ns/op
Iteration   6: 49.131 ns/op
Iteration   7: 47.911 ns/op
Iteration   8: 47.920 ns/op
Iteration   9: 47.901 ns/op
Iteration  10: 49.154 ns/op

# Run progress: 3.96% complete, ETA 00:37:16
# Fork: 2 of 2
# Warmup Iteration   1: 66.462 ns/op
# Warmup Iteration   2: 80.953 ns/op
# Warmup Iteration   3: 49.154 ns/op
Iteration   1: 47.802 ns/op
Iteration   2: 49.114 ns/op
Iteration   3: 47.921 ns/op
Iteration   4: 49.116 ns/op
Iteration   5: 47.782 ns/op
Iteration   6: 49.129 ns/op
Iteration   7: 47.912 ns/op
Iteration   8: 47.923 ns/op
Iteration   9: 47.921 ns/op
Iteration  10: 49.170 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.381 ±(99.9%) 0.556 ns/op [Average]
  (min, avg, max) = (47.774, 48.381, 49.179), stdev = 0.641
  CI (99.9%): [47.825, 48.937] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 4.03% complete, ETA 00:37:14
# Fork: 1 of 2
# Warmup Iteration   1: 167.018 ns/op
# Warmup Iteration   2: 161.946 ns/op
# Warmup Iteration   3: 121.659 ns/op
Iteration   1: 122.816 ns/op
Iteration   2: 129.097 ns/op
Iteration   3: 123.159 ns/op
Iteration   4: 136.908 ns/op
Iteration   5: 136.584 ns/op
Iteration   6: 134.869 ns/op
Iteration   7: 135.992 ns/op
Iteration   8: 136.719 ns/op
Iteration   9: 136.019 ns/op
Iteration  10: 134.734 ns/op

# Run progress: 4.10% complete, ETA 00:37:12
# Fork: 2 of 2
# Warmup Iteration   1: 165.919 ns/op
# Warmup Iteration   2: 174.674 ns/op
# Warmup Iteration   3: 121.848 ns/op
Iteration   1: 123.066 ns/op
Iteration   2: 128.656 ns/op
Iteration   3: 123.383 ns/op
Iteration   4: 137.434 ns/op
Iteration   5: 137.775 ns/op
Iteration   6: 136.256 ns/op
Iteration   7: 136.904 ns/op
Iteration   8: 137.000 ns/op
Iteration   9: 136.947 ns/op
Iteration  10: 136.035 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  133.018 ±(99.9%) 4.886 ns/op [Average]
  (min, avg, max) = (122.816, 133.018, 137.775), stdev = 5.626
  CI (99.9%): [128.132, 137.903] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 4.17% complete, ETA 00:37:10
# Fork: 1 of 2
# Warmup Iteration   1: 19.296 ns/op
# Warmup Iteration   2: 22.919 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.253 ns/op
Iteration   3: 17.031 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.114 ns/op
Iteration   6: 15.385 ns/op
Iteration   7: 17.015 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.958 ns/op

# Run progress: 4.24% complete, ETA 00:37:08
# Fork: 2 of 2
# Warmup Iteration   1: 19.678 ns/op
# Warmup Iteration   2: 22.957 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.271 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.381 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.009 ns/op
Iteration  10: 14.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.829 ns/op [Average]
  (min, avg, max) = (14.958, 16.289, 17.114), stdev = 0.955
  CI (99.9%): [15.460, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 4.31% complete, ETA 00:37:06
# Fork: 1 of 2
# Warmup Iteration   1: 657.190 ns/op
# Warmup Iteration   2: 393.893 ns/op
# Warmup Iteration   3: 303.377 ns/op
Iteration   1: 306.029 ns/op
Iteration   2: 304.606 ns/op
Iteration   3: 303.050 ns/op
Iteration   4: 304.771 ns/op
Iteration   5: 306.798 ns/op
Iteration   6: 303.063 ns/op
Iteration   7: 307.514 ns/op
Iteration   8: 304.894 ns/op
Iteration   9: 305.569 ns/op
Iteration  10: 302.205 ns/op

# Run progress: 4.38% complete, ETA 00:37:04
# Fork: 2 of 2
# Warmup Iteration   1: 793.122 ns/op
# Warmup Iteration   2: 389.765 ns/op
# Warmup Iteration   3: 303.549 ns/op
Iteration   1: 306.035 ns/op
Iteration   2: 302.529 ns/op
Iteration   3: 304.138 ns/op
Iteration   4: 303.413 ns/op
Iteration   5: 305.816 ns/op
Iteration   6: 301.185 ns/op
Iteration   7: 305.049 ns/op
Iteration   8: 304.462 ns/op
Iteration   9: 303.958 ns/op
Iteration  10: 304.070 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  304.458 ±(99.9%) 1.388 ns/op [Average]
  (min, avg, max) = (301.185, 304.458, 307.514), stdev = 1.598
  CI (99.9%): [303.070, 305.846] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 4.44% complete, ETA 00:37:02
# Fork: 1 of 2
# Warmup Iteration   1: 759.482 ns/op
# Warmup Iteration   2: 745.425 ns/op
# Warmup Iteration   3: 540.440 ns/op
Iteration   1: 538.139 ns/op
Iteration   2: 539.986 ns/op
Iteration   3: 538.673 ns/op
Iteration   4: 540.776 ns/op
Iteration   5: 540.034 ns/op
Iteration   6: 539.054 ns/op
Iteration   7: 540.218 ns/op
Iteration   8: 539.121 ns/op
Iteration   9: 539.288 ns/op
Iteration  10: 539.856 ns/op

# Run progress: 4.51% complete, ETA 00:37:00
# Fork: 2 of 2
# Warmup Iteration   1: 820.431 ns/op
# Warmup Iteration   2: 678.178 ns/op
# Warmup Iteration   3: 531.555 ns/op
Iteration   1: 530.029 ns/op
Iteration   2: 531.530 ns/op
Iteration   3: 529.853 ns/op
Iteration   4: 531.168 ns/op
Iteration   5: 530.061 ns/op
Iteration   6: 530.854 ns/op
Iteration   7: 529.863 ns/op
Iteration   8: 529.957 ns/op
Iteration   9: 530.073 ns/op
Iteration  10: 531.158 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  534.985 ±(99.9%) 4.082 ns/op [Average]
  (min, avg, max) = (529.853, 534.985, 540.776), stdev = 4.701
  CI (99.9%): [530.902, 539.067] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 4.58% complete, ETA 00:36:58
# Fork: 1 of 2
# Warmup Iteration   1: 28331.607 ns/op
# Warmup Iteration   2: 869.814 ns/op
# Warmup Iteration   3: 549.464 ns/op
Iteration   1: 504.331 ns/op
Iteration   2: 505.765 ns/op
Iteration   3: 503.664 ns/op
Iteration   4: 508.448 ns/op
Iteration   5: 504.227 ns/op
Iteration   6: 505.914 ns/op
Iteration   7: 503.534 ns/op
Iteration   8: 503.797 ns/op
Iteration   9: 504.240 ns/op
Iteration  10: 504.985 ns/op

# Run progress: 4.65% complete, ETA 00:36:57
# Fork: 2 of 2
# Warmup Iteration   1: 11181.385 ns/op
# Warmup Iteration   2: 732.473 ns/op
# Warmup Iteration   3: 499.797 ns/op
Iteration   1: 499.600 ns/op
Iteration   2: 499.787 ns/op
Iteration   3: 499.345 ns/op
Iteration   4: 504.114 ns/op
Iteration   5: 499.756 ns/op
Iteration   6: 499.214 ns/op
Iteration   7: 499.765 ns/op
Iteration   8: 499.345 ns/op
Iteration   9: 499.576 ns/op
Iteration  10: 499.595 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  502.450 ±(99.9%) 2.507 ns/op [Average]
  (min, avg, max) = (499.214, 502.450, 508.448), stdev = 2.887
  CI (99.9%): [499.943, 504.957] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 4.72% complete, ETA 00:36:56
# Fork: 1 of 2
# Warmup Iteration   1: 508.627 ns/op
# Warmup Iteration   2: 426.020 ns/op
# Warmup Iteration   3: 336.800 ns/op
Iteration   1: 336.106 ns/op
Iteration   2: 338.442 ns/op
Iteration   3: 335.717 ns/op
Iteration   4: 337.834 ns/op
Iteration   5: 335.699 ns/op
Iteration   6: 336.682 ns/op
Iteration   7: 335.752 ns/op
Iteration   8: 335.728 ns/op
Iteration   9: 335.763 ns/op
Iteration  10: 336.845 ns/op

# Run progress: 4.79% complete, ETA 00:36:54
# Fork: 2 of 2
# Warmup Iteration   1: 561.565 ns/op
# Warmup Iteration   2: 430.998 ns/op
# Warmup Iteration   3: 337.283 ns/op
Iteration   1: 335.574 ns/op
Iteration   2: 338.007 ns/op
Iteration   3: 335.470 ns/op
Iteration   4: 337.657 ns/op
Iteration   5: 335.487 ns/op
Iteration   6: 336.541 ns/op
Iteration   7: 335.778 ns/op
Iteration   8: 335.862 ns/op
Iteration   9: 335.717 ns/op
Iteration  10: 336.661 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  336.366 ±(99.9%) 0.811 ns/op [Average]
  (min, avg, max) = (335.470, 336.366, 338.442), stdev = 0.934
  CI (99.9%): [335.555, 337.177] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 4.86% complete, ETA 00:36:52
# Fork: 1 of 2
# Warmup Iteration   1: 543.191 ns/op
# Warmup Iteration   2: 391.671 ns/op
# Warmup Iteration   3: 279.009 ns/op
Iteration   1: 282.994 ns/op
Iteration   2: 279.133 ns/op
Iteration   3: 282.885 ns/op
Iteration   4: 302.405 ns/op
Iteration   5: 297.706 ns/op
Iteration   6: 296.459 ns/op
Iteration   7: 297.381 ns/op
Iteration   8: 297.166 ns/op
Iteration   9: 297.245 ns/op
Iteration  10: 296.380 ns/op

# Run progress: 4.93% complete, ETA 00:36:50
# Fork: 2 of 2
# Warmup Iteration   1: 532.347 ns/op
# Warmup Iteration   2: 377.943 ns/op
# Warmup Iteration   3: 279.064 ns/op
Iteration   1: 283.120 ns/op
Iteration   2: 279.233 ns/op
Iteration   3: 283.172 ns/op
Iteration   4: 318.266 ns/op
Iteration   5: 297.504 ns/op
Iteration   6: 296.531 ns/op
Iteration   7: 297.606 ns/op
Iteration   8: 297.578 ns/op
Iteration   9: 297.522 ns/op
Iteration  10: 296.520 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  293.840 ±(99.9%) 8.211 ns/op [Average]
  (min, avg, max) = (279.133, 293.840, 318.266), stdev = 9.456
  CI (99.9%): [285.629, 302.052] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 5.00% complete, ETA 00:36:48
# Fork: 1 of 2
# Warmup Iteration   1: 19.357 ns/op
# Warmup Iteration   2: 23.136 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.286 ns/op
Iteration   3: 17.029 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.098 ns/op
Iteration   6: 15.398 ns/op
Iteration   7: 17.022 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.013 ns/op
Iteration  10: 14.974 ns/op

# Run progress: 5.07% complete, ETA 00:36:46
# Fork: 2 of 2
# Warmup Iteration   1: 19.507 ns/op
# Warmup Iteration   2: 20.934 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.264 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.384 ns/op
Iteration   7: 17.009 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.014 ns/op
Iteration  10: 14.960 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.960, 16.290, 17.107), stdev = 0.950
  CI (99.9%): [15.465, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 5.14% complete, ETA 00:36:45
# Fork: 1 of 2
# Warmup Iteration   1: 73.708 ns/op
# Warmup Iteration   2: 71.492 ns/op
# Warmup Iteration   3: 50.272 ns/op
Iteration   1: 51.455 ns/op
Iteration   2: 51.213 ns/op
Iteration   3: 51.447 ns/op
Iteration   4: 50.737 ns/op
Iteration   5: 51.495 ns/op
Iteration   6: 50.270 ns/op
Iteration   7: 51.616 ns/op
Iteration   8: 51.433 ns/op
Iteration   9: 51.445 ns/op
Iteration  10: 50.098 ns/op

# Run progress: 5.21% complete, ETA 00:36:43
# Fork: 2 of 2
# Warmup Iteration   1: 72.161 ns/op
# Warmup Iteration   2: 71.838 ns/op
# Warmup Iteration   3: 50.278 ns/op
Iteration   1: 51.452 ns/op
Iteration   2: 51.194 ns/op
Iteration   3: 51.412 ns/op
Iteration   4: 50.767 ns/op
Iteration   5: 51.494 ns/op
Iteration   6: 50.270 ns/op
Iteration   7: 51.429 ns/op
Iteration   8: 51.438 ns/op
Iteration   9: 51.447 ns/op
Iteration  10: 50.067 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.109 ±(99.9%) 0.460 ns/op [Average]
  (min, avg, max) = (50.067, 51.109, 51.616), stdev = 0.530
  CI (99.9%): [50.649, 51.569] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 5.28% complete, ETA 00:36:41
# Fork: 1 of 2
# Warmup Iteration   1: 64.942 ns/op
# Warmup Iteration   2: 64.077 ns/op
# Warmup Iteration   3: 45.799 ns/op
Iteration   1: 44.470 ns/op
Iteration   2: 45.873 ns/op
Iteration   3: 44.395 ns/op
Iteration   4: 46.076 ns/op
Iteration   5: 44.432 ns/op
Iteration   6: 45.797 ns/op
Iteration   7: 44.415 ns/op
Iteration   8: 44.395 ns/op
Iteration   9: 44.392 ns/op
Iteration  10: 45.753 ns/op

# Run progress: 5.35% complete, ETA 00:36:39
# Fork: 2 of 2
# Warmup Iteration   1: 64.899 ns/op
# Warmup Iteration   2: 64.820 ns/op
# Warmup Iteration   3: 45.795 ns/op
Iteration   1: 44.450 ns/op
Iteration   2: 45.875 ns/op
Iteration   3: 44.385 ns/op
Iteration   4: 46.020 ns/op
Iteration   5: 44.446 ns/op
Iteration   6: 45.796 ns/op
Iteration   7: 44.400 ns/op
Iteration   8: 44.419 ns/op
Iteration   9: 44.404 ns/op
Iteration  10: 45.799 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.999 ±(99.9%) 0.639 ns/op [Average]
  (min, avg, max) = (44.385, 44.999, 46.076), stdev = 0.736
  CI (99.9%): [44.360, 45.639] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 5.42% complete, ETA 00:36:38
# Fork: 1 of 2
# Warmup Iteration   1: 153.650 ns/op
# Warmup Iteration   2: 67.568 ns/op
# Warmup Iteration   3: 50.388 ns/op
Iteration   1: 48.990 ns/op
Iteration   2: 50.377 ns/op
Iteration   3: 49.002 ns/op
Iteration   4: 53.814 ns/op
Iteration   5: 48.969 ns/op
Iteration   6: 50.357 ns/op
Iteration   7: 49.000 ns/op
Iteration   8: 48.999 ns/op
Iteration   9: 49.005 ns/op
Iteration  10: 50.358 ns/op

# Run progress: 5.49% complete, ETA 00:36:36
# Fork: 2 of 2
# Warmup Iteration   1: 146.905 ns/op
# Warmup Iteration   2: 69.714 ns/op
# Warmup Iteration   3: 50.381 ns/op
Iteration   1: 48.967 ns/op
Iteration   2: 50.374 ns/op
Iteration   3: 49.001 ns/op
Iteration   4: 53.811 ns/op
Iteration   5: 48.983 ns/op
Iteration   6: 50.364 ns/op
Iteration   7: 49.031 ns/op
Iteration   8: 49.001 ns/op
Iteration   9: 48.998 ns/op
Iteration  10: 50.358 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.888 ±(99.9%) 1.287 ns/op [Average]
  (min, avg, max) = (48.967, 49.888, 53.814), stdev = 1.482
  CI (99.9%): [48.601, 51.175] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 5.56% complete, ETA 00:36:34
# Fork: 1 of 2
# Warmup Iteration   1: 66.951 ns/op
# Warmup Iteration   2: 70.889 ns/op
# Warmup Iteration   3: 49.140 ns/op
Iteration   1: 47.824 ns/op
Iteration   2: 49.140 ns/op
Iteration   3: 47.919 ns/op
Iteration   4: 49.162 ns/op
Iteration   5: 47.779 ns/op
Iteration   6: 49.133 ns/op
Iteration   7: 47.852 ns/op
Iteration   8: 47.891 ns/op
Iteration   9: 47.913 ns/op
Iteration  10: 49.134 ns/op

# Run progress: 5.63% complete, ETA 00:36:33
# Fork: 2 of 2
# Warmup Iteration   1: 67.042 ns/op
# Warmup Iteration   2: 65.679 ns/op
# Warmup Iteration   3: 49.341 ns/op
Iteration   1: 47.781 ns/op
Iteration   2: 49.147 ns/op
Iteration   3: 47.915 ns/op
Iteration   4: 50.983 ns/op
Iteration   5: 48.318 ns/op
Iteration   6: 49.131 ns/op
Iteration   7: 47.915 ns/op
Iteration   8: 47.923 ns/op
Iteration   9: 47.930 ns/op
Iteration  10: 49.138 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.496 ±(99.9%) 0.729 ns/op [Average]
  (min, avg, max) = (47.779, 48.496, 50.983), stdev = 0.839
  CI (99.9%): [47.768, 49.225] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 5.69% complete, ETA 00:36:36
# Fork: 1 of 2
# Warmup Iteration   1: 162.641 ns/op
# Warmup Iteration   2: 168.044 ns/op
# Warmup Iteration   3: 115.560 ns/op
Iteration   1: 117.535 ns/op
Iteration   2: 116.011 ns/op
Iteration   3: 118.152 ns/op
Iteration   4: 134.090 ns/op
Iteration   5: 135.510 ns/op
Iteration   6: 134.130 ns/op
Iteration   7: 134.925 ns/op
Iteration   8: 135.234 ns/op
Iteration   9: 134.889 ns/op
Iteration  10: 133.550 ns/op

# Run progress: 5.76% complete, ETA 00:36:34
# Fork: 2 of 2
# Warmup Iteration   1: 161.578 ns/op
# Warmup Iteration   2: 165.994 ns/op
# Warmup Iteration   3: 115.405 ns/op
Iteration   1: 117.531 ns/op
Iteration   2: 115.966 ns/op
Iteration   3: 118.674 ns/op
Iteration   4: 134.163 ns/op
Iteration   5: 135.513 ns/op
Iteration   6: 134.109 ns/op
Iteration   7: 135.061 ns/op
Iteration   8: 134.135 ns/op
Iteration   9: 134.982 ns/op
Iteration  10: 133.587 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  129.387 ±(99.9%) 7.077 ns/op [Average]
  (min, avg, max) = (115.966, 129.387, 135.513), stdev = 8.150
  CI (99.9%): [122.310, 136.464] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 5.83% complete, ETA 00:36:32
# Fork: 1 of 2
# Warmup Iteration   1: 19.806 ns/op
# Warmup Iteration   2: 23.005 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.075 ns/op
Iteration   2: 15.286 ns/op
Iteration   3: 17.030 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.370 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.970 ns/op

# Run progress: 5.90% complete, ETA 00:36:30
# Fork: 2 of 2
# Warmup Iteration   1: 19.571 ns/op
# Warmup Iteration   2: 22.189 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.273 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.112 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.024 ns/op
Iteration  10: 14.966 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.966, 16.292, 17.112), stdev = 0.953
  CI (99.9%): [15.465, 17.120] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 5.97% complete, ETA 00:36:28
# Fork: 1 of 2
# Warmup Iteration   1: 71.984 ns/op
# Warmup Iteration   2: 74.689 ns/op
# Warmup Iteration   3: 50.295 ns/op
Iteration   1: 51.456 ns/op
Iteration   2: 51.214 ns/op
Iteration   3: 51.447 ns/op
Iteration   4: 50.716 ns/op
Iteration   5: 51.500 ns/op
Iteration   6: 50.353 ns/op
Iteration   7: 51.430 ns/op
Iteration   8: 51.440 ns/op
Iteration   9: 51.443 ns/op
Iteration  10: 50.175 ns/op

# Run progress: 6.04% complete, ETA 00:36:26
# Fork: 2 of 2
# Warmup Iteration   1: 71.684 ns/op
# Warmup Iteration   2: 75.306 ns/op
# Warmup Iteration   3: 50.268 ns/op
Iteration   1: 51.446 ns/op
Iteration   2: 51.235 ns/op
Iteration   3: 51.435 ns/op
Iteration   4: 50.755 ns/op
Iteration   5: 51.495 ns/op
Iteration   6: 50.241 ns/op
Iteration   7: 51.438 ns/op
Iteration   8: 51.452 ns/op
Iteration   9: 51.442 ns/op
Iteration  10: 50.106 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.111 ±(99.9%) 0.442 ns/op [Average]
  (min, avg, max) = (50.106, 51.111, 51.500), stdev = 0.509
  CI (99.9%): [50.669, 51.553] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 6.11% complete, ETA 00:36:24
# Fork: 1 of 2
# Warmup Iteration   1: 65.004 ns/op
# Warmup Iteration   2: 81.435 ns/op
# Warmup Iteration   3: 45.808 ns/op
Iteration   1: 44.378 ns/op
Iteration   2: 45.898 ns/op
Iteration   3: 44.380 ns/op
Iteration   4: 46.037 ns/op
Iteration   5: 44.453 ns/op
Iteration   6: 45.794 ns/op
Iteration   7: 44.399 ns/op
Iteration   8: 44.345 ns/op
Iteration   9: 44.396 ns/op
Iteration  10: 45.759 ns/op

# Run progress: 6.18% complete, ETA 00:36:22
# Fork: 2 of 2
# Warmup Iteration   1: 65.083 ns/op
# Warmup Iteration   2: 71.482 ns/op
# Warmup Iteration   3: 45.841 ns/op
Iteration   1: 44.447 ns/op
Iteration   2: 45.927 ns/op
Iteration   3: 44.399 ns/op
Iteration   4: 46.038 ns/op
Iteration   5: 44.439 ns/op
Iteration   6: 45.790 ns/op
Iteration   7: 44.350 ns/op
Iteration   8: 44.380 ns/op
Iteration   9: 44.377 ns/op
Iteration  10: 45.782 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.988 ±(99.9%) 0.650 ns/op [Average]
  (min, avg, max) = (44.345, 44.988, 46.038), stdev = 0.749
  CI (99.9%): [44.338, 45.639] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 6.25% complete, ETA 00:36:21
# Fork: 1 of 2
# Warmup Iteration   1: 155.779 ns/op
# Warmup Iteration   2: 85.349 ns/op
# Warmup Iteration   3: 50.390 ns/op
Iteration   1: 48.978 ns/op
Iteration   2: 50.382 ns/op
Iteration   3: 49.004 ns/op
Iteration   4: 53.837 ns/op
Iteration   5: 48.984 ns/op
Iteration   6: 50.359 ns/op
Iteration   7: 49.018 ns/op
Iteration   8: 49.007 ns/op
Iteration   9: 49.006 ns/op
Iteration  10: 50.349 ns/op

# Run progress: 6.32% complete, ETA 00:36:20
# Fork: 2 of 2
# Warmup Iteration   1: 172.906 ns/op
# Warmup Iteration   2: 68.834 ns/op
# Warmup Iteration   3: 50.395 ns/op
Iteration   1: 48.962 ns/op
Iteration   2: 50.375 ns/op
Iteration   3: 49.012 ns/op
Iteration   4: 53.812 ns/op
Iteration   5: 49.027 ns/op
Iteration   6: 50.347 ns/op
Iteration   7: 49.016 ns/op
Iteration   8: 49.042 ns/op
Iteration   9: 49.038 ns/op
Iteration  10: 50.358 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.896 ±(99.9%) 1.285 ns/op [Average]
  (min, avg, max) = (48.962, 49.896, 53.837), stdev = 1.480
  CI (99.9%): [48.610, 51.181] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 6.39% complete, ETA 00:36:18
# Fork: 1 of 2
# Warmup Iteration   1: 66.442 ns/op
# Warmup Iteration   2: 78.096 ns/op
# Warmup Iteration   3: 49.143 ns/op
Iteration   1: 47.815 ns/op
Iteration   2: 49.160 ns/op
Iteration   3: 47.925 ns/op
Iteration   4: 49.152 ns/op
Iteration   5: 47.840 ns/op
Iteration   6: 49.063 ns/op
Iteration   7: 47.938 ns/op
Iteration   8: 47.904 ns/op
Iteration   9: 47.911 ns/op
Iteration  10: 49.118 ns/op

# Run progress: 6.46% complete, ETA 00:36:16
# Fork: 2 of 2
# Warmup Iteration   1: 67.050 ns/op
# Warmup Iteration   2: 71.100 ns/op
# Warmup Iteration   3: 49.144 ns/op
Iteration   1: 47.798 ns/op
Iteration   2: 49.138 ns/op
Iteration   3: 47.915 ns/op
Iteration   4: 49.125 ns/op
Iteration   5: 47.861 ns/op
Iteration   6: 49.123 ns/op
Iteration   7: 47.889 ns/op
Iteration   8: 47.905 ns/op
Iteration   9: 47.853 ns/op
Iteration  10: 49.149 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.379 ±(99.9%) 0.546 ns/op [Average]
  (min, avg, max) = (47.798, 48.379, 49.160), stdev = 0.629
  CI (99.9%): [47.833, 48.925] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 6.53% complete, ETA 00:36:14
# Fork: 1 of 2
# Warmup Iteration   1: 171.168 ns/op
# Warmup Iteration   2: 171.245 ns/op
# Warmup Iteration   3: 116.135 ns/op
Iteration   1: 117.578 ns/op
Iteration   2: 116.427 ns/op
Iteration   3: 118.613 ns/op
Iteration   4: 134.305 ns/op
Iteration   5: 135.425 ns/op
Iteration   6: 135.289 ns/op
Iteration   7: 134.994 ns/op
Iteration   8: 135.187 ns/op
Iteration   9: 134.680 ns/op
Iteration  10: 133.241 ns/op

# Run progress: 6.60% complete, ETA 00:36:12
# Fork: 2 of 2
# Warmup Iteration   1: 156.027 ns/op
# Warmup Iteration   2: 167.224 ns/op
# Warmup Iteration   3: 115.427 ns/op
Iteration   1: 117.522 ns/op
Iteration   2: 116.088 ns/op
Iteration   3: 118.594 ns/op
Iteration   4: 134.130 ns/op
Iteration   5: 135.358 ns/op
Iteration   6: 133.956 ns/op
Iteration   7: 134.909 ns/op
Iteration   8: 135.128 ns/op
Iteration   9: 134.646 ns/op
Iteration  10: 134.143 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  129.511 ±(99.9%) 7.053 ns/op [Average]
  (min, avg, max) = (116.088, 129.511, 135.425), stdev = 8.122
  CI (99.9%): [122.457, 136.564] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 6.67% complete, ETA 00:36:10
# Fork: 1 of 2
# Warmup Iteration   1: 19.275 ns/op
# Warmup Iteration   2: 23.096 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.281 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.402 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.030 ns/op
Iteration  10: 14.970 ns/op

# Run progress: 6.74% complete, ETA 00:36:08
# Fork: 2 of 2
# Warmup Iteration   1: 19.414 ns/op
# Warmup Iteration   2: 27.964 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.251 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.008 ns/op
Iteration  10: 14.974 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.970, 16.292, 17.113), stdev = 0.952
  CI (99.9%): [15.466, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 6.81% complete, ETA 00:36:07
# Fork: 1 of 2
# Warmup Iteration   1: 79.287 ns/op
# Warmup Iteration   2: 76.596 ns/op
# Warmup Iteration   3: 54.529 ns/op
Iteration   1: 55.650 ns/op
Iteration   2: 54.443 ns/op
Iteration   3: 55.583 ns/op
Iteration   4: 54.898 ns/op
Iteration   5: 55.751 ns/op
Iteration   6: 54.402 ns/op
Iteration   7: 55.602 ns/op
Iteration   8: 55.623 ns/op
Iteration   9: 55.644 ns/op
Iteration  10: 54.465 ns/op

# Run progress: 6.88% complete, ETA 00:36:05
# Fork: 2 of 2
# Warmup Iteration   1: 80.131 ns/op
# Warmup Iteration   2: 84.723 ns/op
# Warmup Iteration   3: 54.424 ns/op
Iteration   1: 55.750 ns/op
Iteration   2: 54.482 ns/op
Iteration   3: 55.627 ns/op
Iteration   4: 54.754 ns/op
Iteration   5: 55.883 ns/op
Iteration   6: 54.284 ns/op
Iteration   7: 55.773 ns/op
Iteration   8: 55.654 ns/op
Iteration   9: 55.730 ns/op
Iteration  10: 54.342 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  55.217 ±(99.9%) 0.530 ns/op [Average]
  (min, avg, max) = (54.284, 55.217, 55.883), stdev = 0.611
  CI (99.9%): [54.687, 55.747] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 6.94% complete, ETA 00:36:03
# Fork: 1 of 2
# Warmup Iteration   1: 154.640 ns/op
# Warmup Iteration   2: 151.534 ns/op
# Warmup Iteration   3: 110.895 ns/op
Iteration   1: 109.676 ns/op
Iteration   2: 111.839 ns/op
Iteration   3: 109.642 ns/op
Iteration   4: 111.034 ns/op
Iteration   5: 109.756 ns/op
Iteration   6: 110.901 ns/op
Iteration   7: 109.658 ns/op
Iteration   8: 109.628 ns/op
Iteration   9: 109.647 ns/op
Iteration  10: 110.858 ns/op

# Run progress: 7.01% complete, ETA 00:36:01
# Fork: 2 of 2
# Warmup Iteration   1: 156.527 ns/op
# Warmup Iteration   2: 151.390 ns/op
# Warmup Iteration   3: 110.912 ns/op
Iteration   1: 109.735 ns/op
Iteration   2: 111.879 ns/op
Iteration   3: 109.654 ns/op
Iteration   4: 111.038 ns/op
Iteration   5: 109.689 ns/op
Iteration   6: 110.922 ns/op
Iteration   7: 109.632 ns/op
Iteration   8: 109.637 ns/op
Iteration   9: 109.744 ns/op
Iteration  10: 110.882 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  110.273 ±(99.9%) 0.691 ns/op [Average]
  (min, avg, max) = (109.628, 110.273, 111.879), stdev = 0.796
  CI (99.9%): [109.581, 110.964] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 7.08% complete, ETA 00:36:00
# Fork: 1 of 2
# Warmup Iteration   1: 417.026 ns/op
# Warmup Iteration   2: 106.144 ns/op
# Warmup Iteration   3: 68.195 ns/op
Iteration   1: 67.153 ns/op
Iteration   2: 68.404 ns/op
Iteration   3: 67.130 ns/op
Iteration   4: 68.707 ns/op
Iteration   5: 67.181 ns/op
Iteration   6: 68.143 ns/op
Iteration   7: 67.131 ns/op
Iteration   8: 67.106 ns/op
Iteration   9: 67.114 ns/op
Iteration  10: 68.206 ns/op

# Run progress: 7.15% complete, ETA 00:35:57
# Fork: 2 of 2
# Warmup Iteration   1: 337.371 ns/op
# Warmup Iteration   2: 92.260 ns/op
# Warmup Iteration   3: 68.331 ns/op
Iteration   1: 67.334 ns/op
Iteration   2: 68.535 ns/op
Iteration   3: 67.319 ns/op
Iteration   4: 68.674 ns/op
Iteration   5: 67.247 ns/op
Iteration   6: 68.249 ns/op
Iteration   7: 67.344 ns/op
Iteration   8: 67.326 ns/op
Iteration   9: 67.308 ns/op
Iteration  10: 68.305 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  67.696 ±(99.9%) 0.531 ns/op [Average]
  (min, avg, max) = (67.106, 67.696, 68.707), stdev = 0.611
  CI (99.9%): [67.165, 68.226] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 7.22% complete, ETA 00:35:56
# Fork: 1 of 2
# Warmup Iteration   1: 129.551 ns/op
# Warmup Iteration   2: 110.131 ns/op
# Warmup Iteration   3: 80.261 ns/op
Iteration   1: 79.422 ns/op
Iteration   2: 80.305 ns/op
Iteration   3: 78.961 ns/op
Iteration   4: 79.941 ns/op
Iteration   5: 79.031 ns/op
Iteration   6: 79.897 ns/op
Iteration   7: 78.384 ns/op
Iteration   8: 78.468 ns/op
Iteration   9: 79.611 ns/op
Iteration  10: 80.029 ns/op

# Run progress: 7.29% complete, ETA 00:35:54
# Fork: 2 of 2
# Warmup Iteration   1: 113.947 ns/op
# Warmup Iteration   2: 115.812 ns/op
# Warmup Iteration   3: 80.636 ns/op
Iteration   1: 78.708 ns/op
Iteration   2: 80.538 ns/op
Iteration   3: 79.510 ns/op
Iteration   4: 80.274 ns/op
Iteration   5: 78.903 ns/op
Iteration   6: 79.859 ns/op
Iteration   7: 79.339 ns/op
Iteration   8: 79.059 ns/op
Iteration   9: 79.272 ns/op
Iteration  10: 79.897 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  79.470 ±(99.9%) 0.539 ns/op [Average]
  (min, avg, max) = (78.384, 79.470, 80.538), stdev = 0.621
  CI (99.9%): [78.931, 80.009] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 7.36% complete, ETA 00:35:52
# Fork: 1 of 2
# Warmup Iteration   1: 181.247 ns/op
# Warmup Iteration   2: 171.214 ns/op
# Warmup Iteration   3: 122.595 ns/op
Iteration   1: 124.242 ns/op
Iteration   2: 123.034 ns/op
Iteration   3: 123.990 ns/op
Iteration   4: 139.450 ns/op
Iteration   5: 138.653 ns/op
Iteration   6: 137.426 ns/op
Iteration   7: 138.476 ns/op
Iteration   8: 138.501 ns/op
Iteration   9: 138.464 ns/op
Iteration  10: 137.339 ns/op

# Run progress: 7.43% complete, ETA 00:35:50
# Fork: 2 of 2
# Warmup Iteration   1: 202.121 ns/op
# Warmup Iteration   2: 173.972 ns/op
# Warmup Iteration   3: 122.329 ns/op
Iteration   1: 124.011 ns/op
Iteration   2: 122.739 ns/op
Iteration   3: 123.949 ns/op
Iteration   4: 138.962 ns/op
Iteration   5: 138.593 ns/op
Iteration   6: 137.281 ns/op
Iteration   7: 138.413 ns/op
Iteration   8: 138.342 ns/op
Iteration   9: 138.331 ns/op
Iteration  10: 137.232 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  133.871 ±(99.9%) 5.981 ns/op [Average]
  (min, avg, max) = (122.739, 133.871, 139.450), stdev = 6.888
  CI (99.9%): [127.890, 139.852] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 7.50% complete, ETA 00:35:49
# Fork: 1 of 2
# Warmup Iteration   1: 19.581 ns/op
# Warmup Iteration   2: 23.226 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.398 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.032 ns/op
Iteration  10: 14.975 ns/op

# Run progress: 7.57% complete, ETA 00:35:47
# Fork: 2 of 2
# Warmup Iteration   1: 19.720 ns/op
# Warmup Iteration   2: 22.873 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.067 ns/op
Iteration   2: 15.275 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.005 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.956 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.956, 16.291, 17.109), stdev = 0.951
  CI (99.9%): [15.465, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 7.64% complete, ETA 00:35:45
# Fork: 1 of 2
# Warmup Iteration   1: 577.592 ns/op
# Warmup Iteration   2: 261.941 ns/op
# Warmup Iteration   3: 205.663 ns/op
Iteration   1: 205.741 ns/op
Iteration   2: 204.929 ns/op
Iteration   3: 206.301 ns/op
Iteration   4: 206.437 ns/op
Iteration   5: 206.168 ns/op
Iteration   6: 204.867 ns/op
Iteration   7: 206.284 ns/op
Iteration   8: 205.988 ns/op
Iteration   9: 205.890 ns/op
Iteration  10: 204.889 ns/op

# Run progress: 7.71% complete, ETA 00:35:43
# Fork: 2 of 2
# Warmup Iteration   1: 510.704 ns/op
# Warmup Iteration   2: 276.224 ns/op
# Warmup Iteration   3: 204.812 ns/op
Iteration   1: 211.568 ns/op
Iteration   2: 204.945 ns/op
Iteration   3: 211.563 ns/op
Iteration   4: 206.846 ns/op
Iteration   5: 211.589 ns/op
Iteration   6: 204.917 ns/op
Iteration   7: 211.492 ns/op
Iteration   8: 211.293 ns/op
Iteration   9: 211.710 ns/op
Iteration  10: 204.908 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  207.416 ±(99.9%) 2.457 ns/op [Average]
  (min, avg, max) = (204.867, 207.416, 211.710), stdev = 2.830
  CI (99.9%): [204.959, 209.874] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 7.78% complete, ETA 00:35:42
# Fork: 1 of 2
# Warmup Iteration   1: 856.201 ns/op
# Warmup Iteration   2: 779.982 ns/op
# Warmup Iteration   3: 605.281 ns/op
Iteration   1: 604.319 ns/op
Iteration   2: 607.318 ns/op
Iteration   3: 604.443 ns/op
Iteration   4: 606.096 ns/op
Iteration   5: 604.318 ns/op
Iteration   6: 605.563 ns/op
Iteration   7: 604.080 ns/op
Iteration   8: 604.379 ns/op
Iteration   9: 604.360 ns/op
Iteration  10: 605.632 ns/op

# Run progress: 7.85% complete, ETA 00:35:40
# Fork: 2 of 2
# Warmup Iteration   1: 850.351 ns/op
# Warmup Iteration   2: 869.943 ns/op
# Warmup Iteration   3: 610.609 ns/op
Iteration   1: 604.327 ns/op
Iteration   2: 607.408 ns/op
Iteration   3: 604.456 ns/op
Iteration   4: 605.969 ns/op
Iteration   5: 604.158 ns/op
Iteration   6: 605.307 ns/op
Iteration   7: 604.595 ns/op
Iteration   8: 604.516 ns/op
Iteration   9: 604.966 ns/op
Iteration  10: 605.975 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  605.109 ±(99.9%) 0.881 ns/op [Average]
  (min, avg, max) = (604.080, 605.109, 607.408), stdev = 1.015
  CI (99.9%): [604.228, 605.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 7.92% complete, ETA 00:35:38
# Fork: 1 of 2
# Warmup Iteration   1: 577.579 ns/op
# Warmup Iteration   2: 258.627 ns/op
# Warmup Iteration   3: 161.255 ns/op
Iteration   1: 160.768 ns/op
Iteration   2: 161.461 ns/op
Iteration   3: 160.613 ns/op
Iteration   4: 162.090 ns/op
Iteration   5: 160.551 ns/op
Iteration   6: 161.127 ns/op
Iteration   7: 160.552 ns/op
Iteration   8: 160.548 ns/op
Iteration   9: 160.571 ns/op
Iteration  10: 161.210 ns/op

# Run progress: 7.99% complete, ETA 00:35:36
# Fork: 2 of 2
# Warmup Iteration   1: 553.655 ns/op
# Warmup Iteration   2: 207.365 ns/op
# Warmup Iteration   3: 160.105 ns/op
Iteration   1: 159.474 ns/op
Iteration   2: 160.239 ns/op
Iteration   3: 159.327 ns/op
Iteration   4: 161.311 ns/op
Iteration   5: 159.430 ns/op
Iteration   6: 159.925 ns/op
Iteration   7: 159.323 ns/op
Iteration   8: 159.362 ns/op
Iteration   9: 159.345 ns/op
Iteration  10: 159.923 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  160.358 ±(99.9%) 0.719 ns/op [Average]
  (min, avg, max) = (159.323, 160.358, 162.090), stdev = 0.828
  CI (99.9%): [159.639, 161.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 8.06% complete, ETA 00:35:34
# Fork: 1 of 2
# Warmup Iteration   1: 611.943 ns/op
# Warmup Iteration   2: 548.598 ns/op
# Warmup Iteration   3: 436.457 ns/op
Iteration   1: 434.806 ns/op
Iteration   2: 437.047 ns/op
Iteration   3: 434.896 ns/op
Iteration   4: 436.400 ns/op
Iteration   5: 434.467 ns/op
Iteration   6: 436.959 ns/op
Iteration   7: 434.364 ns/op
Iteration   8: 434.378 ns/op
Iteration   9: 434.438 ns/op
Iteration  10: 436.788 ns/op

# Run progress: 8.13% complete, ETA 00:35:33
# Fork: 2 of 2
# Warmup Iteration   1: 615.885 ns/op
# Warmup Iteration   2: 632.720 ns/op
# Warmup Iteration   3: 436.330 ns/op
Iteration   1: 434.830 ns/op
Iteration   2: 437.255 ns/op
Iteration   3: 434.894 ns/op
Iteration   4: 436.604 ns/op
Iteration   5: 434.324 ns/op
Iteration   6: 436.954 ns/op
Iteration   7: 434.450 ns/op
Iteration   8: 434.373 ns/op
Iteration   9: 434.395 ns/op
Iteration  10: 437.132 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  435.488 ±(99.9%) 1.044 ns/op [Average]
  (min, avg, max) = (434.324, 435.488, 437.255), stdev = 1.202
  CI (99.9%): [434.444, 436.531] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 8.19% complete, ETA 00:35:31
# Fork: 1 of 2
# Warmup Iteration   1: 252.882 ns/op
# Warmup Iteration   2: 233.157 ns/op
# Warmup Iteration   3: 161.309 ns/op
Iteration   1: 162.389 ns/op
Iteration   2: 165.763 ns/op
Iteration   3: 162.770 ns/op
Iteration   4: 183.710 ns/op
Iteration   5: 177.588 ns/op
Iteration   6: 175.273 ns/op
Iteration   7: 176.313 ns/op
Iteration   8: 176.443 ns/op
Iteration   9: 176.275 ns/op
Iteration  10: 175.691 ns/op

# Run progress: 8.26% complete, ETA 00:35:29
# Fork: 2 of 2
# Warmup Iteration   1: 239.817 ns/op
# Warmup Iteration   2: 219.490 ns/op
# Warmup Iteration   3: 161.102 ns/op
Iteration   1: 162.691 ns/op
Iteration   2: 166.338 ns/op
Iteration   3: 162.716 ns/op
Iteration   4: 182.931 ns/op
Iteration   5: 177.073 ns/op
Iteration   6: 175.054 ns/op
Iteration   7: 176.378 ns/op
Iteration   8: 176.172 ns/op
Iteration   9: 176.474 ns/op
Iteration  10: 175.153 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  173.160 ±(99.9%) 5.859 ns/op [Average]
  (min, avg, max) = (162.389, 173.160, 183.710), stdev = 6.747
  CI (99.9%): [167.301, 179.018] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 8.33% complete, ETA 00:35:27
# Fork: 1 of 2
# Warmup Iteration   1: 19.607 ns/op
# Warmup Iteration   2: 20.966 ns/op
# Warmup Iteration   3: 15.033 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.265 ns/op
Iteration   3: 17.011 ns/op
Iteration   4: 15.259 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.384 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 14.964 ns/op

# Run progress: 8.40% complete, ETA 00:35:25
# Fork: 2 of 2
# Warmup Iteration   1: 19.471 ns/op
# Warmup Iteration   2: 22.445 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.014 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.383 ns/op
Iteration   7: 17.014 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.300 ±(99.9%) 0.814 ns/op [Average]
  (min, avg, max) = (14.961, 16.300, 17.111), stdev = 0.938
  CI (99.9%): [15.486, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 8.47% complete, ETA 00:35:24
# Fork: 1 of 2
# Warmup Iteration   1: 794.360 ns/op
# Warmup Iteration   2: 358.087 ns/op
# Warmup Iteration   3: 280.402 ns/op
Iteration   1: 281.410 ns/op
Iteration   2: 280.324 ns/op
Iteration   3: 281.379 ns/op
Iteration   4: 280.515 ns/op
Iteration   5: 281.184 ns/op
Iteration   6: 280.335 ns/op
Iteration   7: 281.131 ns/op
Iteration   8: 281.291 ns/op
Iteration   9: 281.309 ns/op
Iteration  10: 280.509 ns/op

# Run progress: 8.54% complete, ETA 00:35:22
# Fork: 2 of 2
# Warmup Iteration   1: 678.698 ns/op
# Warmup Iteration   2: 374.295 ns/op
# Warmup Iteration   3: 279.897 ns/op
Iteration   1: 281.241 ns/op
Iteration   2: 279.918 ns/op
Iteration   3: 281.033 ns/op
Iteration   4: 280.107 ns/op
Iteration   5: 281.161 ns/op
Iteration   6: 279.739 ns/op
Iteration   7: 281.084 ns/op
Iteration   8: 281.176 ns/op
Iteration   9: 281.162 ns/op
Iteration  10: 279.890 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  280.795 ±(99.9%) 0.489 ns/op [Average]
  (min, avg, max) = (279.739, 280.795, 281.410), stdev = 0.563
  CI (99.9%): [280.306, 281.284] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 8.61% complete, ETA 00:35:20
# Fork: 1 of 2
# Warmup Iteration   1: 664.688 ns/op
# Warmup Iteration   2: 526.463 ns/op
# Warmup Iteration   3: 412.159 ns/op
Iteration   1: 411.684 ns/op
Iteration   2: 412.273 ns/op
Iteration   3: 411.875 ns/op
Iteration   4: 412.686 ns/op
Iteration   5: 411.440 ns/op
Iteration   6: 412.356 ns/op
Iteration   7: 411.751 ns/op
Iteration   8: 411.508 ns/op
Iteration   9: 411.503 ns/op
Iteration  10: 412.083 ns/op

# Run progress: 8.68% complete, ETA 00:35:19
# Fork: 2 of 2
# Warmup Iteration   1: 581.169 ns/op
# Warmup Iteration   2: 552.783 ns/op
# Warmup Iteration   3: 411.487 ns/op
Iteration   1: 410.329 ns/op
Iteration   2: 411.608 ns/op
Iteration   3: 410.343 ns/op
Iteration   4: 412.063 ns/op
Iteration   5: 410.318 ns/op
Iteration   6: 411.652 ns/op
Iteration   7: 410.370 ns/op
Iteration   8: 410.432 ns/op
Iteration   9: 410.439 ns/op
Iteration  10: 411.594 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  411.415 ±(99.9%) 0.666 ns/op [Average]
  (min, avg, max) = (410.318, 411.415, 412.686), stdev = 0.767
  CI (99.9%): [410.749, 412.082] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 8.75% complete, ETA 00:35:17
# Fork: 1 of 2
# Warmup Iteration   1: 7390.675 ns/op
# Warmup Iteration   2: 570.202 ns/op
# Warmup Iteration   3: 362.842 ns/op
Iteration   1: 361.780 ns/op
Iteration   2: 362.983 ns/op
Iteration   3: 361.536 ns/op
Iteration   4: 366.486 ns/op
Iteration   5: 361.752 ns/op
Iteration   6: 362.448 ns/op
Iteration   7: 361.658 ns/op
Iteration   8: 361.676 ns/op
Iteration   9: 361.723 ns/op
Iteration  10: 362.801 ns/op

# Run progress: 8.82% complete, ETA 00:35:15
# Fork: 2 of 2
# Warmup Iteration   1: 9383.706 ns/op
# Warmup Iteration   2: 440.546 ns/op
# Warmup Iteration   3: 340.560 ns/op
Iteration   1: 338.283 ns/op
Iteration   2: 339.978 ns/op
Iteration   3: 338.851 ns/op
Iteration   4: 343.413 ns/op
Iteration   5: 338.857 ns/op
Iteration   6: 340.110 ns/op
Iteration   7: 338.836 ns/op
Iteration   8: 338.815 ns/op
Iteration   9: 338.893 ns/op
Iteration  10: 340.131 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  351.050 ±(99.9%) 10.264 ns/op [Average]
  (min, avg, max) = (338.283, 351.050, 366.486), stdev = 11.820
  CI (99.9%): [340.786, 361.315] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 8.89% complete, ETA 00:35:13
# Fork: 1 of 2
# Warmup Iteration   1: 615.715 ns/op
# Warmup Iteration   2: 382.743 ns/op
# Warmup Iteration   3: 302.450 ns/op
Iteration   1: 301.075 ns/op
Iteration   2: 298.662 ns/op
Iteration   3: 297.411 ns/op
Iteration   4: 299.855 ns/op
Iteration   5: 297.326 ns/op
Iteration   6: 298.583 ns/op
Iteration   7: 297.552 ns/op
Iteration   8: 297.361 ns/op
Iteration   9: 297.665 ns/op
Iteration  10: 298.865 ns/op

# Run progress: 8.96% complete, ETA 00:35:12
# Fork: 2 of 2
# Warmup Iteration   1: 500.793 ns/op
# Warmup Iteration   2: 381.258 ns/op
# Warmup Iteration   3: 299.373 ns/op
Iteration   1: 300.766 ns/op
Iteration   2: 300.215 ns/op
Iteration   3: 298.770 ns/op
Iteration   4: 299.698 ns/op
Iteration   5: 298.766 ns/op
Iteration   6: 299.367 ns/op
Iteration   7: 299.349 ns/op
Iteration   8: 299.276 ns/op
Iteration   9: 299.601 ns/op
Iteration  10: 299.345 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  298.975 ±(99.9%) 0.960 ns/op [Average]
  (min, avg, max) = (297.326, 298.975, 301.075), stdev = 1.106
  CI (99.9%): [298.015, 299.935] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 9.03% complete, ETA 00:35:10
# Fork: 1 of 2
# Warmup Iteration   1: 962.592 ns/op
# Warmup Iteration   2: 354.517 ns/op
# Warmup Iteration   3: 266.312 ns/op
Iteration   1: 270.369 ns/op
Iteration   2: 266.371 ns/op
Iteration   3: 269.284 ns/op
Iteration   4: 287.694 ns/op
Iteration   5: 285.594 ns/op
Iteration   6: 284.266 ns/op
Iteration   7: 285.519 ns/op
Iteration   8: 284.636 ns/op
Iteration   9: 285.394 ns/op
Iteration  10: 283.433 ns/op

# Run progress: 9.10% complete, ETA 00:35:08
# Fork: 2 of 2
# Warmup Iteration   1: 526.317 ns/op
# Warmup Iteration   2: 369.938 ns/op
# Warmup Iteration   3: 266.281 ns/op
Iteration   1: 270.389 ns/op
Iteration   2: 266.240 ns/op
Iteration   3: 269.410 ns/op
Iteration   4: 287.635 ns/op
Iteration   5: 285.817 ns/op
Iteration   6: 284.330 ns/op
Iteration   7: 285.149 ns/op
Iteration   8: 284.729 ns/op
Iteration   9: 285.382 ns/op
Iteration  10: 283.351 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  280.250 ±(99.9%) 6.865 ns/op [Average]
  (min, avg, max) = (266.240, 280.250, 287.694), stdev = 7.905
  CI (99.9%): [273.385, 287.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 9.17% complete, ETA 00:35:07
# Fork: 1 of 2
# Warmup Iteration   1: 19.826 ns/op
# Warmup Iteration   2: 22.468 ns/op
# Warmup Iteration   3: 15.022 ns/op
Iteration   1: 17.068 ns/op
Iteration   2: 15.258 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.397 ns/op
Iteration   7: 17.015 ns/op
Iteration   8: 17.012 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.973 ns/op

# Run progress: 9.24% complete, ETA 00:35:05
# Fork: 2 of 2
# Warmup Iteration   1: 19.407 ns/op
# Warmup Iteration   2: 21.069 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.075 ns/op
Iteration   2: 15.274 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.012 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.380 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.023 ns/op
Iteration   9: 17.033 ns/op
Iteration  10: 14.980 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.973, 16.290, 17.108), stdev = 0.952
  CI (99.9%): [15.463, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 9.31% complete, ETA 00:35:03
# Fork: 1 of 2
# Warmup Iteration   1: 72.391 ns/op
# Warmup Iteration   2: 75.661 ns/op
# Warmup Iteration   3: 50.233 ns/op
Iteration   1: 51.455 ns/op
Iteration   2: 51.210 ns/op
Iteration   3: 51.414 ns/op
Iteration   4: 50.766 ns/op
Iteration   5: 51.470 ns/op
Iteration   6: 50.228 ns/op
Iteration   7: 51.399 ns/op
Iteration   8: 51.377 ns/op
Iteration   9: 51.417 ns/op
Iteration  10: 50.138 ns/op

# Run progress: 9.38% complete, ETA 00:35:02
# Fork: 2 of 2
# Warmup Iteration   1: 72.893 ns/op
# Warmup Iteration   2: 70.519 ns/op
# Warmup Iteration   3: 50.323 ns/op
Iteration   1: 51.432 ns/op
Iteration   2: 51.193 ns/op
Iteration   3: 51.440 ns/op
Iteration   4: 50.773 ns/op
Iteration   5: 51.507 ns/op
Iteration   6: 50.215 ns/op
Iteration   7: 51.423 ns/op
Iteration   8: 51.443 ns/op
Iteration   9: 51.447 ns/op
Iteration  10: 50.143 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.095 ±(99.9%) 0.445 ns/op [Average]
  (min, avg, max) = (50.138, 51.095, 51.507), stdev = 0.512
  CI (99.9%): [50.650, 51.539] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 9.44% complete, ETA 00:35:00
# Fork: 1 of 2
# Warmup Iteration   1: 64.595 ns/op
# Warmup Iteration   2: 66.181 ns/op
# Warmup Iteration   3: 45.822 ns/op
Iteration   1: 44.498 ns/op
Iteration   2: 45.893 ns/op
Iteration   3: 44.399 ns/op
Iteration   4: 46.032 ns/op
Iteration   5: 44.440 ns/op
Iteration   6: 45.792 ns/op
Iteration   7: 44.392 ns/op
Iteration   8: 44.382 ns/op
Iteration   9: 44.395 ns/op
Iteration  10: 45.748 ns/op

# Run progress: 9.51% complete, ETA 00:34:58
# Fork: 2 of 2
# Warmup Iteration   1: 63.887 ns/op
# Warmup Iteration   2: 71.773 ns/op
# Warmup Iteration   3: 45.889 ns/op
Iteration   1: 44.415 ns/op
Iteration   2: 45.881 ns/op
Iteration   3: 44.352 ns/op
Iteration   4: 46.013 ns/op
Iteration   5: 44.457 ns/op
Iteration   6: 45.810 ns/op
Iteration   7: 44.417 ns/op
Iteration   8: 44.406 ns/op
Iteration   9: 44.391 ns/op
Iteration  10: 45.787 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.995 ±(99.9%) 0.639 ns/op [Average]
  (min, avg, max) = (44.352, 44.995, 46.032), stdev = 0.736
  CI (99.9%): [44.356, 45.634] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 9.58% complete, ETA 00:34:56
# Fork: 1 of 2
# Warmup Iteration   1: 148.070 ns/op
# Warmup Iteration   2: 78.107 ns/op
# Warmup Iteration   3: 50.386 ns/op
Iteration   1: 48.975 ns/op
Iteration   2: 50.370 ns/op
Iteration   3: 48.999 ns/op
Iteration   4: 53.828 ns/op
Iteration   5: 48.974 ns/op
Iteration   6: 50.356 ns/op
Iteration   7: 49.001 ns/op
Iteration   8: 48.995 ns/op
Iteration   9: 49.008 ns/op
Iteration  10: 50.359 ns/op

# Run progress: 9.65% complete, ETA 00:34:55
# Fork: 2 of 2
# Warmup Iteration   1: 153.907 ns/op
# Warmup Iteration   2: 69.417 ns/op
# Warmup Iteration   3: 50.388 ns/op
Iteration   1: 48.975 ns/op
Iteration   2: 50.373 ns/op
Iteration   3: 49.019 ns/op
Iteration   4: 53.820 ns/op
Iteration   5: 48.985 ns/op
Iteration   6: 50.356 ns/op
Iteration   7: 49.009 ns/op
Iteration   8: 49.006 ns/op
Iteration   9: 48.998 ns/op
Iteration  10: 50.362 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.888 ±(99.9%) 1.289 ns/op [Average]
  (min, avg, max) = (48.974, 49.888, 53.828), stdev = 1.485
  CI (99.9%): [48.599, 51.178] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 9.72% complete, ETA 00:34:53
# Fork: 1 of 2
# Warmup Iteration   1: 68.455 ns/op
# Warmup Iteration   2: 69.780 ns/op
# Warmup Iteration   3: 49.137 ns/op
Iteration   1: 47.797 ns/op
Iteration   2: 49.162 ns/op
Iteration   3: 47.892 ns/op
Iteration   4: 49.149 ns/op
Iteration   5: 47.800 ns/op
Iteration   6: 49.112 ns/op
Iteration   7: 47.914 ns/op
Iteration   8: 47.886 ns/op
Iteration   9: 47.895 ns/op
Iteration  10: 49.127 ns/op

# Run progress: 9.79% complete, ETA 00:34:51
# Fork: 2 of 2
# Warmup Iteration   1: 68.233 ns/op
# Warmup Iteration   2: 68.797 ns/op
# Warmup Iteration   3: 49.154 ns/op
Iteration   1: 47.820 ns/op
Iteration   2: 49.141 ns/op
Iteration   3: 47.925 ns/op
Iteration   4: 49.173 ns/op
Iteration   5: 47.826 ns/op
Iteration   6: 49.082 ns/op
Iteration   7: 48.149 ns/op
Iteration   8: 47.907 ns/op
Iteration   9: 47.930 ns/op
Iteration  10: 49.117 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.390 ±(99.9%) 0.544 ns/op [Average]
  (min, avg, max) = (47.797, 48.390, 49.173), stdev = 0.626
  CI (99.9%): [47.846, 48.934] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 9.86% complete, ETA 00:34:50
# Fork: 1 of 2
# Warmup Iteration   1: 160.029 ns/op
# Warmup Iteration   2: 163.428 ns/op
# Warmup Iteration   3: 115.388 ns/op
Iteration   1: 117.527 ns/op
Iteration   2: 115.915 ns/op
Iteration   3: 118.417 ns/op
Iteration   4: 134.180 ns/op
Iteration   5: 135.776 ns/op
Iteration   6: 133.998 ns/op
Iteration   7: 137.720 ns/op
Iteration   8: 136.759 ns/op
Iteration   9: 137.880 ns/op
Iteration  10: 133.723 ns/op

# Run progress: 9.93% complete, ETA 00:34:48
# Fork: 2 of 2
# Warmup Iteration   1: 157.654 ns/op
# Warmup Iteration   2: 165.722 ns/op
# Warmup Iteration   3: 115.390 ns/op
Iteration   1: 117.625 ns/op
Iteration   2: 115.875 ns/op
Iteration   3: 118.671 ns/op
Iteration   4: 134.095 ns/op
Iteration   5: 135.486 ns/op
Iteration   6: 134.102 ns/op
Iteration   7: 134.945 ns/op
Iteration   8: 135.207 ns/op
Iteration   9: 134.779 ns/op
Iteration  10: 133.380 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  129.803 ±(99.9%) 7.363 ns/op [Average]
  (min, avg, max) = (115.875, 129.803, 137.880), stdev = 8.479
  CI (99.9%): [122.440, 137.166] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 10.00% complete, ETA 00:34:46
# Fork: 1 of 2
# Warmup Iteration   1: 19.870 ns/op
# Warmup Iteration   2: 22.483 ns/op
# Warmup Iteration   3: 15.035 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.252 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.380 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.975 ns/op

# Run progress: 10.07% complete, ETA 00:34:45
# Fork: 2 of 2
# Warmup Iteration   1: 19.408 ns/op
# Warmup Iteration   2: 21.478 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.078 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.028 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.392 ns/op
Iteration   7: 16.997 ns/op
Iteration   8: 17.035 ns/op
Iteration   9: 17.013 ns/op
Iteration  10: 14.965 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.965, 16.290, 17.111), stdev = 0.953
  CI (99.9%): [15.463, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 10.14% complete, ETA 00:34:43
# Fork: 1 of 2
# Warmup Iteration   1: 71.937 ns/op
# Warmup Iteration   2: 74.204 ns/op
# Warmup Iteration   3: 50.288 ns/op
Iteration   1: 51.445 ns/op
Iteration   2: 51.206 ns/op
Iteration   3: 51.450 ns/op
Iteration   4: 50.730 ns/op
Iteration   5: 51.478 ns/op
Iteration   6: 50.232 ns/op
Iteration   7: 51.452 ns/op
Iteration   8: 51.446 ns/op
Iteration   9: 51.449 ns/op
Iteration  10: 50.117 ns/op

# Run progress: 10.21% complete, ETA 00:34:41
# Fork: 2 of 2
# Warmup Iteration   1: 73.499 ns/op
# Warmup Iteration   2: 77.348 ns/op
# Warmup Iteration   3: 50.336 ns/op
Iteration   1: 51.492 ns/op
Iteration   2: 51.264 ns/op
Iteration   3: 51.487 ns/op
Iteration   4: 50.791 ns/op
Iteration   5: 51.552 ns/op
Iteration   6: 50.217 ns/op
Iteration   7: 51.492 ns/op
Iteration   8: 51.477 ns/op
Iteration   9: 51.525 ns/op
Iteration  10: 50.131 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.122 ±(99.9%) 0.464 ns/op [Average]
  (min, avg, max) = (50.117, 51.122, 51.552), stdev = 0.535
  CI (99.9%): [50.657, 51.586] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 10.28% complete, ETA 00:34:40
# Fork: 1 of 2
# Warmup Iteration   1: 65.308 ns/op
# Warmup Iteration   2: 82.720 ns/op
# Warmup Iteration   3: 45.796 ns/op
Iteration   1: 44.393 ns/op
Iteration   2: 45.886 ns/op
Iteration   3: 44.392 ns/op
Iteration   4: 46.019 ns/op
Iteration   5: 44.458 ns/op
Iteration   6: 45.789 ns/op
Iteration   7: 44.409 ns/op
Iteration   8: 44.431 ns/op
Iteration   9: 44.378 ns/op
Iteration  10: 45.756 ns/op

# Run progress: 10.35% complete, ETA 00:34:38
# Fork: 2 of 2
# Warmup Iteration   1: 64.017 ns/op
# Warmup Iteration   2: 63.730 ns/op
# Warmup Iteration   3: 45.805 ns/op
Iteration   1: 44.470 ns/op
Iteration   2: 45.924 ns/op
Iteration   3: 44.425 ns/op
Iteration   4: 46.018 ns/op
Iteration   5: 44.440 ns/op
Iteration   6: 45.799 ns/op
Iteration   7: 44.371 ns/op
Iteration   8: 44.378 ns/op
Iteration   9: 44.383 ns/op
Iteration  10: 45.757 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.994 ±(99.9%) 0.639 ns/op [Average]
  (min, avg, max) = (44.371, 44.994, 46.019), stdev = 0.736
  CI (99.9%): [44.355, 45.633] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 10.42% complete, ETA 00:34:36
# Fork: 1 of 2
# Warmup Iteration   1: 155.828 ns/op
# Warmup Iteration   2: 69.762 ns/op
# Warmup Iteration   3: 50.393 ns/op
Iteration   1: 48.977 ns/op
Iteration   2: 50.367 ns/op
Iteration   3: 48.999 ns/op
Iteration   4: 53.826 ns/op
Iteration   5: 48.983 ns/op
Iteration   6: 50.359 ns/op
Iteration   7: 49.000 ns/op
Iteration   8: 49.005 ns/op
Iteration   9: 49.006 ns/op
Iteration  10: 50.376 ns/op

# Run progress: 10.49% complete, ETA 00:34:35
# Fork: 2 of 2
# Warmup Iteration   1: 158.024 ns/op
# Warmup Iteration   2: 69.764 ns/op
# Warmup Iteration   3: 50.402 ns/op
Iteration   1: 48.965 ns/op
Iteration   2: 50.345 ns/op
Iteration   3: 48.985 ns/op
Iteration   4: 53.824 ns/op
Iteration   5: 48.984 ns/op
Iteration   6: 50.330 ns/op
Iteration   7: 49.002 ns/op
Iteration   8: 49.000 ns/op
Iteration   9: 49.003 ns/op
Iteration  10: 50.379 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.886 ±(99.9%) 1.290 ns/op [Average]
  (min, avg, max) = (48.965, 49.886, 53.826), stdev = 1.486
  CI (99.9%): [48.595, 51.176] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 10.56% complete, ETA 00:34:33
# Fork: 1 of 2
# Warmup Iteration   1: 67.393 ns/op
# Warmup Iteration   2: 85.912 ns/op
# Warmup Iteration   3: 49.142 ns/op
Iteration   1: 47.806 ns/op
Iteration   2: 49.158 ns/op
Iteration   3: 47.916 ns/op
Iteration   4: 49.171 ns/op
Iteration   5: 47.795 ns/op
Iteration   6: 49.122 ns/op
Iteration   7: 47.896 ns/op
Iteration   8: 47.878 ns/op
Iteration   9: 47.869 ns/op
Iteration  10: 49.121 ns/op

# Run progress: 10.63% complete, ETA 00:34:31
# Fork: 2 of 2
# Warmup Iteration   1: 67.662 ns/op
# Warmup Iteration   2: 72.181 ns/op
# Warmup Iteration   3: 49.143 ns/op
Iteration   1: 47.792 ns/op
Iteration   2: 49.167 ns/op
Iteration   3: 47.916 ns/op
Iteration   4: 49.097 ns/op
Iteration   5: 47.785 ns/op
Iteration   6: 49.159 ns/op
Iteration   7: 47.864 ns/op
Iteration   8: 47.901 ns/op
Iteration   9: 47.878 ns/op
Iteration  10: 49.170 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.373 ±(99.9%) 0.563 ns/op [Average]
  (min, avg, max) = (47.785, 48.373, 49.171), stdev = 0.648
  CI (99.9%): [47.810, 48.936] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 10.69% complete, ETA 00:34:30
# Fork: 1 of 2
# Warmup Iteration   1: 165.672 ns/op
# Warmup Iteration   2: 172.310 ns/op
# Warmup Iteration   3: 115.457 ns/op
Iteration   1: 117.572 ns/op
Iteration   2: 115.908 ns/op
Iteration   3: 118.566 ns/op
Iteration   4: 134.165 ns/op
Iteration   5: 135.397 ns/op
Iteration   6: 133.891 ns/op
Iteration   7: 134.990 ns/op
Iteration   8: 134.339 ns/op
Iteration   9: 134.827 ns/op
Iteration  10: 133.959 ns/op

# Run progress: 10.76% complete, ETA 00:34:28
# Fork: 2 of 2
# Warmup Iteration   1: 161.059 ns/op
# Warmup Iteration   2: 166.958 ns/op
# Warmup Iteration   3: 115.385 ns/op
Iteration   1: 117.524 ns/op
Iteration   2: 115.857 ns/op
Iteration   3: 118.381 ns/op
Iteration   4: 134.152 ns/op
Iteration   5: 135.805 ns/op
Iteration   6: 134.200 ns/op
Iteration   7: 134.973 ns/op
Iteration   8: 135.365 ns/op
Iteration   9: 134.744 ns/op
Iteration  10: 132.941 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  129.378 ±(99.9%) 7.083 ns/op [Average]
  (min, avg, max) = (115.857, 129.378, 135.805), stdev = 8.157
  CI (99.9%): [122.295, 136.461] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 10.83% complete, ETA 00:34:26
# Fork: 1 of 2
# Warmup Iteration   1: 19.849 ns/op
# Warmup Iteration   2: 22.985 ns/op
# Warmup Iteration   3: 15.021 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.262 ns/op
Iteration   3: 17.011 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.372 ns/op
Iteration   7: 17.028 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.012 ns/op
Iteration  10: 14.978 ns/op

# Run progress: 10.90% complete, ETA 00:34:24
# Fork: 2 of 2
# Warmup Iteration   1: 19.500 ns/op
# Warmup Iteration   2: 20.960 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.083 ns/op
Iteration   2: 15.269 ns/op
Iteration   3: 17.021 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.100 ns/op
Iteration   6: 15.361 ns/op
Iteration   7: 17.014 ns/op
Iteration   8: 17.007 ns/op
Iteration   9: 17.028 ns/op
Iteration  10: 14.962 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.829 ns/op [Average]
  (min, avg, max) = (14.962, 16.288, 17.106), stdev = 0.954
  CI (99.9%): [15.459, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 10.97% complete, ETA 00:34:23
# Fork: 1 of 2
# Warmup Iteration   1: 82.638 ns/op
# Warmup Iteration   2: 82.772 ns/op
# Warmup Iteration   3: 55.885 ns/op
Iteration   1: 57.088 ns/op
Iteration   2: 55.971 ns/op
Iteration   3: 57.156 ns/op
Iteration   4: 56.817 ns/op
Iteration   5: 57.081 ns/op
Iteration   6: 55.898 ns/op
Iteration   7: 57.229 ns/op
Iteration   8: 57.189 ns/op
Iteration   9: 57.203 ns/op
Iteration  10: 55.749 ns/op

# Run progress: 11.04% complete, ETA 00:34:21
# Fork: 2 of 2
# Warmup Iteration   1: 92.899 ns/op
# Warmup Iteration   2: 83.600 ns/op
# Warmup Iteration   3: 55.911 ns/op
Iteration   1: 57.227 ns/op
Iteration   2: 56.042 ns/op
Iteration   3: 57.122 ns/op
Iteration   4: 56.844 ns/op
Iteration   5: 57.138 ns/op
Iteration   6: 55.926 ns/op
Iteration   7: 57.078 ns/op
Iteration   8: 57.183 ns/op
Iteration   9: 57.263 ns/op
Iteration  10: 55.768 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  56.749 ±(99.9%) 0.511 ns/op [Average]
  (min, avg, max) = (55.749, 56.749, 57.263), stdev = 0.589
  CI (99.9%): [56.237, 57.260] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 11.11% complete, ETA 00:34:19
# Fork: 1 of 2
# Warmup Iteration   1: 143.231 ns/op
# Warmup Iteration   2: 144.633 ns/op
# Warmup Iteration   3: 103.686 ns/op
Iteration   1: 101.901 ns/op
Iteration   2: 103.437 ns/op
Iteration   3: 101.812 ns/op
Iteration   4: 104.849 ns/op
Iteration   5: 101.579 ns/op
Iteration   6: 103.590 ns/op
Iteration   7: 101.833 ns/op
Iteration   8: 101.841 ns/op
Iteration   9: 101.817 ns/op
Iteration  10: 103.499 ns/op

# Run progress: 11.18% complete, ETA 00:34:18
# Fork: 2 of 2
# Warmup Iteration   1: 146.533 ns/op
# Warmup Iteration   2: 139.038 ns/op
# Warmup Iteration   3: 103.630 ns/op
Iteration   1: 101.922 ns/op
Iteration   2: 103.584 ns/op
Iteration   3: 101.746 ns/op
Iteration   4: 105.166 ns/op
Iteration   5: 101.599 ns/op
Iteration   6: 103.565 ns/op
Iteration   7: 101.733 ns/op
Iteration   8: 101.777 ns/op
Iteration   9: 101.783 ns/op
Iteration  10: 103.472 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  102.625 ±(99.9%) 0.996 ns/op [Average]
  (min, avg, max) = (101.579, 102.625, 105.166), stdev = 1.147
  CI (99.9%): [101.629, 103.621] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 11.25% complete, ETA 00:34:16
# Fork: 1 of 2
# Warmup Iteration   1: 352.324 ns/op
# Warmup Iteration   2: 109.480 ns/op
# Warmup Iteration   3: 80.142 ns/op
Iteration   1: 77.363 ns/op
Iteration   2: 80.740 ns/op
Iteration   3: 77.917 ns/op
Iteration   4: 79.258 ns/op
Iteration   5: 77.618 ns/op
Iteration   6: 75.050 ns/op
Iteration   7: 76.509 ns/op
Iteration   8: 78.614 ns/op
Iteration   9: 78.510 ns/op
Iteration  10: 80.618 ns/op

# Run progress: 11.32% complete, ETA 00:34:14
# Fork: 2 of 2
# Warmup Iteration   1: 728.567 ns/op
# Warmup Iteration   2: 107.587 ns/op
# Warmup Iteration   3: 82.443 ns/op
Iteration   1: 79.752 ns/op
Iteration   2: 81.179 ns/op
Iteration   3: 78.838 ns/op
Iteration   4: 82.474 ns/op
Iteration   5: 79.099 ns/op
Iteration   6: 79.062 ns/op
Iteration   7: 76.865 ns/op
Iteration   8: 78.215 ns/op
Iteration   9: 78.897 ns/op
Iteration  10: 80.966 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  78.877 ±(99.9%) 1.541 ns/op [Average]
  (min, avg, max) = (75.050, 78.877, 82.474), stdev = 1.775
  CI (99.9%): [77.336, 80.418] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 11.39% complete, ETA 00:34:13
# Fork: 1 of 2
# Warmup Iteration   1: 91.827 ns/op
# Warmup Iteration   2: 84.933 ns/op
# Warmup Iteration   3: 62.533 ns/op
Iteration   1: 60.997 ns/op
Iteration   2: 62.309 ns/op
Iteration   3: 61.073 ns/op
Iteration   4: 62.430 ns/op
Iteration   5: 60.993 ns/op
Iteration   6: 62.256 ns/op
Iteration   7: 61.029 ns/op
Iteration   8: 60.985 ns/op
Iteration   9: 60.991 ns/op
Iteration  10: 62.280 ns/op

# Run progress: 11.46% complete, ETA 00:34:11
# Fork: 2 of 2
# Warmup Iteration   1: 87.441 ns/op
# Warmup Iteration   2: 83.098 ns/op
# Warmup Iteration   3: 62.426 ns/op
Iteration   1: 61.002 ns/op
Iteration   2: 62.290 ns/op
Iteration   3: 61.030 ns/op
Iteration   4: 62.483 ns/op
Iteration   5: 60.968 ns/op
Iteration   6: 62.245 ns/op
Iteration   7: 61.003 ns/op
Iteration   8: 60.961 ns/op
Iteration   9: 60.990 ns/op
Iteration  10: 62.278 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  61.530 ±(99.9%) 0.578 ns/op [Average]
  (min, avg, max) = (60.961, 61.530, 62.483), stdev = 0.666
  CI (99.9%): [60.952, 62.108] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 11.53% complete, ETA 00:34:09
# Fork: 1 of 2
# Warmup Iteration   1: 202.590 ns/op
# Warmup Iteration   2: 168.393 ns/op
# Warmup Iteration   3: 119.350 ns/op
Iteration   1: 120.698 ns/op
Iteration   2: 119.402 ns/op
Iteration   3: 120.748 ns/op
Iteration   4: 137.517 ns/op
Iteration   5: 137.279 ns/op
Iteration   6: 136.213 ns/op
Iteration   7: 137.249 ns/op
Iteration   8: 137.255 ns/op
Iteration   9: 137.253 ns/op
Iteration  10: 136.186 ns/op

# Run progress: 11.60% complete, ETA 00:34:08
# Fork: 2 of 2
# Warmup Iteration   1: 199.450 ns/op
# Warmup Iteration   2: 161.160 ns/op
# Warmup Iteration   3: 119.414 ns/op
Iteration   1: 120.571 ns/op
Iteration   2: 119.395 ns/op
Iteration   3: 120.537 ns/op
Iteration   4: 137.417 ns/op
Iteration   5: 137.395 ns/op
Iteration   6: 136.170 ns/op
Iteration   7: 137.237 ns/op
Iteration   8: 137.256 ns/op
Iteration   9: 137.378 ns/op
Iteration  10: 136.145 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  131.965 ±(99.9%) 6.864 ns/op [Average]
  (min, avg, max) = (119.395, 131.965, 137.517), stdev = 7.905
  CI (99.9%): [125.101, 138.830] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 11.67% complete, ETA 00:34:06
# Fork: 1 of 2
# Warmup Iteration   1: 19.248 ns/op
# Warmup Iteration   2: 22.733 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.059 ns/op
Iteration   2: 15.258 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.962 ns/op

# Run progress: 11.74% complete, ETA 00:34:04
# Fork: 2 of 2
# Warmup Iteration   1: 19.643 ns/op
# Warmup Iteration   2: 20.927 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.263 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.031 ns/op
Iteration   8: 17.030 ns/op
Iteration   9: 17.024 ns/op
Iteration  10: 14.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.962, 16.291, 17.105), stdev = 0.954
  CI (99.9%): [15.463, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 11.81% complete, ETA 00:34:03
# Fork: 1 of 2
# Warmup Iteration   1: 404.137 ns/op
# Warmup Iteration   2: 262.912 ns/op
# Warmup Iteration   3: 179.198 ns/op
Iteration   1: 180.951 ns/op
Iteration   2: 178.800 ns/op
Iteration   3: 181.125 ns/op
Iteration   4: 180.565 ns/op
Iteration   5: 181.110 ns/op
Iteration   6: 178.802 ns/op
Iteration   7: 181.118 ns/op
Iteration   8: 181.315 ns/op
Iteration   9: 181.063 ns/op
Iteration  10: 179.648 ns/op

# Run progress: 11.88% complete, ETA 00:34:01
# Fork: 2 of 2
# Warmup Iteration   1: 478.346 ns/op
# Warmup Iteration   2: 262.883 ns/op
# Warmup Iteration   3: 184.918 ns/op
Iteration   1: 187.455 ns/op
Iteration   2: 185.100 ns/op
Iteration   3: 186.851 ns/op
Iteration   4: 186.360 ns/op
Iteration   5: 186.770 ns/op
Iteration   6: 184.960 ns/op
Iteration   7: 186.895 ns/op
Iteration   8: 186.952 ns/op
Iteration   9: 186.849 ns/op
Iteration  10: 184.924 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  183.381 ±(99.9%) 2.737 ns/op [Average]
  (min, avg, max) = (178.800, 183.381, 187.455), stdev = 3.151
  CI (99.9%): [180.644, 186.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 11.94% complete, ETA 00:33:59
# Fork: 1 of 2
# Warmup Iteration   1: 329.266 ns/op
# Warmup Iteration   2: 328.905 ns/op
# Warmup Iteration   3: 236.140 ns/op
Iteration   1: 234.917 ns/op
Iteration   2: 236.104 ns/op
Iteration   3: 235.000 ns/op
Iteration   4: 236.636 ns/op
Iteration   5: 234.767 ns/op
Iteration   6: 236.116 ns/op
Iteration   7: 234.932 ns/op
Iteration   8: 234.800 ns/op
Iteration   9: 234.992 ns/op
Iteration  10: 236.000 ns/op

# Run progress: 12.01% complete, ETA 00:33:58
# Fork: 2 of 2
# Warmup Iteration   1: 329.933 ns/op
# Warmup Iteration   2: 306.163 ns/op
# Warmup Iteration   3: 236.195 ns/op
Iteration   1: 234.862 ns/op
Iteration   2: 236.112 ns/op
Iteration   3: 234.762 ns/op
Iteration   4: 236.704 ns/op
Iteration   5: 234.814 ns/op
Iteration   6: 236.112 ns/op
Iteration   7: 234.767 ns/op
Iteration   8: 234.762 ns/op
Iteration   9: 234.808 ns/op
Iteration  10: 236.024 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  235.400 ±(99.9%) 0.622 ns/op [Average]
  (min, avg, max) = (234.762, 235.400, 236.704), stdev = 0.716
  CI (99.9%): [234.778, 236.021] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 12.08% complete, ETA 00:33:56
# Fork: 1 of 2
# Warmup Iteration   1: 1259.824 ns/op
# Warmup Iteration   2: 368.280 ns/op
# Warmup Iteration   3: 281.389 ns/op
Iteration   1: 280.201 ns/op
Iteration   2: 281.604 ns/op
Iteration   3: 279.744 ns/op
Iteration   4: 298.177 ns/op
Iteration   5: 279.983 ns/op
Iteration   6: 281.091 ns/op
Iteration   7: 279.776 ns/op
Iteration   8: 279.679 ns/op
Iteration   9: 279.792 ns/op
Iteration  10: 281.063 ns/op

# Run progress: 12.15% complete, ETA 00:33:54
# Fork: 2 of 2
# Warmup Iteration   1: 2081.900 ns/op
# Warmup Iteration   2: 353.672 ns/op
# Warmup Iteration   3: 270.895 ns/op
Iteration   1: 269.470 ns/op
Iteration   2: 271.000 ns/op
Iteration   3: 269.483 ns/op
Iteration   4: 275.184 ns/op
Iteration   5: 269.529 ns/op
Iteration   6: 270.806 ns/op
Iteration   7: 269.623 ns/op
Iteration   8: 269.492 ns/op
Iteration   9: 269.519 ns/op
Iteration  10: 271.077 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  276.315 ±(99.9%) 6.273 ns/op [Average]
  (min, avg, max) = (269.470, 276.315, 298.177), stdev = 7.223
  CI (99.9%): [270.042, 282.587] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 12.22% complete, ETA 00:33:53
# Fork: 1 of 2
# Warmup Iteration   1: 286.687 ns/op
# Warmup Iteration   2: 254.473 ns/op
# Warmup Iteration   3: 177.034 ns/op
Iteration   1: 175.566 ns/op
Iteration   2: 176.826 ns/op
Iteration   3: 175.974 ns/op
Iteration   4: 177.031 ns/op
Iteration   5: 175.583 ns/op
Iteration   6: 177.242 ns/op
Iteration   7: 176.026 ns/op
Iteration   8: 175.903 ns/op
Iteration   9: 175.992 ns/op
Iteration  10: 176.825 ns/op

# Run progress: 12.29% complete, ETA 00:33:51
# Fork: 2 of 2
# Warmup Iteration   1: 258.583 ns/op
# Warmup Iteration   2: 226.637 ns/op
# Warmup Iteration   3: 176.834 ns/op
Iteration   1: 175.679 ns/op
Iteration   2: 176.700 ns/op
Iteration   3: 176.286 ns/op
Iteration   4: 176.978 ns/op
Iteration   5: 175.510 ns/op
Iteration   6: 177.330 ns/op
Iteration   7: 175.833 ns/op
Iteration   8: 175.816 ns/op
Iteration   9: 175.928 ns/op
Iteration  10: 176.987 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  176.301 ±(99.9%) 0.535 ns/op [Average]
  (min, avg, max) = (175.510, 176.301, 177.330), stdev = 0.616
  CI (99.9%): [175.766, 176.836] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 12.36% complete, ETA 00:33:49
# Fork: 1 of 2
# Warmup Iteration   1: 537.131 ns/op
# Warmup Iteration   2: 355.925 ns/op
# Warmup Iteration   3: 245.531 ns/op
Iteration   1: 250.806 ns/op
Iteration   2: 245.314 ns/op
Iteration   3: 248.472 ns/op
Iteration   4: 269.898 ns/op
Iteration   5: 266.393 ns/op
Iteration   6: 264.877 ns/op
Iteration   7: 266.628 ns/op
Iteration   8: 265.987 ns/op
Iteration   9: 266.196 ns/op
Iteration  10: 265.265 ns/op

# Run progress: 12.43% complete, ETA 00:33:48
# Fork: 2 of 2
# Warmup Iteration   1: 486.883 ns/op
# Warmup Iteration   2: 343.382 ns/op
# Warmup Iteration   3: 247.183 ns/op
Iteration   1: 246.573 ns/op
Iteration   2: 242.479 ns/op
Iteration   3: 250.450 ns/op
Iteration   4: 263.020 ns/op
Iteration   5: 260.942 ns/op
Iteration   6: 259.679 ns/op
Iteration   7: 260.571 ns/op
Iteration   8: 260.994 ns/op
Iteration   9: 260.651 ns/op
Iteration  10: 259.278 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  258.724 ±(99.9%) 7.182 ns/op [Average]
  (min, avg, max) = (242.479, 258.724, 269.898), stdev = 8.271
  CI (99.9%): [251.541, 265.906] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 12.50% complete, ETA 00:33:46
# Fork: 1 of 2
# Warmup Iteration   1: 19.843 ns/op
# Warmup Iteration   2: 22.168 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.285 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.102 ns/op
Iteration   6: 15.367 ns/op
Iteration   7: 17.014 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.979 ns/op

# Run progress: 12.57% complete, ETA 00:33:44
# Fork: 2 of 2
# Warmup Iteration   1: 19.393 ns/op
# Warmup Iteration   2: 20.047 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.284 ns/op
Iteration   3: 17.022 ns/op
Iteration   4: 15.017 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.002 ns/op
Iteration   8: 17.012 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.969 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.969, 16.289, 17.105), stdev = 0.949
  CI (99.9%): [15.465, 17.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 12.64% complete, ETA 00:33:43
# Fork: 1 of 2
# Warmup Iteration   1: 702.136 ns/op
# Warmup Iteration   2: 418.043 ns/op
# Warmup Iteration   3: 302.559 ns/op
Iteration   1: 302.160 ns/op
Iteration   2: 302.936 ns/op
Iteration   3: 302.033 ns/op
Iteration   4: 303.166 ns/op
Iteration   5: 302.156 ns/op
Iteration   6: 303.086 ns/op
Iteration   7: 301.944 ns/op
Iteration   8: 302.058 ns/op
Iteration   9: 302.439 ns/op
Iteration  10: 302.794 ns/op

# Run progress: 12.71% complete, ETA 00:33:41
# Fork: 2 of 2
# Warmup Iteration   1: 683.493 ns/op
# Warmup Iteration   2: 386.498 ns/op
# Warmup Iteration   3: 301.771 ns/op
Iteration   1: 302.847 ns/op
Iteration   2: 301.752 ns/op
Iteration   3: 302.450 ns/op
Iteration   4: 302.505 ns/op
Iteration   5: 302.775 ns/op
Iteration   6: 301.733 ns/op
Iteration   7: 302.589 ns/op
Iteration   8: 303.012 ns/op
Iteration   9: 302.861 ns/op
Iteration  10: 301.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  302.463 ±(99.9%) 0.400 ns/op [Average]
  (min, avg, max) = (301.733, 302.463, 303.166), stdev = 0.461
  CI (99.9%): [302.063, 302.863] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 12.78% complete, ETA 00:33:40
# Fork: 1 of 2
# Warmup Iteration   1: 537.734 ns/op
# Warmup Iteration   2: 480.248 ns/op
# Warmup Iteration   3: 379.029 ns/op
Iteration   1: 377.813 ns/op
Iteration   2: 379.239 ns/op
Iteration   3: 377.620 ns/op
Iteration   4: 379.263 ns/op
Iteration   5: 377.493 ns/op
Iteration   6: 378.980 ns/op
Iteration   7: 377.560 ns/op
Iteration   8: 377.557 ns/op
Iteration   9: 377.589 ns/op
Iteration  10: 379.037 ns/op

# Run progress: 12.85% complete, ETA 00:33:38
# Fork: 2 of 2
# Warmup Iteration   1: 581.407 ns/op
# Warmup Iteration   2: 534.608 ns/op
# Warmup Iteration   3: 387.970 ns/op
Iteration   1: 377.787 ns/op
Iteration   2: 388.539 ns/op
Iteration   3: 377.624 ns/op
Iteration   4: 379.147 ns/op
Iteration   5: 386.391 ns/op
Iteration   6: 379.125 ns/op
Iteration   7: 377.639 ns/op
Iteration   8: 386.223 ns/op
Iteration   9: 386.699 ns/op
Iteration  10: 387.626 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  380.448 ±(99.9%) 3.489 ns/op [Average]
  (min, avg, max) = (377.493, 380.448, 388.539), stdev = 4.018
  CI (99.9%): [376.959, 383.936] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 12.92% complete, ETA 00:33:36
# Fork: 1 of 2
# Warmup Iteration   1: 22620.616 ns/op
# Warmup Iteration   2: 468.230 ns/op
# Warmup Iteration   3: 346.068 ns/op
Iteration   1: 319.861 ns/op
Iteration   2: 321.185 ns/op
Iteration   3: 318.667 ns/op
Iteration   4: 332.351 ns/op
Iteration   5: 319.894 ns/op
Iteration   6: 320.980 ns/op
Iteration   7: 319.203 ns/op
Iteration   8: 319.080 ns/op
Iteration   9: 319.323 ns/op
Iteration  10: 320.709 ns/op

# Run progress: 12.99% complete, ETA 00:33:34
# Fork: 2 of 2
# Warmup Iteration   1: 20034.207 ns/op
# Warmup Iteration   2: 502.454 ns/op
# Warmup Iteration   3: 341.607 ns/op
Iteration   1: 317.270 ns/op
Iteration   2: 318.926 ns/op
Iteration   3: 317.315 ns/op
Iteration   4: 330.042 ns/op
Iteration   5: 317.229 ns/op
Iteration   6: 318.710 ns/op
Iteration   7: 317.370 ns/op
Iteration   8: 317.329 ns/op
Iteration   9: 317.715 ns/op
Iteration  10: 318.474 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  320.082 ±(99.9%) 3.488 ns/op [Average]
  (min, avg, max) = (317.229, 320.082, 332.351), stdev = 4.017
  CI (99.9%): [316.593, 323.570] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 13.06% complete, ETA 00:33:33
# Fork: 1 of 2
# Warmup Iteration   1: 364.541 ns/op
# Warmup Iteration   2: 312.089 ns/op
# Warmup Iteration   3: 222.244 ns/op
Iteration   1: 220.678 ns/op
Iteration   2: 221.922 ns/op
Iteration   3: 220.827 ns/op
Iteration   4: 221.944 ns/op
Iteration   5: 220.501 ns/op
Iteration   6: 221.873 ns/op
Iteration   7: 220.487 ns/op
Iteration   8: 220.515 ns/op
Iteration   9: 220.471 ns/op
Iteration  10: 222.275 ns/op

# Run progress: 13.13% complete, ETA 00:33:31
# Fork: 2 of 2
# Warmup Iteration   1: 313.731 ns/op
# Warmup Iteration   2: 326.538 ns/op
# Warmup Iteration   3: 222.257 ns/op
Iteration   1: 220.861 ns/op
Iteration   2: 221.827 ns/op
Iteration   3: 220.688 ns/op
Iteration   4: 221.959 ns/op
Iteration   5: 220.570 ns/op
Iteration   6: 221.912 ns/op
Iteration   7: 220.427 ns/op
Iteration   8: 220.723 ns/op
Iteration   9: 220.629 ns/op
Iteration  10: 222.238 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  221.166 ±(99.9%) 0.616 ns/op [Average]
  (min, avg, max) = (220.427, 221.166, 222.275), stdev = 0.709
  CI (99.9%): [220.551, 221.782] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 13.19% complete, ETA 00:33:29
# Fork: 1 of 2
# Warmup Iteration   1: 497.792 ns/op
# Warmup Iteration   2: 327.740 ns/op
# Warmup Iteration   3: 255.587 ns/op
Iteration   1: 257.926 ns/op
Iteration   2: 254.743 ns/op
Iteration   3: 255.859 ns/op
Iteration   4: 276.202 ns/op
Iteration   5: 271.209 ns/op
Iteration   6: 270.950 ns/op
Iteration   7: 271.529 ns/op
Iteration   8: 272.042 ns/op
Iteration   9: 271.755 ns/op
Iteration  10: 270.871 ns/op

# Run progress: 13.26% complete, ETA 00:33:28
# Fork: 2 of 2
# Warmup Iteration   1: 538.724 ns/op
# Warmup Iteration   2: 358.047 ns/op
# Warmup Iteration   3: 251.641 ns/op
Iteration   1: 255.353 ns/op
Iteration   2: 251.813 ns/op
Iteration   3: 253.741 ns/op
Iteration   4: 274.242 ns/op
Iteration   5: 270.086 ns/op
Iteration   6: 270.045 ns/op
Iteration   7: 270.325 ns/op
Iteration   8: 270.230 ns/op
Iteration   9: 270.418 ns/op
Iteration  10: 270.010 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  266.468 ±(99.9%) 6.924 ns/op [Average]
  (min, avg, max) = (251.813, 266.468, 276.202), stdev = 7.974
  CI (99.9%): [259.543, 273.392] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 13.33% complete, ETA 00:33:26
# Fork: 1 of 2
# Warmup Iteration   1: 19.492 ns/op
# Warmup Iteration   2: 23.683 ns/op
# Warmup Iteration   3: 15.053 ns/op
Iteration   1: 17.075 ns/op
Iteration   2: 15.266 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.022 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.959 ns/op

# Run progress: 13.40% complete, ETA 00:33:24
# Fork: 2 of 2
# Warmup Iteration   1: 20.639 ns/op
# Warmup Iteration   2: 23.542 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.064 ns/op
Iteration   2: 15.278 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.372 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.014 ns/op
Iteration  10: 14.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.959, 16.290, 17.109), stdev = 0.953
  CI (99.9%): [15.463, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 13.47% complete, ETA 00:33:22
# Fork: 1 of 2
# Warmup Iteration   1: 73.410 ns/op
# Warmup Iteration   2: 76.842 ns/op
# Warmup Iteration   3: 50.264 ns/op
Iteration   1: 51.441 ns/op
Iteration   2: 51.233 ns/op
Iteration   3: 51.418 ns/op
Iteration   4: 50.745 ns/op
Iteration   5: 51.468 ns/op
Iteration   6: 50.222 ns/op
Iteration   7: 51.416 ns/op
Iteration   8: 51.414 ns/op
Iteration   9: 51.414 ns/op
Iteration  10: 50.129 ns/op

# Run progress: 13.54% complete, ETA 00:33:21
# Fork: 2 of 2
# Warmup Iteration   1: 71.947 ns/op
# Warmup Iteration   2: 73.908 ns/op
# Warmup Iteration   3: 50.292 ns/op
Iteration   1: 51.507 ns/op
Iteration   2: 51.264 ns/op
Iteration   3: 51.515 ns/op
Iteration   4: 50.780 ns/op
Iteration   5: 51.572 ns/op
Iteration   6: 50.219 ns/op
Iteration   7: 51.517 ns/op
Iteration   8: 51.512 ns/op
Iteration   9: 51.518 ns/op
Iteration  10: 50.140 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.122 ±(99.9%) 0.463 ns/op [Average]
  (min, avg, max) = (50.129, 51.122, 51.572), stdev = 0.533
  CI (99.9%): [50.659, 51.585] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 13.61% complete, ETA 00:33:19
# Fork: 1 of 2
# Warmup Iteration   1: 64.157 ns/op
# Warmup Iteration   2: 63.166 ns/op
# Warmup Iteration   3: 45.805 ns/op
Iteration   1: 44.434 ns/op
Iteration   2: 45.928 ns/op
Iteration   3: 44.420 ns/op
Iteration   4: 46.025 ns/op
Iteration   5: 44.455 ns/op
Iteration   6: 45.787 ns/op
Iteration   7: 44.380 ns/op
Iteration   8: 44.400 ns/op
Iteration   9: 44.428 ns/op
Iteration  10: 45.765 ns/op

# Run progress: 13.68% complete, ETA 00:33:18
# Fork: 2 of 2
# Warmup Iteration   1: 64.521 ns/op
# Warmup Iteration   2: 63.943 ns/op
# Warmup Iteration   3: 45.802 ns/op
Iteration   1: 44.431 ns/op
Iteration   2: 45.881 ns/op
Iteration   3: 44.418 ns/op
Iteration   4: 46.015 ns/op
Iteration   5: 44.436 ns/op
Iteration   6: 45.791 ns/op
Iteration   7: 44.383 ns/op
Iteration   8: 44.422 ns/op
Iteration   9: 44.398 ns/op
Iteration  10: 45.779 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.999 ±(99.9%) 0.637 ns/op [Average]
  (min, avg, max) = (44.380, 44.999, 46.025), stdev = 0.734
  CI (99.9%): [44.361, 45.636] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 13.75% complete, ETA 00:33:16
# Fork: 1 of 2
# Warmup Iteration   1: 151.878 ns/op
# Warmup Iteration   2: 70.872 ns/op
# Warmup Iteration   3: 50.393 ns/op
Iteration   1: 48.965 ns/op
Iteration   2: 50.361 ns/op
Iteration   3: 48.988 ns/op
Iteration   4: 53.824 ns/op
Iteration   5: 48.968 ns/op
Iteration   6: 50.355 ns/op
Iteration   7: 49.005 ns/op
Iteration   8: 49.006 ns/op
Iteration   9: 49.011 ns/op
Iteration  10: 50.362 ns/op

# Run progress: 13.82% complete, ETA 00:33:14
# Fork: 2 of 2
# Warmup Iteration   1: 153.976 ns/op
# Warmup Iteration   2: 72.113 ns/op
# Warmup Iteration   3: 50.389 ns/op
Iteration   1: 48.966 ns/op
Iteration   2: 50.383 ns/op
Iteration   3: 49.009 ns/op
Iteration   4: 53.813 ns/op
Iteration   5: 48.988 ns/op
Iteration   6: 50.361 ns/op
Iteration   7: 49.003 ns/op
Iteration   8: 49.006 ns/op
Iteration   9: 49.003 ns/op
Iteration  10: 50.389 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.888 ±(99.9%) 1.289 ns/op [Average]
  (min, avg, max) = (48.965, 49.888, 53.824), stdev = 1.485
  CI (99.9%): [48.599, 51.178] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 13.89% complete, ETA 00:33:13
# Fork: 1 of 2
# Warmup Iteration   1: 66.978 ns/op
# Warmup Iteration   2: 74.250 ns/op
# Warmup Iteration   3: 49.156 ns/op
Iteration   1: 47.799 ns/op
Iteration   2: 49.137 ns/op
Iteration   3: 47.884 ns/op
Iteration   4: 49.123 ns/op
Iteration   5: 47.745 ns/op
Iteration   6: 49.096 ns/op
Iteration   7: 47.846 ns/op
Iteration   8: 47.891 ns/op
Iteration   9: 47.877 ns/op
Iteration  10: 49.141 ns/op

# Run progress: 13.96% complete, ETA 00:33:11
# Fork: 2 of 2
# Warmup Iteration   1: 67.375 ns/op
# Warmup Iteration   2: 68.823 ns/op
# Warmup Iteration   3: 49.143 ns/op
Iteration   1: 47.798 ns/op
Iteration   2: 49.118 ns/op
Iteration   3: 47.899 ns/op
Iteration   4: 49.162 ns/op
Iteration   5: 47.819 ns/op
Iteration   6: 49.116 ns/op
Iteration   7: 47.885 ns/op
Iteration   8: 47.894 ns/op
Iteration   9: 47.891 ns/op
Iteration  10: 49.111 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.362 ±(99.9%) 0.557 ns/op [Average]
  (min, avg, max) = (47.745, 48.362, 49.162), stdev = 0.641
  CI (99.9%): [47.805, 48.918] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 14.03% complete, ETA 00:33:09
# Fork: 1 of 2
# Warmup Iteration   1: 158.805 ns/op
# Warmup Iteration   2: 160.610 ns/op
# Warmup Iteration   3: 115.436 ns/op
Iteration   1: 117.642 ns/op
Iteration   2: 115.866 ns/op
Iteration   3: 118.484 ns/op
Iteration   4: 139.758 ns/op
Iteration   5: 138.191 ns/op
Iteration   6: 136.785 ns/op
Iteration   7: 137.643 ns/op
Iteration   8: 137.413 ns/op
Iteration   9: 137.680 ns/op
Iteration  10: 136.390 ns/op

# Run progress: 14.10% complete, ETA 00:33:08
# Fork: 2 of 2
# Warmup Iteration   1: 166.734 ns/op
# Warmup Iteration   2: 169.248 ns/op
# Warmup Iteration   3: 115.521 ns/op
Iteration   1: 117.535 ns/op
Iteration   2: 116.110 ns/op
Iteration   3: 118.593 ns/op
Iteration   4: 134.177 ns/op
Iteration   5: 135.325 ns/op
Iteration   6: 133.934 ns/op
Iteration   7: 134.881 ns/op
Iteration   8: 135.133 ns/op
Iteration   9: 134.675 ns/op
Iteration  10: 133.586 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  130.490 ±(99.9%) 7.783 ns/op [Average]
  (min, avg, max) = (115.866, 130.490, 139.758), stdev = 8.963
  CI (99.9%): [122.707, 138.273] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 14.17% complete, ETA 00:33:06
# Fork: 1 of 2
# Warmup Iteration   1: 19.312 ns/op
# Warmup Iteration   2: 23.354 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.293 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.023 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.955 ns/op

# Run progress: 14.24% complete, ETA 00:33:04
# Fork: 2 of 2
# Warmup Iteration   1: 19.422 ns/op
# Warmup Iteration   2: 23.056 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.266 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.010 ns/op
Iteration  10: 14.973 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.955, 16.290, 17.108), stdev = 0.951
  CI (99.9%): [15.465, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 14.31% complete, ETA 00:33:03
# Fork: 1 of 2
# Warmup Iteration   1: 72.497 ns/op
# Warmup Iteration   2: 76.977 ns/op
# Warmup Iteration   3: 50.288 ns/op
Iteration   1: 51.446 ns/op
Iteration   2: 51.242 ns/op
Iteration   3: 51.435 ns/op
Iteration   4: 50.756 ns/op
Iteration   5: 51.498 ns/op
Iteration   6: 50.295 ns/op
Iteration   7: 51.424 ns/op
Iteration   8: 51.420 ns/op
Iteration   9: 51.444 ns/op
Iteration  10: 50.150 ns/op

# Run progress: 14.37% complete, ETA 00:33:01
# Fork: 2 of 2
# Warmup Iteration   1: 72.242 ns/op
# Warmup Iteration   2: 70.578 ns/op
# Warmup Iteration   3: 50.260 ns/op
Iteration   1: 51.465 ns/op
Iteration   2: 51.200 ns/op
Iteration   3: 51.482 ns/op
Iteration   4: 50.721 ns/op
Iteration   5: 51.481 ns/op
Iteration   6: 50.198 ns/op
Iteration   7: 51.479 ns/op
Iteration   8: 51.459 ns/op
Iteration   9: 51.469 ns/op
Iteration  10: 50.051 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.106 ±(99.9%) 0.459 ns/op [Average]
  (min, avg, max) = (50.051, 51.106, 51.498), stdev = 0.528
  CI (99.9%): [50.647, 51.565] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 14.44% complete, ETA 00:32:59
# Fork: 1 of 2
# Warmup Iteration   1: 64.942 ns/op
# Warmup Iteration   2: 66.183 ns/op
# Warmup Iteration   3: 45.805 ns/op
Iteration   1: 44.453 ns/op
Iteration   2: 45.891 ns/op
Iteration   3: 44.365 ns/op
Iteration   4: 46.028 ns/op
Iteration   5: 44.448 ns/op
Iteration   6: 45.803 ns/op
Iteration   7: 44.391 ns/op
Iteration   8: 44.368 ns/op
Iteration   9: 44.415 ns/op
Iteration  10: 45.760 ns/op

# Run progress: 14.51% complete, ETA 00:32:58
# Fork: 2 of 2
# Warmup Iteration   1: 64.232 ns/op
# Warmup Iteration   2: 71.705 ns/op
# Warmup Iteration   3: 45.808 ns/op
Iteration   1: 44.462 ns/op
Iteration   2: 45.883 ns/op
Iteration   3: 44.392 ns/op
Iteration   4: 46.019 ns/op
Iteration   5: 44.452 ns/op
Iteration   6: 45.795 ns/op
Iteration   7: 44.394 ns/op
Iteration   8: 44.399 ns/op
Iteration   9: 44.387 ns/op
Iteration  10: 45.770 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.994 ±(99.9%) 0.639 ns/op [Average]
  (min, avg, max) = (44.365, 44.994, 46.028), stdev = 0.736
  CI (99.9%): [44.355, 45.633] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 14.58% complete, ETA 00:32:56
# Fork: 1 of 2
# Warmup Iteration   1: 152.801 ns/op
# Warmup Iteration   2: 68.969 ns/op
# Warmup Iteration   3: 50.382 ns/op
Iteration   1: 48.957 ns/op
Iteration   2: 50.362 ns/op
Iteration   3: 49.007 ns/op
Iteration   4: 53.807 ns/op
Iteration   5: 48.986 ns/op
Iteration   6: 50.348 ns/op
Iteration   7: 49.000 ns/op
Iteration   8: 49.011 ns/op
Iteration   9: 49.010 ns/op
Iteration  10: 50.372 ns/op

# Run progress: 14.65% complete, ETA 00:32:54
# Fork: 2 of 2
# Warmup Iteration   1: 187.377 ns/op
# Warmup Iteration   2: 82.956 ns/op
# Warmup Iteration   3: 50.391 ns/op
Iteration   1: 48.970 ns/op
Iteration   2: 50.371 ns/op
Iteration   3: 49.004 ns/op
Iteration   4: 53.844 ns/op
Iteration   5: 48.987 ns/op
Iteration   6: 50.356 ns/op
Iteration   7: 49.003 ns/op
Iteration   8: 49.004 ns/op
Iteration   9: 49.030 ns/op
Iteration  10: 50.380 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.890 ±(99.9%) 1.289 ns/op [Average]
  (min, avg, max) = (48.957, 49.890, 53.844), stdev = 1.485
  CI (99.9%): [48.601, 51.180] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 14.72% complete, ETA 00:32:53
# Fork: 1 of 2
# Warmup Iteration   1: 68.287 ns/op
# Warmup Iteration   2: 67.408 ns/op
# Warmup Iteration   3: 49.221 ns/op
Iteration   1: 47.813 ns/op
Iteration   2: 49.122 ns/op
Iteration   3: 47.909 ns/op
Iteration   4: 49.166 ns/op
Iteration   5: 47.860 ns/op
Iteration   6: 49.119 ns/op
Iteration   7: 47.910 ns/op
Iteration   8: 47.907 ns/op
Iteration   9: 47.920 ns/op
Iteration  10: 49.163 ns/op

# Run progress: 14.79% complete, ETA 00:32:51
# Fork: 2 of 2
# Warmup Iteration   1: 68.105 ns/op
# Warmup Iteration   2: 70.832 ns/op
# Warmup Iteration   3: 49.160 ns/op
Iteration   1: 47.779 ns/op
Iteration   2: 49.152 ns/op
Iteration   3: 47.918 ns/op
Iteration   4: 49.173 ns/op
Iteration   5: 47.807 ns/op
Iteration   6: 49.060 ns/op
Iteration   7: 47.917 ns/op
Iteration   8: 47.861 ns/op
Iteration   9: 47.920 ns/op
Iteration  10: 49.154 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.382 ±(99.9%) 0.552 ns/op [Average]
  (min, avg, max) = (47.779, 48.382, 49.173), stdev = 0.636
  CI (99.9%): [47.829, 48.934] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 14.86% complete, ETA 00:32:50
# Fork: 1 of 2
# Warmup Iteration   1: 166.883 ns/op
# Warmup Iteration   2: 158.698 ns/op
# Warmup Iteration   3: 115.410 ns/op
Iteration   1: 117.594 ns/op
Iteration   2: 115.853 ns/op
Iteration   3: 118.494 ns/op
Iteration   4: 134.201 ns/op
Iteration   5: 135.527 ns/op
Iteration   6: 134.079 ns/op
Iteration   7: 134.958 ns/op
Iteration   8: 135.144 ns/op
Iteration   9: 134.746 ns/op
Iteration  10: 133.304 ns/op

# Run progress: 14.93% complete, ETA 00:32:48
# Fork: 2 of 2
# Warmup Iteration   1: 195.556 ns/op
# Warmup Iteration   2: 172.680 ns/op
# Warmup Iteration   3: 115.470 ns/op
Iteration   1: 117.598 ns/op
Iteration   2: 115.938 ns/op
Iteration   3: 118.552 ns/op
Iteration   4: 134.139 ns/op
Iteration   5: 135.364 ns/op
Iteration   6: 134.002 ns/op
Iteration   7: 135.067 ns/op
Iteration   8: 135.293 ns/op
Iteration   9: 134.733 ns/op
Iteration  10: 133.617 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  129.410 ±(99.9%) 7.078 ns/op [Average]
  (min, avg, max) = (115.853, 129.410, 135.527), stdev = 8.152
  CI (99.9%): [122.332, 136.489] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 15.00% complete, ETA 00:32:46
# Fork: 1 of 2
# Warmup Iteration   1: 19.293 ns/op
# Warmup Iteration   2: 20.972 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.241 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.014 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.385 ns/op
Iteration   7: 17.005 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.973 ns/op

# Run progress: 15.07% complete, ETA 00:32:45
# Fork: 2 of 2
# Warmup Iteration   1: 19.400 ns/op
# Warmup Iteration   2: 20.906 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.069 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.378 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.959 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.830 ns/op [Average]
  (min, avg, max) = (14.959, 16.287, 17.110), stdev = 0.955
  CI (99.9%): [15.458, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 15.14% complete, ETA 00:32:43
# Fork: 1 of 2
# Warmup Iteration   1: 78.716 ns/op
# Warmup Iteration   2: 78.317 ns/op
# Warmup Iteration   3: 54.047 ns/op
Iteration   1: 55.119 ns/op
Iteration   2: 54.050 ns/op
Iteration   3: 55.234 ns/op
Iteration   4: 54.539 ns/op
Iteration   5: 55.088 ns/op
Iteration   6: 54.042 ns/op
Iteration   7: 55.301 ns/op
Iteration   8: 55.128 ns/op
Iteration   9: 55.128 ns/op
Iteration  10: 54.080 ns/op

# Run progress: 15.21% complete, ETA 00:32:41
# Fork: 2 of 2
# Warmup Iteration   1: 79.525 ns/op
# Warmup Iteration   2: 79.247 ns/op
# Warmup Iteration   3: 54.252 ns/op
Iteration   1: 55.182 ns/op
Iteration   2: 54.380 ns/op
Iteration   3: 55.149 ns/op
Iteration   4: 54.561 ns/op
Iteration   5: 55.230 ns/op
Iteration   6: 54.458 ns/op
Iteration   7: 55.100 ns/op
Iteration   8: 55.355 ns/op
Iteration   9: 55.153 ns/op
Iteration  10: 54.085 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  54.818 ±(99.9%) 0.418 ns/op [Average]
  (min, avg, max) = (54.042, 54.818, 55.355), stdev = 0.481
  CI (99.9%): [54.400, 55.236] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 15.28% complete, ETA 00:32:40
# Fork: 1 of 2
# Warmup Iteration   1: 68.872 ns/op
# Warmup Iteration   2: 71.621 ns/op
# Warmup Iteration   3: 45.833 ns/op
Iteration   1: 44.415 ns/op
Iteration   2: 45.893 ns/op
Iteration   3: 44.404 ns/op
Iteration   4: 46.098 ns/op
Iteration   5: 44.451 ns/op
Iteration   6: 45.789 ns/op
Iteration   7: 44.381 ns/op
Iteration   8: 44.407 ns/op
Iteration   9: 44.425 ns/op
Iteration  10: 45.757 ns/op

# Run progress: 15.35% complete, ETA 00:32:38
# Fork: 2 of 2
# Warmup Iteration   1: 64.122 ns/op
# Warmup Iteration   2: 64.031 ns/op
# Warmup Iteration   3: 45.805 ns/op
Iteration   1: 44.468 ns/op
Iteration   2: 45.887 ns/op
Iteration   3: 44.392 ns/op
Iteration   4: 46.088 ns/op
Iteration   5: 44.430 ns/op
Iteration   6: 45.790 ns/op
Iteration   7: 44.368 ns/op
Iteration   8: 44.395 ns/op
Iteration   9: 44.388 ns/op
Iteration  10: 45.868 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.005 ±(99.9%) 0.652 ns/op [Average]
  (min, avg, max) = (44.368, 45.005, 46.098), stdev = 0.751
  CI (99.9%): [44.352, 45.657] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 15.42% complete, ETA 00:32:36
# Fork: 1 of 2
# Warmup Iteration   1: 493.369 ns/op
# Warmup Iteration   2: 91.825 ns/op
# Warmup Iteration   3: 67.912 ns/op
Iteration   1: 66.807 ns/op
Iteration   2: 68.030 ns/op
Iteration   3: 65.612 ns/op
Iteration   4: 68.610 ns/op
Iteration   5: 66.696 ns/op
Iteration   6: 74.440 ns/op
Iteration   7: 65.577 ns/op
Iteration   8: 65.539 ns/op
Iteration   9: 65.565 ns/op
Iteration  10: 76.033 ns/op

# Run progress: 15.49% complete, ETA 00:32:35
# Fork: 2 of 2
# Warmup Iteration   1: 434.524 ns/op
# Warmup Iteration   2: 92.974 ns/op
# Warmup Iteration   3: 67.938 ns/op
Iteration   1: 66.807 ns/op
Iteration   2: 68.043 ns/op
Iteration   3: 65.486 ns/op
Iteration   4: 68.649 ns/op
Iteration   5: 66.686 ns/op
Iteration   6: 67.782 ns/op
Iteration   7: 65.531 ns/op
Iteration   8: 65.539 ns/op
Iteration   9: 65.519 ns/op
Iteration  10: 67.741 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  67.535 ±(99.9%) 2.497 ns/op [Average]
  (min, avg, max) = (65.486, 67.535, 76.033), stdev = 2.875
  CI (99.9%): [65.038, 70.031] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 15.56% complete, ETA 00:32:33
# Fork: 1 of 2
# Warmup Iteration   1: 68.437 ns/op
# Warmup Iteration   2: 70.784 ns/op
# Warmup Iteration   3: 49.145 ns/op
Iteration   1: 47.825 ns/op
Iteration   2: 49.141 ns/op
Iteration   3: 47.903 ns/op
Iteration   4: 49.159 ns/op
Iteration   5: 47.806 ns/op
Iteration   6: 49.082 ns/op
Iteration   7: 47.842 ns/op
Iteration   8: 47.866 ns/op
Iteration   9: 47.876 ns/op
Iteration  10: 49.118 ns/op

# Run progress: 15.63% complete, ETA 00:32:32
# Fork: 2 of 2
# Warmup Iteration   1: 68.192 ns/op
# Warmup Iteration   2: 68.746 ns/op
# Warmup Iteration   3: 49.152 ns/op
Iteration   1: 47.798 ns/op
Iteration   2: 49.160 ns/op
Iteration   3: 47.920 ns/op
Iteration   4: 49.166 ns/op
Iteration   5: 47.766 ns/op
Iteration   6: 49.108 ns/op
Iteration   7: 47.898 ns/op
Iteration   8: 47.910 ns/op
Iteration   9: 47.921 ns/op
Iteration  10: 49.161 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.371 ±(99.9%) 0.558 ns/op [Average]
  (min, avg, max) = (47.766, 48.371, 49.166), stdev = 0.643
  CI (99.9%): [47.813, 48.930] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 15.69% complete, ETA 00:32:30
# Fork: 1 of 2
# Warmup Iteration   1: 168.536 ns/op
# Warmup Iteration   2: 172.834 ns/op
# Warmup Iteration   3: 121.743 ns/op
Iteration   1: 122.814 ns/op
Iteration   2: 128.946 ns/op
Iteration   3: 123.249 ns/op
Iteration   4: 136.952 ns/op
Iteration   5: 136.630 ns/op
Iteration   6: 134.733 ns/op
Iteration   7: 136.000 ns/op
Iteration   8: 136.790 ns/op
Iteration   9: 136.012 ns/op
Iteration  10: 134.696 ns/op

# Run progress: 15.76% complete, ETA 00:32:28
# Fork: 2 of 2
# Warmup Iteration   1: 166.942 ns/op
# Warmup Iteration   2: 162.823 ns/op
# Warmup Iteration   3: 121.706 ns/op
Iteration   1: 123.134 ns/op
Iteration   2: 128.701 ns/op
Iteration   3: 123.363 ns/op
Iteration   4: 137.505 ns/op
Iteration   5: 137.732 ns/op
Iteration   6: 136.119 ns/op
Iteration   7: 136.977 ns/op
Iteration   8: 137.097 ns/op
Iteration   9: 137.013 ns/op
Iteration  10: 135.991 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  133.023 ±(99.9%) 4.884 ns/op [Average]
  (min, avg, max) = (122.814, 133.023, 137.732), stdev = 5.625
  CI (99.9%): [128.138, 137.907] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 15.83% complete, ETA 00:32:26
# Fork: 1 of 2
# Warmup Iteration   1: 19.535 ns/op
# Warmup Iteration   2: 23.703 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.273 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.099 ns/op
Iteration   6: 15.365 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.979 ns/op

# Run progress: 15.90% complete, ETA 00:32:25
# Fork: 2 of 2
# Warmup Iteration   1: 19.253 ns/op
# Warmup Iteration   2: 21.267 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.022 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.103 ns/op
Iteration   6: 15.371 ns/op
Iteration   7: 17.015 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.971, 16.289, 17.103), stdev = 0.953
  CI (99.9%): [15.462, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 15.97% complete, ETA 00:32:23
# Fork: 1 of 2
# Warmup Iteration   1: 372.368 ns/op
# Warmup Iteration   2: 187.549 ns/op
# Warmup Iteration   3: 136.369 ns/op
Iteration   1: 137.777 ns/op
Iteration   2: 136.486 ns/op
Iteration   3: 137.715 ns/op
Iteration   4: 137.741 ns/op
Iteration   5: 137.828 ns/op
Iteration   6: 136.690 ns/op
Iteration   7: 137.871 ns/op
Iteration   8: 137.767 ns/op
Iteration   9: 137.684 ns/op
Iteration  10: 136.264 ns/op

# Run progress: 16.04% complete, ETA 00:32:22
# Fork: 2 of 2
# Warmup Iteration   1: 436.496 ns/op
# Warmup Iteration   2: 194.908 ns/op
# Warmup Iteration   3: 136.491 ns/op
Iteration   1: 137.861 ns/op
Iteration   2: 136.408 ns/op
Iteration   3: 137.627 ns/op
Iteration   4: 137.727 ns/op
Iteration   5: 138.077 ns/op
Iteration   6: 136.710 ns/op
Iteration   7: 137.815 ns/op
Iteration   8: 137.791 ns/op
Iteration   9: 137.855 ns/op
Iteration  10: 136.161 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  137.393 ±(99.9%) 0.562 ns/op [Average]
  (min, avg, max) = (136.161, 137.393, 138.077), stdev = 0.647
  CI (99.9%): [136.831, 137.955] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 16.11% complete, ETA 00:32:20
# Fork: 1 of 2
# Warmup Iteration   1: 370.866 ns/op
# Warmup Iteration   2: 341.150 ns/op
# Warmup Iteration   3: 256.998 ns/op
Iteration   1: 255.977 ns/op
Iteration   2: 257.686 ns/op
Iteration   3: 255.517 ns/op
Iteration   4: 257.855 ns/op
Iteration   5: 255.568 ns/op
Iteration   6: 256.687 ns/op
Iteration   7: 256.180 ns/op
Iteration   8: 255.943 ns/op
Iteration   9: 255.866 ns/op
Iteration  10: 257.539 ns/op

# Run progress: 16.18% complete, ETA 00:32:18
# Fork: 2 of 2
# Warmup Iteration   1: 357.103 ns/op
# Warmup Iteration   2: 368.502 ns/op
# Warmup Iteration   3: 253.608 ns/op
Iteration   1: 251.859 ns/op
Iteration   2: 253.809 ns/op
Iteration   3: 251.756 ns/op
Iteration   4: 253.915 ns/op
Iteration   5: 252.163 ns/op
Iteration   6: 253.378 ns/op
Iteration   7: 252.156 ns/op
Iteration   8: 251.905 ns/op
Iteration   9: 252.277 ns/op
Iteration  10: 253.696 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  254.587 ±(99.9%) 1.850 ns/op [Average]
  (min, avg, max) = (251.756, 254.587, 257.855), stdev = 2.131
  CI (99.9%): [252.736, 256.437] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 16.25% complete, ETA 00:32:17
# Fork: 1 of 2
# Warmup Iteration   1: 644.054 ns/op
# Warmup Iteration   2: 276.894 ns/op
# Warmup Iteration   3: 200.332 ns/op
Iteration   1: 199.180 ns/op
Iteration   2: 201.770 ns/op
Iteration   3: 199.004 ns/op
Iteration   4: 201.099 ns/op
Iteration   5: 199.427 ns/op
Iteration   6: 200.249 ns/op
Iteration   7: 199.133 ns/op
Iteration   8: 199.276 ns/op
Iteration   9: 199.269 ns/op
Iteration  10: 200.046 ns/op

# Run progress: 16.32% complete, ETA 00:32:15
# Fork: 2 of 2
# Warmup Iteration   1: 645.702 ns/op
# Warmup Iteration   2: 257.745 ns/op
# Warmup Iteration   3: 198.287 ns/op
Iteration   1: 197.578 ns/op
Iteration   2: 199.740 ns/op
Iteration   3: 197.038 ns/op
Iteration   4: 199.783 ns/op
Iteration   5: 198.214 ns/op
Iteration   6: 197.967 ns/op
Iteration   7: 197.214 ns/op
Iteration   8: 197.095 ns/op
Iteration   9: 197.093 ns/op
Iteration  10: 198.460 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  198.932 ±(99.9%) 1.170 ns/op [Average]
  (min, avg, max) = (197.038, 198.932, 201.770), stdev = 1.347
  CI (99.9%): [197.762, 200.102] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 16.39% complete, ETA 00:32:14
# Fork: 1 of 2
# Warmup Iteration   1: 237.152 ns/op
# Warmup Iteration   2: 214.350 ns/op
# Warmup Iteration   3: 164.417 ns/op
Iteration   1: 163.305 ns/op
Iteration   2: 165.020 ns/op
Iteration   3: 162.777 ns/op
Iteration   4: 165.096 ns/op
Iteration   5: 162.777 ns/op
Iteration   6: 164.290 ns/op
Iteration   7: 162.902 ns/op
Iteration   8: 162.936 ns/op
Iteration   9: 162.998 ns/op
Iteration  10: 164.495 ns/op

# Run progress: 16.46% complete, ETA 00:32:12
# Fork: 2 of 2
# Warmup Iteration   1: 236.212 ns/op
# Warmup Iteration   2: 244.605 ns/op
# Warmup Iteration   3: 164.667 ns/op
Iteration   1: 162.928 ns/op
Iteration   2: 165.013 ns/op
Iteration   3: 162.742 ns/op
Iteration   4: 165.094 ns/op
Iteration   5: 162.994 ns/op
Iteration   6: 164.314 ns/op
Iteration   7: 163.140 ns/op
Iteration   8: 162.957 ns/op
Iteration   9: 163.037 ns/op
Iteration  10: 164.778 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  163.680 ±(99.9%) 0.816 ns/op [Average]
  (min, avg, max) = (162.742, 163.680, 165.096), stdev = 0.939
  CI (99.9%): [162.864, 164.495] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 16.53% complete, ETA 00:32:10
# Fork: 1 of 2
# Warmup Iteration   1: 574.883 ns/op
# Warmup Iteration   2: 365.102 ns/op
# Warmup Iteration   3: 257.173 ns/op
Iteration   1: 257.417 ns/op
Iteration   2: 256.764 ns/op
Iteration   3: 258.592 ns/op
Iteration   4: 276.323 ns/op
Iteration   5: 277.127 ns/op
Iteration   6: 275.750 ns/op
Iteration   7: 276.211 ns/op
Iteration   8: 276.474 ns/op
Iteration   9: 276.261 ns/op
Iteration  10: 276.154 ns/op

# Run progress: 16.60% complete, ETA 00:32:09
# Fork: 2 of 2
# Warmup Iteration   1: 564.523 ns/op
# Warmup Iteration   2: 362.904 ns/op
# Warmup Iteration   3: 257.145 ns/op
Iteration   1: 257.672 ns/op
Iteration   2: 256.856 ns/op
Iteration   3: 258.151 ns/op
Iteration   4: 277.249 ns/op
Iteration   5: 274.287 ns/op
Iteration   6: 273.200 ns/op
Iteration   7: 272.416 ns/op
Iteration   8: 272.829 ns/op
Iteration   9: 272.278 ns/op
Iteration  10: 272.769 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  269.739 ±(99.9%) 7.229 ns/op [Average]
  (min, avg, max) = (256.764, 269.739, 277.249), stdev = 8.325
  CI (99.9%): [262.510, 276.968] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 16.67% complete, ETA 00:32:07
# Fork: 1 of 2
# Warmup Iteration   1: 19.741 ns/op
# Warmup Iteration   2: 22.705 ns/op
# Warmup Iteration   3: 15.145 ns/op
Iteration   1: 17.017 ns/op
Iteration   2: 17.117 ns/op
Iteration   3: 17.041 ns/op
Iteration   4: 15.228 ns/op
Iteration   5: 17.018 ns/op
Iteration   6: 14.968 ns/op
Iteration   7: 17.028 ns/op
Iteration   8: 17.030 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 15.186 ns/op

# Run progress: 16.74% complete, ETA 00:32:05
# Fork: 2 of 2
# Warmup Iteration   1: 19.312 ns/op
# Warmup Iteration   2: 22.637 ns/op
# Warmup Iteration   3: 15.159 ns/op
Iteration   1: 17.010 ns/op
Iteration   2: 17.112 ns/op
Iteration   3: 17.043 ns/op
Iteration   4: 15.219 ns/op
Iteration   5: 17.019 ns/op
Iteration   6: 14.971 ns/op
Iteration   7: 17.035 ns/op
Iteration   8: 17.010 ns/op
Iteration   9: 17.034 ns/op
Iteration  10: 15.213 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.466 ±(99.9%) 0.781 ns/op [Average]
  (min, avg, max) = (14.968, 16.466, 17.117), stdev = 0.900
  CI (99.9%): [15.685, 17.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 16.81% complete, ETA 00:32:04
# Fork: 1 of 2
# Warmup Iteration   1: 167.294 ns/op
# Warmup Iteration   2: 125.223 ns/op
# Warmup Iteration   3: 88.880 ns/op
Iteration   1: 90.567 ns/op
Iteration   2: 89.132 ns/op
Iteration   3: 90.603 ns/op
Iteration   4: 90.107 ns/op
Iteration   5: 90.654 ns/op
Iteration   6: 89.130 ns/op
Iteration   7: 90.845 ns/op
Iteration   8: 90.566 ns/op
Iteration   9: 90.623 ns/op
Iteration  10: 89.024 ns/op

# Run progress: 16.88% complete, ETA 00:32:02
# Fork: 2 of 2
# Warmup Iteration   1: 161.767 ns/op
# Warmup Iteration   2: 132.431 ns/op
# Warmup Iteration   3: 89.018 ns/op
Iteration   1: 90.526 ns/op
Iteration   2: 89.084 ns/op
Iteration   3: 90.700 ns/op
Iteration   4: 90.124 ns/op
Iteration   5: 90.559 ns/op
Iteration   6: 89.152 ns/op
Iteration   7: 90.759 ns/op
Iteration   8: 90.579 ns/op
Iteration   9: 90.722 ns/op
Iteration  10: 89.042 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  90.125 ±(99.9%) 0.620 ns/op [Average]
  (min, avg, max) = (89.024, 90.125, 90.845), stdev = 0.714
  CI (99.9%): [89.505, 90.745] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 16.94% complete, ETA 00:32:00
# Fork: 1 of 2
# Warmup Iteration   1: 67.160 ns/op
# Warmup Iteration   2: 62.890 ns/op
# Warmup Iteration   3: 45.775 ns/op
Iteration   1: 44.531 ns/op
Iteration   2: 45.798 ns/op
Iteration   3: 44.393 ns/op
Iteration   4: 46.321 ns/op
Iteration   5: 44.444 ns/op
Iteration   6: 45.781 ns/op
Iteration   7: 44.381 ns/op
Iteration   8: 44.376 ns/op
Iteration   9: 44.375 ns/op
Iteration  10: 45.773 ns/op

# Run progress: 17.01% complete, ETA 00:31:59
# Fork: 2 of 2
# Warmup Iteration   1: 64.929 ns/op
# Warmup Iteration   2: 61.383 ns/op
# Warmup Iteration   3: 45.769 ns/op
Iteration   1: 44.522 ns/op
Iteration   2: 45.793 ns/op
Iteration   3: 44.380 ns/op
Iteration   4: 46.250 ns/op
Iteration   5: 44.393 ns/op
Iteration   6: 45.790 ns/op
Iteration   7: 44.384 ns/op
Iteration   8: 44.375 ns/op
Iteration   9: 44.361 ns/op
Iteration  10: 45.783 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.010 ±(99.9%) 0.668 ns/op [Average]
  (min, avg, max) = (44.361, 45.010, 46.321), stdev = 0.769
  CI (99.9%): [44.342, 45.678] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 17.08% complete, ETA 00:31:57
# Fork: 1 of 2
# Warmup Iteration   1: 276.632 ns/op
# Warmup Iteration   2: 147.666 ns/op
# Warmup Iteration   3: 111.112 ns/op
Iteration   1: 109.932 ns/op
Iteration   2: 111.060 ns/op
Iteration   3: 110.068 ns/op
Iteration   4: 111.747 ns/op
Iteration   5: 109.872 ns/op
Iteration   6: 111.183 ns/op
Iteration   7: 109.966 ns/op
Iteration   8: 109.905 ns/op
Iteration   9: 109.980 ns/op
Iteration  10: 110.796 ns/op

# Run progress: 17.15% complete, ETA 00:31:56
# Fork: 2 of 2
# Warmup Iteration   1: 275.360 ns/op
# Warmup Iteration   2: 146.377 ns/op
# Warmup Iteration   3: 110.792 ns/op
Iteration   1: 109.683 ns/op
Iteration   2: 110.753 ns/op
Iteration   3: 109.773 ns/op
Iteration   4: 111.765 ns/op
Iteration   5: 109.843 ns/op
Iteration   6: 110.781 ns/op
Iteration   7: 109.737 ns/op
Iteration   8: 109.734 ns/op
Iteration   9: 109.872 ns/op
Iteration  10: 110.376 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  110.341 ±(99.9%) 0.587 ns/op [Average]
  (min, avg, max) = (109.683, 110.341, 111.765), stdev = 0.676
  CI (99.9%): [109.754, 110.928] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 17.22% complete, ETA 00:31:54
# Fork: 1 of 2
# Warmup Iteration   1: 67.147 ns/op
# Warmup Iteration   2: 70.425 ns/op
# Warmup Iteration   3: 49.143 ns/op
Iteration   1: 47.872 ns/op
Iteration   2: 49.088 ns/op
Iteration   3: 47.857 ns/op
Iteration   4: 49.110 ns/op
Iteration   5: 47.900 ns/op
Iteration   6: 49.061 ns/op
Iteration   7: 47.856 ns/op
Iteration   8: 47.916 ns/op
Iteration   9: 47.862 ns/op
Iteration  10: 49.069 ns/op

# Run progress: 17.29% complete, ETA 00:31:52
# Fork: 2 of 2
# Warmup Iteration   1: 67.951 ns/op
# Warmup Iteration   2: 67.385 ns/op
# Warmup Iteration   3: 49.139 ns/op
Iteration   1: 47.871 ns/op
Iteration   2: 49.090 ns/op
Iteration   3: 47.858 ns/op
Iteration   4: 49.121 ns/op
Iteration   5: 47.920 ns/op
Iteration   6: 49.036 ns/op
Iteration   7: 47.861 ns/op
Iteration   8: 47.923 ns/op
Iteration   9: 47.861 ns/op
Iteration  10: 49.110 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.362 ±(99.9%) 0.527 ns/op [Average]
  (min, avg, max) = (47.856, 48.362, 49.121), stdev = 0.607
  CI (99.9%): [47.835, 48.889] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 17.36% complete, ETA 00:31:51
# Fork: 1 of 2
# Warmup Iteration   1: 179.878 ns/op
# Warmup Iteration   2: 199.329 ns/op
# Warmup Iteration   3: 103.913 ns/op
Iteration   1: 105.608 ns/op
Iteration   2: 103.994 ns/op
Iteration   3: 105.662 ns/op
Iteration   4: 109.523 ns/op
Iteration   5: 109.284 ns/op
Iteration   6: 107.744 ns/op
Iteration   7: 109.280 ns/op
Iteration   8: 109.307 ns/op
Iteration   9: 109.337 ns/op
Iteration  10: 107.853 ns/op

# Run progress: 17.43% complete, ETA 00:31:49
# Fork: 2 of 2
# Warmup Iteration   1: 176.210 ns/op
# Warmup Iteration   2: 199.556 ns/op
# Warmup Iteration   3: 103.933 ns/op
Iteration   1: 105.392 ns/op
Iteration   2: 103.979 ns/op
Iteration   3: 105.515 ns/op
Iteration   4: 109.658 ns/op
Iteration   5: 109.313 ns/op
Iteration   6: 107.815 ns/op
Iteration   7: 109.263 ns/op
Iteration   8: 109.296 ns/op
Iteration   9: 109.346 ns/op
Iteration  10: 107.687 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  107.743 ±(99.9%) 1.713 ns/op [Average]
  (min, avg, max) = (103.979, 107.743, 109.658), stdev = 1.973
  CI (99.9%): [106.030, 109.456] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 17.50% complete, ETA 00:31:47
# Fork: 1 of 2
# Warmup Iteration   1: 19.553 ns/op
# Warmup Iteration   2: 22.747 ns/op
# Warmup Iteration   3: 15.138 ns/op
Iteration   1: 16.999 ns/op
Iteration   2: 17.123 ns/op
Iteration   3: 17.042 ns/op
Iteration   4: 15.289 ns/op
Iteration   5: 17.016 ns/op
Iteration   6: 14.961 ns/op
Iteration   7: 17.035 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.040 ns/op
Iteration  10: 15.215 ns/op

# Run progress: 17.57% complete, ETA 00:31:46
# Fork: 2 of 2
# Warmup Iteration   1: 19.311 ns/op
# Warmup Iteration   2: 22.640 ns/op
# Warmup Iteration   3: 15.140 ns/op
Iteration   1: 16.998 ns/op
Iteration   2: 17.129 ns/op
Iteration   3: 17.046 ns/op
Iteration   4: 15.279 ns/op
Iteration   5: 17.021 ns/op
Iteration   6: 14.974 ns/op
Iteration   7: 17.035 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.039 ns/op
Iteration  10: 15.190 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.473 ±(99.9%) 0.774 ns/op [Average]
  (min, avg, max) = (14.961, 16.473, 17.129), stdev = 0.892
  CI (99.9%): [15.699, 17.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 17.64% complete, ETA 00:31:44
# Fork: 1 of 2
# Warmup Iteration   1: 73.152 ns/op
# Warmup Iteration   2: 74.419 ns/op
# Warmup Iteration   3: 50.091 ns/op
Iteration   1: 51.450 ns/op
Iteration   2: 50.072 ns/op
Iteration   3: 51.386 ns/op
Iteration   4: 51.625 ns/op
Iteration   5: 51.420 ns/op
Iteration   6: 50.133 ns/op
Iteration   7: 51.397 ns/op
Iteration   8: 51.417 ns/op
Iteration   9: 51.400 ns/op
Iteration  10: 50.042 ns/op

# Run progress: 17.71% complete, ETA 00:31:42
# Fork: 2 of 2
# Warmup Iteration   1: 72.476 ns/op
# Warmup Iteration   2: 77.212 ns/op
# Warmup Iteration   3: 50.105 ns/op
Iteration   1: 51.429 ns/op
Iteration   2: 50.134 ns/op
Iteration   3: 51.427 ns/op
Iteration   4: 51.525 ns/op
Iteration   5: 51.452 ns/op
Iteration   6: 50.095 ns/op
Iteration   7: 51.433 ns/op
Iteration   8: 51.442 ns/op
Iteration   9: 51.441 ns/op
Iteration  10: 49.992 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.036 ±(99.9%) 0.561 ns/op [Average]
  (min, avg, max) = (49.992, 51.036, 51.625), stdev = 0.646
  CI (99.9%): [50.475, 51.596] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 17.78% complete, ETA 00:31:41
# Fork: 1 of 2
# Warmup Iteration   1: 65.275 ns/op
# Warmup Iteration   2: 63.186 ns/op
# Warmup Iteration   3: 45.784 ns/op
Iteration   1: 44.545 ns/op
Iteration   2: 45.781 ns/op
Iteration   3: 44.405 ns/op
Iteration   4: 46.257 ns/op
Iteration   5: 44.392 ns/op
Iteration   6: 45.830 ns/op
Iteration   7: 44.366 ns/op
Iteration   8: 44.389 ns/op
Iteration   9: 44.399 ns/op
Iteration  10: 45.771 ns/op

# Run progress: 17.85% complete, ETA 00:31:39
# Fork: 2 of 2
# Warmup Iteration   1: 63.939 ns/op
# Warmup Iteration   2: 64.292 ns/op
# Warmup Iteration   3: 45.777 ns/op
Iteration   1: 44.518 ns/op
Iteration   2: 45.816 ns/op
Iteration   3: 44.357 ns/op
Iteration   4: 46.257 ns/op
Iteration   5: 44.446 ns/op
Iteration   6: 45.777 ns/op
Iteration   7: 44.372 ns/op
Iteration   8: 44.376 ns/op
Iteration   9: 44.396 ns/op
Iteration  10: 45.776 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.011 ±(99.9%) 0.663 ns/op [Average]
  (min, avg, max) = (44.357, 45.011, 46.257), stdev = 0.764
  CI (99.9%): [44.348, 45.675] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 17.92% complete, ETA 00:31:37
# Fork: 1 of 2
# Warmup Iteration   1: 151.747 ns/op
# Warmup Iteration   2: 67.433 ns/op
# Warmup Iteration   3: 50.340 ns/op
Iteration   1: 48.973 ns/op
Iteration   2: 50.795 ns/op
Iteration   3: 48.983 ns/op
Iteration   4: 50.806 ns/op
Iteration   5: 49.000 ns/op
Iteration   6: 50.333 ns/op
Iteration   7: 49.010 ns/op
Iteration   8: 49.003 ns/op
Iteration   9: 49.027 ns/op
Iteration  10: 50.039 ns/op

# Run progress: 17.99% complete, ETA 00:31:36
# Fork: 2 of 2
# Warmup Iteration   1: 181.303 ns/op
# Warmup Iteration   2: 77.925 ns/op
# Warmup Iteration   3: 50.346 ns/op
Iteration   1: 48.951 ns/op
Iteration   2: 50.809 ns/op
Iteration   3: 49.013 ns/op
Iteration   4: 52.769 ns/op
Iteration   5: 48.987 ns/op
Iteration   6: 64.485 ns/op
Iteration   7: 49.005 ns/op
Iteration   8: 49.003 ns/op
Iteration   9: 48.997 ns/op
Iteration  10: 50.033 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  50.401 ±(99.9%) 3.011 ns/op [Average]
  (min, avg, max) = (48.951, 50.401, 64.485), stdev = 3.467
  CI (99.9%): [47.390, 53.412] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 18.06% complete, ETA 00:31:34
# Fork: 1 of 2
# Warmup Iteration   1: 66.397 ns/op
# Warmup Iteration   2: 77.887 ns/op
# Warmup Iteration   3: 49.107 ns/op
Iteration   1: 47.862 ns/op
Iteration   2: 49.088 ns/op
Iteration   3: 47.850 ns/op
Iteration   4: 49.076 ns/op
Iteration   5: 47.891 ns/op
Iteration   6: 49.054 ns/op
Iteration   7: 47.858 ns/op
Iteration   8: 47.915 ns/op
Iteration   9: 47.865 ns/op
Iteration  10: 49.110 ns/op

# Run progress: 18.13% complete, ETA 00:31:33
# Fork: 2 of 2
# Warmup Iteration   1: 68.159 ns/op
# Warmup Iteration   2: 68.064 ns/op
# Warmup Iteration   3: 49.119 ns/op
Iteration   1: 47.866 ns/op
Iteration   2: 49.085 ns/op
Iteration   3: 47.872 ns/op
Iteration   4: 49.113 ns/op
Iteration   5: 47.910 ns/op
Iteration   6: 49.044 ns/op
Iteration   7: 47.856 ns/op
Iteration   8: 47.900 ns/op
Iteration   9: 47.870 ns/op
Iteration  10: 49.099 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.359 ±(99.9%) 0.527 ns/op [Average]
  (min, avg, max) = (47.850, 48.359, 49.113), stdev = 0.607
  CI (99.9%): [47.832, 48.887] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 18.19% complete, ETA 00:31:31
# Fork: 1 of 2
# Warmup Iteration   1: 159.679 ns/op
# Warmup Iteration   2: 180.579 ns/op
# Warmup Iteration   3: 91.677 ns/op
Iteration   1: 92.933 ns/op
Iteration   2: 90.902 ns/op
Iteration   3: 92.136 ns/op
Iteration   4: 104.487 ns/op
Iteration   5: 103.710 ns/op
Iteration   6: 101.828 ns/op
Iteration   7: 103.221 ns/op
Iteration   8: 103.469 ns/op
Iteration   9: 103.365 ns/op
Iteration  10: 101.779 ns/op

# Run progress: 18.26% complete, ETA 00:31:29
# Fork: 2 of 2
# Warmup Iteration   1: 160.626 ns/op
# Warmup Iteration   2: 191.068 ns/op
# Warmup Iteration   3: 91.573 ns/op
Iteration   1: 92.671 ns/op
Iteration   2: 90.902 ns/op
Iteration   3: 92.211 ns/op
Iteration   4: 104.479 ns/op
Iteration   5: 103.447 ns/op
Iteration   6: 101.574 ns/op
Iteration   7: 103.221 ns/op
Iteration   8: 103.549 ns/op
Iteration   9: 103.438 ns/op
Iteration  10: 101.564 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  99.744 ±(99.9%) 4.613 ns/op [Average]
  (min, avg, max) = (90.902, 99.744, 104.487), stdev = 5.312
  CI (99.9%): [95.131, 104.357] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 18.33% complete, ETA 00:31:28
# Fork: 1 of 2
# Warmup Iteration   1: 19.842 ns/op
# Warmup Iteration   2: 22.263 ns/op
# Warmup Iteration   3: 15.147 ns/op
Iteration   1: 17.009 ns/op
Iteration   2: 17.150 ns/op
Iteration   3: 17.029 ns/op
Iteration   4: 15.226 ns/op
Iteration   5: 17.008 ns/op
Iteration   6: 14.961 ns/op
Iteration   7: 17.027 ns/op
Iteration   8: 17.008 ns/op
Iteration   9: 17.027 ns/op
Iteration  10: 15.202 ns/op

# Run progress: 18.40% complete, ETA 00:31:26
# Fork: 2 of 2
# Warmup Iteration   1: 19.841 ns/op
# Warmup Iteration   2: 23.584 ns/op
# Warmup Iteration   3: 15.159 ns/op
Iteration   1: 17.012 ns/op
Iteration   2: 17.141 ns/op
Iteration   3: 17.036 ns/op
Iteration   4: 15.285 ns/op
Iteration   5: 17.023 ns/op
Iteration   6: 14.964 ns/op
Iteration   7: 17.036 ns/op
Iteration   8: 17.027 ns/op
Iteration   9: 17.024 ns/op
Iteration  10: 15.204 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.470 ±(99.9%) 0.779 ns/op [Average]
  (min, avg, max) = (14.961, 16.470, 17.150), stdev = 0.897
  CI (99.9%): [15.691, 17.249] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 18.47% complete, ETA 00:31:24
# Fork: 1 of 2
# Warmup Iteration   1: 71.402 ns/op
# Warmup Iteration   2: 76.704 ns/op
# Warmup Iteration   3: 50.129 ns/op
Iteration   1: 51.414 ns/op
Iteration   2: 50.161 ns/op
Iteration   3: 51.430 ns/op
Iteration   4: 51.565 ns/op
Iteration   5: 51.466 ns/op
Iteration   6: 50.106 ns/op
Iteration   7: 51.420 ns/op
Iteration   8: 51.441 ns/op
Iteration   9: 51.414 ns/op
Iteration  10: 50.056 ns/op

# Run progress: 18.54% complete, ETA 00:31:23
# Fork: 2 of 2
# Warmup Iteration   1: 71.396 ns/op
# Warmup Iteration   2: 75.405 ns/op
# Warmup Iteration   3: 50.142 ns/op
Iteration   1: 51.442 ns/op
Iteration   2: 50.111 ns/op
Iteration   3: 51.397 ns/op
Iteration   4: 51.479 ns/op
Iteration   5: 51.437 ns/op
Iteration   6: 50.154 ns/op
Iteration   7: 51.422 ns/op
Iteration   8: 51.440 ns/op
Iteration   9: 51.424 ns/op
Iteration  10: 50.084 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  51.043 ±(99.9%) 0.544 ns/op [Average]
  (min, avg, max) = (50.056, 51.043, 51.565), stdev = 0.627
  CI (99.9%): [50.499, 51.587] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 18.61% complete, ETA 00:31:21
# Fork: 1 of 2
# Warmup Iteration   1: 65.713 ns/op
# Warmup Iteration   2: 61.025 ns/op
# Warmup Iteration   3: 45.810 ns/op
Iteration   1: 44.517 ns/op
Iteration   2: 45.798 ns/op
Iteration   3: 44.377 ns/op
Iteration   4: 46.231 ns/op
Iteration   5: 44.388 ns/op
Iteration   6: 45.791 ns/op
Iteration   7: 44.392 ns/op
Iteration   8: 44.392 ns/op
Iteration   9: 44.371 ns/op
Iteration  10: 45.778 ns/op

# Run progress: 18.68% complete, ETA 00:31:19
# Fork: 2 of 2
# Warmup Iteration   1: 64.088 ns/op
# Warmup Iteration   2: 63.082 ns/op
# Warmup Iteration   3: 45.768 ns/op
Iteration   1: 44.538 ns/op
Iteration   2: 45.798 ns/op
Iteration   3: 44.372 ns/op
Iteration   4: 46.286 ns/op
Iteration   5: 44.404 ns/op
Iteration   6: 45.794 ns/op
Iteration   7: 44.386 ns/op
Iteration   8: 44.420 ns/op
Iteration   9: 44.388 ns/op
Iteration  10: 45.776 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.010 ±(99.9%) 0.663 ns/op [Average]
  (min, avg, max) = (44.371, 45.010, 46.286), stdev = 0.764
  CI (99.9%): [44.347, 45.673] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 18.75% complete, ETA 00:31:18
# Fork: 1 of 2
# Warmup Iteration   1: 155.726 ns/op
# Warmup Iteration   2: 68.724 ns/op
# Warmup Iteration   3: 50.342 ns/op
Iteration   1: 48.968 ns/op
Iteration   2: 50.762 ns/op
Iteration   3: 49.000 ns/op
Iteration   4: 50.809 ns/op
Iteration   5: 49.010 ns/op
Iteration   6: 50.338 ns/op
Iteration   7: 49.008 ns/op
Iteration   8: 48.999 ns/op
Iteration   9: 48.994 ns/op
Iteration  10: 50.044 ns/op

# Run progress: 18.82% complete, ETA 00:31:16
# Fork: 2 of 2
# Warmup Iteration   1: 155.676 ns/op
# Warmup Iteration   2: 69.624 ns/op
# Warmup Iteration   3: 50.342 ns/op
Iteration   1: 48.970 ns/op
Iteration   2: 50.795 ns/op
Iteration   3: 49.011 ns/op
Iteration   4: 50.812 ns/op
Iteration   5: 49.023 ns/op
Iteration   6: 50.345 ns/op
Iteration   7: 49.004 ns/op
Iteration   8: 48.983 ns/op
Iteration   9: 49.011 ns/op
Iteration  10: 50.035 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  49.596 ±(99.9%) 0.677 ns/op [Average]
  (min, avg, max) = (48.968, 49.596, 50.812), stdev = 0.779
  CI (99.9%): [48.919, 50.273] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 18.89% complete, ETA 00:31:14
# Fork: 1 of 2
# Warmup Iteration   1: 67.287 ns/op
# Warmup Iteration   2: 76.431 ns/op
# Warmup Iteration   3: 49.148 ns/op
Iteration   1: 47.850 ns/op
Iteration   2: 49.094 ns/op
Iteration   3: 47.860 ns/op
Iteration   4: 49.116 ns/op
Iteration   5: 47.888 ns/op
Iteration   6: 49.052 ns/op
Iteration   7: 47.867 ns/op
Iteration   8: 47.916 ns/op
Iteration   9: 47.859 ns/op
Iteration  10: 49.153 ns/op

# Run progress: 18.96% complete, ETA 00:31:13
# Fork: 2 of 2
# Warmup Iteration   1: 68.617 ns/op
# Warmup Iteration   2: 71.451 ns/op
# Warmup Iteration   3: 49.132 ns/op
Iteration   1: 47.861 ns/op
Iteration   2: 49.083 ns/op
Iteration   3: 47.854 ns/op
Iteration   4: 49.124 ns/op
Iteration   5: 47.933 ns/op
Iteration   6: 49.031 ns/op
Iteration   7: 47.841 ns/op
Iteration   8: 47.925 ns/op
Iteration   9: 47.858 ns/op
Iteration  10: 49.107 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.364 ±(99.9%) 0.533 ns/op [Average]
  (min, avg, max) = (47.841, 48.364, 49.153), stdev = 0.614
  CI (99.9%): [47.831, 48.896] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 19.03% complete, ETA 00:31:11
# Fork: 1 of 2
# Warmup Iteration   1: 168.120 ns/op
# Warmup Iteration   2: 190.878 ns/op
# Warmup Iteration   3: 91.600 ns/op
Iteration   1: 92.902 ns/op
Iteration   2: 90.975 ns/op
Iteration   3: 92.218 ns/op
Iteration   4: 104.297 ns/op
Iteration   5: 103.522 ns/op
Iteration   6: 101.592 ns/op
Iteration   7: 103.333 ns/op
Iteration   8: 103.545 ns/op
Iteration   9: 103.329 ns/op
Iteration  10: 101.547 ns/op

# Run progress: 19.10% complete, ETA 00:31:09
# Fork: 2 of 2
# Warmup Iteration   1: 161.228 ns/op
# Warmup Iteration   2: 174.251 ns/op
# Warmup Iteration   3: 91.499 ns/op
Iteration   1: 92.947 ns/op
Iteration   2: 90.842 ns/op
Iteration   3: 92.143 ns/op
Iteration   4: 104.338 ns/op
Iteration   5: 103.574 ns/op
Iteration   6: 101.601 ns/op
Iteration   7: 103.114 ns/op
Iteration   8: 103.653 ns/op
Iteration   9: 103.172 ns/op
Iteration  10: 101.776 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  99.721 ±(99.9%) 4.574 ns/op [Average]
  (min, avg, max) = (90.842, 99.721, 104.338), stdev = 5.267
  CI (99.9%): [95.147, 104.295] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 19.17% complete, ETA 00:31:08
# Fork: 1 of 2
# Warmup Iteration   1: 20.954 ns/op
# Warmup Iteration   2: 22.416 ns/op
# Warmup Iteration   3: 15.154 ns/op
Iteration   1: 17.012 ns/op
Iteration   2: 17.142 ns/op
Iteration   3: 17.032 ns/op
Iteration   4: 15.264 ns/op
Iteration   5: 17.014 ns/op
Iteration   6: 14.970 ns/op
Iteration   7: 17.028 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.040 ns/op
Iteration  10: 15.195 ns/op

# Run progress: 19.24% complete, ETA 00:31:06
# Fork: 2 of 2
# Warmup Iteration   1: 19.349 ns/op
# Warmup Iteration   2: 22.693 ns/op
# Warmup Iteration   3: 15.152 ns/op
Iteration   1: 17.013 ns/op
Iteration   2: 17.087 ns/op
Iteration   3: 17.041 ns/op
Iteration   4: 15.219 ns/op
Iteration   5: 17.024 ns/op
Iteration   6: 14.972 ns/op
Iteration   7: 17.029 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.041 ns/op
Iteration  10: 15.201 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.468 ±(99.9%) 0.779 ns/op [Average]
  (min, avg, max) = (14.970, 16.468, 17.142), stdev = 0.897
  CI (99.9%): [15.689, 17.247] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 19.31% complete, ETA 00:31:04
# Fork: 1 of 2
# Warmup Iteration   1: 79.196 ns/op
# Warmup Iteration   2: 81.472 ns/op
# Warmup Iteration   3: 54.399 ns/op
Iteration   1: 55.242 ns/op
Iteration   2: 54.515 ns/op
Iteration   3: 55.272 ns/op
Iteration   4: 55.062 ns/op
Iteration   5: 55.239 ns/op
Iteration   6: 54.401 ns/op
Iteration   7: 55.260 ns/op
Iteration   8: 55.202 ns/op
Iteration   9: 55.230 ns/op
Iteration  10: 54.424 ns/op

# Run progress: 19.38% complete, ETA 00:31:03
# Fork: 2 of 2
# Warmup Iteration   1: 79.472 ns/op
# Warmup Iteration   2: 79.535 ns/op
# Warmup Iteration   3: 54.411 ns/op
Iteration   1: 55.252 ns/op
Iteration   2: 54.386 ns/op
Iteration   3: 55.221 ns/op
Iteration   4: 55.111 ns/op
Iteration   5: 55.210 ns/op
Iteration   6: 54.388 ns/op
Iteration   7: 55.221 ns/op
Iteration   8: 55.233 ns/op
Iteration   9: 55.243 ns/op
Iteration  10: 54.412 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  54.976 ±(99.9%) 0.327 ns/op [Average]
  (min, avg, max) = (54.386, 54.976, 55.272), stdev = 0.377
  CI (99.9%): [54.649, 55.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 19.44% complete, ETA 00:31:01
# Fork: 1 of 2
# Warmup Iteration   1: 69.523 ns/op
# Warmup Iteration   2: 65.695 ns/op
# Warmup Iteration   3: 45.785 ns/op
Iteration   1: 44.507 ns/op
Iteration   2: 45.776 ns/op
Iteration   3: 44.373 ns/op
Iteration   4: 46.245 ns/op
Iteration   5: 44.424 ns/op
Iteration   6: 45.799 ns/op
Iteration   7: 44.387 ns/op
Iteration   8: 44.429 ns/op
Iteration   9: 44.388 ns/op
Iteration  10: 45.857 ns/op

# Run progress: 19.51% complete, ETA 00:31:00
# Fork: 2 of 2
# Warmup Iteration   1: 65.328 ns/op
# Warmup Iteration   2: 64.139 ns/op
# Warmup Iteration   3: 45.773 ns/op
Iteration   1: 44.494 ns/op
Iteration   2: 45.790 ns/op
Iteration   3: 44.369 ns/op
Iteration   4: 46.335 ns/op
Iteration   5: 44.429 ns/op
Iteration   6: 45.808 ns/op
Iteration   7: 44.408 ns/op
Iteration   8: 44.348 ns/op
Iteration   9: 44.392 ns/op
Iteration  10: 45.759 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.016 ±(99.9%) 0.670 ns/op [Average]
  (min, avg, max) = (44.348, 45.016, 46.335), stdev = 0.772
  CI (99.9%): [44.345, 45.686] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 19.58% complete, ETA 00:30:58
# Fork: 1 of 2
# Warmup Iteration   1: 372.933 ns/op
# Warmup Iteration   2: 101.224 ns/op
# Warmup Iteration   3: 67.737 ns/op
Iteration   1: 66.734 ns/op
Iteration   2: 67.822 ns/op
Iteration   3: 66.733 ns/op
Iteration   4: 67.918 ns/op
Iteration   5: 65.549 ns/op
Iteration   6: 67.774 ns/op
Iteration   7: 66.721 ns/op
Iteration   8: 65.614 ns/op
Iteration   9: 66.769 ns/op
Iteration  10: 67.899 ns/op

# Run progress: 19.65% complete, ETA 00:30:56
# Fork: 2 of 2
# Warmup Iteration   1: 442.461 ns/op
# Warmup Iteration   2: 104.167 ns/op
# Warmup Iteration   3: 67.788 ns/op
Iteration   1: 66.687 ns/op
Iteration   2: 67.816 ns/op
Iteration   3: 66.723 ns/op
Iteration   4: 67.895 ns/op
Iteration   5: 65.556 ns/op
Iteration   6: 67.806 ns/op
Iteration   7: 66.735 ns/op
Iteration   8: 65.614 ns/op
Iteration   9: 66.749 ns/op
Iteration  10: 67.903 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  66.951 ±(99.9%) 0.757 ns/op [Average]
  (min, avg, max) = (65.549, 66.951, 67.918), stdev = 0.871
  CI (99.9%): [66.194, 67.707] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 19.72% complete, ETA 00:30:55
# Fork: 1 of 2
# Warmup Iteration   1: 66.709 ns/op
# Warmup Iteration   2: 79.953 ns/op
# Warmup Iteration   3: 49.140 ns/op
Iteration   1: 47.852 ns/op
Iteration   2: 49.092 ns/op
Iteration   3: 47.863 ns/op
Iteration   4: 49.108 ns/op
Iteration   5: 47.922 ns/op
Iteration   6: 49.035 ns/op
Iteration   7: 47.861 ns/op
Iteration   8: 47.928 ns/op
Iteration   9: 47.843 ns/op
Iteration  10: 49.116 ns/op

# Run progress: 19.79% complete, ETA 00:30:53
# Fork: 2 of 2
# Warmup Iteration   1: 67.376 ns/op
# Warmup Iteration   2: 70.828 ns/op
# Warmup Iteration   3: 49.134 ns/op
Iteration   1: 47.873 ns/op
Iteration   2: 49.158 ns/op
Iteration   3: 47.857 ns/op
Iteration   4: 49.131 ns/op
Iteration   5: 47.882 ns/op
Iteration   6: 49.041 ns/op
Iteration   7: 47.860 ns/op
Iteration   8: 47.888 ns/op
Iteration   9: 47.860 ns/op
Iteration  10: 49.078 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.362 ±(99.9%) 0.534 ns/op [Average]
  (min, avg, max) = (47.843, 48.362, 49.158), stdev = 0.614
  CI (99.9%): [47.829, 48.896] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 19.86% complete, ETA 00:30:51
# Fork: 1 of 2
# Warmup Iteration   1: 167.098 ns/op
# Warmup Iteration   2: 180.220 ns/op
# Warmup Iteration   3: 97.398 ns/op
Iteration   1: 98.958 ns/op
Iteration   2: 97.424 ns/op
Iteration   3: 98.928 ns/op
Iteration   4: 106.215 ns/op
Iteration   5: 105.741 ns/op
Iteration   6: 104.053 ns/op
Iteration   7: 105.575 ns/op
Iteration   8: 105.552 ns/op
Iteration   9: 105.767 ns/op
Iteration  10: 104.111 ns/op

# Run progress: 19.93% complete, ETA 00:30:50
# Fork: 2 of 2
# Warmup Iteration   1: 168.647 ns/op
# Warmup Iteration   2: 191.167 ns/op
# Warmup Iteration   3: 96.034 ns/op
Iteration   1: 97.840 ns/op
Iteration   2: 96.046 ns/op
Iteration   3: 97.630 ns/op
Iteration   4: 106.023 ns/op
Iteration   5: 105.175 ns/op
Iteration   6: 103.560 ns/op
Iteration   7: 105.284 ns/op
Iteration   8: 105.247 ns/op
Iteration   9: 105.370 ns/op
Iteration  10: 103.702 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  102.910 ±(99.9%) 3.081 ns/op [Average]
  (min, avg, max) = (96.046, 102.910, 106.215), stdev = 3.548
  CI (99.9%): [99.829, 105.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 20.00% complete, ETA 00:30:48
# Fork: 1 of 2
# Warmup Iteration   1: 19.326 ns/op
# Warmup Iteration   2: 22.701 ns/op
# Warmup Iteration   3: 15.143 ns/op
Iteration   1: 17.015 ns/op
Iteration   2: 17.136 ns/op
Iteration   3: 17.036 ns/op
Iteration   4: 15.294 ns/op
Iteration   5: 17.027 ns/op
Iteration   6: 14.965 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.040 ns/op
Iteration  10: 15.212 ns/op

# Run progress: 20.07% complete, ETA 00:30:46
# Fork: 2 of 2
# Warmup Iteration   1: 19.459 ns/op
# Warmup Iteration   2: 22.544 ns/op
# Warmup Iteration   3: 15.136 ns/op
Iteration   1: 17.015 ns/op
Iteration   2: 17.119 ns/op
Iteration   3: 17.028 ns/op
Iteration   4: 15.279 ns/op
Iteration   5: 17.017 ns/op
Iteration   6: 14.970 ns/op
Iteration   7: 17.034 ns/op
Iteration   8: 17.012 ns/op
Iteration   9: 17.043 ns/op
Iteration  10: 15.193 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.473 ±(99.9%) 0.774 ns/op [Average]
  (min, avg, max) = (14.965, 16.473, 17.136), stdev = 0.891
  CI (99.9%): [15.699, 17.247] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 20.14% complete, ETA 00:30:45
# Fork: 1 of 2
# Warmup Iteration   1: 167.480 ns/op
# Warmup Iteration   2: 131.001 ns/op
# Warmup Iteration   3: 90.608 ns/op
Iteration   1: 92.277 ns/op
Iteration   2: 90.692 ns/op
Iteration   3: 91.965 ns/op
Iteration   4: 91.162 ns/op
Iteration   5: 92.102 ns/op
Iteration   6: 90.704 ns/op
Iteration   7: 92.045 ns/op
Iteration   8: 92.138 ns/op
Iteration   9: 92.059 ns/op
Iteration  10: 90.488 ns/op

# Run progress: 20.21% complete, ETA 00:30:43
# Fork: 2 of 2
# Warmup Iteration   1: 160.917 ns/op
# Warmup Iteration   2: 124.531 ns/op
# Warmup Iteration   3: 90.599 ns/op
Iteration   1: 92.231 ns/op
Iteration   2: 90.724 ns/op
Iteration   3: 91.932 ns/op
Iteration   4: 91.082 ns/op
Iteration   5: 92.017 ns/op
Iteration   6: 90.735 ns/op
Iteration   7: 92.006 ns/op
Iteration   8: 92.182 ns/op
Iteration   9: 91.989 ns/op
Iteration  10: 90.537 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.553 ±(99.9%) 0.591 ns/op [Average]
  (min, avg, max) = (90.488, 91.553, 92.277), stdev = 0.681
  CI (99.9%): [90.962, 92.145] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 20.28% complete, ETA 00:30:42
# Fork: 1 of 2
# Warmup Iteration   1: 63.149 ns/op
# Warmup Iteration   2: 62.945 ns/op
# Warmup Iteration   3: 45.775 ns/op
Iteration   1: 44.498 ns/op
Iteration   2: 45.778 ns/op
Iteration   3: 44.390 ns/op
Iteration   4: 46.226 ns/op
Iteration   5: 44.395 ns/op
Iteration   6: 45.810 ns/op
Iteration   7: 44.381 ns/op
Iteration   8: 44.419 ns/op
Iteration   9: 44.381 ns/op
Iteration  10: 45.766 ns/op

# Run progress: 20.35% complete, ETA 00:30:40
# Fork: 2 of 2
# Warmup Iteration   1: 64.397 ns/op
# Warmup Iteration   2: 66.315 ns/op
# Warmup Iteration   3: 45.774 ns/op
Iteration   1: 44.536 ns/op
Iteration   2: 45.773 ns/op
Iteration   3: 44.391 ns/op
Iteration   4: 46.286 ns/op
Iteration   5: 44.351 ns/op
Iteration   6: 45.815 ns/op
Iteration   7: 44.387 ns/op
Iteration   8: 44.388 ns/op
Iteration   9: 44.374 ns/op
Iteration  10: 45.754 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.005 ±(99.9%) 0.663 ns/op [Average]
  (min, avg, max) = (44.351, 45.005, 46.286), stdev = 0.764
  CI (99.9%): [44.342, 45.668] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 20.42% complete, ETA 00:30:38
# Fork: 1 of 2
# Warmup Iteration   1: 276.695 ns/op
# Warmup Iteration   2: 151.446 ns/op
# Warmup Iteration   3: 108.867 ns/op
Iteration   1: 108.084 ns/op
Iteration   2: 109.422 ns/op
Iteration   3: 108.095 ns/op
Iteration   4: 109.366 ns/op
Iteration   5: 108.050 ns/op
Iteration   6: 108.850 ns/op
Iteration   7: 108.055 ns/op
Iteration   8: 108.107 ns/op
Iteration   9: 108.056 ns/op
Iteration  10: 108.448 ns/op

# Run progress: 20.49% complete, ETA 00:30:37
# Fork: 2 of 2
# Warmup Iteration   1: 322.487 ns/op
# Warmup Iteration   2: 175.321 ns/op
# Warmup Iteration   3: 109.132 ns/op
Iteration   1: 107.841 ns/op
Iteration   2: 109.340 ns/op
Iteration   3: 107.819 ns/op
Iteration   4: 109.643 ns/op
Iteration   5: 107.757 ns/op
Iteration   6: 109.305 ns/op
Iteration   7: 107.779 ns/op
Iteration   8: 107.869 ns/op
Iteration   9: 107.805 ns/op
Iteration  10: 108.860 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  108.428 ±(99.9%) 0.576 ns/op [Average]
  (min, avg, max) = (107.757, 108.428, 109.643), stdev = 0.663
  CI (99.9%): [107.852, 109.003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 20.56% complete, ETA 00:30:35
# Fork: 1 of 2
# Warmup Iteration   1: 67.354 ns/op
# Warmup Iteration   2: 76.733 ns/op
# Warmup Iteration   3: 49.171 ns/op
Iteration   1: 47.885 ns/op
Iteration   2: 49.093 ns/op
Iteration   3: 47.860 ns/op
Iteration   4: 49.106 ns/op
Iteration   5: 47.896 ns/op
Iteration   6: 49.050 ns/op
Iteration   7: 47.861 ns/op
Iteration   8: 47.908 ns/op
Iteration   9: 47.847 ns/op
Iteration  10: 49.062 ns/op

# Run progress: 20.63% complete, ETA 00:30:33
# Fork: 2 of 2
# Warmup Iteration   1: 67.517 ns/op
# Warmup Iteration   2: 68.019 ns/op
# Warmup Iteration   3: 49.105 ns/op
Iteration   1: 47.868 ns/op
Iteration   2: 49.086 ns/op
Iteration   3: 47.859 ns/op
Iteration   4: 49.101 ns/op
Iteration   5: 47.924 ns/op
Iteration   6: 49.058 ns/op
Iteration   7: 47.854 ns/op
Iteration   8: 47.886 ns/op
Iteration   9: 47.868 ns/op
Iteration  10: 49.129 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.360 ±(99.9%) 0.528 ns/op [Average]
  (min, avg, max) = (47.847, 48.360, 49.129), stdev = 0.608
  CI (99.9%): [47.832, 48.888] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 20.69% complete, ETA 00:30:32
# Fork: 1 of 2
# Warmup Iteration   1: 175.554 ns/op
# Warmup Iteration   2: 192.441 ns/op
# Warmup Iteration   3: 96.043 ns/op
Iteration   1: 97.808 ns/op
Iteration   2: 96.189 ns/op
Iteration   3: 97.651 ns/op
Iteration   4: 105.964 ns/op
Iteration   5: 105.236 ns/op
Iteration   6: 103.570 ns/op
Iteration   7: 105.195 ns/op
Iteration   8: 105.223 ns/op
Iteration   9: 105.324 ns/op
Iteration  10: 103.765 ns/op

# Run progress: 20.76% complete, ETA 00:30:30
# Fork: 2 of 2
# Warmup Iteration   1: 181.454 ns/op
# Warmup Iteration   2: 191.902 ns/op
# Warmup Iteration   3: 96.019 ns/op
Iteration   1: 97.728 ns/op
Iteration   2: 96.041 ns/op
Iteration   3: 97.470 ns/op
Iteration   4: 105.970 ns/op
Iteration   5: 105.120 ns/op
Iteration   6: 103.698 ns/op
Iteration   7: 105.281 ns/op
Iteration   8: 105.063 ns/op
Iteration   9: 105.250 ns/op
Iteration  10: 103.801 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  102.567 ±(99.9%) 3.236 ns/op [Average]
  (min, avg, max) = (96.041, 102.567, 105.970), stdev = 3.726
  CI (99.9%): [99.332, 105.803] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 20.83% complete, ETA 00:30:28
# Fork: 1 of 2
# Warmup Iteration   1: 19.821 ns/op
# Warmup Iteration   2: 23.994 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.022 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.099 ns/op
Iteration   6: 15.350 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.012 ns/op
Iteration  10: 14.954 ns/op

# Run progress: 20.90% complete, ETA 00:30:27
# Fork: 2 of 2
# Warmup Iteration   1: 19.608 ns/op
# Warmup Iteration   2: 22.933 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.079 ns/op
Iteration   2: 15.263 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.098 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.004 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.286 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.954, 16.286, 17.099), stdev = 0.954
  CI (99.9%): [15.458, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 20.97% complete, ETA 00:30:25
# Fork: 1 of 2
# Warmup Iteration   1: 1144.983 ns/op
# Warmup Iteration   2: 441.692 ns/op
# Warmup Iteration   3: 313.377 ns/op
Iteration   1: 314.687 ns/op
Iteration   2: 313.650 ns/op
Iteration   3: 315.483 ns/op
Iteration   4: 313.976 ns/op
Iteration   5: 314.807 ns/op
Iteration   6: 313.978 ns/op
Iteration   7: 327.913 ns/op
Iteration   8: 315.441 ns/op
Iteration   9: 315.735 ns/op
Iteration  10: 313.206 ns/op

# Run progress: 21.04% complete, ETA 00:30:24
# Fork: 2 of 2
# Warmup Iteration   1: 1164.621 ns/op
# Warmup Iteration   2: 398.683 ns/op
# Warmup Iteration   3: 314.167 ns/op
Iteration   1: 316.025 ns/op
Iteration   2: 314.719 ns/op
Iteration   3: 316.381 ns/op
Iteration   4: 314.915 ns/op
Iteration   5: 316.036 ns/op
Iteration   6: 314.284 ns/op
Iteration   7: 316.081 ns/op
Iteration   8: 315.812 ns/op
Iteration   9: 315.802 ns/op
Iteration  10: 313.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  315.645 ±(99.9%) 2.634 ns/op [Average]
  (min, avg, max) = (313.206, 315.645, 327.913), stdev = 3.033
  CI (99.9%): [313.011, 318.279] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 21.11% complete, ETA 00:30:22
# Fork: 1 of 2
# Warmup Iteration   1: 371.863 ns/op
# Warmup Iteration   2: 349.363 ns/op
# Warmup Iteration   3: 262.194 ns/op
Iteration   1: 262.285 ns/op
Iteration   2: 262.446 ns/op
Iteration   3: 260.552 ns/op
Iteration   4: 262.585 ns/op
Iteration   5: 260.948 ns/op
Iteration   6: 262.180 ns/op
Iteration   7: 260.506 ns/op
Iteration   8: 260.520 ns/op
Iteration   9: 260.547 ns/op
Iteration  10: 262.213 ns/op

# Run progress: 21.18% complete, ETA 00:30:20
# Fork: 2 of 2
# Warmup Iteration   1: 398.775 ns/op
# Warmup Iteration   2: 382.521 ns/op
# Warmup Iteration   3: 270.838 ns/op
Iteration   1: 270.212 ns/op
Iteration   2: 271.232 ns/op
Iteration   3: 269.872 ns/op
Iteration   4: 271.090 ns/op
Iteration   5: 270.081 ns/op
Iteration   6: 271.159 ns/op
Iteration   7: 270.064 ns/op
Iteration   8: 269.535 ns/op
Iteration   9: 269.794 ns/op
Iteration  10: 271.453 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  265.964 ±(99.9%) 4.056 ns/op [Average]
  (min, avg, max) = (260.506, 265.964, 271.453), stdev = 4.671
  CI (99.9%): [261.907, 270.020] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 21.25% complete, ETA 00:30:19
# Fork: 1 of 2
# Warmup Iteration   1: 7652.684 ns/op
# Warmup Iteration   2: 424.209 ns/op
# Warmup Iteration   3: 318.525 ns/op
Iteration   1: 317.619 ns/op
Iteration   2: 317.232 ns/op
Iteration   3: 317.029 ns/op
Iteration   4: 319.043 ns/op
Iteration   5: 316.526 ns/op
Iteration   6: 318.093 ns/op
Iteration   7: 317.486 ns/op
Iteration   8: 317.841 ns/op
Iteration   9: 339.289 ns/op
Iteration  10: 318.495 ns/op

# Run progress: 21.32% complete, ETA 00:30:17
# Fork: 2 of 2
# Warmup Iteration   1: 16050.590 ns/op
# Warmup Iteration   2: 428.076 ns/op
# Warmup Iteration   3: 343.674 ns/op
Iteration   1: 318.073 ns/op
Iteration   2: 318.260 ns/op
Iteration   3: 318.419 ns/op
Iteration   4: 319.935 ns/op
Iteration   5: 318.976 ns/op
Iteration   6: 319.004 ns/op
Iteration   7: 318.592 ns/op
Iteration   8: 317.882 ns/op
Iteration   9: 317.967 ns/op
Iteration  10: 319.133 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  319.245 ±(99.9%) 4.156 ns/op [Average]
  (min, avg, max) = (316.526, 319.245, 339.289), stdev = 4.787
  CI (99.9%): [315.088, 323.401] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 21.39% complete, ETA 00:30:15
# Fork: 1 of 2
# Warmup Iteration   1: 336.916 ns/op
# Warmup Iteration   2: 270.064 ns/op
# Warmup Iteration   3: 211.669 ns/op
Iteration   1: 210.509 ns/op
Iteration   2: 211.705 ns/op
Iteration   3: 210.125 ns/op
Iteration   4: 212.009 ns/op
Iteration   5: 210.001 ns/op
Iteration   6: 211.763 ns/op
Iteration   7: 210.237 ns/op
Iteration   8: 210.095 ns/op
Iteration   9: 210.402 ns/op
Iteration  10: 211.720 ns/op

# Run progress: 21.46% complete, ETA 00:30:14
# Fork: 2 of 2
# Warmup Iteration   1: 323.567 ns/op
# Warmup Iteration   2: 289.866 ns/op
# Warmup Iteration   3: 211.012 ns/op
Iteration   1: 210.538 ns/op
Iteration   2: 210.915 ns/op
Iteration   3: 209.331 ns/op
Iteration   4: 211.380 ns/op
Iteration   5: 209.363 ns/op
Iteration   6: 210.767 ns/op
Iteration   7: 209.333 ns/op
Iteration   8: 209.281 ns/op
Iteration   9: 209.364 ns/op
Iteration  10: 210.806 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  210.482 ±(99.9%) 0.781 ns/op [Average]
  (min, avg, max) = (209.281, 210.482, 212.009), stdev = 0.899
  CI (99.9%): [209.702, 211.263] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 21.53% complete, ETA 00:30:12
# Fork: 1 of 2
# Warmup Iteration   1: 1164.230 ns/op
# Warmup Iteration   2: 1048.965 ns/op
# Warmup Iteration   3: 756.399 ns/op
Iteration   1: 752.806 ns/op
Iteration   2: 757.103 ns/op
Iteration   3: 750.526 ns/op
Iteration   4: 800.992 ns/op
Iteration   5: 769.551 ns/op
Iteration   6: 768.786 ns/op
Iteration   7: 769.771 ns/op
Iteration   8: 776.394 ns/op
Iteration   9: 769.850 ns/op
Iteration  10: 770.252 ns/op

# Run progress: 21.60% complete, ETA 00:30:10
# Fork: 2 of 2
# Warmup Iteration   1: 1220.218 ns/op
# Warmup Iteration   2: 1073.659 ns/op
# Warmup Iteration   3: 740.890 ns/op
Iteration   1: 745.053 ns/op
Iteration   2: 741.150 ns/op
Iteration   3: 742.654 ns/op
Iteration   4: 768.474 ns/op
Iteration   5: 760.640 ns/op
Iteration   6: 759.756 ns/op
Iteration   7: 760.985 ns/op
Iteration   8: 760.908 ns/op
Iteration   9: 760.841 ns/op
Iteration  10: 759.894 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  762.319 ±(99.9%) 11.636 ns/op [Average]
  (min, avg, max) = (741.150, 762.319, 800.992), stdev = 13.400
  CI (99.9%): [750.683, 773.956] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 21.67% complete, ETA 00:30:09
# Fork: 1 of 2
# Warmup Iteration   1: 19.230 ns/op
# Warmup Iteration   2: 22.728 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.261 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.016 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.374 ns/op
Iteration   7: 17.008 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.977 ns/op

# Run progress: 21.74% complete, ETA 00:30:07
# Fork: 2 of 2
# Warmup Iteration   1: 19.647 ns/op
# Warmup Iteration   2: 20.952 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.278 ns/op
Iteration   3: 17.022 ns/op
Iteration   4: 15.019 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.410 ns/op
Iteration   7: 17.022 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.974 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.974, 16.291, 17.106), stdev = 0.952
  CI (99.9%): [15.465, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 21.81% complete, ETA 00:30:06
# Fork: 1 of 2
# Warmup Iteration   1: 622.199 ns/op
# Warmup Iteration   2: 327.998 ns/op
# Warmup Iteration   3: 237.979 ns/op
Iteration   1: 239.829 ns/op
Iteration   2: 241.694 ns/op
Iteration   3: 239.421 ns/op
Iteration   4: 242.907 ns/op
Iteration   5: 239.947 ns/op
Iteration   6: 238.287 ns/op
Iteration   7: 239.649 ns/op
Iteration   8: 239.669 ns/op
Iteration   9: 239.518 ns/op
Iteration  10: 238.175 ns/op

# Run progress: 21.88% complete, ETA 00:30:04
# Fork: 2 of 2
# Warmup Iteration   1: 688.985 ns/op
# Warmup Iteration   2: 325.318 ns/op
# Warmup Iteration   3: 237.345 ns/op
Iteration   1: 238.578 ns/op
Iteration   2: 241.367 ns/op
Iteration   3: 239.208 ns/op
Iteration   4: 240.138 ns/op
Iteration   5: 239.249 ns/op
Iteration   6: 237.460 ns/op
Iteration   7: 239.229 ns/op
Iteration   8: 239.302 ns/op
Iteration   9: 239.249 ns/op
Iteration  10: 237.611 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  239.524 ±(99.9%) 1.141 ns/op [Average]
  (min, avg, max) = (237.460, 239.524, 242.907), stdev = 1.314
  CI (99.9%): [238.383, 240.665] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 21.94% complete, ETA 00:30:02
# Fork: 1 of 2
# Warmup Iteration   1: 495.203 ns/op
# Warmup Iteration   2: 464.700 ns/op
# Warmup Iteration   3: 342.366 ns/op
Iteration   1: 340.899 ns/op
Iteration   2: 342.313 ns/op
Iteration   3: 340.970 ns/op
Iteration   4: 343.466 ns/op
Iteration   5: 341.028 ns/op
Iteration   6: 342.320 ns/op
Iteration   7: 341.012 ns/op
Iteration   8: 340.949 ns/op
Iteration   9: 341.020 ns/op
Iteration  10: 342.452 ns/op

# Run progress: 22.01% complete, ETA 00:30:01
# Fork: 2 of 2
# Warmup Iteration   1: 531.227 ns/op
# Warmup Iteration   2: 439.324 ns/op
# Warmup Iteration   3: 342.367 ns/op
Iteration   1: 341.003 ns/op
Iteration   2: 342.313 ns/op
Iteration   3: 340.998 ns/op
Iteration   4: 343.572 ns/op
Iteration   5: 341.126 ns/op
Iteration   6: 342.261 ns/op
Iteration   7: 341.038 ns/op
Iteration   8: 341.355 ns/op
Iteration   9: 341.029 ns/op
Iteration  10: 342.500 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  341.681 ±(99.9%) 0.764 ns/op [Average]
  (min, avg, max) = (340.899, 341.681, 343.572), stdev = 0.880
  CI (99.9%): [340.917, 342.445] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 22.08% complete, ETA 00:29:59
# Fork: 1 of 2
# Warmup Iteration   1: 693.055 ns/op
# Warmup Iteration   2: 367.636 ns/op
# Warmup Iteration   3: 250.627 ns/op
Iteration   1: 249.284 ns/op
Iteration   2: 251.282 ns/op
Iteration   3: 249.422 ns/op
Iteration   4: 251.725 ns/op
Iteration   5: 249.920 ns/op
Iteration   6: 250.661 ns/op
Iteration   7: 249.758 ns/op
Iteration   8: 249.659 ns/op
Iteration   9: 250.409 ns/op
Iteration  10: 251.730 ns/op

# Run progress: 22.15% complete, ETA 00:29:57
# Fork: 2 of 2
# Warmup Iteration   1: 778.450 ns/op
# Warmup Iteration   2: 372.050 ns/op
# Warmup Iteration   3: 249.780 ns/op
Iteration   1: 247.971 ns/op
Iteration   2: 250.680 ns/op
Iteration   3: 248.481 ns/op
Iteration   4: 250.605 ns/op
Iteration   5: 248.057 ns/op
Iteration   6: 250.120 ns/op
Iteration   7: 248.042 ns/op
Iteration   8: 247.985 ns/op
Iteration   9: 248.418 ns/op
Iteration  10: 250.181 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  249.720 ±(99.9%) 1.075 ns/op [Average]
  (min, avg, max) = (247.971, 249.720, 251.730), stdev = 1.238
  CI (99.9%): [248.644, 250.795] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 22.22% complete, ETA 00:29:56
# Fork: 1 of 2
# Warmup Iteration   1: 448.730 ns/op
# Warmup Iteration   2: 371.474 ns/op
# Warmup Iteration   3: 288.491 ns/op
Iteration   1: 286.622 ns/op
Iteration   2: 288.695 ns/op
Iteration   3: 286.299 ns/op
Iteration   4: 290.087 ns/op
Iteration   5: 286.511 ns/op
Iteration   6: 288.286 ns/op
Iteration   7: 286.493 ns/op
Iteration   8: 286.358 ns/op
Iteration   9: 286.663 ns/op
Iteration  10: 289.012 ns/op

# Run progress: 22.29% complete, ETA 00:29:54
# Fork: 2 of 2
# Warmup Iteration   1: 485.787 ns/op
# Warmup Iteration   2: 371.408 ns/op
# Warmup Iteration   3: 288.893 ns/op
Iteration   1: 286.755 ns/op
Iteration   2: 288.559 ns/op
Iteration   3: 286.231 ns/op
Iteration   4: 290.128 ns/op
Iteration   5: 286.523 ns/op
Iteration   6: 288.649 ns/op
Iteration   7: 286.838 ns/op
Iteration   8: 286.533 ns/op
Iteration   9: 286.976 ns/op
Iteration  10: 288.851 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  287.554 ±(99.9%) 1.146 ns/op [Average]
  (min, avg, max) = (286.231, 287.554, 290.128), stdev = 1.320
  CI (99.9%): [286.407, 288.700] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 22.36% complete, ETA 00:29:53
# Fork: 1 of 2
# Warmup Iteration   1: 1124.668 ns/op
# Warmup Iteration   2: 997.023 ns/op
# Warmup Iteration   3: 725.174 ns/op
Iteration   1: 729.157 ns/op
Iteration   2: 725.023 ns/op
Iteration   3: 726.587 ns/op
Iteration   4: 749.289 ns/op
Iteration   5: 744.197 ns/op
Iteration   6: 743.217 ns/op
Iteration   7: 744.049 ns/op
Iteration   8: 744.408 ns/op
Iteration   9: 744.017 ns/op
Iteration  10: 743.150 ns/op

# Run progress: 22.43% complete, ETA 00:29:51
# Fork: 2 of 2
# Warmup Iteration   1: 1228.316 ns/op
# Warmup Iteration   2: 975.761 ns/op
# Warmup Iteration   3: 697.092 ns/op
Iteration   1: 700.928 ns/op
Iteration   2: 708.131 ns/op
Iteration   3: 698.319 ns/op
Iteration   4: 737.669 ns/op
Iteration   5: 717.683 ns/op
Iteration   6: 719.800 ns/op
Iteration   7: 731.628 ns/op
Iteration   8: 717.954 ns/op
Iteration   9: 724.062 ns/op
Iteration  10: 729.499 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  728.938 ±(99.9%) 13.158 ns/op [Average]
  (min, avg, max) = (698.319, 728.938, 749.289), stdev = 15.152
  CI (99.9%): [715.781, 742.096] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 22.50% complete, ETA 00:29:49
# Fork: 1 of 2
# Warmup Iteration   1: 19.343 ns/op
# Warmup Iteration   2: 23.074 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.079 ns/op
Iteration   2: 15.263 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.371 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.026 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.970 ns/op

# Run progress: 22.57% complete, ETA 00:29:48
# Fork: 2 of 2
# Warmup Iteration   1: 19.788 ns/op
# Warmup Iteration   2: 22.876 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.061 ns/op
Iteration   2: 15.280 ns/op
Iteration   3: 17.021 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.102 ns/op
Iteration   6: 15.406 ns/op
Iteration   7: 17.007 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.027 ns/op
Iteration  10: 14.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.970, 16.291, 17.113), stdev = 0.952
  CI (99.9%): [15.464, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 22.64% complete, ETA 00:29:46
# Fork: 1 of 2
# Warmup Iteration   1: 656.556 ns/op
# Warmup Iteration   2: 336.677 ns/op
# Warmup Iteration   3: 237.330 ns/op
Iteration   1: 238.863 ns/op
Iteration   2: 241.260 ns/op
Iteration   3: 239.035 ns/op
Iteration   4: 240.363 ns/op
Iteration   5: 239.184 ns/op
Iteration   6: 237.041 ns/op
Iteration   7: 238.991 ns/op
Iteration   8: 239.291 ns/op
Iteration   9: 239.140 ns/op
Iteration  10: 237.297 ns/op

# Run progress: 22.71% complete, ETA 00:29:44
# Fork: 2 of 2
# Warmup Iteration   1: 762.129 ns/op
# Warmup Iteration   2: 332.938 ns/op
# Warmup Iteration   3: 237.548 ns/op
Iteration   1: 238.665 ns/op
Iteration   2: 241.515 ns/op
Iteration   3: 238.888 ns/op
Iteration   4: 240.462 ns/op
Iteration   5: 239.093 ns/op
Iteration   6: 237.109 ns/op
Iteration   7: 238.841 ns/op
Iteration   8: 238.734 ns/op
Iteration   9: 238.744 ns/op
Iteration  10: 237.563 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  239.004 ±(99.9%) 1.059 ns/op [Average]
  (min, avg, max) = (237.041, 239.004, 241.515), stdev = 1.220
  CI (99.9%): [237.945, 240.063] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 22.78% complete, ETA 00:29:43
# Fork: 1 of 2
# Warmup Iteration   1: 500.525 ns/op
# Warmup Iteration   2: 434.166 ns/op
# Warmup Iteration   3: 342.373 ns/op
Iteration   1: 341.006 ns/op
Iteration   2: 342.249 ns/op
Iteration   3: 340.967 ns/op
Iteration   4: 343.497 ns/op
Iteration   5: 341.167 ns/op
Iteration   6: 342.293 ns/op
Iteration   7: 340.868 ns/op
Iteration   8: 340.954 ns/op
Iteration   9: 340.979 ns/op
Iteration  10: 342.580 ns/op

# Run progress: 22.85% complete, ETA 00:29:41
# Fork: 2 of 2
# Warmup Iteration   1: 482.656 ns/op
# Warmup Iteration   2: 472.170 ns/op
# Warmup Iteration   3: 338.820 ns/op
Iteration   1: 337.333 ns/op
Iteration   2: 339.281 ns/op
Iteration   3: 337.452 ns/op
Iteration   4: 339.735 ns/op
Iteration   5: 337.268 ns/op
Iteration   6: 339.144 ns/op
Iteration   7: 337.402 ns/op
Iteration   8: 337.427 ns/op
Iteration   9: 337.460 ns/op
Iteration  10: 338.306 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  339.868 ±(99.9%) 1.780 ns/op [Average]
  (min, avg, max) = (337.268, 339.868, 343.497), stdev = 2.050
  CI (99.9%): [338.088, 341.649] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 22.92% complete, ETA 00:29:40
# Fork: 1 of 2
# Warmup Iteration   1: 728.953 ns/op
# Warmup Iteration   2: 321.228 ns/op
# Warmup Iteration   3: 251.512 ns/op
Iteration   1: 250.041 ns/op
Iteration   2: 251.897 ns/op
Iteration   3: 249.423 ns/op
Iteration   4: 251.703 ns/op
Iteration   5: 249.780 ns/op
Iteration   6: 251.429 ns/op
Iteration   7: 250.194 ns/op
Iteration   8: 249.703 ns/op
Iteration   9: 250.194 ns/op
Iteration  10: 251.395 ns/op

# Run progress: 22.99% complete, ETA 00:29:38
# Fork: 2 of 2
# Warmup Iteration   1: 814.668 ns/op
# Warmup Iteration   2: 359.361 ns/op
# Warmup Iteration   3: 250.783 ns/op
Iteration   1: 249.239 ns/op
Iteration   2: 251.114 ns/op
Iteration   3: 248.929 ns/op
Iteration   4: 251.628 ns/op
Iteration   5: 248.745 ns/op
Iteration   6: 250.774 ns/op
Iteration   7: 249.002 ns/op
Iteration   8: 248.694 ns/op
Iteration   9: 248.951 ns/op
Iteration  10: 250.920 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  250.188 ±(99.9%) 0.951 ns/op [Average]
  (min, avg, max) = (248.694, 250.188, 251.897), stdev = 1.095
  CI (99.9%): [249.237, 251.138] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 23.06% complete, ETA 00:29:36
# Fork: 1 of 2
# Warmup Iteration   1: 444.040 ns/op
# Warmup Iteration   2: 410.913 ns/op
# Warmup Iteration   3: 288.743 ns/op
Iteration   1: 286.689 ns/op
Iteration   2: 288.364 ns/op
Iteration   3: 286.213 ns/op
Iteration   4: 315.400 ns/op
Iteration   5: 286.671 ns/op
Iteration   6: 288.633 ns/op
Iteration   7: 286.542 ns/op
Iteration   8: 286.420 ns/op
Iteration   9: 286.219 ns/op
Iteration  10: 288.877 ns/op

# Run progress: 23.13% complete, ETA 00:29:35
# Fork: 2 of 2
# Warmup Iteration   1: 437.880 ns/op
# Warmup Iteration   2: 429.936 ns/op
# Warmup Iteration   3: 288.648 ns/op
Iteration   1: 286.420 ns/op
Iteration   2: 288.319 ns/op
Iteration   3: 286.343 ns/op
Iteration   4: 289.905 ns/op
Iteration   5: 286.501 ns/op
Iteration   6: 288.746 ns/op
Iteration   7: 286.461 ns/op
Iteration   8: 286.489 ns/op
Iteration   9: 286.390 ns/op
Iteration  10: 288.954 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  288.728 ±(99.9%) 5.549 ns/op [Average]
  (min, avg, max) = (286.213, 288.728, 315.400), stdev = 6.390
  CI (99.9%): [283.179, 294.277] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 23.19% complete, ETA 00:29:33
# Fork: 1 of 2
# Warmup Iteration   1: 1186.572 ns/op
# Warmup Iteration   2: 1005.961 ns/op
# Warmup Iteration   3: 739.526 ns/op
Iteration   1: 743.171 ns/op
Iteration   2: 739.010 ns/op
Iteration   3: 741.856 ns/op
Iteration   4: 761.496 ns/op
Iteration   5: 758.764 ns/op
Iteration   6: 758.159 ns/op
Iteration   7: 759.012 ns/op
Iteration   8: 756.023 ns/op
Iteration   9: 758.605 ns/op
Iteration  10: 759.507 ns/op

# Run progress: 23.26% complete, ETA 00:29:31
# Fork: 2 of 2
# Warmup Iteration   1: 1196.089 ns/op
# Warmup Iteration   2: 1043.931 ns/op
# Warmup Iteration   3: 725.406 ns/op
Iteration   1: 729.787 ns/op
Iteration   2: 735.708 ns/op
Iteration   3: 727.233 ns/op
Iteration   4: 749.850 ns/op
Iteration   5: 745.284 ns/op
Iteration   6: 743.975 ns/op
Iteration   7: 753.925 ns/op
Iteration   8: 745.184 ns/op
Iteration   9: 745.001 ns/op
Iteration  10: 744.052 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  747.780 ±(99.9%) 8.868 ns/op [Average]
  (min, avg, max) = (727.233, 747.780, 761.496), stdev = 10.212
  CI (99.9%): [738.913, 756.648] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 23.33% complete, ETA 00:29:30
# Fork: 1 of 2
# Warmup Iteration   1: 19.478 ns/op
# Warmup Iteration   2: 22.880 ns/op
# Warmup Iteration   3: 15.023 ns/op
Iteration   1: 17.061 ns/op
Iteration   2: 15.276 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.001 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.965 ns/op

# Run progress: 23.40% complete, ETA 00:29:28
# Fork: 2 of 2
# Warmup Iteration   1: 19.857 ns/op
# Warmup Iteration   2: 21.795 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.260 ns/op
Iteration   3: 17.012 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.381 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.004 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.959 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.959, 16.287, 17.108), stdev = 0.951
  CI (99.9%): [15.461, 17.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 23.47% complete, ETA 00:29:27
# Fork: 1 of 2
# Warmup Iteration   1: 540.932 ns/op
# Warmup Iteration   2: 340.922 ns/op
# Warmup Iteration   3: 238.071 ns/op
Iteration   1: 237.852 ns/op
Iteration   2: 239.362 ns/op
Iteration   3: 237.654 ns/op
Iteration   4: 239.353 ns/op
Iteration   5: 237.716 ns/op
Iteration   6: 238.525 ns/op
Iteration   7: 237.898 ns/op
Iteration   8: 237.720 ns/op
Iteration   9: 237.516 ns/op
Iteration  10: 238.299 ns/op

# Run progress: 23.54% complete, ETA 00:29:25
# Fork: 2 of 2
# Warmup Iteration   1: 543.524 ns/op
# Warmup Iteration   2: 334.057 ns/op
# Warmup Iteration   3: 243.696 ns/op
Iteration   1: 243.850 ns/op
Iteration   2: 244.800 ns/op
Iteration   3: 244.062 ns/op
Iteration   4: 245.708 ns/op
Iteration   5: 244.207 ns/op
Iteration   6: 245.325 ns/op
Iteration   7: 243.389 ns/op
Iteration   8: 243.033 ns/op
Iteration   9: 244.918 ns/op
Iteration  10: 244.854 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  241.302 ±(99.9%) 2.849 ns/op [Average]
  (min, avg, max) = (237.516, 241.302, 245.708), stdev = 3.281
  CI (99.9%): [238.453, 244.151] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 23.61% complete, ETA 00:29:23
# Fork: 1 of 2
# Warmup Iteration   1: 557.525 ns/op
# Warmup Iteration   2: 450.036 ns/op
# Warmup Iteration   3: 342.372 ns/op
Iteration   1: 340.916 ns/op
Iteration   2: 342.144 ns/op
Iteration   3: 340.965 ns/op
Iteration   4: 343.471 ns/op
Iteration   5: 341.142 ns/op
Iteration   6: 342.142 ns/op
Iteration   7: 340.827 ns/op
Iteration   8: 341.034 ns/op
Iteration   9: 340.846 ns/op
Iteration  10: 342.416 ns/op

# Run progress: 23.68% complete, ETA 00:29:22
# Fork: 2 of 2
# Warmup Iteration   1: 499.573 ns/op
# Warmup Iteration   2: 490.768 ns/op
# Warmup Iteration   3: 350.416 ns/op
Iteration   1: 345.417 ns/op
Iteration   2: 347.477 ns/op
Iteration   3: 345.273 ns/op
Iteration   4: 350.105 ns/op
Iteration   5: 344.947 ns/op
Iteration   6: 347.324 ns/op
Iteration   7: 345.425 ns/op
Iteration   8: 345.293 ns/op
Iteration   9: 345.383 ns/op
Iteration  10: 348.706 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  344.063 ±(99.9%) 2.504 ns/op [Average]
  (min, avg, max) = (340.827, 344.063, 350.105), stdev = 2.884
  CI (99.9%): [341.558, 346.567] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 23.75% complete, ETA 00:29:20
# Fork: 1 of 2
# Warmup Iteration   1: 827.671 ns/op
# Warmup Iteration   2: 383.108 ns/op
# Warmup Iteration   3: 269.800 ns/op
Iteration   1: 268.696 ns/op
Iteration   2: 269.782 ns/op
Iteration   3: 268.815 ns/op
Iteration   4: 270.112 ns/op
Iteration   5: 268.668 ns/op
Iteration   6: 269.526 ns/op
Iteration   7: 268.641 ns/op
Iteration   8: 269.136 ns/op
Iteration   9: 268.813 ns/op
Iteration  10: 269.893 ns/op

# Run progress: 23.82% complete, ETA 00:29:18
# Fork: 2 of 2
# Warmup Iteration   1: 758.233 ns/op
# Warmup Iteration   2: 345.004 ns/op
# Warmup Iteration   3: 268.787 ns/op
Iteration   1: 267.963 ns/op
Iteration   2: 268.692 ns/op
Iteration   3: 267.959 ns/op
Iteration   4: 269.013 ns/op
Iteration   5: 267.864 ns/op
Iteration   6: 268.504 ns/op
Iteration   7: 267.827 ns/op
Iteration   8: 267.973 ns/op
Iteration   9: 268.092 ns/op
Iteration  10: 268.786 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  268.738 ±(99.9%) 0.600 ns/op [Average]
  (min, avg, max) = (267.827, 268.738, 270.112), stdev = 0.690
  CI (99.9%): [268.138, 269.337] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 23.89% complete, ETA 00:29:17
# Fork: 1 of 2
# Warmup Iteration   1: 499.896 ns/op
# Warmup Iteration   2: 362.932 ns/op
# Warmup Iteration   3: 288.601 ns/op
Iteration   1: 286.736 ns/op
Iteration   2: 288.352 ns/op
Iteration   3: 285.999 ns/op
Iteration   4: 290.202 ns/op
Iteration   5: 286.808 ns/op
Iteration   6: 288.544 ns/op
Iteration   7: 286.583 ns/op
Iteration   8: 286.827 ns/op
Iteration   9: 286.356 ns/op
Iteration  10: 288.854 ns/op

# Run progress: 23.96% complete, ETA 00:29:15
# Fork: 2 of 2
# Warmup Iteration   1: 447.435 ns/op
# Warmup Iteration   2: 370.938 ns/op
# Warmup Iteration   3: 288.635 ns/op
Iteration   1: 286.646 ns/op
Iteration   2: 287.959 ns/op
Iteration   3: 286.071 ns/op
Iteration   4: 296.549 ns/op
Iteration   5: 286.559 ns/op
Iteration   6: 288.633 ns/op
Iteration   7: 286.353 ns/op
Iteration   8: 286.912 ns/op
Iteration   9: 286.397 ns/op
Iteration  10: 288.861 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  287.810 ±(99.9%) 2.058 ns/op [Average]
  (min, avg, max) = (285.999, 287.810, 296.549), stdev = 2.370
  CI (99.9%): [285.752, 289.868] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 24.03% complete, ETA 00:29:14
# Fork: 1 of 2
# Warmup Iteration   1: 1228.344 ns/op
# Warmup Iteration   2: 917.847 ns/op
# Warmup Iteration   3: 696.687 ns/op
Iteration   1: 700.832 ns/op
Iteration   2: 696.207 ns/op
Iteration   3: 698.729 ns/op
Iteration   4: 722.568 ns/op
Iteration   5: 717.871 ns/op
Iteration   6: 717.642 ns/op
Iteration   7: 718.548 ns/op
Iteration   8: 718.821 ns/op
Iteration   9: 717.592 ns/op
Iteration  10: 717.724 ns/op

# Run progress: 24.10% complete, ETA 00:29:12
# Fork: 2 of 2
# Warmup Iteration   1: 1278.491 ns/op
# Warmup Iteration   2: 959.292 ns/op
# Warmup Iteration   3: 725.543 ns/op
Iteration   1: 729.938 ns/op
Iteration   2: 725.633 ns/op
Iteration   3: 726.964 ns/op
Iteration   4: 749.757 ns/op
Iteration   5: 745.173 ns/op
Iteration   6: 743.975 ns/op
Iteration   7: 744.930 ns/op
Iteration   8: 744.876 ns/op
Iteration   9: 745.036 ns/op
Iteration  10: 743.991 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  726.340 ±(99.9%) 14.542 ns/op [Average]
  (min, avg, max) = (696.207, 726.340, 749.757), stdev = 16.747
  CI (99.9%): [711.798, 740.883] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 24.17% complete, ETA 00:29:10
# Fork: 1 of 2
# Warmup Iteration   1: 19.656 ns/op
# Warmup Iteration   2: 20.834 ns/op
# Warmup Iteration   3: 15.023 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.271 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.370 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.009 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.957 ns/op

# Run progress: 24.24% complete, ETA 00:29:09
# Fork: 2 of 2
# Warmup Iteration   1: 19.507 ns/op
# Warmup Iteration   2: 20.972 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.057 ns/op
Iteration   2: 15.242 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.391 ns/op
Iteration   7: 17.022 ns/op
Iteration   8: 17.005 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.829 ns/op [Average]
  (min, avg, max) = (14.957, 16.287, 17.109), stdev = 0.954
  CI (99.9%): [15.458, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 24.31% complete, ETA 00:29:07
# Fork: 1 of 2
# Warmup Iteration   1: 298.164 ns/op
# Warmup Iteration   2: 199.124 ns/op
# Warmup Iteration   3: 139.696 ns/op
Iteration   1: 141.272 ns/op
Iteration   2: 139.526 ns/op
Iteration   3: 141.088 ns/op
Iteration   4: 140.750 ns/op
Iteration   5: 141.311 ns/op
Iteration   6: 139.597 ns/op
Iteration   7: 141.047 ns/op
Iteration   8: 141.051 ns/op
Iteration   9: 140.930 ns/op
Iteration  10: 139.136 ns/op

# Run progress: 24.38% complete, ETA 00:29:05
# Fork: 2 of 2
# Warmup Iteration   1: 353.867 ns/op
# Warmup Iteration   2: 191.313 ns/op
# Warmup Iteration   3: 137.335 ns/op
Iteration   1: 140.046 ns/op
Iteration   2: 137.851 ns/op
Iteration   3: 138.256 ns/op
Iteration   4: 139.021 ns/op
Iteration   5: 139.023 ns/op
Iteration   6: 137.336 ns/op
Iteration   7: 138.484 ns/op
Iteration   8: 138.277 ns/op
Iteration   9: 138.405 ns/op
Iteration  10: 137.574 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  139.499 ±(99.9%) 1.172 ns/op [Average]
  (min, avg, max) = (137.336, 139.499, 141.311), stdev = 1.350
  CI (99.9%): [138.327, 140.671] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 24.44% complete, ETA 00:29:04
# Fork: 1 of 2
# Warmup Iteration   1: 137.902 ns/op
# Warmup Iteration   2: 132.956 ns/op
# Warmup Iteration   3: 98.388 ns/op
Iteration   1: 99.840 ns/op
Iteration   2: 98.444 ns/op
Iteration   3: 97.118 ns/op
Iteration   4: 98.869 ns/op
Iteration   5: 97.122 ns/op
Iteration   6: 98.335 ns/op
Iteration   7: 97.110 ns/op
Iteration   8: 97.151 ns/op
Iteration   9: 97.171 ns/op
Iteration  10: 98.283 ns/op

# Run progress: 24.51% complete, ETA 00:29:02
# Fork: 2 of 2
# Warmup Iteration   1: 138.508 ns/op
# Warmup Iteration   2: 138.777 ns/op
# Warmup Iteration   3: 98.381 ns/op
Iteration   1: 99.820 ns/op
Iteration   2: 98.446 ns/op
Iteration   3: 97.109 ns/op
Iteration   4: 98.994 ns/op
Iteration   5: 97.123 ns/op
Iteration   6: 98.323 ns/op
Iteration   7: 97.114 ns/op
Iteration   8: 97.113 ns/op
Iteration   9: 97.120 ns/op
Iteration  10: 98.285 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  97.944 ±(99.9%) 0.817 ns/op [Average]
  (min, avg, max) = (97.109, 97.944, 99.840), stdev = 0.941
  CI (99.9%): [97.128, 98.761] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 24.58% complete, ETA 00:29:01
# Fork: 1 of 2
# Warmup Iteration   1: 463.275 ns/op
# Warmup Iteration   2: 166.854 ns/op
# Warmup Iteration   3: 125.851 ns/op
Iteration   1: 124.616 ns/op
Iteration   2: 125.920 ns/op
Iteration   3: 124.566 ns/op
Iteration   4: 126.932 ns/op
Iteration   5: 124.542 ns/op
Iteration   6: 125.795 ns/op
Iteration   7: 124.557 ns/op
Iteration   8: 124.561 ns/op
Iteration   9: 124.598 ns/op
Iteration  10: 125.973 ns/op

# Run progress: 24.65% complete, ETA 00:28:59
# Fork: 2 of 2
# Warmup Iteration   1: 610.167 ns/op
# Warmup Iteration   2: 165.066 ns/op
# Warmup Iteration   3: 126.199 ns/op
Iteration   1: 125.015 ns/op
Iteration   2: 126.071 ns/op
Iteration   3: 124.686 ns/op
Iteration   4: 127.463 ns/op
Iteration   5: 125.276 ns/op
Iteration   6: 126.113 ns/op
Iteration   7: 124.817 ns/op
Iteration   8: 124.714 ns/op
Iteration   9: 124.681 ns/op
Iteration  10: 125.931 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.341 ±(99.9%) 0.762 ns/op [Average]
  (min, avg, max) = (124.542, 125.341, 127.463), stdev = 0.878
  CI (99.9%): [124.579, 126.103] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 24.72% complete, ETA 00:28:57
# Fork: 1 of 2
# Warmup Iteration   1: 115.436 ns/op
# Warmup Iteration   2: 122.431 ns/op
# Warmup Iteration   3: 78.569 ns/op
Iteration   1: 76.981 ns/op
Iteration   2: 78.415 ns/op
Iteration   3: 77.020 ns/op
Iteration   4: 78.453 ns/op
Iteration   5: 77.001 ns/op
Iteration   6: 78.411 ns/op
Iteration   7: 76.910 ns/op
Iteration   8: 76.902 ns/op
Iteration   9: 76.924 ns/op
Iteration  10: 78.374 ns/op

# Run progress: 24.79% complete, ETA 00:28:56
# Fork: 2 of 2
# Warmup Iteration   1: 117.213 ns/op
# Warmup Iteration   2: 111.657 ns/op
# Warmup Iteration   3: 78.546 ns/op
Iteration   1: 76.992 ns/op
Iteration   2: 78.431 ns/op
Iteration   3: 77.007 ns/op
Iteration   4: 78.488 ns/op
Iteration   5: 77.006 ns/op
Iteration   6: 78.410 ns/op
Iteration   7: 76.909 ns/op
Iteration   8: 76.879 ns/op
Iteration   9: 76.917 ns/op
Iteration  10: 78.359 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  77.540 ±(99.9%) 0.640 ns/op [Average]
  (min, avg, max) = (76.879, 77.540, 78.488), stdev = 0.737
  CI (99.9%): [76.899, 78.180] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 24.86% complete, ETA 00:28:54
# Fork: 1 of 2
# Warmup Iteration   1: 1141.312 ns/op
# Warmup Iteration   2: 940.789 ns/op
# Warmup Iteration   3: 657.276 ns/op
Iteration   1: 661.506 ns/op
Iteration   2: 657.250 ns/op
Iteration   3: 658.484 ns/op
Iteration   4: 681.711 ns/op
Iteration   5: 677.188 ns/op
Iteration   6: 678.853 ns/op
Iteration   7: 676.763 ns/op
Iteration   8: 679.356 ns/op
Iteration   9: 676.608 ns/op
Iteration  10: 679.052 ns/op

# Run progress: 24.93% complete, ETA 00:28:53
# Fork: 2 of 2
# Warmup Iteration   1: 1145.481 ns/op
# Warmup Iteration   2: 876.379 ns/op
# Warmup Iteration   3: 657.413 ns/op
Iteration   1: 661.213 ns/op
Iteration   2: 657.203 ns/op
Iteration   3: 658.474 ns/op
Iteration   4: 681.503 ns/op
Iteration   5: 677.173 ns/op
Iteration   6: 678.401 ns/op
Iteration   7: 676.670 ns/op
Iteration   8: 678.566 ns/op
Iteration   9: 676.921 ns/op
Iteration  10: 679.040 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  672.597 ±(99.9%) 8.053 ns/op [Average]
  (min, avg, max) = (657.203, 672.597, 681.711), stdev = 9.274
  CI (99.9%): [664.544, 680.650] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 25.00% complete, ETA 00:28:51
# Fork: 1 of 2
# Warmup Iteration   1: 19.504 ns/op
# Warmup Iteration   2: 21.408 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.075 ns/op
Iteration   2: 15.218 ns/op
Iteration   3: 17.027 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.390 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 16.998 ns/op
Iteration  10: 14.954 ns/op

# Run progress: 25.07% complete, ETA 00:28:49
# Fork: 2 of 2
# Warmup Iteration   1: 19.593 ns/op
# Warmup Iteration   2: 23.066 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.256 ns/op
Iteration   3: 17.029 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.012 ns/op
Iteration   9: 17.009 ns/op
Iteration  10: 14.978 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.830 ns/op [Average]
  (min, avg, max) = (14.954, 16.287, 17.106), stdev = 0.956
  CI (99.9%): [15.457, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 25.14% complete, ETA 00:28:48
# Fork: 1 of 2
# Warmup Iteration   1: 2070.410 ns/op
# Warmup Iteration   2: 414.996 ns/op
# Warmup Iteration   3: 305.251 ns/op
Iteration   1: 306.047 ns/op
Iteration   2: 305.789 ns/op
Iteration   3: 306.227 ns/op
Iteration   4: 308.980 ns/op
Iteration   5: 306.036 ns/op
Iteration   6: 305.028 ns/op
Iteration   7: 306.150 ns/op
Iteration   8: 305.909 ns/op
Iteration   9: 305.819 ns/op
Iteration  10: 305.385 ns/op

# Run progress: 25.21% complete, ETA 00:28:46
# Fork: 2 of 2
# Warmup Iteration   1: 1116.628 ns/op
# Warmup Iteration   2: 434.268 ns/op
# Warmup Iteration   3: 306.656 ns/op
Iteration   1: 306.780 ns/op
Iteration   2: 306.696 ns/op
Iteration   3: 307.145 ns/op
Iteration   4: 329.939 ns/op
Iteration   5: 307.484 ns/op
Iteration   6: 306.420 ns/op
Iteration   7: 306.943 ns/op
Iteration   8: 307.083 ns/op
Iteration   9: 306.906 ns/op
Iteration  10: 306.607 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  307.669 ±(99.9%) 4.611 ns/op [Average]
  (min, avg, max) = (305.028, 307.669, 329.939), stdev = 5.310
  CI (99.9%): [303.057, 312.280] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 25.28% complete, ETA 00:28:44
# Fork: 1 of 2
# Warmup Iteration   1: 520.178 ns/op
# Warmup Iteration   2: 439.575 ns/op
# Warmup Iteration   3: 341.293 ns/op
Iteration   1: 339.863 ns/op
Iteration   2: 341.304 ns/op
Iteration   3: 340.181 ns/op
Iteration   4: 341.853 ns/op
Iteration   5: 339.951 ns/op
Iteration   6: 341.298 ns/op
Iteration   7: 340.219 ns/op
Iteration   8: 339.990 ns/op
Iteration   9: 340.154 ns/op
Iteration  10: 341.276 ns/op

# Run progress: 25.35% complete, ETA 00:28:43
# Fork: 2 of 2
# Warmup Iteration   1: 493.396 ns/op
# Warmup Iteration   2: 433.025 ns/op
# Warmup Iteration   3: 341.487 ns/op
Iteration   1: 340.239 ns/op
Iteration   2: 341.381 ns/op
Iteration   3: 340.187 ns/op
Iteration   4: 341.947 ns/op
Iteration   5: 340.209 ns/op
Iteration   6: 341.401 ns/op
Iteration   7: 340.188 ns/op
Iteration   8: 340.213 ns/op
Iteration   9: 340.214 ns/op
Iteration  10: 341.437 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  340.675 ±(99.9%) 0.612 ns/op [Average]
  (min, avg, max) = (339.863, 340.675, 341.947), stdev = 0.705
  CI (99.9%): [340.063, 341.287] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 25.42% complete, ETA 00:28:41
# Fork: 1 of 2
# Warmup Iteration   1: 7520.820 ns/op
# Warmup Iteration   2: 469.289 ns/op
# Warmup Iteration   3: 308.714 ns/op
Iteration   1: 307.275 ns/op
Iteration   2: 309.590 ns/op
Iteration   3: 307.259 ns/op
Iteration   4: 311.738 ns/op
Iteration   5: 307.629 ns/op
Iteration   6: 308.668 ns/op
Iteration   7: 307.192 ns/op
Iteration   8: 307.242 ns/op
Iteration   9: 307.442 ns/op
Iteration  10: 308.803 ns/op

# Run progress: 25.49% complete, ETA 00:28:40
# Fork: 2 of 2
# Warmup Iteration   1: 22090.245 ns/op
# Warmup Iteration   2: 486.696 ns/op
# Warmup Iteration   3: 335.122 ns/op
Iteration   1: 309.283 ns/op
Iteration   2: 328.183 ns/op
Iteration   3: 309.230 ns/op
Iteration   4: 312.661 ns/op
Iteration   5: 309.254 ns/op
Iteration   6: 328.880 ns/op
Iteration   7: 324.969 ns/op
Iteration   8: 309.112 ns/op
Iteration   9: 309.213 ns/op
Iteration  10: 309.437 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  311.653 ±(99.9%) 6.029 ns/op [Average]
  (min, avg, max) = (307.192, 311.653, 328.880), stdev = 6.943
  CI (99.9%): [305.624, 317.682] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 25.56% complete, ETA 00:28:38
# Fork: 1 of 2
# Warmup Iteration   1: 420.301 ns/op
# Warmup Iteration   2: 360.239 ns/op
# Warmup Iteration   3: 263.928 ns/op
Iteration   1: 265.273 ns/op
Iteration   2: 263.859 ns/op
Iteration   3: 262.190 ns/op
Iteration   4: 264.014 ns/op
Iteration   5: 261.796 ns/op
Iteration   6: 264.096 ns/op
Iteration   7: 262.124 ns/op
Iteration   8: 262.170 ns/op
Iteration   9: 262.232 ns/op
Iteration  10: 263.741 ns/op

# Run progress: 25.62% complete, ETA 00:28:36
# Fork: 2 of 2
# Warmup Iteration   1: 383.830 ns/op
# Warmup Iteration   2: 338.629 ns/op
# Warmup Iteration   3: 263.943 ns/op
Iteration   1: 264.874 ns/op
Iteration   2: 263.811 ns/op
Iteration   3: 262.184 ns/op
Iteration   4: 263.846 ns/op
Iteration   5: 261.820 ns/op
Iteration   6: 264.158 ns/op
Iteration   7: 262.111 ns/op
Iteration   8: 262.099 ns/op
Iteration   9: 262.168 ns/op
Iteration  10: 263.484 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  263.102 ±(99.9%) 0.964 ns/op [Average]
  (min, avg, max) = (261.796, 263.102, 265.273), stdev = 1.111
  CI (99.9%): [262.138, 264.067] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 25.69% complete, ETA 00:28:35
# Fork: 1 of 2
# Warmup Iteration   1: 993.620 ns/op
# Warmup Iteration   2: 606.010 ns/op
# Warmup Iteration   3: 440.496 ns/op
Iteration   1: 444.962 ns/op
Iteration   2: 440.839 ns/op
Iteration   3: 442.122 ns/op
Iteration   4: 464.335 ns/op
Iteration   5: 460.928 ns/op
Iteration   6: 459.899 ns/op
Iteration   7: 461.190 ns/op
Iteration   8: 461.270 ns/op
Iteration   9: 461.340 ns/op
Iteration  10: 459.619 ns/op

# Run progress: 25.76% complete, ETA 00:28:33
# Fork: 2 of 2
# Warmup Iteration   1: 1161.162 ns/op
# Warmup Iteration   2: 615.336 ns/op
# Warmup Iteration   3: 440.563 ns/op
Iteration   1: 444.985 ns/op
Iteration   2: 440.713 ns/op
Iteration   3: 442.634 ns/op
Iteration   4: 464.661 ns/op
Iteration   5: 461.256 ns/op
Iteration   6: 460.012 ns/op
Iteration   7: 461.225 ns/op
Iteration   8: 461.206 ns/op
Iteration   9: 461.190 ns/op
Iteration  10: 459.687 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  455.704 ±(99.9%) 7.703 ns/op [Average]
  (min, avg, max) = (440.713, 455.704, 464.661), stdev = 8.871
  CI (99.9%): [448.001, 463.407] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 25.83% complete, ETA 00:28:31
# Fork: 1 of 2
# Warmup Iteration   1: 19.759 ns/op
# Warmup Iteration   2: 21.739 ns/op
# Warmup Iteration   3: 15.023 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.245 ns/op
Iteration   3: 17.029 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.364 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.024 ns/op
Iteration  10: 14.969 ns/op

# Run progress: 25.90% complete, ETA 00:28:30
# Fork: 2 of 2
# Warmup Iteration   1: 19.658 ns/op
# Warmup Iteration   2: 22.936 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.264 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.398 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 14.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.830 ns/op [Average]
  (min, avg, max) = (14.964, 16.290, 17.109), stdev = 0.956
  CI (99.9%): [15.459, 17.120] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 25.97% complete, ETA 00:28:28
# Fork: 1 of 2
# Warmup Iteration   1: 507.954 ns/op
# Warmup Iteration   2: 416.278 ns/op
# Warmup Iteration   3: 295.032 ns/op
Iteration   1: 298.098 ns/op
Iteration   2: 294.205 ns/op
Iteration   3: 295.781 ns/op
Iteration   4: 299.745 ns/op
Iteration   5: 294.784 ns/op
Iteration   6: 290.459 ns/op
Iteration   7: 297.330 ns/op
Iteration   8: 292.486 ns/op
Iteration   9: 298.591 ns/op
Iteration  10: 294.525 ns/op

# Run progress: 26.04% complete, ETA 00:28:26
# Fork: 2 of 2
# Warmup Iteration   1: 553.488 ns/op
# Warmup Iteration   2: 420.868 ns/op
# Warmup Iteration   3: 293.976 ns/op
Iteration   1: 302.552 ns/op
Iteration   2: 292.328 ns/op
Iteration   3: 297.377 ns/op
Iteration   4: 287.860 ns/op
Iteration   5: 294.752 ns/op
Iteration   6: 296.667 ns/op
Iteration   7: 290.016 ns/op
Iteration   8: 296.618 ns/op
Iteration   9: 295.685 ns/op
Iteration  10: 292.538 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  295.120 ±(99.9%) 3.062 ns/op [Average]
  (min, avg, max) = (287.860, 295.120, 302.552), stdev = 3.526
  CI (99.9%): [292.058, 298.182] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 26.11% complete, ETA 00:28:25
# Fork: 1 of 2
# Warmup Iteration   1: 495.977 ns/op
# Warmup Iteration   2: 461.104 ns/op
# Warmup Iteration   3: 340.466 ns/op
Iteration   1: 339.081 ns/op
Iteration   2: 341.483 ns/op
Iteration   3: 339.183 ns/op
Iteration   4: 341.013 ns/op
Iteration   5: 340.003 ns/op
Iteration   6: 340.502 ns/op
Iteration   7: 339.287 ns/op
Iteration   8: 339.296 ns/op
Iteration   9: 339.327 ns/op
Iteration  10: 340.680 ns/op

# Run progress: 26.18% complete, ETA 00:28:23
# Fork: 2 of 2
# Warmup Iteration   1: 487.039 ns/op
# Warmup Iteration   2: 480.656 ns/op
# Warmup Iteration   3: 338.081 ns/op
Iteration   1: 336.562 ns/op
Iteration   2: 339.081 ns/op
Iteration   3: 336.684 ns/op
Iteration   4: 338.406 ns/op
Iteration   5: 336.669 ns/op
Iteration   6: 338.127 ns/op
Iteration   7: 336.755 ns/op
Iteration   8: 336.633 ns/op
Iteration   9: 336.636 ns/op
Iteration  10: 338.095 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  338.675 ±(99.9%) 1.400 ns/op [Average]
  (min, avg, max) = (336.562, 338.675, 341.483), stdev = 1.613
  CI (99.9%): [337.275, 340.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 26.25% complete, ETA 00:28:22
# Fork: 1 of 2
# Warmup Iteration   1: 687.149 ns/op
# Warmup Iteration   2: 295.347 ns/op
# Warmup Iteration   3: 206.428 ns/op
Iteration   1: 205.384 ns/op
Iteration   2: 207.138 ns/op
Iteration   3: 204.753 ns/op
Iteration   4: 206.112 ns/op
Iteration   5: 204.895 ns/op
Iteration   6: 205.957 ns/op
Iteration   7: 204.583 ns/op
Iteration   8: 204.808 ns/op
Iteration   9: 204.636 ns/op
Iteration  10: 206.645 ns/op

# Run progress: 26.32% complete, ETA 00:28:20
# Fork: 2 of 2
# Warmup Iteration   1: 628.320 ns/op
# Warmup Iteration   2: 255.466 ns/op
# Warmup Iteration   3: 196.188 ns/op
Iteration   1: 195.146 ns/op
Iteration   2: 196.450 ns/op
Iteration   3: 195.022 ns/op
Iteration   4: 198.055 ns/op
Iteration   5: 194.868 ns/op
Iteration   6: 196.007 ns/op
Iteration   7: 194.974 ns/op
Iteration   8: 195.027 ns/op
Iteration   9: 194.969 ns/op
Iteration  10: 196.336 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  200.588 ±(99.9%) 4.445 ns/op [Average]
  (min, avg, max) = (194.868, 200.588, 207.138), stdev = 5.119
  CI (99.9%): [196.143, 205.034] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 26.39% complete, ETA 00:28:18
# Fork: 1 of 2
# Warmup Iteration   1: 467.434 ns/op
# Warmup Iteration   2: 361.083 ns/op
# Warmup Iteration   3: 282.126 ns/op
Iteration   1: 280.536 ns/op
Iteration   2: 281.099 ns/op
Iteration   3: 279.760 ns/op
Iteration   4: 282.958 ns/op
Iteration   5: 280.635 ns/op
Iteration   6: 282.295 ns/op
Iteration   7: 280.584 ns/op
Iteration   8: 280.438 ns/op
Iteration   9: 280.595 ns/op
Iteration  10: 281.812 ns/op

# Run progress: 26.46% complete, ETA 00:28:17
# Fork: 2 of 2
# Warmup Iteration   1: 450.149 ns/op
# Warmup Iteration   2: 386.342 ns/op
# Warmup Iteration   3: 281.702 ns/op
Iteration   1: 280.132 ns/op
Iteration   2: 281.760 ns/op
Iteration   3: 280.304 ns/op
Iteration   4: 282.580 ns/op
Iteration   5: 280.326 ns/op
Iteration   6: 281.962 ns/op
Iteration   7: 280.360 ns/op
Iteration   8: 280.553 ns/op
Iteration   9: 280.282 ns/op
Iteration  10: 281.699 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  281.033 ±(99.9%) 0.797 ns/op [Average]
  (min, avg, max) = (279.760, 281.033, 282.958), stdev = 0.918
  CI (99.9%): [280.237, 281.830] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 26.53% complete, ETA 00:28:15
# Fork: 1 of 2
# Warmup Iteration   1: 1162.357 ns/op
# Warmup Iteration   2: 1011.443 ns/op
# Warmup Iteration   3: 770.055 ns/op
Iteration   1: 774.188 ns/op
Iteration   2: 770.387 ns/op
Iteration   3: 770.989 ns/op
Iteration   4: 800.558 ns/op
Iteration   5: 793.140 ns/op
Iteration   6: 791.968 ns/op
Iteration   7: 792.595 ns/op
Iteration   8: 791.780 ns/op
Iteration   9: 792.263 ns/op
Iteration  10: 791.298 ns/op

# Run progress: 26.60% complete, ETA 00:28:14
# Fork: 2 of 2
# Warmup Iteration   1: 1295.691 ns/op
# Warmup Iteration   2: 1080.227 ns/op
# Warmup Iteration   3: 770.113 ns/op
Iteration   1: 774.088 ns/op
Iteration   2: 770.122 ns/op
Iteration   3: 771.233 ns/op
Iteration   4: 800.755 ns/op
Iteration   5: 793.103 ns/op
Iteration   6: 792.157 ns/op
Iteration   7: 792.517 ns/op
Iteration   8: 791.770 ns/op
Iteration   9: 792.315 ns/op
Iteration  10: 791.165 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  786.920 ±(99.9%) 9.118 ns/op [Average]
  (min, avg, max) = (770.122, 786.920, 800.755), stdev = 10.500
  CI (99.9%): [777.802, 796.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 26.67% complete, ETA 00:28:12
# Fork: 1 of 2
# Warmup Iteration   1: 19.480 ns/op
# Warmup Iteration   2: 23.060 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.079 ns/op
Iteration   2: 15.276 ns/op
Iteration   3: 17.002 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.392 ns/op
Iteration   7: 17.028 ns/op
Iteration   8: 17.032 ns/op
Iteration   9: 17.013 ns/op
Iteration  10: 14.966 ns/op

# Run progress: 26.74% complete, ETA 00:28:10
# Fork: 2 of 2
# Warmup Iteration   1: 19.722 ns/op
# Warmup Iteration   2: 21.381 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.058 ns/op
Iteration   2: 15.262 ns/op
Iteration   3: 17.011 ns/op
Iteration   4: 15.012 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.387 ns/op
Iteration   7: 17.029 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 14.968 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.966, 16.290, 17.113), stdev = 0.954
  CI (99.9%): [15.462, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 26.81% complete, ETA 00:28:09
# Fork: 1 of 2
# Warmup Iteration   1: 591.778 ns/op
# Warmup Iteration   2: 8357.408 ns/op
# Warmup Iteration   3: 396.748 ns/op
Iteration   1: 12152.493 ns/op
Iteration   2: 17964.126 ns/op
Iteration   3: 192.098 ns/op
Iteration   4: 202.194 ns/op
Iteration   5: 15635.762 ns/op
Iteration   6: 213.975 ns/op
Iteration   7: 255.777 ns/op
Iteration   8: 295.565 ns/op
Iteration   9: 273.367 ns/op
Iteration  10: 186.481 ns/op

# Run progress: 26.88% complete, ETA 00:28:07
# Fork: 2 of 2
# Warmup Iteration   1: 571.274 ns/op
# Warmup Iteration   2: 1926.760 ns/op
# Warmup Iteration   3: 321.252 ns/op
Iteration   1: 15637.818 ns/op
Iteration   2: 2225.733 ns/op
Iteration   3: 191.942 ns/op
Iteration   4: 202.088 ns/op
Iteration   5: 14110.882 ns/op
Iteration   6: 212.604 ns/op
Iteration   7: 257.633 ns/op
Iteration   8: 299.008 ns/op
Iteration   9: 273.476 ns/op
Iteration  10: 178.769 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4048.090 ±(99.9%) 5761.788 ns/op [Average]
  (min, avg, max) = (178.769, 4048.090, 17964.126), stdev = 6635.284
  CI (99.9%): [≈ 0, 9809.878] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 26.94% complete, ETA 00:28:06
# Fork: 1 of 2
# Warmup Iteration   1: 533.670 ns/op
# Warmup Iteration   2: 464.461 ns/op
# Warmup Iteration   3: 321.064 ns/op
Iteration   1: 393.321 ns/op
Iteration   2: 356.146 ns/op
Iteration   3: 381.322 ns/op
Iteration   4: 339.630 ns/op
Iteration   5: 379.748 ns/op
Iteration   6: 352.611 ns/op
Iteration   7: 359.898 ns/op
Iteration   8: 374.650 ns/op
Iteration   9: 368.759 ns/op
Iteration  10: 322.352 ns/op

# Run progress: 27.01% complete, ETA 00:28:04
# Fork: 2 of 2
# Warmup Iteration   1: 531.183 ns/op
# Warmup Iteration   2: 468.810 ns/op
# Warmup Iteration   3: 323.905 ns/op
Iteration   1: 394.166 ns/op
Iteration   2: 355.867 ns/op
Iteration   3: 386.777 ns/op
Iteration   4: 341.837 ns/op
Iteration   5: 377.929 ns/op
Iteration   6: 355.417 ns/op
Iteration   7: 363.403 ns/op
Iteration   8: 376.391 ns/op
Iteration   9: 367.651 ns/op
Iteration  10: 324.009 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  363.594 ±(99.9%) 17.927 ns/op [Average]
  (min, avg, max) = (322.352, 363.594, 394.166), stdev = 20.644
  CI (99.9%): [345.668, 381.521] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 27.08% complete, ETA 00:28:02
# Fork: 1 of 2
# Warmup Iteration   1: 683.067 ns/op
# Warmup Iteration   2: 16622.227 ns/op
# Warmup Iteration   3: 1036.684 ns/op
Iteration   1: 316.164 ns/op
Iteration   2: 499.452 ns/op
Iteration   3: 268.218 ns/op
Iteration   4: 1760.311 ns/op
Iteration   5: 228.512 ns/op
Iteration   6: 764.585 ns/op
Iteration   7: 226.019 ns/op
Iteration   8: 216.235 ns/op
Iteration   9: 206.974 ns/op
Iteration  10: 257.941 ns/op

# Run progress: 27.15% complete, ETA 00:28:01
# Fork: 2 of 2
# Warmup Iteration   1: 737.973 ns/op
# Warmup Iteration   2: 16102.458 ns/op
# Warmup Iteration   3: 259.695 ns/op
Iteration   1: 440.419 ns/op
Iteration   2: 536.247 ns/op
Iteration   3: 274.751 ns/op
Iteration   4: 11836.827 ns/op
Iteration   5: 225.543 ns/op
Iteration   6: 1003.253 ns/op
Iteration   7: 219.212 ns/op
Iteration   8: 215.602 ns/op
Iteration   9: 199.390 ns/op
Iteration  10: 230.370 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  996.301 ±(99.9%) 2239.937 ns/op [Average]
  (min, avg, max) = (199.390, 996.301, 11836.827), stdev = 2579.514
  CI (99.9%): [≈ 0, 3236.238] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 27.22% complete, ETA 00:27:59
# Fork: 1 of 2
# Warmup Iteration   1: 454.726 ns/op
# Warmup Iteration   2: 368.659 ns/op
# Warmup Iteration   3: 259.911 ns/op
Iteration   1: 305.493 ns/op
Iteration   2: 287.656 ns/op
Iteration   3: 285.807 ns/op
Iteration   4: 270.333 ns/op
Iteration   5: 290.075 ns/op
Iteration   6: 305.601 ns/op
Iteration   7: 292.629 ns/op
Iteration   8: 295.495 ns/op
Iteration   9: 281.756 ns/op
Iteration  10: 265.492 ns/op

# Run progress: 27.29% complete, ETA 00:27:58
# Fork: 2 of 2
# Warmup Iteration   1: 597.174 ns/op
# Warmup Iteration   2: 361.321 ns/op
# Warmup Iteration   3: 263.443 ns/op
Iteration   1: 309.309 ns/op
Iteration   2: 284.536 ns/op
Iteration   3: 288.881 ns/op
Iteration   4: 268.673 ns/op
Iteration   5: 293.433 ns/op
Iteration   6: 302.068 ns/op
Iteration   7: 293.839 ns/op
Iteration   8: 297.677 ns/op
Iteration   9: 281.745 ns/op
Iteration  10: 263.044 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  288.177 ±(99.9%) 11.645 ns/op [Average]
  (min, avg, max) = (263.044, 288.177, 309.309), stdev = 13.411
  CI (99.9%): [276.532, 299.822] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 27.36% complete, ETA 00:27:56
# Fork: 1 of 2
# Warmup Iteration   1: 3025.426 ns/op
# Warmup Iteration   2: 1969.449 ns/op
# Warmup Iteration   3: 1422.163 ns/op
Iteration   1: 1577.714 ns/op
Iteration   2: 1487.008 ns/op
Iteration   3: 1562.815 ns/op
Iteration   4: 1525.908 ns/op
Iteration   5: 2024.824 ns/op
Iteration   6: 1531.649 ns/op
Iteration   7: 1545.434 ns/op
Iteration   8: 1583.523 ns/op
Iteration   9: 1546.967 ns/op
Iteration  10: 1445.237 ns/op

# Run progress: 27.43% complete, ETA 00:27:54
# Fork: 2 of 2
# Warmup Iteration   1: 3187.858 ns/op
# Warmup Iteration   2: 2132.709 ns/op
# Warmup Iteration   3: 1472.171 ns/op
Iteration   1: 1625.612 ns/op
Iteration   2: 1537.168 ns/op
Iteration   3: 1618.864 ns/op
Iteration   4: 1561.238 ns/op
Iteration   5: 2378.328 ns/op
Iteration   6: 1569.614 ns/op
Iteration   7: 1577.765 ns/op
Iteration   8: 1623.839 ns/op
Iteration   9: 1567.679 ns/op
Iteration  10: 1476.025 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1618.361 ±(99.9%) 184.659 ns/op [Average]
  (min, avg, max) = (1445.237, 1618.361, 2378.328), stdev = 212.654
  CI (99.9%): [1433.701, 1803.020] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 27.50% complete, ETA 00:27:53
# Fork: 1 of 2
# Warmup Iteration   1: 19.408 ns/op
# Warmup Iteration   2: 21.727 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.274 ns/op
Iteration   3: 17.030 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.392 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.013 ns/op
Iteration   9: 17.011 ns/op
Iteration  10: 14.981 ns/op

# Run progress: 27.57% complete, ETA 00:27:51
# Fork: 2 of 2
# Warmup Iteration   1: 19.641 ns/op
# Warmup Iteration   2: 21.169 ns/op
# Warmup Iteration   3: 15.019 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.006 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.403 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.968 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.968, 16.291, 17.107), stdev = 0.949
  CI (99.9%): [15.467, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 27.64% complete, ETA 00:27:49
# Fork: 1 of 2
# Warmup Iteration   1: 85.962 ns/op
# Warmup Iteration   2: 85.776 ns/op
# Warmup Iteration   3: 58.194 ns/op
Iteration   1: 59.519 ns/op
Iteration   2: 58.125 ns/op
Iteration   3: 59.534 ns/op
Iteration   4: 58.347 ns/op
Iteration   5: 59.558 ns/op
Iteration   6: 58.147 ns/op
Iteration   7: 59.546 ns/op
Iteration   8: 59.527 ns/op
Iteration   9: 59.559 ns/op
Iteration  10: 58.137 ns/op

# Run progress: 27.71% complete, ETA 00:27:48
# Fork: 2 of 2
# Warmup Iteration   1: 85.558 ns/op
# Warmup Iteration   2: 81.297 ns/op
# Warmup Iteration   3: 58.212 ns/op
Iteration   1: 59.532 ns/op
Iteration   2: 58.128 ns/op
Iteration   3: 59.508 ns/op
Iteration   4: 58.385 ns/op
Iteration   5: 59.554 ns/op
Iteration   6: 58.139 ns/op
Iteration   7: 59.505 ns/op
Iteration   8: 59.555 ns/op
Iteration   9: 59.536 ns/op
Iteration  10: 58.130 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  58.999 ±(99.9%) 0.589 ns/op [Average]
  (min, avg, max) = (58.125, 58.999, 59.559), stdev = 0.679
  CI (99.9%): [58.409, 59.588] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 27.78% complete, ETA 00:27:46
# Fork: 1 of 2
# Warmup Iteration   1: 64.349 ns/op
# Warmup Iteration   2: 64.294 ns/op
# Warmup Iteration   3: 45.816 ns/op
Iteration   1: 44.470 ns/op
Iteration   2: 45.882 ns/op
Iteration   3: 44.367 ns/op
Iteration   4: 46.022 ns/op
Iteration   5: 44.463 ns/op
Iteration   6: 45.811 ns/op
Iteration   7: 44.369 ns/op
Iteration   8: 44.386 ns/op
Iteration   9: 44.377 ns/op
Iteration  10: 45.763 ns/op

# Run progress: 27.85% complete, ETA 00:27:45
# Fork: 2 of 2
# Warmup Iteration   1: 65.062 ns/op
# Warmup Iteration   2: 63.035 ns/op
# Warmup Iteration   3: 45.806 ns/op
Iteration   1: 44.454 ns/op
Iteration   2: 45.871 ns/op
Iteration   3: 44.395 ns/op
Iteration   4: 46.035 ns/op
Iteration   5: 44.436 ns/op
Iteration   6: 45.794 ns/op
Iteration   7: 44.397 ns/op
Iteration   8: 44.390 ns/op
Iteration   9: 44.426 ns/op
Iteration  10: 45.804 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.995 ±(99.9%) 0.641 ns/op [Average]
  (min, avg, max) = (44.367, 44.995, 46.035), stdev = 0.738
  CI (99.9%): [44.355, 45.636] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 27.92% complete, ETA 00:27:43
# Fork: 1 of 2
# Warmup Iteration   1: 416.475 ns/op
# Warmup Iteration   2: 108.648 ns/op
# Warmup Iteration   3: 72.810 ns/op
Iteration   1: 71.340 ns/op
Iteration   2: 72.527 ns/op
Iteration   3: 71.314 ns/op
Iteration   4: 74.902 ns/op
Iteration   5: 70.992 ns/op
Iteration   6: 72.593 ns/op
Iteration   7: 71.203 ns/op
Iteration   8: 71.285 ns/op
Iteration   9: 71.234 ns/op
Iteration  10: 72.566 ns/op

# Run progress: 27.99% complete, ETA 00:27:41
# Fork: 2 of 2
# Warmup Iteration   1: 265.535 ns/op
# Warmup Iteration   2: 97.403 ns/op
# Warmup Iteration   3: 71.355 ns/op
Iteration   1: 69.889 ns/op
Iteration   2: 71.257 ns/op
Iteration   3: 80.283 ns/op
Iteration   4: 72.895 ns/op
Iteration   5: 70.003 ns/op
Iteration   6: 71.262 ns/op
Iteration   7: 73.119 ns/op
Iteration   8: 79.157 ns/op
Iteration   9: 70.036 ns/op
Iteration  10: 71.377 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  72.462 ±(99.9%) 2.394 ns/op [Average]
  (min, avg, max) = (69.889, 72.462, 80.283), stdev = 2.757
  CI (99.9%): [70.068, 74.856] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 28.06% complete, ETA 00:27:40
# Fork: 1 of 2
# Warmup Iteration   1: 68.064 ns/op
# Warmup Iteration   2: 67.560 ns/op
# Warmup Iteration   3: 49.148 ns/op
Iteration   1: 47.820 ns/op
Iteration   2: 49.184 ns/op
Iteration   3: 47.903 ns/op
Iteration   4: 49.146 ns/op
Iteration   5: 47.820 ns/op
Iteration   6: 49.113 ns/op
Iteration   7: 47.919 ns/op
Iteration   8: 47.912 ns/op
Iteration   9: 47.903 ns/op
Iteration  10: 49.194 ns/op

# Run progress: 28.13% complete, ETA 00:27:38
# Fork: 2 of 2
# Warmup Iteration   1: 66.277 ns/op
# Warmup Iteration   2: 68.466 ns/op
# Warmup Iteration   3: 49.157 ns/op
Iteration   1: 47.805 ns/op
Iteration   2: 49.134 ns/op
Iteration   3: 47.926 ns/op
Iteration   4: 49.162 ns/op
Iteration   5: 47.799 ns/op
Iteration   6: 49.128 ns/op
Iteration   7: 47.902 ns/op
Iteration   8: 47.907 ns/op
Iteration   9: 47.874 ns/op
Iteration  10: 49.179 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.387 ±(99.9%) 0.560 ns/op [Average]
  (min, avg, max) = (47.799, 48.387, 49.194), stdev = 0.645
  CI (99.9%): [47.826, 48.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 28.19% complete, ETA 00:27:37
# Fork: 1 of 2
# Warmup Iteration   1: 170.939 ns/op
# Warmup Iteration   2: 166.577 ns/op
# Warmup Iteration   3: 121.910 ns/op
Iteration   1: 123.079 ns/op
Iteration   2: 128.859 ns/op
Iteration   3: 123.193 ns/op
Iteration   4: 137.459 ns/op
Iteration   5: 137.764 ns/op
Iteration   6: 136.241 ns/op
Iteration   7: 136.828 ns/op
Iteration   8: 136.885 ns/op
Iteration   9: 137.003 ns/op
Iteration  10: 136.046 ns/op

# Run progress: 28.26% complete, ETA 00:27:35
# Fork: 2 of 2
# Warmup Iteration   1: 167.411 ns/op
# Warmup Iteration   2: 172.921 ns/op
# Warmup Iteration   3: 121.893 ns/op
Iteration   1: 123.223 ns/op
Iteration   2: 128.733 ns/op
Iteration   3: 123.264 ns/op
Iteration   4: 137.122 ns/op
Iteration   5: 137.625 ns/op
Iteration   6: 136.248 ns/op
Iteration   7: 136.882 ns/op
Iteration   8: 137.134 ns/op
Iteration   9: 136.834 ns/op
Iteration  10: 136.156 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  133.329 ±(99.9%) 5.008 ns/op [Average]
  (min, avg, max) = (123.079, 133.329, 137.764), stdev = 5.768
  CI (99.9%): [128.320, 138.337] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 28.33% complete, ETA 00:27:33
# Fork: 1 of 2
# Warmup Iteration   1: 19.312 ns/op
# Warmup Iteration   2: 22.389 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.029 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.386 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.957 ns/op

# Run progress: 28.40% complete, ETA 00:27:32
# Fork: 2 of 2
# Warmup Iteration   1: 19.387 ns/op
# Warmup Iteration   2: 22.941 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.069 ns/op
Iteration   2: 15.225 ns/op
Iteration   3: 17.000 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.373 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.947 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.285 ±(99.9%) 0.831 ns/op [Average]
  (min, avg, max) = (14.947, 16.285, 17.108), stdev = 0.957
  CI (99.9%): [15.453, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 28.47% complete, ETA 00:27:30
# Fork: 1 of 2
# Warmup Iteration   1: 892.879 ns/op
# Warmup Iteration   2: 1659.248 ns/op
# Warmup Iteration   3: 904.068 ns/op
Iteration   1: 394.278 ns/op
Iteration   2: 20362.457 ns/op
Iteration   3: 298.368 ns/op
Iteration   4: 237.340 ns/op
Iteration   5: 331.580 ns/op
Iteration   6: 16934.907 ns/op
Iteration   7: 285.287 ns/op
Iteration   8: 293.497 ns/op
Iteration   9: 342.082 ns/op
Iteration  10: 248.709 ns/op

# Run progress: 28.54% complete, ETA 00:27:28
# Fork: 2 of 2
# Warmup Iteration   1: 958.969 ns/op
# Warmup Iteration   2: 10863.000 ns/op
# Warmup Iteration   3: 765.655 ns/op
Iteration   1: 451.289 ns/op
Iteration   2: 19034.290 ns/op
Iteration   3: 297.755 ns/op
Iteration   4: 236.135 ns/op
Iteration   5: 332.382 ns/op
Iteration   6: 19059.404 ns/op
Iteration   7: 278.114 ns/op
Iteration   8: 284.612 ns/op
Iteration   9: 341.080 ns/op
Iteration  10: 231.001 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4013.728 ±(99.9%) 6626.179 ns/op [Average]
  (min, avg, max) = (231.001, 4013.728, 20362.457), stdev = 7630.718
  CI (99.9%): [≈ 0, 10639.908] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 28.61% complete, ETA 00:27:27
# Fork: 1 of 2
# Warmup Iteration   1: 272.703 ns/op
# Warmup Iteration   2: 356.908 ns/op
# Warmup Iteration   3: 224.348 ns/op
Iteration   1: 238.937 ns/op
Iteration   2: 220.018 ns/op
Iteration   3: 281.757 ns/op
Iteration   4: 199.833 ns/op
Iteration   5: 192.767 ns/op
Iteration   6: 211.934 ns/op
Iteration   7: 262.807 ns/op
Iteration   8: 190.482 ns/op
Iteration   9: 276.643 ns/op
Iteration  10: 177.460 ns/op

# Run progress: 28.68% complete, ETA 00:27:25
# Fork: 2 of 2
# Warmup Iteration   1: 292.371 ns/op
# Warmup Iteration   2: 361.689 ns/op
# Warmup Iteration   3: 237.669 ns/op
Iteration   1: 238.922 ns/op
Iteration   2: 219.994 ns/op
Iteration   3: 297.249 ns/op
Iteration   4: 200.363 ns/op
Iteration   5: 193.243 ns/op
Iteration   6: 212.208 ns/op
Iteration   7: 249.429 ns/op
Iteration   8: 190.715 ns/op
Iteration   9: 276.567 ns/op
Iteration  10: 177.302 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  225.431 ±(99.9%) 32.584 ns/op [Average]
  (min, avg, max) = (177.302, 225.431, 297.249), stdev = 37.523
  CI (99.9%): [192.848, 258.015] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 28.75% complete, ETA 00:27:24
# Fork: 1 of 2
# Warmup Iteration   1: 15397.846 ns/op
# Warmup Iteration   2: 2641.881 ns/op
# Warmup Iteration   3: 460.072 ns/op
Iteration   1: 2197.242 ns/op
Iteration   2: 367.586 ns/op
Iteration   3: 324.104 ns/op
Iteration   4: 236.435 ns/op
Iteration   5: 214.700 ns/op
Iteration   6: 15094.198 ns/op
Iteration   7: 308.008 ns/op
Iteration   8: 245.424 ns/op
Iteration   9: 289.506 ns/op
Iteration  10: 228.305 ns/op

# Run progress: 28.82% complete, ETA 00:27:22
# Fork: 2 of 2
# Warmup Iteration   1: 11016.931 ns/op
# Warmup Iteration   2: 12687.730 ns/op
# Warmup Iteration   3: 469.523 ns/op
Iteration   1: 9490.032 ns/op
Iteration   2: 397.865 ns/op
Iteration   3: 323.690 ns/op
Iteration   4: 237.800 ns/op
Iteration   5: 212.626 ns/op
Iteration   6: 11749.992 ns/op
Iteration   7: 304.264 ns/op
Iteration   8: 241.584 ns/op
Iteration   9: 284.429 ns/op
Iteration  10: 223.916 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2148.585 ±(99.9%) 3830.607 ns/op [Average]
  (min, avg, max) = (212.626, 2148.585, 15094.198), stdev = 4411.333
  CI (99.9%): [≈ 0, 5979.193] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 28.89% complete, ETA 00:27:20
# Fork: 1 of 2
# Warmup Iteration   1: 236.341 ns/op
# Warmup Iteration   2: 268.453 ns/op
# Warmup Iteration   3: 204.065 ns/op
Iteration   1: 180.499 ns/op
Iteration   2: 192.287 ns/op
Iteration   3: 207.736 ns/op
Iteration   4: 170.926 ns/op
Iteration   5: 172.546 ns/op
Iteration   6: 196.659 ns/op
Iteration   7: 198.123 ns/op
Iteration   8: 161.130 ns/op
Iteration   9: 207.034 ns/op
Iteration  10: 150.523 ns/op

# Run progress: 28.96% complete, ETA 00:27:19
# Fork: 2 of 2
# Warmup Iteration   1: 240.416 ns/op
# Warmup Iteration   2: 267.899 ns/op
# Warmup Iteration   3: 205.828 ns/op
Iteration   1: 179.749 ns/op
Iteration   2: 191.645 ns/op
Iteration   3: 206.836 ns/op
Iteration   4: 169.553 ns/op
Iteration   5: 172.091 ns/op
Iteration   6: 194.376 ns/op
Iteration   7: 198.324 ns/op
Iteration   8: 159.277 ns/op
Iteration   9: 207.064 ns/op
Iteration  10: 149.418 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  183.290 ±(99.9%) 16.752 ns/op [Average]
  (min, avg, max) = (149.418, 183.290, 207.736), stdev = 19.291
  CI (99.9%): [166.538, 200.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 29.03% complete, ETA 00:27:17
# Fork: 1 of 2
# Warmup Iteration   1: 805.298 ns/op
# Warmup Iteration   2: 7324.901 ns/op
# Warmup Iteration   3: 3136.506 ns/op
Iteration   1: 618.612 ns/op
Iteration   2: 657.499 ns/op
Iteration   3: 5859.146 ns/op
Iteration   4: 682.181 ns/op
Iteration   5: 558.350 ns/op
Iteration   6: 696.056 ns/op
Iteration   7: 658.284 ns/op
Iteration   8: 557.263 ns/op
Iteration   9: 676.531 ns/op
Iteration  10: 631.180 ns/op

# Run progress: 29.10% complete, ETA 00:27:16
# Fork: 2 of 2
# Warmup Iteration   1: 722.145 ns/op
# Warmup Iteration   2: 2465.205 ns/op
# Warmup Iteration   3: 1273.941 ns/op
Iteration   1: 616.903 ns/op
Iteration   2: 659.379 ns/op
Iteration   3: 2579.138 ns/op
Iteration   4: 691.596 ns/op
Iteration   5: 563.681 ns/op
Iteration   6: 693.833 ns/op
Iteration   7: 670.251 ns/op
Iteration   8: 566.666 ns/op
Iteration   9: 695.396 ns/op
Iteration  10: 644.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  998.826 ±(99.9%) 1062.903 ns/op [Average]
  (min, avg, max) = (557.263, 998.826, 5859.146), stdev = 1224.041
  CI (99.9%): [≈ 0, 2061.729] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 29.17% complete, ETA 00:27:14
# Fork: 1 of 2
# Warmup Iteration   1: 19.323 ns/op
# Warmup Iteration   2: 22.440 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.078 ns/op
Iteration   2: 15.263 ns/op
Iteration   3: 17.012 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.399 ns/op
Iteration   7: 17.010 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.004 ns/op
Iteration  10: 14.979 ns/op

# Run progress: 29.24% complete, ETA 00:27:12
# Fork: 2 of 2
# Warmup Iteration   1: 19.768 ns/op
# Warmup Iteration   2: 22.965 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.277 ns/op
Iteration   3: 17.018 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.357 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.004 ns/op
Iteration  10: 14.975 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.975, 16.288, 17.111), stdev = 0.950
  CI (99.9%): [15.463, 17.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 29.31% complete, ETA 00:27:11
# Fork: 1 of 2
# Warmup Iteration   1: 1298.942 ns/op
# Warmup Iteration   2: 430.833 ns/op
# Warmup Iteration   3: 304.205 ns/op
Iteration   1: 305.647 ns/op
Iteration   2: 307.409 ns/op
Iteration   3: 305.563 ns/op
Iteration   4: 303.982 ns/op
Iteration   5: 305.887 ns/op
Iteration   6: 304.376 ns/op
Iteration   7: 306.360 ns/op
Iteration   8: 305.274 ns/op
Iteration   9: 305.870 ns/op
Iteration  10: 304.833 ns/op

# Run progress: 29.38% complete, ETA 00:27:09
# Fork: 2 of 2
# Warmup Iteration   1: 1029.970 ns/op
# Warmup Iteration   2: 438.309 ns/op
# Warmup Iteration   3: 303.747 ns/op
Iteration   1: 306.091 ns/op
Iteration   2: 307.748 ns/op
Iteration   3: 306.165 ns/op
Iteration   4: 306.071 ns/op
Iteration   5: 306.120 ns/op
Iteration   6: 304.489 ns/op
Iteration   7: 306.514 ns/op
Iteration   8: 305.757 ns/op
Iteration   9: 305.695 ns/op
Iteration  10: 304.525 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  305.719 ±(99.9%) 0.833 ns/op [Average]
  (min, avg, max) = (303.982, 305.719, 307.748), stdev = 0.959
  CI (99.9%): [304.886, 306.551] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 29.44% complete, ETA 00:27:08
# Fork: 1 of 2
# Warmup Iteration   1: 659.815 ns/op
# Warmup Iteration   2: 603.935 ns/op
# Warmup Iteration   3: 470.216 ns/op
Iteration   1: 472.011 ns/op
Iteration   2: 475.859 ns/op
Iteration   3: 470.122 ns/op
Iteration   4: 473.902 ns/op
Iteration   5: 487.871 ns/op
Iteration   6: 470.510 ns/op
Iteration   7: 469.787 ns/op
Iteration   8: 470.203 ns/op
Iteration   9: 470.435 ns/op
Iteration  10: 471.338 ns/op

# Run progress: 29.51% complete, ETA 00:27:06
# Fork: 2 of 2
# Warmup Iteration   1: 636.715 ns/op
# Warmup Iteration   2: 578.013 ns/op
# Warmup Iteration   3: 452.102 ns/op
Iteration   1: 452.627 ns/op
Iteration   2: 462.744 ns/op
Iteration   3: 452.609 ns/op
Iteration   4: 452.795 ns/op
Iteration   5: 451.523 ns/op
Iteration   6: 454.229 ns/op
Iteration   7: 452.598 ns/op
Iteration   8: 452.543 ns/op
Iteration   9: 452.510 ns/op
Iteration  10: 452.261 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  463.424 ±(99.9%) 9.516 ns/op [Average]
  (min, avg, max) = (451.523, 463.424, 487.871), stdev = 10.958
  CI (99.9%): [453.908, 472.940] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 29.58% complete, ETA 00:27:04
# Fork: 1 of 2
# Warmup Iteration   1: 24960.860 ns/op
# Warmup Iteration   2: 569.779 ns/op
# Warmup Iteration   3: 355.601 ns/op
Iteration   1: 328.898 ns/op
Iteration   2: 329.619 ns/op
Iteration   3: 328.416 ns/op
Iteration   4: 336.314 ns/op
Iteration   5: 328.654 ns/op
Iteration   6: 330.337 ns/op
Iteration   7: 328.720 ns/op
Iteration   8: 328.702 ns/op
Iteration   9: 328.303 ns/op
Iteration  10: 330.537 ns/op

# Run progress: 29.65% complete, ETA 00:27:03
# Fork: 2 of 2
# Warmup Iteration   1: 19345.534 ns/op
# Warmup Iteration   2: 535.198 ns/op
# Warmup Iteration   3: 355.950 ns/op
Iteration   1: 327.002 ns/op
Iteration   2: 326.572 ns/op
Iteration   3: 326.853 ns/op
Iteration   4: 332.924 ns/op
Iteration   5: 327.194 ns/op
Iteration   6: 328.281 ns/op
Iteration   7: 326.850 ns/op
Iteration   8: 326.891 ns/op
Iteration   9: 326.995 ns/op
Iteration  10: 328.634 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  328.835 ±(99.9%) 2.046 ns/op [Average]
  (min, avg, max) = (326.572, 328.835, 336.314), stdev = 2.356
  CI (99.9%): [326.789, 330.881] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 29.72% complete, ETA 00:27:01
# Fork: 1 of 2
# Warmup Iteration   1: 489.563 ns/op
# Warmup Iteration   2: 419.395 ns/op
# Warmup Iteration   3: 330.235 ns/op
Iteration   1: 328.659 ns/op
Iteration   2: 330.524 ns/op
Iteration   3: 328.563 ns/op
Iteration   4: 329.770 ns/op
Iteration   5: 328.384 ns/op
Iteration   6: 329.857 ns/op
Iteration   7: 328.125 ns/op
Iteration   8: 328.817 ns/op
Iteration   9: 329.136 ns/op
Iteration  10: 329.570 ns/op

# Run progress: 29.79% complete, ETA 00:26:59
# Fork: 2 of 2
# Warmup Iteration   1: 487.920 ns/op
# Warmup Iteration   2: 448.315 ns/op
# Warmup Iteration   3: 330.133 ns/op
Iteration   1: 328.281 ns/op
Iteration   2: 330.540 ns/op
Iteration   3: 328.949 ns/op
Iteration   4: 329.794 ns/op
Iteration   5: 328.831 ns/op
Iteration   6: 330.211 ns/op
Iteration   7: 328.757 ns/op
Iteration   8: 328.918 ns/op
Iteration   9: 329.127 ns/op
Iteration  10: 329.647 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  329.223 ±(99.9%) 0.630 ns/op [Average]
  (min, avg, max) = (328.125, 329.223, 330.540), stdev = 0.726
  CI (99.9%): [328.593, 329.853] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 29.86% complete, ETA 00:26:58
# Fork: 1 of 2
# Warmup Iteration   1: 981.076 ns/op
# Warmup Iteration   2: 670.655 ns/op
# Warmup Iteration   3: 484.605 ns/op
Iteration   1: 486.664 ns/op
Iteration   2: 481.921 ns/op
Iteration   3: 483.038 ns/op
Iteration   4: 512.073 ns/op
Iteration   5: 504.113 ns/op
Iteration   6: 502.564 ns/op
Iteration   7: 504.019 ns/op
Iteration   8: 504.061 ns/op
Iteration   9: 503.996 ns/op
Iteration  10: 502.983 ns/op

# Run progress: 29.93% complete, ETA 00:26:56
# Fork: 2 of 2
# Warmup Iteration   1: 1026.240 ns/op
# Warmup Iteration   2: 629.629 ns/op
# Warmup Iteration   3: 482.238 ns/op
Iteration   1: 486.293 ns/op
Iteration   2: 482.606 ns/op
Iteration   3: 483.941 ns/op
Iteration   4: 512.847 ns/op
Iteration   5: 504.846 ns/op
Iteration   6: 503.211 ns/op
Iteration   7: 504.344 ns/op
Iteration   8: 504.422 ns/op
Iteration   9: 504.647 ns/op
Iteration  10: 503.418 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  498.801 ±(99.9%) 8.930 ns/op [Average]
  (min, avg, max) = (481.921, 498.801, 512.847), stdev = 10.284
  CI (99.9%): [489.871, 507.730] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 30.00% complete, ETA 00:26:55
# Fork: 1 of 2
# Warmup Iteration   1: 19.496 ns/op
# Warmup Iteration   2: 23.381 ns/op
# Warmup Iteration   3: 15.023 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.274 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.385 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.968 ns/op

# Run progress: 30.07% complete, ETA 00:26:53
# Fork: 2 of 2
# Warmup Iteration   1: 19.359 ns/op
# Warmup Iteration   2: 23.020 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.285 ns/op
Iteration   3: 17.011 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.376 ns/op
Iteration   7: 17.029 ns/op
Iteration   8: 17.010 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.962 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.962, 16.291, 17.110), stdev = 0.953
  CI (99.9%): [15.464, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 30.14% complete, ETA 00:26:51
# Fork: 1 of 2
# Warmup Iteration   1: 532.084 ns/op
# Warmup Iteration   2: 373.925 ns/op
# Warmup Iteration   3: 288.482 ns/op
Iteration   1: 292.538 ns/op
Iteration   2: 295.623 ns/op
Iteration   3: 291.334 ns/op
Iteration   4: 297.166 ns/op
Iteration   5: 292.000 ns/op
Iteration   6: 288.432 ns/op
Iteration   7: 297.352 ns/op
Iteration   8: 291.377 ns/op
Iteration   9: 294.972 ns/op
Iteration  10: 289.410 ns/op

# Run progress: 30.21% complete, ETA 00:26:50
# Fork: 2 of 2
# Warmup Iteration   1: 534.833 ns/op
# Warmup Iteration   2: 399.932 ns/op
# Warmup Iteration   3: 297.128 ns/op
Iteration   1: 298.046 ns/op
Iteration   2: 298.050 ns/op
Iteration   3: 300.056 ns/op
Iteration   4: 297.097 ns/op
Iteration   5: 297.451 ns/op
Iteration   6: 298.561 ns/op
Iteration   7: 299.663 ns/op
Iteration   8: 300.909 ns/op
Iteration   9: 298.876 ns/op
Iteration  10: 300.212 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  295.956 ±(99.9%) 3.300 ns/op [Average]
  (min, avg, max) = (288.432, 295.956, 300.909), stdev = 3.800
  CI (99.9%): [292.656, 299.256] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 30.28% complete, ETA 00:26:48
# Fork: 1 of 2
# Warmup Iteration   1: 578.743 ns/op
# Warmup Iteration   2: 469.151 ns/op
# Warmup Iteration   3: 363.424 ns/op
Iteration   1: 361.916 ns/op
Iteration   2: 363.778 ns/op
Iteration   3: 363.697 ns/op
Iteration   4: 363.392 ns/op
Iteration   5: 364.089 ns/op
Iteration   6: 364.435 ns/op
Iteration   7: 363.687 ns/op
Iteration   8: 363.261 ns/op
Iteration   9: 363.888 ns/op
Iteration  10: 362.976 ns/op

# Run progress: 30.35% complete, ETA 00:26:47
# Fork: 2 of 2
# Warmup Iteration   1: 533.118 ns/op
# Warmup Iteration   2: 469.492 ns/op
# Warmup Iteration   3: 362.398 ns/op
Iteration   1: 361.099 ns/op
Iteration   2: 363.170 ns/op
Iteration   3: 362.014 ns/op
Iteration   4: 363.211 ns/op
Iteration   5: 362.457 ns/op
Iteration   6: 362.571 ns/op
Iteration   7: 362.071 ns/op
Iteration   8: 362.058 ns/op
Iteration   9: 362.218 ns/op
Iteration  10: 362.325 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  362.916 ±(99.9%) 0.767 ns/op [Average]
  (min, avg, max) = (361.099, 362.916, 364.435), stdev = 0.883
  CI (99.9%): [362.149, 363.682] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 30.42% complete, ETA 00:26:45
# Fork: 1 of 2
# Warmup Iteration   1: 625.238 ns/op
# Warmup Iteration   2: 279.027 ns/op
# Warmup Iteration   3: 205.026 ns/op
Iteration   1: 203.927 ns/op
Iteration   2: 204.943 ns/op
Iteration   3: 203.885 ns/op
Iteration   4: 205.081 ns/op
Iteration   5: 203.925 ns/op
Iteration   6: 204.598 ns/op
Iteration   7: 203.939 ns/op
Iteration   8: 203.882 ns/op
Iteration   9: 203.808 ns/op
Iteration  10: 204.732 ns/op

# Run progress: 30.49% complete, ETA 00:26:43
# Fork: 2 of 2
# Warmup Iteration   1: 631.543 ns/op
# Warmup Iteration   2: 276.786 ns/op
# Warmup Iteration   3: 204.134 ns/op
Iteration   1: 202.602 ns/op
Iteration   2: 204.218 ns/op
Iteration   3: 202.934 ns/op
Iteration   4: 204.163 ns/op
Iteration   5: 202.858 ns/op
Iteration   6: 204.355 ns/op
Iteration   7: 202.930 ns/op
Iteration   8: 202.743 ns/op
Iteration   9: 202.912 ns/op
Iteration  10: 203.860 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  203.815 ±(99.9%) 0.657 ns/op [Average]
  (min, avg, max) = (202.602, 203.815, 205.081), stdev = 0.756
  CI (99.9%): [203.158, 204.471] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 30.56% complete, ETA 00:26:42
# Fork: 1 of 2
# Warmup Iteration   1: 466.991 ns/op
# Warmup Iteration   2: 413.881 ns/op
# Warmup Iteration   3: 289.333 ns/op
Iteration   1: 288.505 ns/op
Iteration   2: 289.038 ns/op
Iteration   3: 288.145 ns/op
Iteration   4: 289.062 ns/op
Iteration   5: 287.627 ns/op
Iteration   6: 288.472 ns/op
Iteration   7: 288.837 ns/op
Iteration   8: 288.368 ns/op
Iteration   9: 288.444 ns/op
Iteration  10: 289.454 ns/op

# Run progress: 30.63% complete, ETA 00:26:40
# Fork: 2 of 2
# Warmup Iteration   1: 424.239 ns/op
# Warmup Iteration   2: 428.682 ns/op
# Warmup Iteration   3: 290.845 ns/op
Iteration   1: 288.929 ns/op
Iteration   2: 290.443 ns/op
Iteration   3: 289.240 ns/op
Iteration   4: 290.368 ns/op
Iteration   5: 289.112 ns/op
Iteration   6: 290.094 ns/op
Iteration   7: 289.487 ns/op
Iteration   8: 290.251 ns/op
Iteration   9: 289.523 ns/op
Iteration  10: 290.524 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  289.196 ±(99.9%) 0.717 ns/op [Average]
  (min, avg, max) = (287.627, 289.196, 290.524), stdev = 0.825
  CI (99.9%): [288.480, 289.913] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 30.69% complete, ETA 00:26:39
# Fork: 1 of 2
# Warmup Iteration   1: 1889.236 ns/op
# Warmup Iteration   2: 981.816 ns/op
# Warmup Iteration   3: 799.566 ns/op
Iteration   1: 803.227 ns/op
Iteration   2: 800.598 ns/op
Iteration   3: 800.512 ns/op
Iteration   4: 842.179 ns/op
Iteration   5: 830.589 ns/op
Iteration   6: 829.521 ns/op
Iteration   7: 829.742 ns/op
Iteration   8: 829.844 ns/op
Iteration   9: 830.002 ns/op
Iteration  10: 829.775 ns/op

# Run progress: 30.76% complete, ETA 00:26:37
# Fork: 2 of 2
# Warmup Iteration   1: 1744.505 ns/op
# Warmup Iteration   2: 1160.476 ns/op
# Warmup Iteration   3: 800.205 ns/op
Iteration   1: 803.394 ns/op
Iteration   2: 800.654 ns/op
Iteration   3: 800.667 ns/op
Iteration   4: 915.688 ns/op
Iteration   5: 817.103 ns/op
Iteration   6: 816.051 ns/op
Iteration   7: 817.145 ns/op
Iteration   8: 817.027 ns/op
Iteration   9: 816.963 ns/op
Iteration  10: 816.119 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  822.340 ±(99.9%) 22.054 ns/op [Average]
  (min, avg, max) = (800.512, 822.340, 915.688), stdev = 25.397
  CI (99.9%): [800.286, 844.394] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 30.83% complete, ETA 00:26:35
# Fork: 1 of 2
# Warmup Iteration   1: 19.827 ns/op
# Warmup Iteration   2: 21.108 ns/op
# Warmup Iteration   3: 15.047 ns/op
Iteration   1: 17.047 ns/op
Iteration   2: 15.274 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.478 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.020 ns/op
Iteration  10: 14.977 ns/op

# Run progress: 30.90% complete, ETA 00:26:34
# Fork: 2 of 2
# Warmup Iteration   1: 19.448 ns/op
# Warmup Iteration   2: 23.361 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.281 ns/op
Iteration   3: 17.009 ns/op
Iteration   4: 15.007 ns/op
Iteration   5: 17.100 ns/op
Iteration   6: 15.375 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.969 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.821 ns/op [Average]
  (min, avg, max) = (14.969, 16.292, 17.110), stdev = 0.946
  CI (99.9%): [15.471, 17.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 30.97% complete, ETA 00:26:32
# Fork: 1 of 2
# Warmup Iteration   1: 527.319 ns/op
# Warmup Iteration   2: 1195.158 ns/op
# Warmup Iteration   3: 412.089 ns/op
Iteration   1: 237.287 ns/op
Iteration   2: 1632.594 ns/op
Iteration   3: 315.775 ns/op
Iteration   4: 2276.392 ns/op
Iteration   5: 227.599 ns/op
Iteration   6: 204.037 ns/op
Iteration   7: 230.881 ns/op
Iteration   8: 202.135 ns/op
Iteration   9: 269.998 ns/op
Iteration  10: 244.070 ns/op

# Run progress: 31.04% complete, ETA 00:26:30
# Fork: 2 of 2
# Warmup Iteration   1: 380.647 ns/op
# Warmup Iteration   2: 1702.312 ns/op
# Warmup Iteration   3: 425.368 ns/op
Iteration   1: 239.438 ns/op
Iteration   2: 1568.271 ns/op
Iteration   3: 365.582 ns/op
Iteration   4: 1143.838 ns/op
Iteration   5: 224.768 ns/op
Iteration   6: 199.977 ns/op
Iteration   7: 231.276 ns/op
Iteration   8: 199.578 ns/op
Iteration   9: 268.396 ns/op
Iteration  10: 258.928 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  527.041 ±(99.9%) 528.940 ns/op [Average]
  (min, avg, max) = (199.578, 527.041, 2276.392), stdev = 609.128
  CI (99.9%): [≈ 0, 1055.981] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 31.11% complete, ETA 00:26:29
# Fork: 1 of 2
# Warmup Iteration   1: 513.131 ns/op
# Warmup Iteration   2: 481.305 ns/op
# Warmup Iteration   3: 410.145 ns/op
Iteration   1: 332.167 ns/op
Iteration   2: 375.157 ns/op
Iteration   3: 330.435 ns/op
Iteration   4: 385.635 ns/op
Iteration   5: 344.562 ns/op
Iteration   6: 378.003 ns/op
Iteration   7: 347.333 ns/op
Iteration   8: 358.536 ns/op
Iteration   9: 333.847 ns/op
Iteration  10: 410.410 ns/op

# Run progress: 31.18% complete, ETA 00:26:27
# Fork: 2 of 2
# Warmup Iteration   1: 557.385 ns/op
# Warmup Iteration   2: 424.162 ns/op
# Warmup Iteration   3: 408.164 ns/op
Iteration   1: 327.808 ns/op
Iteration   2: 371.637 ns/op
Iteration   3: 326.041 ns/op
Iteration   4: 376.742 ns/op
Iteration   5: 340.898 ns/op
Iteration   6: 370.729 ns/op
Iteration   7: 343.554 ns/op
Iteration   8: 352.459 ns/op
Iteration   9: 334.402 ns/op
Iteration  10: 407.011 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  357.368 ±(99.9%) 22.384 ns/op [Average]
  (min, avg, max) = (326.041, 357.368, 410.410), stdev = 25.778
  CI (99.9%): [334.984, 379.752] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 31.25% complete, ETA 00:26:26
# Fork: 1 of 2
# Warmup Iteration   1: 418.007 ns/op
# Warmup Iteration   2: 14343.684 ns/op
# Warmup Iteration   3: 276.493 ns/op
Iteration   1: 21051.714 ns/op
Iteration   2: 578.369 ns/op
Iteration   3: 173.781 ns/op
Iteration   4: 8275.669 ns/op
Iteration   5: 446.491 ns/op
Iteration   6: 434.020 ns/op
Iteration   7: 235.521 ns/op
Iteration   8: 255.509 ns/op
Iteration   9: 187.217 ns/op
Iteration  10: 227.827 ns/op

# Run progress: 31.32% complete, ETA 00:26:24
# Fork: 2 of 2
# Warmup Iteration   1: 445.300 ns/op
# Warmup Iteration   2: 12334.541 ns/op
# Warmup Iteration   3: 342.681 ns/op
Iteration   1: 21077.024 ns/op
Iteration   2: 500.405 ns/op
Iteration   3: 173.433 ns/op
Iteration   4: 392.715 ns/op
Iteration   5: 268.313 ns/op
Iteration   6: 429.740 ns/op
Iteration   7: 240.857 ns/op
Iteration   8: 280.976 ns/op
Iteration   9: 184.773 ns/op
Iteration  10: 227.274 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2782.081 ±(99.9%) 5645.112 ns/op [Average]
  (min, avg, max) = (173.433, 2782.081, 21077.024), stdev = 6500.919
  CI (99.9%): [≈ 0, 8427.193] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 31.39% complete, ETA 00:26:23
# Fork: 1 of 2
# Warmup Iteration   1: 531.472 ns/op
# Warmup Iteration   2: 1454.624 ns/op
# Warmup Iteration   3: 330.809 ns/op
Iteration   1: 274.627 ns/op
Iteration   2: 308.846 ns/op
Iteration   3: 275.681 ns/op
Iteration   4: 297.949 ns/op
Iteration   5: 272.363 ns/op
Iteration   6: 298.996 ns/op
Iteration   7: 289.020 ns/op
Iteration   8: 281.084 ns/op
Iteration   9: 250.605 ns/op
Iteration  10: 330.741 ns/op

# Run progress: 31.46% complete, ETA 00:26:21
# Fork: 2 of 2
# Warmup Iteration   1: 517.599 ns/op
# Warmup Iteration   2: 21882.362 ns/op
# Warmup Iteration   3: 342.211 ns/op
Iteration   1: 290.066 ns/op
Iteration   2: 319.933 ns/op
Iteration   3: 283.254 ns/op
Iteration   4: 303.079 ns/op
Iteration   5: 279.722 ns/op
Iteration   6: 312.356 ns/op
Iteration   7: 300.856 ns/op
Iteration   8: 292.980 ns/op
Iteration   9: 253.996 ns/op
Iteration  10: 342.235 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  292.919 ±(99.9%) 20.162 ns/op [Average]
  (min, avg, max) = (250.605, 292.919, 342.235), stdev = 23.219
  CI (99.9%): [272.757, 313.082] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 31.53% complete, ETA 00:26:19
# Fork: 1 of 2
# Warmup Iteration   1: 3032.884 ns/op
# Warmup Iteration   2: 2053.037 ns/op
# Warmup Iteration   3: 1605.281 ns/op
Iteration   1: 1452.175 ns/op
Iteration   2: 1523.632 ns/op
Iteration   3: 1456.797 ns/op
Iteration   4: 1559.227 ns/op
Iteration   5: 2380.689 ns/op
Iteration   6: 1523.434 ns/op
Iteration   7: 1484.403 ns/op
Iteration   8: 1498.721 ns/op
Iteration   9: 1491.603 ns/op
Iteration  10: 1615.976 ns/op

# Run progress: 31.60% complete, ETA 00:26:18
# Fork: 2 of 2
# Warmup Iteration   1: 2961.765 ns/op
# Warmup Iteration   2: 1865.257 ns/op
# Warmup Iteration   3: 1603.765 ns/op
Iteration   1: 1449.648 ns/op
Iteration   2: 1521.146 ns/op
Iteration   3: 1449.240 ns/op
Iteration   4: 1576.040 ns/op
Iteration   5: 3765.498 ns/op
Iteration   6: 1521.059 ns/op
Iteration   7: 1477.829 ns/op
Iteration   8: 1497.112 ns/op
Iteration   9: 1492.155 ns/op
Iteration  10: 1613.375 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1667.488 ±(99.9%) 462.709 ns/op [Average]
  (min, avg, max) = (1449.240, 1667.488, 3765.498), stdev = 532.856
  CI (99.9%): [1204.779, 2130.197] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 31.67% complete, ETA 00:26:16
# Fork: 1 of 2
# Warmup Iteration   1: 19.728 ns/op
# Warmup Iteration   2: 21.803 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.055 ns/op
Iteration   2: 15.259 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.407 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.011 ns/op
Iteration  10: 14.977 ns/op

# Run progress: 31.74% complete, ETA 00:26:14
# Fork: 2 of 2
# Warmup Iteration   1: 19.338 ns/op
# Warmup Iteration   2: 23.004 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.075 ns/op
Iteration   2: 15.254 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.387 ns/op
Iteration   7: 16.982 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.027 ns/op
Iteration  10: 14.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.971, 16.288, 17.108), stdev = 0.950
  CI (99.9%): [15.463, 17.112] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 31.81% complete, ETA 00:26:13
# Fork: 1 of 2
# Warmup Iteration   1: 106.862 ns/op
# Warmup Iteration   2: 89.474 ns/op
# Warmup Iteration   3: 64.121 ns/op
Iteration   1: 65.227 ns/op
Iteration   2: 64.066 ns/op
Iteration   3: 65.260 ns/op
Iteration   4: 64.568 ns/op
Iteration   5: 65.268 ns/op
Iteration   6: 63.927 ns/op
Iteration   7: 65.272 ns/op
Iteration   8: 65.259 ns/op
Iteration   9: 65.253 ns/op
Iteration  10: 63.852 ns/op

# Run progress: 31.87% complete, ETA 00:26:11
# Fork: 2 of 2
# Warmup Iteration   1: 94.828 ns/op
# Warmup Iteration   2: 94.385 ns/op
# Warmup Iteration   3: 64.096 ns/op
Iteration   1: 65.317 ns/op
Iteration   2: 64.137 ns/op
Iteration   3: 65.277 ns/op
Iteration   4: 64.541 ns/op
Iteration   5: 65.395 ns/op
Iteration   6: 64.018 ns/op
Iteration   7: 65.240 ns/op
Iteration   8: 65.209 ns/op
Iteration   9: 65.241 ns/op
Iteration  10: 63.867 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  64.810 ±(99.9%) 0.523 ns/op [Average]
  (min, avg, max) = (63.852, 64.810, 65.395), stdev = 0.602
  CI (99.9%): [64.287, 65.333] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 31.94% complete, ETA 00:26:10
# Fork: 1 of 2
# Warmup Iteration   1: 237.826 ns/op
# Warmup Iteration   2: 245.422 ns/op
# Warmup Iteration   3: 170.510 ns/op
Iteration   1: 168.423 ns/op
Iteration   2: 170.186 ns/op
Iteration   3: 169.474 ns/op
Iteration   4: 170.230 ns/op
Iteration   5: 168.037 ns/op
Iteration   6: 169.681 ns/op
Iteration   7: 169.427 ns/op
Iteration   8: 169.879 ns/op
Iteration   9: 169.535 ns/op
Iteration  10: 168.954 ns/op

# Run progress: 32.01% complete, ETA 00:26:08
# Fork: 2 of 2
# Warmup Iteration   1: 238.052 ns/op
# Warmup Iteration   2: 223.142 ns/op
# Warmup Iteration   3: 170.396 ns/op
Iteration   1: 168.694 ns/op
Iteration   2: 170.135 ns/op
Iteration   3: 169.353 ns/op
Iteration   4: 170.539 ns/op
Iteration   5: 167.984 ns/op
Iteration   6: 169.597 ns/op
Iteration   7: 169.354 ns/op
Iteration   8: 169.620 ns/op
Iteration   9: 168.566 ns/op
Iteration  10: 169.243 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  169.346 ±(99.9%) 0.622 ns/op [Average]
  (min, avg, max) = (167.984, 169.346, 170.539), stdev = 0.716
  CI (99.9%): [168.724, 169.968] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 32.08% complete, ETA 00:26:06
# Fork: 1 of 2
# Warmup Iteration   1: 323.138 ns/op
# Warmup Iteration   2: 116.553 ns/op
# Warmup Iteration   3: 76.899 ns/op
Iteration   1: 75.775 ns/op
Iteration   2: 76.890 ns/op
Iteration   3: 75.771 ns/op
Iteration   4: 77.958 ns/op
Iteration   5: 75.802 ns/op
Iteration   6: 76.922 ns/op
Iteration   7: 75.773 ns/op
Iteration   8: 75.742 ns/op
Iteration   9: 75.747 ns/op
Iteration  10: 76.833 ns/op

# Run progress: 32.15% complete, ETA 00:26:05
# Fork: 2 of 2
# Warmup Iteration   1: 415.818 ns/op
# Warmup Iteration   2: 118.473 ns/op
# Warmup Iteration   3: 76.891 ns/op
Iteration   1: 75.778 ns/op
Iteration   2: 76.892 ns/op
Iteration   3: 75.763 ns/op
Iteration   4: 77.947 ns/op
Iteration   5: 75.800 ns/op
Iteration   6: 76.903 ns/op
Iteration   7: 75.769 ns/op
Iteration   8: 75.765 ns/op
Iteration   9: 75.778 ns/op
Iteration  10: 76.849 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  76.323 ±(99.9%) 0.656 ns/op [Average]
  (min, avg, max) = (75.742, 76.323, 77.958), stdev = 0.755
  CI (99.9%): [75.667, 76.979] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 32.22% complete, ETA 00:26:03
# Fork: 1 of 2
# Warmup Iteration   1: 150.330 ns/op
# Warmup Iteration   2: 140.705 ns/op
# Warmup Iteration   3: 107.394 ns/op
Iteration   1: 105.542 ns/op
Iteration   2: 107.633 ns/op
Iteration   3: 106.245 ns/op
Iteration   4: 107.272 ns/op
Iteration   5: 105.517 ns/op
Iteration   6: 106.664 ns/op
Iteration   7: 105.786 ns/op
Iteration   8: 105.776 ns/op
Iteration   9: 105.678 ns/op
Iteration  10: 107.303 ns/op

# Run progress: 32.29% complete, ETA 00:26:02
# Fork: 2 of 2
# Warmup Iteration   1: 151.363 ns/op
# Warmup Iteration   2: 159.371 ns/op
# Warmup Iteration   3: 107.505 ns/op
Iteration   1: 106.209 ns/op
Iteration   2: 107.186 ns/op
Iteration   3: 105.865 ns/op
Iteration   4: 107.376 ns/op
Iteration   5: 105.858 ns/op
Iteration   6: 107.072 ns/op
Iteration   7: 105.847 ns/op
Iteration   8: 105.853 ns/op
Iteration   9: 105.718 ns/op
Iteration  10: 106.717 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  106.356 ±(99.9%) 0.622 ns/op [Average]
  (min, avg, max) = (105.517, 106.356, 107.633), stdev = 0.717
  CI (99.9%): [105.733, 106.978] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 32.36% complete, ETA 00:26:00
# Fork: 1 of 2
# Warmup Iteration   1: 187.485 ns/op
# Warmup Iteration   2: 176.226 ns/op
# Warmup Iteration   3: 123.571 ns/op
Iteration   1: 128.053 ns/op
Iteration   2: 123.638 ns/op
Iteration   3: 125.329 ns/op
Iteration   4: 140.518 ns/op
Iteration   5: 140.573 ns/op
Iteration   6: 139.104 ns/op
Iteration   7: 140.360 ns/op
Iteration   8: 140.452 ns/op
Iteration   9: 140.464 ns/op
Iteration  10: 139.145 ns/op

# Run progress: 32.43% complete, ETA 00:25:58
# Fork: 2 of 2
# Warmup Iteration   1: 195.679 ns/op
# Warmup Iteration   2: 175.461 ns/op
# Warmup Iteration   3: 123.549 ns/op
Iteration   1: 127.927 ns/op
Iteration   2: 123.722 ns/op
Iteration   3: 125.306 ns/op
Iteration   4: 140.685 ns/op
Iteration   5: 140.363 ns/op
Iteration   6: 139.235 ns/op
Iteration   7: 140.233 ns/op
Iteration   8: 140.482 ns/op
Iteration   9: 140.228 ns/op
Iteration  10: 139.120 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  135.747 ±(99.9%) 5.962 ns/op [Average]
  (min, avg, max) = (123.638, 135.747, 140.685), stdev = 6.865
  CI (99.9%): [129.785, 141.708] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 32.50% complete, ETA 00:25:57
# Fork: 1 of 2
# Warmup Iteration   1: 19.382 ns/op
# Warmup Iteration   2: 22.913 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.221 ns/op
Iteration   3: 17.006 ns/op
Iteration   4: 15.015 ns/op
Iteration   5: 17.103 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.008 ns/op
Iteration   9: 17.024 ns/op
Iteration  10: 14.979 ns/op

# Run progress: 32.57% complete, ETA 00:25:55
# Fork: 2 of 2
# Warmup Iteration   1: 19.378 ns/op
# Warmup Iteration   2: 20.858 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.242 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.112 ns/op
Iteration   6: 15.394 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.023 ns/op
Iteration   9: 17.030 ns/op
Iteration  10: 14.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.830 ns/op [Average]
  (min, avg, max) = (14.961, 16.287, 17.112), stdev = 0.956
  CI (99.9%): [15.457, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 32.64% complete, ETA 00:25:53
# Fork: 1 of 2
# Warmup Iteration   1: 645.105 ns/op
# Warmup Iteration   2: 24788.379 ns/op
# Warmup Iteration   3: 608.713 ns/op
Iteration   1: 18043.499 ns/op
Iteration   2: 17977.807 ns/op
Iteration   3: 452.777 ns/op
Iteration   4: 1340.473 ns/op
Iteration   5: 313.076 ns/op
Iteration   6: 380.456 ns/op
Iteration   7: 22336.911 ns/op
Iteration   8: 294.377 ns/op
Iteration   9: 422.899 ns/op
Iteration  10: 269.417 ns/op

# Run progress: 32.71% complete, ETA 00:25:52
# Fork: 2 of 2
# Warmup Iteration   1: 694.710 ns/op
# Warmup Iteration   2: 2738.104 ns/op
# Warmup Iteration   3: 658.304 ns/op
Iteration   1: 17375.590 ns/op
Iteration   2: 25377.391 ns/op
Iteration   3: 446.056 ns/op
Iteration   4: 17472.525 ns/op
Iteration   5: 312.808 ns/op
Iteration   6: 376.160 ns/op
Iteration   7: 19212.977 ns/op
Iteration   8: 307.372 ns/op
Iteration   9: 444.379 ns/op
Iteration  10: 291.983 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7172.447 ±(99.9%) 8316.046 ns/op [Average]
  (min, avg, max) = (269.417, 7172.447, 25377.391), stdev = 9576.770
  CI (99.9%): [≈ 0, 15488.492] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 32.78% complete, ETA 00:25:50
# Fork: 1 of 2
# Warmup Iteration   1: 843.226 ns/op
# Warmup Iteration   2: 667.128 ns/op
# Warmup Iteration   3: 606.744 ns/op
Iteration   1: 552.421 ns/op
Iteration   2: 574.803 ns/op
Iteration   3: 521.594 ns/op
Iteration   4: 608.946 ns/op
Iteration   5: 607.696 ns/op
Iteration   6: 584.574 ns/op
Iteration   7: 542.225 ns/op
Iteration   8: 585.258 ns/op
Iteration   9: 521.168 ns/op
Iteration  10: 606.797 ns/op

# Run progress: 32.85% complete, ETA 00:25:49
# Fork: 2 of 2
# Warmup Iteration   1: 945.270 ns/op
# Warmup Iteration   2: 732.539 ns/op
# Warmup Iteration   3: 607.785 ns/op
Iteration   1: 554.853 ns/op
Iteration   2: 575.145 ns/op
Iteration   3: 522.682 ns/op
Iteration   4: 609.239 ns/op
Iteration   5: 608.499 ns/op
Iteration   6: 585.242 ns/op
Iteration   7: 542.616 ns/op
Iteration   8: 587.256 ns/op
Iteration   9: 523.480 ns/op
Iteration  10: 607.715 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  571.110 ±(99.9%) 28.819 ns/op [Average]
  (min, avg, max) = (521.168, 571.110, 609.239), stdev = 33.188
  CI (99.9%): [542.292, 599.929] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 32.92% complete, ETA 00:25:47
# Fork: 1 of 2
# Warmup Iteration   1: 776.090 ns/op
# Warmup Iteration   2: 16886.456 ns/op
# Warmup Iteration   3: 388.234 ns/op
Iteration   1: 529.700 ns/op
Iteration   2: 32284.024 ns/op
Iteration   3: 348.047 ns/op
Iteration   4: 758.361 ns/op
Iteration   5: 332.922 ns/op
Iteration   6: 761.758 ns/op
Iteration   7: 347.763 ns/op
Iteration   8: 386.920 ns/op
Iteration   9: 303.710 ns/op
Iteration  10: 271.410 ns/op

# Run progress: 32.99% complete, ETA 00:25:46
# Fork: 2 of 2
# Warmup Iteration   1: 916.608 ns/op
# Warmup Iteration   2: 30557.688 ns/op
# Warmup Iteration   3: 414.583 ns/op
Iteration   1: 512.274 ns/op
Iteration   2: 38183.531 ns/op
Iteration   3: 2349.775 ns/op
Iteration   4: 673.762 ns/op
Iteration   5: 332.446 ns/op
Iteration   6: 759.757 ns/op
Iteration   7: 345.002 ns/op
Iteration   8: 384.889 ns/op
Iteration   9: 301.161 ns/op
Iteration  10: 271.518 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4021.937 ±(99.9%) 9314.599 ns/op [Average]
  (min, avg, max) = (271.410, 4021.937, 38183.531), stdev = 10726.707
  CI (99.9%): [≈ 0, 13336.536] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 33.06% complete, ETA 00:25:44
# Fork: 1 of 2
# Warmup Iteration   1: 713.975 ns/op
# Warmup Iteration   2: 582.758 ns/op
# Warmup Iteration   3: 420.976 ns/op
Iteration   1: 402.806 ns/op
Iteration   2: 408.701 ns/op
Iteration   3: 411.581 ns/op
Iteration   4: 422.143 ns/op
Iteration   5: 377.553 ns/op
Iteration   6: 408.327 ns/op
Iteration   7: 402.444 ns/op
Iteration   8: 399.068 ns/op
Iteration   9: 396.715 ns/op
Iteration  10: 420.293 ns/op

# Run progress: 33.13% complete, ETA 00:25:42
# Fork: 2 of 2
# Warmup Iteration   1: 871.110 ns/op
# Warmup Iteration   2: 616.927 ns/op
# Warmup Iteration   3: 414.023 ns/op
Iteration   1: 401.560 ns/op
Iteration   2: 408.719 ns/op
Iteration   3: 409.179 ns/op
Iteration   4: 422.189 ns/op
Iteration   5: 377.169 ns/op
Iteration   6: 407.993 ns/op
Iteration   7: 403.247 ns/op
Iteration   8: 399.556 ns/op
Iteration   9: 397.108 ns/op
Iteration  10: 413.928 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  404.514 ±(99.9%) 10.459 ns/op [Average]
  (min, avg, max) = (377.169, 404.514, 422.189), stdev = 12.045
  CI (99.9%): [394.055, 414.973] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 33.19% complete, ETA 00:25:41
# Fork: 1 of 2
# Warmup Iteration   1: 862.320 ns/op
# Warmup Iteration   2: 7797.194 ns/op
# Warmup Iteration   3: 1603.056 ns/op
Iteration   1: 637.231 ns/op
Iteration   2: 694.828 ns/op
Iteration   3: 26432.219 ns/op
Iteration   4: 712.520 ns/op
Iteration   5: 585.997 ns/op
Iteration   6: 689.147 ns/op
Iteration   7: 715.483 ns/op
Iteration   8: 595.661 ns/op
Iteration   9: 725.359 ns/op
Iteration  10: 702.105 ns/op

# Run progress: 33.26% complete, ETA 00:25:39
# Fork: 2 of 2
# Warmup Iteration   1: 1030.004 ns/op
# Warmup Iteration   2: 3874.436 ns/op
# Warmup Iteration   3: 3149.889 ns/op
Iteration   1: 636.613 ns/op
Iteration   2: 693.890 ns/op
Iteration   3: 21841.461 ns/op
Iteration   4: 679.183 ns/op
Iteration   5: 553.559 ns/op
Iteration   6: 657.550 ns/op
Iteration   7: 684.408 ns/op
Iteration   8: 568.912 ns/op
Iteration   9: 690.037 ns/op
Iteration  10: 664.224 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3008.019 ±(99.9%) 6308.042 ns/op [Average]
  (min, avg, max) = (553.559, 3008.019, 26432.219), stdev = 7264.350
  CI (99.9%): [≈ 0, 9316.061] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 33.33% complete, ETA 00:25:37
# Fork: 1 of 2
# Warmup Iteration   1: 19.444 ns/op
# Warmup Iteration   2: 22.962 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.081 ns/op
Iteration   2: 15.294 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 14.909 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.402 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.027 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.971 ns/op

# Run progress: 33.40% complete, ETA 00:25:36
# Fork: 2 of 2
# Warmup Iteration   1: 19.720 ns/op
# Warmup Iteration   2: 21.035 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.260 ns/op
Iteration   3: 17.018 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.370 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.963 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.285 ±(99.9%) 0.833 ns/op [Average]
  (min, avg, max) = (14.909, 16.285, 17.108), stdev = 0.960
  CI (99.9%): [15.452, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 33.47% complete, ETA 00:25:34
# Fork: 1 of 2
# Warmup Iteration   1: 970.334 ns/op
# Warmup Iteration   2: 403.898 ns/op
# Warmup Iteration   3: 299.941 ns/op
Iteration   1: 299.189 ns/op
Iteration   2: 299.710 ns/op
Iteration   3: 300.478 ns/op
Iteration   4: 304.379 ns/op
Iteration   5: 300.063 ns/op
Iteration   6: 298.042 ns/op
Iteration   7: 300.134 ns/op
Iteration   8: 300.203 ns/op
Iteration   9: 300.216 ns/op
Iteration  10: 298.305 ns/op

# Run progress: 33.54% complete, ETA 00:25:33
# Fork: 2 of 2
# Warmup Iteration   1: 987.049 ns/op
# Warmup Iteration   2: 396.384 ns/op
# Warmup Iteration   3: 299.405 ns/op
Iteration   1: 299.723 ns/op
Iteration   2: 299.533 ns/op
Iteration   3: 300.130 ns/op
Iteration   4: 304.385 ns/op
Iteration   5: 299.889 ns/op
Iteration   6: 298.617 ns/op
Iteration   7: 300.086 ns/op
Iteration   8: 300.335 ns/op
Iteration   9: 300.122 ns/op
Iteration  10: 298.415 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  300.098 ±(99.9%) 1.421 ns/op [Average]
  (min, avg, max) = (298.042, 300.098, 304.385), stdev = 1.637
  CI (99.9%): [298.677, 301.519] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 33.61% complete, ETA 00:25:31
# Fork: 1 of 2
# Warmup Iteration   1: 542.711 ns/op
# Warmup Iteration   2: 518.265 ns/op
# Warmup Iteration   3: 387.040 ns/op
Iteration   1: 386.417 ns/op
Iteration   2: 388.214 ns/op
Iteration   3: 388.251 ns/op
Iteration   4: 387.046 ns/op
Iteration   5: 388.679 ns/op
Iteration   6: 388.425 ns/op
Iteration   7: 388.558 ns/op
Iteration   8: 388.213 ns/op
Iteration   9: 388.547 ns/op
Iteration  10: 385.512 ns/op

# Run progress: 33.68% complete, ETA 00:25:29
# Fork: 2 of 2
# Warmup Iteration   1: 563.965 ns/op
# Warmup Iteration   2: 532.243 ns/op
# Warmup Iteration   3: 390.954 ns/op
Iteration   1: 390.140 ns/op
Iteration   2: 391.365 ns/op
Iteration   3: 390.877 ns/op
Iteration   4: 393.004 ns/op
Iteration   5: 390.251 ns/op
Iteration   6: 391.832 ns/op
Iteration   7: 391.006 ns/op
Iteration   8: 390.993 ns/op
Iteration   9: 391.045 ns/op
Iteration  10: 390.942 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  389.466 ±(99.9%) 1.701 ns/op [Average]
  (min, avg, max) = (385.512, 389.466, 393.004), stdev = 1.959
  CI (99.9%): [387.765, 391.167] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 33.75% complete, ETA 00:25:28
# Fork: 1 of 2
# Warmup Iteration   1: 3617.542 ns/op
# Warmup Iteration   2: 441.396 ns/op
# Warmup Iteration   3: 341.578 ns/op
Iteration   1: 341.132 ns/op
Iteration   2: 341.910 ns/op
Iteration   3: 340.157 ns/op
Iteration   4: 343.193 ns/op
Iteration   5: 340.101 ns/op
Iteration   6: 341.716 ns/op
Iteration   7: 340.283 ns/op
Iteration   8: 340.315 ns/op
Iteration   9: 340.265 ns/op
Iteration  10: 341.586 ns/op

# Run progress: 33.82% complete, ETA 00:25:26
# Fork: 2 of 2
# Warmup Iteration   1: 7464.103 ns/op
# Warmup Iteration   2: 509.360 ns/op
# Warmup Iteration   3: 341.708 ns/op
Iteration   1: 354.804 ns/op
Iteration   2: 341.977 ns/op
Iteration   3: 351.503 ns/op
Iteration   4: 343.251 ns/op
Iteration   5: 350.983 ns/op
Iteration   6: 341.692 ns/op
Iteration   7: 351.330 ns/op
Iteration   8: 347.800 ns/op
Iteration   9: 349.590 ns/op
Iteration  10: 341.584 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  344.259 ±(99.9%) 4.137 ns/op [Average]
  (min, avg, max) = (340.101, 344.259, 354.804), stdev = 4.764
  CI (99.9%): [340.121, 348.396] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 33.89% complete, ETA 00:25:25
# Fork: 1 of 2
# Warmup Iteration   1: 509.506 ns/op
# Warmup Iteration   2: 386.564 ns/op
# Warmup Iteration   3: 302.328 ns/op
Iteration   1: 302.172 ns/op
Iteration   2: 302.245 ns/op
Iteration   3: 301.295 ns/op
Iteration   4: 302.560 ns/op
Iteration   5: 301.339 ns/op
Iteration   6: 302.474 ns/op
Iteration   7: 301.264 ns/op
Iteration   8: 301.146 ns/op
Iteration   9: 301.145 ns/op
Iteration  10: 302.470 ns/op

# Run progress: 33.96% complete, ETA 00:25:23
# Fork: 2 of 2
# Warmup Iteration   1: 531.355 ns/op
# Warmup Iteration   2: 443.670 ns/op
# Warmup Iteration   3: 300.289 ns/op
Iteration   1: 300.403 ns/op
Iteration   2: 300.293 ns/op
Iteration   3: 298.707 ns/op
Iteration   4: 300.893 ns/op
Iteration   5: 299.137 ns/op
Iteration   6: 299.701 ns/op
Iteration   7: 299.015 ns/op
Iteration   8: 299.202 ns/op
Iteration   9: 299.047 ns/op
Iteration  10: 299.742 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  300.713 ±(99.9%) 1.131 ns/op [Average]
  (min, avg, max) = (298.707, 300.713, 302.560), stdev = 1.302
  CI (99.9%): [299.582, 301.843] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 34.03% complete, ETA 00:25:21
# Fork: 1 of 2
# Warmup Iteration   1: 1123.148 ns/op
# Warmup Iteration   2: 678.926 ns/op
# Warmup Iteration   3: 473.918 ns/op
Iteration   1: 477.735 ns/op
Iteration   2: 474.141 ns/op
Iteration   3: 475.589 ns/op
Iteration   4: 496.406 ns/op
Iteration   5: 495.558 ns/op
Iteration   6: 493.736 ns/op
Iteration   7: 495.237 ns/op
Iteration   8: 495.092 ns/op
Iteration   9: 495.431 ns/op
Iteration  10: 493.296 ns/op

# Run progress: 34.10% complete, ETA 00:25:20
# Fork: 2 of 2
# Warmup Iteration   1: 1335.116 ns/op
# Warmup Iteration   2: 631.674 ns/op
# Warmup Iteration   3: 475.540 ns/op
Iteration   1: 478.207 ns/op
Iteration   2: 476.004 ns/op
Iteration   3: 476.722 ns/op
Iteration   4: 496.960 ns/op
Iteration   5: 495.471 ns/op
Iteration   6: 495.199 ns/op
Iteration   7: 495.799 ns/op
Iteration   8: 495.567 ns/op
Iteration   9: 495.503 ns/op
Iteration  10: 495.122 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  489.639 ±(99.9%) 7.778 ns/op [Average]
  (min, avg, max) = (474.141, 489.639, 496.960), stdev = 8.957
  CI (99.9%): [481.861, 497.417] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 34.17% complete, ETA 00:25:18
# Fork: 1 of 2
# Warmup Iteration   1: 19.956 ns/op
# Warmup Iteration   2: 21.651 ns/op
# Warmup Iteration   3: 15.022 ns/op
Iteration   1: 17.078 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.980 ns/op

# Run progress: 34.24% complete, ETA 00:25:17
# Fork: 2 of 2
# Warmup Iteration   1: 19.843 ns/op
# Warmup Iteration   2: 23.004 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.264 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.378 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.012 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 14.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.964, 16.290, 17.110), stdev = 0.952
  CI (99.9%): [15.463, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 34.31% complete, ETA 00:25:15
# Fork: 1 of 2
# Warmup Iteration   1: 476.888 ns/op
# Warmup Iteration   2: 349.223 ns/op
# Warmup Iteration   3: 255.803 ns/op
Iteration   1: 257.513 ns/op
Iteration   2: 255.429 ns/op
Iteration   3: 256.695 ns/op
Iteration   4: 262.405 ns/op
Iteration   5: 257.278 ns/op
Iteration   6: 255.712 ns/op
Iteration   7: 256.881 ns/op
Iteration   8: 256.613 ns/op
Iteration   9: 256.887 ns/op
Iteration  10: 255.480 ns/op

# Run progress: 34.38% complete, ETA 00:25:13
# Fork: 2 of 2
# Warmup Iteration   1: 451.431 ns/op
# Warmup Iteration   2: 354.543 ns/op
# Warmup Iteration   3: 256.260 ns/op
Iteration   1: 257.572 ns/op
Iteration   2: 255.790 ns/op
Iteration   3: 257.379 ns/op
Iteration   4: 262.120 ns/op
Iteration   5: 257.657 ns/op
Iteration   6: 255.893 ns/op
Iteration   7: 256.779 ns/op
Iteration   8: 256.849 ns/op
Iteration   9: 257.110 ns/op
Iteration  10: 255.802 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  257.192 ±(99.9%) 1.629 ns/op [Average]
  (min, avg, max) = (255.429, 257.192, 262.405), stdev = 1.876
  CI (99.9%): [255.563, 258.821] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 34.44% complete, ETA 00:25:12
# Fork: 1 of 2
# Warmup Iteration   1: 498.305 ns/op
# Warmup Iteration   2: 460.611 ns/op
# Warmup Iteration   3: 357.767 ns/op
Iteration   1: 354.830 ns/op
Iteration   2: 355.879 ns/op
Iteration   3: 354.269 ns/op
Iteration   4: 355.951 ns/op
Iteration   5: 354.586 ns/op
Iteration   6: 355.124 ns/op
Iteration   7: 354.694 ns/op
Iteration   8: 354.368 ns/op
Iteration   9: 354.392 ns/op
Iteration  10: 356.364 ns/op

# Run progress: 34.51% complete, ETA 00:25:10
# Fork: 2 of 2
# Warmup Iteration   1: 541.443 ns/op
# Warmup Iteration   2: 457.591 ns/op
# Warmup Iteration   3: 351.861 ns/op
Iteration   1: 350.441 ns/op
Iteration   2: 352.865 ns/op
Iteration   3: 350.494 ns/op
Iteration   4: 352.557 ns/op
Iteration   5: 350.269 ns/op
Iteration   6: 351.771 ns/op
Iteration   7: 350.623 ns/op
Iteration   8: 350.499 ns/op
Iteration   9: 350.516 ns/op
Iteration  10: 351.657 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  353.108 ±(99.9%) 1.876 ns/op [Average]
  (min, avg, max) = (350.269, 353.108, 356.364), stdev = 2.160
  CI (99.9%): [351.232, 354.983] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 34.58% complete, ETA 00:25:09
# Fork: 1 of 2
# Warmup Iteration   1: 465.742 ns/op
# Warmup Iteration   2: 357.600 ns/op
# Warmup Iteration   3: 249.693 ns/op
Iteration   1: 248.153 ns/op
Iteration   2: 249.424 ns/op
Iteration   3: 248.605 ns/op
Iteration   4: 251.418 ns/op
Iteration   5: 248.089 ns/op
Iteration   6: 248.978 ns/op
Iteration   7: 248.502 ns/op
Iteration   8: 248.596 ns/op
Iteration   9: 248.059 ns/op
Iteration  10: 249.418 ns/op

# Run progress: 34.65% complete, ETA 00:25:07
# Fork: 2 of 2
# Warmup Iteration   1: 433.327 ns/op
# Warmup Iteration   2: 348.862 ns/op
# Warmup Iteration   3: 250.095 ns/op
Iteration   1: 249.343 ns/op
Iteration   2: 249.947 ns/op
Iteration   3: 249.517 ns/op
Iteration   4: 251.783 ns/op
Iteration   5: 249.684 ns/op
Iteration   6: 250.153 ns/op
Iteration   7: 249.217 ns/op
Iteration   8: 249.317 ns/op
Iteration   9: 249.742 ns/op
Iteration  10: 250.207 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  249.408 ±(99.9%) 0.865 ns/op [Average]
  (min, avg, max) = (248.059, 249.408, 251.783), stdev = 0.996
  CI (99.9%): [248.543, 250.273] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 34.72% complete, ETA 00:25:05
# Fork: 1 of 2
# Warmup Iteration   1: 449.509 ns/op
# Warmup Iteration   2: 439.740 ns/op
# Warmup Iteration   3: 290.660 ns/op
Iteration   1: 289.128 ns/op
Iteration   2: 290.635 ns/op
Iteration   3: 288.708 ns/op
Iteration   4: 291.345 ns/op
Iteration   5: 288.718 ns/op
Iteration   6: 290.718 ns/op
Iteration   7: 289.000 ns/op
Iteration   8: 288.752 ns/op
Iteration   9: 288.690 ns/op
Iteration  10: 290.804 ns/op

# Run progress: 34.79% complete, ETA 00:25:04
# Fork: 2 of 2
# Warmup Iteration   1: 450.714 ns/op
# Warmup Iteration   2: 375.557 ns/op
# Warmup Iteration   3: 290.693 ns/op
Iteration   1: 289.200 ns/op
Iteration   2: 290.823 ns/op
Iteration   3: 288.655 ns/op
Iteration   4: 291.476 ns/op
Iteration   5: 288.751 ns/op
Iteration   6: 290.865 ns/op
Iteration   7: 288.777 ns/op
Iteration   8: 288.773 ns/op
Iteration   9: 288.811 ns/op
Iteration  10: 290.778 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  289.670 ±(99.9%) 0.938 ns/op [Average]
  (min, avg, max) = (288.655, 289.670, 291.476), stdev = 1.081
  CI (99.9%): [288.732, 290.609] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 34.86% complete, ETA 00:25:02
# Fork: 1 of 2
# Warmup Iteration   1: 1953.145 ns/op
# Warmup Iteration   2: 1155.206 ns/op
# Warmup Iteration   3: 834.011 ns/op
Iteration   1: 839.206 ns/op
Iteration   2: 834.799 ns/op
Iteration   3: 835.338 ns/op
Iteration   4: 859.464 ns/op
Iteration   5: 848.413 ns/op
Iteration   6: 851.112 ns/op
Iteration   7: 848.542 ns/op
Iteration   8: 847.776 ns/op
Iteration   9: 848.373 ns/op
Iteration  10: 850.829 ns/op

# Run progress: 34.93% complete, ETA 00:25:00
# Fork: 2 of 2
# Warmup Iteration   1: 1606.206 ns/op
# Warmup Iteration   2: 1100.991 ns/op
# Warmup Iteration   3: 835.599 ns/op
Iteration   1: 835.899 ns/op
Iteration   2: 835.612 ns/op
Iteration   3: 833.618 ns/op
Iteration   4: 857.818 ns/op
Iteration   5: 848.068 ns/op
Iteration   6: 849.203 ns/op
Iteration   7: 847.689 ns/op
Iteration   8: 848.576 ns/op
Iteration   9: 847.772 ns/op
Iteration  10: 849.331 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  845.872 ±(99.9%) 6.541 ns/op [Average]
  (min, avg, max) = (833.618, 845.872, 859.464), stdev = 7.532
  CI (99.9%): [839.331, 852.413] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 35.00% complete, ETA 00:24:59
# Fork: 1 of 2
# Warmup Iteration   1: 19.402 ns/op
# Warmup Iteration   2: 22.851 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.067 ns/op
Iteration   2: 15.301 ns/op
Iteration   3: 17.018 ns/op
Iteration   4: 15.019 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.027 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.970 ns/op

# Run progress: 35.07% complete, ETA 00:24:57
# Fork: 2 of 2
# Warmup Iteration   1: 19.208 ns/op
# Warmup Iteration   2: 23.232 ns/op
# Warmup Iteration   3: 15.023 ns/op
Iteration   1: 17.078 ns/op
Iteration   2: 15.281 ns/op
Iteration   3: 17.018 ns/op
Iteration   4: 15.016 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.008 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.293 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.970, 16.293, 17.110), stdev = 0.950
  CI (99.9%): [15.468, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 35.14% complete, ETA 00:24:56
# Fork: 1 of 2
# Warmup Iteration   1: 500.404 ns/op
# Warmup Iteration   2: 976.408 ns/op
# Warmup Iteration   3: 273.045 ns/op
Iteration   1: 288.363 ns/op
Iteration   2: 1208.918 ns/op
Iteration   3: 1677.165 ns/op
Iteration   4: 4979.653 ns/op
Iteration   5: 215.362 ns/op
Iteration   6: 209.669 ns/op
Iteration   7: 204.393 ns/op
Iteration   8: 276.425 ns/op
Iteration   9: 350.367 ns/op
Iteration  10: 217.625 ns/op

# Run progress: 35.21% complete, ETA 00:24:54
# Fork: 2 of 2
# Warmup Iteration   1: 447.623 ns/op
# Warmup Iteration   2: 900.670 ns/op
# Warmup Iteration   3: 292.780 ns/op
Iteration   1: 291.906 ns/op
Iteration   2: 4460.356 ns/op
Iteration   3: 14264.919 ns/op
Iteration   4: 1458.321 ns/op
Iteration   5: 194.429 ns/op
Iteration   6: 212.780 ns/op
Iteration   7: 202.959 ns/op
Iteration   8: 257.739 ns/op
Iteration   9: 298.377 ns/op
Iteration  10: 197.856 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1573.379 ±(99.9%) 2858.823 ns/op [Average]
  (min, avg, max) = (194.429, 1573.379, 14264.919), stdev = 3292.225
  CI (99.9%): [≈ 0, 4432.202] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 35.28% complete, ETA 00:24:52
# Fork: 1 of 2
# Warmup Iteration   1: 526.423 ns/op
# Warmup Iteration   2: 876.515 ns/op
# Warmup Iteration   3: 317.809 ns/op
Iteration   1: 384.597 ns/op
Iteration   2: 379.574 ns/op
Iteration   3: 368.059 ns/op
Iteration   4: 331.637 ns/op
Iteration   5: 365.447 ns/op
Iteration   6: 326.864 ns/op
Iteration   7: 350.088 ns/op
Iteration   8: 358.217 ns/op
Iteration   9: 418.150 ns/op
Iteration  10: 317.455 ns/op

# Run progress: 35.35% complete, ETA 00:24:51
# Fork: 2 of 2
# Warmup Iteration   1: 494.993 ns/op
# Warmup Iteration   2: 1381.761 ns/op
# Warmup Iteration   3: 316.464 ns/op
Iteration   1: 384.286 ns/op
Iteration   2: 378.614 ns/op
Iteration   3: 365.096 ns/op
Iteration   4: 331.619 ns/op
Iteration   5: 364.382 ns/op
Iteration   6: 325.292 ns/op
Iteration   7: 349.011 ns/op
Iteration   8: 356.746 ns/op
Iteration   9: 415.466 ns/op
Iteration  10: 316.323 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  359.346 ±(99.9%) 25.494 ns/op [Average]
  (min, avg, max) = (316.323, 359.346, 418.150), stdev = 29.359
  CI (99.9%): [333.852, 384.840] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 35.42% complete, ETA 00:24:49
# Fork: 1 of 2
# Warmup Iteration   1: 554.361 ns/op
# Warmup Iteration   2: 23062.973 ns/op
# Warmup Iteration   3: 263.510 ns/op
Iteration   1: 880.106 ns/op
Iteration   2: 452.556 ns/op
Iteration   3: 735.646 ns/op
Iteration   4: 273.130 ns/op
Iteration   5: 757.738 ns/op
Iteration   6: 3376.825 ns/op
Iteration   7: 191.284 ns/op
Iteration   8: 212.095 ns/op
Iteration   9: 236.056 ns/op
Iteration  10: 209.307 ns/op

# Run progress: 35.49% complete, ETA 00:24:48
# Fork: 2 of 2
# Warmup Iteration   1: 591.415 ns/op
# Warmup Iteration   2: 22563.532 ns/op
# Warmup Iteration   3: 298.410 ns/op
Iteration   1: 458.699 ns/op
Iteration   2: 587.686 ns/op
Iteration   3: 760.677 ns/op
Iteration   4: 264.160 ns/op
Iteration   5: 569.791 ns/op
Iteration   6: 752.516 ns/op
Iteration   7: 199.042 ns/op
Iteration   8: 220.199 ns/op
Iteration   9: 242.898 ns/op
Iteration  10: 216.526 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  579.847 ±(99.9%) 608.112 ns/op [Average]
  (min, avg, max) = (191.284, 579.847, 3376.825), stdev = 700.303
  CI (99.9%): [≈ 0, 1187.959] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 35.56% complete, ETA 00:24:46
# Fork: 1 of 2
# Warmup Iteration   1: 514.432 ns/op
# Warmup Iteration   2: 1882.742 ns/op
# Warmup Iteration   3: 246.277 ns/op
Iteration   1: 291.097 ns/op
Iteration   2: 292.259 ns/op
Iteration   3: 272.382 ns/op
Iteration   4: 259.939 ns/op
Iteration   5: 279.658 ns/op
Iteration   6: 265.357 ns/op
Iteration   7: 282.446 ns/op
Iteration   8: 283.337 ns/op
Iteration   9: 310.782 ns/op
Iteration  10: 246.042 ns/op

# Run progress: 35.63% complete, ETA 00:24:44
# Fork: 2 of 2
# Warmup Iteration   1: 440.272 ns/op
# Warmup Iteration   2: 1711.235 ns/op
# Warmup Iteration   3: 250.779 ns/op
Iteration   1: 295.675 ns/op
Iteration   2: 293.993 ns/op
Iteration   3: 274.443 ns/op
Iteration   4: 260.168 ns/op
Iteration   5: 279.316 ns/op
Iteration   6: 267.602 ns/op
Iteration   7: 284.038 ns/op
Iteration   8: 285.627 ns/op
Iteration   9: 312.801 ns/op
Iteration  10: 250.772 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  279.387 ±(99.9%) 15.504 ns/op [Average]
  (min, avg, max) = (246.042, 279.387, 312.801), stdev = 17.854
  CI (99.9%): [263.883, 294.891] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 35.69% complete, ETA 00:24:43
# Fork: 1 of 2
# Warmup Iteration   1: 3043.901 ns/op
# Warmup Iteration   2: 2232.413 ns/op
# Warmup Iteration   3: 1433.185 ns/op
Iteration   1: 1598.492 ns/op
Iteration   2: 1558.886 ns/op
Iteration   3: 1555.263 ns/op
Iteration   4: 1513.640 ns/op
Iteration   5: 2031.271 ns/op
Iteration   6: 1486.710 ns/op
Iteration   7: 1529.496 ns/op
Iteration   8: 1546.893 ns/op
Iteration   9: 1640.698 ns/op
Iteration  10: 1448.202 ns/op

# Run progress: 35.76% complete, ETA 00:24:41
# Fork: 2 of 2
# Warmup Iteration   1: 2746.129 ns/op
# Warmup Iteration   2: 2190.904 ns/op
# Warmup Iteration   3: 1409.047 ns/op
Iteration   1: 1575.012 ns/op
Iteration   2: 1540.830 ns/op
Iteration   3: 1535.873 ns/op
Iteration   4: 1476.671 ns/op
Iteration   5: 1961.231 ns/op
Iteration   6: 1454.006 ns/op
Iteration   7: 1511.644 ns/op
Iteration   8: 1523.618 ns/op
Iteration   9: 1604.020 ns/op
Iteration  10: 1422.420 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1575.744 ±(99.9%) 133.807 ns/op [Average]
  (min, avg, max) = (1422.420, 1575.744, 2031.271), stdev = 154.093
  CI (99.9%): [1441.937, 1709.551] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 35.83% complete, ETA 00:24:40
# Fork: 1 of 2
# Warmup Iteration   1: 19.326 ns/op
# Warmup Iteration   2: 21.531 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.064 ns/op
Iteration   2: 15.265 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.028 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.390 ns/op
Iteration   7: 17.015 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.020 ns/op
Iteration  10: 14.969 ns/op

# Run progress: 35.90% complete, ETA 00:24:38
# Fork: 2 of 2
# Warmup Iteration   1: 19.576 ns/op
# Warmup Iteration   2: 22.929 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.274 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.397 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.028 ns/op
Iteration   9: 17.027 ns/op
Iteration  10: 14.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.964, 16.292, 17.108), stdev = 0.952
  CI (99.9%): [15.465, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 35.97% complete, ETA 00:24:36
# Fork: 1 of 2
# Warmup Iteration   1: 98.689 ns/op
# Warmup Iteration   2: 97.045 ns/op
# Warmup Iteration   3: 66.113 ns/op
Iteration   1: 67.668 ns/op
Iteration   2: 66.205 ns/op
Iteration   3: 67.605 ns/op
Iteration   4: 66.401 ns/op
Iteration   5: 67.566 ns/op
Iteration   6: 66.112 ns/op
Iteration   7: 67.580 ns/op
Iteration   8: 67.614 ns/op
Iteration   9: 67.661 ns/op
Iteration  10: 66.056 ns/op

# Run progress: 36.04% complete, ETA 00:24:35
# Fork: 2 of 2
# Warmup Iteration   1: 96.768 ns/op
# Warmup Iteration   2: 98.131 ns/op
# Warmup Iteration   3: 66.084 ns/op
Iteration   1: 67.309 ns/op
Iteration   2: 65.584 ns/op
Iteration   3: 67.287 ns/op
Iteration   4: 66.213 ns/op
Iteration   5: 67.316 ns/op
Iteration   6: 66.012 ns/op
Iteration   7: 67.379 ns/op
Iteration   8: 67.437 ns/op
Iteration   9: 67.338 ns/op
Iteration  10: 65.909 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  66.913 ±(99.9%) 0.640 ns/op [Average]
  (min, avg, max) = (65.584, 66.913, 67.668), stdev = 0.737
  CI (99.9%): [66.273, 67.553] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 36.11% complete, ETA 00:24:33
# Fork: 1 of 2
# Warmup Iteration   1: 186.637 ns/op
# Warmup Iteration   2: 205.798 ns/op
# Warmup Iteration   3: 133.883 ns/op
Iteration   1: 134.904 ns/op
Iteration   2: 134.484 ns/op
Iteration   3: 134.878 ns/op
Iteration   4: 134.113 ns/op
Iteration   5: 133.755 ns/op
Iteration   6: 132.550 ns/op
Iteration   7: 133.999 ns/op
Iteration   8: 134.308 ns/op
Iteration   9: 134.652 ns/op
Iteration  10: 134.449 ns/op

# Run progress: 36.18% complete, ETA 00:24:31
# Fork: 2 of 2
# Warmup Iteration   1: 187.667 ns/op
# Warmup Iteration   2: 196.055 ns/op
# Warmup Iteration   3: 134.105 ns/op
Iteration   1: 135.264 ns/op
Iteration   2: 133.503 ns/op
Iteration   3: 134.482 ns/op
Iteration   4: 134.148 ns/op
Iteration   5: 134.094 ns/op
Iteration   6: 133.904 ns/op
Iteration   7: 134.571 ns/op
Iteration   8: 134.617 ns/op
Iteration   9: 134.758 ns/op
Iteration  10: 134.186 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  134.281 ±(99.9%) 0.511 ns/op [Average]
  (min, avg, max) = (132.550, 134.281, 135.264), stdev = 0.588
  CI (99.9%): [133.770, 134.792] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 36.25% complete, ETA 00:24:30
# Fork: 1 of 2
# Warmup Iteration   1: 245.231 ns/op
# Warmup Iteration   2: 157.127 ns/op
# Warmup Iteration   3: 120.505 ns/op
Iteration   1: 118.853 ns/op
Iteration   2: 120.177 ns/op
Iteration   3: 119.079 ns/op
Iteration   4: 121.731 ns/op
Iteration   5: 119.359 ns/op
Iteration   6: 120.093 ns/op
Iteration   7: 119.031 ns/op
Iteration   8: 119.016 ns/op
Iteration   9: 119.152 ns/op
Iteration  10: 119.788 ns/op

# Run progress: 36.32% complete, ETA 00:24:28
# Fork: 2 of 2
# Warmup Iteration   1: 290.401 ns/op
# Warmup Iteration   2: 160.235 ns/op
# Warmup Iteration   3: 120.483 ns/op
Iteration   1: 118.835 ns/op
Iteration   2: 120.135 ns/op
Iteration   3: 119.033 ns/op
Iteration   4: 121.712 ns/op
Iteration   5: 119.204 ns/op
Iteration   6: 120.136 ns/op
Iteration   7: 119.104 ns/op
Iteration   8: 119.083 ns/op
Iteration   9: 119.176 ns/op
Iteration  10: 119.844 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  119.627 ±(99.9%) 0.738 ns/op [Average]
  (min, avg, max) = (118.835, 119.627, 121.731), stdev = 0.850
  CI (99.9%): [118.889, 120.366] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 36.39% complete, ETA 00:24:27
# Fork: 1 of 2
# Warmup Iteration   1: 159.977 ns/op
# Warmup Iteration   2: 125.702 ns/op
# Warmup Iteration   3: 93.923 ns/op
Iteration   1: 92.596 ns/op
Iteration   2: 93.927 ns/op
Iteration   3: 92.534 ns/op
Iteration   4: 93.919 ns/op
Iteration   5: 92.682 ns/op
Iteration   6: 94.041 ns/op
Iteration   7: 92.553 ns/op
Iteration   8: 92.591 ns/op
Iteration   9: 92.601 ns/op
Iteration  10: 93.951 ns/op

# Run progress: 36.46% complete, ETA 00:24:25
# Fork: 2 of 2
# Warmup Iteration   1: 141.393 ns/op
# Warmup Iteration   2: 126.525 ns/op
# Warmup Iteration   3: 93.926 ns/op
Iteration   1: 92.561 ns/op
Iteration   2: 93.925 ns/op
Iteration   3: 92.556 ns/op
Iteration   4: 93.908 ns/op
Iteration   5: 92.665 ns/op
Iteration   6: 94.054 ns/op
Iteration   7: 92.585 ns/op
Iteration   8: 92.515 ns/op
Iteration   9: 92.550 ns/op
Iteration  10: 93.898 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  93.131 ±(99.9%) 0.600 ns/op [Average]
  (min, avg, max) = (92.515, 93.131, 94.054), stdev = 0.691
  CI (99.9%): [92.531, 93.730] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 36.53% complete, ETA 00:24:23
# Fork: 1 of 2
# Warmup Iteration   1: 203.217 ns/op
# Warmup Iteration   2: 175.816 ns/op
# Warmup Iteration   3: 122.221 ns/op
Iteration   1: 123.650 ns/op
Iteration   2: 122.282 ns/op
Iteration   3: 123.844 ns/op
Iteration   4: 140.117 ns/op
Iteration   5: 139.851 ns/op
Iteration   6: 138.476 ns/op
Iteration   7: 139.820 ns/op
Iteration   8: 139.626 ns/op
Iteration   9: 139.874 ns/op
Iteration  10: 138.431 ns/op

# Run progress: 36.60% complete, ETA 00:24:22
# Fork: 2 of 2
# Warmup Iteration   1: 201.434 ns/op
# Warmup Iteration   2: 165.802 ns/op
# Warmup Iteration   3: 122.247 ns/op
Iteration   1: 123.443 ns/op
Iteration   2: 122.202 ns/op
Iteration   3: 123.798 ns/op
Iteration   4: 140.190 ns/op
Iteration   5: 139.854 ns/op
Iteration   6: 138.752 ns/op
Iteration   7: 139.698 ns/op
Iteration   8: 139.850 ns/op
Iteration   9: 139.884 ns/op
Iteration  10: 138.710 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  134.618 ±(99.9%) 6.681 ns/op [Average]
  (min, avg, max) = (122.202, 134.618, 140.190), stdev = 7.694
  CI (99.9%): [127.937, 141.298] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 36.67% complete, ETA 00:24:20
# Fork: 1 of 2
# Warmup Iteration   1: 19.450 ns/op
# Warmup Iteration   2: 22.601 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.082 ns/op
Iteration   2: 15.279 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.097 ns/op
Iteration   6: 15.353 ns/op
Iteration   7: 17.003 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.028 ns/op
Iteration  10: 14.974 ns/op

# Run progress: 36.74% complete, ETA 00:24:19
# Fork: 2 of 2
# Warmup Iteration   1: 19.762 ns/op
# Warmup Iteration   2: 22.912 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.083 ns/op
Iteration   2: 15.278 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.016 ns/op
Iteration   5: 17.112 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.961, 16.289, 17.112), stdev = 0.953
  CI (99.9%): [15.462, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 36.81% complete, ETA 00:24:17
# Fork: 1 of 2
# Warmup Iteration   1: 698.150 ns/op
# Warmup Iteration   2: 24219.139 ns/op
# Warmup Iteration   3: 1200.893 ns/op
Iteration   1: 2451.777 ns/op
Iteration   2: 19314.320 ns/op
Iteration   3: 15212.598 ns/op
Iteration   4: 270.771 ns/op
Iteration   5: 247.524 ns/op
Iteration   6: 15254.710 ns/op
Iteration   7: 22811.769 ns/op
Iteration   8: 282.049 ns/op
Iteration   9: 329.404 ns/op
Iteration  10: 307.512 ns/op

# Run progress: 36.88% complete, ETA 00:24:15
# Fork: 2 of 2
# Warmup Iteration   1: 918.025 ns/op
# Warmup Iteration   2: 2171.264 ns/op
# Warmup Iteration   3: 882.013 ns/op
Iteration   1: 17759.595 ns/op
Iteration   2: 18957.872 ns/op
Iteration   3: 20295.636 ns/op
Iteration   4: 272.663 ns/op
Iteration   5: 253.753 ns/op
Iteration   6: 14120.414 ns/op
Iteration   7: 16607.827 ns/op
Iteration   8: 285.861 ns/op
Iteration   9: 328.616 ns/op
Iteration  10: 310.556 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8283.761 ±(99.9%) 7852.973 ns/op [Average]
  (min, avg, max) = (247.524, 8283.761, 22811.769), stdev = 9043.495
  CI (99.9%): [430.788, 16136.734] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 36.94% complete, ETA 00:24:14
# Fork: 1 of 2
# Warmup Iteration   1: 417.502 ns/op
# Warmup Iteration   2: 532.390 ns/op
# Warmup Iteration   3: 251.512 ns/op
Iteration   1: 380.700 ns/op
Iteration   2: 336.234 ns/op
Iteration   3: 339.285 ns/op
Iteration   4: 277.579 ns/op
Iteration   5: 327.824 ns/op
Iteration   6: 284.239 ns/op
Iteration   7: 336.604 ns/op
Iteration   8: 295.522 ns/op
Iteration   9: 384.006 ns/op
Iteration  10: 252.387 ns/op

# Run progress: 37.01% complete, ETA 00:24:12
# Fork: 2 of 2
# Warmup Iteration   1: 414.240 ns/op
# Warmup Iteration   2: 484.204 ns/op
# Warmup Iteration   3: 252.046 ns/op
Iteration   1: 378.231 ns/op
Iteration   2: 332.589 ns/op
Iteration   3: 331.666 ns/op
Iteration   4: 273.856 ns/op
Iteration   5: 320.990 ns/op
Iteration   6: 287.266 ns/op
Iteration   7: 330.113 ns/op
Iteration   8: 295.114 ns/op
Iteration   9: 378.796 ns/op
Iteration  10: 252.357 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  319.768 ±(99.9%) 35.993 ns/op [Average]
  (min, avg, max) = (252.357, 319.768, 384.006), stdev = 41.449
  CI (99.9%): [283.775, 355.761] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 37.08% complete, ETA 00:24:11
# Fork: 1 of 2
# Warmup Iteration   1: 17485.044 ns/op
# Warmup Iteration   2: 1582.974 ns/op
# Warmup Iteration   3: 1009.236 ns/op
Iteration   1: 328.914 ns/op
Iteration   2: 5266.344 ns/op
Iteration   3: 348.760 ns/op
Iteration   4: 2880.601 ns/op
Iteration   5: 673.028 ns/op
Iteration   6: 4827.708 ns/op
Iteration   7: 729.354 ns/op
Iteration   8: 291.039 ns/op
Iteration   9: 436.411 ns/op
Iteration  10: 321.015 ns/op

# Run progress: 37.15% complete, ETA 00:24:09
# Fork: 2 of 2
# Warmup Iteration   1: 14228.184 ns/op
# Warmup Iteration   2: 1555.831 ns/op
# Warmup Iteration   3: 478.862 ns/op
Iteration   1: 313.210 ns/op
Iteration   2: 1502.969 ns/op
Iteration   3: 345.955 ns/op
Iteration   4: 548.764 ns/op
Iteration   5: 551.139 ns/op
Iteration   6: 2761.143 ns/op
Iteration   7: 9923.838 ns/op
Iteration   8: 294.017 ns/op
Iteration   9: 415.714 ns/op
Iteration  10: 322.653 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1654.129 ±(99.9%) 2143.390 ns/op [Average]
  (min, avg, max) = (291.039, 1654.129, 9923.838), stdev = 2468.332
  CI (99.9%): [≈ 0, 3797.519] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 37.22% complete, ETA 00:24:07
# Fork: 1 of 2
# Warmup Iteration   1: 536.257 ns/op
# Warmup Iteration   2: 2194.496 ns/op
# Warmup Iteration   3: 215.937 ns/op
Iteration   1: 283.486 ns/op
Iteration   2: 304.103 ns/op
Iteration   3: 270.094 ns/op
Iteration   4: 224.496 ns/op
Iteration   5: 267.785 ns/op
Iteration   6: 243.420 ns/op
Iteration   7: 267.894 ns/op
Iteration   8: 238.759 ns/op
Iteration   9: 320.433 ns/op
Iteration  10: 215.932 ns/op

# Run progress: 37.29% complete, ETA 00:24:06
# Fork: 2 of 2
# Warmup Iteration   1: 452.868 ns/op
# Warmup Iteration   2: 2902.272 ns/op
# Warmup Iteration   3: 214.731 ns/op
Iteration   1: 284.178 ns/op
Iteration   2: 305.493 ns/op
Iteration   3: 271.637 ns/op
Iteration   4: 224.432 ns/op
Iteration   5: 265.850 ns/op
Iteration   6: 240.699 ns/op
Iteration   7: 268.445 ns/op
Iteration   8: 234.326 ns/op
Iteration   9: 319.617 ns/op
Iteration  10: 214.639 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  263.286 ±(99.9%) 28.793 ns/op [Average]
  (min, avg, max) = (214.639, 263.286, 320.433), stdev = 33.158
  CI (99.9%): [234.493, 292.079] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 37.36% complete, ETA 00:24:04
# Fork: 1 of 2
# Warmup Iteration   1: 1891.846 ns/op
# Warmup Iteration   2: 1070.653 ns/op
# Warmup Iteration   3: 700.425 ns/op
Iteration   1: 764.434 ns/op
Iteration   2: 816.461 ns/op
Iteration   3: 28673.413 ns/op
Iteration   4: 725.706 ns/op
Iteration   5: 20657.391 ns/op
Iteration   6: 740.189 ns/op
Iteration   7: 752.335 ns/op
Iteration   8: 688.726 ns/op
Iteration   9: 734.997 ns/op
Iteration  10: 666.399 ns/op

# Run progress: 37.43% complete, ETA 00:24:03
# Fork: 2 of 2
# Warmup Iteration   1: 1894.784 ns/op
# Warmup Iteration   2: 1076.732 ns/op
# Warmup Iteration   3: 700.605 ns/op
Iteration   1: 764.096 ns/op
Iteration   2: 819.233 ns/op
Iteration   3: 21639.783 ns/op
Iteration   4: 805.659 ns/op
Iteration   5: 20484.933 ns/op
Iteration   6: 750.662 ns/op
Iteration   7: 759.819 ns/op
Iteration   8: 694.565 ns/op
Iteration   9: 743.395 ns/op
Iteration  10: 671.979 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5167.709 ±(99.9%) 7997.371 ns/op [Average]
  (min, avg, max) = (666.399, 5167.709, 28673.413), stdev = 9209.785
  CI (99.9%): [≈ 0, 13165.080] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 37.50% complete, ETA 00:24:01
# Fork: 1 of 2
# Warmup Iteration   1: 19.726 ns/op
# Warmup Iteration   2: 23.047 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.068 ns/op
Iteration   2: 15.254 ns/op
Iteration   3: 17.021 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.391 ns/op
Iteration   7: 17.021 ns/op
Iteration   8: 17.023 ns/op
Iteration   9: 17.012 ns/op
Iteration  10: 14.970 ns/op

# Run progress: 37.57% complete, ETA 00:23:59
# Fork: 2 of 2
# Warmup Iteration   1: 19.507 ns/op
# Warmup Iteration   2: 20.705 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.081 ns/op
Iteration   2: 15.273 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.029 ns/op
Iteration   5: 17.119 ns/op
Iteration   6: 15.372 ns/op
Iteration   7: 17.021 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.028 ns/op
Iteration  10: 14.974 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.970, 16.291, 17.119), stdev = 0.954
  CI (99.9%): [15.463, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 37.64% complete, ETA 00:23:58
# Fork: 1 of 2
# Warmup Iteration   1: 734.297 ns/op
# Warmup Iteration   2: 392.604 ns/op
# Warmup Iteration   3: 283.691 ns/op
Iteration   1: 284.727 ns/op
Iteration   2: 283.736 ns/op
Iteration   3: 284.611 ns/op
Iteration   4: 285.444 ns/op
Iteration   5: 284.918 ns/op
Iteration   6: 283.879 ns/op
Iteration   7: 284.801 ns/op
Iteration   8: 284.817 ns/op
Iteration   9: 284.882 ns/op
Iteration  10: 283.967 ns/op

# Run progress: 37.71% complete, ETA 00:23:56
# Fork: 2 of 2
# Warmup Iteration   1: 844.026 ns/op
# Warmup Iteration   2: 396.806 ns/op
# Warmup Iteration   3: 284.798 ns/op
Iteration   1: 283.130 ns/op
Iteration   2: 285.770 ns/op
Iteration   3: 283.023 ns/op
Iteration   4: 285.899 ns/op
Iteration   5: 282.980 ns/op
Iteration   6: 285.181 ns/op
Iteration   7: 283.359 ns/op
Iteration   8: 283.858 ns/op
Iteration   9: 283.315 ns/op
Iteration  10: 285.226 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  284.376 ±(99.9%) 0.808 ns/op [Average]
  (min, avg, max) = (282.980, 284.376, 285.899), stdev = 0.931
  CI (99.9%): [283.568, 285.184] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 37.78% complete, ETA 00:23:54
# Fork: 1 of 2
# Warmup Iteration   1: 531.785 ns/op
# Warmup Iteration   2: 488.678 ns/op
# Warmup Iteration   3: 362.809 ns/op
Iteration   1: 361.201 ns/op
Iteration   2: 363.834 ns/op
Iteration   3: 361.360 ns/op
Iteration   4: 362.667 ns/op
Iteration   5: 361.342 ns/op
Iteration   6: 362.920 ns/op
Iteration   7: 361.367 ns/op
Iteration   8: 361.154 ns/op
Iteration   9: 361.382 ns/op
Iteration  10: 362.943 ns/op

# Run progress: 37.85% complete, ETA 00:23:53
# Fork: 2 of 2
# Warmup Iteration   1: 561.345 ns/op
# Warmup Iteration   2: 511.663 ns/op
# Warmup Iteration   3: 362.836 ns/op
Iteration   1: 361.299 ns/op
Iteration   2: 363.675 ns/op
Iteration   3: 361.238 ns/op
Iteration   4: 362.694 ns/op
Iteration   5: 361.108 ns/op
Iteration   6: 362.716 ns/op
Iteration   7: 361.433 ns/op
Iteration   8: 360.961 ns/op
Iteration   9: 361.424 ns/op
Iteration  10: 362.274 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  361.950 ±(99.9%) 0.796 ns/op [Average]
  (min, avg, max) = (360.961, 361.950, 363.834), stdev = 0.916
  CI (99.9%): [361.154, 362.745] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 37.92% complete, ETA 00:23:51
# Fork: 1 of 2
# Warmup Iteration   1: 8258.686 ns/op
# Warmup Iteration   2: 489.211 ns/op
# Warmup Iteration   3: 325.179 ns/op
Iteration   1: 323.674 ns/op
Iteration   2: 325.464 ns/op
Iteration   3: 323.749 ns/op
Iteration   4: 326.545 ns/op
Iteration   5: 324.097 ns/op
Iteration   6: 325.417 ns/op
Iteration   7: 323.797 ns/op
Iteration   8: 323.852 ns/op
Iteration   9: 324.172 ns/op
Iteration  10: 325.646 ns/op

# Run progress: 37.99% complete, ETA 00:23:50
# Fork: 2 of 2
# Warmup Iteration   1: 13992.517 ns/op
# Warmup Iteration   2: 419.135 ns/op
# Warmup Iteration   3: 352.826 ns/op
Iteration   1: 324.110 ns/op
Iteration   2: 326.455 ns/op
Iteration   3: 323.851 ns/op
Iteration   4: 326.875 ns/op
Iteration   5: 323.962 ns/op
Iteration   6: 325.320 ns/op
Iteration   7: 324.054 ns/op
Iteration   8: 323.921 ns/op
Iteration   9: 323.968 ns/op
Iteration  10: 325.457 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  324.719 ±(99.9%) 0.923 ns/op [Average]
  (min, avg, max) = (323.674, 324.719, 326.875), stdev = 1.063
  CI (99.9%): [323.796, 325.642] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 38.06% complete, ETA 00:23:48
# Fork: 1 of 2
# Warmup Iteration   1: 427.554 ns/op
# Warmup Iteration   2: 377.128 ns/op
# Warmup Iteration   3: 277.695 ns/op
Iteration   1: 276.319 ns/op
Iteration   2: 279.280 ns/op
Iteration   3: 276.370 ns/op
Iteration   4: 278.900 ns/op
Iteration   5: 276.314 ns/op
Iteration   6: 277.633 ns/op
Iteration   7: 276.143 ns/op
Iteration   8: 276.345 ns/op
Iteration   9: 276.384 ns/op
Iteration  10: 278.023 ns/op

# Run progress: 38.13% complete, ETA 00:23:46
# Fork: 2 of 2
# Warmup Iteration   1: 493.221 ns/op
# Warmup Iteration   2: 361.704 ns/op
# Warmup Iteration   3: 280.028 ns/op
Iteration   1: 278.759 ns/op
Iteration   2: 281.507 ns/op
Iteration   3: 278.884 ns/op
Iteration   4: 281.296 ns/op
Iteration   5: 278.782 ns/op
Iteration   6: 280.127 ns/op
Iteration   7: 278.838 ns/op
Iteration   8: 279.288 ns/op
Iteration   9: 279.251 ns/op
Iteration  10: 280.104 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  278.427 ±(99.9%) 1.465 ns/op [Average]
  (min, avg, max) = (276.143, 278.427, 281.507), stdev = 1.687
  CI (99.9%): [276.963, 279.892] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 38.19% complete, ETA 00:23:45
# Fork: 1 of 2
# Warmup Iteration   1: 1059.218 ns/op
# Warmup Iteration   2: 679.449 ns/op
# Warmup Iteration   3: 488.553 ns/op
Iteration   1: 492.805 ns/op
Iteration   2: 488.474 ns/op
Iteration   3: 489.471 ns/op
Iteration   4: 513.782 ns/op
Iteration   5: 509.294 ns/op
Iteration   6: 507.313 ns/op
Iteration   7: 508.697 ns/op
Iteration   8: 508.702 ns/op
Iteration   9: 508.392 ns/op
Iteration  10: 507.342 ns/op

# Run progress: 38.26% complete, ETA 00:23:43
# Fork: 2 of 2
# Warmup Iteration   1: 1054.942 ns/op
# Warmup Iteration   2: 676.805 ns/op
# Warmup Iteration   3: 488.066 ns/op
Iteration   1: 492.134 ns/op
Iteration   2: 488.056 ns/op
Iteration   3: 488.837 ns/op
Iteration   4: 513.440 ns/op
Iteration   5: 508.683 ns/op
Iteration   6: 506.767 ns/op
Iteration   7: 508.452 ns/op
Iteration   8: 508.280 ns/op
Iteration   9: 508.087 ns/op
Iteration  10: 506.438 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  503.172 ±(99.9%) 7.912 ns/op [Average]
  (min, avg, max) = (488.056, 503.172, 513.782), stdev = 9.112
  CI (99.9%): [495.260, 511.085] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 38.33% complete, ETA 00:23:42
# Fork: 1 of 2
# Warmup Iteration   1: 19.757 ns/op
# Warmup Iteration   2: 22.939 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.249 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.030 ns/op
Iteration   5: 17.115 ns/op
Iteration   6: 15.403 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.972 ns/op

# Run progress: 38.40% complete, ETA 00:23:40
# Fork: 2 of 2
# Warmup Iteration   1: 19.696 ns/op
# Warmup Iteration   2: 21.010 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.069 ns/op
Iteration   2: 15.275 ns/op
Iteration   3: 17.035 ns/op
Iteration   4: 15.031 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.401 ns/op
Iteration   7: 17.001 ns/op
Iteration   8: 17.010 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 14.973 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.972, 16.292, 17.115), stdev = 0.949
  CI (99.9%): [15.467, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 38.47% complete, ETA 00:23:38
# Fork: 1 of 2
# Warmup Iteration   1: 362.256 ns/op
# Warmup Iteration   2: 257.578 ns/op
# Warmup Iteration   3: 176.141 ns/op
Iteration   1: 179.815 ns/op
Iteration   2: 179.892 ns/op
Iteration   3: 178.660 ns/op
Iteration   4: 177.970 ns/op
Iteration   5: 178.261 ns/op
Iteration   6: 176.278 ns/op
Iteration   7: 178.573 ns/op
Iteration   8: 179.128 ns/op
Iteration   9: 178.589 ns/op
Iteration  10: 176.086 ns/op

# Run progress: 38.54% complete, ETA 00:23:37
# Fork: 2 of 2
# Warmup Iteration   1: 374.770 ns/op
# Warmup Iteration   2: 230.024 ns/op
# Warmup Iteration   3: 182.521 ns/op
Iteration   1: 179.939 ns/op
Iteration   2: 184.945 ns/op
Iteration   3: 180.114 ns/op
Iteration   4: 182.256 ns/op
Iteration   5: 179.464 ns/op
Iteration   6: 182.509 ns/op
Iteration   7: 181.482 ns/op
Iteration   8: 179.408 ns/op
Iteration   9: 179.510 ns/op
Iteration  10: 182.251 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  179.756 ±(99.9%) 1.845 ns/op [Average]
  (min, avg, max) = (176.086, 179.756, 184.945), stdev = 2.124
  CI (99.9%): [177.912, 181.601] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 38.61% complete, ETA 00:23:35
# Fork: 1 of 2
# Warmup Iteration   1: 489.741 ns/op
# Warmup Iteration   2: 465.370 ns/op
# Warmup Iteration   3: 338.585 ns/op
Iteration   1: 337.370 ns/op
Iteration   2: 339.382 ns/op
Iteration   3: 337.433 ns/op
Iteration   4: 338.918 ns/op
Iteration   5: 337.363 ns/op
Iteration   6: 338.954 ns/op
Iteration   7: 337.547 ns/op
Iteration   8: 337.554 ns/op
Iteration   9: 337.570 ns/op
Iteration  10: 338.773 ns/op

# Run progress: 38.68% complete, ETA 00:23:33
# Fork: 2 of 2
# Warmup Iteration   1: 525.328 ns/op
# Warmup Iteration   2: 438.773 ns/op
# Warmup Iteration   3: 341.709 ns/op
Iteration   1: 340.097 ns/op
Iteration   2: 342.463 ns/op
Iteration   3: 340.060 ns/op
Iteration   4: 342.025 ns/op
Iteration   5: 340.269 ns/op
Iteration   6: 341.599 ns/op
Iteration   7: 340.301 ns/op
Iteration   8: 340.184 ns/op
Iteration   9: 340.270 ns/op
Iteration  10: 341.642 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  339.489 ±(99.9%) 1.450 ns/op [Average]
  (min, avg, max) = (337.363, 339.489, 342.463), stdev = 1.670
  CI (99.9%): [338.038, 340.939] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 38.75% complete, ETA 00:23:32
# Fork: 1 of 2
# Warmup Iteration   1: 636.545 ns/op
# Warmup Iteration   2: 247.786 ns/op
# Warmup Iteration   3: 188.733 ns/op
Iteration   1: 187.708 ns/op
Iteration   2: 188.800 ns/op
Iteration   3: 187.686 ns/op
Iteration   4: 189.612 ns/op
Iteration   5: 187.840 ns/op
Iteration   6: 188.661 ns/op
Iteration   7: 187.636 ns/op
Iteration   8: 187.606 ns/op
Iteration   9: 187.588 ns/op
Iteration  10: 188.556 ns/op

# Run progress: 38.82% complete, ETA 00:23:30
# Fork: 2 of 2
# Warmup Iteration   1: 595.744 ns/op
# Warmup Iteration   2: 244.758 ns/op
# Warmup Iteration   3: 190.170 ns/op
Iteration   1: 188.227 ns/op
Iteration   2: 190.209 ns/op
Iteration   3: 188.601 ns/op
Iteration   4: 191.971 ns/op
Iteration   5: 188.829 ns/op
Iteration   6: 189.692 ns/op
Iteration   7: 188.550 ns/op
Iteration   8: 188.545 ns/op
Iteration   9: 188.549 ns/op
Iteration  10: 189.121 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  188.699 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (187.588, 188.699, 191.971), stdev = 1.067
  CI (99.9%): [187.773, 189.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 38.89% complete, ETA 00:23:29
# Fork: 1 of 2
# Warmup Iteration   1: 506.924 ns/op
# Warmup Iteration   2: 388.044 ns/op
# Warmup Iteration   3: 302.778 ns/op
Iteration   1: 301.551 ns/op
Iteration   2: 304.523 ns/op
Iteration   3: 301.055 ns/op
Iteration   4: 303.298 ns/op
Iteration   5: 300.771 ns/op
Iteration   6: 302.363 ns/op
Iteration   7: 300.703 ns/op
Iteration   8: 300.116 ns/op
Iteration   9: 301.004 ns/op
Iteration  10: 302.229 ns/op

# Run progress: 38.96% complete, ETA 00:23:27
# Fork: 2 of 2
# Warmup Iteration   1: 478.322 ns/op
# Warmup Iteration   2: 390.755 ns/op
# Warmup Iteration   3: 302.533 ns/op
Iteration   1: 301.692 ns/op
Iteration   2: 304.462 ns/op
Iteration   3: 301.555 ns/op
Iteration   4: 303.543 ns/op
Iteration   5: 301.552 ns/op
Iteration   6: 302.920 ns/op
Iteration   7: 301.496 ns/op
Iteration   8: 301.649 ns/op
Iteration   9: 301.748 ns/op
Iteration  10: 302.734 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  302.048 ±(99.9%) 1.050 ns/op [Average]
  (min, avg, max) = (300.116, 302.048, 304.523), stdev = 1.209
  CI (99.9%): [300.998, 303.098] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 39.03% complete, ETA 00:23:26
# Fork: 1 of 2
# Warmup Iteration   1: 1608.553 ns/op
# Warmup Iteration   2: 1090.163 ns/op
# Warmup Iteration   3: 809.433 ns/op
Iteration   1: 815.588 ns/op
Iteration   2: 809.866 ns/op
Iteration   3: 814.680 ns/op
Iteration   4: 836.629 ns/op
Iteration   5: 831.055 ns/op
Iteration   6: 828.071 ns/op
Iteration   7: 832.552 ns/op
Iteration   8: 831.301 ns/op
Iteration   9: 831.181 ns/op
Iteration  10: 828.415 ns/op

# Run progress: 39.10% complete, ETA 00:23:24
# Fork: 2 of 2
# Warmup Iteration   1: 1747.574 ns/op
# Warmup Iteration   2: 1142.760 ns/op
# Warmup Iteration   3: 809.328 ns/op
Iteration   1: 822.474 ns/op
Iteration   2: 809.986 ns/op
Iteration   3: 815.243 ns/op
Iteration   4: 876.771 ns/op
Iteration   5: 830.224 ns/op
Iteration   6: 828.170 ns/op
Iteration   7: 830.642 ns/op
Iteration   8: 831.622 ns/op
Iteration   9: 831.143 ns/op
Iteration  10: 835.652 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  828.563 ±(99.9%) 12.231 ns/op [Average]
  (min, avg, max) = (809.866, 828.563, 876.771), stdev = 14.085
  CI (99.9%): [816.332, 840.794] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 39.17% complete, ETA 00:23:22
# Fork: 1 of 2
# Warmup Iteration   1: 19.835 ns/op
# Warmup Iteration   2: 23.009 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.057 ns/op
Iteration   2: 15.261 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.377 ns/op
Iteration   7: 17.015 ns/op
Iteration   8: 17.004 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.969 ns/op

# Run progress: 39.24% complete, ETA 00:23:21
# Fork: 2 of 2
# Warmup Iteration   1: 19.466 ns/op
# Warmup Iteration   2: 22.857 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.080 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.021 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.386 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.030 ns/op
Iteration   9: 17.030 ns/op
Iteration  10: 14.977 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.969, 16.290, 17.113), stdev = 0.953
  CI (99.9%): [15.462, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 39.31% complete, ETA 00:23:19
# Fork: 1 of 2
# Warmup Iteration   1: 406.263 ns/op
# Warmup Iteration   2: 3027.486 ns/op
# Warmup Iteration   3: 881.910 ns/op
Iteration   1: 1103.438 ns/op
Iteration   2: 11027.854 ns/op
Iteration   3: 14918.458 ns/op
Iteration   4: 833.790 ns/op
Iteration   5: 231.699 ns/op
Iteration   6: 239.625 ns/op
Iteration   7: 216.366 ns/op
Iteration   8: 218.176 ns/op
Iteration   9: 318.942 ns/op
Iteration  10: 276.770 ns/op

# Run progress: 39.38% complete, ETA 00:23:18
# Fork: 2 of 2
# Warmup Iteration   1: 414.057 ns/op
# Warmup Iteration   2: 4430.130 ns/op
# Warmup Iteration   3: 532.818 ns/op
Iteration   1: 1665.962 ns/op
Iteration   2: 10860.100 ns/op
Iteration   3: 13277.059 ns/op
Iteration   4: 13999.903 ns/op
Iteration   5: 238.691 ns/op
Iteration   6: 246.206 ns/op
Iteration   7: 224.999 ns/op
Iteration   8: 222.675 ns/op
Iteration   9: 317.565 ns/op
Iteration  10: 277.654 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3535.796 ±(99.9%) 4838.182 ns/op [Average]
  (min, avg, max) = (216.366, 3535.796, 14918.458), stdev = 5571.657
  CI (99.9%): [≈ 0, 8373.978] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 39.44% complete, ETA 00:23:16
# Fork: 1 of 2
# Warmup Iteration   1: 540.724 ns/op
# Warmup Iteration   2: 419.747 ns/op
# Warmup Iteration   3: 348.699 ns/op
Iteration   1: 415.108 ns/op
Iteration   2: 331.836 ns/op
Iteration   3: 348.385 ns/op
Iteration   4: 357.466 ns/op
Iteration   5: 369.121 ns/op
Iteration   6: 363.238 ns/op
Iteration   7: 394.962 ns/op
Iteration   8: 385.097 ns/op
Iteration   9: 329.114 ns/op
Iteration  10: 346.988 ns/op

# Run progress: 39.51% complete, ETA 00:23:14
# Fork: 2 of 2
# Warmup Iteration   1: 555.756 ns/op
# Warmup Iteration   2: 469.695 ns/op
# Warmup Iteration   3: 349.118 ns/op
Iteration   1: 416.086 ns/op
Iteration   2: 331.066 ns/op
Iteration   3: 350.758 ns/op
Iteration   4: 357.294 ns/op
Iteration   5: 370.512 ns/op
Iteration   6: 364.316 ns/op
Iteration   7: 395.980 ns/op
Iteration   8: 386.648 ns/op
Iteration   9: 330.192 ns/op
Iteration  10: 349.091 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  364.663 ±(99.9%) 23.422 ns/op [Average]
  (min, avg, max) = (329.114, 364.663, 416.086), stdev = 26.972
  CI (99.9%): [341.241, 388.085] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 39.58% complete, ETA 00:23:13
# Fork: 1 of 2
# Warmup Iteration   1: 557.404 ns/op
# Warmup Iteration   2: 17155.310 ns/op
# Warmup Iteration   3: 281.005 ns/op
Iteration   1: 633.793 ns/op
Iteration   2: 702.211 ns/op
Iteration   3: 8971.720 ns/op
Iteration   4: 268.212 ns/op
Iteration   5: 222.831 ns/op
Iteration   6: 339.399 ns/op
Iteration   7: 426.982 ns/op
Iteration   8: 192.060 ns/op
Iteration   9: 196.493 ns/op
Iteration  10: 205.284 ns/op

# Run progress: 39.65% complete, ETA 00:23:11
# Fork: 2 of 2
# Warmup Iteration   1: 667.723 ns/op
# Warmup Iteration   2: 17731.845 ns/op
# Warmup Iteration   3: 280.575 ns/op
Iteration   1: 1914.179 ns/op
Iteration   2: 1011.176 ns/op
Iteration   3: 10184.930 ns/op
Iteration   4: 274.904 ns/op
Iteration   5: 236.671 ns/op
Iteration   6: 476.221 ns/op
Iteration   7: 424.815 ns/op
Iteration   8: 197.475 ns/op
Iteration   9: 189.470 ns/op
Iteration  10: 206.137 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1363.748 ±(99.9%) 2470.603 ns/op [Average]
  (min, avg, max) = (189.470, 1363.748, 10184.930), stdev = 2845.150
  CI (99.9%): [≈ 0, 3834.351] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 39.72% complete, ETA 00:23:09
# Fork: 1 of 2
# Warmup Iteration   1: 583.845 ns/op
# Warmup Iteration   2: 344.978 ns/op
# Warmup Iteration   3: 280.005 ns/op
Iteration   1: 332.272 ns/op
Iteration   2: 265.383 ns/op
Iteration   3: 281.093 ns/op
Iteration   4: 286.395 ns/op
Iteration   5: 302.085 ns/op
Iteration   6: 299.354 ns/op
Iteration   7: 320.849 ns/op
Iteration   8: 298.606 ns/op
Iteration   9: 269.139 ns/op
Iteration  10: 281.766 ns/op

# Run progress: 39.79% complete, ETA 00:23:08
# Fork: 2 of 2
# Warmup Iteration   1: 468.113 ns/op
# Warmup Iteration   2: 364.719 ns/op
# Warmup Iteration   3: 278.574 ns/op
Iteration   1: 336.471 ns/op
Iteration   2: 263.742 ns/op
Iteration   3: 280.888 ns/op
Iteration   4: 287.566 ns/op
Iteration   5: 303.734 ns/op
Iteration   6: 298.457 ns/op
Iteration   7: 323.093 ns/op
Iteration   8: 300.782 ns/op
Iteration   9: 270.259 ns/op
Iteration  10: 275.878 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  293.891 ±(99.9%) 18.840 ns/op [Average]
  (min, avg, max) = (263.742, 293.891, 336.471), stdev = 21.696
  CI (99.9%): [275.051, 312.730] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 39.86% complete, ETA 00:23:06
# Fork: 1 of 2
# Warmup Iteration   1: 3037.884 ns/op
# Warmup Iteration   2: 1995.232 ns/op
# Warmup Iteration   3: 1461.857 ns/op
Iteration   1: 1602.358 ns/op
Iteration   2: 1434.758 ns/op
Iteration   3: 1470.616 ns/op
Iteration   4: 1532.446 ns/op
Iteration   5: 1966.509 ns/op
Iteration   6: 1540.745 ns/op
Iteration   7: 1603.321 ns/op
Iteration   8: 1585.057 ns/op
Iteration   9: 1448.860 ns/op
Iteration  10: 1476.191 ns/op

# Run progress: 39.93% complete, ETA 00:23:05
# Fork: 2 of 2
# Warmup Iteration   1: 3473.558 ns/op
# Warmup Iteration   2: 1959.879 ns/op
# Warmup Iteration   3: 1470.397 ns/op
Iteration   1: 1608.507 ns/op
Iteration   2: 1441.935 ns/op
Iteration   3: 1474.226 ns/op
Iteration   4: 1539.546 ns/op
Iteration   5: 1966.725 ns/op
Iteration   6: 1542.283 ns/op
Iteration   7: 1605.496 ns/op
Iteration   8: 1585.196 ns/op
Iteration   9: 1450.429 ns/op
Iteration  10: 1478.660 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1567.693 ±(99.9%) 129.670 ns/op [Average]
  (min, avg, max) = (1434.758, 1567.693, 1966.725), stdev = 149.328
  CI (99.9%): [1438.023, 1697.363] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 40.00% complete, ETA 00:23:03
# Fork: 1 of 2
# Warmup Iteration   1: 19.358 ns/op
# Warmup Iteration   2: 22.868 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.012 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.962 ns/op

# Run progress: 40.07% complete, ETA 00:23:01
# Fork: 2 of 2
# Warmup Iteration   1: 19.365 ns/op
# Warmup Iteration   2: 22.921 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.262 ns/op
Iteration   3: 17.007 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.390 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.023 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.957 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.957, 16.288, 17.108), stdev = 0.953
  CI (99.9%): [15.460, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 40.14% complete, ETA 00:23:00
# Fork: 1 of 2
# Warmup Iteration   1: 86.959 ns/op
# Warmup Iteration   2: 87.921 ns/op
# Warmup Iteration   3: 58.006 ns/op
Iteration   1: 59.346 ns/op
Iteration   2: 57.954 ns/op
Iteration   3: 59.419 ns/op
Iteration   4: 58.219 ns/op
Iteration   5: 59.389 ns/op
Iteration   6: 57.952 ns/op
Iteration   7: 59.403 ns/op
Iteration   8: 59.389 ns/op
Iteration   9: 59.425 ns/op
Iteration  10: 57.937 ns/op

# Run progress: 40.21% complete, ETA 00:22:58
# Fork: 2 of 2
# Warmup Iteration   1: 84.652 ns/op
# Warmup Iteration   2: 79.564 ns/op
# Warmup Iteration   3: 58.106 ns/op
Iteration   1: 59.442 ns/op
Iteration   2: 58.037 ns/op
Iteration   3: 59.468 ns/op
Iteration   4: 58.290 ns/op
Iteration   5: 59.461 ns/op
Iteration   6: 58.049 ns/op
Iteration   7: 59.478 ns/op
Iteration   8: 59.433 ns/op
Iteration   9: 59.460 ns/op
Iteration  10: 58.029 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  58.879 ±(99.9%) 0.601 ns/op [Average]
  (min, avg, max) = (57.937, 58.879, 59.478), stdev = 0.693
  CI (99.9%): [58.278, 59.480] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 40.28% complete, ETA 00:22:57
# Fork: 1 of 2
# Warmup Iteration   1: 65.558 ns/op
# Warmup Iteration   2: 63.651 ns/op
# Warmup Iteration   3: 45.798 ns/op
Iteration   1: 44.472 ns/op
Iteration   2: 45.883 ns/op
Iteration   3: 44.388 ns/op
Iteration   4: 46.078 ns/op
Iteration   5: 44.464 ns/op
Iteration   6: 45.793 ns/op
Iteration   7: 44.418 ns/op
Iteration   8: 44.376 ns/op
Iteration   9: 44.371 ns/op
Iteration  10: 45.756 ns/op

# Run progress: 40.35% complete, ETA 00:22:55
# Fork: 2 of 2
# Warmup Iteration   1: 64.606 ns/op
# Warmup Iteration   2: 64.625 ns/op
# Warmup Iteration   3: 45.859 ns/op
Iteration   1: 44.475 ns/op
Iteration   2: 45.889 ns/op
Iteration   3: 44.399 ns/op
Iteration   4: 46.009 ns/op
Iteration   5: 44.466 ns/op
Iteration   6: 45.796 ns/op
Iteration   7: 44.374 ns/op
Iteration   8: 44.406 ns/op
Iteration   9: 44.406 ns/op
Iteration  10: 45.786 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.000 ±(99.9%) 0.639 ns/op [Average]
  (min, avg, max) = (44.371, 45.000, 46.078), stdev = 0.736
  CI (99.9%): [44.361, 45.639] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 40.42% complete, ETA 00:22:53
# Fork: 1 of 2
# Warmup Iteration   1: 315.857 ns/op
# Warmup Iteration   2: 105.608 ns/op
# Warmup Iteration   3: 71.439 ns/op
Iteration   1: 69.881 ns/op
Iteration   2: 71.284 ns/op
Iteration   3: 70.059 ns/op
Iteration   4: 72.799 ns/op
Iteration   5: 69.931 ns/op
Iteration   6: 71.290 ns/op
Iteration   7: 69.918 ns/op
Iteration   8: 69.953 ns/op
Iteration   9: 70.126 ns/op
Iteration  10: 71.451 ns/op

# Run progress: 40.49% complete, ETA 00:22:52
# Fork: 2 of 2
# Warmup Iteration   1: 278.798 ns/op
# Warmup Iteration   2: 96.958 ns/op
# Warmup Iteration   3: 71.525 ns/op
Iteration   1: 69.879 ns/op
Iteration   2: 71.437 ns/op
Iteration   3: 70.249 ns/op
Iteration   4: 72.959 ns/op
Iteration   5: 70.120 ns/op
Iteration   6: 71.400 ns/op
Iteration   7: 70.110 ns/op
Iteration   8: 70.032 ns/op
Iteration   9: 70.120 ns/op
Iteration  10: 71.251 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.712 ±(99.9%) 0.836 ns/op [Average]
  (min, avg, max) = (69.879, 70.712, 72.959), stdev = 0.963
  CI (99.9%): [69.876, 71.548] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 40.56% complete, ETA 00:22:50
# Fork: 1 of 2
# Warmup Iteration   1: 66.890 ns/op
# Warmup Iteration   2: 68.629 ns/op
# Warmup Iteration   3: 49.169 ns/op
Iteration   1: 47.811 ns/op
Iteration   2: 49.118 ns/op
Iteration   3: 47.928 ns/op
Iteration   4: 49.106 ns/op
Iteration   5: 47.830 ns/op
Iteration   6: 49.137 ns/op
Iteration   7: 47.859 ns/op
Iteration   8: 47.911 ns/op
Iteration   9: 47.888 ns/op
Iteration  10: 49.129 ns/op

# Run progress: 40.63% complete, ETA 00:22:49
# Fork: 2 of 2
# Warmup Iteration   1: 68.310 ns/op
# Warmup Iteration   2: 68.844 ns/op
# Warmup Iteration   3: 49.138 ns/op
Iteration   1: 47.795 ns/op
Iteration   2: 49.109 ns/op
Iteration   3: 47.924 ns/op
Iteration   4: 49.133 ns/op
Iteration   5: 47.789 ns/op
Iteration   6: 49.130 ns/op
Iteration   7: 47.885 ns/op
Iteration   8: 47.878 ns/op
Iteration   9: 47.911 ns/op
Iteration  10: 49.179 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.372 ±(99.9%) 0.552 ns/op [Average]
  (min, avg, max) = (47.789, 48.372, 49.179), stdev = 0.636
  CI (99.9%): [47.820, 48.925] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 40.69% complete, ETA 00:22:47
# Fork: 1 of 2
# Warmup Iteration   1: 169.697 ns/op
# Warmup Iteration   2: 162.414 ns/op
# Warmup Iteration   3: 121.921 ns/op
Iteration   1: 123.045 ns/op
Iteration   2: 128.761 ns/op
Iteration   3: 123.228 ns/op
Iteration   4: 137.451 ns/op
Iteration   5: 137.731 ns/op
Iteration   6: 136.096 ns/op
Iteration   7: 136.920 ns/op
Iteration   8: 136.941 ns/op
Iteration   9: 136.868 ns/op
Iteration  10: 136.020 ns/op

# Run progress: 40.76% complete, ETA 00:22:45
# Fork: 2 of 2
# Warmup Iteration   1: 152.673 ns/op
# Warmup Iteration   2: 161.391 ns/op
# Warmup Iteration   3: 111.487 ns/op
Iteration   1: 112.977 ns/op
Iteration   2: 125.697 ns/op
Iteration   3: 112.341 ns/op
Iteration   4: 128.467 ns/op
Iteration   5: 127.625 ns/op
Iteration   6: 125.855 ns/op
Iteration   7: 127.045 ns/op
Iteration   8: 126.132 ns/op
Iteration   9: 127.163 ns/op
Iteration  10: 126.079 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  128.622 ±(99.9%) 6.553 ns/op [Average]
  (min, avg, max) = (112.341, 128.622, 137.731), stdev = 7.547
  CI (99.9%): [122.069, 135.175] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 40.83% complete, ETA 00:22:44
# Fork: 1 of 2
# Warmup Iteration   1: 19.675 ns/op
# Warmup Iteration   2: 22.859 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.269 ns/op
Iteration   3: 17.021 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.382 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 17.008 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.962 ns/op

# Run progress: 40.90% complete, ETA 00:22:42
# Fork: 2 of 2
# Warmup Iteration   1: 19.301 ns/op
# Warmup Iteration   2: 22.709 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.294 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.392 ns/op
Iteration   7: 17.005 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.002 ns/op
Iteration  10: 14.957 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.957, 16.287, 17.106), stdev = 0.950
  CI (99.9%): [15.462, 17.112] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 40.97% complete, ETA 00:22:41
# Fork: 1 of 2
# Warmup Iteration   1: 709.862 ns/op
# Warmup Iteration   2: 21472.810 ns/op
# Warmup Iteration   3: 1101.926 ns/op
Iteration   1: 23748.888 ns/op
Iteration   2: 310.592 ns/op
Iteration   3: 18109.206 ns/op
Iteration   4: 278.773 ns/op
Iteration   5: 341.400 ns/op
Iteration   6: 22481.106 ns/op
Iteration   7: 368.244 ns/op
Iteration   8: 268.409 ns/op
Iteration   9: 320.182 ns/op
Iteration  10: 299.005 ns/op

# Run progress: 41.04% complete, ETA 00:22:39
# Fork: 2 of 2
# Warmup Iteration   1: 842.654 ns/op
# Warmup Iteration   2: 22371.521 ns/op
# Warmup Iteration   3: 654.866 ns/op
Iteration   1: 19569.653 ns/op
Iteration   2: 338.486 ns/op
Iteration   3: 20702.023 ns/op
Iteration   4: 277.974 ns/op
Iteration   5: 302.786 ns/op
Iteration   6: 18712.955 ns/op
Iteration   7: 371.052 ns/op
Iteration   8: 266.128 ns/op
Iteration   9: 320.673 ns/op
Iteration  10: 286.600 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6383.707 ±(99.9%) 8322.795 ns/op [Average]
  (min, avg, max) = (266.128, 6383.707, 23748.888), stdev = 9584.543
  CI (99.9%): [≈ 0, 14706.502] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 41.11% complete, ETA 00:22:37
# Fork: 1 of 2
# Warmup Iteration   1: 459.044 ns/op
# Warmup Iteration   2: 387.816 ns/op
# Warmup Iteration   3: 460.266 ns/op
Iteration   1: 331.344 ns/op
Iteration   2: 311.170 ns/op
Iteration   3: 336.675 ns/op
Iteration   4: 326.374 ns/op
Iteration   5: 302.017 ns/op
Iteration   6: 333.399 ns/op
Iteration   7: 361.065 ns/op
Iteration   8: 300.172 ns/op
Iteration   9: 305.727 ns/op
Iteration  10: 323.589 ns/op

# Run progress: 41.18% complete, ETA 00:22:36
# Fork: 2 of 2
# Warmup Iteration   1: 427.801 ns/op
# Warmup Iteration   2: 401.545 ns/op
# Warmup Iteration   3: 419.848 ns/op
Iteration   1: 336.421 ns/op
Iteration   2: 315.939 ns/op
Iteration   3: 339.809 ns/op
Iteration   4: 335.168 ns/op
Iteration   5: 308.194 ns/op
Iteration   6: 343.422 ns/op
Iteration   7: 364.450 ns/op
Iteration   8: 309.770 ns/op
Iteration   9: 311.709 ns/op
Iteration  10: 326.545 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  326.148 ±(99.9%) 15.884 ns/op [Average]
  (min, avg, max) = (300.172, 326.148, 364.450), stdev = 18.291
  CI (99.9%): [310.264, 342.031] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 41.25% complete, ETA 00:22:34
# Fork: 1 of 2
# Warmup Iteration   1: 16970.211 ns/op
# Warmup Iteration   2: 2184.228 ns/op
# Warmup Iteration   3: 475.387 ns/op
Iteration   1: 3078.727 ns/op
Iteration   2: 372.316 ns/op
Iteration   3: 2811.014 ns/op
Iteration   4: 314.978 ns/op
Iteration   5: 269.154 ns/op
Iteration   6: 414.861 ns/op
Iteration   7: 496.846 ns/op
Iteration   8: 293.650 ns/op
Iteration   9: 316.149 ns/op
Iteration  10: 301.933 ns/op

# Run progress: 41.32% complete, ETA 00:22:33
# Fork: 2 of 2
# Warmup Iteration   1: 29773.335 ns/op
# Warmup Iteration   2: 6866.427 ns/op
# Warmup Iteration   3: 562.279 ns/op
Iteration   1: 9774.647 ns/op
Iteration   2: 370.383 ns/op
Iteration   3: 1143.445 ns/op
Iteration   4: 314.885 ns/op
Iteration   5: 269.447 ns/op
Iteration   6: 414.183 ns/op
Iteration   7: 499.155 ns/op
Iteration   8: 293.188 ns/op
Iteration   9: 316.648 ns/op
Iteration  10: 320.515 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1119.306 ±(99.9%) 1902.470 ns/op [Average]
  (min, avg, max) = (269.154, 1119.306, 9774.647), stdev = 2190.888
  CI (99.9%): [≈ 0, 3021.777] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 41.39% complete, ETA 00:22:31
# Fork: 1 of 2
# Warmup Iteration   1: 406.149 ns/op
# Warmup Iteration   2: 344.885 ns/op
# Warmup Iteration   3: 411.935 ns/op
Iteration   1: 267.114 ns/op
Iteration   2: 244.336 ns/op
Iteration   3: 282.511 ns/op
Iteration   4: 258.984 ns/op
Iteration   5: 226.428 ns/op
Iteration   6: 280.240 ns/op
Iteration   7: 295.931 ns/op
Iteration   8: 233.969 ns/op
Iteration   9: 247.497 ns/op
Iteration  10: 246.170 ns/op

# Run progress: 41.46% complete, ETA 00:22:29
# Fork: 2 of 2
# Warmup Iteration   1: 500.893 ns/op
# Warmup Iteration   2: 310.448 ns/op
# Warmup Iteration   3: 408.326 ns/op
Iteration   1: 267.015 ns/op
Iteration   2: 244.293 ns/op
Iteration   3: 282.567 ns/op
Iteration   4: 259.046 ns/op
Iteration   5: 226.300 ns/op
Iteration   6: 280.026 ns/op
Iteration   7: 291.927 ns/op
Iteration   8: 233.947 ns/op
Iteration   9: 247.525 ns/op
Iteration  10: 246.259 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  258.104 ±(99.9%) 18.868 ns/op [Average]
  (min, avg, max) = (226.300, 258.104, 295.931), stdev = 21.728
  CI (99.9%): [239.236, 276.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 41.53% complete, ETA 00:22:28
# Fork: 1 of 2
# Warmup Iteration   1: 1924.761 ns/op
# Warmup Iteration   2: 1092.201 ns/op
# Warmup Iteration   3: 717.511 ns/op
Iteration   1: 784.961 ns/op
Iteration   2: 831.802 ns/op
Iteration   3: 834.801 ns/op
Iteration   4: 803.196 ns/op
Iteration   5: 17438.291 ns/op
Iteration   6: 776.045 ns/op
Iteration   7: 23743.327 ns/op
Iteration   8: 722.785 ns/op
Iteration   9: 749.285 ns/op
Iteration  10: 685.768 ns/op

# Run progress: 41.60% complete, ETA 00:22:26
# Fork: 2 of 2
# Warmup Iteration   1: 1922.302 ns/op
# Warmup Iteration   2: 1091.371 ns/op
# Warmup Iteration   3: 717.834 ns/op
Iteration   1: 785.343 ns/op
Iteration   2: 825.710 ns/op
Iteration   3: 825.292 ns/op
Iteration   4: 812.260 ns/op
Iteration   5: 28775.557 ns/op
Iteration   6: 762.326 ns/op
Iteration   7: 7232.612 ns/op
Iteration   8: 710.834 ns/op
Iteration   9: 745.093 ns/op
Iteration  10: 683.314 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4476.430 ±(99.9%) 7338.477 ns/op [Average]
  (min, avg, max) = (683.314, 4476.430, 28775.557), stdev = 8451.001
  CI (99.9%): [≈ 0, 11814.907] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 41.67% complete, ETA 00:22:24
# Fork: 1 of 2
# Warmup Iteration   1: 19.443 ns/op
# Warmup Iteration   2: 22.736 ns/op
# Warmup Iteration   3: 15.153 ns/op
Iteration   1: 17.023 ns/op
Iteration   2: 17.123 ns/op
Iteration   3: 17.042 ns/op
Iteration   4: 15.261 ns/op
Iteration   5: 17.025 ns/op
Iteration   6: 14.964 ns/op
Iteration   7: 17.035 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.035 ns/op
Iteration  10: 15.212 ns/op

# Run progress: 41.74% complete, ETA 00:22:23
# Fork: 2 of 2
# Warmup Iteration   1: 19.400 ns/op
# Warmup Iteration   2: 23.051 ns/op
# Warmup Iteration   3: 15.147 ns/op
Iteration   1: 17.000 ns/op
Iteration   2: 17.119 ns/op
Iteration   3: 17.030 ns/op
Iteration   4: 15.277 ns/op
Iteration   5: 17.019 ns/op
Iteration   6: 14.964 ns/op
Iteration   7: 17.041 ns/op
Iteration   8: 17.031 ns/op
Iteration   9: 17.041 ns/op
Iteration  10: 15.199 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.473 ±(99.9%) 0.777 ns/op [Average]
  (min, avg, max) = (14.964, 16.473, 17.123), stdev = 0.895
  CI (99.9%): [15.696, 17.250] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 41.81% complete, ETA 00:22:21
# Fork: 1 of 2
# Warmup Iteration   1: 179.948 ns/op
# Warmup Iteration   2: 128.650 ns/op
# Warmup Iteration   3: 94.083 ns/op
Iteration   1: 95.379 ns/op
Iteration   2: 93.760 ns/op
Iteration   3: 95.326 ns/op
Iteration   4: 95.344 ns/op
Iteration   5: 95.025 ns/op
Iteration   6: 93.834 ns/op
Iteration   7: 95.327 ns/op
Iteration   8: 95.037 ns/op
Iteration   9: 95.358 ns/op
Iteration  10: 94.224 ns/op

# Run progress: 41.88% complete, ETA 00:22:20
# Fork: 2 of 2
# Warmup Iteration   1: 182.377 ns/op
# Warmup Iteration   2: 128.492 ns/op
# Warmup Iteration   3: 93.965 ns/op
Iteration   1: 95.417 ns/op
Iteration   2: 93.797 ns/op
Iteration   3: 95.353 ns/op
Iteration   4: 95.074 ns/op
Iteration   5: 95.466 ns/op
Iteration   6: 93.907 ns/op
Iteration   7: 95.570 ns/op
Iteration   8: 95.407 ns/op
Iteration   9: 95.585 ns/op
Iteration  10: 94.134 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  94.916 ±(99.9%) 0.588 ns/op [Average]
  (min, avg, max) = (93.760, 94.916, 95.585), stdev = 0.677
  CI (99.9%): [94.328, 95.504] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 41.94% complete, ETA 00:22:18
# Fork: 1 of 2
# Warmup Iteration   1: 64.733 ns/op
# Warmup Iteration   2: 64.941 ns/op
# Warmup Iteration   3: 45.772 ns/op
Iteration   1: 44.528 ns/op
Iteration   2: 45.797 ns/op
Iteration   3: 44.393 ns/op
Iteration   4: 46.287 ns/op
Iteration   5: 44.379 ns/op
Iteration   6: 45.837 ns/op
Iteration   7: 44.395 ns/op
Iteration   8: 44.389 ns/op
Iteration   9: 44.393 ns/op
Iteration  10: 45.797 ns/op

# Run progress: 42.01% complete, ETA 00:22:16
# Fork: 2 of 2
# Warmup Iteration   1: 65.456 ns/op
# Warmup Iteration   2: 65.986 ns/op
# Warmup Iteration   3: 45.764 ns/op
Iteration   1: 44.514 ns/op
Iteration   2: 45.799 ns/op
Iteration   3: 44.404 ns/op
Iteration   4: 46.370 ns/op
Iteration   5: 44.415 ns/op
Iteration   6: 45.806 ns/op
Iteration   7: 44.371 ns/op
Iteration   8: 44.392 ns/op
Iteration   9: 44.375 ns/op
Iteration  10: 45.773 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.021 ±(99.9%) 0.677 ns/op [Average]
  (min, avg, max) = (44.371, 45.021, 46.370), stdev = 0.780
  CI (99.9%): [44.344, 45.698] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 42.08% complete, ETA 00:22:15
# Fork: 1 of 2
# Warmup Iteration   1: 225.145 ns/op
# Warmup Iteration   2: 154.290 ns/op
# Warmup Iteration   3: 113.226 ns/op
Iteration   1: 111.208 ns/op
Iteration   2: 113.135 ns/op
Iteration   3: 111.034 ns/op
Iteration   4: 113.621 ns/op
Iteration   5: 110.964 ns/op
Iteration   6: 112.765 ns/op
Iteration   7: 111.282 ns/op
Iteration   8: 110.948 ns/op
Iteration   9: 110.941 ns/op
Iteration  10: 112.366 ns/op

# Run progress: 42.15% complete, ETA 00:22:13
# Fork: 2 of 2
# Warmup Iteration   1: 216.278 ns/op
# Warmup Iteration   2: 147.943 ns/op
# Warmup Iteration   3: 113.306 ns/op
Iteration   1: 110.993 ns/op
Iteration   2: 112.682 ns/op
Iteration   3: 110.984 ns/op
Iteration   4: 113.885 ns/op
Iteration   5: 110.953 ns/op
Iteration   6: 112.968 ns/op
Iteration   7: 111.154 ns/op
Iteration   8: 111.001 ns/op
Iteration   9: 111.090 ns/op
Iteration  10: 112.485 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  111.823 ±(99.9%) 0.897 ns/op [Average]
  (min, avg, max) = (110.941, 111.823, 113.885), stdev = 1.033
  CI (99.9%): [110.926, 112.720] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 42.22% complete, ETA 00:22:12
# Fork: 1 of 2
# Warmup Iteration   1: 67.644 ns/op
# Warmup Iteration   2: 68.358 ns/op
# Warmup Iteration   3: 49.117 ns/op
Iteration   1: 47.851 ns/op
Iteration   2: 49.090 ns/op
Iteration   3: 47.852 ns/op
Iteration   4: 49.125 ns/op
Iteration   5: 47.901 ns/op
Iteration   6: 49.064 ns/op
Iteration   7: 47.850 ns/op
Iteration   8: 47.898 ns/op
Iteration   9: 47.868 ns/op
Iteration  10: 49.141 ns/op

# Run progress: 42.29% complete, ETA 00:22:10
# Fork: 2 of 2
# Warmup Iteration   1: 67.436 ns/op
# Warmup Iteration   2: 70.981 ns/op
# Warmup Iteration   3: 49.123 ns/op
Iteration   1: 47.923 ns/op
Iteration   2: 49.091 ns/op
Iteration   3: 47.856 ns/op
Iteration   4: 49.114 ns/op
Iteration   5: 47.915 ns/op
Iteration   6: 49.064 ns/op
Iteration   7: 47.842 ns/op
Iteration   8: 47.907 ns/op
Iteration   9: 47.865 ns/op
Iteration  10: 49.017 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.362 ±(99.9%) 0.529 ns/op [Average]
  (min, avg, max) = (47.842, 48.362, 49.141), stdev = 0.609
  CI (99.9%): [47.833, 48.891] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 42.36% complete, ETA 00:22:08
# Fork: 1 of 2
# Warmup Iteration   1: 184.662 ns/op
# Warmup Iteration   2: 181.147 ns/op
# Warmup Iteration   3: 100.527 ns/op
Iteration   1: 102.102 ns/op
Iteration   2: 100.547 ns/op
Iteration   3: 102.339 ns/op
Iteration   4: 107.818 ns/op
Iteration   5: 107.523 ns/op
Iteration   6: 106.078 ns/op
Iteration   7: 107.543 ns/op
Iteration   8: 107.496 ns/op
Iteration   9: 107.650 ns/op
Iteration  10: 106.331 ns/op

# Run progress: 42.43% complete, ETA 00:22:07
# Fork: 2 of 2
# Warmup Iteration   1: 191.010 ns/op
# Warmup Iteration   2: 190.637 ns/op
# Warmup Iteration   3: 97.621 ns/op
Iteration   1: 98.945 ns/op
Iteration   2: 97.727 ns/op
Iteration   3: 99.073 ns/op
Iteration   4: 105.429 ns/op
Iteration   5: 104.983 ns/op
Iteration   6: 103.905 ns/op
Iteration   7: 104.956 ns/op
Iteration   8: 104.798 ns/op
Iteration   9: 105.284 ns/op
Iteration  10: 104.041 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  104.228 ±(99.9%) 2.728 ns/op [Average]
  (min, avg, max) = (97.727, 104.228, 107.818), stdev = 3.141
  CI (99.9%): [101.501, 106.956] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 42.50% complete, ETA 00:22:05
# Fork: 1 of 2
# Warmup Iteration   1: 19.416 ns/op
# Warmup Iteration   2: 21.462 ns/op
# Warmup Iteration   3: 15.151 ns/op
Iteration   1: 17.018 ns/op
Iteration   2: 17.135 ns/op
Iteration   3: 17.028 ns/op
Iteration   4: 15.271 ns/op
Iteration   5: 17.031 ns/op
Iteration   6: 14.959 ns/op
Iteration   7: 17.030 ns/op
Iteration   8: 17.025 ns/op
Iteration   9: 17.037 ns/op
Iteration  10: 15.219 ns/op

# Run progress: 42.57% complete, ETA 00:22:04
# Fork: 2 of 2
# Warmup Iteration   1: 19.639 ns/op
# Warmup Iteration   2: 20.839 ns/op
# Warmup Iteration   3: 15.161 ns/op
Iteration   1: 16.996 ns/op
Iteration   2: 17.120 ns/op
Iteration   3: 17.028 ns/op
Iteration   4: 15.263 ns/op
Iteration   5: 17.023 ns/op
Iteration   6: 14.971 ns/op
Iteration   7: 17.044 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.032 ns/op
Iteration  10: 15.219 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.474 ±(99.9%) 0.775 ns/op [Average]
  (min, avg, max) = (14.959, 16.474, 17.135), stdev = 0.892
  CI (99.9%): [15.699, 17.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 42.64% complete, ETA 00:22:02
# Fork: 1 of 2
# Warmup Iteration   1: 213.707 ns/op
# Warmup Iteration   2: 183.205 ns/op
# Warmup Iteration   3: 127.304 ns/op
Iteration   1: 129.503 ns/op
Iteration   2: 127.351 ns/op
Iteration   3: 131.320 ns/op
Iteration   4: 127.670 ns/op
Iteration   5: 128.958 ns/op
Iteration   6: 127.473 ns/op
Iteration   7: 129.161 ns/op
Iteration   8: 129.108 ns/op
Iteration   9: 129.217 ns/op
Iteration  10: 127.343 ns/op

# Run progress: 42.71% complete, ETA 00:22:00
# Fork: 2 of 2
# Warmup Iteration   1: 205.644 ns/op
# Warmup Iteration   2: 181.168 ns/op
# Warmup Iteration   3: 124.125 ns/op
Iteration   1: 125.730 ns/op
Iteration   2: 134.253 ns/op
Iteration   3: 125.576 ns/op
Iteration   4: 125.003 ns/op
Iteration   5: 125.563 ns/op
Iteration   6: 124.355 ns/op
Iteration   7: 125.608 ns/op
Iteration   8: 127.657 ns/op
Iteration   9: 125.478 ns/op
Iteration  10: 124.410 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  127.537 ±(99.9%) 2.170 ns/op [Average]
  (min, avg, max) = (124.355, 127.537, 134.253), stdev = 2.499
  CI (99.9%): [125.367, 129.707] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 42.78% complete, ETA 00:21:59
# Fork: 1 of 2
# Warmup Iteration   1: 64.766 ns/op
# Warmup Iteration   2: 65.766 ns/op
# Warmup Iteration   3: 45.770 ns/op
Iteration   1: 44.515 ns/op
Iteration   2: 45.850 ns/op
Iteration   3: 44.375 ns/op
Iteration   4: 46.279 ns/op
Iteration   5: 44.379 ns/op
Iteration   6: 45.796 ns/op
Iteration   7: 44.368 ns/op
Iteration   8: 44.367 ns/op
Iteration   9: 44.399 ns/op
Iteration  10: 45.752 ns/op

# Run progress: 42.85% complete, ETA 00:21:57
# Fork: 2 of 2
# Warmup Iteration   1: 64.987 ns/op
# Warmup Iteration   2: 67.185 ns/op
# Warmup Iteration   3: 45.776 ns/op
Iteration   1: 44.539 ns/op
Iteration   2: 45.798 ns/op
Iteration   3: 44.390 ns/op
Iteration   4: 46.247 ns/op
Iteration   5: 44.411 ns/op
Iteration   6: 45.791 ns/op
Iteration   7: 44.363 ns/op
Iteration   8: 44.421 ns/op
Iteration   9: 44.397 ns/op
Iteration  10: 45.784 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.011 ±(99.9%) 0.666 ns/op [Average]
  (min, avg, max) = (44.363, 45.011, 46.279), stdev = 0.768
  CI (99.9%): [44.345, 45.678] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 42.92% complete, ETA 00:21:56
# Fork: 1 of 2
# Warmup Iteration   1: 238.354 ns/op
# Warmup Iteration   2: 147.543 ns/op
# Warmup Iteration   3: 111.317 ns/op
Iteration   1: 110.638 ns/op
Iteration   2: 111.829 ns/op
Iteration   3: 110.593 ns/op
Iteration   4: 111.837 ns/op
Iteration   5: 110.650 ns/op
Iteration   6: 111.371 ns/op
Iteration   7: 110.606 ns/op
Iteration   8: 110.611 ns/op
Iteration   9: 110.756 ns/op
Iteration  10: 111.103 ns/op

# Run progress: 42.99% complete, ETA 00:21:54
# Fork: 2 of 2
# Warmup Iteration   1: 201.539 ns/op
# Warmup Iteration   2: 150.399 ns/op
# Warmup Iteration   3: 112.856 ns/op
Iteration   1: 111.819 ns/op
Iteration   2: 113.818 ns/op
Iteration   3: 111.791 ns/op
Iteration   4: 113.591 ns/op
Iteration   5: 111.849 ns/op
Iteration   6: 112.972 ns/op
Iteration   7: 111.857 ns/op
Iteration   8: 111.804 ns/op
Iteration   9: 111.912 ns/op
Iteration  10: 112.657 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  111.703 ±(99.9%) 0.844 ns/op [Average]
  (min, avg, max) = (110.593, 111.703, 113.818), stdev = 0.972
  CI (99.9%): [110.859, 112.547] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 43.06% complete, ETA 00:21:52
# Fork: 1 of 2
# Warmup Iteration   1: 67.213 ns/op
# Warmup Iteration   2: 70.738 ns/op
# Warmup Iteration   3: 49.116 ns/op
Iteration   1: 47.873 ns/op
Iteration   2: 49.092 ns/op
Iteration   3: 47.883 ns/op
Iteration   4: 49.099 ns/op
Iteration   5: 47.916 ns/op
Iteration   6: 49.048 ns/op
Iteration   7: 47.843 ns/op
Iteration   8: 47.908 ns/op
Iteration   9: 47.866 ns/op
Iteration  10: 49.094 ns/op

# Run progress: 43.13% complete, ETA 00:21:51
# Fork: 2 of 2
# Warmup Iteration   1: 67.711 ns/op
# Warmup Iteration   2: 67.332 ns/op
# Warmup Iteration   3: 49.135 ns/op
Iteration   1: 47.851 ns/op
Iteration   2: 49.123 ns/op
Iteration   3: 47.859 ns/op
Iteration   4: 49.111 ns/op
Iteration   5: 47.907 ns/op
Iteration   6: 49.037 ns/op
Iteration   7: 47.861 ns/op
Iteration   8: 47.932 ns/op
Iteration   9: 47.861 ns/op
Iteration  10: 49.009 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.359 ±(99.9%) 0.523 ns/op [Average]
  (min, avg, max) = (47.843, 48.359, 49.123), stdev = 0.602
  CI (99.9%): [47.836, 48.882] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 43.19% complete, ETA 00:21:49
# Fork: 1 of 2
# Warmup Iteration   1: 197.050 ns/op
# Warmup Iteration   2: 190.889 ns/op
# Warmup Iteration   3: 97.466 ns/op
Iteration   1: 98.909 ns/op
Iteration   2: 97.472 ns/op
Iteration   3: 98.619 ns/op
Iteration   4: 106.157 ns/op
Iteration   5: 105.705 ns/op
Iteration   6: 104.344 ns/op
Iteration   7: 105.712 ns/op
Iteration   8: 105.726 ns/op
Iteration   9: 105.852 ns/op
Iteration  10: 104.444 ns/op

# Run progress: 43.26% complete, ETA 00:21:48
# Fork: 2 of 2
# Warmup Iteration   1: 180.324 ns/op
# Warmup Iteration   2: 194.992 ns/op
# Warmup Iteration   3: 100.146 ns/op
Iteration   1: 101.878 ns/op
Iteration   2: 100.261 ns/op
Iteration   3: 101.944 ns/op
Iteration   4: 107.880 ns/op
Iteration   5: 108.079 ns/op
Iteration   6: 106.566 ns/op
Iteration   7: 107.988 ns/op
Iteration   8: 108.233 ns/op
Iteration   9: 108.109 ns/op
Iteration  10: 106.605 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  104.524 ±(99.9%) 3.006 ns/op [Average]
  (min, avg, max) = (97.472, 104.524, 108.233), stdev = 3.462
  CI (99.9%): [101.518, 107.530] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 43.33% complete, ETA 00:21:46
# Fork: 1 of 2
# Warmup Iteration   1: 19.691 ns/op
# Warmup Iteration   2: 22.764 ns/op
# Warmup Iteration   3: 15.153 ns/op
Iteration   1: 17.013 ns/op
Iteration   2: 17.106 ns/op
Iteration   3: 17.001 ns/op
Iteration   4: 15.261 ns/op
Iteration   5: 17.024 ns/op
Iteration   6: 14.974 ns/op
Iteration   7: 17.013 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.040 ns/op
Iteration  10: 15.184 ns/op

# Run progress: 43.40% complete, ETA 00:21:44
# Fork: 2 of 2
# Warmup Iteration   1: 19.538 ns/op
# Warmup Iteration   2: 22.559 ns/op
# Warmup Iteration   3: 15.142 ns/op
Iteration   1: 17.017 ns/op
Iteration   2: 17.120 ns/op
Iteration   3: 17.031 ns/op
Iteration   4: 15.274 ns/op
Iteration   5: 17.022 ns/op
Iteration   6: 14.973 ns/op
Iteration   7: 17.039 ns/op
Iteration   8: 17.002 ns/op
Iteration   9: 17.032 ns/op
Iteration  10: 15.182 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.466 ±(99.9%) 0.776 ns/op [Average]
  (min, avg, max) = (14.973, 16.466, 17.120), stdev = 0.893
  CI (99.9%): [15.691, 17.242] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 43.47% complete, ETA 00:21:43
# Fork: 1 of 2
# Warmup Iteration   1: 190.857 ns/op
# Warmup Iteration   2: 342.152 ns/op
# Warmup Iteration   3: 179.124 ns/op
Iteration   1: 119.268 ns/op
Iteration   2: 119.605 ns/op
Iteration   3: 122.217 ns/op
Iteration   4: 120.514 ns/op
Iteration   5: 118.446 ns/op
Iteration   6: 119.465 ns/op
Iteration   7: 121.901 ns/op
Iteration   8: 121.653 ns/op
Iteration   9: 127.313 ns/op
Iteration  10: 117.702 ns/op

# Run progress: 43.54% complete, ETA 00:21:41
# Fork: 2 of 2
# Warmup Iteration   1: 189.671 ns/op
# Warmup Iteration   2: 380.268 ns/op
# Warmup Iteration   3: 176.381 ns/op
Iteration   1: 121.644 ns/op
Iteration   2: 122.686 ns/op
Iteration   3: 124.607 ns/op
Iteration   4: 122.644 ns/op
Iteration   5: 121.266 ns/op
Iteration   6: 121.205 ns/op
Iteration   7: 124.099 ns/op
Iteration   8: 122.465 ns/op
Iteration   9: 129.768 ns/op
Iteration  10: 120.186 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  121.933 ±(99.9%) 2.508 ns/op [Average]
  (min, avg, max) = (117.702, 121.933, 129.768), stdev = 2.888
  CI (99.9%): [119.425, 124.441] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 43.61% complete, ETA 00:21:40
# Fork: 1 of 2
# Warmup Iteration   1: 64.498 ns/op
# Warmup Iteration   2: 61.525 ns/op
# Warmup Iteration   3: 45.771 ns/op
Iteration   1: 44.518 ns/op
Iteration   2: 45.814 ns/op
Iteration   3: 44.380 ns/op
Iteration   4: 46.252 ns/op
Iteration   5: 44.419 ns/op
Iteration   6: 45.806 ns/op
Iteration   7: 44.402 ns/op
Iteration   8: 44.398 ns/op
Iteration   9: 44.371 ns/op
Iteration  10: 45.771 ns/op

# Run progress: 43.68% complete, ETA 00:21:38
# Fork: 2 of 2
# Warmup Iteration   1: 64.323 ns/op
# Warmup Iteration   2: 64.230 ns/op
# Warmup Iteration   3: 45.781 ns/op
Iteration   1: 44.501 ns/op
Iteration   2: 45.798 ns/op
Iteration   3: 44.370 ns/op
Iteration   4: 46.247 ns/op
Iteration   5: 44.371 ns/op
Iteration   6: 45.865 ns/op
Iteration   7: 44.380 ns/op
Iteration   8: 44.384 ns/op
Iteration   9: 44.382 ns/op
Iteration  10: 45.777 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.010 ±(99.9%) 0.669 ns/op [Average]
  (min, avg, max) = (44.370, 45.010, 46.252), stdev = 0.770
  CI (99.9%): [44.342, 45.679] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 43.75% complete, ETA 00:21:36
# Fork: 1 of 2
# Warmup Iteration   1: 214.387 ns/op
# Warmup Iteration   2: 149.816 ns/op
# Warmup Iteration   3: 98.423 ns/op
Iteration   1: 95.938 ns/op
Iteration   2: 110.166 ns/op
Iteration   3: 105.337 ns/op
Iteration   4: 98.459 ns/op
Iteration   5: 100.121 ns/op
Iteration   6: 111.036 ns/op
Iteration   7: 101.045 ns/op
Iteration   8: 109.692 ns/op
Iteration   9: 107.991 ns/op
Iteration  10: 98.318 ns/op

# Run progress: 43.82% complete, ETA 00:21:35
# Fork: 2 of 2
# Warmup Iteration   1: 235.305 ns/op
# Warmup Iteration   2: 148.777 ns/op
# Warmup Iteration   3: 98.835 ns/op
Iteration   1: 96.522 ns/op
Iteration   2: 110.137 ns/op
Iteration   3: 106.925 ns/op
Iteration   4: 98.385 ns/op
Iteration   5: 100.306 ns/op
Iteration   6: 110.643 ns/op
Iteration   7: 101.984 ns/op
Iteration   8: 108.874 ns/op
Iteration   9: 109.012 ns/op
Iteration  10: 98.655 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.977 ±(99.9%) 4.724 ns/op [Average]
  (min, avg, max) = (95.938, 103.977, 111.036), stdev = 5.440
  CI (99.9%): [99.253, 108.701] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 43.89% complete, ETA 00:21:33
# Fork: 1 of 2
# Warmup Iteration   1: 68.449 ns/op
# Warmup Iteration   2: 68.842 ns/op
# Warmup Iteration   3: 49.125 ns/op
Iteration   1: 47.858 ns/op
Iteration   2: 49.079 ns/op
Iteration   3: 47.856 ns/op
Iteration   4: 49.113 ns/op
Iteration   5: 47.896 ns/op
Iteration   6: 49.049 ns/op
Iteration   7: 47.839 ns/op
Iteration   8: 47.912 ns/op
Iteration   9: 47.866 ns/op
Iteration  10: 49.054 ns/op

# Run progress: 43.96% complete, ETA 00:21:32
# Fork: 2 of 2
# Warmup Iteration   1: 66.918 ns/op
# Warmup Iteration   2: 68.417 ns/op
# Warmup Iteration   3: 49.129 ns/op
Iteration   1: 47.856 ns/op
Iteration   2: 49.109 ns/op
Iteration   3: 47.860 ns/op
Iteration   4: 49.110 ns/op
Iteration   5: 47.900 ns/op
Iteration   6: 49.054 ns/op
Iteration   7: 47.862 ns/op
Iteration   8: 47.920 ns/op
Iteration   9: 47.855 ns/op
Iteration  10: 49.074 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.356 ±(99.9%) 0.527 ns/op [Average]
  (min, avg, max) = (47.839, 48.356, 49.113), stdev = 0.607
  CI (99.9%): [47.829, 48.883] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 44.03% complete, ETA 00:21:30
# Fork: 1 of 2
# Warmup Iteration   1: 178.941 ns/op
# Warmup Iteration   2: 193.651 ns/op
# Warmup Iteration   3: 97.924 ns/op
Iteration   1: 98.908 ns/op
Iteration   2: 97.969 ns/op
Iteration   3: 100.470 ns/op
Iteration   4: 106.426 ns/op
Iteration   5: 105.803 ns/op
Iteration   6: 104.781 ns/op
Iteration   7: 105.950 ns/op
Iteration   8: 106.128 ns/op
Iteration   9: 105.449 ns/op
Iteration  10: 104.724 ns/op

# Run progress: 44.10% complete, ETA 00:21:28
# Fork: 2 of 2
# Warmup Iteration   1: 205.384 ns/op
# Warmup Iteration   2: 196.050 ns/op
# Warmup Iteration   3: 100.963 ns/op
Iteration   1: 102.040 ns/op
Iteration   2: 100.984 ns/op
Iteration   3: 103.167 ns/op
Iteration   4: 108.659 ns/op
Iteration   5: 108.960 ns/op
Iteration   6: 107.776 ns/op
Iteration   7: 108.776 ns/op
Iteration   8: 109.121 ns/op
Iteration   9: 107.367 ns/op
Iteration  10: 107.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  105.052 ±(99.9%) 2.960 ns/op [Average]
  (min, avg, max) = (97.969, 105.052, 109.121), stdev = 3.408
  CI (99.9%): [102.092, 108.011] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 44.17% complete, ETA 00:21:27
# Fork: 1 of 2
# Warmup Iteration   1: 19.305 ns/op
# Warmup Iteration   2: 18.572 ns/op
# Warmup Iteration   3: 15.138 ns/op
Iteration   1: 17.007 ns/op
Iteration   2: 17.137 ns/op
Iteration   3: 17.035 ns/op
Iteration   4: 15.255 ns/op
Iteration   5: 17.023 ns/op
Iteration   6: 14.967 ns/op
Iteration   7: 17.038 ns/op
Iteration   8: 17.030 ns/op
Iteration   9: 17.035 ns/op
Iteration  10: 15.205 ns/op

# Run progress: 44.24% complete, ETA 00:21:25
# Fork: 2 of 2
# Warmup Iteration   1: 19.900 ns/op
# Warmup Iteration   2: 21.460 ns/op
# Warmup Iteration   3: 15.140 ns/op
Iteration   1: 17.007 ns/op
Iteration   2: 17.137 ns/op
Iteration   3: 17.034 ns/op
Iteration   4: 15.265 ns/op
Iteration   5: 17.021 ns/op
Iteration   6: 14.979 ns/op
Iteration   7: 17.037 ns/op
Iteration   8: 17.030 ns/op
Iteration   9: 17.040 ns/op
Iteration  10: 15.214 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.475 ±(99.9%) 0.777 ns/op [Average]
  (min, avg, max) = (14.967, 16.475, 17.137), stdev = 0.895
  CI (99.9%): [15.698, 17.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 44.31% complete, ETA 00:21:23
# Fork: 1 of 2
# Warmup Iteration   1: 83.645 ns/op
# Warmup Iteration   2: 79.039 ns/op
# Warmup Iteration   3: 57.856 ns/op
Iteration   1: 59.071 ns/op
Iteration   2: 57.902 ns/op
Iteration   3: 59.107 ns/op
Iteration   4: 58.686 ns/op
Iteration   5: 59.048 ns/op
Iteration   6: 57.821 ns/op
Iteration   7: 59.147 ns/op
Iteration   8: 59.116 ns/op
Iteration   9: 58.996 ns/op
Iteration  10: 57.913 ns/op

# Run progress: 44.38% complete, ETA 00:21:22
# Fork: 2 of 2
# Warmup Iteration   1: 85.246 ns/op
# Warmup Iteration   2: 83.581 ns/op
# Warmup Iteration   3: 58.080 ns/op
Iteration   1: 59.520 ns/op
Iteration   2: 58.115 ns/op
Iteration   3: 59.459 ns/op
Iteration   4: 58.755 ns/op
Iteration   5: 59.469 ns/op
Iteration   6: 58.080 ns/op
Iteration   7: 59.457 ns/op
Iteration   8: 59.464 ns/op
Iteration   9: 59.487 ns/op
Iteration  10: 58.119 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  58.837 ±(99.9%) 0.535 ns/op [Average]
  (min, avg, max) = (57.821, 58.837, 59.520), stdev = 0.617
  CI (99.9%): [58.301, 59.372] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 44.44% complete, ETA 00:21:20
# Fork: 1 of 2
# Warmup Iteration   1: 64.800 ns/op
# Warmup Iteration   2: 66.380 ns/op
# Warmup Iteration   3: 45.765 ns/op
Iteration   1: 44.522 ns/op
Iteration   2: 45.820 ns/op
Iteration   3: 44.400 ns/op
Iteration   4: 46.296 ns/op
Iteration   5: 44.416 ns/op
Iteration   6: 45.796 ns/op
Iteration   7: 44.424 ns/op
Iteration   8: 44.385 ns/op
Iteration   9: 44.397 ns/op
Iteration  10: 45.789 ns/op

# Run progress: 44.51% complete, ETA 00:21:19
# Fork: 2 of 2
# Warmup Iteration   1: 64.981 ns/op
# Warmup Iteration   2: 68.146 ns/op
# Warmup Iteration   3: 45.778 ns/op
Iteration   1: 44.505 ns/op
Iteration   2: 45.848 ns/op
Iteration   3: 44.396 ns/op
Iteration   4: 46.247 ns/op
Iteration   5: 44.668 ns/op
Iteration   6: 45.797 ns/op
Iteration   7: 44.377 ns/op
Iteration   8: 44.390 ns/op
Iteration   9: 44.381 ns/op
Iteration  10: 45.791 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.032 ±(99.9%) 0.661 ns/op [Average]
  (min, avg, max) = (44.377, 45.032, 46.296), stdev = 0.761
  CI (99.9%): [44.372, 45.693] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 44.58% complete, ETA 00:21:17
# Fork: 1 of 2
# Warmup Iteration   1: 251.067 ns/op
# Warmup Iteration   2: 96.312 ns/op
# Warmup Iteration   3: 71.238 ns/op
Iteration   1: 70.045 ns/op
Iteration   2: 73.154 ns/op
Iteration   3: 69.886 ns/op
Iteration   4: 71.401 ns/op
Iteration   5: 69.954 ns/op
Iteration   6: 71.267 ns/op
Iteration   7: 69.834 ns/op
Iteration   8: 70.051 ns/op
Iteration   9: 69.925 ns/op
Iteration  10: 71.123 ns/op

# Run progress: 44.65% complete, ETA 00:21:15
# Fork: 2 of 2
# Warmup Iteration   1: 1244.190 ns/op
# Warmup Iteration   2: 99.208 ns/op
# Warmup Iteration   3: 72.696 ns/op
Iteration   1: 71.412 ns/op
Iteration   2: 75.108 ns/op
Iteration   3: 71.434 ns/op
Iteration   4: 73.331 ns/op
Iteration   5: 71.459 ns/op
Iteration   6: 72.842 ns/op
Iteration   7: 71.475 ns/op
Iteration   8: 71.460 ns/op
Iteration   9: 71.479 ns/op
Iteration  10: 72.622 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.463 ±(99.9%) 1.209 ns/op [Average]
  (min, avg, max) = (69.834, 71.463, 75.108), stdev = 1.392
  CI (99.9%): [70.254, 72.672] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 44.72% complete, ETA 00:21:14
# Fork: 1 of 2
# Warmup Iteration   1: 66.877 ns/op
# Warmup Iteration   2: 68.548 ns/op
# Warmup Iteration   3: 49.127 ns/op
Iteration   1: 47.873 ns/op
Iteration   2: 49.070 ns/op
Iteration   3: 47.836 ns/op
Iteration   4: 49.083 ns/op
Iteration   5: 47.896 ns/op
Iteration   6: 49.036 ns/op
Iteration   7: 47.854 ns/op
Iteration   8: 47.887 ns/op
Iteration   9: 47.873 ns/op
Iteration  10: 49.117 ns/op

# Run progress: 44.79% complete, ETA 00:21:12
# Fork: 2 of 2
# Warmup Iteration   1: 67.805 ns/op
# Warmup Iteration   2: 69.036 ns/op
# Warmup Iteration   3: 49.105 ns/op
Iteration   1: 47.882 ns/op
Iteration   2: 49.089 ns/op
Iteration   3: 47.862 ns/op
Iteration   4: 49.124 ns/op
Iteration   5: 47.948 ns/op
Iteration   6: 49.042 ns/op
Iteration   7: 47.841 ns/op
Iteration   8: 47.904 ns/op
Iteration   9: 47.853 ns/op
Iteration  10: 49.099 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.359 ±(99.9%) 0.527 ns/op [Average]
  (min, avg, max) = (47.836, 48.359, 49.124), stdev = 0.607
  CI (99.9%): [47.831, 48.886] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 44.86% complete, ETA 00:21:11
# Fork: 1 of 2
# Warmup Iteration   1: 182.976 ns/op
# Warmup Iteration   2: 176.219 ns/op
# Warmup Iteration   3: 97.399 ns/op
Iteration   1: 99.012 ns/op
Iteration   2: 97.364 ns/op
Iteration   3: 98.923 ns/op
Iteration   4: 106.232 ns/op
Iteration   5: 105.584 ns/op
Iteration   6: 104.129 ns/op
Iteration   7: 105.669 ns/op
Iteration   8: 105.593 ns/op
Iteration   9: 105.764 ns/op
Iteration  10: 104.136 ns/op

# Run progress: 44.93% complete, ETA 00:21:09
# Fork: 2 of 2
# Warmup Iteration   1: 168.002 ns/op
# Warmup Iteration   2: 189.213 ns/op
# Warmup Iteration   3: 97.333 ns/op
Iteration   1: 99.059 ns/op
Iteration   2: 97.481 ns/op
Iteration   3: 99.050 ns/op
Iteration   4: 106.288 ns/op
Iteration   5: 105.588 ns/op
Iteration   6: 104.131 ns/op
Iteration   7: 105.715 ns/op
Iteration   8: 105.738 ns/op
Iteration   9: 105.653 ns/op
Iteration  10: 104.074 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.259 ±(99.9%) 2.870 ns/op [Average]
  (min, avg, max) = (97.364, 103.259, 106.288), stdev = 3.305
  CI (99.9%): [100.389, 106.129] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 45.00% complete, ETA 00:21:07
# Fork: 1 of 2
# Warmup Iteration   1: 19.861 ns/op
# Warmup Iteration   2: 22.131 ns/op
# Warmup Iteration   3: 15.153 ns/op
Iteration   1: 17.010 ns/op
Iteration   2: 17.069 ns/op
Iteration   3: 17.039 ns/op
Iteration   4: 15.274 ns/op
Iteration   5: 17.030 ns/op
Iteration   6: 14.956 ns/op
Iteration   7: 17.039 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.034 ns/op
Iteration  10: 15.195 ns/op

# Run progress: 45.07% complete, ETA 00:21:06
# Fork: 2 of 2
# Warmup Iteration   1: 19.354 ns/op
# Warmup Iteration   2: 22.628 ns/op
# Warmup Iteration   3: 15.157 ns/op
Iteration   1: 17.009 ns/op
Iteration   2: 17.126 ns/op
Iteration   3: 17.037 ns/op
Iteration   4: 15.288 ns/op
Iteration   5: 17.024 ns/op
Iteration   6: 14.961 ns/op
Iteration   7: 17.036 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.040 ns/op
Iteration  10: 15.204 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.470 ±(99.9%) 0.775 ns/op [Average]
  (min, avg, max) = (14.956, 16.470, 17.126), stdev = 0.893
  CI (99.9%): [15.695, 17.245] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 45.14% complete, ETA 00:21:04
# Fork: 1 of 2
# Warmup Iteration   1: 164.306 ns/op
# Warmup Iteration   2: 131.832 ns/op
# Warmup Iteration   3: 90.598 ns/op
Iteration   1: 92.303 ns/op
Iteration   2: 90.723 ns/op
Iteration   3: 91.985 ns/op
Iteration   4: 91.200 ns/op
Iteration   5: 92.048 ns/op
Iteration   6: 90.732 ns/op
Iteration   7: 92.004 ns/op
Iteration   8: 92.159 ns/op
Iteration   9: 92.055 ns/op
Iteration  10: 90.593 ns/op

# Run progress: 45.21% complete, ETA 00:21:03
# Fork: 2 of 2
# Warmup Iteration   1: 168.193 ns/op
# Warmup Iteration   2: 127.574 ns/op
# Warmup Iteration   3: 90.596 ns/op
Iteration   1: 92.177 ns/op
Iteration   2: 90.731 ns/op
Iteration   3: 92.081 ns/op
Iteration   4: 91.029 ns/op
Iteration   5: 92.369 ns/op
Iteration   6: 90.740 ns/op
Iteration   7: 92.094 ns/op
Iteration   8: 92.179 ns/op
Iteration   9: 92.066 ns/op
Iteration  10: 90.442 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.586 ±(99.9%) 0.609 ns/op [Average]
  (min, avg, max) = (90.442, 91.586, 92.369), stdev = 0.701
  CI (99.9%): [90.977, 92.194] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 45.28% complete, ETA 00:21:01
# Fork: 1 of 2
# Warmup Iteration   1: 64.848 ns/op
# Warmup Iteration   2: 61.068 ns/op
# Warmup Iteration   3: 45.774 ns/op
Iteration   1: 44.519 ns/op
Iteration   2: 45.809 ns/op
Iteration   3: 44.375 ns/op
Iteration   4: 46.254 ns/op
Iteration   5: 44.364 ns/op
Iteration   6: 45.836 ns/op
Iteration   7: 44.388 ns/op
Iteration   8: 44.420 ns/op
Iteration   9: 44.386 ns/op
Iteration  10: 45.782 ns/op

# Run progress: 45.35% complete, ETA 00:20:59
# Fork: 2 of 2
# Warmup Iteration   1: 63.950 ns/op
# Warmup Iteration   2: 68.568 ns/op
# Warmup Iteration   3: 45.822 ns/op
Iteration   1: 44.509 ns/op
Iteration   2: 45.777 ns/op
Iteration   3: 44.359 ns/op
Iteration   4: 46.228 ns/op
Iteration   5: 44.362 ns/op
Iteration   6: 45.787 ns/op
Iteration   7: 44.379 ns/op
Iteration   8: 44.381 ns/op
Iteration   9: 44.404 ns/op
Iteration  10: 45.808 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.006 ±(99.9%) 0.667 ns/op [Average]
  (min, avg, max) = (44.359, 45.006, 46.254), stdev = 0.768
  CI (99.9%): [44.339, 45.674] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 45.42% complete, ETA 00:20:58
# Fork: 1 of 2
# Warmup Iteration   1: 255.886 ns/op
# Warmup Iteration   2: 140.503 ns/op
# Warmup Iteration   3: 106.956 ns/op
Iteration   1: 105.410 ns/op
Iteration   2: 107.171 ns/op
Iteration   3: 105.497 ns/op
Iteration   4: 107.342 ns/op
Iteration   5: 105.443 ns/op
Iteration   6: 106.920 ns/op
Iteration   7: 105.526 ns/op
Iteration   8: 105.386 ns/op
Iteration   9: 105.555 ns/op
Iteration  10: 106.719 ns/op

# Run progress: 45.49% complete, ETA 00:20:56
# Fork: 2 of 2
# Warmup Iteration   1: 319.876 ns/op
# Warmup Iteration   2: 174.388 ns/op
# Warmup Iteration   3: 109.269 ns/op
Iteration   1: 108.346 ns/op
Iteration   2: 109.485 ns/op
Iteration   3: 108.058 ns/op
Iteration   4: 109.483 ns/op
Iteration   5: 107.807 ns/op
Iteration   6: 109.540 ns/op
Iteration   7: 107.752 ns/op
Iteration   8: 108.296 ns/op
Iteration   9: 107.977 ns/op
Iteration  10: 109.129 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  107.342 ±(99.9%) 1.292 ns/op [Average]
  (min, avg, max) = (105.386, 107.342, 109.540), stdev = 1.488
  CI (99.9%): [106.050, 108.634] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 45.56% complete, ETA 00:20:55
# Fork: 1 of 2
# Warmup Iteration   1: 67.439 ns/op
# Warmup Iteration   2: 73.644 ns/op
# Warmup Iteration   3: 49.132 ns/op
Iteration   1: 47.885 ns/op
Iteration   2: 49.082 ns/op
Iteration   3: 47.882 ns/op
Iteration   4: 49.105 ns/op
Iteration   5: 47.900 ns/op
Iteration   6: 49.062 ns/op
Iteration   7: 47.862 ns/op
Iteration   8: 47.918 ns/op
Iteration   9: 47.849 ns/op
Iteration  10: 49.123 ns/op

# Run progress: 45.63% complete, ETA 00:20:53
# Fork: 2 of 2
# Warmup Iteration   1: 67.142 ns/op
# Warmup Iteration   2: 68.902 ns/op
# Warmup Iteration   3: 49.113 ns/op
Iteration   1: 47.871 ns/op
Iteration   2: 49.122 ns/op
Iteration   3: 47.856 ns/op
Iteration   4: 49.106 ns/op
Iteration   5: 47.890 ns/op
Iteration   6: 49.050 ns/op
Iteration   7: 47.845 ns/op
Iteration   8: 47.898 ns/op
Iteration   9: 47.862 ns/op
Iteration  10: 49.108 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.364 ±(99.9%) 0.532 ns/op [Average]
  (min, avg, max) = (47.845, 48.364, 49.123), stdev = 0.613
  CI (99.9%): [47.832, 48.896] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 45.69% complete, ETA 00:20:51
# Fork: 1 of 2
# Warmup Iteration   1: 167.415 ns/op
# Warmup Iteration   2: 174.793 ns/op
# Warmup Iteration   3: 97.322 ns/op
Iteration   1: 98.981 ns/op
Iteration   2: 97.402 ns/op
Iteration   3: 99.027 ns/op
Iteration   4: 106.180 ns/op
Iteration   5: 105.538 ns/op
Iteration   6: 104.047 ns/op
Iteration   7: 105.547 ns/op
Iteration   8: 105.581 ns/op
Iteration   9: 105.637 ns/op
Iteration  10: 104.195 ns/op

# Run progress: 45.76% complete, ETA 00:20:50
# Fork: 2 of 2
# Warmup Iteration   1: 167.724 ns/op
# Warmup Iteration   2: 191.991 ns/op
# Warmup Iteration   3: 97.430 ns/op
Iteration   1: 98.946 ns/op
Iteration   2: 97.517 ns/op
Iteration   3: 98.969 ns/op
Iteration   4: 106.296 ns/op
Iteration   5: 105.577 ns/op
Iteration   6: 104.049 ns/op
Iteration   7: 105.536 ns/op
Iteration   8: 105.551 ns/op
Iteration   9: 105.755 ns/op
Iteration  10: 104.128 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.223 ±(99.9%) 2.850 ns/op [Average]
  (min, avg, max) = (97.402, 103.223, 106.296), stdev = 3.282
  CI (99.9%): [100.373, 106.072] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 45.83% complete, ETA 00:20:48
# Fork: 1 of 2
# Warmup Iteration   1: 19.718 ns/op
# Warmup Iteration   2: 22.939 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.054 ns/op
Iteration   2: 15.280 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.115 ns/op
Iteration   6: 15.392 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.023 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.969 ns/op

# Run progress: 45.90% complete, ETA 00:20:47
# Fork: 2 of 2
# Warmup Iteration   1: 19.325 ns/op
# Warmup Iteration   2: 20.948 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.302 ns/op
Iteration   3: 17.014 ns/op
Iteration   4: 15.015 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.014 ns/op
Iteration   8: 17.026 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 14.973 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.969, 16.292, 17.115), stdev = 0.949
  CI (99.9%): [15.468, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 45.97% complete, ETA 00:20:45
# Fork: 1 of 2
# Warmup Iteration   1: 1147.687 ns/op
# Warmup Iteration   2: 434.736 ns/op
# Warmup Iteration   3: 305.288 ns/op
Iteration   1: 305.927 ns/op
Iteration   2: 305.578 ns/op
Iteration   3: 306.159 ns/op
Iteration   4: 309.087 ns/op
Iteration   5: 305.652 ns/op
Iteration   6: 304.769 ns/op
Iteration   7: 306.167 ns/op
Iteration   8: 305.933 ns/op
Iteration   9: 306.211 ns/op
Iteration  10: 305.166 ns/op

# Run progress: 46.04% complete, ETA 00:20:43
# Fork: 2 of 2
# Warmup Iteration   1: 1431.729 ns/op
# Warmup Iteration   2: 429.446 ns/op
# Warmup Iteration   3: 306.277 ns/op
Iteration   1: 307.255 ns/op
Iteration   2: 306.529 ns/op
Iteration   3: 307.466 ns/op
Iteration   4: 310.065 ns/op
Iteration   5: 307.427 ns/op
Iteration   6: 306.445 ns/op
Iteration   7: 307.504 ns/op
Iteration   8: 307.586 ns/op
Iteration   9: 307.657 ns/op
Iteration  10: 306.299 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  306.744 ±(99.9%) 1.117 ns/op [Average]
  (min, avg, max) = (304.769, 306.744, 310.065), stdev = 1.287
  CI (99.9%): [305.627, 307.861] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 46.11% complete, ETA 00:20:42
# Fork: 1 of 2
# Warmup Iteration   1: 490.809 ns/op
# Warmup Iteration   2: 502.434 ns/op
# Warmup Iteration   3: 341.407 ns/op
Iteration   1: 340.170 ns/op
Iteration   2: 341.098 ns/op
Iteration   3: 340.148 ns/op
Iteration   4: 341.790 ns/op
Iteration   5: 340.276 ns/op
Iteration   6: 341.389 ns/op
Iteration   7: 340.172 ns/op
Iteration   8: 340.091 ns/op
Iteration   9: 340.219 ns/op
Iteration  10: 341.391 ns/op

# Run progress: 46.18% complete, ETA 00:20:40
# Fork: 2 of 2
# Warmup Iteration   1: 522.126 ns/op
# Warmup Iteration   2: 442.838 ns/op
# Warmup Iteration   3: 341.348 ns/op
Iteration   1: 340.094 ns/op
Iteration   2: 341.348 ns/op
Iteration   3: 340.188 ns/op
Iteration   4: 341.935 ns/op
Iteration   5: 340.383 ns/op
Iteration   6: 341.320 ns/op
Iteration   7: 340.389 ns/op
Iteration   8: 340.206 ns/op
Iteration   9: 340.266 ns/op
Iteration  10: 341.390 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  340.713 ±(99.9%) 0.564 ns/op [Average]
  (min, avg, max) = (340.091, 340.713, 341.935), stdev = 0.649
  CI (99.9%): [340.149, 341.277] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 46.25% complete, ETA 00:20:39
# Fork: 1 of 2
# Warmup Iteration   1: 7091.565 ns/op
# Warmup Iteration   2: 514.587 ns/op
# Warmup Iteration   3: 322.650 ns/op
Iteration   1: 321.405 ns/op
Iteration   2: 322.605 ns/op
Iteration   3: 321.764 ns/op
Iteration   4: 323.960 ns/op
Iteration   5: 338.156 ns/op
Iteration   6: 322.374 ns/op
Iteration   7: 321.548 ns/op
Iteration   8: 321.535 ns/op
Iteration   9: 321.509 ns/op
Iteration  10: 322.777 ns/op

# Run progress: 46.32% complete, ETA 00:20:37
# Fork: 2 of 2
# Warmup Iteration   1: 7746.818 ns/op
# Warmup Iteration   2: 494.930 ns/op
# Warmup Iteration   3: 311.167 ns/op
Iteration   1: 309.772 ns/op
Iteration   2: 312.228 ns/op
Iteration   3: 309.823 ns/op
Iteration   4: 313.548 ns/op
Iteration   5: 309.777 ns/op
Iteration   6: 310.869 ns/op
Iteration   7: 309.699 ns/op
Iteration   8: 309.584 ns/op
Iteration   9: 309.881 ns/op
Iteration  10: 311.217 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  317.202 ±(99.9%) 6.647 ns/op [Average]
  (min, avg, max) = (309.584, 317.202, 338.156), stdev = 7.654
  CI (99.9%): [310.555, 323.848] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 46.39% complete, ETA 00:20:35
# Fork: 1 of 2
# Warmup Iteration   1: 433.119 ns/op
# Warmup Iteration   2: 336.461 ns/op
# Warmup Iteration   3: 264.052 ns/op
Iteration   1: 265.068 ns/op
Iteration   2: 263.795 ns/op
Iteration   3: 262.168 ns/op
Iteration   4: 263.907 ns/op
Iteration   5: 261.780 ns/op
Iteration   6: 264.357 ns/op
Iteration   7: 262.197 ns/op
Iteration   8: 262.228 ns/op
Iteration   9: 262.219 ns/op
Iteration  10: 263.683 ns/op

# Run progress: 46.46% complete, ETA 00:20:34
# Fork: 2 of 2
# Warmup Iteration   1: 388.752 ns/op
# Warmup Iteration   2: 339.706 ns/op
# Warmup Iteration   3: 264.058 ns/op
Iteration   1: 265.037 ns/op
Iteration   2: 263.702 ns/op
Iteration   3: 262.101 ns/op
Iteration   4: 263.960 ns/op
Iteration   5: 261.798 ns/op
Iteration   6: 263.936 ns/op
Iteration   7: 262.102 ns/op
Iteration   8: 262.077 ns/op
Iteration   9: 262.159 ns/op
Iteration  10: 263.597 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  263.094 ±(99.9%) 0.962 ns/op [Average]
  (min, avg, max) = (261.780, 263.094, 265.068), stdev = 1.108
  CI (99.9%): [262.132, 264.055] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 46.53% complete, ETA 00:20:32
# Fork: 1 of 2
# Warmup Iteration   1: 1356.319 ns/op
# Warmup Iteration   2: 581.680 ns/op
# Warmup Iteration   3: 440.523 ns/op
Iteration   1: 444.951 ns/op
Iteration   2: 440.899 ns/op
Iteration   3: 442.065 ns/op
Iteration   4: 464.064 ns/op
Iteration   5: 461.288 ns/op
Iteration   6: 459.469 ns/op
Iteration   7: 461.224 ns/op
Iteration   8: 461.103 ns/op
Iteration   9: 461.270 ns/op
Iteration  10: 459.645 ns/op

# Run progress: 46.60% complete, ETA 00:20:31
# Fork: 2 of 2
# Warmup Iteration   1: 976.057 ns/op
# Warmup Iteration   2: 617.237 ns/op
# Warmup Iteration   3: 440.554 ns/op
Iteration   1: 444.795 ns/op
Iteration   2: 440.557 ns/op
Iteration   3: 441.977 ns/op
Iteration   4: 464.392 ns/op
Iteration   5: 460.991 ns/op
Iteration   6: 460.001 ns/op
Iteration   7: 461.114 ns/op
Iteration   8: 461.278 ns/op
Iteration   9: 461.216 ns/op
Iteration  10: 459.612 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  455.596 ±(99.9%) 7.733 ns/op [Average]
  (min, avg, max) = (440.557, 455.596, 464.392), stdev = 8.905
  CI (99.9%): [447.863, 463.328] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 46.67% complete, ETA 00:20:29
# Fork: 1 of 2
# Warmup Iteration   1: 19.860 ns/op
# Warmup Iteration   2: 22.963 ns/op
# Warmup Iteration   3: 15.034 ns/op
Iteration   1: 17.064 ns/op
Iteration   2: 15.286 ns/op
Iteration   3: 17.021 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.395 ns/op
Iteration   7: 17.008 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.970 ns/op

# Run progress: 46.74% complete, ETA 00:20:27
# Fork: 2 of 2
# Warmup Iteration   1: 19.721 ns/op
# Warmup Iteration   2: 21.040 ns/op
# Warmup Iteration   3: 15.039 ns/op
Iteration   1: 17.068 ns/op
Iteration   2: 15.245 ns/op
Iteration   3: 17.003 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.383 ns/op
Iteration   7: 17.005 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.010 ns/op
Iteration  10: 14.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.961, 16.287, 17.110), stdev = 0.951
  CI (99.9%): [15.461, 17.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 46.81% complete, ETA 00:20:26
# Fork: 1 of 2
# Warmup Iteration   1: 635.654 ns/op
# Warmup Iteration   2: 431.175 ns/op
# Warmup Iteration   3: 308.536 ns/op
Iteration   1: 309.798 ns/op
Iteration   2: 306.965 ns/op
Iteration   3: 309.815 ns/op
Iteration   4: 319.332 ns/op
Iteration   5: 311.013 ns/op
Iteration   6: 306.929 ns/op
Iteration   7: 310.070 ns/op
Iteration   8: 310.467 ns/op
Iteration   9: 309.868 ns/op
Iteration  10: 308.473 ns/op

# Run progress: 46.88% complete, ETA 00:20:24
# Fork: 2 of 2
# Warmup Iteration   1: 636.048 ns/op
# Warmup Iteration   2: 437.554 ns/op
# Warmup Iteration   3: 307.837 ns/op
Iteration   1: 309.819 ns/op
Iteration   2: 307.705 ns/op
Iteration   3: 310.611 ns/op
Iteration   4: 320.207 ns/op
Iteration   5: 310.537 ns/op
Iteration   6: 307.220 ns/op
Iteration   7: 310.268 ns/op
Iteration   8: 309.763 ns/op
Iteration   9: 309.559 ns/op
Iteration  10: 307.871 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  310.315 ±(99.9%) 3.022 ns/op [Average]
  (min, avg, max) = (306.929, 310.315, 320.207), stdev = 3.480
  CI (99.9%): [307.292, 313.337] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 46.94% complete, ETA 00:20:23
# Fork: 1 of 2
# Warmup Iteration   1: 535.927 ns/op
# Warmup Iteration   2: 527.464 ns/op
# Warmup Iteration   3: 371.130 ns/op
Iteration   1: 369.185 ns/op
Iteration   2: 370.780 ns/op
Iteration   3: 369.368 ns/op
Iteration   4: 371.915 ns/op
Iteration   5: 369.309 ns/op
Iteration   6: 370.761 ns/op
Iteration   7: 369.304 ns/op
Iteration   8: 369.405 ns/op
Iteration   9: 369.351 ns/op
Iteration  10: 370.390 ns/op

# Run progress: 47.01% complete, ETA 00:20:21
# Fork: 2 of 2
# Warmup Iteration   1: 543.127 ns/op
# Warmup Iteration   2: 581.035 ns/op
# Warmup Iteration   3: 376.489 ns/op
Iteration   1: 375.185 ns/op
Iteration   2: 376.709 ns/op
Iteration   3: 375.258 ns/op
Iteration   4: 377.109 ns/op
Iteration   5: 374.751 ns/op
Iteration   6: 376.659 ns/op
Iteration   7: 375.166 ns/op
Iteration   8: 375.050 ns/op
Iteration   9: 375.169 ns/op
Iteration  10: 376.666 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  372.875 ±(99.9%) 2.694 ns/op [Average]
  (min, avg, max) = (369.185, 372.875, 377.109), stdev = 3.103
  CI (99.9%): [370.180, 375.569] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 47.08% complete, ETA 00:20:19
# Fork: 1 of 2
# Warmup Iteration   1: 1317.968 ns/op
# Warmup Iteration   2: 371.668 ns/op
# Warmup Iteration   3: 280.608 ns/op
Iteration   1: 301.983 ns/op
Iteration   2: 286.320 ns/op
Iteration   3: 303.353 ns/op
Iteration   4: 301.198 ns/op
Iteration   5: 299.016 ns/op
Iteration   6: 304.600 ns/op
Iteration   7: 304.115 ns/op
Iteration   8: 302.279 ns/op
Iteration   9: 283.011 ns/op
Iteration  10: 300.977 ns/op

# Run progress: 47.15% complete, ETA 00:20:18
# Fork: 2 of 2
# Warmup Iteration   1: 1022.964 ns/op
# Warmup Iteration   2: 393.813 ns/op
# Warmup Iteration   3: 279.946 ns/op
Iteration   1: 282.909 ns/op
Iteration   2: 294.984 ns/op
Iteration   3: 293.155 ns/op
Iteration   4: 294.584 ns/op
Iteration   5: 278.987 ns/op
Iteration   6: 283.073 ns/op
Iteration   7: 278.798 ns/op
Iteration   8: 292.541 ns/op
Iteration   9: 292.399 ns/op
Iteration  10: 290.929 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  293.461 ±(99.9%) 7.583 ns/op [Average]
  (min, avg, max) = (278.798, 293.461, 304.600), stdev = 8.733
  CI (99.9%): [285.877, 301.044] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 47.22% complete, ETA 00:20:16
# Fork: 1 of 2
# Warmup Iteration   1: 551.785 ns/op
# Warmup Iteration   2: 389.925 ns/op
# Warmup Iteration   3: 307.684 ns/op
Iteration   1: 306.221 ns/op
Iteration   2: 308.028 ns/op
Iteration   3: 306.193 ns/op
Iteration   4: 319.421 ns/op
Iteration   5: 306.225 ns/op
Iteration   6: 319.760 ns/op
Iteration   7: 306.186 ns/op
Iteration   8: 306.158 ns/op
Iteration   9: 306.299 ns/op
Iteration  10: 307.587 ns/op

# Run progress: 47.29% complete, ETA 00:20:15
# Fork: 2 of 2
# Warmup Iteration   1: 484.562 ns/op
# Warmup Iteration   2: 400.387 ns/op
# Warmup Iteration   3: 308.236 ns/op
Iteration   1: 306.505 ns/op
Iteration   2: 309.297 ns/op
Iteration   3: 306.692 ns/op
Iteration   4: 308.667 ns/op
Iteration   5: 306.477 ns/op
Iteration   6: 308.232 ns/op
Iteration   7: 306.639 ns/op
Iteration   8: 306.886 ns/op
Iteration   9: 306.710 ns/op
Iteration  10: 307.808 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  308.300 ±(99.9%) 3.448 ns/op [Average]
  (min, avg, max) = (306.158, 308.300, 319.760), stdev = 3.970
  CI (99.9%): [304.852, 311.747] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 47.36% complete, ETA 00:20:13
# Fork: 1 of 2
# Warmup Iteration   1: 2844.113 ns/op
# Warmup Iteration   2: 2105.381 ns/op
# Warmup Iteration   3: 1525.119 ns/op
Iteration   1: 1526.650 ns/op
Iteration   2: 1524.459 ns/op
Iteration   3: 1521.517 ns/op
Iteration   4: 1540.226 ns/op
Iteration   5: 1536.322 ns/op
Iteration   6: 1536.777 ns/op
Iteration   7: 1536.541 ns/op
Iteration   8: 1537.061 ns/op
Iteration   9: 1536.874 ns/op
Iteration  10: 1533.087 ns/op

# Run progress: 47.43% complete, ETA 00:20:11
# Fork: 2 of 2
# Warmup Iteration   1: 3255.932 ns/op
# Warmup Iteration   2: 2011.255 ns/op
# Warmup Iteration   3: 1536.914 ns/op
Iteration   1: 1524.529 ns/op
Iteration   2: 1532.889 ns/op
Iteration   3: 1525.446 ns/op
Iteration   4: 1554.776 ns/op
Iteration   5: 1536.725 ns/op
Iteration   6: 1543.255 ns/op
Iteration   7: 1537.333 ns/op
Iteration   8: 1536.408 ns/op
Iteration   9: 1539.919 ns/op
Iteration  10: 1543.135 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1535.196 ±(99.9%) 6.824 ns/op [Average]
  (min, avg, max) = (1521.517, 1535.196, 1554.776), stdev = 7.858
  CI (99.9%): [1528.373, 1542.020] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 47.50% complete, ETA 00:20:10
# Fork: 1 of 2
# Warmup Iteration   1: 19.284 ns/op
# Warmup Iteration   2: 22.351 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.264 ns/op
Iteration   3: 17.038 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.112 ns/op
Iteration   6: 15.376 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.969 ns/op

# Run progress: 47.57% complete, ETA 00:20:08
# Fork: 2 of 2
# Warmup Iteration   1: 19.350 ns/op
# Warmup Iteration   2: 22.823 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.078 ns/op
Iteration   2: 15.249 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.019 ns/op
Iteration   5: 17.102 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.967 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.829 ns/op [Average]
  (min, avg, max) = (14.967, 16.290, 17.112), stdev = 0.955
  CI (99.9%): [15.461, 17.120] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 47.64% complete, ETA 00:20:06
# Fork: 1 of 2
# Warmup Iteration   1: 695.283 ns/op
# Warmup Iteration   2: 1407.607 ns/op
# Warmup Iteration   3: 436.451 ns/op
Iteration   1: 290.993 ns/op
Iteration   2: 14191.620 ns/op
Iteration   3: 20146.311 ns/op
Iteration   4: 17155.392 ns/op
Iteration   5: 20169.073 ns/op
Iteration   6: 288.714 ns/op
Iteration   7: 291.419 ns/op
Iteration   8: 286.336 ns/op
Iteration   9: 264.294 ns/op
Iteration  10: 244.583 ns/op

# Run progress: 47.71% complete, ETA 00:20:05
# Fork: 2 of 2
# Warmup Iteration   1: 570.540 ns/op
# Warmup Iteration   2: 2206.378 ns/op
# Warmup Iteration   3: 394.765 ns/op
Iteration   1: 293.351 ns/op
Iteration   2: 2481.999 ns/op
Iteration   3: 18093.475 ns/op
Iteration   4: 19397.549 ns/op
Iteration   5: 19691.274 ns/op
Iteration   6: 279.195 ns/op
Iteration   7: 289.556 ns/op
Iteration   8: 285.623 ns/op
Iteration   9: 265.643 ns/op
Iteration  10: 241.722 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6732.406 ±(99.9%) 7716.413 ns/op [Average]
  (min, avg, max) = (241.722, 6732.406, 20169.073), stdev = 8886.233
  CI (99.9%): [≈ 0, 14448.819] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 47.78% complete, ETA 00:20:03
# Fork: 1 of 2
# Warmup Iteration   1: 523.673 ns/op
# Warmup Iteration   2: 592.654 ns/op
# Warmup Iteration   3: 351.654 ns/op
Iteration   1: 399.807 ns/op
Iteration   2: 384.480 ns/op
Iteration   3: 398.225 ns/op
Iteration   4: 371.849 ns/op
Iteration   5: 387.987 ns/op
Iteration   6: 385.004 ns/op
Iteration   7: 378.337 ns/op
Iteration   8: 373.472 ns/op
Iteration   9: 384.531 ns/op
Iteration  10: 351.423 ns/op

# Run progress: 47.85% complete, ETA 00:20:02
# Fork: 2 of 2
# Warmup Iteration   1: 529.037 ns/op
# Warmup Iteration   2: 483.556 ns/op
# Warmup Iteration   3: 350.584 ns/op
Iteration   1: 396.624 ns/op
Iteration   2: 379.602 ns/op
Iteration   3: 395.260 ns/op
Iteration   4: 371.049 ns/op
Iteration   5: 382.237 ns/op
Iteration   6: 378.626 ns/op
Iteration   7: 376.115 ns/op
Iteration   8: 369.571 ns/op
Iteration   9: 382.857 ns/op
Iteration  10: 347.631 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  379.734 ±(99.9%) 11.882 ns/op [Average]
  (min, avg, max) = (347.631, 379.734, 399.807), stdev = 13.683
  CI (99.9%): [367.853, 391.616] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 47.92% complete, ETA 00:20:00
# Fork: 1 of 2
# Warmup Iteration   1: 1847.948 ns/op
# Warmup Iteration   2: 746.532 ns/op
# Warmup Iteration   3: 442.729 ns/op
Iteration   1: 264.008 ns/op
Iteration   2: 502.018 ns/op
Iteration   3: 715.009 ns/op
Iteration   4: 321.328 ns/op
Iteration   5: 232.814 ns/op
Iteration   6: 601.446 ns/op
Iteration   7: 284.650 ns/op
Iteration   8: 239.914 ns/op
Iteration   9: 270.188 ns/op
Iteration  10: 310.707 ns/op

# Run progress: 47.99% complete, ETA 00:19:58
# Fork: 2 of 2
# Warmup Iteration   1: 2932.121 ns/op
# Warmup Iteration   2: 1322.654 ns/op
# Warmup Iteration   3: 491.025 ns/op
Iteration   1: 264.769 ns/op
Iteration   2: 635.091 ns/op
Iteration   3: 837.278 ns/op
Iteration   4: 321.625 ns/op
Iteration   5: 236.715 ns/op
Iteration   6: 423.724 ns/op
Iteration   7: 276.331 ns/op
Iteration   8: 231.634 ns/op
Iteration   9: 265.247 ns/op
Iteration  10: 307.980 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  377.124 ±(99.9%) 157.436 ns/op [Average]
  (min, avg, max) = (231.634, 377.124, 837.278), stdev = 181.303
  CI (99.9%): [219.688, 534.559] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 48.06% complete, ETA 00:19:57
# Fork: 1 of 2
# Warmup Iteration   1: 523.907 ns/op
# Warmup Iteration   2: 404.412 ns/op
# Warmup Iteration   3: 292.798 ns/op
Iteration   1: 680.270 ns/op
Iteration   2: 300.436 ns/op
Iteration   3: 310.635 ns/op
Iteration   4: 883.966 ns/op
Iteration   5: 324.734 ns/op
Iteration   6: 908.918 ns/op
Iteration   7: 333.720 ns/op
Iteration   8: 302.826 ns/op
Iteration   9: 320.742 ns/op
Iteration  10: 299.539 ns/op

# Run progress: 48.13% complete, ETA 00:19:55
# Fork: 2 of 2
# Warmup Iteration   1: 462.021 ns/op
# Warmup Iteration   2: 410.644 ns/op
# Warmup Iteration   3: 294.829 ns/op
Iteration   1: 899.861 ns/op
Iteration   2: 290.260 ns/op
Iteration   3: 302.317 ns/op
Iteration   4: 1106.299 ns/op
Iteration   5: 325.251 ns/op
Iteration   6: 23829.739 ns/op
Iteration   7: 328.592 ns/op
Iteration   8: 304.791 ns/op
Iteration   9: 324.095 ns/op
Iteration  10: 297.416 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1633.720 ±(99.9%) 4542.542 ns/op [Average]
  (min, avg, max) = (290.260, 1633.720, 23829.739), stdev = 5231.198
  CI (99.9%): [≈ 0, 6176.262] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 48.19% complete, ETA 00:19:54
# Fork: 1 of 2
# Warmup Iteration   1: 3151.587 ns/op
# Warmup Iteration   2: 2076.792 ns/op
# Warmup Iteration   3: 1510.312 ns/op
Iteration   1: 1603.253 ns/op
Iteration   2: 1572.832 ns/op
Iteration   3: 1588.959 ns/op
Iteration   4: 1542.674 ns/op
Iteration   5: 2509.223 ns/op
Iteration   6: 1575.416 ns/op
Iteration   7: 1577.001 ns/op
Iteration   8: 1559.185 ns/op
Iteration   9: 1588.318 ns/op
Iteration  10: 1520.508 ns/op

# Run progress: 48.26% complete, ETA 00:19:52
# Fork: 2 of 2
# Warmup Iteration   1: 3180.232 ns/op
# Warmup Iteration   2: 2164.642 ns/op
# Warmup Iteration   3: 1508.899 ns/op
Iteration   1: 1609.741 ns/op
Iteration   2: 1570.233 ns/op
Iteration   3: 1607.525 ns/op
Iteration   4: 1545.963 ns/op
Iteration   5: 3200.296 ns/op
Iteration   6: 1574.000 ns/op
Iteration   7: 1556.178 ns/op
Iteration   8: 1559.008 ns/op
Iteration   9: 1585.806 ns/op
Iteration  10: 1520.518 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1698.332 ±(99.9%) 357.612 ns/op [Average]
  (min, avg, max) = (1520.508, 1698.332, 3200.296), stdev = 411.826
  CI (99.9%): [1340.720, 2055.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 48.33% complete, ETA 00:19:50
# Fork: 1 of 2
# Warmup Iteration   1: 19.438 ns/op
# Warmup Iteration   2: 22.882 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.062 ns/op
Iteration   2: 15.289 ns/op
Iteration   3: 17.027 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.383 ns/op
Iteration   7: 17.013 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.987 ns/op

# Run progress: 48.40% complete, ETA 00:19:49
# Fork: 2 of 2
# Warmup Iteration   1: 19.497 ns/op
# Warmup Iteration   2: 22.333 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.223 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.401 ns/op
Iteration   7: 17.013 ns/op
Iteration   8: 17.028 ns/op
Iteration   9: 17.014 ns/op
Iteration  10: 14.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.961, 16.290, 17.111), stdev = 0.952
  CI (99.9%): [15.463, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 48.47% complete, ETA 00:19:47
# Fork: 1 of 2
# Warmup Iteration   1: 696.105 ns/op
# Warmup Iteration   2: 317.335 ns/op
# Warmup Iteration   3: 235.900 ns/op
Iteration   1: 237.382 ns/op
Iteration   2: 236.949 ns/op
Iteration   3: 237.278 ns/op
Iteration   4: 235.166 ns/op
Iteration   5: 237.729 ns/op
Iteration   6: 235.864 ns/op
Iteration   7: 237.894 ns/op
Iteration   8: 238.029 ns/op
Iteration   9: 237.309 ns/op
Iteration  10: 236.470 ns/op

# Run progress: 48.54% complete, ETA 00:19:46
# Fork: 2 of 2
# Warmup Iteration   1: 588.933 ns/op
# Warmup Iteration   2: 325.936 ns/op
# Warmup Iteration   3: 241.983 ns/op
Iteration   1: 239.189 ns/op
Iteration   2: 241.858 ns/op
Iteration   3: 239.413 ns/op
Iteration   4: 240.488 ns/op
Iteration   5: 239.384 ns/op
Iteration   6: 241.898 ns/op
Iteration   7: 239.231 ns/op
Iteration   8: 239.419 ns/op
Iteration   9: 239.375 ns/op
Iteration  10: 241.000 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  238.566 ±(99.9%) 1.632 ns/op [Average]
  (min, avg, max) = (235.166, 238.566, 241.898), stdev = 1.879
  CI (99.9%): [236.934, 240.198] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 48.61% complete, ETA 00:19:44
# Fork: 1 of 2
# Warmup Iteration   1: 471.300 ns/op
# Warmup Iteration   2: 477.218 ns/op
# Warmup Iteration   3: 321.753 ns/op
Iteration   1: 320.741 ns/op
Iteration   2: 321.878 ns/op
Iteration   3: 320.341 ns/op
Iteration   4: 322.747 ns/op
Iteration   5: 320.678 ns/op
Iteration   6: 321.733 ns/op
Iteration   7: 320.361 ns/op
Iteration   8: 320.436 ns/op
Iteration   9: 320.373 ns/op
Iteration  10: 321.862 ns/op

# Run progress: 48.68% complete, ETA 00:19:42
# Fork: 2 of 2
# Warmup Iteration   1: 471.647 ns/op
# Warmup Iteration   2: 407.549 ns/op
# Warmup Iteration   3: 321.866 ns/op
Iteration   1: 320.634 ns/op
Iteration   2: 321.734 ns/op
Iteration   3: 320.236 ns/op
Iteration   4: 322.745 ns/op
Iteration   5: 320.666 ns/op
Iteration   6: 321.888 ns/op
Iteration   7: 320.347 ns/op
Iteration   8: 320.342 ns/op
Iteration   9: 320.419 ns/op
Iteration  10: 321.951 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  321.106 ±(99.9%) 0.743 ns/op [Average]
  (min, avg, max) = (320.236, 321.106, 322.747), stdev = 0.856
  CI (99.9%): [320.363, 321.848] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 48.75% complete, ETA 00:19:41
# Fork: 1 of 2
# Warmup Iteration   1: 711.982 ns/op
# Warmup Iteration   2: 408.010 ns/op
# Warmup Iteration   3: 265.634 ns/op
Iteration   1: 286.763 ns/op
Iteration   2: 266.089 ns/op
Iteration   3: 265.249 ns/op
Iteration   4: 268.704 ns/op
Iteration   5: 265.230 ns/op
Iteration   6: 265.962 ns/op
Iteration   7: 266.243 ns/op
Iteration   8: 265.620 ns/op
Iteration   9: 264.911 ns/op
Iteration  10: 265.712 ns/op

# Run progress: 48.82% complete, ETA 00:19:39
# Fork: 2 of 2
# Warmup Iteration   1: 833.259 ns/op
# Warmup Iteration   2: 331.186 ns/op
# Warmup Iteration   3: 258.700 ns/op
Iteration   1: 257.821 ns/op
Iteration   2: 258.347 ns/op
Iteration   3: 257.753 ns/op
Iteration   4: 259.332 ns/op
Iteration   5: 257.255 ns/op
Iteration   6: 258.327 ns/op
Iteration   7: 257.742 ns/op
Iteration   8: 257.865 ns/op
Iteration   9: 257.300 ns/op
Iteration  10: 258.442 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  263.033 ±(99.9%) 5.995 ns/op [Average]
  (min, avg, max) = (257.255, 263.033, 286.763), stdev = 6.904
  CI (99.9%): [257.039, 269.028] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 48.89% complete, ETA 00:19:38
# Fork: 1 of 2
# Warmup Iteration   1: 468.247 ns/op
# Warmup Iteration   2: 354.107 ns/op
# Warmup Iteration   3: 280.610 ns/op
Iteration   1: 278.569 ns/op
Iteration   2: 281.631 ns/op
Iteration   3: 277.583 ns/op
Iteration   4: 282.002 ns/op
Iteration   5: 279.465 ns/op
Iteration   6: 280.178 ns/op
Iteration   7: 278.260 ns/op
Iteration   8: 277.887 ns/op
Iteration   9: 277.870 ns/op
Iteration  10: 280.391 ns/op

# Run progress: 48.96% complete, ETA 00:19:36
# Fork: 2 of 2
# Warmup Iteration   1: 465.297 ns/op
# Warmup Iteration   2: 356.404 ns/op
# Warmup Iteration   3: 277.152 ns/op
Iteration   1: 275.912 ns/op
Iteration   2: 277.155 ns/op
Iteration   3: 275.682 ns/op
Iteration   4: 278.054 ns/op
Iteration   5: 275.926 ns/op
Iteration   6: 277.230 ns/op
Iteration   7: 276.091 ns/op
Iteration   8: 276.000 ns/op
Iteration   9: 276.035 ns/op
Iteration  10: 277.187 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  277.955 ±(99.9%) 1.665 ns/op [Average]
  (min, avg, max) = (275.682, 277.955, 282.002), stdev = 1.918
  CI (99.9%): [276.290, 279.621] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 49.03% complete, ETA 00:19:34
# Fork: 1 of 2
# Warmup Iteration   1: 1385.513 ns/op
# Warmup Iteration   2: 925.155 ns/op
# Warmup Iteration   3: 697.385 ns/op
Iteration   1: 700.614 ns/op
Iteration   2: 696.780 ns/op
Iteration   3: 698.167 ns/op
Iteration   4: 722.827 ns/op
Iteration   5: 718.571 ns/op
Iteration   6: 717.697 ns/op
Iteration   7: 718.270 ns/op
Iteration   8: 718.695 ns/op
Iteration   9: 728.561 ns/op
Iteration  10: 717.149 ns/op

# Run progress: 49.10% complete, ETA 00:19:33
# Fork: 2 of 2
# Warmup Iteration   1: 1132.714 ns/op
# Warmup Iteration   2: 1019.909 ns/op
# Warmup Iteration   3: 738.341 ns/op
Iteration   1: 738.428 ns/op
Iteration   2: 738.904 ns/op
Iteration   3: 738.921 ns/op
Iteration   4: 761.455 ns/op
Iteration   5: 755.544 ns/op
Iteration   6: 755.258 ns/op
Iteration   7: 755.680 ns/op
Iteration   8: 755.553 ns/op
Iteration   9: 757.558 ns/op
Iteration  10: 754.648 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  732.464 ±(99.9%) 18.703 ns/op [Average]
  (min, avg, max) = (696.780, 732.464, 761.455), stdev = 21.538
  CI (99.9%): [713.761, 751.167] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 49.17% complete, ETA 00:19:31
# Fork: 1 of 2
# Warmup Iteration   1: 19.873 ns/op
# Warmup Iteration   2: 22.503 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.060 ns/op
Iteration   2: 15.270 ns/op
Iteration   3: 17.022 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.009 ns/op
Iteration   8: 17.007 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.966 ns/op

# Run progress: 49.24% complete, ETA 00:19:30
# Fork: 2 of 2
# Warmup Iteration   1: 19.487 ns/op
# Warmup Iteration   2: 23.093 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.019 ns/op
Iteration   5: 17.124 ns/op
Iteration   6: 15.378 ns/op
Iteration   7: 17.029 ns/op
Iteration   8: 17.026 ns/op
Iteration   9: 17.007 ns/op
Iteration  10: 14.969 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.966, 16.290, 17.124), stdev = 0.952
  CI (99.9%): [15.463, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 49.31% complete, ETA 00:19:28
# Fork: 1 of 2
# Warmup Iteration   1: 827.116 ns/op
# Warmup Iteration   2: 1603.745 ns/op
# Warmup Iteration   3: 681.881 ns/op
Iteration   1: 404.677 ns/op
Iteration   2: 18070.083 ns/op
Iteration   3: 309.729 ns/op
Iteration   4: 253.809 ns/op
Iteration   5: 352.132 ns/op
Iteration   6: 18191.287 ns/op
Iteration   7: 15644.610 ns/op
Iteration   8: 279.733 ns/op
Iteration   9: 309.571 ns/op
Iteration  10: 237.682 ns/op

# Run progress: 49.38% complete, ETA 00:19:26
# Fork: 2 of 2
# Warmup Iteration   1: 631.986 ns/op
# Warmup Iteration   2: 19632.673 ns/op
# Warmup Iteration   3: 714.420 ns/op
Iteration   1: 407.217 ns/op
Iteration   2: 19110.520 ns/op
Iteration   3: 296.212 ns/op
Iteration   4: 254.039 ns/op
Iteration   5: 363.625 ns/op
Iteration   6: 17223.868 ns/op
Iteration   7: 15582.383 ns/op
Iteration   8: 299.855 ns/op
Iteration   9: 321.542 ns/op
Iteration  10: 237.116 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5407.484 ±(99.9%) 6968.095 ns/op [Average]
  (min, avg, max) = (237.116, 5407.484, 19110.520), stdev = 8024.468
  CI (99.9%): [≈ 0, 12375.579] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 49.44% complete, ETA 00:19:25
# Fork: 1 of 2
# Warmup Iteration   1: 273.092 ns/op
# Warmup Iteration   2: 420.025 ns/op
# Warmup Iteration   3: 229.138 ns/op
Iteration   1: 254.292 ns/op
Iteration   2: 236.832 ns/op
Iteration   3: 312.686 ns/op
Iteration   4: 209.753 ns/op
Iteration   5: 202.308 ns/op
Iteration   6: 229.939 ns/op
Iteration   7: 280.519 ns/op
Iteration   8: 214.110 ns/op
Iteration   9: 286.429 ns/op
Iteration  10: 180.937 ns/op

# Run progress: 49.51% complete, ETA 00:19:23
# Fork: 2 of 2
# Warmup Iteration   1: 277.137 ns/op
# Warmup Iteration   2: 358.731 ns/op
# Warmup Iteration   3: 226.979 ns/op
Iteration   1: 256.438 ns/op
Iteration   2: 236.225 ns/op
Iteration   3: 299.713 ns/op
Iteration   4: 208.840 ns/op
Iteration   5: 215.758 ns/op
Iteration   6: 229.614 ns/op
Iteration   7: 263.302 ns/op
Iteration   8: 198.425 ns/op
Iteration   9: 312.027 ns/op
Iteration  10: 181.180 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  240.466 ±(99.9%) 35.815 ns/op [Average]
  (min, avg, max) = (180.937, 240.466, 312.686), stdev = 41.245
  CI (99.9%): [204.651, 276.282] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 49.58% complete, ETA 00:19:22
# Fork: 1 of 2
# Warmup Iteration   1: 14454.085 ns/op
# Warmup Iteration   2: 1652.668 ns/op
# Warmup Iteration   3: 665.502 ns/op
Iteration   1: 3785.036 ns/op
Iteration   2: 396.190 ns/op
Iteration   3: 343.830 ns/op
Iteration   4: 249.570 ns/op
Iteration   5: 235.419 ns/op
Iteration   6: 288.742 ns/op
Iteration   7: 334.862 ns/op
Iteration   8: 257.758 ns/op
Iteration   9: 289.668 ns/op
Iteration  10: 241.734 ns/op

# Run progress: 49.65% complete, ETA 00:19:20
# Fork: 2 of 2
# Warmup Iteration   1: 6492.700 ns/op
# Warmup Iteration   2: 1744.667 ns/op
# Warmup Iteration   3: 426.155 ns/op
Iteration   1: 892.251 ns/op
Iteration   2: 398.931 ns/op
Iteration   3: 342.351 ns/op
Iteration   4: 252.359 ns/op
Iteration   5: 230.335 ns/op
Iteration   6: 288.442 ns/op
Iteration   7: 338.074 ns/op
Iteration   8: 255.461 ns/op
Iteration   9: 291.000 ns/op
Iteration  10: 246.231 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  497.912 ±(99.9%) 683.239 ns/op [Average]
  (min, avg, max) = (230.335, 497.912, 3785.036), stdev = 786.819
  CI (99.9%): [≈ 0, 1181.151] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 49.72% complete, ETA 00:19:18
# Fork: 1 of 2
# Warmup Iteration   1: 289.713 ns/op
# Warmup Iteration   2: 284.688 ns/op
# Warmup Iteration   3: 281.344 ns/op
Iteration   1: 211.649 ns/op
Iteration   2: 218.392 ns/op
Iteration   3: 236.625 ns/op
Iteration   4: 200.548 ns/op
Iteration   5: 195.874 ns/op
Iteration   6: 223.327 ns/op
Iteration   7: 222.043 ns/op
Iteration   8: 177.666 ns/op
Iteration   9: 228.219 ns/op
Iteration  10: 173.528 ns/op

# Run progress: 49.79% complete, ETA 00:19:17
# Fork: 2 of 2
# Warmup Iteration   1: 267.981 ns/op
# Warmup Iteration   2: 284.261 ns/op
# Warmup Iteration   3: 264.563 ns/op
Iteration   1: 214.966 ns/op
Iteration   2: 221.463 ns/op
Iteration   3: 241.641 ns/op
Iteration   4: 196.074 ns/op
Iteration   5: 196.268 ns/op
Iteration   6: 224.642 ns/op
Iteration   7: 222.804 ns/op
Iteration   8: 177.401 ns/op
Iteration   9: 234.499 ns/op
Iteration  10: 169.398 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  209.351 ±(99.9%) 19.234 ns/op [Average]
  (min, avg, max) = (169.398, 209.351, 241.641), stdev = 22.150
  CI (99.9%): [190.117, 228.586] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 49.86% complete, ETA 00:19:15
# Fork: 1 of 2
# Warmup Iteration   1: 1099.453 ns/op
# Warmup Iteration   2: 987.210 ns/op
# Warmup Iteration   3: 12698.328 ns/op
Iteration   1: 1373.917 ns/op
Iteration   2: 1336.001 ns/op
Iteration   3: 1424.159 ns/op
Iteration   4: 1312.366 ns/op
Iteration   5: 845.576 ns/op
Iteration   6: 1355.117 ns/op
Iteration   7: 1398.012 ns/op
Iteration   8: 827.318 ns/op
Iteration   9: 830.142 ns/op
Iteration  10: 1271.502 ns/op

# Run progress: 49.93% complete, ETA 00:19:14
# Fork: 2 of 2
# Warmup Iteration   1: 1238.768 ns/op
# Warmup Iteration   2: 918.777 ns/op
# Warmup Iteration   3: 11562.538 ns/op
Iteration   1: 1371.420 ns/op
Iteration   2: 1332.665 ns/op
Iteration   3: 1453.581 ns/op
Iteration   4: 1324.052 ns/op
Iteration   5: 847.122 ns/op
Iteration   6: 1347.962 ns/op
Iteration   7: 1411.754 ns/op
Iteration   8: 836.767 ns/op
Iteration   9: 859.064 ns/op
Iteration  10: 1269.335 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1201.392 ±(99.9%) 213.836 ns/op [Average]
  (min, avg, max) = (827.318, 1201.392, 1453.581), stdev = 246.254
  CI (99.9%): [987.556, 1415.228] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 50.00% complete, ETA 00:19:12
# Fork: 1 of 2
# Warmup Iteration   1: 19.972 ns/op
# Warmup Iteration   2: 21.013 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.268 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.028 ns/op
Iteration   5: 17.103 ns/op
Iteration   6: 15.390 ns/op
Iteration   7: 17.009 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.014 ns/op
Iteration  10: 14.975 ns/op

# Run progress: 50.07% complete, ETA 00:19:10
# Fork: 2 of 2
# Warmup Iteration   1: 19.380 ns/op
# Warmup Iteration   2: 20.938 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.281 ns/op
Iteration   3: 17.028 ns/op
Iteration   4: 15.016 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.377 ns/op
Iteration   7: 17.008 ns/op
Iteration   8: 17.006 ns/op
Iteration   9: 16.993 ns/op
Iteration  10: 14.976 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.975, 16.288, 17.105), stdev = 0.949
  CI (99.9%): [15.464, 17.112] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 50.14% complete, ETA 00:19:09
# Fork: 1 of 2
# Warmup Iteration   1: 1039.741 ns/op
# Warmup Iteration   2: 438.295 ns/op
# Warmup Iteration   3: 316.698 ns/op
Iteration   1: 317.993 ns/op
Iteration   2: 317.457 ns/op
Iteration   3: 317.827 ns/op
Iteration   4: 317.665 ns/op
Iteration   5: 318.425 ns/op
Iteration   6: 316.632 ns/op
Iteration   7: 317.976 ns/op
Iteration   8: 317.934 ns/op
Iteration   9: 318.055 ns/op
Iteration  10: 316.843 ns/op

# Run progress: 50.21% complete, ETA 00:19:07
# Fork: 2 of 2
# Warmup Iteration   1: 810.320 ns/op
# Warmup Iteration   2: 422.356 ns/op
# Warmup Iteration   3: 317.870 ns/op
Iteration   1: 319.643 ns/op
Iteration   2: 318.382 ns/op
Iteration   3: 319.567 ns/op
Iteration   4: 318.421 ns/op
Iteration   5: 319.587 ns/op
Iteration   6: 318.942 ns/op
Iteration   7: 319.104 ns/op
Iteration   8: 319.741 ns/op
Iteration   9: 319.513 ns/op
Iteration  10: 318.276 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  318.399 ±(99.9%) 0.800 ns/op [Average]
  (min, avg, max) = (316.632, 318.399, 319.741), stdev = 0.922
  CI (99.9%): [317.599, 319.200] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 50.28% complete, ETA 00:19:06
# Fork: 1 of 2
# Warmup Iteration   1: 453.976 ns/op
# Warmup Iteration   2: 408.184 ns/op
# Warmup Iteration   3: 319.390 ns/op
Iteration   1: 318.424 ns/op
Iteration   2: 322.406 ns/op
Iteration   3: 318.360 ns/op
Iteration   4: 320.392 ns/op
Iteration   5: 318.257 ns/op
Iteration   6: 319.327 ns/op
Iteration   7: 318.405 ns/op
Iteration   8: 318.375 ns/op
Iteration   9: 318.287 ns/op
Iteration  10: 319.405 ns/op

# Run progress: 50.35% complete, ETA 00:19:04
# Fork: 2 of 2
# Warmup Iteration   1: 457.380 ns/op
# Warmup Iteration   2: 414.253 ns/op
# Warmup Iteration   3: 318.942 ns/op
Iteration   1: 318.285 ns/op
Iteration   2: 322.111 ns/op
Iteration   3: 318.329 ns/op
Iteration   4: 319.889 ns/op
Iteration   5: 318.321 ns/op
Iteration   6: 319.180 ns/op
Iteration   7: 318.575 ns/op
Iteration   8: 318.469 ns/op
Iteration   9: 318.394 ns/op
Iteration  10: 319.038 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  319.111 ±(99.9%) 1.070 ns/op [Average]
  (min, avg, max) = (318.257, 319.111, 322.406), stdev = 1.233
  CI (99.9%): [318.041, 320.182] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 50.42% complete, ETA 00:19:02
# Fork: 1 of 2
# Warmup Iteration   1: 7124.109 ns/op
# Warmup Iteration   2: 535.753 ns/op
# Warmup Iteration   3: 374.451 ns/op
Iteration   1: 373.975 ns/op
Iteration   2: 374.935 ns/op
Iteration   3: 374.463 ns/op
Iteration   4: 376.306 ns/op
Iteration   5: 374.020 ns/op
Iteration   6: 375.725 ns/op
Iteration   7: 374.482 ns/op
Iteration   8: 374.379 ns/op
Iteration   9: 374.523 ns/op
Iteration  10: 374.558 ns/op

# Run progress: 50.49% complete, ETA 00:19:01
# Fork: 2 of 2
# Warmup Iteration   1: 10532.331 ns/op
# Warmup Iteration   2: 550.321 ns/op
# Warmup Iteration   3: 378.574 ns/op
Iteration   1: 378.140 ns/op
Iteration   2: 380.771 ns/op
Iteration   3: 378.230 ns/op
Iteration   4: 380.086 ns/op
Iteration   5: 378.118 ns/op
Iteration   6: 379.239 ns/op
Iteration   7: 378.211 ns/op
Iteration   8: 378.006 ns/op
Iteration   9: 378.298 ns/op
Iteration  10: 378.554 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  376.751 ±(99.9%) 1.935 ns/op [Average]
  (min, avg, max) = (373.975, 376.751, 380.771), stdev = 2.228
  CI (99.9%): [374.817, 378.686] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 50.56% complete, ETA 00:18:59
# Fork: 1 of 2
# Warmup Iteration   1: 460.012 ns/op
# Warmup Iteration   2: 441.156 ns/op
# Warmup Iteration   3: 280.082 ns/op
Iteration   1: 279.295 ns/op
Iteration   2: 279.927 ns/op
Iteration   3: 278.549 ns/op
Iteration   4: 281.778 ns/op
Iteration   5: 279.198 ns/op
Iteration   6: 278.779 ns/op
Iteration   7: 278.967 ns/op
Iteration   8: 278.821 ns/op
Iteration   9: 278.636 ns/op
Iteration  10: 280.106 ns/op

# Run progress: 50.63% complete, ETA 00:18:58
# Fork: 2 of 2
# Warmup Iteration   1: 490.008 ns/op
# Warmup Iteration   2: 394.802 ns/op
# Warmup Iteration   3: 277.811 ns/op
Iteration   1: 276.649 ns/op
Iteration   2: 278.265 ns/op
Iteration   3: 276.694 ns/op
Iteration   4: 279.677 ns/op
Iteration   5: 276.704 ns/op
Iteration   6: 278.303 ns/op
Iteration   7: 276.578 ns/op
Iteration   8: 276.944 ns/op
Iteration   9: 276.945 ns/op
Iteration  10: 279.106 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  278.496 ±(99.9%) 1.215 ns/op [Average]
  (min, avg, max) = (276.578, 278.496, 281.778), stdev = 1.399
  CI (99.9%): [277.281, 279.711] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 50.69% complete, ETA 00:18:56
# Fork: 1 of 2
# Warmup Iteration   1: 2578.424 ns/op
# Warmup Iteration   2: 1863.513 ns/op
# Warmup Iteration   3: 1413.082 ns/op
Iteration   1: 1415.498 ns/op
Iteration   2: 1413.998 ns/op
Iteration   3: 1414.685 ns/op
Iteration   4: 1429.392 ns/op
Iteration   5: 1428.783 ns/op
Iteration   6: 1427.556 ns/op
Iteration   7: 1428.417 ns/op
Iteration   8: 1428.126 ns/op
Iteration   9: 1428.589 ns/op
Iteration  10: 1428.675 ns/op

# Run progress: 50.76% complete, ETA 00:18:54
# Fork: 2 of 2
# Warmup Iteration   1: 2884.583 ns/op
# Warmup Iteration   2: 1959.198 ns/op
# Warmup Iteration   3: 1435.876 ns/op
Iteration   1: 1436.969 ns/op
Iteration   2: 1436.668 ns/op
Iteration   3: 1435.115 ns/op
Iteration   4: 1450.883 ns/op
Iteration   5: 1450.097 ns/op
Iteration   6: 1450.728 ns/op
Iteration   7: 1452.293 ns/op
Iteration   8: 1450.721 ns/op
Iteration   9: 1452.550 ns/op
Iteration  10: 1448.737 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1435.424 ±(99.9%) 11.453 ns/op [Average]
  (min, avg, max) = (1413.998, 1435.424, 1452.550), stdev = 13.189
  CI (99.9%): [1423.971, 1446.877] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 50.83% complete, ETA 00:18:53
# Fork: 1 of 2
# Warmup Iteration   1: 19.400 ns/op
# Warmup Iteration   2: 20.993 ns/op
# Warmup Iteration   3: 15.044 ns/op
Iteration   1: 17.068 ns/op
Iteration   2: 15.262 ns/op
Iteration   3: 17.029 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.385 ns/op
Iteration   7: 17.011 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.959 ns/op

# Run progress: 50.90% complete, ETA 00:18:51
# Fork: 2 of 2
# Warmup Iteration   1: 19.476 ns/op
# Warmup Iteration   2: 22.103 ns/op
# Warmup Iteration   3: 15.020 ns/op
Iteration   1: 17.051 ns/op
Iteration   2: 15.283 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.014 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.361 ns/op
Iteration   7: 17.011 ns/op
Iteration   8: 17.010 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.959, 16.287, 17.110), stdev = 0.953
  CI (99.9%): [15.459, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 50.97% complete, ETA 00:18:50
# Fork: 1 of 2
# Warmup Iteration   1: 760.103 ns/op
# Warmup Iteration   2: 451.344 ns/op
# Warmup Iteration   3: 324.625 ns/op
Iteration   1: 326.483 ns/op
Iteration   2: 327.749 ns/op
Iteration   3: 325.011 ns/op
Iteration   4: 323.135 ns/op
Iteration   5: 325.504 ns/op
Iteration   6: 324.695 ns/op
Iteration   7: 324.749 ns/op
Iteration   8: 326.439 ns/op
Iteration   9: 325.054 ns/op
Iteration  10: 325.705 ns/op

# Run progress: 51.04% complete, ETA 00:18:48
# Fork: 2 of 2
# Warmup Iteration   1: 674.734 ns/op
# Warmup Iteration   2: 436.282 ns/op
# Warmup Iteration   3: 306.999 ns/op
Iteration   1: 308.457 ns/op
Iteration   2: 307.320 ns/op
Iteration   3: 308.272 ns/op
Iteration   4: 308.337 ns/op
Iteration   5: 308.370 ns/op
Iteration   6: 307.034 ns/op
Iteration   7: 308.501 ns/op
Iteration   8: 308.447 ns/op
Iteration   9: 308.534 ns/op
Iteration  10: 307.031 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  316.741 ±(99.9%) 7.806 ns/op [Average]
  (min, avg, max) = (307.031, 316.741, 327.749), stdev = 8.990
  CI (99.9%): [308.935, 324.547] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 51.11% complete, ETA 00:18:46
# Fork: 1 of 2
# Warmup Iteration   1: 473.885 ns/op
# Warmup Iteration   2: 473.885 ns/op
# Warmup Iteration   3: 333.606 ns/op
Iteration   1: 330.666 ns/op
Iteration   2: 333.344 ns/op
Iteration   3: 331.249 ns/op
Iteration   4: 333.165 ns/op
Iteration   5: 331.121 ns/op
Iteration   6: 332.990 ns/op
Iteration   7: 331.322 ns/op
Iteration   8: 331.227 ns/op
Iteration   9: 331.210 ns/op
Iteration  10: 332.659 ns/op

# Run progress: 51.18% complete, ETA 00:18:45
# Fork: 2 of 2
# Warmup Iteration   1: 502.019 ns/op
# Warmup Iteration   2: 467.855 ns/op
# Warmup Iteration   3: 345.889 ns/op
Iteration   1: 335.557 ns/op
Iteration   2: 337.669 ns/op
Iteration   3: 335.713 ns/op
Iteration   4: 337.521 ns/op
Iteration   5: 335.490 ns/op
Iteration   6: 337.077 ns/op
Iteration   7: 335.956 ns/op
Iteration   8: 335.949 ns/op
Iteration   9: 335.732 ns/op
Iteration  10: 336.921 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  334.127 ±(99.9%) 2.139 ns/op [Average]
  (min, avg, max) = (330.666, 334.127, 337.669), stdev = 2.463
  CI (99.9%): [331.988, 336.266] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 51.25% complete, ETA 00:18:43
# Fork: 1 of 2
# Warmup Iteration   1: 7822.641 ns/op
# Warmup Iteration   2: 506.142 ns/op
# Warmup Iteration   3: 335.671 ns/op
Iteration   1: 334.949 ns/op
Iteration   2: 336.777 ns/op
Iteration   3: 335.144 ns/op
Iteration   4: 337.366 ns/op
Iteration   5: 334.952 ns/op
Iteration   6: 335.749 ns/op
Iteration   7: 335.169 ns/op
Iteration   8: 334.966 ns/op
Iteration   9: 335.321 ns/op
Iteration  10: 335.544 ns/op

# Run progress: 51.32% complete, ETA 00:18:41
# Fork: 2 of 2
# Warmup Iteration   1: 10794.581 ns/op
# Warmup Iteration   2: 492.553 ns/op
# Warmup Iteration   3: 337.536 ns/op
Iteration   1: 336.301 ns/op
Iteration   2: 338.300 ns/op
Iteration   3: 336.172 ns/op
Iteration   4: 339.027 ns/op
Iteration   5: 336.069 ns/op
Iteration   6: 337.573 ns/op
Iteration   7: 336.193 ns/op
Iteration   8: 336.197 ns/op
Iteration   9: 336.371 ns/op
Iteration  10: 337.389 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  336.277 ±(99.9%) 1.007 ns/op [Average]
  (min, avg, max) = (334.949, 336.277, 339.027), stdev = 1.160
  CI (99.9%): [335.269, 337.284] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 51.39% complete, ETA 00:18:40
# Fork: 1 of 2
# Warmup Iteration   1: 352.722 ns/op
# Warmup Iteration   2: 327.129 ns/op
# Warmup Iteration   3: 239.646 ns/op
Iteration   1: 238.363 ns/op
Iteration   2: 240.100 ns/op
Iteration   3: 238.566 ns/op
Iteration   4: 239.805 ns/op
Iteration   5: 238.565 ns/op
Iteration   6: 239.780 ns/op
Iteration   7: 238.470 ns/op
Iteration   8: 238.390 ns/op
Iteration   9: 238.435 ns/op
Iteration  10: 240.040 ns/op

# Run progress: 51.46% complete, ETA 00:18:38
# Fork: 2 of 2
# Warmup Iteration   1: 348.954 ns/op
# Warmup Iteration   2: 322.446 ns/op
# Warmup Iteration   3: 240.229 ns/op
Iteration   1: 238.609 ns/op
Iteration   2: 240.447 ns/op
Iteration   3: 238.666 ns/op
Iteration   4: 240.042 ns/op
Iteration   5: 238.640 ns/op
Iteration   6: 239.835 ns/op
Iteration   7: 238.508 ns/op
Iteration   8: 238.522 ns/op
Iteration   9: 238.522 ns/op
Iteration  10: 240.140 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  239.122 ±(99.9%) 0.669 ns/op [Average]
  (min, avg, max) = (238.363, 239.122, 240.447), stdev = 0.770
  CI (99.9%): [238.453, 239.791] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 51.53% complete, ETA 00:18:37
# Fork: 1 of 2
# Warmup Iteration   1: 663.116 ns/op
# Warmup Iteration   2: 557.220 ns/op
# Warmup Iteration   3: 401.090 ns/op
Iteration   1: 403.356 ns/op
Iteration   2: 401.405 ns/op
Iteration   3: 402.860 ns/op
Iteration   4: 423.353 ns/op
Iteration   5: 419.111 ns/op
Iteration   6: 417.586 ns/op
Iteration   7: 419.292 ns/op
Iteration   8: 419.242 ns/op
Iteration   9: 419.257 ns/op
Iteration  10: 417.864 ns/op

# Run progress: 51.60% complete, ETA 00:18:35
# Fork: 2 of 2
# Warmup Iteration   1: 644.659 ns/op
# Warmup Iteration   2: 557.999 ns/op
# Warmup Iteration   3: 401.178 ns/op
Iteration   1: 403.326 ns/op
Iteration   2: 401.301 ns/op
Iteration   3: 402.864 ns/op
Iteration   4: 423.575 ns/op
Iteration   5: 419.173 ns/op
Iteration   6: 417.445 ns/op
Iteration   7: 419.297 ns/op
Iteration   8: 419.337 ns/op
Iteration   9: 419.228 ns/op
Iteration  10: 417.959 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  414.342 ±(99.9%) 7.036 ns/op [Average]
  (min, avg, max) = (401.301, 414.342, 423.575), stdev = 8.102
  CI (99.9%): [407.306, 421.377] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 51.67% complete, ETA 00:18:33
# Fork: 1 of 2
# Warmup Iteration   1: 19.735 ns/op
# Warmup Iteration   2: 23.018 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.069 ns/op
Iteration   2: 15.273 ns/op
Iteration   3: 17.018 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.382 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.029 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.966 ns/op

# Run progress: 51.74% complete, ETA 00:18:32
# Fork: 2 of 2
# Warmup Iteration   1: 19.824 ns/op
# Warmup Iteration   2: 21.168 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.268 ns/op
Iteration   3: 17.021 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.385 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.958 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.829 ns/op [Average]
  (min, avg, max) = (14.958, 16.290, 17.113), stdev = 0.954
  CI (99.9%): [15.462, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 51.81% complete, ETA 00:18:30
# Fork: 1 of 2
# Warmup Iteration   1: 761.252 ns/op
# Warmup Iteration   2: 26781.558 ns/op
# Warmup Iteration   3: 1596.443 ns/op
Iteration   1: 434.064 ns/op
Iteration   2: 22163.652 ns/op
Iteration   3: 18334.529 ns/op
Iteration   4: 21412.068 ns/op
Iteration   5: 374.401 ns/op
Iteration   6: 18597.322 ns/op
Iteration   7: 298.576 ns/op
Iteration   8: 344.120 ns/op
Iteration   9: 451.398 ns/op
Iteration  10: 348.270 ns/op

# Run progress: 51.88% complete, ETA 00:18:29
# Fork: 2 of 2
# Warmup Iteration   1: 1162.339 ns/op
# Warmup Iteration   2: 28468.824 ns/op
# Warmup Iteration   3: 2372.754 ns/op
Iteration   1: 433.945 ns/op
Iteration   2: 21283.231 ns/op
Iteration   3: 16256.988 ns/op
Iteration   4: 19622.471 ns/op
Iteration   5: 383.894 ns/op
Iteration   6: 21410.580 ns/op
Iteration   7: 292.014 ns/op
Iteration   8: 340.706 ns/op
Iteration   9: 442.554 ns/op
Iteration  10: 341.716 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8178.325 ±(99.9%) 8583.465 ns/op [Average]
  (min, avg, max) = (292.014, 8178.325, 22163.652), stdev = 9884.731
  CI (99.9%): [≈ 0, 16761.790] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 51.94% complete, ETA 00:18:27
# Fork: 1 of 2
# Warmup Iteration   1: 681.730 ns/op
# Warmup Iteration   2: 570.095 ns/op
# Warmup Iteration   3: 396.754 ns/op
Iteration   1: 447.792 ns/op
Iteration   2: 404.402 ns/op
Iteration   3: 440.623 ns/op
Iteration   4: 413.105 ns/op
Iteration   5: 431.536 ns/op
Iteration   6: 423.920 ns/op
Iteration   7: 419.110 ns/op
Iteration   8: 441.505 ns/op
Iteration   9: 426.435 ns/op
Iteration  10: 395.179 ns/op

# Run progress: 52.01% complete, ETA 00:18:25
# Fork: 2 of 2
# Warmup Iteration   1: 627.390 ns/op
# Warmup Iteration   2: 575.924 ns/op
# Warmup Iteration   3: 395.424 ns/op
Iteration   1: 444.636 ns/op
Iteration   2: 405.276 ns/op
Iteration   3: 434.558 ns/op
Iteration   4: 409.053 ns/op
Iteration   5: 427.759 ns/op
Iteration   6: 408.981 ns/op
Iteration   7: 416.599 ns/op
Iteration   8: 440.500 ns/op
Iteration   9: 424.580 ns/op
Iteration  10: 393.853 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  422.470 ±(99.9%) 14.240 ns/op [Average]
  (min, avg, max) = (393.853, 422.470, 447.792), stdev = 16.399
  CI (99.9%): [408.230, 436.710] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 52.08% complete, ETA 00:18:24
# Fork: 1 of 2
# Warmup Iteration   1: 10947.148 ns/op
# Warmup Iteration   2: 2437.402 ns/op
# Warmup Iteration   3: 997.924 ns/op
Iteration   1: 12465.898 ns/op
Iteration   2: 900.078 ns/op
Iteration   3: 335.161 ns/op
Iteration   4: 1060.174 ns/op
Iteration   5: 24875.160 ns/op
Iteration   6: 568.252 ns/op
Iteration   7: 483.395 ns/op
Iteration   8: 334.277 ns/op
Iteration   9: 416.837 ns/op
Iteration  10: 401.498 ns/op

# Run progress: 52.15% complete, ETA 00:18:22
# Fork: 2 of 2
# Warmup Iteration   1: 11308.177 ns/op
# Warmup Iteration   2: 1234.868 ns/op
# Warmup Iteration   3: 924.781 ns/op
Iteration   1: 12381.896 ns/op
Iteration   2: 8599.019 ns/op
Iteration   3: 335.685 ns/op
Iteration   4: 724.610 ns/op
Iteration   5: 23924.114 ns/op
Iteration   6: 627.008 ns/op
Iteration   7: 496.303 ns/op
Iteration   8: 338.175 ns/op
Iteration   9: 414.441 ns/op
Iteration  10: 399.864 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4504.092 ±(99.9%) 6822.409 ns/op [Average]
  (min, avg, max) = (334.277, 4504.092, 24875.160), stdev = 7856.697
  CI (99.9%): [≈ 0, 11326.501] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 52.22% complete, ETA 00:18:21
# Fork: 1 of 2
# Warmup Iteration   1: 533.319 ns/op
# Warmup Iteration   2: 442.708 ns/op
# Warmup Iteration   3: 306.895 ns/op
Iteration   1: 26992.192 ns/op
Iteration   2: 420.233 ns/op
Iteration   3: 337.497 ns/op
Iteration   4: 323.763 ns/op
Iteration   5: 338.505 ns/op
Iteration   6: 350.957 ns/op
Iteration   7: 345.143 ns/op
Iteration   8: 348.433 ns/op
Iteration   9: 335.050 ns/op
Iteration  10: 313.492 ns/op

# Run progress: 52.29% complete, ETA 00:18:19
# Fork: 2 of 2
# Warmup Iteration   1: 534.015 ns/op
# Warmup Iteration   2: 499.866 ns/op
# Warmup Iteration   3: 307.419 ns/op
Iteration   1: 1420.571 ns/op
Iteration   2: 336.757 ns/op
Iteration   3: 335.118 ns/op
Iteration   4: 317.295 ns/op
Iteration   5: 342.624 ns/op
Iteration   6: 350.607 ns/op
Iteration   7: 343.795 ns/op
Iteration   8: 351.893 ns/op
Iteration   9: 336.298 ns/op
Iteration  10: 314.376 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1727.730 ±(99.9%) 5168.072 ns/op [Average]
  (min, avg, max) = (313.492, 1727.730, 26992.192), stdev = 5951.560
  CI (99.9%): [≈ 0, 6895.802] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 52.36% complete, ETA 00:18:17
# Fork: 1 of 2
# Warmup Iteration   1: 2978.137 ns/op
# Warmup Iteration   2: 2235.306 ns/op
# Warmup Iteration   3: 1517.127 ns/op
Iteration   1: 1623.682 ns/op
Iteration   2: 1548.511 ns/op
Iteration   3: 1630.481 ns/op
Iteration   4: 1571.713 ns/op
Iteration   5: 1615.699 ns/op
Iteration   6: 1583.611 ns/op
Iteration   7: 1609.587 ns/op
Iteration   8: 1622.418 ns/op
Iteration   9: 1621.226 ns/op
Iteration  10: 1527.665 ns/op

# Run progress: 52.43% complete, ETA 00:18:16
# Fork: 2 of 2
# Warmup Iteration   1: 3091.853 ns/op
# Warmup Iteration   2: 2363.240 ns/op
# Warmup Iteration   3: 1519.745 ns/op
Iteration   1: 1622.882 ns/op
Iteration   2: 1550.457 ns/op
Iteration   3: 1627.208 ns/op
Iteration   4: 1571.289 ns/op
Iteration   5: 1616.068 ns/op
Iteration   6: 1585.435 ns/op
Iteration   7: 1620.943 ns/op
Iteration   8: 1622.240 ns/op
Iteration   9: 1622.863 ns/op
Iteration  10: 1530.211 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1596.210 ±(99.9%) 30.071 ns/op [Average]
  (min, avg, max) = (1527.665, 1596.210, 1630.481), stdev = 34.630
  CI (99.9%): [1566.138, 1626.281] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 52.50% complete, ETA 00:18:14
# Fork: 1 of 2
# Warmup Iteration   1: 19.442 ns/op
# Warmup Iteration   2: 22.892 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.284 ns/op
Iteration   3: 17.037 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.395 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.012 ns/op
Iteration  10: 14.979 ns/op

# Run progress: 52.57% complete, ETA 00:18:13
# Fork: 2 of 2
# Warmup Iteration   1: 19.570 ns/op
# Warmup Iteration   2: 20.945 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.075 ns/op
Iteration   2: 15.218 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.013 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.394 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.010 ns/op
Iteration  10: 14.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.972, 16.289, 17.108), stdev = 0.953
  CI (99.9%): [15.462, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 52.64% complete, ETA 00:18:11
# Fork: 1 of 2
# Warmup Iteration   1: 121.482 ns/op
# Warmup Iteration   2: 106.192 ns/op
# Warmup Iteration   3: 72.669 ns/op
Iteration   1: 73.770 ns/op
Iteration   2: 72.769 ns/op
Iteration   3: 73.810 ns/op
Iteration   4: 72.342 ns/op
Iteration   5: 73.800 ns/op
Iteration   6: 72.884 ns/op
Iteration   7: 73.756 ns/op
Iteration   8: 73.705 ns/op
Iteration   9: 73.836 ns/op
Iteration  10: 72.669 ns/op

# Run progress: 52.71% complete, ETA 00:18:09
# Fork: 2 of 2
# Warmup Iteration   1: 106.635 ns/op
# Warmup Iteration   2: 105.582 ns/op
# Warmup Iteration   3: 72.170 ns/op
Iteration   1: 73.779 ns/op
Iteration   2: 71.959 ns/op
Iteration   3: 73.579 ns/op
Iteration   4: 72.290 ns/op
Iteration   5: 73.602 ns/op
Iteration   6: 72.159 ns/op
Iteration   7: 73.450 ns/op
Iteration   8: 73.474 ns/op
Iteration   9: 73.549 ns/op
Iteration  10: 71.881 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.153 ±(99.9%) 0.610 ns/op [Average]
  (min, avg, max) = (71.881, 73.153, 73.836), stdev = 0.702
  CI (99.9%): [72.543, 73.763] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 52.78% complete, ETA 00:18:08
# Fork: 1 of 2
# Warmup Iteration   1: 64.618 ns/op
# Warmup Iteration   2: 64.798 ns/op
# Warmup Iteration   3: 45.804 ns/op
Iteration   1: 44.433 ns/op
Iteration   2: 45.878 ns/op
Iteration   3: 44.413 ns/op
Iteration   4: 46.077 ns/op
Iteration   5: 44.465 ns/op
Iteration   6: 45.790 ns/op
Iteration   7: 44.384 ns/op
Iteration   8: 44.380 ns/op
Iteration   9: 44.392 ns/op
Iteration  10: 45.801 ns/op

# Run progress: 52.85% complete, ETA 00:18:06
# Fork: 2 of 2
# Warmup Iteration   1: 64.573 ns/op
# Warmup Iteration   2: 64.298 ns/op
# Warmup Iteration   3: 45.823 ns/op
Iteration   1: 44.475 ns/op
Iteration   2: 45.887 ns/op
Iteration   3: 44.393 ns/op
Iteration   4: 46.096 ns/op
Iteration   5: 44.481 ns/op
Iteration   6: 45.810 ns/op
Iteration   7: 44.441 ns/op
Iteration   8: 44.380 ns/op
Iteration   9: 44.405 ns/op
Iteration  10: 45.764 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.007 ±(99.9%) 0.645 ns/op [Average]
  (min, avg, max) = (44.380, 45.007, 46.096), stdev = 0.742
  CI (99.9%): [44.363, 45.652] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 52.92% complete, ETA 00:18:05
# Fork: 1 of 2
# Warmup Iteration   1: 883.576 ns/op
# Warmup Iteration   2: 109.591 ns/op
# Warmup Iteration   3: 76.920 ns/op
Iteration   1: 75.521 ns/op
Iteration   2: 77.472 ns/op
Iteration   3: 75.459 ns/op
Iteration   4: 78.827 ns/op
Iteration   5: 75.519 ns/op
Iteration   6: 76.879 ns/op
Iteration   7: 75.455 ns/op
Iteration   8: 75.590 ns/op
Iteration   9: 75.482 ns/op
Iteration  10: 76.856 ns/op

# Run progress: 52.99% complete, ETA 00:18:03
# Fork: 2 of 2
# Warmup Iteration   1: 874.955 ns/op
# Warmup Iteration   2: 100.917 ns/op
# Warmup Iteration   3: 77.060 ns/op
Iteration   1: 75.458 ns/op
Iteration   2: 77.419 ns/op
Iteration   3: 75.462 ns/op
Iteration   4: 78.804 ns/op
Iteration   5: 75.558 ns/op
Iteration   6: 76.787 ns/op
Iteration   7: 75.441 ns/op
Iteration   8: 75.486 ns/op
Iteration   9: 75.625 ns/op
Iteration  10: 76.805 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  76.295 ±(99.9%) 0.977 ns/op [Average]
  (min, avg, max) = (75.441, 76.295, 78.827), stdev = 1.125
  CI (99.9%): [75.318, 77.272] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 53.06% complete, ETA 00:18:01
# Fork: 1 of 2
# Warmup Iteration   1: 68.397 ns/op
# Warmup Iteration   2: 69.213 ns/op
# Warmup Iteration   3: 49.164 ns/op
Iteration   1: 47.795 ns/op
Iteration   2: 49.130 ns/op
Iteration   3: 47.902 ns/op
Iteration   4: 49.128 ns/op
Iteration   5: 47.856 ns/op
Iteration   6: 49.113 ns/op
Iteration   7: 47.914 ns/op
Iteration   8: 47.844 ns/op
Iteration   9: 47.901 ns/op
Iteration  10: 49.171 ns/op

# Run progress: 53.13% complete, ETA 00:18:00
# Fork: 2 of 2
# Warmup Iteration   1: 73.567 ns/op
# Warmup Iteration   2: 70.063 ns/op
# Warmup Iteration   3: 49.228 ns/op
Iteration   1: 47.788 ns/op
Iteration   2: 49.141 ns/op
Iteration   3: 47.918 ns/op
Iteration   4: 49.146 ns/op
Iteration   5: 47.790 ns/op
Iteration   6: 49.080 ns/op
Iteration   7: 47.914 ns/op
Iteration   8: 47.881 ns/op
Iteration   9: 47.906 ns/op
Iteration  10: 49.147 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.373 ±(99.9%) 0.553 ns/op [Average]
  (min, avg, max) = (47.788, 48.373, 49.171), stdev = 0.637
  CI (99.9%): [47.820, 48.926] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 53.19% complete, ETA 00:17:58
# Fork: 1 of 2
# Warmup Iteration   1: 165.968 ns/op
# Warmup Iteration   2: 171.463 ns/op
# Warmup Iteration   3: 121.526 ns/op
Iteration   1: 122.925 ns/op
Iteration   2: 129.082 ns/op
Iteration   3: 123.185 ns/op
Iteration   4: 136.911 ns/op
Iteration   5: 136.525 ns/op
Iteration   6: 134.721 ns/op
Iteration   7: 136.001 ns/op
Iteration   8: 136.789 ns/op
Iteration   9: 135.999 ns/op
Iteration  10: 134.717 ns/op

# Run progress: 53.26% complete, ETA 00:17:57
# Fork: 2 of 2
# Warmup Iteration   1: 169.017 ns/op
# Warmup Iteration   2: 172.960 ns/op
# Warmup Iteration   3: 121.620 ns/op
Iteration   1: 122.808 ns/op
Iteration   2: 128.970 ns/op
Iteration   3: 123.226 ns/op
Iteration   4: 136.807 ns/op
Iteration   5: 136.635 ns/op
Iteration   6: 134.753 ns/op
Iteration   7: 136.008 ns/op
Iteration   8: 136.894 ns/op
Iteration   9: 136.016 ns/op
Iteration  10: 134.828 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  132.690 ±(99.9%) 4.716 ns/op [Average]
  (min, avg, max) = (122.808, 132.690, 136.911), stdev = 5.431
  CI (99.9%): [127.974, 137.406] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 53.33% complete, ETA 00:17:55
# Fork: 1 of 2
# Warmup Iteration   1: 19.383 ns/op
# Warmup Iteration   2: 22.969 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.078 ns/op
Iteration   2: 15.263 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.386 ns/op
Iteration   7: 17.015 ns/op
Iteration   8: 17.003 ns/op
Iteration   9: 17.028 ns/op
Iteration  10: 14.958 ns/op

# Run progress: 53.40% complete, ETA 00:17:53
# Fork: 2 of 2
# Warmup Iteration   1: 19.476 ns/op
# Warmup Iteration   2: 21.068 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.067 ns/op
Iteration   2: 15.299 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.019 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.370 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 16.999 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.965 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.958, 16.288, 17.109), stdev = 0.951
  CI (99.9%): [15.462, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 53.47% complete, ETA 00:17:52
# Fork: 1 of 2
# Warmup Iteration   1: 164.727 ns/op
# Warmup Iteration   2: 13766.480 ns/op
# Warmup Iteration   3: 116.619 ns/op
Iteration   1: 14317.286 ns/op
Iteration   2: 235.182 ns/op
Iteration   3: 241.113 ns/op
Iteration   4: 197.786 ns/op
Iteration   5: 118.150 ns/op
Iteration   6: 14945.710 ns/op
Iteration   7: 12772.757 ns/op
Iteration   8: 121.932 ns/op
Iteration   9: 179.911 ns/op
Iteration  10: 123.201 ns/op

# Run progress: 53.54% complete, ETA 00:17:50
# Fork: 2 of 2
# Warmup Iteration   1: 162.955 ns/op
# Warmup Iteration   2: 13414.687 ns/op
# Warmup Iteration   3: 118.436 ns/op
Iteration   1: 14230.853 ns/op
Iteration   2: 234.428 ns/op
Iteration   3: 238.611 ns/op
Iteration   4: 199.586 ns/op
Iteration   5: 117.694 ns/op
Iteration   6: 15379.501 ns/op
Iteration   7: 15485.000 ns/op
Iteration   8: 124.237 ns/op
Iteration   9: 184.993 ns/op
Iteration  10: 125.320 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4478.663 ±(99.9%) 5874.718 ns/op [Average]
  (min, avg, max) = (117.694, 4478.663, 15485.000), stdev = 6765.334
  CI (99.9%): [≈ 0, 10353.381] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 53.61% complete, ETA 00:17:49
# Fork: 1 of 2
# Warmup Iteration   1: 65.212 ns/op
# Warmup Iteration   2: 226.678 ns/op
# Warmup Iteration   3: 114.940 ns/op
Iteration   1: 128.133 ns/op
Iteration   2: 157.598 ns/op
Iteration   3: 166.742 ns/op
Iteration   4: 145.752 ns/op
Iteration   5: 92.055 ns/op
Iteration   6: 146.984 ns/op
Iteration   7: 118.388 ns/op
Iteration   8: 92.077 ns/op
Iteration   9: 117.311 ns/op
Iteration  10: 97.424 ns/op

# Run progress: 53.68% complete, ETA 00:17:47
# Fork: 2 of 2
# Warmup Iteration   1: 64.473 ns/op
# Warmup Iteration   2: 239.771 ns/op
# Warmup Iteration   3: 112.970 ns/op
Iteration   1: 128.089 ns/op
Iteration   2: 157.521 ns/op
Iteration   3: 166.817 ns/op
Iteration   4: 145.795 ns/op
Iteration   5: 92.025 ns/op
Iteration   6: 146.927 ns/op
Iteration   7: 118.671 ns/op
Iteration   8: 92.055 ns/op
Iteration   9: 117.615 ns/op
Iteration  10: 97.438 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  126.271 ±(99.9%) 23.134 ns/op [Average]
  (min, avg, max) = (92.025, 126.271, 166.817), stdev = 26.641
  CI (99.9%): [103.137, 149.405] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 53.75% complete, ETA 00:17:45
# Fork: 1 of 2
# Warmup Iteration   1: 280.575 ns/op
# Warmup Iteration   2: 19967.806 ns/op
# Warmup Iteration   3: 124.097 ns/op
Iteration   1: 188.088 ns/op
Iteration   2: 227.086 ns/op
Iteration   3: 247.353 ns/op
Iteration   4: 26044.656 ns/op
Iteration   5: 1015.585 ns/op
Iteration   6: 221.248 ns/op
Iteration   7: 176.112 ns/op
Iteration   8: 121.246 ns/op
Iteration   9: 169.889 ns/op
Iteration  10: 126.318 ns/op

# Run progress: 53.82% complete, ETA 00:17:44
# Fork: 2 of 2
# Warmup Iteration   1: 273.965 ns/op
# Warmup Iteration   2: 17257.464 ns/op
# Warmup Iteration   3: 122.467 ns/op
Iteration   1: 186.246 ns/op
Iteration   2: 221.531 ns/op
Iteration   3: 237.504 ns/op
Iteration   4: 26373.699 ns/op
Iteration   5: 357.456 ns/op
Iteration   6: 219.674 ns/op
Iteration   7: 175.250 ns/op
Iteration   8: 121.132 ns/op
Iteration   9: 169.093 ns/op
Iteration  10: 126.193 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2836.268 ±(99.9%) 6943.227 ns/op [Average]
  (min, avg, max) = (121.132, 2836.268, 26373.699), stdev = 7995.831
  CI (99.9%): [≈ 0, 9779.495] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 53.89% complete, ETA 00:17:42
# Fork: 1 of 2
# Warmup Iteration   1: 67.623 ns/op
# Warmup Iteration   2: 158.339 ns/op
# Warmup Iteration   3: 96.466 ns/op
Iteration   1: 178.989 ns/op
Iteration   2: 122.514 ns/op
Iteration   3: 229.723 ns/op
Iteration   4: 113.167 ns/op
Iteration   5: 76.253 ns/op
Iteration   6: 119.093 ns/op
Iteration   7: 96.335 ns/op
Iteration   8: 76.229 ns/op
Iteration   9: 91.580 ns/op
Iteration  10: 81.971 ns/op

# Run progress: 53.96% complete, ETA 00:17:41
# Fork: 2 of 2
# Warmup Iteration   1: 67.887 ns/op
# Warmup Iteration   2: 233.304 ns/op
# Warmup Iteration   3: 86.495 ns/op
Iteration   1: 137.539 ns/op
Iteration   2: 122.088 ns/op
Iteration   3: 252.177 ns/op
Iteration   4: 112.978 ns/op
Iteration   5: 75.844 ns/op
Iteration   6: 120.306 ns/op
Iteration   7: 95.908 ns/op
Iteration   8: 75.887 ns/op
Iteration   9: 91.178 ns/op
Iteration  10: 82.093 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  117.593 ±(99.9%) 43.040 ns/op [Average]
  (min, avg, max) = (75.844, 117.593, 252.177), stdev = 49.565
  CI (99.9%): [74.553, 160.632] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 54.03% complete, ETA 00:17:39
# Fork: 1 of 2
# Warmup Iteration   1: 175.660 ns/op
# Warmup Iteration   2: 2356.414 ns/op
# Warmup Iteration   3: 625.114 ns/op
Iteration   1: 323.180 ns/op
Iteration   2: 450.422 ns/op
Iteration   3: 472.756 ns/op
Iteration   4: 429.289 ns/op
Iteration   5: 132.112 ns/op
Iteration   6: 453.641 ns/op
Iteration   7: 333.054 ns/op
Iteration   8: 131.629 ns/op
Iteration   9: 255.547 ns/op
Iteration  10: 292.520 ns/op

# Run progress: 54.10% complete, ETA 00:17:37
# Fork: 2 of 2
# Warmup Iteration   1: 168.714 ns/op
# Warmup Iteration   2: 876.557 ns/op
# Warmup Iteration   3: 1168.265 ns/op
Iteration   1: 339.786 ns/op
Iteration   2: 459.139 ns/op
Iteration   3: 485.361 ns/op
Iteration   4: 437.484 ns/op
Iteration   5: 148.281 ns/op
Iteration   6: 464.204 ns/op
Iteration   7: 342.974 ns/op
Iteration   8: 148.248 ns/op
Iteration   9: 272.425 ns/op
Iteration  10: 292.996 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  333.252 ±(99.9%) 106.670 ns/op [Average]
  (min, avg, max) = (131.629, 333.252, 485.361), stdev = 122.841
  CI (99.9%): [226.582, 439.923] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 54.17% complete, ETA 00:17:36
# Fork: 1 of 2
# Warmup Iteration   1: 19.899 ns/op
# Warmup Iteration   2: 23.019 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.288 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.017 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.374 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.968 ns/op

# Run progress: 54.24% complete, ETA 00:17:34
# Fork: 2 of 2
# Warmup Iteration   1: 19.423 ns/op
# Warmup Iteration   2: 20.833 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.281 ns/op
Iteration   3: 17.030 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.401 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.963 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.294 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.963, 16.294, 17.110), stdev = 0.953
  CI (99.9%): [15.466, 17.121] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 54.31% complete, ETA 00:17:33
# Fork: 1 of 2
# Warmup Iteration   1: 1004.995 ns/op
# Warmup Iteration   2: 422.817 ns/op
# Warmup Iteration   3: 313.904 ns/op
Iteration   1: 316.436 ns/op
Iteration   2: 313.831 ns/op
Iteration   3: 316.505 ns/op
Iteration   4: 313.987 ns/op
Iteration   5: 317.161 ns/op
Iteration   6: 314.225 ns/op
Iteration   7: 316.482 ns/op
Iteration   8: 316.157 ns/op
Iteration   9: 316.763 ns/op
Iteration  10: 314.296 ns/op

# Run progress: 54.37% complete, ETA 00:17:31
# Fork: 2 of 2
# Warmup Iteration   1: 2328.159 ns/op
# Warmup Iteration   2: 402.054 ns/op
# Warmup Iteration   3: 314.484 ns/op
Iteration   1: 316.084 ns/op
Iteration   2: 313.892 ns/op
Iteration   3: 316.355 ns/op
Iteration   4: 313.712 ns/op
Iteration   5: 315.263 ns/op
Iteration   6: 313.835 ns/op
Iteration   7: 316.338 ns/op
Iteration   8: 316.311 ns/op
Iteration   9: 315.997 ns/op
Iteration  10: 314.134 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  315.388 ±(99.9%) 1.067 ns/op [Average]
  (min, avg, max) = (313.712, 315.388, 317.161), stdev = 1.229
  CI (99.9%): [314.321, 316.455] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 54.44% complete, ETA 00:17:29
# Fork: 1 of 2
# Warmup Iteration   1: 704.642 ns/op
# Warmup Iteration   2: 646.973 ns/op
# Warmup Iteration   3: 501.982 ns/op
Iteration   1: 500.867 ns/op
Iteration   2: 503.035 ns/op
Iteration   3: 500.835 ns/op
Iteration   4: 503.766 ns/op
Iteration   5: 500.831 ns/op
Iteration   6: 502.717 ns/op
Iteration   7: 500.942 ns/op
Iteration   8: 500.758 ns/op
Iteration   9: 500.922 ns/op
Iteration  10: 502.120 ns/op

# Run progress: 54.51% complete, ETA 00:17:28
# Fork: 2 of 2
# Warmup Iteration   1: 712.456 ns/op
# Warmup Iteration   2: 783.801 ns/op
# Warmup Iteration   3: 501.955 ns/op
Iteration   1: 500.646 ns/op
Iteration   2: 502.712 ns/op
Iteration   3: 500.596 ns/op
Iteration   4: 503.580 ns/op
Iteration   5: 500.398 ns/op
Iteration   6: 502.073 ns/op
Iteration   7: 500.582 ns/op
Iteration   8: 500.508 ns/op
Iteration   9: 500.501 ns/op
Iteration  10: 501.841 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  501.511 ±(99.9%) 0.969 ns/op [Average]
  (min, avg, max) = (500.398, 501.511, 503.766), stdev = 1.116
  CI (99.9%): [500.542, 502.481] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 54.58% complete, ETA 00:17:26
# Fork: 1 of 2
# Warmup Iteration   1: 18918.185 ns/op
# Warmup Iteration   2: 475.519 ns/op
# Warmup Iteration   3: 374.449 ns/op
Iteration   1: 345.562 ns/op
Iteration   2: 344.223 ns/op
Iteration   3: 345.474 ns/op
Iteration   4: 346.034 ns/op
Iteration   5: 344.899 ns/op
Iteration   6: 344.241 ns/op
Iteration   7: 345.025 ns/op
Iteration   8: 345.629 ns/op
Iteration   9: 345.363 ns/op
Iteration  10: 344.448 ns/op

# Run progress: 54.65% complete, ETA 00:17:25
# Fork: 2 of 2
# Warmup Iteration   1: 27784.650 ns/op
# Warmup Iteration   2: 1015.786 ns/op
# Warmup Iteration   3: 367.011 ns/op
Iteration   1: 336.378 ns/op
Iteration   2: 337.919 ns/op
Iteration   3: 336.172 ns/op
Iteration   4: 340.188 ns/op
Iteration   5: 336.518 ns/op
Iteration   6: 337.816 ns/op
Iteration   7: 336.198 ns/op
Iteration   8: 336.127 ns/op
Iteration   9: 336.730 ns/op
Iteration  10: 338.070 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  341.151 ±(99.9%) 3.614 ns/op [Average]
  (min, avg, max) = (336.127, 341.151, 346.034), stdev = 4.162
  CI (99.9%): [337.537, 344.764] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 54.72% complete, ETA 00:17:23
# Fork: 1 of 2
# Warmup Iteration   1: 656.521 ns/op
# Warmup Iteration   2: 534.372 ns/op
# Warmup Iteration   3: 415.043 ns/op
Iteration   1: 415.491 ns/op
Iteration   2: 417.196 ns/op
Iteration   3: 414.317 ns/op
Iteration   4: 415.695 ns/op
Iteration   5: 414.381 ns/op
Iteration   6: 415.210 ns/op
Iteration   7: 414.312 ns/op
Iteration   8: 414.457 ns/op
Iteration   9: 414.669 ns/op
Iteration  10: 414.942 ns/op

# Run progress: 54.79% complete, ETA 00:17:21
# Fork: 2 of 2
# Warmup Iteration   1: 956.812 ns/op
# Warmup Iteration   2: 527.218 ns/op
# Warmup Iteration   3: 415.112 ns/op
Iteration   1: 415.315 ns/op
Iteration   2: 416.867 ns/op
Iteration   3: 414.255 ns/op
Iteration   4: 416.168 ns/op
Iteration   5: 415.077 ns/op
Iteration   6: 415.440 ns/op
Iteration   7: 414.519 ns/op
Iteration   8: 414.780 ns/op
Iteration   9: 415.067 ns/op
Iteration  10: 415.748 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  415.195 ±(99.9%) 0.721 ns/op [Average]
  (min, avg, max) = (414.255, 415.195, 417.196), stdev = 0.831
  CI (99.9%): [414.474, 415.917] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 54.86% complete, ETA 00:17:20
# Fork: 1 of 2
# Warmup Iteration   1: 3430.666 ns/op
# Warmup Iteration   2: 2512.939 ns/op
# Warmup Iteration   3: 1775.650 ns/op
Iteration   1: 1776.854 ns/op
Iteration   2: 1775.346 ns/op
Iteration   3: 1776.817 ns/op
Iteration   4: 1805.675 ns/op
Iteration   5: 1791.251 ns/op
Iteration   6: 1791.562 ns/op
Iteration   7: 1793.254 ns/op
Iteration   8: 1792.099 ns/op
Iteration   9: 1792.911 ns/op
Iteration  10: 1791.956 ns/op

# Run progress: 54.93% complete, ETA 00:17:18
# Fork: 2 of 2
# Warmup Iteration   1: 3541.800 ns/op
# Warmup Iteration   2: 2476.482 ns/op
# Warmup Iteration   3: 1789.394 ns/op
Iteration   1: 1789.841 ns/op
Iteration   2: 1791.215 ns/op
Iteration   3: 1789.701 ns/op
Iteration   4: 1816.551 ns/op
Iteration   5: 1805.382 ns/op
Iteration   6: 1806.296 ns/op
Iteration   7: 1804.155 ns/op
Iteration   8: 1804.766 ns/op
Iteration   9: 1804.163 ns/op
Iteration  10: 1804.788 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1795.229 ±(99.9%) 9.632 ns/op [Average]
  (min, avg, max) = (1775.346, 1795.229, 1816.551), stdev = 11.093
  CI (99.9%): [1785.597, 1804.861] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 55.00% complete, ETA 00:17:16
# Fork: 1 of 2
# Warmup Iteration   1: 19.740 ns/op
# Warmup Iteration   2: 22.907 ns/op
# Warmup Iteration   3: 15.034 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.253 ns/op
Iteration   3: 17.009 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.013 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.965 ns/op

# Run progress: 55.07% complete, ETA 00:17:15
# Fork: 2 of 2
# Warmup Iteration   1: 19.239 ns/op
# Warmup Iteration   2: 22.644 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.276 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.387 ns/op
Iteration   7: 17.027 ns/op
Iteration   8: 17.000 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 14.968 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.965, 16.289, 17.110), stdev = 0.953
  CI (99.9%): [15.462, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 55.14% complete, ETA 00:17:13
# Fork: 1 of 2
# Warmup Iteration   1: 996.586 ns/op
# Warmup Iteration   2: 376.015 ns/op
# Warmup Iteration   3: 265.031 ns/op
Iteration   1: 266.989 ns/op
Iteration   2: 266.647 ns/op
Iteration   3: 267.002 ns/op
Iteration   4: 266.055 ns/op
Iteration   5: 267.000 ns/op
Iteration   6: 264.653 ns/op
Iteration   7: 266.879 ns/op
Iteration   8: 266.968 ns/op
Iteration   9: 266.892 ns/op
Iteration  10: 265.689 ns/op

# Run progress: 55.21% complete, ETA 00:17:12
# Fork: 2 of 2
# Warmup Iteration   1: 1671.127 ns/op
# Warmup Iteration   2: 363.385 ns/op
# Warmup Iteration   3: 265.530 ns/op
Iteration   1: 266.616 ns/op
Iteration   2: 266.247 ns/op
Iteration   3: 266.527 ns/op
Iteration   4: 265.796 ns/op
Iteration   5: 266.774 ns/op
Iteration   6: 264.947 ns/op
Iteration   7: 266.622 ns/op
Iteration   8: 266.485 ns/op
Iteration   9: 266.658 ns/op
Iteration  10: 265.009 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  266.323 ±(99.9%) 0.638 ns/op [Average]
  (min, avg, max) = (264.653, 266.323, 267.002), stdev = 0.734
  CI (99.9%): [265.685, 266.960] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 55.28% complete, ETA 00:17:10
# Fork: 1 of 2
# Warmup Iteration   1: 719.209 ns/op
# Warmup Iteration   2: 634.434 ns/op
# Warmup Iteration   3: 490.853 ns/op
Iteration   1: 493.109 ns/op
Iteration   2: 490.948 ns/op
Iteration   3: 492.295 ns/op
Iteration   4: 491.052 ns/op
Iteration   5: 493.697 ns/op
Iteration   6: 490.526 ns/op
Iteration   7: 492.619 ns/op
Iteration   8: 492.267 ns/op
Iteration   9: 492.718 ns/op
Iteration  10: 490.548 ns/op

# Run progress: 55.35% complete, ETA 00:17:08
# Fork: 2 of 2
# Warmup Iteration   1: 713.623 ns/op
# Warmup Iteration   2: 631.330 ns/op
# Warmup Iteration   3: 496.497 ns/op
Iteration   1: 486.430 ns/op
Iteration   2: 486.611 ns/op
Iteration   3: 494.960 ns/op
Iteration   4: 498.455 ns/op
Iteration   5: 496.584 ns/op
Iteration   6: 491.211 ns/op
Iteration   7: 486.056 ns/op
Iteration   8: 495.298 ns/op
Iteration   9: 495.054 ns/op
Iteration  10: 485.612 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  491.802 ±(99.9%) 3.081 ns/op [Average]
  (min, avg, max) = (485.612, 491.802, 498.455), stdev = 3.548
  CI (99.9%): [488.722, 494.883] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 55.42% complete, ETA 00:17:07
# Fork: 1 of 2
# Warmup Iteration   1: 2202.806 ns/op
# Warmup Iteration   2: 393.948 ns/op
# Warmup Iteration   3: 300.608 ns/op
Iteration   1: 300.119 ns/op
Iteration   2: 301.696 ns/op
Iteration   3: 300.103 ns/op
Iteration   4: 304.737 ns/op
Iteration   5: 300.169 ns/op
Iteration   6: 300.534 ns/op
Iteration   7: 299.844 ns/op
Iteration   8: 299.554 ns/op
Iteration   9: 301.183 ns/op
Iteration  10: 300.957 ns/op

# Run progress: 55.49% complete, ETA 00:17:05
# Fork: 2 of 2
# Warmup Iteration   1: 5669.429 ns/op
# Warmup Iteration   2: 444.578 ns/op
# Warmup Iteration   3: 298.779 ns/op
Iteration   1: 298.392 ns/op
Iteration   2: 299.223 ns/op
Iteration   3: 298.130 ns/op
Iteration   4: 301.125 ns/op
Iteration   5: 298.392 ns/op
Iteration   6: 298.623 ns/op
Iteration   7: 298.116 ns/op
Iteration   8: 298.339 ns/op
Iteration   9: 298.299 ns/op
Iteration  10: 298.825 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  299.818 ±(99.9%) 1.416 ns/op [Average]
  (min, avg, max) = (298.116, 299.818, 304.737), stdev = 1.631
  CI (99.9%): [298.402, 301.234] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 55.56% complete, ETA 00:17:04
# Fork: 1 of 2
# Warmup Iteration   1: 490.223 ns/op
# Warmup Iteration   2: 437.203 ns/op
# Warmup Iteration   3: 339.072 ns/op
Iteration   1: 337.538 ns/op
Iteration   2: 339.036 ns/op
Iteration   3: 337.603 ns/op
Iteration   4: 338.928 ns/op
Iteration   5: 337.240 ns/op
Iteration   6: 339.293 ns/op
Iteration   7: 338.846 ns/op
Iteration   8: 337.652 ns/op
Iteration   9: 337.901 ns/op
Iteration  10: 339.065 ns/op

# Run progress: 55.63% complete, ETA 00:17:02
# Fork: 2 of 2
# Warmup Iteration   1: 493.437 ns/op
# Warmup Iteration   2: 428.318 ns/op
# Warmup Iteration   3: 336.171 ns/op
Iteration   1: 334.184 ns/op
Iteration   2: 336.349 ns/op
Iteration   3: 334.343 ns/op
Iteration   4: 336.733 ns/op
Iteration   5: 334.284 ns/op
Iteration   6: 335.619 ns/op
Iteration   7: 334.371 ns/op
Iteration   8: 334.105 ns/op
Iteration   9: 334.365 ns/op
Iteration  10: 336.370 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  336.691 ±(99.9%) 1.646 ns/op [Average]
  (min, avg, max) = (334.105, 336.691, 339.293), stdev = 1.895
  CI (99.9%): [335.046, 338.337] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 55.69% complete, ETA 00:17:00
# Fork: 1 of 2
# Warmup Iteration   1: 851.863 ns/op
# Warmup Iteration   2: 548.119 ns/op
# Warmup Iteration   3: 415.669 ns/op
Iteration   1: 418.136 ns/op
Iteration   2: 416.185 ns/op
Iteration   3: 417.397 ns/op
Iteration   4: 445.579 ns/op
Iteration   5: 438.474 ns/op
Iteration   6: 436.578 ns/op
Iteration   7: 438.471 ns/op
Iteration   8: 437.827 ns/op
Iteration   9: 438.169 ns/op
Iteration  10: 436.845 ns/op

# Run progress: 55.76% complete, ETA 00:16:59
# Fork: 2 of 2
# Warmup Iteration   1: 782.758 ns/op
# Warmup Iteration   2: 582.261 ns/op
# Warmup Iteration   3: 415.571 ns/op
Iteration   1: 418.369 ns/op
Iteration   2: 416.188 ns/op
Iteration   3: 417.788 ns/op
Iteration   4: 445.631 ns/op
Iteration   5: 438.430 ns/op
Iteration   6: 436.732 ns/op
Iteration   7: 437.736 ns/op
Iteration   8: 437.851 ns/op
Iteration   9: 438.220 ns/op
Iteration  10: 436.724 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  432.367 ±(99.9%) 9.026 ns/op [Average]
  (min, avg, max) = (416.185, 432.367, 445.631), stdev = 10.395
  CI (99.9%): [423.340, 441.393] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 55.83% complete, ETA 00:16:57
# Fork: 1 of 2
# Warmup Iteration   1: 19.329 ns/op
# Warmup Iteration   2: 21.056 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.064 ns/op
Iteration   2: 15.261 ns/op
Iteration   3: 17.010 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.100 ns/op
Iteration   6: 15.377 ns/op
Iteration   7: 17.021 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.010 ns/op
Iteration  10: 14.981 ns/op

# Run progress: 55.90% complete, ETA 00:16:56
# Fork: 2 of 2
# Warmup Iteration   1: 19.602 ns/op
# Warmup Iteration   2: 22.844 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.252 ns/op
Iteration   3: 17.014 ns/op
Iteration   4: 15.019 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.399 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.029 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.960 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.960, 16.287, 17.106), stdev = 0.952
  CI (99.9%): [15.460, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 55.97% complete, ETA 00:16:54
# Fork: 1 of 2
# Warmup Iteration   1: 767.589 ns/op
# Warmup Iteration   2: 1924.309 ns/op
# Warmup Iteration   3: 639.071 ns/op
Iteration   1: 21124.834 ns/op
Iteration   2: 21614.591 ns/op
Iteration   3: 23456.608 ns/op
Iteration   4: 21245.767 ns/op
Iteration   5: 9237.418 ns/op
Iteration   6: 23513.644 ns/op
Iteration   7: 347.230 ns/op
Iteration   8: 302.091 ns/op
Iteration   9: 297.806 ns/op
Iteration  10: 344.819 ns/op

# Run progress: 56.04% complete, ETA 00:16:52
# Fork: 2 of 2
# Warmup Iteration   1: 712.763 ns/op
# Warmup Iteration   2: 4088.261 ns/op
# Warmup Iteration   3: 668.579 ns/op
Iteration   1: 21980.494 ns/op
Iteration   2: 21445.564 ns/op
Iteration   3: 24729.933 ns/op
Iteration   4: 17635.677 ns/op
Iteration   5: 18511.246 ns/op
Iteration   6: 23017.687 ns/op
Iteration   7: 638.712 ns/op
Iteration   8: 301.986 ns/op
Iteration   9: 294.270 ns/op
Iteration  10: 350.880 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  12519.563 ±(99.9%) 9253.779 ns/op [Average]
  (min, avg, max) = (294.270, 12519.563, 24729.933), stdev = 10656.666
  CI (99.9%): [3265.784, 21773.342] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 56.11% complete, ETA 00:16:51
# Fork: 1 of 2
# Warmup Iteration   1: 566.989 ns/op
# Warmup Iteration   2: 557.373 ns/op
# Warmup Iteration   3: 456.151 ns/op
Iteration   1: 395.368 ns/op
Iteration   2: 427.142 ns/op
Iteration   3: 398.316 ns/op
Iteration   4: 435.863 ns/op
Iteration   5: 409.124 ns/op
Iteration   6: 423.818 ns/op
Iteration   7: 407.125 ns/op
Iteration   8: 404.912 ns/op
Iteration   9: 397.931 ns/op
Iteration  10: 457.082 ns/op

# Run progress: 56.18% complete, ETA 00:16:49
# Fork: 2 of 2
# Warmup Iteration   1: 566.556 ns/op
# Warmup Iteration   2: 511.230 ns/op
# Warmup Iteration   3: 455.415 ns/op
Iteration   1: 391.568 ns/op
Iteration   2: 424.017 ns/op
Iteration   3: 396.519 ns/op
Iteration   4: 436.190 ns/op
Iteration   5: 410.453 ns/op
Iteration   6: 422.629 ns/op
Iteration   7: 408.394 ns/op
Iteration   8: 405.290 ns/op
Iteration   9: 394.435 ns/op
Iteration  10: 456.876 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  415.153 ±(99.9%) 17.135 ns/op [Average]
  (min, avg, max) = (391.568, 415.153, 457.082), stdev = 19.733
  CI (99.9%): [398.017, 432.288] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 56.25% complete, ETA 00:16:48
# Fork: 1 of 2
# Warmup Iteration   1: 3387.525 ns/op
# Warmup Iteration   2: 35576.383 ns/op
# Warmup Iteration   3: 971.994 ns/op
Iteration   1: 1613.416 ns/op
Iteration   2: 419.535 ns/op
Iteration   3: 391.857 ns/op
Iteration   4: 9970.498 ns/op
Iteration   5: 361.589 ns/op
Iteration   6: 323.547 ns/op
Iteration   7: 396.449 ns/op
Iteration   8: 400.611 ns/op
Iteration   9: 333.256 ns/op
Iteration  10: 401.649 ns/op

# Run progress: 56.32% complete, ETA 00:16:46
# Fork: 2 of 2
# Warmup Iteration   1: 3130.035 ns/op
# Warmup Iteration   2: 35412.211 ns/op
# Warmup Iteration   3: 1107.184 ns/op
Iteration   1: 985.342 ns/op
Iteration   2: 419.180 ns/op
Iteration   3: 393.725 ns/op
Iteration   4: 10048.373 ns/op
Iteration   5: 360.298 ns/op
Iteration   6: 324.679 ns/op
Iteration   7: 397.199 ns/op
Iteration   8: 397.790 ns/op
Iteration   9: 332.955 ns/op
Iteration  10: 400.637 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1433.629 ±(99.9%) 2560.175 ns/op [Average]
  (min, avg, max) = (323.547, 1433.629, 10048.373), stdev = 2948.301
  CI (99.9%): [≈ 0, 3993.804] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 56.39% complete, ETA 00:16:44
# Fork: 1 of 2
# Warmup Iteration   1: 749.919 ns/op
# Warmup Iteration   2: 835.562 ns/op
# Warmup Iteration   3: 649.486 ns/op
Iteration   1: 342.872 ns/op
Iteration   2: 358.503 ns/op
Iteration   3: 347.568 ns/op
Iteration   4: 342.092 ns/op
Iteration   5: 328.867 ns/op
Iteration   6: 342.041 ns/op
Iteration   7: 339.949 ns/op
Iteration   8: 329.566 ns/op
Iteration   9: 309.407 ns/op
Iteration  10: 383.250 ns/op

# Run progress: 56.46% complete, ETA 00:16:43
# Fork: 2 of 2
# Warmup Iteration   1: 513.400 ns/op
# Warmup Iteration   2: 1377.857 ns/op
# Warmup Iteration   3: 595.880 ns/op
Iteration   1: 340.577 ns/op
Iteration   2: 361.332 ns/op
Iteration   3: 346.424 ns/op
Iteration   4: 341.117 ns/op
Iteration   5: 329.494 ns/op
Iteration   6: 343.520 ns/op
Iteration   7: 340.400 ns/op
Iteration   8: 326.569 ns/op
Iteration   9: 309.213 ns/op
Iteration  10: 384.833 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  342.380 ±(99.9%) 16.788 ns/op [Average]
  (min, avg, max) = (309.213, 342.380, 384.833), stdev = 19.333
  CI (99.9%): [325.592, 359.168] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 56.53% complete, ETA 00:16:41
# Fork: 1 of 2
# Warmup Iteration   1: 3025.960 ns/op
# Warmup Iteration   2: 2044.005 ns/op
# Warmup Iteration   3: 1659.824 ns/op
Iteration   1: 1571.839 ns/op
Iteration   2: 1616.531 ns/op
Iteration   3: 1553.156 ns/op
Iteration   4: 1629.072 ns/op
Iteration   5: 1592.266 ns/op
Iteration   6: 1602.738 ns/op
Iteration   7: 1581.115 ns/op
Iteration   8: 1581.211 ns/op
Iteration   9: 1576.909 ns/op
Iteration  10: 1675.285 ns/op

# Run progress: 56.60% complete, ETA 00:16:40
# Fork: 2 of 2
# Warmup Iteration   1: 3185.073 ns/op
# Warmup Iteration   2: 2157.504 ns/op
# Warmup Iteration   3: 1651.023 ns/op
Iteration   1: 1557.899 ns/op
Iteration   2: 1603.772 ns/op
Iteration   3: 1537.896 ns/op
Iteration   4: 1624.376 ns/op
Iteration   5: 1603.413 ns/op
Iteration   6: 1600.131 ns/op
Iteration   7: 1569.773 ns/op
Iteration   8: 1575.353 ns/op
Iteration   9: 1572.424 ns/op
Iteration  10: 1692.635 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1595.890 ±(99.9%) 33.250 ns/op [Average]
  (min, avg, max) = (1537.896, 1595.890, 1692.635), stdev = 38.291
  CI (99.9%): [1562.639, 1629.140] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 56.67% complete, ETA 00:16:38
# Fork: 1 of 2
# Warmup Iteration   1: 19.822 ns/op
# Warmup Iteration   2: 22.447 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.284 ns/op
Iteration   3: 17.006 ns/op
Iteration   4: 15.029 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.395 ns/op
Iteration   7: 17.008 ns/op
Iteration   8: 17.012 ns/op
Iteration   9: 17.010 ns/op
Iteration  10: 14.957 ns/op

# Run progress: 56.74% complete, ETA 00:16:36
# Fork: 2 of 2
# Warmup Iteration   1: 19.461 ns/op
# Warmup Iteration   2: 22.789 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.262 ns/op
Iteration   3: 17.014 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.957, 16.289, 17.109), stdev = 0.950
  CI (99.9%): [15.464, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 56.81% complete, ETA 00:16:35
# Fork: 1 of 2
# Warmup Iteration   1: 323.392 ns/op
# Warmup Iteration   2: 283.132 ns/op
# Warmup Iteration   3: 219.816 ns/op
Iteration   1: 220.945 ns/op
Iteration   2: 219.564 ns/op
Iteration   3: 221.106 ns/op
Iteration   4: 225.920 ns/op
Iteration   5: 221.060 ns/op
Iteration   6: 219.683 ns/op
Iteration   7: 221.052 ns/op
Iteration   8: 221.049 ns/op
Iteration   9: 221.059 ns/op
Iteration  10: 219.712 ns/op

# Run progress: 56.88% complete, ETA 00:16:33
# Fork: 2 of 2
# Warmup Iteration   1: 314.747 ns/op
# Warmup Iteration   2: 313.286 ns/op
# Warmup Iteration   3: 219.649 ns/op
Iteration   1: 220.768 ns/op
Iteration   2: 219.535 ns/op
Iteration   3: 220.688 ns/op
Iteration   4: 225.673 ns/op
Iteration   5: 220.751 ns/op
Iteration   6: 219.464 ns/op
Iteration   7: 220.734 ns/op
Iteration   8: 220.700 ns/op
Iteration   9: 220.808 ns/op
Iteration  10: 219.538 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  220.990 ±(99.9%) 1.525 ns/op [Average]
  (min, avg, max) = (219.464, 220.990, 225.920), stdev = 1.756
  CI (99.9%): [219.466, 222.515] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 56.94% complete, ETA 00:16:32
# Fork: 1 of 2
# Warmup Iteration   1: 502.944 ns/op
# Warmup Iteration   2: 462.489 ns/op
# Warmup Iteration   3: 354.461 ns/op
Iteration   1: 354.456 ns/op
Iteration   2: 357.445 ns/op
Iteration   3: 354.512 ns/op
Iteration   4: 355.244 ns/op
Iteration   5: 354.636 ns/op
Iteration   6: 355.309 ns/op
Iteration   7: 354.272 ns/op
Iteration   8: 354.383 ns/op
Iteration   9: 354.400 ns/op
Iteration  10: 354.912 ns/op

# Run progress: 57.01% complete, ETA 00:16:30
# Fork: 2 of 2
# Warmup Iteration   1: 499.799 ns/op
# Warmup Iteration   2: 503.317 ns/op
# Warmup Iteration   3: 354.767 ns/op
Iteration   1: 354.100 ns/op
Iteration   2: 356.966 ns/op
Iteration   3: 354.355 ns/op
Iteration   4: 355.249 ns/op
Iteration   5: 354.223 ns/op
Iteration   6: 355.082 ns/op
Iteration   7: 354.356 ns/op
Iteration   8: 354.368 ns/op
Iteration   9: 354.252 ns/op
Iteration  10: 355.198 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  354.886 ±(99.9%) 0.771 ns/op [Average]
  (min, avg, max) = (354.100, 354.886, 357.445), stdev = 0.888
  CI (99.9%): [354.115, 355.657] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 57.08% complete, ETA 00:16:28
# Fork: 1 of 2
# Warmup Iteration   1: 443.680 ns/op
# Warmup Iteration   2: 155.729 ns/op
# Warmup Iteration   3: 106.298 ns/op
Iteration   1: 104.865 ns/op
Iteration   2: 106.472 ns/op
Iteration   3: 104.820 ns/op
Iteration   4: 107.244 ns/op
Iteration   5: 105.128 ns/op
Iteration   6: 106.193 ns/op
Iteration   7: 104.841 ns/op
Iteration   8: 104.837 ns/op
Iteration   9: 104.837 ns/op
Iteration  10: 106.125 ns/op

# Run progress: 57.15% complete, ETA 00:16:27
# Fork: 2 of 2
# Warmup Iteration   1: 576.886 ns/op
# Warmup Iteration   2: 148.352 ns/op
# Warmup Iteration   3: 106.301 ns/op
Iteration   1: 104.863 ns/op
Iteration   2: 106.438 ns/op
Iteration   3: 104.850 ns/op
Iteration   4: 107.341 ns/op
Iteration   5: 105.147 ns/op
Iteration   6: 106.231 ns/op
Iteration   7: 104.824 ns/op
Iteration   8: 104.870 ns/op
Iteration   9: 104.908 ns/op
Iteration  10: 106.178 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  105.551 ±(99.9%) 0.760 ns/op [Average]
  (min, avg, max) = (104.820, 105.551, 107.341), stdev = 0.875
  CI (99.9%): [104.791, 106.310] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 57.22% complete, ETA 00:16:25
# Fork: 1 of 2
# Warmup Iteration   1: 340.474 ns/op
# Warmup Iteration   2: 311.939 ns/op
# Warmup Iteration   3: 237.548 ns/op
Iteration   1: 236.052 ns/op
Iteration   2: 238.141 ns/op
Iteration   3: 236.009 ns/op
Iteration   4: 237.884 ns/op
Iteration   5: 236.165 ns/op
Iteration   6: 237.672 ns/op
Iteration   7: 235.994 ns/op
Iteration   8: 236.150 ns/op
Iteration   9: 236.313 ns/op
Iteration  10: 237.847 ns/op

# Run progress: 57.29% complete, ETA 00:16:24
# Fork: 2 of 2
# Warmup Iteration   1: 362.449 ns/op
# Warmup Iteration   2: 353.484 ns/op
# Warmup Iteration   3: 237.664 ns/op
Iteration   1: 236.087 ns/op
Iteration   2: 238.132 ns/op
Iteration   3: 235.781 ns/op
Iteration   4: 237.837 ns/op
Iteration   5: 236.139 ns/op
Iteration   6: 237.570 ns/op
Iteration   7: 236.037 ns/op
Iteration   8: 236.122 ns/op
Iteration   9: 235.969 ns/op
Iteration  10: 237.880 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  236.789 ±(99.9%) 0.798 ns/op [Average]
  (min, avg, max) = (235.781, 236.789, 238.141), stdev = 0.919
  CI (99.9%): [235.991, 237.587] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 57.36% complete, ETA 00:16:22
# Fork: 1 of 2
# Warmup Iteration   1: 251.995 ns/op
# Warmup Iteration   2: 211.374 ns/op
# Warmup Iteration   3: 146.841 ns/op
Iteration   1: 148.224 ns/op
Iteration   2: 172.760 ns/op
Iteration   3: 148.086 ns/op
Iteration   4: 185.174 ns/op
Iteration   5: 161.858 ns/op
Iteration   6: 160.749 ns/op
Iteration   7: 161.872 ns/op
Iteration   8: 161.918 ns/op
Iteration   9: 161.907 ns/op
Iteration  10: 160.847 ns/op

# Run progress: 57.43% complete, ETA 00:16:20
# Fork: 2 of 2
# Warmup Iteration   1: 224.063 ns/op
# Warmup Iteration   2: 210.336 ns/op
# Warmup Iteration   3: 146.857 ns/op
Iteration   1: 148.279 ns/op
Iteration   2: 152.793 ns/op
Iteration   3: 148.138 ns/op
Iteration   4: 165.844 ns/op
Iteration   5: 162.502 ns/op
Iteration   6: 160.710 ns/op
Iteration   7: 161.871 ns/op
Iteration   8: 161.817 ns/op
Iteration   9: 161.929 ns/op
Iteration  10: 160.900 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  160.409 ±(99.9%) 7.642 ns/op [Average]
  (min, avg, max) = (148.086, 160.409, 185.174), stdev = 8.801
  CI (99.9%): [152.767, 168.051] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 57.50% complete, ETA 00:16:19
# Fork: 1 of 2
# Warmup Iteration   1: 19.461 ns/op
# Warmup Iteration   2: 22.910 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.069 ns/op
Iteration   2: 15.225 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.003 ns/op
Iteration   5: 17.112 ns/op
Iteration   6: 15.378 ns/op
Iteration   7: 17.015 ns/op
Iteration   8: 17.026 ns/op
Iteration   9: 16.991 ns/op
Iteration  10: 14.967 ns/op

# Run progress: 57.57% complete, ETA 00:16:17
# Fork: 2 of 2
# Warmup Iteration   1: 19.753 ns/op
# Warmup Iteration   2: 21.059 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.258 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.371 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.006 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.968 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.284 ±(99.9%) 0.831 ns/op [Average]
  (min, avg, max) = (14.967, 16.284, 17.112), stdev = 0.957
  CI (99.9%): [15.453, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 57.64% complete, ETA 00:16:16
# Fork: 1 of 2
# Warmup Iteration   1: 482.106 ns/op
# Warmup Iteration   2: 2002.569 ns/op
# Warmup Iteration   3: 211.734 ns/op
Iteration   1: 15822.976 ns/op
Iteration   2: 270.840 ns/op
Iteration   3: 287.467 ns/op
Iteration   4: 259.667 ns/op
Iteration   5: 213.751 ns/op
Iteration   6: 294.702 ns/op
Iteration   7: 238.066 ns/op
Iteration   8: 213.948 ns/op
Iteration   9: 243.151 ns/op
Iteration  10: 215.452 ns/op

# Run progress: 57.71% complete, ETA 00:16:14
# Fork: 2 of 2
# Warmup Iteration   1: 541.456 ns/op
# Warmup Iteration   2: 2799.688 ns/op
# Warmup Iteration   3: 211.167 ns/op
Iteration   1: 15267.139 ns/op
Iteration   2: 270.423 ns/op
Iteration   3: 299.874 ns/op
Iteration   4: 267.881 ns/op
Iteration   5: 216.865 ns/op
Iteration   6: 299.283 ns/op
Iteration   7: 237.511 ns/op
Iteration   8: 215.719 ns/op
Iteration   9: 242.645 ns/op
Iteration  10: 218.211 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1779.779 ±(99.9%) 4088.728 ns/op [Average]
  (min, avg, max) = (213.751, 1779.779, 15822.976), stdev = 4708.585
  CI (99.9%): [≈ 0, 5868.506] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 57.78% complete, ETA 00:16:12
# Fork: 1 of 2
# Warmup Iteration   1: 859.762 ns/op
# Warmup Iteration   2: 1901.795 ns/op
# Warmup Iteration   3: 617.433 ns/op
Iteration   1: 672.412 ns/op
Iteration   2: 656.340 ns/op
Iteration   3: 669.045 ns/op
Iteration   4: 641.788 ns/op
Iteration   5: 611.497 ns/op
Iteration   6: 657.665 ns/op
Iteration   7: 679.557 ns/op
Iteration   8: 611.730 ns/op
Iteration   9: 731.961 ns/op
Iteration  10: 617.533 ns/op

# Run progress: 57.85% complete, ETA 00:16:11
# Fork: 2 of 2
# Warmup Iteration   1: 875.144 ns/op
# Warmup Iteration   2: 1314.790 ns/op
# Warmup Iteration   3: 616.133 ns/op
Iteration   1: 666.683 ns/op
Iteration   2: 649.276 ns/op
Iteration   3: 663.845 ns/op
Iteration   4: 637.182 ns/op
Iteration   5: 611.023 ns/op
Iteration   6: 650.539 ns/op
Iteration   7: 674.792 ns/op
Iteration   8: 610.254 ns/op
Iteration   9: 726.097 ns/op
Iteration  10: 616.548 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  652.788 ±(99.9%) 30.686 ns/op [Average]
  (min, avg, max) = (610.254, 652.788, 731.961), stdev = 35.338
  CI (99.9%): [622.102, 683.474] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 57.92% complete, ETA 00:16:09
# Fork: 1 of 2
# Warmup Iteration   1: 621.886 ns/op
# Warmup Iteration   2: 850.694 ns/op
# Warmup Iteration   3: 296.577 ns/op
Iteration   1: 220.815 ns/op
Iteration   2: 22799.630 ns/op
Iteration   3: 291.796 ns/op
Iteration   4: 882.900 ns/op
Iteration   5: 183.275 ns/op
Iteration   6: 257.100 ns/op
Iteration   7: 233.495 ns/op
Iteration   8: 183.138 ns/op
Iteration   9: 193.173 ns/op
Iteration  10: 187.841 ns/op

# Run progress: 57.99% complete, ETA 00:16:08
# Fork: 2 of 2
# Warmup Iteration   1: 626.251 ns/op
# Warmup Iteration   2: 1622.254 ns/op
# Warmup Iteration   3: 247.428 ns/op
Iteration   1: 225.690 ns/op
Iteration   2: 40047.513 ns/op
Iteration   3: 3428.490 ns/op
Iteration   4: 662.727 ns/op
Iteration   5: 184.477 ns/op
Iteration   6: 256.696 ns/op
Iteration   7: 233.434 ns/op
Iteration   8: 184.504 ns/op
Iteration   9: 193.714 ns/op
Iteration  10: 188.855 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3551.963 ±(99.9%) 8649.163 ns/op [Average]
  (min, avg, max) = (183.138, 3551.963, 40047.513), stdev = 9960.389
  CI (99.9%): [≈ 0, 12201.126] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 58.06% complete, ETA 00:16:06
# Fork: 1 of 2
# Warmup Iteration   1: 661.264 ns/op
# Warmup Iteration   2: 945.370 ns/op
# Warmup Iteration   3: 622.827 ns/op
Iteration   1: 374.428 ns/op
Iteration   2: 376.896 ns/op
Iteration   3: 366.694 ns/op
Iteration   4: 377.967 ns/op
Iteration   5: 381.630 ns/op
Iteration   6: 376.559 ns/op
Iteration   7: 383.061 ns/op
Iteration   8: 381.703 ns/op
Iteration   9: 382.863 ns/op
Iteration  10: 399.671 ns/op

# Run progress: 58.13% complete, ETA 00:16:04
# Fork: 2 of 2
# Warmup Iteration   1: 654.042 ns/op
# Warmup Iteration   2: 842.269 ns/op
# Warmup Iteration   3: 480.609 ns/op
Iteration   1: 373.853 ns/op
Iteration   2: 374.594 ns/op
Iteration   3: 362.490 ns/op
Iteration   4: 374.691 ns/op
Iteration   5: 386.702 ns/op
Iteration   6: 373.975 ns/op
Iteration   7: 380.013 ns/op
Iteration   8: 386.788 ns/op
Iteration   9: 377.471 ns/op
Iteration  10: 397.584 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  379.482 ±(99.9%) 7.672 ns/op [Average]
  (min, avg, max) = (362.490, 379.482, 399.671), stdev = 8.835
  CI (99.9%): [371.810, 387.154] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 58.19% complete, ETA 00:16:03
# Fork: 1 of 2
# Warmup Iteration   1: 251.995 ns/op
# Warmup Iteration   2: 3405.545 ns/op
# Warmup Iteration   3: 689.385 ns/op
Iteration   1: 352.549 ns/op
Iteration   2: 503.359 ns/op
Iteration   3: 475.208 ns/op
Iteration   4: 516.787 ns/op
Iteration   5: 182.365 ns/op
Iteration   6: 493.649 ns/op
Iteration   7: 379.316 ns/op
Iteration   8: 181.885 ns/op
Iteration   9: 310.143 ns/op
Iteration  10: 359.492 ns/op

# Run progress: 58.26% complete, ETA 00:16:01
# Fork: 2 of 2
# Warmup Iteration   1: 270.031 ns/op
# Warmup Iteration   2: 8533.738 ns/op
# Warmup Iteration   3: 674.709 ns/op
Iteration   1: 346.953 ns/op
Iteration   2: 486.087 ns/op
Iteration   3: 465.154 ns/op
Iteration   4: 608.689 ns/op
Iteration   5: 182.859 ns/op
Iteration   6: 484.476 ns/op
Iteration   7: 375.292 ns/op
Iteration   8: 182.537 ns/op
Iteration   9: 307.686 ns/op
Iteration  10: 352.058 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  377.327 ±(99.9%) 110.349 ns/op [Average]
  (min, avg, max) = (181.885, 377.327, 608.689), stdev = 127.078
  CI (99.9%): [266.978, 487.677] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 58.33% complete, ETA 00:16:00
# Fork: 1 of 2
# Warmup Iteration   1: 19.829 ns/op
# Warmup Iteration   2: 22.683 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.292 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.383 ns/op
Iteration   7: 17.008 ns/op
Iteration   8: 17.013 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.960 ns/op

# Run progress: 58.40% complete, ETA 00:15:58
# Fork: 2 of 2
# Warmup Iteration   1: 19.467 ns/op
# Warmup Iteration   2: 23.800 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.057 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.018 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.381 ns/op
Iteration   7: 17.033 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.006 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.960, 16.289, 17.111), stdev = 0.950
  CI (99.9%): [15.464, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 58.47% complete, ETA 00:15:56
# Fork: 1 of 2
# Warmup Iteration   1: 773.627 ns/op
# Warmup Iteration   2: 477.263 ns/op
# Warmup Iteration   3: 351.670 ns/op
Iteration   1: 344.902 ns/op
Iteration   2: 353.305 ns/op
Iteration   3: 353.552 ns/op
Iteration   4: 342.379 ns/op
Iteration   5: 353.442 ns/op
Iteration   6: 343.632 ns/op
Iteration   7: 344.343 ns/op
Iteration   8: 344.390 ns/op
Iteration   9: 353.564 ns/op
Iteration  10: 349.784 ns/op

# Run progress: 58.54% complete, ETA 00:15:55
# Fork: 2 of 2
# Warmup Iteration   1: 781.944 ns/op
# Warmup Iteration   2: 484.855 ns/op
# Warmup Iteration   3: 344.359 ns/op
Iteration   1: 346.445 ns/op
Iteration   2: 344.620 ns/op
Iteration   3: 346.134 ns/op
Iteration   4: 346.254 ns/op
Iteration   5: 345.807 ns/op
Iteration   6: 346.072 ns/op
Iteration   7: 345.651 ns/op
Iteration   8: 345.579 ns/op
Iteration   9: 346.117 ns/op
Iteration  10: 345.292 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  347.063 ±(99.9%) 3.105 ns/op [Average]
  (min, avg, max) = (342.379, 347.063, 353.564), stdev = 3.576
  CI (99.9%): [343.958, 350.169] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 58.61% complete, ETA 00:15:53
# Fork: 1 of 2
# Warmup Iteration   1: 582.261 ns/op
# Warmup Iteration   2: 483.169 ns/op
# Warmup Iteration   3: 373.330 ns/op
Iteration   1: 372.972 ns/op
Iteration   2: 374.856 ns/op
Iteration   3: 372.543 ns/op
Iteration   4: 375.152 ns/op
Iteration   5: 373.063 ns/op
Iteration   6: 373.321 ns/op
Iteration   7: 372.866 ns/op
Iteration   8: 372.569 ns/op
Iteration   9: 372.613 ns/op
Iteration  10: 373.327 ns/op

# Run progress: 58.68% complete, ETA 00:15:52
# Fork: 2 of 2
# Warmup Iteration   1: 532.090 ns/op
# Warmup Iteration   2: 477.446 ns/op
# Warmup Iteration   3: 373.130 ns/op
Iteration   1: 372.921 ns/op
Iteration   2: 375.039 ns/op
Iteration   3: 372.581 ns/op
Iteration   4: 375.114 ns/op
Iteration   5: 372.721 ns/op
Iteration   6: 373.260 ns/op
Iteration   7: 372.591 ns/op
Iteration   8: 372.710 ns/op
Iteration   9: 372.535 ns/op
Iteration  10: 373.186 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  373.297 ±(99.9%) 0.810 ns/op [Average]
  (min, avg, max) = (372.535, 373.297, 375.152), stdev = 0.933
  CI (99.9%): [372.487, 374.107] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 58.75% complete, ETA 00:15:50
# Fork: 1 of 2
# Warmup Iteration   1: 7660.988 ns/op
# Warmup Iteration   2: 632.128 ns/op
# Warmup Iteration   3: 396.732 ns/op
Iteration   1: 397.400 ns/op
Iteration   2: 396.867 ns/op
Iteration   3: 396.677 ns/op
Iteration   4: 400.739 ns/op
Iteration   5: 396.868 ns/op
Iteration   6: 396.578 ns/op
Iteration   7: 396.966 ns/op
Iteration   8: 396.961 ns/op
Iteration   9: 396.816 ns/op
Iteration  10: 396.555 ns/op

# Run progress: 58.82% complete, ETA 00:15:48
# Fork: 2 of 2
# Warmup Iteration   1: 20666.313 ns/op
# Warmup Iteration   2: 549.056 ns/op
# Warmup Iteration   3: 429.927 ns/op
Iteration   1: 399.155 ns/op
Iteration   2: 399.466 ns/op
Iteration   3: 397.030 ns/op
Iteration   4: 403.827 ns/op
Iteration   5: 398.064 ns/op
Iteration   6: 398.319 ns/op
Iteration   7: 397.065 ns/op
Iteration   8: 396.604 ns/op
Iteration   9: 397.355 ns/op
Iteration  10: 398.145 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  397.873 ±(99.9%) 1.559 ns/op [Average]
  (min, avg, max) = (396.555, 397.873, 403.827), stdev = 1.796
  CI (99.9%): [396.314, 399.432] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 58.89% complete, ETA 00:15:47
# Fork: 1 of 2
# Warmup Iteration   1: 538.482 ns/op
# Warmup Iteration   2: 441.033 ns/op
# Warmup Iteration   3: 343.125 ns/op
Iteration   1: 342.363 ns/op
Iteration   2: 343.583 ns/op
Iteration   3: 342.362 ns/op
Iteration   4: 344.623 ns/op
Iteration   5: 341.044 ns/op
Iteration   6: 343.439 ns/op
Iteration   7: 341.394 ns/op
Iteration   8: 341.644 ns/op
Iteration   9: 341.978 ns/op
Iteration  10: 343.011 ns/op

# Run progress: 58.96% complete, ETA 00:15:45
# Fork: 2 of 2
# Warmup Iteration   1: 618.356 ns/op
# Warmup Iteration   2: 488.885 ns/op
# Warmup Iteration   3: 344.991 ns/op
Iteration   1: 343.669 ns/op
Iteration   2: 345.332 ns/op
Iteration   3: 343.928 ns/op
Iteration   4: 346.680 ns/op
Iteration   5: 343.954 ns/op
Iteration   6: 345.466 ns/op
Iteration   7: 343.316 ns/op
Iteration   8: 343.176 ns/op
Iteration   9: 343.256 ns/op
Iteration  10: 345.274 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  343.475 ±(99.9%) 1.282 ns/op [Average]
  (min, avg, max) = (341.044, 343.475, 346.680), stdev = 1.476
  CI (99.9%): [342.193, 344.757] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 59.03% complete, ETA 00:15:44
# Fork: 1 of 2
# Warmup Iteration   1: 3228.818 ns/op
# Warmup Iteration   2: 2170.885 ns/op
# Warmup Iteration   3: 1564.376 ns/op
Iteration   1: 1563.797 ns/op
Iteration   2: 1565.981 ns/op
Iteration   3: 1564.881 ns/op
Iteration   4: 1580.249 ns/op
Iteration   5: 1576.832 ns/op
Iteration   6: 1575.344 ns/op
Iteration   7: 1574.405 ns/op
Iteration   8: 1575.683 ns/op
Iteration   9: 1574.264 ns/op
Iteration  10: 1573.826 ns/op

# Run progress: 59.10% complete, ETA 00:15:42
# Fork: 2 of 2
# Warmup Iteration   1: 2693.860 ns/op
# Warmup Iteration   2: 2097.354 ns/op
# Warmup Iteration   3: 1533.556 ns/op
Iteration   1: 1532.617 ns/op
Iteration   2: 1533.782 ns/op
Iteration   3: 1531.440 ns/op
Iteration   4: 1550.567 ns/op
Iteration   5: 1545.603 ns/op
Iteration   6: 1545.718 ns/op
Iteration   7: 1544.541 ns/op
Iteration   8: 1547.145 ns/op
Iteration   9: 1544.007 ns/op
Iteration  10: 1541.994 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1557.134 ±(99.9%) 14.672 ns/op [Average]
  (min, avg, max) = (1531.440, 1557.134, 1580.249), stdev = 16.896
  CI (99.9%): [1542.462, 1571.805] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 59.17% complete, ETA 00:15:40
# Fork: 1 of 2
# Warmup Iteration   1: 19.356 ns/op
# Warmup Iteration   2: 23.072 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.257 ns/op
Iteration   3: 17.008 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.102 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.971 ns/op

# Run progress: 59.24% complete, ETA 00:15:39
# Fork: 2 of 2
# Warmup Iteration   1: 19.365 ns/op
# Warmup Iteration   2: 22.897 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.270 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.116 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 14.967 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.967, 16.291, 17.116), stdev = 0.953
  CI (99.9%): [15.463, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 59.31% complete, ETA 00:15:37
# Fork: 1 of 2
# Warmup Iteration   1: 887.805 ns/op
# Warmup Iteration   2: 495.818 ns/op
# Warmup Iteration   3: 343.784 ns/op
Iteration   1: 346.872 ns/op
Iteration   2: 343.449 ns/op
Iteration   3: 347.117 ns/op
Iteration   4: 342.884 ns/op
Iteration   5: 347.302 ns/op
Iteration   6: 342.974 ns/op
Iteration   7: 346.993 ns/op
Iteration   8: 347.376 ns/op
Iteration   9: 347.384 ns/op
Iteration  10: 344.823 ns/op

# Run progress: 59.38% complete, ETA 00:15:36
# Fork: 2 of 2
# Warmup Iteration   1: 784.349 ns/op
# Warmup Iteration   2: 486.274 ns/op
# Warmup Iteration   3: 349.602 ns/op
Iteration   1: 350.965 ns/op
Iteration   2: 349.846 ns/op
Iteration   3: 350.758 ns/op
Iteration   4: 349.475 ns/op
Iteration   5: 350.282 ns/op
Iteration   6: 350.182 ns/op
Iteration   7: 350.508 ns/op
Iteration   8: 350.790 ns/op
Iteration   9: 350.772 ns/op
Iteration  10: 349.825 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  348.029 ±(99.9%) 2.387 ns/op [Average]
  (min, avg, max) = (342.884, 348.029, 350.965), stdev = 2.749
  CI (99.9%): [345.642, 350.416] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 59.44% complete, ETA 00:15:34
# Fork: 1 of 2
# Warmup Iteration   1: 577.655 ns/op
# Warmup Iteration   2: 510.930 ns/op
# Warmup Iteration   3: 400.481 ns/op
Iteration   1: 398.631 ns/op
Iteration   2: 401.095 ns/op
Iteration   3: 398.598 ns/op
Iteration   4: 400.306 ns/op
Iteration   5: 398.637 ns/op
Iteration   6: 400.487 ns/op
Iteration   7: 398.822 ns/op
Iteration   8: 398.955 ns/op
Iteration   9: 398.673 ns/op
Iteration  10: 400.054 ns/op

# Run progress: 59.51% complete, ETA 00:15:32
# Fork: 2 of 2
# Warmup Iteration   1: 589.464 ns/op
# Warmup Iteration   2: 545.469 ns/op
# Warmup Iteration   3: 417.739 ns/op
Iteration   1: 418.446 ns/op
Iteration   2: 418.463 ns/op
Iteration   3: 418.074 ns/op
Iteration   4: 422.799 ns/op
Iteration   5: 417.757 ns/op
Iteration   6: 418.904 ns/op
Iteration   7: 417.880 ns/op
Iteration   8: 418.230 ns/op
Iteration   9: 418.034 ns/op
Iteration  10: 417.464 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  409.015 ±(99.9%) 8.611 ns/op [Average]
  (min, avg, max) = (398.598, 409.015, 422.799), stdev = 9.917
  CI (99.9%): [400.404, 417.627] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 59.58% complete, ETA 00:15:31
# Fork: 1 of 2
# Warmup Iteration   1: 11254.796 ns/op
# Warmup Iteration   2: 489.366 ns/op
# Warmup Iteration   3: 335.361 ns/op
Iteration   1: 334.483 ns/op
Iteration   2: 335.221 ns/op
Iteration   3: 334.356 ns/op
Iteration   4: 336.395 ns/op
Iteration   5: 334.442 ns/op
Iteration   6: 335.025 ns/op
Iteration   7: 334.289 ns/op
Iteration   8: 334.032 ns/op
Iteration   9: 334.303 ns/op
Iteration  10: 335.099 ns/op

# Run progress: 59.65% complete, ETA 00:15:29
# Fork: 2 of 2
# Warmup Iteration   1: 2924.387 ns/op
# Warmup Iteration   2: 391.089 ns/op
# Warmup Iteration   3: 333.698 ns/op
Iteration   1: 331.326 ns/op
Iteration   2: 333.705 ns/op
Iteration   3: 330.643 ns/op
Iteration   4: 336.826 ns/op
Iteration   5: 330.756 ns/op
Iteration   6: 333.635 ns/op
Iteration   7: 330.582 ns/op
Iteration   8: 330.445 ns/op
Iteration   9: 331.043 ns/op
Iteration  10: 333.718 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  333.516 ±(99.9%) 1.735 ns/op [Average]
  (min, avg, max) = (330.445, 333.516, 336.826), stdev = 1.998
  CI (99.9%): [331.781, 335.251] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 59.72% complete, ETA 00:15:28
# Fork: 1 of 2
# Warmup Iteration   1: 475.709 ns/op
# Warmup Iteration   2: 396.285 ns/op
# Warmup Iteration   3: 306.566 ns/op
Iteration   1: 304.924 ns/op
Iteration   2: 307.573 ns/op
Iteration   3: 304.728 ns/op
Iteration   4: 306.467 ns/op
Iteration   5: 305.071 ns/op
Iteration   6: 306.872 ns/op
Iteration   7: 304.684 ns/op
Iteration   8: 304.474 ns/op
Iteration   9: 305.158 ns/op
Iteration  10: 306.604 ns/op

# Run progress: 59.79% complete, ETA 00:15:26
# Fork: 2 of 2
# Warmup Iteration   1: 465.775 ns/op
# Warmup Iteration   2: 397.231 ns/op
# Warmup Iteration   3: 306.549 ns/op
Iteration   1: 305.653 ns/op
Iteration   2: 307.395 ns/op
Iteration   3: 305.547 ns/op
Iteration   4: 307.318 ns/op
Iteration   5: 305.176 ns/op
Iteration   6: 306.761 ns/op
Iteration   7: 305.350 ns/op
Iteration   8: 305.480 ns/op
Iteration   9: 305.516 ns/op
Iteration  10: 306.700 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  305.872 ±(99.9%) 0.859 ns/op [Average]
  (min, avg, max) = (304.474, 305.872, 307.573), stdev = 0.989
  CI (99.9%): [305.014, 306.731] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 59.86% complete, ETA 00:15:24
# Fork: 1 of 2
# Warmup Iteration   1: 1614.318 ns/op
# Warmup Iteration   2: 651.079 ns/op
# Warmup Iteration   3: 465.420 ns/op
Iteration   1: 466.678 ns/op
Iteration   2: 464.751 ns/op
Iteration   3: 466.835 ns/op
Iteration   4: 487.258 ns/op
Iteration   5: 486.202 ns/op
Iteration   6: 483.753 ns/op
Iteration   7: 486.503 ns/op
Iteration   8: 486.134 ns/op
Iteration   9: 485.120 ns/op
Iteration  10: 486.135 ns/op

# Run progress: 59.93% complete, ETA 00:15:23
# Fork: 2 of 2
# Warmup Iteration   1: 1607.726 ns/op
# Warmup Iteration   2: 631.978 ns/op
# Warmup Iteration   3: 460.164 ns/op
Iteration   1: 464.346 ns/op
Iteration   2: 460.558 ns/op
Iteration   3: 462.272 ns/op
Iteration   4: 486.574 ns/op
Iteration   5: 482.667 ns/op
Iteration   6: 480.095 ns/op
Iteration   7: 482.424 ns/op
Iteration   8: 482.300 ns/op
Iteration   9: 482.382 ns/op
Iteration  10: 480.302 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  478.165 ±(99.9%) 8.380 ns/op [Average]
  (min, avg, max) = (460.558, 478.165, 487.258), stdev = 9.651
  CI (99.9%): [469.784, 486.545] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 60.00% complete, ETA 00:15:21
# Fork: 1 of 2
# Warmup Iteration   1: 19.584 ns/op
# Warmup Iteration   2: 22.725 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.067 ns/op
Iteration   2: 15.279 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.112 ns/op
Iteration   6: 15.386 ns/op
Iteration   7: 17.013 ns/op
Iteration   8: 17.003 ns/op
Iteration   9: 17.014 ns/op
Iteration  10: 14.978 ns/op

# Run progress: 60.07% complete, ETA 00:15:20
# Fork: 2 of 2
# Warmup Iteration   1: 19.368 ns/op
# Warmup Iteration   2: 22.872 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.064 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.027 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.976 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.976, 16.290, 17.112), stdev = 0.949
  CI (99.9%): [15.466, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 60.14% complete, ETA 00:15:18
# Fork: 1 of 2
# Warmup Iteration   1: 984.343 ns/op
# Warmup Iteration   2: 1715.571 ns/op
# Warmup Iteration   3: 743.999 ns/op
Iteration   1: 20580.218 ns/op
Iteration   2: 18141.537 ns/op
Iteration   3: 18601.224 ns/op
Iteration   4: 19222.534 ns/op
Iteration   5: 308.618 ns/op
Iteration   6: 346.002 ns/op
Iteration   7: 452.934 ns/op
Iteration   8: 424.440 ns/op
Iteration   9: 402.983 ns/op
Iteration  10: 384.606 ns/op

# Run progress: 60.21% complete, ETA 00:15:16
# Fork: 2 of 2
# Warmup Iteration   1: 990.725 ns/op
# Warmup Iteration   2: 3906.468 ns/op
# Warmup Iteration   3: 1189.505 ns/op
Iteration   1: 21161.982 ns/op
Iteration   2: 18782.793 ns/op
Iteration   3: 17600.557 ns/op
Iteration   4: 19709.064 ns/op
Iteration   5: 303.258 ns/op
Iteration   6: 347.186 ns/op
Iteration   7: 445.362 ns/op
Iteration   8: 421.800 ns/op
Iteration   9: 401.321 ns/op
Iteration  10: 384.160 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7921.129 ±(99.9%) 8247.442 ns/op [Average]
  (min, avg, max) = (303.258, 7921.129, 21161.982), stdev = 9497.767
  CI (99.9%): [≈ 0, 16168.571] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 60.28% complete, ETA 00:15:15
# Fork: 1 of 2
# Warmup Iteration   1: 629.118 ns/op
# Warmup Iteration   2: 677.396 ns/op
# Warmup Iteration   3: 379.186 ns/op
Iteration   1: 428.208 ns/op
Iteration   2: 430.648 ns/op
Iteration   3: 426.898 ns/op
Iteration   4: 377.338 ns/op
Iteration   5: 419.965 ns/op
Iteration   6: 384.870 ns/op
Iteration   7: 419.451 ns/op
Iteration   8: 413.572 ns/op
Iteration   9: 472.916 ns/op
Iteration  10: 377.657 ns/op

# Run progress: 60.35% complete, ETA 00:15:13
# Fork: 2 of 2
# Warmup Iteration   1: 626.439 ns/op
# Warmup Iteration   2: 701.543 ns/op
# Warmup Iteration   3: 377.095 ns/op
Iteration   1: 426.206 ns/op
Iteration   2: 429.468 ns/op
Iteration   3: 415.551 ns/op
Iteration   4: 378.519 ns/op
Iteration   5: 419.537 ns/op
Iteration   6: 383.802 ns/op
Iteration   7: 418.882 ns/op
Iteration   8: 409.755 ns/op
Iteration   9: 473.346 ns/op
Iteration  10: 377.073 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  414.183 ±(99.9%) 24.572 ns/op [Average]
  (min, avg, max) = (377.073, 414.183, 473.346), stdev = 28.298
  CI (99.9%): [389.611, 438.755] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 60.42% complete, ETA 00:15:12
# Fork: 1 of 2
# Warmup Iteration   1: 14946.359 ns/op
# Warmup Iteration   2: 1017.796 ns/op
# Warmup Iteration   3: 1138.103 ns/op
Iteration   1: 9684.882 ns/op
Iteration   2: 35086.410 ns/op
Iteration   3: 1505.642 ns/op
Iteration   4: 357.240 ns/op
Iteration   5: 287.326 ns/op
Iteration   6: 423.944 ns/op
Iteration   7: 402.497 ns/op
Iteration   8: 340.128 ns/op
Iteration   9: 338.741 ns/op
Iteration  10: 394.776 ns/op

# Run progress: 60.49% complete, ETA 00:15:10
# Fork: 2 of 2
# Warmup Iteration   1: 15410.139 ns/op
# Warmup Iteration   2: 996.295 ns/op
# Warmup Iteration   3: 1036.606 ns/op
Iteration   1: 9254.511 ns/op
Iteration   2: 34946.146 ns/op
Iteration   3: 15488.341 ns/op
Iteration   4: 355.529 ns/op
Iteration   5: 296.816 ns/op
Iteration   6: 416.744 ns/op
Iteration   7: 417.479 ns/op
Iteration   8: 332.637 ns/op
Iteration   9: 349.921 ns/op
Iteration  10: 406.111 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5554.291 ±(99.9%) 9468.001 ns/op [Average]
  (min, avg, max) = (287.326, 5554.291, 35086.410), stdev = 10903.364
  CI (99.9%): [≈ 0, 15022.292] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 60.56% complete, ETA 00:15:08
# Fork: 1 of 2
# Warmup Iteration   1: 652.736 ns/op
# Warmup Iteration   2: 1561.004 ns/op
# Warmup Iteration   3: 603.356 ns/op
Iteration   1: 340.503 ns/op
Iteration   2: 347.726 ns/op
Iteration   3: 325.436 ns/op
Iteration   4: 760.442 ns/op
Iteration   5: 333.074 ns/op
Iteration   6: 323.023 ns/op
Iteration   7: 337.457 ns/op
Iteration   8: 324.936 ns/op
Iteration   9: 371.391 ns/op
Iteration  10: 311.837 ns/op

# Run progress: 60.62% complete, ETA 00:15:07
# Fork: 2 of 2
# Warmup Iteration   1: 700.828 ns/op
# Warmup Iteration   2: 1410.545 ns/op
# Warmup Iteration   3: 439.187 ns/op
Iteration   1: 340.000 ns/op
Iteration   2: 350.128 ns/op
Iteration   3: 320.648 ns/op
Iteration   4: 1150.550 ns/op
Iteration   5: 329.759 ns/op
Iteration   6: 317.760 ns/op
Iteration   7: 338.181 ns/op
Iteration   8: 322.870 ns/op
Iteration   9: 368.251 ns/op
Iteration  10: 313.776 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  396.387 ±(99.9%) 175.450 ns/op [Average]
  (min, avg, max) = (311.837, 396.387, 1150.550), stdev = 202.049
  CI (99.9%): [220.937, 571.838] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 60.69% complete, ETA 00:15:05
# Fork: 1 of 2
# Warmup Iteration   1: 3152.277 ns/op
# Warmup Iteration   2: 2257.046 ns/op
# Warmup Iteration   3: 1515.880 ns/op
Iteration   1: 1619.062 ns/op
Iteration   2: 1627.396 ns/op
Iteration   3: 1620.915 ns/op
Iteration   4: 1542.163 ns/op
Iteration   5: 1629.593 ns/op
Iteration   6: 1538.788 ns/op
Iteration   7: 1620.867 ns/op
Iteration   8: 1584.677 ns/op
Iteration   9: 1722.218 ns/op
Iteration  10: 1530.818 ns/op

# Run progress: 60.76% complete, ETA 00:15:04
# Fork: 2 of 2
# Warmup Iteration   1: 3195.841 ns/op
# Warmup Iteration   2: 2360.729 ns/op
# Warmup Iteration   3: 1519.524 ns/op
Iteration   1: 1626.624 ns/op
Iteration   2: 1678.502 ns/op
Iteration   3: 1622.666 ns/op
Iteration   4: 1580.849 ns/op
Iteration   5: 1618.570 ns/op
Iteration   6: 1544.742 ns/op
Iteration   7: 1625.543 ns/op
Iteration   8: 1591.355 ns/op
Iteration   9: 1723.734 ns/op
Iteration  10: 1534.408 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1609.175 ±(99.9%) 48.683 ns/op [Average]
  (min, avg, max) = (1530.818, 1609.175, 1723.734), stdev = 56.063
  CI (99.9%): [1560.491, 1657.858] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 60.83% complete, ETA 00:15:02
# Fork: 1 of 2
# Warmup Iteration   1: 19.761 ns/op
# Warmup Iteration   2: 22.474 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.056 ns/op
Iteration   2: 15.274 ns/op
Iteration   3: 17.014 ns/op
Iteration   4: 15.029 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.010 ns/op
Iteration   8: 16.995 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.967 ns/op

# Run progress: 60.90% complete, ETA 00:15:00
# Fork: 2 of 2
# Warmup Iteration   1: 19.379 ns/op
# Warmup Iteration   2: 22.757 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.293 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.390 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.028 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.823 ns/op [Average]
  (min, avg, max) = (14.967, 16.290, 17.111), stdev = 0.948
  CI (99.9%): [15.467, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 60.97% complete, ETA 00:14:59
# Fork: 1 of 2
# Warmup Iteration   1: 230.941 ns/op
# Warmup Iteration   2: 211.642 ns/op
# Warmup Iteration   3: 150.894 ns/op
Iteration   1: 152.233 ns/op
Iteration   2: 151.160 ns/op
Iteration   3: 151.992 ns/op
Iteration   4: 155.093 ns/op
Iteration   5: 152.302 ns/op
Iteration   6: 151.379 ns/op
Iteration   7: 152.339 ns/op
Iteration   8: 152.109 ns/op
Iteration   9: 151.488 ns/op
Iteration  10: 151.165 ns/op

# Run progress: 61.04% complete, ETA 00:14:57
# Fork: 2 of 2
# Warmup Iteration   1: 228.338 ns/op
# Warmup Iteration   2: 204.461 ns/op
# Warmup Iteration   3: 152.934 ns/op
Iteration   1: 154.450 ns/op
Iteration   2: 153.756 ns/op
Iteration   3: 154.804 ns/op
Iteration   4: 156.271 ns/op
Iteration   5: 154.564 ns/op
Iteration   6: 152.770 ns/op
Iteration   7: 154.884 ns/op
Iteration   8: 154.700 ns/op
Iteration   9: 154.428 ns/op
Iteration  10: 153.976 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  153.293 ±(99.9%) 1.354 ns/op [Average]
  (min, avg, max) = (151.160, 153.293, 156.271), stdev = 1.559
  CI (99.9%): [151.939, 154.647] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 61.11% complete, ETA 00:14:56
# Fork: 1 of 2
# Warmup Iteration   1: 298.085 ns/op
# Warmup Iteration   2: 314.335 ns/op
# Warmup Iteration   3: 210.482 ns/op
Iteration   1: 209.100 ns/op
Iteration   2: 210.392 ns/op
Iteration   3: 208.978 ns/op
Iteration   4: 211.013 ns/op
Iteration   5: 209.089 ns/op
Iteration   6: 210.362 ns/op
Iteration   7: 208.959 ns/op
Iteration   8: 208.898 ns/op
Iteration   9: 208.938 ns/op
Iteration  10: 210.491 ns/op

# Run progress: 61.18% complete, ETA 00:14:54
# Fork: 2 of 2
# Warmup Iteration   1: 297.365 ns/op
# Warmup Iteration   2: 329.285 ns/op
# Warmup Iteration   3: 210.522 ns/op
Iteration   1: 209.182 ns/op
Iteration   2: 210.387 ns/op
Iteration   3: 209.015 ns/op
Iteration   4: 211.031 ns/op
Iteration   5: 209.095 ns/op
Iteration   6: 210.338 ns/op
Iteration   7: 209.200 ns/op
Iteration   8: 208.939 ns/op
Iteration   9: 209.048 ns/op
Iteration  10: 210.526 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  209.649 ±(99.9%) 0.688 ns/op [Average]
  (min, avg, max) = (208.898, 209.649, 211.031), stdev = 0.793
  CI (99.9%): [208.961, 210.337] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 61.25% complete, ETA 00:14:52
# Fork: 1 of 2
# Warmup Iteration   1: 425.723 ns/op
# Warmup Iteration   2: 307.557 ns/op
# Warmup Iteration   3: 229.809 ns/op
Iteration   1: 228.945 ns/op
Iteration   2: 229.788 ns/op
Iteration   3: 229.329 ns/op
Iteration   4: 234.285 ns/op
Iteration   5: 229.356 ns/op
Iteration   6: 229.399 ns/op
Iteration   7: 229.415 ns/op
Iteration   8: 229.511 ns/op
Iteration   9: 229.657 ns/op
Iteration  10: 229.344 ns/op

# Run progress: 61.32% complete, ETA 00:14:51
# Fork: 2 of 2
# Warmup Iteration   1: 582.953 ns/op
# Warmup Iteration   2: 291.981 ns/op
# Warmup Iteration   3: 225.996 ns/op
Iteration   1: 224.669 ns/op
Iteration   2: 226.008 ns/op
Iteration   3: 224.522 ns/op
Iteration   4: 227.319 ns/op
Iteration   5: 224.474 ns/op
Iteration   6: 225.898 ns/op
Iteration   7: 224.610 ns/op
Iteration   8: 224.588 ns/op
Iteration   9: 224.639 ns/op
Iteration  10: 225.733 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  227.574 ±(99.9%) 2.344 ns/op [Average]
  (min, avg, max) = (224.474, 227.574, 234.285), stdev = 2.699
  CI (99.9%): [225.231, 229.918] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 61.39% complete, ETA 00:14:49
# Fork: 1 of 2
# Warmup Iteration   1: 257.883 ns/op
# Warmup Iteration   2: 210.150 ns/op
# Warmup Iteration   3: 163.206 ns/op
Iteration   1: 161.718 ns/op
Iteration   2: 163.034 ns/op
Iteration   3: 161.641 ns/op
Iteration   4: 163.281 ns/op
Iteration   5: 161.726 ns/op
Iteration   6: 163.277 ns/op
Iteration   7: 161.663 ns/op
Iteration   8: 161.598 ns/op
Iteration   9: 161.883 ns/op
Iteration  10: 163.095 ns/op

# Run progress: 61.46% complete, ETA 00:14:48
# Fork: 2 of 2
# Warmup Iteration   1: 239.381 ns/op
# Warmup Iteration   2: 210.117 ns/op
# Warmup Iteration   3: 163.241 ns/op
Iteration   1: 161.703 ns/op
Iteration   2: 162.969 ns/op
Iteration   3: 161.621 ns/op
Iteration   4: 163.346 ns/op
Iteration   5: 161.726 ns/op
Iteration   6: 163.230 ns/op
Iteration   7: 161.660 ns/op
Iteration   8: 161.668 ns/op
Iteration   9: 161.671 ns/op
Iteration  10: 163.054 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  162.278 ±(99.9%) 0.648 ns/op [Average]
  (min, avg, max) = (161.598, 162.278, 163.346), stdev = 0.746
  CI (99.9%): [161.630, 162.926] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 61.53% complete, ETA 00:14:46
# Fork: 1 of 2
# Warmup Iteration   1: 236.767 ns/op
# Warmup Iteration   2: 183.428 ns/op
# Warmup Iteration   3: 135.360 ns/op
Iteration   1: 137.326 ns/op
Iteration   2: 135.423 ns/op
Iteration   3: 137.284 ns/op
Iteration   4: 153.346 ns/op
Iteration   5: 153.254 ns/op
Iteration   6: 152.097 ns/op
Iteration   7: 153.076 ns/op
Iteration   8: 153.263 ns/op
Iteration   9: 153.355 ns/op
Iteration  10: 152.281 ns/op

# Run progress: 61.60% complete, ETA 00:14:44
# Fork: 2 of 2
# Warmup Iteration   1: 214.955 ns/op
# Warmup Iteration   2: 189.625 ns/op
# Warmup Iteration   3: 135.384 ns/op
Iteration   1: 136.966 ns/op
Iteration   2: 135.439 ns/op
Iteration   3: 137.306 ns/op
Iteration   4: 153.239 ns/op
Iteration   5: 153.232 ns/op
Iteration   6: 152.070 ns/op
Iteration   7: 153.287 ns/op
Iteration   8: 152.990 ns/op
Iteration   9: 153.336 ns/op
Iteration  10: 152.127 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  148.035 ±(99.9%) 6.679 ns/op [Average]
  (min, avg, max) = (135.423, 148.035, 153.355), stdev = 7.691
  CI (99.9%): [141.356, 154.714] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 61.67% complete, ETA 00:14:43
# Fork: 1 of 2
# Warmup Iteration   1: 19.292 ns/op
# Warmup Iteration   2: 22.679 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.057 ns/op
Iteration   2: 15.273 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.097 ns/op
Iteration   6: 15.367 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.013 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.971 ns/op

# Run progress: 61.74% complete, ETA 00:14:41
# Fork: 2 of 2
# Warmup Iteration   1: 19.577 ns/op
# Warmup Iteration   2: 22.860 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.265 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.013 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.405 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.023 ns/op
Iteration   9: 17.013 ns/op
Iteration  10: 14.967 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.967, 16.288, 17.108), stdev = 0.952
  CI (99.9%): [15.462, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 61.81% complete, ETA 00:14:40
# Fork: 1 of 2
# Warmup Iteration   1: 397.616 ns/op
# Warmup Iteration   2: 15982.450 ns/op
# Warmup Iteration   3: 197.353 ns/op
Iteration   1: 14077.458 ns/op
Iteration   2: 295.063 ns/op
Iteration   3: 1889.241 ns/op
Iteration   4: 201.214 ns/op
Iteration   5: 189.616 ns/op
Iteration   6: 13096.408 ns/op
Iteration   7: 215.997 ns/op
Iteration   8: 190.020 ns/op
Iteration   9: 242.563 ns/op
Iteration  10: 186.505 ns/op

# Run progress: 61.88% complete, ETA 00:14:38
# Fork: 2 of 2
# Warmup Iteration   1: 475.801 ns/op
# Warmup Iteration   2: 16611.480 ns/op
# Warmup Iteration   3: 184.017 ns/op
Iteration   1: 17873.885 ns/op
Iteration   2: 293.545 ns/op
Iteration   3: 17200.384 ns/op
Iteration   4: 204.889 ns/op
Iteration   5: 191.826 ns/op
Iteration   6: 15221.082 ns/op
Iteration   7: 213.674 ns/op
Iteration   8: 191.621 ns/op
Iteration   9: 243.626 ns/op
Iteration  10: 186.571 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4120.259 ±(99.9%) 5914.427 ns/op [Average]
  (min, avg, max) = (186.505, 4120.259, 17873.885), stdev = 6811.063
  CI (99.9%): [≈ 0, 10034.686] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 61.94% complete, ETA 00:14:36
# Fork: 1 of 2
# Warmup Iteration   1: 333.410 ns/op
# Warmup Iteration   2: 592.118 ns/op
# Warmup Iteration   3: 264.344 ns/op
Iteration   1: 280.455 ns/op
Iteration   2: 351.943 ns/op
Iteration   3: 464.312 ns/op
Iteration   4: 448.389 ns/op
Iteration   5: 238.469 ns/op
Iteration   6: 426.808 ns/op
Iteration   7: 439.553 ns/op
Iteration   8: 238.519 ns/op
Iteration   9: 279.221 ns/op
Iteration  10: 264.897 ns/op

# Run progress: 62.01% complete, ETA 00:14:35
# Fork: 2 of 2
# Warmup Iteration   1: 328.679 ns/op
# Warmup Iteration   2: 553.607 ns/op
# Warmup Iteration   3: 264.377 ns/op
Iteration   1: 282.756 ns/op
Iteration   2: 335.705 ns/op
Iteration   3: 401.870 ns/op
Iteration   4: 416.407 ns/op
Iteration   5: 247.025 ns/op
Iteration   6: 380.255 ns/op
Iteration   7: 387.197 ns/op
Iteration   8: 247.025 ns/op
Iteration   9: 279.494 ns/op
Iteration  10: 264.280 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  333.729 ±(99.9%) 69.292 ns/op [Average]
  (min, avg, max) = (238.469, 333.729, 464.312), stdev = 79.797
  CI (99.9%): [264.437, 403.021] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 62.08% complete, ETA 00:14:33
# Fork: 1 of 2
# Warmup Iteration   1: 1947.970 ns/op
# Warmup Iteration   2: 33638.876 ns/op
# Warmup Iteration   3: 470.604 ns/op
Iteration   1: 468.369 ns/op
Iteration   2: 12319.088 ns/op
Iteration   3: 430.574 ns/op
Iteration   4: 2012.294 ns/op
Iteration   5: 290.852 ns/op
Iteration   6: 245.103 ns/op
Iteration   7: 259.620 ns/op
Iteration   8: 290.461 ns/op
Iteration   9: 325.698 ns/op
Iteration  10: 274.675 ns/op

# Run progress: 62.15% complete, ETA 00:14:32
# Fork: 2 of 2
# Warmup Iteration   1: 3173.404 ns/op
# Warmup Iteration   2: 21175.126 ns/op
# Warmup Iteration   3: 503.759 ns/op
Iteration   1: 2891.057 ns/op
Iteration   2: 11398.756 ns/op
Iteration   3: 1143.857 ns/op
Iteration   4: 10032.481 ns/op
Iteration   5: 290.147 ns/op
Iteration   6: 246.582 ns/op
Iteration   7: 260.168 ns/op
Iteration   8: 290.219 ns/op
Iteration   9: 321.823 ns/op
Iteration  10: 277.212 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2203.452 ±(99.9%) 3452.303 ns/op [Average]
  (min, avg, max) = (245.103, 2203.452, 12319.088), stdev = 3975.678
  CI (99.9%): [≈ 0, 5655.755] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 62.22% complete, ETA 00:14:30
# Fork: 1 of 2
# Warmup Iteration   1: 260.198 ns/op
# Warmup Iteration   2: 639.368 ns/op
# Warmup Iteration   3: 286.251 ns/op
Iteration   1: 215.557 ns/op
Iteration   2: 232.735 ns/op
Iteration   3: 583.215 ns/op
Iteration   4: 6277.385 ns/op
Iteration   5: 200.084 ns/op
Iteration   6: 234.603 ns/op
Iteration   7: 215.910 ns/op
Iteration   8: 199.936 ns/op
Iteration   9: 224.935 ns/op
Iteration  10: 202.239 ns/op

# Run progress: 62.29% complete, ETA 00:14:28
# Fork: 2 of 2
# Warmup Iteration   1: 287.932 ns/op
# Warmup Iteration   2: 489.055 ns/op
# Warmup Iteration   3: 254.260 ns/op
Iteration   1: 217.255 ns/op
Iteration   2: 238.730 ns/op
Iteration   3: 431.227 ns/op
Iteration   4: 4582.144 ns/op
Iteration   5: 200.578 ns/op
Iteration   6: 234.280 ns/op
Iteration   7: 216.036 ns/op
Iteration   8: 200.549 ns/op
Iteration   9: 235.858 ns/op
Iteration  10: 201.507 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  767.238 ±(99.9%) 1407.403 ns/op [Average]
  (min, avg, max) = (199.936, 767.238, 6277.385), stdev = 1620.767
  CI (99.9%): [≈ 0, 2174.641] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 62.36% complete, ETA 00:14:27
# Fork: 1 of 2
# Warmup Iteration   1: 497.550 ns/op
# Warmup Iteration   2: 4590.529 ns/op
# Warmup Iteration   3: 1861.516 ns/op
Iteration   1: 416.536 ns/op
Iteration   2: 550.517 ns/op
Iteration   3: 559.183 ns/op
Iteration   4: 529.791 ns/op
Iteration   5: 301.943 ns/op
Iteration   6: 556.823 ns/op
Iteration   7: 431.883 ns/op
Iteration   8: 301.621 ns/op
Iteration   9: 431.935 ns/op
Iteration  10: 375.338 ns/op

# Run progress: 62.43% complete, ETA 00:14:25
# Fork: 2 of 2
# Warmup Iteration   1: 538.074 ns/op
# Warmup Iteration   2: 6991.616 ns/op
# Warmup Iteration   3: 1122.890 ns/op
Iteration   1: 416.684 ns/op
Iteration   2: 550.093 ns/op
Iteration   3: 559.417 ns/op
Iteration   4: 529.949 ns/op
Iteration   5: 302.980 ns/op
Iteration   6: 556.815 ns/op
Iteration   7: 431.992 ns/op
Iteration   8: 303.218 ns/op
Iteration   9: 432.107 ns/op
Iteration  10: 369.647 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  445.424 ±(99.9%) 84.949 ns/op [Average]
  (min, avg, max) = (301.621, 445.424, 559.417), stdev = 97.827
  CI (99.9%): [360.475, 530.372] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 62.50% complete, ETA 00:14:24
# Fork: 1 of 2
# Warmup Iteration   1: 19.255 ns/op
# Warmup Iteration   2: 22.903 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.259 ns/op
Iteration   3: 17.006 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.398 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.001 ns/op
Iteration  10: 14.964 ns/op

# Run progress: 62.57% complete, ETA 00:14:22
# Fork: 2 of 2
# Warmup Iteration   1: 19.882 ns/op
# Warmup Iteration   2: 22.961 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.265 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.406 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.966 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.964, 16.290, 17.108), stdev = 0.951
  CI (99.9%): [15.464, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 62.64% complete, ETA 00:14:20
# Fork: 1 of 2
# Warmup Iteration   1: 691.789 ns/op
# Warmup Iteration   2: 402.599 ns/op
# Warmup Iteration   3: 304.581 ns/op
Iteration   1: 306.830 ns/op
Iteration   2: 305.780 ns/op
Iteration   3: 307.554 ns/op
Iteration   4: 305.211 ns/op
Iteration   5: 307.068 ns/op
Iteration   6: 305.009 ns/op
Iteration   7: 305.899 ns/op
Iteration   8: 308.094 ns/op
Iteration   9: 305.871 ns/op
Iteration  10: 304.149 ns/op

# Run progress: 62.71% complete, ETA 00:14:19
# Fork: 2 of 2
# Warmup Iteration   1: 856.572 ns/op
# Warmup Iteration   2: 399.028 ns/op
# Warmup Iteration   3: 300.451 ns/op
Iteration   1: 304.248 ns/op
Iteration   2: 301.114 ns/op
Iteration   3: 303.668 ns/op
Iteration   4: 301.109 ns/op
Iteration   5: 304.475 ns/op
Iteration   6: 301.481 ns/op
Iteration   7: 304.588 ns/op
Iteration   8: 303.483 ns/op
Iteration   9: 304.361 ns/op
Iteration  10: 301.283 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  304.564 ±(99.9%) 1.834 ns/op [Average]
  (min, avg, max) = (301.109, 304.564, 308.094), stdev = 2.112
  CI (99.9%): [302.729, 306.398] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 62.78% complete, ETA 00:14:17
# Fork: 1 of 2
# Warmup Iteration   1: 523.274 ns/op
# Warmup Iteration   2: 473.041 ns/op
# Warmup Iteration   3: 364.642 ns/op
Iteration   1: 363.330 ns/op
Iteration   2: 365.371 ns/op
Iteration   3: 363.294 ns/op
Iteration   4: 364.995 ns/op
Iteration   5: 363.504 ns/op
Iteration   6: 364.685 ns/op
Iteration   7: 363.375 ns/op
Iteration   8: 363.233 ns/op
Iteration   9: 363.381 ns/op
Iteration  10: 364.696 ns/op

# Run progress: 62.85% complete, ETA 00:14:16
# Fork: 2 of 2
# Warmup Iteration   1: 529.375 ns/op
# Warmup Iteration   2: 470.542 ns/op
# Warmup Iteration   3: 364.963 ns/op
Iteration   1: 363.448 ns/op
Iteration   2: 365.370 ns/op
Iteration   3: 363.354 ns/op
Iteration   4: 364.894 ns/op
Iteration   5: 363.582 ns/op
Iteration   6: 364.711 ns/op
Iteration   7: 363.363 ns/op
Iteration   8: 363.387 ns/op
Iteration   9: 363.411 ns/op
Iteration  10: 364.686 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  364.003 ±(99.9%) 0.692 ns/op [Average]
  (min, avg, max) = (363.233, 364.003, 365.371), stdev = 0.797
  CI (99.9%): [363.312, 364.695] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 62.92% complete, ETA 00:14:14
# Fork: 1 of 2
# Warmup Iteration   1: 10767.419 ns/op
# Warmup Iteration   2: 423.970 ns/op
# Warmup Iteration   3: 310.301 ns/op
Iteration   1: 309.213 ns/op
Iteration   2: 310.456 ns/op
Iteration   3: 309.092 ns/op
Iteration   4: 310.850 ns/op
Iteration   5: 309.226 ns/op
Iteration   6: 310.365 ns/op
Iteration   7: 309.737 ns/op
Iteration   8: 309.176 ns/op
Iteration   9: 309.144 ns/op
Iteration  10: 310.452 ns/op

# Run progress: 62.99% complete, ETA 00:14:12
# Fork: 2 of 2
# Warmup Iteration   1: 15810.469 ns/op
# Warmup Iteration   2: 489.371 ns/op
# Warmup Iteration   3: 340.010 ns/op
Iteration   1: 308.272 ns/op
Iteration   2: 309.612 ns/op
Iteration   3: 308.119 ns/op
Iteration   4: 310.183 ns/op
Iteration   5: 308.185 ns/op
Iteration   6: 309.549 ns/op
Iteration   7: 308.100 ns/op
Iteration   8: 308.136 ns/op
Iteration   9: 308.121 ns/op
Iteration  10: 309.518 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  309.275 ±(99.9%) 0.780 ns/op [Average]
  (min, avg, max) = (308.100, 309.275, 310.850), stdev = 0.899
  CI (99.9%): [308.495, 310.056] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 63.06% complete, ETA 00:14:11
# Fork: 1 of 2
# Warmup Iteration   1: 529.060 ns/op
# Warmup Iteration   2: 424.915 ns/op
# Warmup Iteration   3: 299.222 ns/op
Iteration   1: 298.318 ns/op
Iteration   2: 301.238 ns/op
Iteration   3: 298.963 ns/op
Iteration   4: 299.081 ns/op
Iteration   5: 296.539 ns/op
Iteration   6: 299.086 ns/op
Iteration   7: 296.366 ns/op
Iteration   8: 297.891 ns/op
Iteration   9: 298.360 ns/op
Iteration  10: 298.674 ns/op

# Run progress: 63.13% complete, ETA 00:14:09
# Fork: 2 of 2
# Warmup Iteration   1: 552.887 ns/op
# Warmup Iteration   2: 469.893 ns/op
# Warmup Iteration   3: 306.527 ns/op
Iteration   1: 303.686 ns/op
Iteration   2: 308.233 ns/op
Iteration   3: 303.597 ns/op
Iteration   4: 308.070 ns/op
Iteration   5: 302.866 ns/op
Iteration   6: 304.810 ns/op
Iteration   7: 303.122 ns/op
Iteration   8: 304.162 ns/op
Iteration   9: 303.423 ns/op
Iteration  10: 305.796 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  301.614 ±(99.9%) 3.164 ns/op [Average]
  (min, avg, max) = (296.366, 301.614, 308.233), stdev = 3.644
  CI (99.9%): [298.450, 304.778] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 63.19% complete, ETA 00:14:08
# Fork: 1 of 2
# Warmup Iteration   1: 2778.559 ns/op
# Warmup Iteration   2: 2017.863 ns/op
# Warmup Iteration   3: 1519.980 ns/op
Iteration   1: 1523.686 ns/op
Iteration   2: 1519.918 ns/op
Iteration   3: 1521.453 ns/op
Iteration   4: 1535.966 ns/op
Iteration   5: 1531.219 ns/op
Iteration   6: 1530.900 ns/op
Iteration   7: 1530.874 ns/op
Iteration   8: 1532.360 ns/op
Iteration   9: 1532.040 ns/op
Iteration  10: 1531.779 ns/op

# Run progress: 63.26% complete, ETA 00:14:06
# Fork: 2 of 2
# Warmup Iteration   1: 3218.786 ns/op
# Warmup Iteration   2: 2160.596 ns/op
# Warmup Iteration   3: 1555.655 ns/op
Iteration   1: 1555.078 ns/op
Iteration   2: 1556.075 ns/op
Iteration   3: 1557.140 ns/op
Iteration   4: 1576.998 ns/op
Iteration   5: 1570.431 ns/op
Iteration   6: 1569.112 ns/op
Iteration   7: 1568.672 ns/op
Iteration   8: 1570.183 ns/op
Iteration   9: 1568.415 ns/op
Iteration  10: 1568.988 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1547.564 ±(99.9%) 17.391 ns/op [Average]
  (min, avg, max) = (1519.918, 1547.564, 1576.998), stdev = 20.027
  CI (99.9%): [1530.174, 1564.955] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 63.33% complete, ETA 00:14:04
# Fork: 1 of 2
# Warmup Iteration   1: 19.343 ns/op
# Warmup Iteration   2: 22.506 ns/op
# Warmup Iteration   3: 15.022 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.286 ns/op
Iteration   3: 17.033 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.103 ns/op
Iteration   6: 15.394 ns/op
Iteration   7: 17.013 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.964 ns/op

# Run progress: 63.40% complete, ETA 00:14:03
# Fork: 2 of 2
# Warmup Iteration   1: 19.596 ns/op
# Warmup Iteration   2: 22.962 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.230 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.374 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.026 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.966 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.964, 16.288, 17.105), stdev = 0.953
  CI (99.9%): [15.460, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 63.47% complete, ETA 00:14:01
# Fork: 1 of 2
# Warmup Iteration   1: 764.230 ns/op
# Warmup Iteration   2: 416.659 ns/op
# Warmup Iteration   3: 296.231 ns/op
Iteration   1: 297.978 ns/op
Iteration   2: 297.443 ns/op
Iteration   3: 298.254 ns/op
Iteration   4: 297.637 ns/op
Iteration   5: 297.823 ns/op
Iteration   6: 295.981 ns/op
Iteration   7: 297.521 ns/op
Iteration   8: 297.635 ns/op
Iteration   9: 298.135 ns/op
Iteration  10: 296.416 ns/op

# Run progress: 63.54% complete, ETA 00:14:00
# Fork: 2 of 2
# Warmup Iteration   1: 1213.045 ns/op
# Warmup Iteration   2: 369.514 ns/op
# Warmup Iteration   3: 279.200 ns/op
Iteration   1: 279.306 ns/op
Iteration   2: 279.373 ns/op
Iteration   3: 279.361 ns/op
Iteration   4: 280.213 ns/op
Iteration   5: 279.259 ns/op
Iteration   6: 279.110 ns/op
Iteration   7: 280.067 ns/op
Iteration   8: 279.298 ns/op
Iteration   9: 279.545 ns/op
Iteration  10: 280.431 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  288.539 ±(99.9%) 7.984 ns/op [Average]
  (min, avg, max) = (279.110, 288.539, 298.254), stdev = 9.195
  CI (99.9%): [280.555, 296.524] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 63.61% complete, ETA 00:13:58
# Fork: 1 of 2
# Warmup Iteration   1: 524.088 ns/op
# Warmup Iteration   2: 446.692 ns/op
# Warmup Iteration   3: 346.259 ns/op
Iteration   1: 343.883 ns/op
Iteration   2: 347.101 ns/op
Iteration   3: 344.130 ns/op
Iteration   4: 345.710 ns/op
Iteration   5: 344.812 ns/op
Iteration   6: 346.135 ns/op
Iteration   7: 343.962 ns/op
Iteration   8: 358.102 ns/op
Iteration   9: 344.083 ns/op
Iteration  10: 345.990 ns/op

# Run progress: 63.68% complete, ETA 00:13:56
# Fork: 2 of 2
# Warmup Iteration   1: 519.420 ns/op
# Warmup Iteration   2: 448.860 ns/op
# Warmup Iteration   3: 346.302 ns/op
Iteration   1: 343.799 ns/op
Iteration   2: 347.389 ns/op
Iteration   3: 344.199 ns/op
Iteration   4: 345.596 ns/op
Iteration   5: 344.419 ns/op
Iteration   6: 346.160 ns/op
Iteration   7: 344.286 ns/op
Iteration   8: 343.922 ns/op
Iteration   9: 343.963 ns/op
Iteration  10: 345.613 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  345.663 ±(99.9%) 2.724 ns/op [Average]
  (min, avg, max) = (343.799, 345.663, 358.102), stdev = 3.137
  CI (99.9%): [342.939, 348.387] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 63.75% complete, ETA 00:13:55
# Fork: 1 of 2
# Warmup Iteration   1: 6109.636 ns/op
# Warmup Iteration   2: 542.750 ns/op
# Warmup Iteration   3: 337.815 ns/op
Iteration   1: 336.400 ns/op
Iteration   2: 337.786 ns/op
Iteration   3: 346.889 ns/op
Iteration   4: 341.748 ns/op
Iteration   5: 336.312 ns/op
Iteration   6: 337.536 ns/op
Iteration   7: 345.962 ns/op
Iteration   8: 336.389 ns/op
Iteration   9: 343.194 ns/op
Iteration  10: 337.901 ns/op

# Run progress: 63.82% complete, ETA 00:13:53
# Fork: 2 of 2
# Warmup Iteration   1: 7626.642 ns/op
# Warmup Iteration   2: 496.847 ns/op
# Warmup Iteration   3: 339.639 ns/op
Iteration   1: 338.565 ns/op
Iteration   2: 339.477 ns/op
Iteration   3: 338.278 ns/op
Iteration   4: 343.316 ns/op
Iteration   5: 338.378 ns/op
Iteration   6: 339.538 ns/op
Iteration   7: 338.210 ns/op
Iteration   8: 338.181 ns/op
Iteration   9: 338.090 ns/op
Iteration  10: 339.827 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  339.599 ±(99.9%) 2.653 ns/op [Average]
  (min, avg, max) = (336.312, 339.599, 346.889), stdev = 3.055
  CI (99.9%): [336.946, 342.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 63.89% complete, ETA 00:13:51
# Fork: 1 of 2
# Warmup Iteration   1: 402.955 ns/op
# Warmup Iteration   2: 310.216 ns/op
# Warmup Iteration   3: 242.714 ns/op
Iteration   1: 241.474 ns/op
Iteration   2: 244.100 ns/op
Iteration   3: 241.564 ns/op
Iteration   4: 242.662 ns/op
Iteration   5: 241.500 ns/op
Iteration   6: 242.811 ns/op
Iteration   7: 241.392 ns/op
Iteration   8: 241.521 ns/op
Iteration   9: 241.333 ns/op
Iteration  10: 242.691 ns/op

# Run progress: 63.96% complete, ETA 00:13:50
# Fork: 2 of 2
# Warmup Iteration   1: 369.650 ns/op
# Warmup Iteration   2: 348.871 ns/op
# Warmup Iteration   3: 243.774 ns/op
Iteration   1: 242.059 ns/op
Iteration   2: 246.265 ns/op
Iteration   3: 242.017 ns/op
Iteration   4: 243.592 ns/op
Iteration   5: 241.910 ns/op
Iteration   6: 243.743 ns/op
Iteration   7: 241.822 ns/op
Iteration   8: 241.951 ns/op
Iteration   9: 241.933 ns/op
Iteration  10: 243.824 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  242.508 ±(99.9%) 1.086 ns/op [Average]
  (min, avg, max) = (241.333, 242.508, 246.265), stdev = 1.251
  CI (99.9%): [241.422, 243.594] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 64.03% complete, ETA 00:13:48
# Fork: 1 of 2
# Warmup Iteration   1: 1114.467 ns/op
# Warmup Iteration   2: 664.722 ns/op
# Warmup Iteration   3: 473.625 ns/op
Iteration   1: 478.170 ns/op
Iteration   2: 473.646 ns/op
Iteration   3: 475.504 ns/op
Iteration   4: 497.968 ns/op
Iteration   5: 494.197 ns/op
Iteration   6: 491.654 ns/op
Iteration   7: 493.211 ns/op
Iteration   8: 492.895 ns/op
Iteration   9: 493.366 ns/op
Iteration  10: 491.606 ns/op

# Run progress: 64.10% complete, ETA 00:13:47
# Fork: 2 of 2
# Warmup Iteration   1: 1028.402 ns/op
# Warmup Iteration   2: 651.086 ns/op
# Warmup Iteration   3: 473.889 ns/op
Iteration   1: 477.588 ns/op
Iteration   2: 474.017 ns/op
Iteration   3: 475.674 ns/op
Iteration   4: 497.522 ns/op
Iteration   5: 494.293 ns/op
Iteration   6: 492.259 ns/op
Iteration   7: 493.453 ns/op
Iteration   8: 493.846 ns/op
Iteration   9: 494.167 ns/op
Iteration  10: 493.185 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  488.411 ±(99.9%) 7.540 ns/op [Average]
  (min, avg, max) = (473.646, 488.411, 497.968), stdev = 8.683
  CI (99.9%): [480.871, 495.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 64.17% complete, ETA 00:13:45
# Fork: 1 of 2
# Warmup Iteration   1: 19.428 ns/op
# Warmup Iteration   2: 22.811 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.275 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.015 ns/op
Iteration   5: 17.103 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.021 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.972 ns/op

# Run progress: 64.24% complete, ETA 00:13:43
# Fork: 2 of 2
# Warmup Iteration   1: 19.338 ns/op
# Warmup Iteration   2: 23.018 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.068 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.011 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.366 ns/op
Iteration   7: 17.010 ns/op
Iteration   8: 17.009 ns/op
Iteration   9: 17.012 ns/op
Iteration  10: 14.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.972, 16.288, 17.105), stdev = 0.951
  CI (99.9%): [15.462, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 64.31% complete, ETA 00:13:42
# Fork: 1 of 2
# Warmup Iteration   1: 1125.480 ns/op
# Warmup Iteration   2: 27620.599 ns/op
# Warmup Iteration   3: 18480.791 ns/op
Iteration   1: 18198.805 ns/op
Iteration   2: 19463.602 ns/op
Iteration   3: 16372.444 ns/op
Iteration   4: 18802.861 ns/op
Iteration   5: 429.372 ns/op
Iteration   6: 19262.836 ns/op
Iteration   7: 354.614 ns/op
Iteration   8: 302.704 ns/op
Iteration   9: 454.732 ns/op
Iteration  10: 326.956 ns/op

# Run progress: 64.38% complete, ETA 00:13:40
# Fork: 2 of 2
# Warmup Iteration   1: 1096.797 ns/op
# Warmup Iteration   2: 26995.301 ns/op
# Warmup Iteration   3: 17923.391 ns/op
Iteration   1: 18652.183 ns/op
Iteration   2: 14231.341 ns/op
Iteration   3: 17802.509 ns/op
Iteration   4: 16724.303 ns/op
Iteration   5: 447.045 ns/op
Iteration   6: 19792.121 ns/op
Iteration   7: 415.251 ns/op
Iteration   8: 303.920 ns/op
Iteration   9: 445.597 ns/op
Iteration  10: 325.791 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9155.449 ±(99.9%) 7884.779 ns/op [Average]
  (min, avg, max) = (302.704, 9155.449, 19792.121), stdev = 9080.123
  CI (99.9%): [1270.670, 17040.228] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 64.44% complete, ETA 00:13:39
# Fork: 1 of 2
# Warmup Iteration   1: 650.178 ns/op
# Warmup Iteration   2: 496.032 ns/op
# Warmup Iteration   3: 415.021 ns/op
Iteration   1: 482.048 ns/op
Iteration   2: 391.190 ns/op
Iteration   3: 393.939 ns/op
Iteration   4: 424.529 ns/op
Iteration   5: 427.515 ns/op
Iteration   6: 423.874 ns/op
Iteration   7: 452.503 ns/op
Iteration   8: 451.776 ns/op
Iteration   9: 387.157 ns/op
Iteration  10: 412.224 ns/op

# Run progress: 64.51% complete, ETA 00:13:37
# Fork: 2 of 2
# Warmup Iteration   1: 636.876 ns/op
# Warmup Iteration   2: 541.753 ns/op
# Warmup Iteration   3: 414.973 ns/op
Iteration   1: 482.053 ns/op
Iteration   2: 401.423 ns/op
Iteration   3: 392.192 ns/op
Iteration   4: 426.268 ns/op
Iteration   5: 428.432 ns/op
Iteration   6: 425.713 ns/op
Iteration   7: 452.546 ns/op
Iteration   8: 449.478 ns/op
Iteration   9: 388.808 ns/op
Iteration  10: 413.841 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  425.375 ±(99.9%) 25.301 ns/op [Average]
  (min, avg, max) = (387.157, 425.375, 482.053), stdev = 29.136
  CI (99.9%): [400.075, 450.676] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 64.58% complete, ETA 00:13:36
# Fork: 1 of 2
# Warmup Iteration   1: 10416.136 ns/op
# Warmup Iteration   2: 1137.472 ns/op
# Warmup Iteration   3: 1059.021 ns/op
Iteration   1: 9630.751 ns/op
Iteration   2: 8779.287 ns/op
Iteration   3: 2124.687 ns/op
Iteration   4: 409.629 ns/op
Iteration   5: 428.403 ns/op
Iteration   6: 2507.448 ns/op
Iteration   7: 11235.348 ns/op
Iteration   8: 399.221 ns/op
Iteration   9: 407.470 ns/op
Iteration  10: 376.476 ns/op

# Run progress: 64.65% complete, ETA 00:13:34
# Fork: 2 of 2
# Warmup Iteration   1: 7606.927 ns/op
# Warmup Iteration   2: 1540.834 ns/op
# Warmup Iteration   3: 963.440 ns/op
Iteration   1: 9256.905 ns/op
Iteration   2: 9389.213 ns/op
Iteration   3: 1194.633 ns/op
Iteration   4: 408.088 ns/op
Iteration   5: 429.384 ns/op
Iteration   6: 1165.840 ns/op
Iteration   7: 12913.033 ns/op
Iteration   8: 400.688 ns/op
Iteration   9: 406.696 ns/op
Iteration  10: 379.722 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3612.146 ±(99.9%) 3938.858 ns/op [Average]
  (min, avg, max) = (376.476, 3612.146, 12913.033), stdev = 4535.995
  CI (99.9%): [≈ 0, 7551.004] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 64.72% complete, ETA 00:13:32
# Fork: 1 of 2
# Warmup Iteration   1: 555.444 ns/op
# Warmup Iteration   2: 400.664 ns/op
# Warmup Iteration   3: 313.996 ns/op
Iteration   1: 366.059 ns/op
Iteration   2: 310.087 ns/op
Iteration   3: 328.307 ns/op
Iteration   4: 335.461 ns/op
Iteration   5: 348.332 ns/op
Iteration   6: 338.524 ns/op
Iteration   7: 3350.383 ns/op
Iteration   8: 351.815 ns/op
Iteration   9: 318.211 ns/op
Iteration  10: 321.700 ns/op

# Run progress: 64.79% complete, ETA 00:13:31
# Fork: 2 of 2
# Warmup Iteration   1: 667.869 ns/op
# Warmup Iteration   2: 398.931 ns/op
# Warmup Iteration   3: 314.165 ns/op
Iteration   1: 370.572 ns/op
Iteration   2: 308.722 ns/op
Iteration   3: 328.518 ns/op
Iteration   4: 335.804 ns/op
Iteration   5: 349.164 ns/op
Iteration   6: 340.942 ns/op
Iteration   7: 1236.221 ns/op
Iteration   8: 352.509 ns/op
Iteration   9: 317.007 ns/op
Iteration  10: 320.874 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  531.461 ±(99.9%) 602.222 ns/op [Average]
  (min, avg, max) = (308.722, 531.461, 3350.383), stdev = 693.520
  CI (99.9%): [≈ 0, 1133.683] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 64.86% complete, ETA 00:13:29
# Fork: 1 of 2
# Warmup Iteration   1: 3237.833 ns/op
# Warmup Iteration   2: 2152.306 ns/op
# Warmup Iteration   3: 1568.929 ns/op
Iteration   1: 1701.064 ns/op
Iteration   2: 1522.668 ns/op
Iteration   3: 1567.633 ns/op
Iteration   4: 1624.935 ns/op
Iteration   5: 2918.483 ns/op
Iteration   6: 1630.235 ns/op
Iteration   7: 1705.664 ns/op
Iteration   8: 1666.461 ns/op
Iteration   9: 1554.698 ns/op
Iteration  10: 1588.638 ns/op

# Run progress: 64.93% complete, ETA 00:13:28
# Fork: 2 of 2
# Warmup Iteration   1: 3742.068 ns/op
# Warmup Iteration   2: 2251.762 ns/op
# Warmup Iteration   3: 1598.364 ns/op
Iteration   1: 1745.413 ns/op
Iteration   2: 1562.521 ns/op
Iteration   3: 1582.644 ns/op
Iteration   4: 1637.644 ns/op
Iteration   5: 3242.885 ns/op
Iteration   6: 1641.541 ns/op
Iteration   7: 1712.241 ns/op
Iteration   8: 1674.245 ns/op
Iteration   9: 1555.845 ns/op
Iteration  10: 1594.790 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1771.512 ±(99.9%) 395.016 ns/op [Average]
  (min, avg, max) = (1522.668, 1771.512, 3242.885), stdev = 454.901
  CI (99.9%): [1376.497, 2166.528] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 65.00% complete, ETA 00:13:26
# Fork: 1 of 2
# Warmup Iteration   1: 19.343 ns/op
# Warmup Iteration   2: 20.925 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.079 ns/op
Iteration   2: 15.271 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.966 ns/op

# Run progress: 65.07% complete, ETA 00:13:24
# Fork: 2 of 2
# Warmup Iteration   1: 19.598 ns/op
# Warmup Iteration   2: 20.925 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.069 ns/op
Iteration   2: 15.268 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.116 ns/op
Iteration   6: 15.392 ns/op
Iteration   7: 17.014 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.020 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.966, 16.291, 17.116), stdev = 0.953
  CI (99.9%): [15.464, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 65.14% complete, ETA 00:13:23
# Fork: 1 of 2
# Warmup Iteration   1: 108.530 ns/op
# Warmup Iteration   2: 97.757 ns/op
# Warmup Iteration   3: 72.576 ns/op
Iteration   1: 73.837 ns/op
Iteration   2: 72.806 ns/op
Iteration   3: 73.834 ns/op
Iteration   4: 72.448 ns/op
Iteration   5: 73.765 ns/op
Iteration   6: 72.788 ns/op
Iteration   7: 73.787 ns/op
Iteration   8: 73.813 ns/op
Iteration   9: 73.688 ns/op
Iteration  10: 72.798 ns/op

# Run progress: 65.21% complete, ETA 00:13:21
# Fork: 2 of 2
# Warmup Iteration   1: 106.918 ns/op
# Warmup Iteration   2: 106.699 ns/op
# Warmup Iteration   3: 72.048 ns/op
Iteration   1: 84.506 ns/op
Iteration   2: 72.087 ns/op
Iteration   3: 84.457 ns/op
Iteration   4: 72.219 ns/op
Iteration   5: 84.386 ns/op
Iteration   6: 72.152 ns/op
Iteration   7: 87.738 ns/op
Iteration   8: 84.530 ns/op
Iteration   9: 84.536 ns/op
Iteration  10: 72.116 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  76.615 ±(99.9%) 4.970 ns/op [Average]
  (min, avg, max) = (72.087, 76.615, 87.738), stdev = 5.723
  CI (99.9%): [71.645, 81.584] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 65.28% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 65.845 ns/op
# Warmup Iteration   2: 61.277 ns/op
# Warmup Iteration   3: 45.805 ns/op
Iteration   1: 44.492 ns/op
Iteration   2: 45.893 ns/op
Iteration   3: 44.388 ns/op
Iteration   4: 46.029 ns/op
Iteration   5: 44.459 ns/op
Iteration   6: 45.781 ns/op
Iteration   7: 44.346 ns/op
Iteration   8: 44.413 ns/op
Iteration   9: 44.390 ns/op
Iteration  10: 45.765 ns/op

# Run progress: 65.35% complete, ETA 00:13:18
# Fork: 2 of 2
# Warmup Iteration   1: 64.984 ns/op
# Warmup Iteration   2: 67.808 ns/op
# Warmup Iteration   3: 45.802 ns/op
Iteration   1: 44.458 ns/op
Iteration   2: 45.920 ns/op
Iteration   3: 44.407 ns/op
Iteration   4: 46.102 ns/op
Iteration   5: 44.450 ns/op
Iteration   6: 45.793 ns/op
Iteration   7: 44.383 ns/op
Iteration   8: 44.414 ns/op
Iteration   9: 44.388 ns/op
Iteration  10: 45.771 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.002 ±(99.9%) 0.644 ns/op [Average]
  (min, avg, max) = (44.346, 45.002, 46.102), stdev = 0.742
  CI (99.9%): [44.358, 45.646] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 65.42% complete, ETA 00:13:16
# Fork: 1 of 2
# Warmup Iteration   1: 2558.516 ns/op
# Warmup Iteration   2: 120.840 ns/op
# Warmup Iteration   3: 76.957 ns/op
Iteration   1: 75.488 ns/op
Iteration   2: 77.357 ns/op
Iteration   3: 75.452 ns/op
Iteration   4: 78.849 ns/op
Iteration   5: 75.519 ns/op
Iteration   6: 76.940 ns/op
Iteration   7: 75.456 ns/op
Iteration   8: 75.510 ns/op
Iteration   9: 75.448 ns/op
Iteration  10: 76.812 ns/op

# Run progress: 65.49% complete, ETA 00:13:15
# Fork: 2 of 2
# Warmup Iteration   1: 2485.065 ns/op
# Warmup Iteration   2: 103.867 ns/op
# Warmup Iteration   3: 75.813 ns/op
Iteration   1: 74.586 ns/op
Iteration   2: 76.099 ns/op
Iteration   3: 74.605 ns/op
Iteration   4: 78.262 ns/op
Iteration   5: 74.606 ns/op
Iteration   6: 75.644 ns/op
Iteration   7: 74.593 ns/op
Iteration   8: 74.589 ns/op
Iteration   9: 74.599 ns/op
Iteration  10: 75.720 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  75.807 ±(99.9%) 1.083 ns/op [Average]
  (min, avg, max) = (74.586, 75.807, 78.849), stdev = 1.247
  CI (99.9%): [74.724, 76.889] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 65.56% complete, ETA 00:13:13
# Fork: 1 of 2
# Warmup Iteration   1: 67.026 ns/op
# Warmup Iteration   2: 69.269 ns/op
# Warmup Iteration   3: 49.150 ns/op
Iteration   1: 47.803 ns/op
Iteration   2: 49.101 ns/op
Iteration   3: 47.924 ns/op
Iteration   4: 49.157 ns/op
Iteration   5: 47.854 ns/op
Iteration   6: 49.081 ns/op
Iteration   7: 47.873 ns/op
Iteration   8: 47.848 ns/op
Iteration   9: 47.929 ns/op
Iteration  10: 49.142 ns/op

# Run progress: 65.63% complete, ETA 00:13:11
# Fork: 2 of 2
# Warmup Iteration   1: 66.819 ns/op
# Warmup Iteration   2: 77.323 ns/op
# Warmup Iteration   3: 49.148 ns/op
Iteration   1: 47.810 ns/op
Iteration   2: 49.096 ns/op
Iteration   3: 47.898 ns/op
Iteration   4: 49.124 ns/op
Iteration   5: 47.773 ns/op
Iteration   6: 49.112 ns/op
Iteration   7: 47.919 ns/op
Iteration   8: 47.919 ns/op
Iteration   9: 47.911 ns/op
Iteration  10: 49.165 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.372 ±(99.9%) 0.547 ns/op [Average]
  (min, avg, max) = (47.773, 48.372, 49.165), stdev = 0.630
  CI (99.9%): [47.825, 48.919] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 65.69% complete, ETA 00:13:10
# Fork: 1 of 2
# Warmup Iteration   1: 179.107 ns/op
# Warmup Iteration   2: 173.328 ns/op
# Warmup Iteration   3: 121.916 ns/op
Iteration   1: 122.958 ns/op
Iteration   2: 128.841 ns/op
Iteration   3: 123.424 ns/op
Iteration   4: 137.444 ns/op
Iteration   5: 137.642 ns/op
Iteration   6: 136.145 ns/op
Iteration   7: 136.981 ns/op
Iteration   8: 136.916 ns/op
Iteration   9: 136.923 ns/op
Iteration  10: 136.070 ns/op

# Run progress: 65.76% complete, ETA 00:13:08
# Fork: 2 of 2
# Warmup Iteration   1: 168.138 ns/op
# Warmup Iteration   2: 173.538 ns/op
# Warmup Iteration   3: 121.883 ns/op
Iteration   1: 123.223 ns/op
Iteration   2: 128.734 ns/op
Iteration   3: 123.430 ns/op
Iteration   4: 137.001 ns/op
Iteration   5: 137.701 ns/op
Iteration   6: 136.119 ns/op
Iteration   7: 136.852 ns/op
Iteration   8: 137.013 ns/op
Iteration   9: 136.842 ns/op
Iteration  10: 136.182 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  133.322 ±(99.9%) 4.976 ns/op [Average]
  (min, avg, max) = (122.958, 133.322, 137.701), stdev = 5.731
  CI (99.9%): [128.346, 138.298] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 65.83% complete, ETA 00:13:07
# Fork: 1 of 2
# Warmup Iteration   1: 19.348 ns/op
# Warmup Iteration   2: 22.928 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.222 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.008 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.402 ns/op
Iteration   7: 17.021 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.964 ns/op

# Run progress: 65.90% complete, ETA 00:13:05
# Fork: 2 of 2
# Warmup Iteration   1: 19.456 ns/op
# Warmup Iteration   2: 20.997 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.081 ns/op
Iteration   2: 15.268 ns/op
Iteration   3: 17.026 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.830 ns/op [Average]
  (min, avg, max) = (14.964, 16.289, 17.109), stdev = 0.956
  CI (99.9%): [15.459, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 65.97% complete, ETA 00:13:03
# Fork: 1 of 2
# Warmup Iteration   1: 409.045 ns/op
# Warmup Iteration   2: 4545.604 ns/op
# Warmup Iteration   3: 486.093 ns/op
Iteration   1: 19150.762 ns/op
Iteration   2: 253.844 ns/op
Iteration   3: 18864.375 ns/op
Iteration   4: 245.177 ns/op
Iteration   5: 167.018 ns/op
Iteration   6: 254.898 ns/op
Iteration   7: 13774.681 ns/op
Iteration   8: 166.817 ns/op
Iteration   9: 252.354 ns/op
Iteration  10: 167.579 ns/op

# Run progress: 66.04% complete, ETA 00:13:02
# Fork: 2 of 2
# Warmup Iteration   1: 374.123 ns/op
# Warmup Iteration   2: 4170.369 ns/op
# Warmup Iteration   3: 440.390 ns/op
Iteration   1: 1318.144 ns/op
Iteration   2: 256.927 ns/op
Iteration   3: 18075.261 ns/op
Iteration   4: 252.649 ns/op
Iteration   5: 162.949 ns/op
Iteration   6: 263.823 ns/op
Iteration   7: 13814.100 ns/op
Iteration   8: 169.866 ns/op
Iteration   9: 248.501 ns/op
Iteration  10: 171.315 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4401.552 ±(99.9%) 6439.437 ns/op [Average]
  (min, avg, max) = (162.949, 4401.552, 19150.762), stdev = 7415.666
  CI (99.9%): [≈ 0, 10840.990] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 66.11% complete, ETA 00:13:00
# Fork: 1 of 2
# Warmup Iteration   1: 386.020 ns/op
# Warmup Iteration   2: 340.407 ns/op
# Warmup Iteration   3: 388.526 ns/op
Iteration   1: 306.579 ns/op
Iteration   2: 292.159 ns/op
Iteration   3: 291.550 ns/op
Iteration   4: 298.218 ns/op
Iteration   5: 260.822 ns/op
Iteration   6: 293.152 ns/op
Iteration   7: 289.363 ns/op
Iteration   8: 260.557 ns/op
Iteration   9: 269.277 ns/op
Iteration  10: 275.389 ns/op

# Run progress: 66.18% complete, ETA 00:12:59
# Fork: 2 of 2
# Warmup Iteration   1: 371.595 ns/op
# Warmup Iteration   2: 351.511 ns/op
# Warmup Iteration   3: 347.300 ns/op
Iteration   1: 287.033 ns/op
Iteration   2: 290.175 ns/op
Iteration   3: 285.783 ns/op
Iteration   4: 296.028 ns/op
Iteration   5: 261.218 ns/op
Iteration   6: 288.461 ns/op
Iteration   7: 284.439 ns/op
Iteration   8: 260.726 ns/op
Iteration   9: 266.726 ns/op
Iteration  10: 270.102 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  281.388 ±(99.9%) 12.531 ns/op [Average]
  (min, avg, max) = (260.557, 281.388, 306.579), stdev = 14.431
  CI (99.9%): [268.857, 293.919] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 66.25% complete, ETA 00:12:57
# Fork: 1 of 2
# Warmup Iteration   1: 552.415 ns/op
# Warmup Iteration   2: 13292.548 ns/op
# Warmup Iteration   3: 214.959 ns/op
Iteration   1: 1350.806 ns/op
Iteration   2: 302.631 ns/op
Iteration   3: 301.602 ns/op
Iteration   4: 38623.177 ns/op
Iteration   5: 1112.201 ns/op
Iteration   6: 304.927 ns/op
Iteration   7: 262.090 ns/op
Iteration   8: 210.932 ns/op
Iteration   9: 236.575 ns/op
Iteration  10: 215.851 ns/op

# Run progress: 66.32% complete, ETA 00:12:55
# Fork: 2 of 2
# Warmup Iteration   1: 528.953 ns/op
# Warmup Iteration   2: 3474.230 ns/op
# Warmup Iteration   3: 215.882 ns/op
Iteration   1: 11264.903 ns/op
Iteration   2: 298.232 ns/op
Iteration   3: 305.517 ns/op
Iteration   4: 29624.990 ns/op
Iteration   5: 590.834 ns/op
Iteration   6: 301.963 ns/op
Iteration   7: 262.726 ns/op
Iteration   8: 212.157 ns/op
Iteration   9: 237.246 ns/op
Iteration  10: 216.669 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4311.801 ±(99.9%) 9191.646 ns/op [Average]
  (min, avg, max) = (210.932, 4311.801, 38623.177), stdev = 10585.114
  CI (99.9%): [≈ 0, 13503.448] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 66.39% complete, ETA 00:12:54
# Fork: 1 of 2
# Warmup Iteration   1: 235.867 ns/op
# Warmup Iteration   2: 378.509 ns/op
# Warmup Iteration   3: 253.000 ns/op
Iteration   1: 337.502 ns/op
Iteration   2: 2069.159 ns/op
Iteration   3: 238.651 ns/op
Iteration   4: 231.686 ns/op
Iteration   5: 167.890 ns/op
Iteration   6: 248.225 ns/op
Iteration   7: 221.549 ns/op
Iteration   8: 167.756 ns/op
Iteration   9: 195.574 ns/op
Iteration  10: 173.316 ns/op

# Run progress: 66.46% complete, ETA 00:12:52
# Fork: 2 of 2
# Warmup Iteration   1: 248.714 ns/op
# Warmup Iteration   2: 376.890 ns/op
# Warmup Iteration   3: 256.886 ns/op
Iteration   1: 488.572 ns/op
Iteration   2: 734.531 ns/op
Iteration   3: 228.036 ns/op
Iteration   4: 221.509 ns/op
Iteration   5: 163.204 ns/op
Iteration   6: 240.446 ns/op
Iteration   7: 212.049 ns/op
Iteration   8: 163.319 ns/op
Iteration   9: 184.150 ns/op
Iteration  10: 169.803 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  342.846 ±(99.9%) 372.086 ns/op [Average]
  (min, avg, max) = (163.204, 342.846, 2069.159), stdev = 428.494
  CI (99.9%): [≈ 0, 714.932] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 66.53% complete, ETA 00:12:51
# Fork: 1 of 2
# Warmup Iteration   1: 539.084 ns/op
# Warmup Iteration   2: 17229.363 ns/op
# Warmup Iteration   3: 795.512 ns/op
Iteration   1: 416.914 ns/op
Iteration   2: 529.763 ns/op
Iteration   3: 525.137 ns/op
Iteration   4: 562.424 ns/op
Iteration   5: 314.351 ns/op
Iteration   6: 563.720 ns/op
Iteration   7: 432.383 ns/op
Iteration   8: 314.301 ns/op
Iteration   9: 406.131 ns/op
Iteration  10: 435.619 ns/op

# Run progress: 66.60% complete, ETA 00:12:49
# Fork: 2 of 2
# Warmup Iteration   1: 501.557 ns/op
# Warmup Iteration   2: 13691.309 ns/op
# Warmup Iteration   3: 656.248 ns/op
Iteration   1: 423.754 ns/op
Iteration   2: 540.473 ns/op
Iteration   3: 536.962 ns/op
Iteration   4: 562.948 ns/op
Iteration   5: 315.518 ns/op
Iteration   6: 568.486 ns/op
Iteration   7: 433.577 ns/op
Iteration   8: 315.380 ns/op
Iteration   9: 414.473 ns/op
Iteration  10: 431.308 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  452.181 ±(99.9%) 79.476 ns/op [Average]
  (min, avg, max) = (314.301, 452.181, 568.486), stdev = 91.524
  CI (99.9%): [372.706, 531.657] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 66.67% complete, ETA 00:12:47
# Fork: 1 of 2
# Warmup Iteration   1: 19.715 ns/op
# Warmup Iteration   2: 22.651 ns/op
# Warmup Iteration   3: 15.149 ns/op
Iteration   1: 17.009 ns/op
Iteration   2: 17.126 ns/op
Iteration   3: 17.043 ns/op
Iteration   4: 15.221 ns/op
Iteration   5: 17.009 ns/op
Iteration   6: 14.969 ns/op
Iteration   7: 17.033 ns/op
Iteration   8: 17.030 ns/op
Iteration   9: 17.033 ns/op
Iteration  10: 15.189 ns/op

# Run progress: 66.74% complete, ETA 00:12:46
# Fork: 2 of 2
# Warmup Iteration   1: 20.012 ns/op
# Warmup Iteration   2: 22.616 ns/op
# Warmup Iteration   3: 15.139 ns/op
Iteration   1: 17.010 ns/op
Iteration   2: 17.122 ns/op
Iteration   3: 17.033 ns/op
Iteration   4: 15.265 ns/op
Iteration   5: 17.010 ns/op
Iteration   6: 14.974 ns/op
Iteration   7: 17.037 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.032 ns/op
Iteration  10: 15.207 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.468 ±(99.9%) 0.779 ns/op [Average]
  (min, avg, max) = (14.969, 16.468, 17.126), stdev = 0.897
  CI (99.9%): [15.689, 17.247] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 66.81% complete, ETA 00:12:44
# Fork: 1 of 2
# Warmup Iteration   1: 172.448 ns/op
# Warmup Iteration   2: 113.242 ns/op
# Warmup Iteration   3: 90.588 ns/op
Iteration   1: 92.121 ns/op
Iteration   2: 90.715 ns/op
Iteration   3: 92.009 ns/op
Iteration   4: 91.164 ns/op
Iteration   5: 92.166 ns/op
Iteration   6: 90.770 ns/op
Iteration   7: 92.047 ns/op
Iteration   8: 92.065 ns/op
Iteration   9: 92.010 ns/op
Iteration  10: 90.465 ns/op

# Run progress: 66.88% complete, ETA 00:12:43
# Fork: 2 of 2
# Warmup Iteration   1: 162.196 ns/op
# Warmup Iteration   2: 124.614 ns/op
# Warmup Iteration   3: 90.596 ns/op
Iteration   1: 92.091 ns/op
Iteration   2: 90.733 ns/op
Iteration   3: 92.070 ns/op
Iteration   4: 91.006 ns/op
Iteration   5: 91.963 ns/op
Iteration   6: 90.688 ns/op
Iteration   7: 91.985 ns/op
Iteration   8: 91.958 ns/op
Iteration   9: 92.045 ns/op
Iteration  10: 90.441 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.525 ±(99.9%) 0.582 ns/op [Average]
  (min, avg, max) = (90.441, 91.525, 92.166), stdev = 0.670
  CI (99.9%): [90.944, 92.107] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 66.94% complete, ETA 00:12:41
# Fork: 1 of 2
# Warmup Iteration   1: 63.762 ns/op
# Warmup Iteration   2: 61.588 ns/op
# Warmup Iteration   3: 45.816 ns/op
Iteration   1: 44.503 ns/op
Iteration   2: 45.799 ns/op
Iteration   3: 44.374 ns/op
Iteration   4: 46.260 ns/op
Iteration   5: 44.413 ns/op
Iteration   6: 45.834 ns/op
Iteration   7: 44.381 ns/op
Iteration   8: 44.369 ns/op
Iteration   9: 44.373 ns/op
Iteration  10: 45.778 ns/op

# Run progress: 67.01% complete, ETA 00:12:39
# Fork: 2 of 2
# Warmup Iteration   1: 63.996 ns/op
# Warmup Iteration   2: 64.163 ns/op
# Warmup Iteration   3: 45.775 ns/op
Iteration   1: 44.528 ns/op
Iteration   2: 45.831 ns/op
Iteration   3: 44.389 ns/op
Iteration   4: 46.242 ns/op
Iteration   5: 44.397 ns/op
Iteration   6: 45.822 ns/op
Iteration   7: 44.374 ns/op
Iteration   8: 44.374 ns/op
Iteration   9: 44.411 ns/op
Iteration  10: 45.775 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.012 ±(99.9%) 0.669 ns/op [Average]
  (min, avg, max) = (44.369, 45.012, 46.260), stdev = 0.771
  CI (99.9%): [44.342, 45.681] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 67.08% complete, ETA 00:12:38
# Fork: 1 of 2
# Warmup Iteration   1: 288.375 ns/op
# Warmup Iteration   2: 144.668 ns/op
# Warmup Iteration   3: 110.407 ns/op
Iteration   1: 108.952 ns/op
Iteration   2: 110.602 ns/op
Iteration   3: 109.090 ns/op
Iteration   4: 110.855 ns/op
Iteration   5: 109.053 ns/op
Iteration   6: 110.647 ns/op
Iteration   7: 108.983 ns/op
Iteration   8: 108.951 ns/op
Iteration   9: 109.062 ns/op
Iteration  10: 110.231 ns/op

# Run progress: 67.15% complete, ETA 00:12:36
# Fork: 2 of 2
# Warmup Iteration   1: 275.435 ns/op
# Warmup Iteration   2: 143.447 ns/op
# Warmup Iteration   3: 109.194 ns/op
Iteration   1: 108.134 ns/op
Iteration   2: 109.532 ns/op
Iteration   3: 107.838 ns/op
Iteration   4: 109.631 ns/op
Iteration   5: 107.890 ns/op
Iteration   6: 109.521 ns/op
Iteration   7: 107.927 ns/op
Iteration   8: 108.044 ns/op
Iteration   9: 107.810 ns/op
Iteration  10: 108.919 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  109.084 ±(99.9%) 0.843 ns/op [Average]
  (min, avg, max) = (107.810, 109.084, 110.855), stdev = 0.970
  CI (99.9%): [108.241, 109.926] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 67.22% complete, ETA 00:12:35
# Fork: 1 of 2
# Warmup Iteration   1: 67.907 ns/op
# Warmup Iteration   2: 73.826 ns/op
# Warmup Iteration   3: 49.144 ns/op
Iteration   1: 47.866 ns/op
Iteration   2: 49.088 ns/op
Iteration   3: 47.858 ns/op
Iteration   4: 49.123 ns/op
Iteration   5: 47.922 ns/op
Iteration   6: 49.053 ns/op
Iteration   7: 47.857 ns/op
Iteration   8: 47.928 ns/op
Iteration   9: 47.863 ns/op
Iteration  10: 49.159 ns/op

# Run progress: 67.29% complete, ETA 00:12:33
# Fork: 2 of 2
# Warmup Iteration   1: 68.528 ns/op
# Warmup Iteration   2: 68.749 ns/op
# Warmup Iteration   3: 49.133 ns/op
Iteration   1: 47.878 ns/op
Iteration   2: 49.113 ns/op
Iteration   3: 47.860 ns/op
Iteration   4: 49.114 ns/op
Iteration   5: 47.927 ns/op
Iteration   6: 49.032 ns/op
Iteration   7: 47.844 ns/op
Iteration   8: 47.916 ns/op
Iteration   9: 47.859 ns/op
Iteration  10: 49.068 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.366 ±(99.9%) 0.530 ns/op [Average]
  (min, avg, max) = (47.844, 48.366, 49.159), stdev = 0.610
  CI (99.9%): [47.836, 48.896] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 67.36% complete, ETA 00:12:32
# Fork: 1 of 2
# Warmup Iteration   1: 166.108 ns/op
# Warmup Iteration   2: 145.423 ns/op
# Warmup Iteration   3: 97.301 ns/op
Iteration   1: 99.097 ns/op
Iteration   2: 97.491 ns/op
Iteration   3: 99.038 ns/op
Iteration   4: 106.244 ns/op
Iteration   5: 105.705 ns/op
Iteration   6: 104.137 ns/op
Iteration   7: 105.648 ns/op
Iteration   8: 105.721 ns/op
Iteration   9: 105.660 ns/op
Iteration  10: 104.264 ns/op

# Run progress: 67.43% complete, ETA 00:12:30
# Fork: 2 of 2
# Warmup Iteration   1: 168.950 ns/op
# Warmup Iteration   2: 181.875 ns/op
# Warmup Iteration   3: 97.394 ns/op
Iteration   1: 99.093 ns/op
Iteration   2: 97.421 ns/op
Iteration   3: 98.999 ns/op
Iteration   4: 106.213 ns/op
Iteration   5: 105.680 ns/op
Iteration   6: 104.082 ns/op
Iteration   7: 105.493 ns/op
Iteration   8: 105.547 ns/op
Iteration   9: 105.740 ns/op
Iteration  10: 104.202 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.274 ±(99.9%) 2.850 ns/op [Average]
  (min, avg, max) = (97.421, 103.274, 106.244), stdev = 3.282
  CI (99.9%): [100.423, 106.124] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 67.50% complete, ETA 00:12:28
# Fork: 1 of 2
# Warmup Iteration   1: 19.852 ns/op
# Warmup Iteration   2: 22.785 ns/op
# Warmup Iteration   3: 15.150 ns/op
Iteration   1: 17.025 ns/op
Iteration   2: 17.139 ns/op
Iteration   3: 17.031 ns/op
Iteration   4: 15.222 ns/op
Iteration   5: 17.014 ns/op
Iteration   6: 14.961 ns/op
Iteration   7: 17.029 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.034 ns/op
Iteration  10: 15.217 ns/op

# Run progress: 67.57% complete, ETA 00:12:27
# Fork: 2 of 2
# Warmup Iteration   1: 19.458 ns/op
# Warmup Iteration   2: 20.700 ns/op
# Warmup Iteration   3: 15.137 ns/op
Iteration   1: 17.004 ns/op
Iteration   2: 17.109 ns/op
Iteration   3: 17.033 ns/op
Iteration   4: 15.276 ns/op
Iteration   5: 17.007 ns/op
Iteration   6: 14.973 ns/op
Iteration   7: 17.036 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.041 ns/op
Iteration  10: 15.206 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.470 ±(99.9%) 0.777 ns/op [Average]
  (min, avg, max) = (14.961, 16.470, 17.139), stdev = 0.895
  CI (99.9%): [15.693, 17.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 67.64% complete, ETA 00:12:25
# Fork: 1 of 2
# Warmup Iteration   1: 172.044 ns/op
# Warmup Iteration   2: 131.333 ns/op
# Warmup Iteration   3: 90.595 ns/op
Iteration   1: 92.089 ns/op
Iteration   2: 90.759 ns/op
Iteration   3: 91.961 ns/op
Iteration   4: 91.139 ns/op
Iteration   5: 92.177 ns/op
Iteration   6: 90.717 ns/op
Iteration   7: 91.975 ns/op
Iteration   8: 92.096 ns/op
Iteration   9: 91.980 ns/op
Iteration  10: 90.550 ns/op

# Run progress: 67.71% complete, ETA 00:12:24
# Fork: 2 of 2
# Warmup Iteration   1: 169.291 ns/op
# Warmup Iteration   2: 124.077 ns/op
# Warmup Iteration   3: 90.430 ns/op
Iteration   1: 92.225 ns/op
Iteration   2: 90.376 ns/op
Iteration   3: 92.065 ns/op
Iteration   4: 91.082 ns/op
Iteration   5: 92.254 ns/op
Iteration   6: 90.371 ns/op
Iteration   7: 91.859 ns/op
Iteration   8: 92.061 ns/op
Iteration   9: 92.089 ns/op
Iteration  10: 90.203 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.501 ±(99.9%) 0.649 ns/op [Average]
  (min, avg, max) = (90.203, 91.501, 92.254), stdev = 0.748
  CI (99.9%): [90.852, 92.151] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 67.78% complete, ETA 00:12:22
# Fork: 1 of 2
# Warmup Iteration   1: 64.712 ns/op
# Warmup Iteration   2: 66.301 ns/op
# Warmup Iteration   3: 45.795 ns/op
Iteration   1: 44.509 ns/op
Iteration   2: 45.864 ns/op
Iteration   3: 44.348 ns/op
Iteration   4: 46.281 ns/op
Iteration   5: 44.429 ns/op
Iteration   6: 45.798 ns/op
Iteration   7: 44.375 ns/op
Iteration   8: 44.394 ns/op
Iteration   9: 44.373 ns/op
Iteration  10: 45.811 ns/op

# Run progress: 67.85% complete, ETA 00:12:20
# Fork: 2 of 2
# Warmup Iteration   1: 68.978 ns/op
# Warmup Iteration   2: 71.365 ns/op
# Warmup Iteration   3: 45.771 ns/op
Iteration   1: 44.507 ns/op
Iteration   2: 45.851 ns/op
Iteration   3: 44.354 ns/op
Iteration   4: 46.255 ns/op
Iteration   5: 44.409 ns/op
Iteration   6: 45.793 ns/op
Iteration   7: 44.390 ns/op
Iteration   8: 44.407 ns/op
Iteration   9: 44.374 ns/op
Iteration  10: 45.839 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.018 ±(99.9%) 0.678 ns/op [Average]
  (min, avg, max) = (44.348, 45.018, 46.281), stdev = 0.781
  CI (99.9%): [44.340, 45.696] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 67.92% complete, ETA 00:12:19
# Fork: 1 of 2
# Warmup Iteration   1: 224.634 ns/op
# Warmup Iteration   2: 163.347 ns/op
# Warmup Iteration   3: 111.361 ns/op
Iteration   1: 110.279 ns/op
Iteration   2: 111.682 ns/op
Iteration   3: 110.269 ns/op
Iteration   4: 111.760 ns/op
Iteration   5: 110.197 ns/op
Iteration   6: 111.511 ns/op
Iteration   7: 110.285 ns/op
Iteration   8: 110.243 ns/op
Iteration   9: 110.261 ns/op
Iteration  10: 111.069 ns/op

# Run progress: 67.99% complete, ETA 00:12:17
# Fork: 2 of 2
# Warmup Iteration   1: 226.097 ns/op
# Warmup Iteration   2: 177.543 ns/op
# Warmup Iteration   3: 111.352 ns/op
Iteration   1: 110.321 ns/op
Iteration   2: 111.682 ns/op
Iteration   3: 110.275 ns/op
Iteration   4: 111.812 ns/op
Iteration   5: 110.288 ns/op
Iteration   6: 111.362 ns/op
Iteration   7: 110.351 ns/op
Iteration   8: 110.235 ns/op
Iteration   9: 110.259 ns/op
Iteration  10: 111.071 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  110.761 ±(99.9%) 0.556 ns/op [Average]
  (min, avg, max) = (110.197, 110.761, 111.812), stdev = 0.641
  CI (99.9%): [110.204, 111.317] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 68.06% complete, ETA 00:12:15
# Fork: 1 of 2
# Warmup Iteration   1: 67.573 ns/op
# Warmup Iteration   2: 75.825 ns/op
# Warmup Iteration   3: 49.127 ns/op
Iteration   1: 47.872 ns/op
Iteration   2: 49.095 ns/op
Iteration   3: 47.858 ns/op
Iteration   4: 49.112 ns/op
Iteration   5: 47.894 ns/op
Iteration   6: 49.041 ns/op
Iteration   7: 47.839 ns/op
Iteration   8: 47.909 ns/op
Iteration   9: 47.869 ns/op
Iteration  10: 49.112 ns/op

# Run progress: 68.13% complete, ETA 00:12:14
# Fork: 2 of 2
# Warmup Iteration   1: 68.395 ns/op
# Warmup Iteration   2: 68.401 ns/op
# Warmup Iteration   3: 49.138 ns/op
Iteration   1: 47.832 ns/op
Iteration   2: 49.094 ns/op
Iteration   3: 47.864 ns/op
Iteration   4: 49.122 ns/op
Iteration   5: 47.921 ns/op
Iteration   6: 49.025 ns/op
Iteration   7: 47.856 ns/op
Iteration   8: 47.914 ns/op
Iteration   9: 47.874 ns/op
Iteration  10: 49.106 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.360 ±(99.9%) 0.530 ns/op [Average]
  (min, avg, max) = (47.832, 48.360, 49.122), stdev = 0.611
  CI (99.9%): [47.830, 48.891] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 68.19% complete, ETA 00:12:12
# Fork: 1 of 2
# Warmup Iteration   1: 180.301 ns/op
# Warmup Iteration   2: 200.227 ns/op
# Warmup Iteration   3: 101.727 ns/op
Iteration   1: 103.078 ns/op
Iteration   2: 101.503 ns/op
Iteration   3: 102.950 ns/op
Iteration   4: 108.354 ns/op
Iteration   5: 108.272 ns/op
Iteration   6: 106.908 ns/op
Iteration   7: 108.303 ns/op
Iteration   8: 108.253 ns/op
Iteration   9: 108.480 ns/op
Iteration  10: 107.032 ns/op

# Run progress: 68.26% complete, ETA 00:12:11
# Fork: 2 of 2
# Warmup Iteration   1: 182.082 ns/op
# Warmup Iteration   2: 198.175 ns/op
# Warmup Iteration   3: 101.656 ns/op
Iteration   1: 103.150 ns/op
Iteration   2: 101.531 ns/op
Iteration   3: 102.997 ns/op
Iteration   4: 108.323 ns/op
Iteration   5: 108.241 ns/op
Iteration   6: 106.882 ns/op
Iteration   7: 108.207 ns/op
Iteration   8: 108.354 ns/op
Iteration   9: 108.417 ns/op
Iteration  10: 107.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  106.315 ±(99.9%) 2.279 ns/op [Average]
  (min, avg, max) = (101.503, 106.315, 108.480), stdev = 2.625
  CI (99.9%): [104.036, 108.594] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 68.33% complete, ETA 00:12:09
# Fork: 1 of 2
# Warmup Iteration   1: 19.425 ns/op
# Warmup Iteration   2: 22.606 ns/op
# Warmup Iteration   3: 15.151 ns/op
Iteration   1: 17.011 ns/op
Iteration   2: 17.132 ns/op
Iteration   3: 17.038 ns/op
Iteration   4: 15.282 ns/op
Iteration   5: 17.023 ns/op
Iteration   6: 14.966 ns/op
Iteration   7: 17.034 ns/op
Iteration   8: 17.001 ns/op
Iteration   9: 17.045 ns/op
Iteration  10: 15.202 ns/op

# Run progress: 68.40% complete, ETA 00:12:07
# Fork: 2 of 2
# Warmup Iteration   1: 19.523 ns/op
# Warmup Iteration   2: 22.361 ns/op
# Warmup Iteration   3: 15.144 ns/op
Iteration   1: 17.018 ns/op
Iteration   2: 17.138 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.259 ns/op
Iteration   5: 17.009 ns/op
Iteration   6: 14.973 ns/op
Iteration   7: 17.038 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.027 ns/op
Iteration  10: 15.203 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.472 ±(99.9%) 0.776 ns/op [Average]
  (min, avg, max) = (14.966, 16.472, 17.138), stdev = 0.893
  CI (99.9%): [15.696, 17.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 68.47% complete, ETA 00:12:06
# Fork: 1 of 2
# Warmup Iteration   1: 178.792 ns/op
# Warmup Iteration   2: 391.702 ns/op
# Warmup Iteration   3: 94.791 ns/op
Iteration   1: 95.289 ns/op
Iteration   2: 93.149 ns/op
Iteration   3: 95.376 ns/op
Iteration   4: 94.620 ns/op
Iteration   5: 95.759 ns/op
Iteration   6: 2338.629 ns/op
Iteration   7: 100.291 ns/op
Iteration   8: 100.216 ns/op
Iteration   9: 101.723 ns/op
Iteration  10: 100.037 ns/op

# Run progress: 68.54% complete, ETA 00:12:04
# Fork: 2 of 2
# Warmup Iteration   1: 181.133 ns/op
# Warmup Iteration   2: 305.914 ns/op
# Warmup Iteration   3: 94.925 ns/op
Iteration   1: 95.218 ns/op
Iteration   2: 93.155 ns/op
Iteration   3: 95.232 ns/op
Iteration   4: 98.173 ns/op
Iteration   5: 96.030 ns/op
Iteration   6: 9509.289 ns/op
Iteration   7: 100.216 ns/op
Iteration   8: 100.351 ns/op
Iteration   9: 101.648 ns/op
Iteration  10: 100.154 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  680.228 ±(99.9%) 1856.153 ns/op [Average]
  (min, avg, max) = (93.149, 680.228, 9509.289), stdev = 2137.548
  CI (99.9%): [≈ 0, 2536.380] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 68.61% complete, ETA 00:12:03
# Fork: 1 of 2
# Warmup Iteration   1: 70.100 ns/op
# Warmup Iteration   2: 63.178 ns/op
# Warmup Iteration   3: 45.811 ns/op
Iteration   1: 44.491 ns/op
Iteration   2: 45.822 ns/op
Iteration   3: 44.376 ns/op
Iteration   4: 46.237 ns/op
Iteration   5: 44.409 ns/op
Iteration   6: 45.800 ns/op
Iteration   7: 44.376 ns/op
Iteration   8: 44.405 ns/op
Iteration   9: 44.380 ns/op
Iteration  10: 45.773 ns/op

# Run progress: 68.68% complete, ETA 00:12:01
# Fork: 2 of 2
# Warmup Iteration   1: 64.105 ns/op
# Warmup Iteration   2: 61.472 ns/op
# Warmup Iteration   3: 45.775 ns/op
Iteration   1: 44.491 ns/op
Iteration   2: 45.800 ns/op
Iteration   3: 44.402 ns/op
Iteration   4: 46.260 ns/op
Iteration   5: 44.396 ns/op
Iteration   6: 45.834 ns/op
Iteration   7: 44.378 ns/op
Iteration   8: 44.387 ns/op
Iteration   9: 44.375 ns/op
Iteration  10: 45.819 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.011 ±(99.9%) 0.669 ns/op [Average]
  (min, avg, max) = (44.375, 45.011, 46.260), stdev = 0.771
  CI (99.9%): [44.341, 45.680] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 68.75% complete, ETA 00:11:59
# Fork: 1 of 2
# Warmup Iteration   1: 226.705 ns/op
# Warmup Iteration   2: 859.102 ns/op
# Warmup Iteration   3: 109.872 ns/op
Iteration   1: 107.838 ns/op
Iteration   2: 109.499 ns/op
Iteration   3: 109.719 ns/op
Iteration   4: 7976.138 ns/op
Iteration   5: 107.447 ns/op
Iteration   6: 112.887 ns/op
Iteration   7: 109.373 ns/op
Iteration   8: 110.309 ns/op
Iteration   9: 110.644 ns/op
Iteration  10: 110.018 ns/op

# Run progress: 68.82% complete, ETA 00:11:58
# Fork: 2 of 2
# Warmup Iteration   1: 233.459 ns/op
# Warmup Iteration   2: 1179.404 ns/op
# Warmup Iteration   3: 110.182 ns/op
Iteration   1: 107.672 ns/op
Iteration   2: 109.507 ns/op
Iteration   3: 109.686 ns/op
Iteration   4: 6617.730 ns/op
Iteration   5: 107.744 ns/op
Iteration   6: 112.861 ns/op
Iteration   7: 109.394 ns/op
Iteration   8: 110.232 ns/op
Iteration   9: 110.639 ns/op
Iteration  10: 110.146 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  828.474 ±(99.9%) 1930.456 ns/op [Average]
  (min, avg, max) = (107.447, 828.474, 7976.138), stdev = 2223.115
  CI (99.9%): [≈ 0, 2758.930] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 68.89% complete, ETA 00:11:56
# Fork: 1 of 2
# Warmup Iteration   1: 68.481 ns/op
# Warmup Iteration   2: 68.571 ns/op
# Warmup Iteration   3: 49.162 ns/op
Iteration   1: 47.854 ns/op
Iteration   2: 49.092 ns/op
Iteration   3: 47.849 ns/op
Iteration   4: 49.107 ns/op
Iteration   5: 47.932 ns/op
Iteration   6: 49.024 ns/op
Iteration   7: 47.864 ns/op
Iteration   8: 47.881 ns/op
Iteration   9: 47.874 ns/op
Iteration  10: 49.129 ns/op

# Run progress: 68.96% complete, ETA 00:11:55
# Fork: 2 of 2
# Warmup Iteration   1: 67.083 ns/op
# Warmup Iteration   2: 67.873 ns/op
# Warmup Iteration   3: 49.151 ns/op
Iteration   1: 47.860 ns/op
Iteration   2: 49.111 ns/op
Iteration   3: 47.932 ns/op
Iteration   4: 49.086 ns/op
Iteration   5: 47.902 ns/op
Iteration   6: 49.083 ns/op
Iteration   7: 47.840 ns/op
Iteration   8: 47.910 ns/op
Iteration   9: 47.864 ns/op
Iteration  10: 49.130 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.366 ±(99.9%) 0.531 ns/op [Average]
  (min, avg, max) = (47.840, 48.366, 49.130), stdev = 0.612
  CI (99.9%): [47.835, 48.897] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 69.03% complete, ETA 00:11:53
# Fork: 1 of 2
# Warmup Iteration   1: 175.993 ns/op
# Warmup Iteration   2: 197.875 ns/op
# Warmup Iteration   3: 103.932 ns/op
Iteration   1: 105.336 ns/op
Iteration   2: 105.686 ns/op
Iteration   3: 107.133 ns/op
Iteration   4: 112.767 ns/op
Iteration   5: 109.275 ns/op
Iteration   6: 111.325 ns/op
Iteration   7: 109.305 ns/op
Iteration   8: 109.295 ns/op
Iteration   9: 109.321 ns/op
Iteration  10: 107.780 ns/op

# Run progress: 69.10% complete, ETA 00:11:51
# Fork: 2 of 2
# Warmup Iteration   1: 175.057 ns/op
# Warmup Iteration   2: 195.871 ns/op
# Warmup Iteration   3: 103.924 ns/op
Iteration   1: 105.630 ns/op
Iteration   2: 105.607 ns/op
Iteration   3: 107.088 ns/op
Iteration   4: 112.687 ns/op
Iteration   5: 109.254 ns/op
Iteration   6: 111.235 ns/op
Iteration   7: 109.260 ns/op
Iteration   8: 109.239 ns/op
Iteration   9: 109.360 ns/op
Iteration  10: 107.702 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  108.714 ±(99.9%) 1.940 ns/op [Average]
  (min, avg, max) = (105.336, 108.714, 112.767), stdev = 2.234
  CI (99.9%): [106.774, 110.654] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 69.17% complete, ETA 00:11:50
# Fork: 1 of 2
# Warmup Iteration   1: 19.572 ns/op
# Warmup Iteration   2: 22.329 ns/op
# Warmup Iteration   3: 15.156 ns/op
Iteration   1: 17.008 ns/op
Iteration   2: 17.120 ns/op
Iteration   3: 17.031 ns/op
Iteration   4: 15.278 ns/op
Iteration   5: 17.012 ns/op
Iteration   6: 14.975 ns/op
Iteration   7: 17.032 ns/op
Iteration   8: 17.007 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 15.222 ns/op

# Run progress: 69.24% complete, ETA 00:11:48
# Fork: 2 of 2
# Warmup Iteration   1: 19.586 ns/op
# Warmup Iteration   2: 20.873 ns/op
# Warmup Iteration   3: 15.140 ns/op
Iteration   1: 17.020 ns/op
Iteration   2: 17.104 ns/op
Iteration   3: 17.038 ns/op
Iteration   4: 15.272 ns/op
Iteration   5: 17.020 ns/op
Iteration   6: 14.978 ns/op
Iteration   7: 17.038 ns/op
Iteration   8: 17.006 ns/op
Iteration   9: 17.029 ns/op
Iteration  10: 15.213 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.471 ±(99.9%) 0.770 ns/op [Average]
  (min, avg, max) = (14.975, 16.471, 17.120), stdev = 0.887
  CI (99.9%): [15.701, 17.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 69.31% complete, ETA 00:11:47
# Fork: 1 of 2
# Warmup Iteration   1: 109.096 ns/op
# Warmup Iteration   2: 107.920 ns/op
# Warmup Iteration   3: 72.261 ns/op
Iteration   1: 73.365 ns/op
Iteration   2: 71.941 ns/op
Iteration   3: 73.489 ns/op
Iteration   4: 72.536 ns/op
Iteration   5: 73.422 ns/op
Iteration   6: 72.246 ns/op
Iteration   7: 73.465 ns/op
Iteration   8: 73.656 ns/op
Iteration   9: 73.472 ns/op
Iteration  10: 72.163 ns/op

# Run progress: 69.38% complete, ETA 00:11:45
# Fork: 2 of 2
# Warmup Iteration   1: 110.636 ns/op
# Warmup Iteration   2: 95.779 ns/op
# Warmup Iteration   3: 71.671 ns/op
Iteration   1: 73.430 ns/op
Iteration   2: 72.040 ns/op
Iteration   3: 73.734 ns/op
Iteration   4: 71.865 ns/op
Iteration   5: 73.701 ns/op
Iteration   6: 71.842 ns/op
Iteration   7: 73.580 ns/op
Iteration   8: 73.598 ns/op
Iteration   9: 73.436 ns/op
Iteration  10: 71.934 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  72.946 ±(99.9%) 0.653 ns/op [Average]
  (min, avg, max) = (71.842, 72.946, 73.734), stdev = 0.752
  CI (99.9%): [72.292, 73.599] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 69.44% complete, ETA 00:11:44
# Fork: 1 of 2
# Warmup Iteration   1: 65.542 ns/op
# Warmup Iteration   2: 67.418 ns/op
# Warmup Iteration   3: 45.781 ns/op
Iteration   1: 44.484 ns/op
Iteration   2: 45.799 ns/op
Iteration   3: 44.417 ns/op
Iteration   4: 46.316 ns/op
Iteration   5: 44.379 ns/op
Iteration   6: 45.793 ns/op
Iteration   7: 44.381 ns/op
Iteration   8: 44.366 ns/op
Iteration   9: 44.388 ns/op
Iteration  10: 45.779 ns/op

# Run progress: 69.51% complete, ETA 00:11:42
# Fork: 2 of 2
# Warmup Iteration   1: 64.508 ns/op
# Warmup Iteration   2: 71.898 ns/op
# Warmup Iteration   3: 45.786 ns/op
Iteration   1: 44.488 ns/op
Iteration   2: 45.785 ns/op
Iteration   3: 44.369 ns/op
Iteration   4: 46.243 ns/op
Iteration   5: 44.398 ns/op
Iteration   6: 45.779 ns/op
Iteration   7: 44.383 ns/op
Iteration   8: 44.381 ns/op
Iteration   9: 44.367 ns/op
Iteration  10: 45.793 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.004 ±(99.9%) 0.671 ns/op [Average]
  (min, avg, max) = (44.366, 45.004, 46.316), stdev = 0.773
  CI (99.9%): [44.333, 45.675] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 69.58% complete, ETA 00:11:40
# Fork: 1 of 2
# Warmup Iteration   1: 1731.445 ns/op
# Warmup Iteration   2: 104.887 ns/op
# Warmup Iteration   3: 76.785 ns/op
Iteration   1: 75.463 ns/op
Iteration   2: 77.055 ns/op
Iteration   3: 75.928 ns/op
Iteration   4: 77.523 ns/op
Iteration   5: 75.459 ns/op
Iteration   6: 77.143 ns/op
Iteration   7: 76.081 ns/op
Iteration   8: 75.447 ns/op
Iteration   9: 76.097 ns/op
Iteration  10: 76.678 ns/op

# Run progress: 69.65% complete, ETA 00:11:39
# Fork: 2 of 2
# Warmup Iteration   1: 640.877 ns/op
# Warmup Iteration   2: 125.366 ns/op
# Warmup Iteration   3: 76.858 ns/op
Iteration   1: 75.544 ns/op
Iteration   2: 76.757 ns/op
Iteration   3: 75.474 ns/op
Iteration   4: 77.570 ns/op
Iteration   5: 75.556 ns/op
Iteration   6: 76.800 ns/op
Iteration   7: 75.519 ns/op
Iteration   8: 75.651 ns/op
Iteration   9: 75.586 ns/op
Iteration  10: 76.673 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  76.200 ±(99.9%) 0.650 ns/op [Average]
  (min, avg, max) = (75.447, 76.200, 77.570), stdev = 0.749
  CI (99.9%): [75.550, 76.850] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 69.72% complete, ETA 00:11:37
# Fork: 1 of 2
# Warmup Iteration   1: 68.482 ns/op
# Warmup Iteration   2: 76.257 ns/op
# Warmup Iteration   3: 49.145 ns/op
Iteration   1: 47.860 ns/op
Iteration   2: 49.097 ns/op
Iteration   3: 47.867 ns/op
Iteration   4: 49.118 ns/op
Iteration   5: 47.911 ns/op
Iteration   6: 49.057 ns/op
Iteration   7: 47.860 ns/op
Iteration   8: 47.883 ns/op
Iteration   9: 47.860 ns/op
Iteration  10: 49.158 ns/op

# Run progress: 69.79% complete, ETA 00:11:36
# Fork: 2 of 2
# Warmup Iteration   1: 67.210 ns/op
# Warmup Iteration   2: 68.131 ns/op
# Warmup Iteration   3: 49.142 ns/op
Iteration   1: 47.878 ns/op
Iteration   2: 49.061 ns/op
Iteration   3: 47.864 ns/op
Iteration   4: 49.095 ns/op
Iteration   5: 47.919 ns/op
Iteration   6: 49.046 ns/op
Iteration   7: 47.867 ns/op
Iteration   8: 47.915 ns/op
Iteration   9: 47.860 ns/op
Iteration  10: 49.107 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.364 ±(99.9%) 0.530 ns/op [Average]
  (min, avg, max) = (47.860, 48.364, 49.158), stdev = 0.611
  CI (99.9%): [47.834, 48.894] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 69.86% complete, ETA 00:11:34
# Fork: 1 of 2
# Warmup Iteration   1: 166.330 ns/op
# Warmup Iteration   2: 189.408 ns/op
# Warmup Iteration   3: 97.408 ns/op
Iteration   1: 98.986 ns/op
Iteration   2: 97.448 ns/op
Iteration   3: 98.982 ns/op
Iteration   4: 106.280 ns/op
Iteration   5: 105.722 ns/op
Iteration   6: 104.078 ns/op
Iteration   7: 105.710 ns/op
Iteration   8: 105.844 ns/op
Iteration   9: 105.745 ns/op
Iteration  10: 104.252 ns/op

# Run progress: 69.93% complete, ETA 00:11:32
# Fork: 2 of 2
# Warmup Iteration   1: 171.037 ns/op
# Warmup Iteration   2: 192.529 ns/op
# Warmup Iteration   3: 97.324 ns/op
Iteration   1: 99.065 ns/op
Iteration   2: 97.507 ns/op
Iteration   3: 98.949 ns/op
Iteration   4: 106.286 ns/op
Iteration   5: 105.716 ns/op
Iteration   6: 104.125 ns/op
Iteration   7: 105.636 ns/op
Iteration   8: 105.713 ns/op
Iteration   9: 105.747 ns/op
Iteration  10: 104.076 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.293 ±(99.9%) 2.885 ns/op [Average]
  (min, avg, max) = (97.448, 103.293, 106.286), stdev = 3.323
  CI (99.9%): [100.408, 106.178] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 70.00% complete, ETA 00:11:31
# Fork: 1 of 2
# Warmup Iteration   1: 19.205 ns/op
# Warmup Iteration   2: 22.793 ns/op
# Warmup Iteration   3: 15.153 ns/op
Iteration   1: 17.010 ns/op
Iteration   2: 17.148 ns/op
Iteration   3: 17.037 ns/op
Iteration   4: 15.284 ns/op
Iteration   5: 17.017 ns/op
Iteration   6: 14.956 ns/op
Iteration   7: 17.036 ns/op
Iteration   8: 17.007 ns/op
Iteration   9: 17.030 ns/op
Iteration  10: 15.214 ns/op

# Run progress: 70.07% complete, ETA 00:11:29
# Fork: 2 of 2
# Warmup Iteration   1: 19.419 ns/op
# Warmup Iteration   2: 22.579 ns/op
# Warmup Iteration   3: 15.149 ns/op
Iteration   1: 17.020 ns/op
Iteration   2: 17.128 ns/op
Iteration   3: 17.040 ns/op
Iteration   4: 15.295 ns/op
Iteration   5: 17.017 ns/op
Iteration   6: 14.962 ns/op
Iteration   7: 17.032 ns/op
Iteration   8: 17.027 ns/op
Iteration   9: 17.031 ns/op
Iteration  10: 15.217 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.476 ±(99.9%) 0.774 ns/op [Average]
  (min, avg, max) = (14.956, 16.476, 17.148), stdev = 0.891
  CI (99.9%): [15.702, 17.249] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 70.14% complete, ETA 00:11:28
# Fork: 1 of 2
# Warmup Iteration   1: 165.184 ns/op
# Warmup Iteration   2: 136.635 ns/op
# Warmup Iteration   3: 90.596 ns/op
Iteration   1: 92.174 ns/op
Iteration   2: 91.056 ns/op
Iteration   3: 91.967 ns/op
Iteration   4: 91.206 ns/op
Iteration   5: 92.073 ns/op
Iteration   6: 90.748 ns/op
Iteration   7: 91.989 ns/op
Iteration   8: 92.204 ns/op
Iteration   9: 92.118 ns/op
Iteration  10: 90.497 ns/op

# Run progress: 70.21% complete, ETA 00:11:26
# Fork: 2 of 2
# Warmup Iteration   1: 159.588 ns/op
# Warmup Iteration   2: 124.287 ns/op
# Warmup Iteration   3: 90.597 ns/op
Iteration   1: 92.130 ns/op
Iteration   2: 90.710 ns/op
Iteration   3: 92.066 ns/op
Iteration   4: 91.160 ns/op
Iteration   5: 92.165 ns/op
Iteration   6: 90.713 ns/op
Iteration   7: 92.417 ns/op
Iteration   8: 92.149 ns/op
Iteration   9: 92.015 ns/op
Iteration  10: 90.541 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.605 ±(99.9%) 0.588 ns/op [Average]
  (min, avg, max) = (90.497, 91.605, 92.417), stdev = 0.677
  CI (99.9%): [91.017, 92.193] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 70.28% complete, ETA 00:11:24
# Fork: 1 of 2
# Warmup Iteration   1: 63.958 ns/op
# Warmup Iteration   2: 66.317 ns/op
# Warmup Iteration   3: 45.776 ns/op
Iteration   1: 44.516 ns/op
Iteration   2: 45.884 ns/op
Iteration   3: 44.380 ns/op
Iteration   4: 46.221 ns/op
Iteration   5: 44.367 ns/op
Iteration   6: 45.855 ns/op
Iteration   7: 44.378 ns/op
Iteration   8: 44.411 ns/op
Iteration   9: 44.375 ns/op
Iteration  10: 45.785 ns/op

# Run progress: 70.35% complete, ETA 00:11:23
# Fork: 2 of 2
# Warmup Iteration   1: 64.553 ns/op
# Warmup Iteration   2: 71.456 ns/op
# Warmup Iteration   3: 45.784 ns/op
Iteration   1: 44.506 ns/op
Iteration   2: 45.801 ns/op
Iteration   3: 44.387 ns/op
Iteration   4: 46.244 ns/op
Iteration   5: 44.373 ns/op
Iteration   6: 45.786 ns/op
Iteration   7: 44.375 ns/op
Iteration   8: 44.385 ns/op
Iteration   9: 44.386 ns/op
Iteration  10: 45.768 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.009 ±(99.9%) 0.670 ns/op [Average]
  (min, avg, max) = (44.367, 45.009, 46.244), stdev = 0.772
  CI (99.9%): [44.339, 45.679] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 70.42% complete, ETA 00:11:21
# Fork: 1 of 2
# Warmup Iteration   1: 266.513 ns/op
# Warmup Iteration   2: 140.919 ns/op
# Warmup Iteration   3: 106.958 ns/op
Iteration   1: 105.436 ns/op
Iteration   2: 107.169 ns/op
Iteration   3: 105.537 ns/op
Iteration   4: 107.389 ns/op
Iteration   5: 105.394 ns/op
Iteration   6: 106.947 ns/op
Iteration   7: 105.518 ns/op
Iteration   8: 105.405 ns/op
Iteration   9: 105.505 ns/op
Iteration  10: 106.816 ns/op

# Run progress: 70.49% complete, ETA 00:11:19
# Fork: 2 of 2
# Warmup Iteration   1: 325.681 ns/op
# Warmup Iteration   2: 145.184 ns/op
# Warmup Iteration   3: 108.913 ns/op
Iteration   1: 107.210 ns/op
Iteration   2: 109.021 ns/op
Iteration   3: 107.258 ns/op
Iteration   4: 109.366 ns/op
Iteration   5: 107.342 ns/op
Iteration   6: 108.815 ns/op
Iteration   7: 107.370 ns/op
Iteration   8: 107.204 ns/op
Iteration   9: 107.404 ns/op
Iteration  10: 108.542 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  107.032 ±(99.9%) 1.096 ns/op [Average]
  (min, avg, max) = (105.394, 107.032, 109.366), stdev = 1.262
  CI (99.9%): [105.936, 108.128] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 70.56% complete, ETA 00:11:18
# Fork: 1 of 2
# Warmup Iteration   1: 74.491 ns/op
# Warmup Iteration   2: 68.982 ns/op
# Warmup Iteration   3: 49.102 ns/op
Iteration   1: 47.849 ns/op
Iteration   2: 49.111 ns/op
Iteration   3: 47.844 ns/op
Iteration   4: 49.102 ns/op
Iteration   5: 48.152 ns/op
Iteration   6: 49.043 ns/op
Iteration   7: 47.841 ns/op
Iteration   8: 47.911 ns/op
Iteration   9: 47.859 ns/op
Iteration  10: 49.078 ns/op

# Run progress: 70.63% complete, ETA 00:11:16
# Fork: 2 of 2
# Warmup Iteration   1: 66.902 ns/op
# Warmup Iteration   2: 69.399 ns/op
# Warmup Iteration   3: 49.131 ns/op
Iteration   1: 47.867 ns/op
Iteration   2: 49.098 ns/op
Iteration   3: 47.841 ns/op
Iteration   4: 49.117 ns/op
Iteration   5: 47.912 ns/op
Iteration   6: 49.045 ns/op
Iteration   7: 47.850 ns/op
Iteration   8: 47.912 ns/op
Iteration   9: 47.875 ns/op
Iteration  10: 49.087 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.370 ±(99.9%) 0.524 ns/op [Average]
  (min, avg, max) = (47.841, 48.370, 49.117), stdev = 0.603
  CI (99.9%): [47.846, 48.893] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 70.69% complete, ETA 00:11:15
# Fork: 1 of 2
# Warmup Iteration   1: 167.086 ns/op
# Warmup Iteration   2: 174.012 ns/op
# Warmup Iteration   3: 97.353 ns/op
Iteration   1: 98.928 ns/op
Iteration   2: 97.490 ns/op
Iteration   3: 98.924 ns/op
Iteration   4: 106.193 ns/op
Iteration   5: 105.627 ns/op
Iteration   6: 104.034 ns/op
Iteration   7: 105.597 ns/op
Iteration   8: 105.707 ns/op
Iteration   9: 105.615 ns/op
Iteration  10: 104.207 ns/op

# Run progress: 70.76% complete, ETA 00:11:13
# Fork: 2 of 2
# Warmup Iteration   1: 169.452 ns/op
# Warmup Iteration   2: 195.123 ns/op
# Warmup Iteration   3: 97.358 ns/op
Iteration   1: 98.980 ns/op
Iteration   2: 97.431 ns/op
Iteration   3: 99.088 ns/op
Iteration   4: 106.240 ns/op
Iteration   5: 105.696 ns/op
Iteration   6: 104.093 ns/op
Iteration   7: 105.542 ns/op
Iteration   8: 105.710 ns/op
Iteration   9: 105.643 ns/op
Iteration  10: 104.220 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.248 ±(99.9%) 2.863 ns/op [Average]
  (min, avg, max) = (97.431, 103.248, 106.240), stdev = 3.297
  CI (99.9%): [100.385, 106.111] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 70.83% complete, ETA 00:11:12
# Fork: 1 of 2
# Warmup Iteration   1: 19.288 ns/op
# Warmup Iteration   2: 22.680 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.253 ns/op
Iteration   3: 17.024 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.371 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 17.002 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.968 ns/op

# Run progress: 70.90% complete, ETA 00:11:10
# Fork: 2 of 2
# Warmup Iteration   1: 19.432 ns/op
# Warmup Iteration   2: 20.976 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.079 ns/op
Iteration   2: 15.294 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.103 ns/op
Iteration   6: 15.387 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.013 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.964, 16.289, 17.110), stdev = 0.952
  CI (99.9%): [15.463, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 70.97% complete, ETA 00:11:08
# Fork: 1 of 2
# Warmup Iteration   1: 711.631 ns/op
# Warmup Iteration   2: 446.077 ns/op
# Warmup Iteration   3: 315.450 ns/op
Iteration   1: 316.478 ns/op
Iteration   2: 316.115 ns/op
Iteration   3: 316.465 ns/op
Iteration   4: 315.710 ns/op
Iteration   5: 316.541 ns/op
Iteration   6: 315.983 ns/op
Iteration   7: 316.288 ns/op
Iteration   8: 316.254 ns/op
Iteration   9: 316.390 ns/op
Iteration  10: 315.539 ns/op

# Run progress: 71.04% complete, ETA 00:11:07
# Fork: 2 of 2
# Warmup Iteration   1: 671.340 ns/op
# Warmup Iteration   2: 449.149 ns/op
# Warmup Iteration   3: 315.310 ns/op
Iteration   1: 316.222 ns/op
Iteration   2: 315.855 ns/op
Iteration   3: 316.219 ns/op
Iteration   4: 315.763 ns/op
Iteration   5: 316.915 ns/op
Iteration   6: 315.146 ns/op
Iteration   7: 316.318 ns/op
Iteration   8: 316.658 ns/op
Iteration   9: 316.354 ns/op
Iteration  10: 315.312 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  316.126 ±(99.9%) 0.393 ns/op [Average]
  (min, avg, max) = (315.146, 316.126, 316.915), stdev = 0.453
  CI (99.9%): [315.733, 316.520] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 71.11% complete, ETA 00:11:05
# Fork: 1 of 2
# Warmup Iteration   1: 497.700 ns/op
# Warmup Iteration   2: 450.353 ns/op
# Warmup Iteration   3: 341.961 ns/op
Iteration   1: 341.030 ns/op
Iteration   2: 346.311 ns/op
Iteration   3: 340.863 ns/op
Iteration   4: 344.195 ns/op
Iteration   5: 341.091 ns/op
Iteration   6: 342.195 ns/op
Iteration   7: 340.883 ns/op
Iteration   8: 340.891 ns/op
Iteration   9: 340.852 ns/op
Iteration  10: 341.944 ns/op

# Run progress: 71.18% complete, ETA 00:11:03
# Fork: 2 of 2
# Warmup Iteration   1: 499.319 ns/op
# Warmup Iteration   2: 468.630 ns/op
# Warmup Iteration   3: 341.939 ns/op
Iteration   1: 341.055 ns/op
Iteration   2: 346.017 ns/op
Iteration   3: 340.903 ns/op
Iteration   4: 344.342 ns/op
Iteration   5: 340.916 ns/op
Iteration   6: 342.172 ns/op
Iteration   7: 340.865 ns/op
Iteration   8: 340.841 ns/op
Iteration   9: 341.003 ns/op
Iteration  10: 342.079 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  342.022 ±(99.9%) 1.528 ns/op [Average]
  (min, avg, max) = (340.841, 342.022, 346.311), stdev = 1.760
  CI (99.9%): [340.494, 343.551] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 71.25% complete, ETA 00:11:02
# Fork: 1 of 2
# Warmup Iteration   1: 8199.713 ns/op
# Warmup Iteration   2: 627.718 ns/op
# Warmup Iteration   3: 352.411 ns/op
Iteration   1: 351.317 ns/op
Iteration   2: 352.372 ns/op
Iteration   3: 351.206 ns/op
Iteration   4: 356.644 ns/op
Iteration   5: 351.390 ns/op
Iteration   6: 352.316 ns/op
Iteration   7: 351.150 ns/op
Iteration   8: 351.211 ns/op
Iteration   9: 351.245 ns/op
Iteration  10: 352.322 ns/op

# Run progress: 71.32% complete, ETA 00:11:00
# Fork: 2 of 2
# Warmup Iteration   1: 9346.908 ns/op
# Warmup Iteration   2: 530.450 ns/op
# Warmup Iteration   3: 352.571 ns/op
Iteration   1: 351.814 ns/op
Iteration   2: 352.588 ns/op
Iteration   3: 351.573 ns/op
Iteration   4: 356.757 ns/op
Iteration   5: 351.664 ns/op
Iteration   6: 352.606 ns/op
Iteration   7: 351.616 ns/op
Iteration   8: 351.721 ns/op
Iteration   9: 351.647 ns/op
Iteration  10: 352.723 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  352.294 ±(99.9%) 1.382 ns/op [Average]
  (min, avg, max) = (351.150, 352.294, 356.757), stdev = 1.591
  CI (99.9%): [350.912, 353.676] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 71.39% complete, ETA 00:10:59
# Fork: 1 of 2
# Warmup Iteration   1: 563.468 ns/op
# Warmup Iteration   2: 378.652 ns/op
# Warmup Iteration   3: 295.944 ns/op
Iteration   1: 294.200 ns/op
Iteration   2: 296.525 ns/op
Iteration   3: 294.839 ns/op
Iteration   4: 298.075 ns/op
Iteration   5: 293.486 ns/op
Iteration   6: 295.233 ns/op
Iteration   7: 294.479 ns/op
Iteration   8: 294.404 ns/op
Iteration   9: 294.296 ns/op
Iteration  10: 295.879 ns/op

# Run progress: 71.46% complete, ETA 00:10:57
# Fork: 2 of 2
# Warmup Iteration   1: 453.893 ns/op
# Warmup Iteration   2: 384.138 ns/op
# Warmup Iteration   3: 298.532 ns/op
Iteration   1: 297.012 ns/op
Iteration   2: 298.512 ns/op
Iteration   3: 296.863 ns/op
Iteration   4: 299.412 ns/op
Iteration   5: 297.053 ns/op
Iteration   6: 298.868 ns/op
Iteration   7: 296.681 ns/op
Iteration   8: 297.084 ns/op
Iteration   9: 297.018 ns/op
Iteration  10: 298.701 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  296.431 ±(99.9%) 1.532 ns/op [Average]
  (min, avg, max) = (293.486, 296.431, 299.412), stdev = 1.765
  CI (99.9%): [294.899, 297.963] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 71.53% complete, ETA 00:10:55
# Fork: 1 of 2
# Warmup Iteration   1: 2585.083 ns/op
# Warmup Iteration   2: 2107.815 ns/op
# Warmup Iteration   3: 1444.585 ns/op
Iteration   1: 1444.581 ns/op
Iteration   2: 1442.004 ns/op
Iteration   3: 1446.627 ns/op
Iteration   4: 1460.112 ns/op
Iteration   5: 1459.786 ns/op
Iteration   6: 1458.801 ns/op
Iteration   7: 1460.245 ns/op
Iteration   8: 1456.535 ns/op
Iteration   9: 1457.638 ns/op
Iteration  10: 1459.573 ns/op

# Run progress: 71.60% complete, ETA 00:10:54
# Fork: 2 of 2
# Warmup Iteration   1: 3202.165 ns/op
# Warmup Iteration   2: 2052.798 ns/op
# Warmup Iteration   3: 1479.766 ns/op
Iteration   1: 1484.762 ns/op
Iteration   2: 1479.691 ns/op
Iteration   3: 1483.445 ns/op
Iteration   4: 1497.927 ns/op
Iteration   5: 1493.919 ns/op
Iteration   6: 1494.220 ns/op
Iteration   7: 1494.577 ns/op
Iteration   8: 1494.149 ns/op
Iteration   9: 1494.499 ns/op
Iteration  10: 1494.437 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1472.876 ±(99.9%) 17.243 ns/op [Average]
  (min, avg, max) = (1442.004, 1472.876, 1497.927), stdev = 19.857
  CI (99.9%): [1455.633, 1490.120] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 71.67% complete, ETA 00:10:52
# Fork: 1 of 2
# Warmup Iteration   1: 19.353 ns/op
# Warmup Iteration   2: 21.023 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.270 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.381 ns/op
Iteration   7: 17.022 ns/op
Iteration   8: 17.036 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.979 ns/op

# Run progress: 71.74% complete, ETA 00:10:51
# Fork: 2 of 2
# Warmup Iteration   1: 19.813 ns/op
# Warmup Iteration   2: 23.111 ns/op
# Warmup Iteration   3: 15.116 ns/op
Iteration   1: 17.084 ns/op
Iteration   2: 15.287 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.102 ns/op
Iteration   6: 15.390 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 16.999 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.964, 16.291, 17.107), stdev = 0.951
  CI (99.9%): [15.465, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 71.81% complete, ETA 00:10:49
# Fork: 1 of 2
# Warmup Iteration   1: 1146.920 ns/op
# Warmup Iteration   2: 476.588 ns/op
# Warmup Iteration   3: 337.096 ns/op
Iteration   1: 340.457 ns/op
Iteration   2: 337.470 ns/op
Iteration   3: 341.457 ns/op
Iteration   4: 337.789 ns/op
Iteration   5: 341.080 ns/op
Iteration   6: 337.531 ns/op
Iteration   7: 341.016 ns/op
Iteration   8: 340.438 ns/op
Iteration   9: 340.263 ns/op
Iteration  10: 337.175 ns/op

# Run progress: 71.88% complete, ETA 00:10:47
# Fork: 2 of 2
# Warmup Iteration   1: 914.920 ns/op
# Warmup Iteration   2: 450.607 ns/op
# Warmup Iteration   3: 338.279 ns/op
Iteration   1: 339.783 ns/op
Iteration   2: 338.463 ns/op
Iteration   3: 340.338 ns/op
Iteration   4: 338.527 ns/op
Iteration   5: 339.895 ns/op
Iteration   6: 338.569 ns/op
Iteration   7: 340.386 ns/op
Iteration   8: 339.978 ns/op
Iteration   9: 339.946 ns/op
Iteration  10: 338.670 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  339.462 ±(99.9%) 1.145 ns/op [Average]
  (min, avg, max) = (337.175, 339.462, 341.457), stdev = 1.319
  CI (99.9%): [338.317, 340.607] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 71.94% complete, ETA 00:10:46
# Fork: 1 of 2
# Warmup Iteration   1: 507.177 ns/op
# Warmup Iteration   2: 449.492 ns/op
# Warmup Iteration   3: 354.072 ns/op
Iteration   1: 352.619 ns/op
Iteration   2: 354.154 ns/op
Iteration   3: 352.839 ns/op
Iteration   4: 354.039 ns/op
Iteration   5: 353.019 ns/op
Iteration   6: 354.228 ns/op
Iteration   7: 352.694 ns/op
Iteration   8: 352.684 ns/op
Iteration   9: 352.638 ns/op
Iteration  10: 354.155 ns/op

# Run progress: 72.01% complete, ETA 00:10:44
# Fork: 2 of 2
# Warmup Iteration   1: 506.977 ns/op
# Warmup Iteration   2: 453.753 ns/op
# Warmup Iteration   3: 352.037 ns/op
Iteration   1: 348.495 ns/op
Iteration   2: 349.965 ns/op
Iteration   3: 348.719 ns/op
Iteration   4: 350.471 ns/op
Iteration   5: 348.675 ns/op
Iteration   6: 350.206 ns/op
Iteration   7: 348.711 ns/op
Iteration   8: 348.805 ns/op
Iteration   9: 348.871 ns/op
Iteration  10: 350.296 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  351.314 ±(99.9%) 1.890 ns/op [Average]
  (min, avg, max) = (348.495, 351.314, 354.228), stdev = 2.176
  CI (99.9%): [349.424, 353.204] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 72.08% complete, ETA 00:10:43
# Fork: 1 of 2
# Warmup Iteration   1: 16454.757 ns/op
# Warmup Iteration   2: 643.220 ns/op
# Warmup Iteration   3: 379.611 ns/op
Iteration   1: 338.684 ns/op
Iteration   2: 340.240 ns/op
Iteration   3: 338.505 ns/op
Iteration   4: 342.451 ns/op
Iteration   5: 338.569 ns/op
Iteration   6: 339.312 ns/op
Iteration   7: 338.509 ns/op
Iteration   8: 338.509 ns/op
Iteration   9: 338.619 ns/op
Iteration  10: 339.530 ns/op

# Run progress: 72.15% complete, ETA 00:10:41
# Fork: 2 of 2
# Warmup Iteration   1: 14886.523 ns/op
# Warmup Iteration   2: 565.517 ns/op
# Warmup Iteration   3: 367.147 ns/op
Iteration   1: 343.204 ns/op
Iteration   2: 340.219 ns/op
Iteration   3: 344.135 ns/op
Iteration   4: 342.436 ns/op
Iteration   5: 343.109 ns/op
Iteration   6: 339.575 ns/op
Iteration   7: 343.943 ns/op
Iteration   8: 345.128 ns/op
Iteration   9: 344.805 ns/op
Iteration  10: 339.517 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  340.950 ±(99.9%) 2.084 ns/op [Average]
  (min, avg, max) = (338.505, 340.950, 345.128), stdev = 2.400
  CI (99.9%): [338.866, 343.034] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 72.22% complete, ETA 00:10:39
# Fork: 1 of 2
# Warmup Iteration   1: 422.273 ns/op
# Warmup Iteration   2: 352.500 ns/op
# Warmup Iteration   3: 271.406 ns/op
Iteration   1: 270.421 ns/op
Iteration   2: 272.559 ns/op
Iteration   3: 270.381 ns/op
Iteration   4: 271.469 ns/op
Iteration   5: 270.437 ns/op
Iteration   6: 271.247 ns/op
Iteration   7: 270.278 ns/op
Iteration   8: 270.291 ns/op
Iteration   9: 270.271 ns/op
Iteration  10: 271.435 ns/op

# Run progress: 72.29% complete, ETA 00:10:38
# Fork: 2 of 2
# Warmup Iteration   1: 425.414 ns/op
# Warmup Iteration   2: 350.240 ns/op
# Warmup Iteration   3: 271.477 ns/op
Iteration   1: 270.321 ns/op
Iteration   2: 272.507 ns/op
Iteration   3: 270.435 ns/op
Iteration   4: 271.555 ns/op
Iteration   5: 270.371 ns/op
Iteration   6: 271.352 ns/op
Iteration   7: 270.341 ns/op
Iteration   8: 270.257 ns/op
Iteration   9: 270.351 ns/op
Iteration  10: 271.461 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  270.887 ±(99.9%) 0.653 ns/op [Average]
  (min, avg, max) = (270.257, 270.887, 272.559), stdev = 0.752
  CI (99.9%): [270.234, 271.540] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 72.36% complete, ETA 00:10:36
# Fork: 1 of 2
# Warmup Iteration   1: 1593.927 ns/op
# Warmup Iteration   2: 967.898 ns/op
# Warmup Iteration   3: 729.026 ns/op
Iteration   1: 733.855 ns/op
Iteration   2: 729.200 ns/op
Iteration   3: 730.646 ns/op
Iteration   4: 755.386 ns/op
Iteration   5: 750.259 ns/op
Iteration   6: 749.108 ns/op
Iteration   7: 749.828 ns/op
Iteration   8: 750.333 ns/op
Iteration   9: 750.492 ns/op
Iteration  10: 748.995 ns/op

# Run progress: 72.43% complete, ETA 00:10:35
# Fork: 2 of 2
# Warmup Iteration   1: 1534.780 ns/op
# Warmup Iteration   2: 1072.841 ns/op
# Warmup Iteration   3: 729.076 ns/op
Iteration   1: 734.185 ns/op
Iteration   2: 729.352 ns/op
Iteration   3: 730.846 ns/op
Iteration   4: 755.353 ns/op
Iteration   5: 750.191 ns/op
Iteration   6: 749.079 ns/op
Iteration   7: 750.324 ns/op
Iteration   8: 750.087 ns/op
Iteration   9: 750.377 ns/op
Iteration  10: 749.152 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  744.852 ±(99.9%) 8.075 ns/op [Average]
  (min, avg, max) = (729.200, 744.852, 755.386), stdev = 9.299
  CI (99.9%): [736.777, 752.928] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 72.50% complete, ETA 00:10:33
# Fork: 1 of 2
# Warmup Iteration   1: 19.330 ns/op
# Warmup Iteration   2: 22.972 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.082 ns/op
Iteration   2: 15.281 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.384 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 14.978 ns/op

# Run progress: 72.57% complete, ETA 00:10:31
# Fork: 2 of 2
# Warmup Iteration   1: 19.233 ns/op
# Warmup Iteration   2: 22.655 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.069 ns/op
Iteration   2: 15.270 ns/op
Iteration   3: 17.004 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.392 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.009 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.969 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.969, 16.291, 17.106), stdev = 0.950
  CI (99.9%): [15.466, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 72.64% complete, ETA 00:10:30
# Fork: 1 of 2
# Warmup Iteration   1: 755.754 ns/op
# Warmup Iteration   2: 25031.983 ns/op
# Warmup Iteration   3: 726.428 ns/op
Iteration   1: 18906.221 ns/op
Iteration   2: 21322.538 ns/op
Iteration   3: 305.080 ns/op
Iteration   4: 20890.351 ns/op
Iteration   5: 484.883 ns/op
Iteration   6: 16650.364 ns/op
Iteration   7: 293.234 ns/op
Iteration   8: 351.731 ns/op
Iteration   9: 403.710 ns/op
Iteration  10: 351.933 ns/op

# Run progress: 72.71% complete, ETA 00:10:28
# Fork: 2 of 2
# Warmup Iteration   1: 879.634 ns/op
# Warmup Iteration   2: 21589.744 ns/op
# Warmup Iteration   3: 648.340 ns/op
Iteration   1: 23425.255 ns/op
Iteration   2: 21856.583 ns/op
Iteration   3: 300.450 ns/op
Iteration   4: 21262.803 ns/op
Iteration   5: 438.952 ns/op
Iteration   6: 18476.466 ns/op
Iteration   7: 297.115 ns/op
Iteration   8: 335.092 ns/op
Iteration   9: 402.841 ns/op
Iteration  10: 344.420 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8355.001 ±(99.9%) 8799.657 ns/op [Average]
  (min, avg, max) = (293.234, 8355.001, 23425.255), stdev = 10133.698
  CI (99.9%): [≈ 0, 17154.658] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 72.78% complete, ETA 00:10:27
# Fork: 1 of 2
# Warmup Iteration   1: 600.394 ns/op
# Warmup Iteration   2: 542.446 ns/op
# Warmup Iteration   3: 403.220 ns/op
Iteration   1: 454.254 ns/op
Iteration   2: 413.159 ns/op
Iteration   3: 442.876 ns/op
Iteration   4: 406.430 ns/op
Iteration   5: 428.750 ns/op
Iteration   6: 413.924 ns/op
Iteration   7: 429.014 ns/op
Iteration   8: 427.081 ns/op
Iteration   9: 423.295 ns/op
Iteration  10: 403.258 ns/op

# Run progress: 72.85% complete, ETA 00:10:25
# Fork: 2 of 2
# Warmup Iteration   1: 594.666 ns/op
# Warmup Iteration   2: 558.797 ns/op
# Warmup Iteration   3: 396.137 ns/op
Iteration   1: 447.218 ns/op
Iteration   2: 407.139 ns/op
Iteration   3: 440.498 ns/op
Iteration   4: 403.017 ns/op
Iteration   5: 421.688 ns/op
Iteration   6: 409.699 ns/op
Iteration   7: 426.212 ns/op
Iteration   8: 435.260 ns/op
Iteration   9: 417.975 ns/op
Iteration  10: 394.749 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  422.275 ±(99.9%) 14.082 ns/op [Average]
  (min, avg, max) = (394.749, 422.275, 454.254), stdev = 16.217
  CI (99.9%): [408.192, 436.357] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 72.92% complete, ETA 00:10:23
# Fork: 1 of 2
# Warmup Iteration   1: 3108.346 ns/op
# Warmup Iteration   2: 3615.762 ns/op
# Warmup Iteration   3: 1913.511 ns/op
Iteration   1: 7918.255 ns/op
Iteration   2: 414.260 ns/op
Iteration   3: 1398.657 ns/op
Iteration   4: 498.214 ns/op
Iteration   5: 385.530 ns/op
Iteration   6: 437.247 ns/op
Iteration   7: 452.440 ns/op
Iteration   8: 321.962 ns/op
Iteration   9: 398.072 ns/op
Iteration  10: 370.171 ns/op

# Run progress: 72.99% complete, ETA 00:10:22
# Fork: 2 of 2
# Warmup Iteration   1: 2015.162 ns/op
# Warmup Iteration   2: 2673.823 ns/op
# Warmup Iteration   3: 687.582 ns/op
Iteration   1: 10358.267 ns/op
Iteration   2: 412.038 ns/op
Iteration   3: 1538.282 ns/op
Iteration   4: 491.159 ns/op
Iteration   5: 380.897 ns/op
Iteration   6: 422.906 ns/op
Iteration   7: 448.480 ns/op
Iteration   8: 316.872 ns/op
Iteration   9: 391.412 ns/op
Iteration  10: 356.025 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1385.557 ±(99.9%) 2345.319 ns/op [Average]
  (min, avg, max) = (316.872, 1385.557, 10358.267), stdev = 2700.873
  CI (99.9%): [≈ 0, 3730.876] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 73.06% complete, ETA 00:10:20
# Fork: 1 of 2
# Warmup Iteration   1: 527.317 ns/op
# Warmup Iteration   2: 431.562 ns/op
# Warmup Iteration   3: 314.099 ns/op
Iteration   1: 345.146 ns/op
Iteration   2: 334.178 ns/op
Iteration   3: 708.712 ns/op
Iteration   4: 316.554 ns/op
Iteration   5: 330.789 ns/op
Iteration   6: 347.507 ns/op
Iteration   7: 332.263 ns/op
Iteration   8: 332.688 ns/op
Iteration   9: 325.721 ns/op
Iteration  10: 308.132 ns/op

# Run progress: 73.13% complete, ETA 00:10:19
# Fork: 2 of 2
# Warmup Iteration   1: 670.189 ns/op
# Warmup Iteration   2: 427.588 ns/op
# Warmup Iteration   3: 313.259 ns/op
Iteration   1: 343.772 ns/op
Iteration   2: 333.987 ns/op
Iteration   3: 1081.091 ns/op
Iteration   4: 315.227 ns/op
Iteration   5: 328.492 ns/op
Iteration   6: 343.484 ns/op
Iteration   7: 329.963 ns/op
Iteration   8: 330.704 ns/op
Iteration   9: 325.513 ns/op
Iteration  10: 305.242 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  385.958 ±(99.9%) 160.293 ns/op [Average]
  (min, avg, max) = (305.242, 385.958, 1081.091), stdev = 184.593
  CI (99.9%): [225.665, 546.251] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 73.19% complete, ETA 00:10:17
# Fork: 1 of 2
# Warmup Iteration   1: 3276.728 ns/op
# Warmup Iteration   2: 2199.967 ns/op
# Warmup Iteration   3: 1512.606 ns/op
Iteration   1: 1633.115 ns/op
Iteration   2: 1561.464 ns/op
Iteration   3: 1625.443 ns/op
Iteration   4: 3183.419 ns/op
Iteration   5: 1629.783 ns/op
Iteration   6: 1603.402 ns/op
Iteration   7: 1632.868 ns/op
Iteration   8: 1607.579 ns/op
Iteration   9: 1626.016 ns/op
Iteration  10: 1544.142 ns/op

# Run progress: 73.26% complete, ETA 00:10:15
# Fork: 2 of 2
# Warmup Iteration   1: 3305.145 ns/op
# Warmup Iteration   2: 2161.886 ns/op
# Warmup Iteration   3: 1511.428 ns/op
Iteration   1: 1629.060 ns/op
Iteration   2: 1558.266 ns/op
Iteration   3: 1622.649 ns/op
Iteration   4: 4843.510 ns/op
Iteration   5: 1625.200 ns/op
Iteration   6: 1599.840 ns/op
Iteration   7: 1630.515 ns/op
Iteration   8: 1606.799 ns/op
Iteration   9: 1622.778 ns/op
Iteration  10: 1542.762 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1846.430 ±(99.9%) 685.211 ns/op [Average]
  (min, avg, max) = (1542.762, 1846.430, 4843.510), stdev = 789.089
  CI (99.9%): [1161.220, 2531.641] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 73.33% complete, ETA 00:10:14
# Fork: 1 of 2
# Warmup Iteration   1: 19.481 ns/op
# Warmup Iteration   2: 22.368 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.263 ns/op
Iteration   3: 17.019 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.010 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.960 ns/op

# Run progress: 73.40% complete, ETA 00:10:12
# Fork: 2 of 2
# Warmup Iteration   1: 19.588 ns/op
# Warmup Iteration   2: 22.926 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.075 ns/op
Iteration   2: 15.282 ns/op
Iteration   3: 17.014 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.115 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.031 ns/op
Iteration  10: 14.981 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.960, 16.291, 17.115), stdev = 0.952
  CI (99.9%): [15.465, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 73.47% complete, ETA 00:10:11
# Fork: 1 of 2
# Warmup Iteration   1: 615.905 ns/op
# Warmup Iteration   2: 316.138 ns/op
# Warmup Iteration   3: 234.757 ns/op
Iteration   1: 236.347 ns/op
Iteration   2: 235.069 ns/op
Iteration   3: 236.355 ns/op
Iteration   4: 236.789 ns/op
Iteration   5: 236.487 ns/op
Iteration   6: 234.567 ns/op
Iteration   7: 236.338 ns/op
Iteration   8: 236.367 ns/op
Iteration   9: 236.207 ns/op
Iteration  10: 235.000 ns/op

# Run progress: 73.54% complete, ETA 00:10:09
# Fork: 2 of 2
# Warmup Iteration   1: 731.187 ns/op
# Warmup Iteration   2: 334.739 ns/op
# Warmup Iteration   3: 245.605 ns/op
Iteration   1: 250.024 ns/op
Iteration   2: 246.241 ns/op
Iteration   3: 249.988 ns/op
Iteration   4: 246.424 ns/op
Iteration   5: 249.536 ns/op
Iteration   6: 247.114 ns/op
Iteration   7: 250.236 ns/op
Iteration   8: 250.158 ns/op
Iteration   9: 249.222 ns/op
Iteration  10: 245.846 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  242.216 ±(99.9%) 5.705 ns/op [Average]
  (min, avg, max) = (234.567, 242.216, 250.236), stdev = 6.570
  CI (99.9%): [236.511, 247.921] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 73.61% complete, ETA 00:10:07
# Fork: 1 of 2
# Warmup Iteration   1: 343.684 ns/op
# Warmup Iteration   2: 328.935 ns/op
# Warmup Iteration   3: 241.037 ns/op
Iteration   1: 239.269 ns/op
Iteration   2: 240.999 ns/op
Iteration   3: 239.613 ns/op
Iteration   4: 242.426 ns/op
Iteration   5: 239.572 ns/op
Iteration   6: 241.243 ns/op
Iteration   7: 239.408 ns/op
Iteration   8: 239.570 ns/op
Iteration   9: 239.809 ns/op
Iteration  10: 241.002 ns/op

# Run progress: 73.68% complete, ETA 00:10:06
# Fork: 2 of 2
# Warmup Iteration   1: 343.437 ns/op
# Warmup Iteration   2: 317.545 ns/op
# Warmup Iteration   3: 241.522 ns/op
Iteration   1: 239.337 ns/op
Iteration   2: 241.042 ns/op
Iteration   3: 239.611 ns/op
Iteration   4: 242.950 ns/op
Iteration   5: 239.671 ns/op
Iteration   6: 241.226 ns/op
Iteration   7: 239.643 ns/op
Iteration   8: 239.577 ns/op
Iteration   9: 239.594 ns/op
Iteration  10: 241.321 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  240.344 ±(99.9%) 0.949 ns/op [Average]
  (min, avg, max) = (239.269, 240.344, 242.950), stdev = 1.093
  CI (99.9%): [239.395, 241.294] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 73.75% complete, ETA 00:10:04
# Fork: 1 of 2
# Warmup Iteration   1: 692.694 ns/op
# Warmup Iteration   2: 374.900 ns/op
# Warmup Iteration   3: 262.326 ns/op
Iteration   1: 261.695 ns/op
Iteration   2: 262.417 ns/op
Iteration   3: 261.771 ns/op
Iteration   4: 262.787 ns/op
Iteration   5: 261.780 ns/op
Iteration   6: 262.426 ns/op
Iteration   7: 261.623 ns/op
Iteration   8: 261.587 ns/op
Iteration   9: 261.798 ns/op
Iteration  10: 262.402 ns/op

# Run progress: 73.82% complete, ETA 00:10:03
# Fork: 2 of 2
# Warmup Iteration   1: 530.715 ns/op
# Warmup Iteration   2: 364.898 ns/op
# Warmup Iteration   3: 262.353 ns/op
Iteration   1: 261.878 ns/op
Iteration   2: 262.492 ns/op
Iteration   3: 261.907 ns/op
Iteration   4: 263.797 ns/op
Iteration   5: 261.863 ns/op
Iteration   6: 262.406 ns/op
Iteration   7: 261.820 ns/op
Iteration   8: 261.842 ns/op
Iteration   9: 261.891 ns/op
Iteration  10: 262.301 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  262.124 ±(99.9%) 0.455 ns/op [Average]
  (min, avg, max) = (261.587, 262.124, 263.797), stdev = 0.524
  CI (99.9%): [261.669, 262.579] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 73.89% complete, ETA 00:10:01
# Fork: 1 of 2
# Warmup Iteration   1: 369.843 ns/op
# Warmup Iteration   2: 275.459 ns/op
# Warmup Iteration   3: 211.254 ns/op
Iteration   1: 209.712 ns/op
Iteration   2: 211.130 ns/op
Iteration   3: 209.577 ns/op
Iteration   4: 212.234 ns/op
Iteration   5: 209.489 ns/op
Iteration   6: 211.169 ns/op
Iteration   7: 209.842 ns/op
Iteration   8: 209.795 ns/op
Iteration   9: 209.855 ns/op
Iteration  10: 211.272 ns/op

# Run progress: 73.96% complete, ETA 00:09:59
# Fork: 2 of 2
# Warmup Iteration   1: 329.630 ns/op
# Warmup Iteration   2: 271.321 ns/op
# Warmup Iteration   3: 209.350 ns/op
Iteration   1: 208.500 ns/op
Iteration   2: 209.357 ns/op
Iteration   3: 208.712 ns/op
Iteration   4: 210.342 ns/op
Iteration   5: 208.725 ns/op
Iteration   6: 209.278 ns/op
Iteration   7: 208.591 ns/op
Iteration   8: 208.589 ns/op
Iteration   9: 208.572 ns/op
Iteration  10: 209.631 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  209.719 ±(99.9%) 0.913 ns/op [Average]
  (min, avg, max) = (208.500, 209.719, 212.234), stdev = 1.052
  CI (99.9%): [208.805, 210.632] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 74.03% complete, ETA 00:09:58
# Fork: 1 of 2
# Warmup Iteration   1: 1253.555 ns/op
# Warmup Iteration   2: 934.678 ns/op
# Warmup Iteration   3: 715.817 ns/op
Iteration   1: 719.801 ns/op
Iteration   2: 715.674 ns/op
Iteration   3: 716.894 ns/op
Iteration   4: 740.428 ns/op
Iteration   5: 734.840 ns/op
Iteration   6: 733.851 ns/op
Iteration   7: 734.893 ns/op
Iteration   8: 734.955 ns/op
Iteration   9: 734.785 ns/op
Iteration  10: 740.235 ns/op

# Run progress: 74.10% complete, ETA 00:09:56
# Fork: 2 of 2
# Warmup Iteration   1: 1452.980 ns/op
# Warmup Iteration   2: 976.532 ns/op
# Warmup Iteration   3: 715.523 ns/op
Iteration   1: 719.785 ns/op
Iteration   2: 715.772 ns/op
Iteration   3: 717.030 ns/op
Iteration   4: 739.371 ns/op
Iteration   5: 734.823 ns/op
Iteration   6: 733.780 ns/op
Iteration   7: 734.483 ns/op
Iteration   8: 734.825 ns/op
Iteration   9: 734.873 ns/op
Iteration  10: 733.694 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  730.240 ±(99.9%) 7.675 ns/op [Average]
  (min, avg, max) = (715.674, 730.240, 740.428), stdev = 8.838
  CI (99.9%): [722.565, 737.914] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 74.17% complete, ETA 00:09:55
# Fork: 1 of 2
# Warmup Iteration   1: 19.323 ns/op
# Warmup Iteration   2: 21.330 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.230 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.010 ns/op
Iteration   5: 17.119 ns/op
Iteration   6: 15.401 ns/op
Iteration   7: 17.010 ns/op
Iteration   8: 17.004 ns/op
Iteration   9: 17.004 ns/op
Iteration  10: 14.968 ns/op

# Run progress: 74.24% complete, ETA 00:09:53
# Fork: 2 of 2
# Warmup Iteration   1: 19.514 ns/op
# Warmup Iteration   2: 20.974 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.265 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.099 ns/op
Iteration   6: 15.358 ns/op
Iteration   7: 17.033 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.013 ns/op
Iteration  10: 14.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.285 ±(99.9%) 0.830 ns/op [Average]
  (min, avg, max) = (14.961, 16.285, 17.119), stdev = 0.956
  CI (99.9%): [15.455, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 74.31% complete, ETA 00:09:51
# Fork: 1 of 2
# Warmup Iteration   1: 299.176 ns/op
# Warmup Iteration   2: 1572.586 ns/op
# Warmup Iteration   3: 145.396 ns/op
Iteration   1: 1791.740 ns/op
Iteration   2: 244.907 ns/op
Iteration   3: 241.362 ns/op
Iteration   4: 223.866 ns/op
Iteration   5: 152.355 ns/op
Iteration   6: 15727.516 ns/op
Iteration   7: 14975.651 ns/op
Iteration   8: 154.256 ns/op
Iteration   9: 206.170 ns/op
Iteration  10: 155.998 ns/op

# Run progress: 74.38% complete, ETA 00:09:50
# Fork: 2 of 2
# Warmup Iteration   1: 366.086 ns/op
# Warmup Iteration   2: 2502.502 ns/op
# Warmup Iteration   3: 151.823 ns/op
Iteration   1: 12305.597 ns/op
Iteration   2: 252.542 ns/op
Iteration   3: 245.334 ns/op
Iteration   4: 225.910 ns/op
Iteration   5: 151.006 ns/op
Iteration   6: 15182.297 ns/op
Iteration   7: 13344.086 ns/op
Iteration   8: 155.657 ns/op
Iteration   9: 216.323 ns/op
Iteration  10: 157.452 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3805.501 ±(99.9%) 5440.303 ns/op [Average]
  (min, avg, max) = (151.006, 3805.501, 15727.516), stdev = 6265.061
  CI (99.9%): [≈ 0, 9245.804] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 74.44% complete, ETA 00:09:48
# Fork: 1 of 2
# Warmup Iteration   1: 137.556 ns/op
# Warmup Iteration   2: 209.089 ns/op
# Warmup Iteration   3: 133.668 ns/op
Iteration   1: 143.304 ns/op
Iteration   2: 190.443 ns/op
Iteration   3: 181.558 ns/op
Iteration   4: 160.693 ns/op
Iteration   5: 104.912 ns/op
Iteration   6: 167.153 ns/op
Iteration   7: 133.313 ns/op
Iteration   8: 104.902 ns/op
Iteration   9: 134.359 ns/op
Iteration  10: 110.446 ns/op

# Run progress: 74.51% complete, ETA 00:09:47
# Fork: 2 of 2
# Warmup Iteration   1: 137.161 ns/op
# Warmup Iteration   2: 216.316 ns/op
# Warmup Iteration   3: 135.802 ns/op
Iteration   1: 143.602 ns/op
Iteration   2: 177.114 ns/op
Iteration   3: 181.903 ns/op
Iteration   4: 160.648 ns/op
Iteration   5: 104.917 ns/op
Iteration   6: 167.756 ns/op
Iteration   7: 133.330 ns/op
Iteration   8: 104.927 ns/op
Iteration   9: 134.364 ns/op
Iteration  10: 110.457 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  142.505 ±(99.9%) 25.581 ns/op [Average]
  (min, avg, max) = (104.902, 142.505, 190.443), stdev = 29.459
  CI (99.9%): [116.924, 168.086] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 74.58% complete, ETA 00:09:45
# Fork: 1 of 2
# Warmup Iteration   1: 500.484 ns/op
# Warmup Iteration   2: 13164.796 ns/op
# Warmup Iteration   3: 137.010 ns/op
Iteration   1: 193.251 ns/op
Iteration   2: 219.499 ns/op
Iteration   3: 235.310 ns/op
Iteration   4: 31548.946 ns/op
Iteration   5: 6886.500 ns/op
Iteration   6: 227.342 ns/op
Iteration   7: 187.696 ns/op
Iteration   8: 135.073 ns/op
Iteration   9: 177.245 ns/op
Iteration  10: 139.676 ns/op

# Run progress: 74.65% complete, ETA 00:09:43
# Fork: 2 of 2
# Warmup Iteration   1: 468.081 ns/op
# Warmup Iteration   2: 4014.674 ns/op
# Warmup Iteration   3: 132.957 ns/op
Iteration   1: 193.694 ns/op
Iteration   2: 226.500 ns/op
Iteration   3: 246.476 ns/op
Iteration   4: 27362.702 ns/op
Iteration   5: 1112.136 ns/op
Iteration   6: 234.421 ns/op
Iteration   7: 189.508 ns/op
Iteration   8: 136.539 ns/op
Iteration   9: 176.517 ns/op
Iteration  10: 141.082 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3498.506 ±(99.9%) 7839.365 ns/op [Average]
  (min, avg, max) = (135.073, 3498.506, 31548.946), stdev = 9027.824
  CI (99.9%): [≈ 0, 11337.870] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 74.72% complete, ETA 00:09:42
# Fork: 1 of 2
# Warmup Iteration   1: 112.319 ns/op
# Warmup Iteration   2: 247.601 ns/op
# Warmup Iteration   3: 133.155 ns/op
Iteration   1: 161.981 ns/op
Iteration   2: 361.117 ns/op
Iteration   3: 422.117 ns/op
Iteration   4: 132.966 ns/op
Iteration   5: 88.830 ns/op
Iteration   6: 496.689 ns/op
Iteration   7: 125.080 ns/op
Iteration   8: 99.725 ns/op
Iteration   9: 118.297 ns/op
Iteration  10: 104.882 ns/op

# Run progress: 74.79% complete, ETA 00:09:40
# Fork: 2 of 2
# Warmup Iteration   1: 110.267 ns/op
# Warmup Iteration   2: 271.547 ns/op
# Warmup Iteration   3: 132.909 ns/op
Iteration   1: 270.709 ns/op
Iteration   2: 301.574 ns/op
Iteration   3: 727.837 ns/op
Iteration   4: 131.791 ns/op
Iteration   5: 86.962 ns/op
Iteration   6: 360.799 ns/op
Iteration   7: 125.168 ns/op
Iteration   8: 99.789 ns/op
Iteration   9: 118.297 ns/op
Iteration  10: 105.071 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  221.984 ±(99.9%) 150.652 ns/op [Average]
  (min, avg, max) = (86.962, 221.984, 727.837), stdev = 173.491
  CI (99.9%): [71.332, 372.636] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 74.86% complete, ETA 00:09:39
# Fork: 1 of 2
# Warmup Iteration   1: 1028.915 ns/op
# Warmup Iteration   2: 940.452 ns/op
# Warmup Iteration   3: 1097.456 ns/op
Iteration   1: 604.590 ns/op
Iteration   2: 639.754 ns/op
Iteration   3: 10273.023 ns/op
Iteration   4: 716.278 ns/op
Iteration   5: 682.799 ns/op
Iteration   6: 698.303 ns/op
Iteration   7: 689.157 ns/op
Iteration   8: 682.159 ns/op
Iteration   9: 699.121 ns/op
Iteration  10: 687.597 ns/op

# Run progress: 74.93% complete, ETA 00:09:37
# Fork: 2 of 2
# Warmup Iteration   1: 991.094 ns/op
# Warmup Iteration   2: 920.057 ns/op
# Warmup Iteration   3: 1031.131 ns/op
Iteration   1: 603.876 ns/op
Iteration   2: 638.506 ns/op
Iteration   3: 2968.179 ns/op
Iteration   4: 707.824 ns/op
Iteration   5: 671.364 ns/op
Iteration   6: 689.738 ns/op
Iteration   7: 680.302 ns/op
Iteration   8: 671.200 ns/op
Iteration   9: 687.863 ns/op
Iteration  10: 681.506 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1268.657 ±(99.9%) 1893.582 ns/op [Average]
  (min, avg, max) = (603.876, 1268.657, 10273.023), stdev = 2180.652
  CI (99.9%): [≈ 0, 3162.239] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 75.00% complete, ETA 00:09:35
# Fork: 1 of 2
# Warmup Iteration   1: 19.511 ns/op
# Warmup Iteration   2: 22.869 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.283 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.099 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.007 ns/op
Iteration   9: 17.012 ns/op
Iteration  10: 14.969 ns/op

# Run progress: 75.07% complete, ETA 00:09:34
# Fork: 2 of 2
# Warmup Iteration   1: 19.490 ns/op
# Warmup Iteration   2: 21.014 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.262 ns/op
Iteration   3: 17.008 ns/op
Iteration   4: 15.017 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.381 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.003 ns/op
Iteration   9: 17.020 ns/op
Iteration  10: 14.954 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.954, 16.287, 17.109), stdev = 0.952
  CI (99.9%): [15.460, 17.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 75.14% complete, ETA 00:09:32
# Fork: 1 of 2
# Warmup Iteration   1: 821.136 ns/op
# Warmup Iteration   2: 420.677 ns/op
# Warmup Iteration   3: 301.256 ns/op
Iteration   1: 302.470 ns/op
Iteration   2: 300.986 ns/op
Iteration   3: 302.457 ns/op
Iteration   4: 301.157 ns/op
Iteration   5: 302.388 ns/op
Iteration   6: 301.290 ns/op
Iteration   7: 302.688 ns/op
Iteration   8: 303.007 ns/op
Iteration   9: 302.997 ns/op
Iteration  10: 301.230 ns/op

# Run progress: 75.21% complete, ETA 00:09:31
# Fork: 2 of 2
# Warmup Iteration   1: 684.225 ns/op
# Warmup Iteration   2: 429.222 ns/op
# Warmup Iteration   3: 301.285 ns/op
Iteration   1: 302.652 ns/op
Iteration   2: 301.111 ns/op
Iteration   3: 302.704 ns/op
Iteration   4: 301.347 ns/op
Iteration   5: 303.148 ns/op
Iteration   6: 301.206 ns/op
Iteration   7: 302.791 ns/op
Iteration   8: 302.378 ns/op
Iteration   9: 303.051 ns/op
Iteration  10: 301.077 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  302.107 ±(99.9%) 0.704 ns/op [Average]
  (min, avg, max) = (300.986, 302.107, 303.148), stdev = 0.810
  CI (99.9%): [301.403, 302.811] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 75.28% complete, ETA 00:09:29
# Fork: 1 of 2
# Warmup Iteration   1: 560.776 ns/op
# Warmup Iteration   2: 505.287 ns/op
# Warmup Iteration   3: 389.536 ns/op
Iteration   1: 387.485 ns/op
Iteration   2: 389.424 ns/op
Iteration   3: 388.590 ns/op
Iteration   4: 390.416 ns/op
Iteration   5: 387.860 ns/op
Iteration   6: 389.718 ns/op
Iteration   7: 388.086 ns/op
Iteration   8: 387.778 ns/op
Iteration   9: 388.137 ns/op
Iteration  10: 389.007 ns/op

# Run progress: 75.35% complete, ETA 00:09:27
# Fork: 2 of 2
# Warmup Iteration   1: 590.244 ns/op
# Warmup Iteration   2: 568.544 ns/op
# Warmup Iteration   3: 389.552 ns/op
Iteration   1: 387.618 ns/op
Iteration   2: 388.984 ns/op
Iteration   3: 387.643 ns/op
Iteration   4: 390.436 ns/op
Iteration   5: 387.853 ns/op
Iteration   6: 388.968 ns/op
Iteration   7: 387.785 ns/op
Iteration   8: 387.791 ns/op
Iteration   9: 387.814 ns/op
Iteration  10: 388.880 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  388.514 ±(99.9%) 0.804 ns/op [Average]
  (min, avg, max) = (387.485, 388.514, 390.436), stdev = 0.926
  CI (99.9%): [387.710, 389.318] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 75.42% complete, ETA 00:09:26
# Fork: 1 of 2
# Warmup Iteration   1: 7407.261 ns/op
# Warmup Iteration   2: 462.035 ns/op
# Warmup Iteration   3: 316.548 ns/op
Iteration   1: 314.625 ns/op
Iteration   2: 317.138 ns/op
Iteration   3: 314.855 ns/op
Iteration   4: 319.036 ns/op
Iteration   5: 315.034 ns/op
Iteration   6: 316.859 ns/op
Iteration   7: 314.861 ns/op
Iteration   8: 314.781 ns/op
Iteration   9: 314.783 ns/op
Iteration  10: 316.797 ns/op

# Run progress: 75.49% complete, ETA 00:09:24
# Fork: 2 of 2
# Warmup Iteration   1: 7565.327 ns/op
# Warmup Iteration   2: 442.149 ns/op
# Warmup Iteration   3: 318.762 ns/op
Iteration   1: 318.277 ns/op
Iteration   2: 319.925 ns/op
Iteration   3: 318.252 ns/op
Iteration   4: 323.198 ns/op
Iteration   5: 318.214 ns/op
Iteration   6: 318.937 ns/op
Iteration   7: 318.235 ns/op
Iteration   8: 318.307 ns/op
Iteration   9: 318.376 ns/op
Iteration  10: 318.795 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  317.464 ±(99.9%) 1.913 ns/op [Average]
  (min, avg, max) = (314.625, 317.464, 323.198), stdev = 2.203
  CI (99.9%): [315.552, 319.377] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 75.56% complete, ETA 00:09:23
# Fork: 1 of 2
# Warmup Iteration   1: 490.230 ns/op
# Warmup Iteration   2: 398.844 ns/op
# Warmup Iteration   3: 315.834 ns/op
Iteration   1: 313.665 ns/op
Iteration   2: 315.507 ns/op
Iteration   3: 313.431 ns/op
Iteration   4: 317.807 ns/op
Iteration   5: 313.506 ns/op
Iteration   6: 315.945 ns/op
Iteration   7: 313.535 ns/op
Iteration   8: 313.590 ns/op
Iteration   9: 313.487 ns/op
Iteration  10: 315.941 ns/op

# Run progress: 75.63% complete, ETA 00:09:21
# Fork: 2 of 2
# Warmup Iteration   1: 488.868 ns/op
# Warmup Iteration   2: 427.092 ns/op
# Warmup Iteration   3: 316.077 ns/op
Iteration   1: 314.167 ns/op
Iteration   2: 316.802 ns/op
Iteration   3: 314.322 ns/op
Iteration   4: 317.672 ns/op
Iteration   5: 314.173 ns/op
Iteration   6: 315.882 ns/op
Iteration   7: 314.281 ns/op
Iteration   8: 314.348 ns/op
Iteration   9: 314.352 ns/op
Iteration  10: 315.757 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  314.909 ±(99.9%) 1.221 ns/op [Average]
  (min, avg, max) = (313.431, 314.909, 317.807), stdev = 1.406
  CI (99.9%): [313.687, 316.130] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 75.69% complete, ETA 00:09:19
# Fork: 1 of 2
# Warmup Iteration   1: 3067.121 ns/op
# Warmup Iteration   2: 2285.199 ns/op
# Warmup Iteration   3: 1580.335 ns/op
Iteration   1: 1583.578 ns/op
Iteration   2: 1581.270 ns/op
Iteration   3: 1580.764 ns/op
Iteration   4: 1596.288 ns/op
Iteration   5: 1593.083 ns/op
Iteration   6: 1594.159 ns/op
Iteration   7: 1596.565 ns/op
Iteration   8: 1595.683 ns/op
Iteration   9: 1592.655 ns/op
Iteration  10: 1592.347 ns/op

# Run progress: 75.76% complete, ETA 00:09:18
# Fork: 2 of 2
# Warmup Iteration   1: 2867.369 ns/op
# Warmup Iteration   2: 2236.108 ns/op
# Warmup Iteration   3: 1551.553 ns/op
Iteration   1: 1548.971 ns/op
Iteration   2: 1550.096 ns/op
Iteration   3: 1548.023 ns/op
Iteration   4: 1563.780 ns/op
Iteration   5: 1562.955 ns/op
Iteration   6: 1558.354 ns/op
Iteration   7: 1562.894 ns/op
Iteration   8: 1559.164 ns/op
Iteration   9: 1565.257 ns/op
Iteration  10: 1566.371 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1574.613 ±(99.9%) 15.349 ns/op [Average]
  (min, avg, max) = (1548.023, 1574.613, 1596.565), stdev = 17.676
  CI (99.9%): [1559.264, 1589.961] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 75.83% complete, ETA 00:09:16
# Fork: 1 of 2
# Warmup Iteration   1: 19.742 ns/op
# Warmup Iteration   2: 21.021 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.078 ns/op
Iteration   2: 15.261 ns/op
Iteration   3: 17.005 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.371 ns/op
Iteration   7: 17.015 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.032 ns/op
Iteration  10: 14.956 ns/op

# Run progress: 75.90% complete, ETA 00:09:15
# Fork: 2 of 2
# Warmup Iteration   1: 19.827 ns/op
# Warmup Iteration   2: 21.929 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.081 ns/op
Iteration   2: 15.280 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.383 ns/op
Iteration   7: 17.016 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.973 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.956, 16.289, 17.109), stdev = 0.954
  CI (99.9%): [15.461, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 75.97% complete, ETA 00:09:13
# Fork: 1 of 2
# Warmup Iteration   1: 155.973 ns/op
# Warmup Iteration   2: 121.155 ns/op
# Warmup Iteration   3: 91.126 ns/op
Iteration   1: 91.956 ns/op
Iteration   2: 90.854 ns/op
Iteration   3: 92.022 ns/op
Iteration   4: 91.061 ns/op
Iteration   5: 92.044 ns/op
Iteration   6: 90.575 ns/op
Iteration   7: 92.054 ns/op
Iteration   8: 92.104 ns/op
Iteration   9: 92.037 ns/op
Iteration  10: 90.722 ns/op

# Run progress: 76.04% complete, ETA 00:09:11
# Fork: 2 of 2
# Warmup Iteration   1: 164.401 ns/op
# Warmup Iteration   2: 124.170 ns/op
# Warmup Iteration   3: 91.084 ns/op
Iteration   1: 92.006 ns/op
Iteration   2: 90.830 ns/op
Iteration   3: 91.979 ns/op
Iteration   4: 91.023 ns/op
Iteration   5: 92.103 ns/op
Iteration   6: 90.601 ns/op
Iteration   7: 92.007 ns/op
Iteration   8: 92.054 ns/op
Iteration   9: 92.124 ns/op
Iteration  10: 90.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.557 ±(99.9%) 0.539 ns/op [Average]
  (min, avg, max) = (90.575, 91.557, 92.124), stdev = 0.620
  CI (99.9%): [91.018, 92.095] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 76.11% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 65.371 ns/op
# Warmup Iteration   2: 61.165 ns/op
# Warmup Iteration   3: 45.798 ns/op
Iteration   1: 44.447 ns/op
Iteration   2: 45.886 ns/op
Iteration   3: 44.365 ns/op
Iteration   4: 46.054 ns/op
Iteration   5: 44.438 ns/op
Iteration   6: 45.772 ns/op
Iteration   7: 44.413 ns/op
Iteration   8: 44.353 ns/op
Iteration   9: 44.377 ns/op
Iteration  10: 45.738 ns/op

# Run progress: 76.18% complete, ETA 00:09:08
# Fork: 2 of 2
# Warmup Iteration   1: 64.396 ns/op
# Warmup Iteration   2: 65.910 ns/op
# Warmup Iteration   3: 45.804 ns/op
Iteration   1: 44.482 ns/op
Iteration   2: 45.871 ns/op
Iteration   3: 44.388 ns/op
Iteration   4: 46.055 ns/op
Iteration   5: 44.440 ns/op
Iteration   6: 45.788 ns/op
Iteration   7: 44.399 ns/op
Iteration   8: 44.384 ns/op
Iteration   9: 44.419 ns/op
Iteration  10: 45.762 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.992 ±(99.9%) 0.640 ns/op [Average]
  (min, avg, max) = (44.353, 44.992, 46.055), stdev = 0.737
  CI (99.9%): [44.352, 45.632] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 76.25% complete, ETA 00:09:07
# Fork: 1 of 2
# Warmup Iteration   1: 266.457 ns/op
# Warmup Iteration   2: 151.258 ns/op
# Warmup Iteration   3: 110.167 ns/op
Iteration   1: 108.595 ns/op
Iteration   2: 110.422 ns/op
Iteration   3: 108.494 ns/op
Iteration   4: 110.457 ns/op
Iteration   5: 108.880 ns/op
Iteration   6: 110.091 ns/op
Iteration   7: 108.536 ns/op
Iteration   8: 108.545 ns/op
Iteration   9: 108.675 ns/op
Iteration  10: 110.039 ns/op

# Run progress: 76.32% complete, ETA 00:09:05
# Fork: 2 of 2
# Warmup Iteration   1: 265.089 ns/op
# Warmup Iteration   2: 153.447 ns/op
# Warmup Iteration   3: 108.934 ns/op
Iteration   1: 107.363 ns/op
Iteration   2: 109.166 ns/op
Iteration   3: 107.488 ns/op
Iteration   4: 109.280 ns/op
Iteration   5: 107.349 ns/op
Iteration   6: 108.923 ns/op
Iteration   7: 107.424 ns/op
Iteration   8: 107.509 ns/op
Iteration   9: 107.384 ns/op
Iteration  10: 108.885 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  108.675 ±(99.9%) 0.900 ns/op [Average]
  (min, avg, max) = (107.349, 108.675, 110.457), stdev = 1.036
  CI (99.9%): [107.775, 109.575] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 76.39% complete, ETA 00:09:03
# Fork: 1 of 2
# Warmup Iteration   1: 68.608 ns/op
# Warmup Iteration   2: 77.757 ns/op
# Warmup Iteration   3: 49.157 ns/op
Iteration   1: 47.805 ns/op
Iteration   2: 49.169 ns/op
Iteration   3: 47.911 ns/op
Iteration   4: 49.129 ns/op
Iteration   5: 47.837 ns/op
Iteration   6: 49.126 ns/op
Iteration   7: 47.899 ns/op
Iteration   8: 47.919 ns/op
Iteration   9: 47.894 ns/op
Iteration  10: 49.161 ns/op

# Run progress: 76.46% complete, ETA 00:09:02
# Fork: 2 of 2
# Warmup Iteration   1: 66.895 ns/op
# Warmup Iteration   2: 68.194 ns/op
# Warmup Iteration   3: 49.152 ns/op
Iteration   1: 47.801 ns/op
Iteration   2: 49.182 ns/op
Iteration   3: 47.909 ns/op
Iteration   4: 49.162 ns/op
Iteration   5: 47.786 ns/op
Iteration   6: 49.112 ns/op
Iteration   7: 47.924 ns/op
Iteration   8: 47.871 ns/op
Iteration   9: 47.913 ns/op
Iteration  10: 49.141 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.383 ±(99.9%) 0.558 ns/op [Average]
  (min, avg, max) = (47.786, 48.383, 49.182), stdev = 0.642
  CI (99.9%): [47.825, 48.940] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 76.53% complete, ETA 00:09:00
# Fork: 1 of 2
# Warmup Iteration   1: 170.467 ns/op
# Warmup Iteration   2: 171.810 ns/op
# Warmup Iteration   3: 121.840 ns/op
Iteration   1: 123.081 ns/op
Iteration   2: 128.690 ns/op
Iteration   3: 123.400 ns/op
Iteration   4: 137.493 ns/op
Iteration   5: 137.611 ns/op
Iteration   6: 136.257 ns/op
Iteration   7: 136.936 ns/op
Iteration   8: 137.117 ns/op
Iteration   9: 136.899 ns/op
Iteration  10: 136.004 ns/op

# Run progress: 76.60% complete, ETA 00:08:59
# Fork: 2 of 2
# Warmup Iteration   1: 165.848 ns/op
# Warmup Iteration   2: 173.857 ns/op
# Warmup Iteration   3: 121.639 ns/op
Iteration   1: 122.814 ns/op
Iteration   2: 128.965 ns/op
Iteration   3: 123.177 ns/op
Iteration   4: 136.884 ns/op
Iteration   5: 136.562 ns/op
Iteration   6: 134.843 ns/op
Iteration   7: 135.954 ns/op
Iteration   8: 136.892 ns/op
Iteration   9: 136.022 ns/op
Iteration  10: 134.766 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  133.018 ±(99.9%) 4.886 ns/op [Average]
  (min, avg, max) = (122.814, 133.018, 137.611), stdev = 5.627
  CI (99.9%): [128.132, 137.905] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 76.67% complete, ETA 00:08:57
# Fork: 1 of 2
# Warmup Iteration   1: 19.560 ns/op
# Warmup Iteration   2: 22.883 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.264 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.404 ns/op
Iteration   7: 17.022 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.015 ns/op
Iteration  10: 14.975 ns/op

# Run progress: 76.74% complete, ETA 00:08:55
# Fork: 2 of 2
# Warmup Iteration   1: 19.543 ns/op
# Warmup Iteration   2: 23.812 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.292 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.370 ns/op
Iteration   7: 17.023 ns/op
Iteration   8: 17.013 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.970, 16.292, 17.110), stdev = 0.951
  CI (99.9%): [15.466, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 76.81% complete, ETA 00:08:54
# Fork: 1 of 2
# Warmup Iteration   1: 1266.828 ns/op
# Warmup Iteration   2: 28521.982 ns/op
# Warmup Iteration   3: 1776.583 ns/op
Iteration   1: 347.447 ns/op
Iteration   2: 21403.656 ns/op
Iteration   3: 435.393 ns/op
Iteration   4: 20974.007 ns/op
Iteration   5: 379.653 ns/op
Iteration   6: 18483.887 ns/op
Iteration   7: 480.458 ns/op
Iteration   8: 337.209 ns/op
Iteration   9: 429.145 ns/op
Iteration  10: 313.617 ns/op

# Run progress: 76.88% complete, ETA 00:08:52
# Fork: 2 of 2
# Warmup Iteration   1: 1258.418 ns/op
# Warmup Iteration   2: 25185.756 ns/op
# Warmup Iteration   3: 845.798 ns/op
Iteration   1: 339.415 ns/op
Iteration   2: 23709.948 ns/op
Iteration   3: 567.281 ns/op
Iteration   4: 21320.240 ns/op
Iteration   5: 384.976 ns/op
Iteration   6: 18759.342 ns/op
Iteration   7: 310.806 ns/op
Iteration   8: 337.054 ns/op
Iteration   9: 428.030 ns/op
Iteration  10: 314.445 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6502.800 ±(99.9%) 8368.758 ns/op [Average]
  (min, avg, max) = (310.806, 6502.800, 23709.948), stdev = 9637.475
  CI (99.9%): [≈ 0, 14871.559] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 76.94% complete, ETA 00:08:51
# Fork: 1 of 2
# Warmup Iteration   1: 648.634 ns/op
# Warmup Iteration   2: 615.334 ns/op
# Warmup Iteration   3: 408.982 ns/op
Iteration   1: 449.469 ns/op
Iteration   2: 420.659 ns/op
Iteration   3: 450.330 ns/op
Iteration   4: 426.232 ns/op
Iteration   5: 443.132 ns/op
Iteration   6: 422.228 ns/op
Iteration   7: 430.924 ns/op
Iteration   8: 451.414 ns/op
Iteration   9: 437.735 ns/op
Iteration  10: 411.537 ns/op

# Run progress: 77.01% complete, ETA 00:08:49
# Fork: 2 of 2
# Warmup Iteration   1: 713.863 ns/op
# Warmup Iteration   2: 564.137 ns/op
# Warmup Iteration   3: 406.689 ns/op
Iteration   1: 450.189 ns/op
Iteration   2: 420.095 ns/op
Iteration   3: 455.241 ns/op
Iteration   4: 426.722 ns/op
Iteration   5: 453.506 ns/op
Iteration   6: 423.261 ns/op
Iteration   7: 430.774 ns/op
Iteration   8: 454.120 ns/op
Iteration   9: 436.668 ns/op
Iteration  10: 407.440 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  435.084 ±(99.9%) 13.150 ns/op [Average]
  (min, avg, max) = (407.440, 435.084, 455.241), stdev = 15.143
  CI (99.9%): [421.934, 448.234] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 77.08% complete, ETA 00:08:47
# Fork: 1 of 2
# Warmup Iteration   1: 13027.997 ns/op
# Warmup Iteration   2: 962.366 ns/op
# Warmup Iteration   3: 2030.835 ns/op
Iteration   1: 12063.251 ns/op
Iteration   2: 10526.295 ns/op
Iteration   3: 329.505 ns/op
Iteration   4: 9471.809 ns/op
Iteration   5: 24684.700 ns/op
Iteration   6: 403.097 ns/op
Iteration   7: 388.921 ns/op
Iteration   8: 369.241 ns/op
Iteration   9: 464.383 ns/op
Iteration  10: 347.509 ns/op

# Run progress: 77.15% complete, ETA 00:08:46
# Fork: 2 of 2
# Warmup Iteration   1: 10867.204 ns/op
# Warmup Iteration   2: 1220.370 ns/op
# Warmup Iteration   3: 1582.908 ns/op
Iteration   1: 982.427 ns/op
Iteration   2: 12485.444 ns/op
Iteration   3: 330.864 ns/op
Iteration   4: 8550.865 ns/op
Iteration   5: 29101.710 ns/op
Iteration   6: 407.128 ns/op
Iteration   7: 382.994 ns/op
Iteration   8: 343.403 ns/op
Iteration   9: 452.932 ns/op
Iteration  10: 349.688 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5621.808 ±(99.9%) 7459.036 ns/op [Average]
  (min, avg, max) = (329.505, 5621.808, 29101.710), stdev = 8589.837
  CI (99.9%): [≈ 0, 13080.844] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 77.22% complete, ETA 00:08:44
# Fork: 1 of 2
# Warmup Iteration   1: 620.724 ns/op
# Warmup Iteration   2: 437.187 ns/op
# Warmup Iteration   3: 311.646 ns/op
Iteration   1: 40954.502 ns/op
Iteration   2: 343.367 ns/op
Iteration   3: 345.403 ns/op
Iteration   4: 321.915 ns/op
Iteration   5: 349.573 ns/op
Iteration   6: 358.090 ns/op
Iteration   7: 349.543 ns/op
Iteration   8: 354.355 ns/op
Iteration   9: 336.374 ns/op
Iteration  10: 315.379 ns/op

# Run progress: 77.29% complete, ETA 00:08:43
# Fork: 2 of 2
# Warmup Iteration   1: 589.769 ns/op
# Warmup Iteration   2: 426.290 ns/op
# Warmup Iteration   3: 315.662 ns/op
Iteration   1: 4109.846 ns/op
Iteration   2: 346.819 ns/op
Iteration   3: 346.335 ns/op
Iteration   4: 329.603 ns/op
Iteration   5: 350.692 ns/op
Iteration   6: 364.745 ns/op
Iteration   7: 354.438 ns/op
Iteration   8: 360.288 ns/op
Iteration   9: 341.393 ns/op
Iteration  10: 319.196 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2562.593 ±(99.9%) 7880.829 ns/op [Average]
  (min, avg, max) = (315.379, 2562.593, 40954.502), stdev = 9075.574
  CI (99.9%): [≈ 0, 10443.421] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 77.36% complete, ETA 00:08:41
# Fork: 1 of 2
# Warmup Iteration   1: 3629.279 ns/op
# Warmup Iteration   2: 2308.321 ns/op
# Warmup Iteration   3: 1583.830 ns/op
Iteration   1: 1689.031 ns/op
Iteration   2: 1616.190 ns/op
Iteration   3: 1710.553 ns/op
Iteration   4: 1644.955 ns/op
Iteration   5: 1673.037 ns/op
Iteration   6: 1643.072 ns/op
Iteration   7: 1674.659 ns/op
Iteration   8: 1683.147 ns/op
Iteration   9: 1687.871 ns/op
Iteration  10: 1597.617 ns/op

# Run progress: 77.43% complete, ETA 00:08:39
# Fork: 2 of 2
# Warmup Iteration   1: 3701.326 ns/op
# Warmup Iteration   2: 2285.666 ns/op
# Warmup Iteration   3: 1575.701 ns/op
Iteration   1: 1687.553 ns/op
Iteration   2: 1609.256 ns/op
Iteration   3: 1687.540 ns/op
Iteration   4: 1640.662 ns/op
Iteration   5: 1676.468 ns/op
Iteration   6: 1645.327 ns/op
Iteration   7: 1680.210 ns/op
Iteration   8: 1705.293 ns/op
Iteration   9: 1675.412 ns/op
Iteration  10: 1592.356 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1661.010 ±(99.9%) 30.620 ns/op [Average]
  (min, avg, max) = (1592.356, 1661.010, 1710.553), stdev = 35.262
  CI (99.9%): [1630.390, 1691.631] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 77.50% complete, ETA 00:08:38
# Fork: 1 of 2
# Warmup Iteration   1: 19.346 ns/op
# Warmup Iteration   2: 23.040 ns/op
# Warmup Iteration   3: 15.020 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.297 ns/op
Iteration   3: 17.008 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.377 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.008 ns/op
Iteration  10: 14.968 ns/op

# Run progress: 77.57% complete, ETA 00:08:36
# Fork: 2 of 2
# Warmup Iteration   1: 20.949 ns/op
# Warmup Iteration   2: 23.122 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 16.998 ns/op
Iteration   4: 15.033 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.399 ns/op
Iteration   7: 17.014 ns/op
Iteration   8: 17.028 ns/op
Iteration   9: 17.030 ns/op
Iteration  10: 14.976 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.823 ns/op [Average]
  (min, avg, max) = (14.968, 16.291, 17.110), stdev = 0.948
  CI (99.9%): [15.467, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 77.64% complete, ETA 00:08:35
# Fork: 1 of 2
# Warmup Iteration   1: 165.310 ns/op
# Warmup Iteration   2: 123.756 ns/op
# Warmup Iteration   3: 91.109 ns/op
Iteration   1: 92.113 ns/op
Iteration   2: 90.886 ns/op
Iteration   3: 92.188 ns/op
Iteration   4: 91.058 ns/op
Iteration   5: 92.308 ns/op
Iteration   6: 90.642 ns/op
Iteration   7: 92.071 ns/op
Iteration   8: 92.206 ns/op
Iteration   9: 92.184 ns/op
Iteration  10: 90.692 ns/op

# Run progress: 77.71% complete, ETA 00:08:33
# Fork: 2 of 2
# Warmup Iteration   1: 174.680 ns/op
# Warmup Iteration   2: 139.765 ns/op
# Warmup Iteration   3: 91.223 ns/op
Iteration   1: 91.958 ns/op
Iteration   2: 90.920 ns/op
Iteration   3: 92.051 ns/op
Iteration   4: 91.069 ns/op
Iteration   5: 92.086 ns/op
Iteration   6: 90.613 ns/op
Iteration   7: 92.118 ns/op
Iteration   8: 92.034 ns/op
Iteration   9: 92.062 ns/op
Iteration  10: 90.738 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.600 ±(99.9%) 0.573 ns/op [Average]
  (min, avg, max) = (90.613, 91.600, 92.308), stdev = 0.660
  CI (99.9%): [91.027, 92.173] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 77.78% complete, ETA 00:08:31
# Fork: 1 of 2
# Warmup Iteration   1: 65.040 ns/op
# Warmup Iteration   2: 63.095 ns/op
# Warmup Iteration   3: 45.829 ns/op
Iteration   1: 44.451 ns/op
Iteration   2: 45.878 ns/op
Iteration   3: 44.358 ns/op
Iteration   4: 46.012 ns/op
Iteration   5: 44.489 ns/op
Iteration   6: 45.812 ns/op
Iteration   7: 44.410 ns/op
Iteration   8: 44.379 ns/op
Iteration   9: 44.399 ns/op
Iteration  10: 45.737 ns/op

# Run progress: 77.85% complete, ETA 00:08:30
# Fork: 2 of 2
# Warmup Iteration   1: 64.826 ns/op
# Warmup Iteration   2: 64.261 ns/op
# Warmup Iteration   3: 45.802 ns/op
Iteration   1: 44.478 ns/op
Iteration   2: 45.929 ns/op
Iteration   3: 44.426 ns/op
Iteration   4: 46.019 ns/op
Iteration   5: 44.448 ns/op
Iteration   6: 45.799 ns/op
Iteration   7: 44.383 ns/op
Iteration   8: 44.404 ns/op
Iteration   9: 44.392 ns/op
Iteration  10: 45.760 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.998 ±(99.9%) 0.636 ns/op [Average]
  (min, avg, max) = (44.358, 44.998, 46.019), stdev = 0.733
  CI (99.9%): [44.362, 45.634] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 77.92% complete, ETA 00:08:28
# Fork: 1 of 2
# Warmup Iteration   1: 340.117 ns/op
# Warmup Iteration   2: 143.357 ns/op
# Warmup Iteration   3: 109.151 ns/op
Iteration   1: 107.247 ns/op
Iteration   2: 109.057 ns/op
Iteration   3: 107.282 ns/op
Iteration   4: 109.045 ns/op
Iteration   5: 107.407 ns/op
Iteration   6: 108.774 ns/op
Iteration   7: 107.245 ns/op
Iteration   8: 107.498 ns/op
Iteration   9: 107.249 ns/op
Iteration  10: 108.891 ns/op

# Run progress: 77.99% complete, ETA 00:08:27
# Fork: 2 of 2
# Warmup Iteration   1: 279.173 ns/op
# Warmup Iteration   2: 142.452 ns/op
# Warmup Iteration   3: 109.472 ns/op
Iteration   1: 107.274 ns/op
Iteration   2: 109.084 ns/op
Iteration   3: 107.662 ns/op
Iteration   4: 109.062 ns/op
Iteration   5: 107.471 ns/op
Iteration   6: 108.765 ns/op
Iteration   7: 107.246 ns/op
Iteration   8: 107.253 ns/op
Iteration   9: 107.283 ns/op
Iteration  10: 108.843 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  107.982 ±(99.9%) 0.707 ns/op [Average]
  (min, avg, max) = (107.245, 107.982, 109.084), stdev = 0.814
  CI (99.9%): [107.275, 108.688] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 78.06% complete, ETA 00:08:25
# Fork: 1 of 2
# Warmup Iteration   1: 66.930 ns/op
# Warmup Iteration   2: 65.811 ns/op
# Warmup Iteration   3: 49.142 ns/op
Iteration   1: 47.770 ns/op
Iteration   2: 49.128 ns/op
Iteration   3: 47.906 ns/op
Iteration   4: 49.181 ns/op
Iteration   5: 47.780 ns/op
Iteration   6: 49.106 ns/op
Iteration   7: 47.903 ns/op
Iteration   8: 47.878 ns/op
Iteration   9: 47.910 ns/op
Iteration  10: 49.141 ns/op

# Run progress: 78.13% complete, ETA 00:08:23
# Fork: 2 of 2
# Warmup Iteration   1: 67.638 ns/op
# Warmup Iteration   2: 66.952 ns/op
# Warmup Iteration   3: 49.153 ns/op
Iteration   1: 47.808 ns/op
Iteration   2: 49.132 ns/op
Iteration   3: 47.882 ns/op
Iteration   4: 49.133 ns/op
Iteration   5: 47.875 ns/op
Iteration   6: 49.085 ns/op
Iteration   7: 47.875 ns/op
Iteration   8: 47.903 ns/op
Iteration   9: 47.884 ns/op
Iteration  10: 49.115 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.370 ±(99.9%) 0.552 ns/op [Average]
  (min, avg, max) = (47.770, 48.370, 49.181), stdev = 0.636
  CI (99.9%): [47.817, 48.922] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 78.19% complete, ETA 00:08:22
# Fork: 1 of 2
# Warmup Iteration   1: 169.181 ns/op
# Warmup Iteration   2: 182.432 ns/op
# Warmup Iteration   3: 121.871 ns/op
Iteration   1: 123.023 ns/op
Iteration   2: 128.702 ns/op
Iteration   3: 123.441 ns/op
Iteration   4: 137.459 ns/op
Iteration   5: 137.741 ns/op
Iteration   6: 136.244 ns/op
Iteration   7: 136.831 ns/op
Iteration   8: 137.046 ns/op
Iteration   9: 136.883 ns/op
Iteration  10: 136.067 ns/op

# Run progress: 78.26% complete, ETA 00:08:20
# Fork: 2 of 2
# Warmup Iteration   1: 172.661 ns/op
# Warmup Iteration   2: 171.335 ns/op
# Warmup Iteration   3: 121.708 ns/op
Iteration   1: 123.073 ns/op
Iteration   2: 128.708 ns/op
Iteration   3: 123.362 ns/op
Iteration   4: 137.451 ns/op
Iteration   5: 137.648 ns/op
Iteration   6: 136.089 ns/op
Iteration   7: 136.830 ns/op
Iteration   8: 136.983 ns/op
Iteration   9: 137.025 ns/op
Iteration  10: 136.010 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  133.331 ±(99.9%) 5.009 ns/op [Average]
  (min, avg, max) = (123.023, 133.331, 137.741), stdev = 5.768
  CI (99.9%): [128.322, 138.340] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 78.33% complete, ETA 00:08:19
# Fork: 1 of 2
# Warmup Iteration   1: 19.501 ns/op
# Warmup Iteration   2: 23.304 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.068 ns/op
Iteration   2: 15.262 ns/op
Iteration   3: 17.010 ns/op
Iteration   4: 15.029 ns/op
Iteration   5: 17.100 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.009 ns/op
Iteration   8: 17.049 ns/op
Iteration   9: 17.026 ns/op
Iteration  10: 14.968 ns/op

# Run progress: 78.40% complete, ETA 00:08:17
# Fork: 2 of 2
# Warmup Iteration   1: 19.604 ns/op
# Warmup Iteration   2: 20.987 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.386 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.973 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.968, 16.290, 17.107), stdev = 0.952
  CI (99.9%): [15.464, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 78.47% complete, ETA 00:08:15
# Fork: 1 of 2
# Warmup Iteration   1: 162.552 ns/op
# Warmup Iteration   2: 2091.774 ns/op
# Warmup Iteration   3: 114.983 ns/op
Iteration   1: 146.626 ns/op
Iteration   2: 10369.572 ns/op
Iteration   3: 116.291 ns/op
Iteration   4: 175.920 ns/op
Iteration   5: 116.203 ns/op
Iteration   6: 13486.945 ns/op
Iteration   7: 13717.632 ns/op
Iteration   8: 214.573 ns/op
Iteration   9: 174.220 ns/op
Iteration  10: 118.266 ns/op

# Run progress: 78.54% complete, ETA 00:08:14
# Fork: 2 of 2
# Warmup Iteration   1: 170.788 ns/op
# Warmup Iteration   2: 3231.610 ns/op
# Warmup Iteration   3: 117.730 ns/op
Iteration   1: 148.386 ns/op
Iteration   2: 10665.174 ns/op
Iteration   3: 115.541 ns/op
Iteration   4: 174.752 ns/op
Iteration   5: 115.421 ns/op
Iteration   6: 15489.065 ns/op
Iteration   7: 16494.989 ns/op
Iteration   8: 118.336 ns/op
Iteration   9: 174.544 ns/op
Iteration  10: 117.718 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4112.509 ±(99.9%) 5511.419 ns/op [Average]
  (min, avg, max) = (115.421, 4112.509, 16494.989), stdev = 6346.958
  CI (99.9%): [≈ 0, 9623.928] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 78.61% complete, ETA 00:08:12
# Fork: 1 of 2
# Warmup Iteration   1: 68.930 ns/op
# Warmup Iteration   2: 266.695 ns/op
# Warmup Iteration   3: 84.976 ns/op
Iteration   1: 168.796 ns/op
Iteration   2: 121.130 ns/op
Iteration   3: 97.974 ns/op
Iteration   4: 125.318 ns/op
Iteration   5: 97.924 ns/op
Iteration   6: 134.023 ns/op
Iteration   7: 127.320 ns/op
Iteration   8: 97.930 ns/op
Iteration   9: 123.800 ns/op
Iteration  10: 99.310 ns/op

# Run progress: 78.68% complete, ETA 00:08:11
# Fork: 2 of 2
# Warmup Iteration   1: 67.908 ns/op
# Warmup Iteration   2: 254.951 ns/op
# Warmup Iteration   3: 84.969 ns/op
Iteration   1: 205.663 ns/op
Iteration   2: 121.979 ns/op
Iteration   3: 97.988 ns/op
Iteration   4: 125.331 ns/op
Iteration   5: 97.952 ns/op
Iteration   6: 131.969 ns/op
Iteration   7: 130.439 ns/op
Iteration   8: 97.961 ns/op
Iteration   9: 123.178 ns/op
Iteration  10: 99.271 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  121.263 ±(99.9%) 23.613 ns/op [Average]
  (min, avg, max) = (97.924, 121.263, 205.663), stdev = 27.193
  CI (99.9%): [97.649, 144.876] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 78.75% complete, ETA 00:08:09
# Fork: 1 of 2
# Warmup Iteration   1: 278.645 ns/op
# Warmup Iteration   2: 22014.385 ns/op
# Warmup Iteration   3: 118.372 ns/op
Iteration   1: 152.528 ns/op
Iteration   2: 150.282 ns/op
Iteration   3: 117.455 ns/op
Iteration   4: 14462.877 ns/op
Iteration   5: 118.010 ns/op
Iteration   6: 170.271 ns/op
Iteration   7: 171.530 ns/op
Iteration   8: 117.949 ns/op
Iteration   9: 162.844 ns/op
Iteration  10: 119.633 ns/op

# Run progress: 78.82% complete, ETA 00:08:07
# Fork: 2 of 2
# Warmup Iteration   1: 275.114 ns/op
# Warmup Iteration   2: 19984.474 ns/op
# Warmup Iteration   3: 121.124 ns/op
Iteration   1: 157.172 ns/op
Iteration   2: 151.874 ns/op
Iteration   3: 119.731 ns/op
Iteration   4: 11996.846 ns/op
Iteration   5: 674.937 ns/op
Iteration   6: 170.489 ns/op
Iteration   7: 171.539 ns/op
Iteration   8: 117.920 ns/op
Iteration   9: 162.853 ns/op
Iteration  10: 119.380 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1479.306 ±(99.9%) 3508.380 ns/op [Average]
  (min, avg, max) = (117.455, 1479.306, 14462.877), stdev = 4040.256
  CI (99.9%): [≈ 0, 4987.686] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 78.89% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: 67.409 ns/op
# Warmup Iteration   2: 211.916 ns/op
# Warmup Iteration   3: 53.485 ns/op
Iteration   1: 100.446 ns/op
Iteration   2: 130.727 ns/op
Iteration   3: 68.795 ns/op
Iteration   4: 93.323 ns/op
Iteration   5: 68.705 ns/op
Iteration   6: 90.310 ns/op
Iteration   7: 205.191 ns/op
Iteration   8: 69.119 ns/op
Iteration   9: 84.977 ns/op
Iteration  10: 70.174 ns/op

# Run progress: 78.96% complete, ETA 00:08:04
# Fork: 2 of 2
# Warmup Iteration   1: 67.802 ns/op
# Warmup Iteration   2: 159.894 ns/op
# Warmup Iteration   3: 53.488 ns/op
Iteration   1: 104.084 ns/op
Iteration   2: 175.510 ns/op
Iteration   3: 68.771 ns/op
Iteration   4: 93.326 ns/op
Iteration   5: 68.616 ns/op
Iteration   6: 90.311 ns/op
Iteration   7: 122.483 ns/op
Iteration   8: 68.584 ns/op
Iteration   9: 84.309 ns/op
Iteration  10: 69.999 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  96.388 ±(99.9%) 32.347 ns/op [Average]
  (min, avg, max) = (68.584, 96.388, 205.191), stdev = 37.251
  CI (99.9%): [64.041, 128.735] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 79.03% complete, ETA 00:08:03
# Fork: 1 of 2
# Warmup Iteration   1: 165.353 ns/op
# Warmup Iteration   2: 878.393 ns/op
# Warmup Iteration   3: 112.941 ns/op
Iteration   1: 225.156 ns/op
Iteration   2: 11089.772 ns/op
Iteration   3: 125.204 ns/op
Iteration   4: 333.119 ns/op
Iteration   5: 143.720 ns/op
Iteration   6: 334.513 ns/op
Iteration   7: 333.314 ns/op
Iteration   8: 142.949 ns/op
Iteration   9: 267.392 ns/op
Iteration  10: 141.848 ns/op

# Run progress: 79.10% complete, ETA 00:08:01
# Fork: 2 of 2
# Warmup Iteration   1: 170.644 ns/op
# Warmup Iteration   2: 920.383 ns/op
# Warmup Iteration   3: 112.921 ns/op
Iteration   1: 224.887 ns/op
Iteration   2: 10690.327 ns/op
Iteration   3: 124.625 ns/op
Iteration   4: 333.537 ns/op
Iteration   5: 143.885 ns/op
Iteration   6: 333.457 ns/op
Iteration   7: 333.062 ns/op
Iteration   8: 143.212 ns/op
Iteration   9: 267.036 ns/op
Iteration  10: 142.506 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1293.676 ±(99.9%) 2851.341 ns/op [Average]
  (min, avg, max) = (124.625, 1293.676, 11089.772), stdev = 3283.608
  CI (99.9%): [≈ 0, 4145.017] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 79.17% complete, ETA 00:07:59
# Fork: 1 of 2
# Warmup Iteration   1: 19.408 ns/op
# Warmup Iteration   2: 23.371 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.080 ns/op
Iteration   2: 15.276 ns/op
Iteration   3: 17.026 ns/op
Iteration   4: 15.014 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.385 ns/op
Iteration   7: 17.009 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.012 ns/op
Iteration  10: 14.962 ns/op

# Run progress: 79.24% complete, ETA 00:07:58
# Fork: 2 of 2
# Warmup Iteration   1: 19.411 ns/op
# Warmup Iteration   2: 23.282 ns/op
# Warmup Iteration   3: 15.022 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.280 ns/op
Iteration   3: 17.021 ns/op
Iteration   4: 15.030 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.404 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.012 ns/op
Iteration   9: 17.011 ns/op
Iteration  10: 14.968 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.962, 16.291, 17.113), stdev = 0.950
  CI (99.9%): [15.465, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 79.31% complete, ETA 00:07:56
# Fork: 1 of 2
# Warmup Iteration   1: 758.667 ns/op
# Warmup Iteration   2: 417.814 ns/op
# Warmup Iteration   3: 312.490 ns/op
Iteration   1: 314.092 ns/op
Iteration   2: 313.171 ns/op
Iteration   3: 313.659 ns/op
Iteration   4: 313.993 ns/op
Iteration   5: 313.884 ns/op
Iteration   6: 312.283 ns/op
Iteration   7: 314.270 ns/op
Iteration   8: 313.612 ns/op
Iteration   9: 314.250 ns/op
Iteration  10: 312.665 ns/op

# Run progress: 79.38% complete, ETA 00:07:55
# Fork: 2 of 2
# Warmup Iteration   1: 827.986 ns/op
# Warmup Iteration   2: 440.554 ns/op
# Warmup Iteration   3: 315.029 ns/op
Iteration   1: 316.802 ns/op
Iteration   2: 315.287 ns/op
Iteration   3: 316.398 ns/op
Iteration   4: 316.643 ns/op
Iteration   5: 317.489 ns/op
Iteration   6: 315.061 ns/op
Iteration   7: 316.439 ns/op
Iteration   8: 316.816 ns/op
Iteration   9: 316.398 ns/op
Iteration  10: 315.215 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  314.921 ±(99.9%) 1.344 ns/op [Average]
  (min, avg, max) = (312.283, 314.921, 317.489), stdev = 1.548
  CI (99.9%): [313.577, 316.265] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 79.44% complete, ETA 00:07:53
# Fork: 1 of 2
# Warmup Iteration   1: 654.913 ns/op
# Warmup Iteration   2: 628.118 ns/op
# Warmup Iteration   3: 425.741 ns/op
Iteration   1: 426.918 ns/op
Iteration   2: 428.162 ns/op
Iteration   3: 424.988 ns/op
Iteration   4: 427.578 ns/op
Iteration   5: 428.369 ns/op
Iteration   6: 426.528 ns/op
Iteration   7: 424.876 ns/op
Iteration   8: 425.168 ns/op
Iteration   9: 425.075 ns/op
Iteration  10: 427.587 ns/op

# Run progress: 79.51% complete, ETA 00:07:51
# Fork: 2 of 2
# Warmup Iteration   1: 601.810 ns/op
# Warmup Iteration   2: 544.147 ns/op
# Warmup Iteration   3: 425.668 ns/op
Iteration   1: 425.736 ns/op
Iteration   2: 427.508 ns/op
Iteration   3: 424.881 ns/op
Iteration   4: 427.910 ns/op
Iteration   5: 428.654 ns/op
Iteration   6: 427.243 ns/op
Iteration   7: 424.834 ns/op
Iteration   8: 425.222 ns/op
Iteration   9: 425.015 ns/op
Iteration  10: 427.164 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  426.471 ±(99.9%) 1.194 ns/op [Average]
  (min, avg, max) = (424.834, 426.471, 428.654), stdev = 1.375
  CI (99.9%): [425.277, 427.665] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 79.58% complete, ETA 00:07:50
# Fork: 1 of 2
# Warmup Iteration   1: 10743.864 ns/op
# Warmup Iteration   2: 572.922 ns/op
# Warmup Iteration   3: 409.039 ns/op
Iteration   1: 400.370 ns/op
Iteration   2: 402.220 ns/op
Iteration   3: 404.015 ns/op
Iteration   4: 419.201 ns/op
Iteration   5: 413.129 ns/op
Iteration   6: 415.401 ns/op
Iteration   7: 417.138 ns/op
Iteration   8: 414.337 ns/op
Iteration   9: 410.803 ns/op
Iteration  10: 413.850 ns/op

# Run progress: 79.65% complete, ETA 00:07:48
# Fork: 2 of 2
# Warmup Iteration   1: 11070.043 ns/op
# Warmup Iteration   2: 602.895 ns/op
# Warmup Iteration   3: 415.786 ns/op
Iteration   1: 402.081 ns/op
Iteration   2: 412.901 ns/op
Iteration   3: 404.537 ns/op
Iteration   4: 422.863 ns/op
Iteration   5: 398.871 ns/op
Iteration   6: 417.271 ns/op
Iteration   7: 398.807 ns/op
Iteration   8: 401.700 ns/op
Iteration   9: 402.561 ns/op
Iteration  10: 407.668 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  408.986 ±(99.9%) 6.533 ns/op [Average]
  (min, avg, max) = (398.807, 408.986, 422.863), stdev = 7.524
  CI (99.9%): [402.453, 415.519] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 79.72% complete, ETA 00:07:47
# Fork: 1 of 2
# Warmup Iteration   1: 535.132 ns/op
# Warmup Iteration   2: 409.887 ns/op
# Warmup Iteration   3: 319.317 ns/op
Iteration   1: 319.837 ns/op
Iteration   2: 319.874 ns/op
Iteration   3: 318.272 ns/op
Iteration   4: 319.844 ns/op
Iteration   5: 318.145 ns/op
Iteration   6: 319.336 ns/op
Iteration   7: 318.775 ns/op
Iteration   8: 318.767 ns/op
Iteration   9: 318.634 ns/op
Iteration  10: 320.665 ns/op

# Run progress: 79.79% complete, ETA 00:07:45
# Fork: 2 of 2
# Warmup Iteration   1: 519.207 ns/op
# Warmup Iteration   2: 410.921 ns/op
# Warmup Iteration   3: 318.901 ns/op
Iteration   1: 317.926 ns/op
Iteration   2: 320.154 ns/op
Iteration   3: 318.887 ns/op
Iteration   4: 319.929 ns/op
Iteration   5: 319.400 ns/op
Iteration   6: 320.926 ns/op
Iteration   7: 318.351 ns/op
Iteration   8: 318.284 ns/op
Iteration   9: 318.759 ns/op
Iteration  10: 320.169 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  319.247 ±(99.9%) 0.770 ns/op [Average]
  (min, avg, max) = (317.926, 319.247, 320.926), stdev = 0.887
  CI (99.9%): [318.477, 320.016] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 79.86% complete, ETA 00:07:43
# Fork: 1 of 2
# Warmup Iteration   1: 3298.327 ns/op
# Warmup Iteration   2: 2101.387 ns/op
# Warmup Iteration   3: 1617.456 ns/op
Iteration   1: 1618.795 ns/op
Iteration   2: 1616.516 ns/op
Iteration   3: 1615.486 ns/op
Iteration   4: 1630.574 ns/op
Iteration   5: 1629.305 ns/op
Iteration   6: 1625.211 ns/op
Iteration   7: 1626.467 ns/op
Iteration   8: 1627.058 ns/op
Iteration   9: 1629.194 ns/op
Iteration  10: 1625.297 ns/op

# Run progress: 79.93% complete, ETA 00:07:42
# Fork: 2 of 2
# Warmup Iteration   1: 3151.060 ns/op
# Warmup Iteration   2: 2235.975 ns/op
# Warmup Iteration   3: 1612.236 ns/op
Iteration   1: 1613.720 ns/op
Iteration   2: 1613.655 ns/op
Iteration   3: 1613.517 ns/op
Iteration   4: 1631.755 ns/op
Iteration   5: 1627.534 ns/op
Iteration   6: 1625.445 ns/op
Iteration   7: 1623.110 ns/op
Iteration   8: 1626.642 ns/op
Iteration   9: 1627.013 ns/op
Iteration  10: 1628.025 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1623.716 ±(99.9%) 5.275 ns/op [Average]
  (min, avg, max) = (1613.517, 1623.716, 1631.755), stdev = 6.075
  CI (99.9%): [1618.441, 1628.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 80.00% complete, ETA 00:07:40
# Fork: 1 of 2
# Warmup Iteration   1: 19.468 ns/op
# Warmup Iteration   2: 22.638 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.070 ns/op
Iteration   2: 15.288 ns/op
Iteration   3: 17.005 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.387 ns/op
Iteration   7: 17.007 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.975 ns/op

# Run progress: 80.07% complete, ETA 00:07:39
# Fork: 2 of 2
# Warmup Iteration   1: 19.415 ns/op
# Warmup Iteration   2: 23.023 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.029 ns/op
Iteration   4: 15.022 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.390 ns/op
Iteration   7: 17.001 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.039 ns/op
Iteration  10: 14.979 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.975, 16.291, 17.111), stdev = 0.949
  CI (99.9%): [15.466, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 80.14% complete, ETA 00:07:37
# Fork: 1 of 2
# Warmup Iteration   1: 482.955 ns/op
# Warmup Iteration   2: 289.498 ns/op
# Warmup Iteration   3: 205.623 ns/op
Iteration   1: 205.809 ns/op
Iteration   2: 204.770 ns/op
Iteration   3: 205.889 ns/op
Iteration   4: 206.589 ns/op
Iteration   5: 206.123 ns/op
Iteration   6: 204.924 ns/op
Iteration   7: 206.131 ns/op
Iteration   8: 206.749 ns/op
Iteration   9: 206.240 ns/op
Iteration  10: 204.839 ns/op

# Run progress: 80.21% complete, ETA 00:07:35
# Fork: 2 of 2
# Warmup Iteration   1: 503.412 ns/op
# Warmup Iteration   2: 275.069 ns/op
# Warmup Iteration   3: 205.290 ns/op
Iteration   1: 206.304 ns/op
Iteration   2: 204.704 ns/op
Iteration   3: 206.465 ns/op
Iteration   4: 207.358 ns/op
Iteration   5: 206.236 ns/op
Iteration   6: 205.560 ns/op
Iteration   7: 206.389 ns/op
Iteration   8: 206.332 ns/op
Iteration   9: 206.321 ns/op
Iteration  10: 205.102 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  205.942 ±(99.9%) 0.638 ns/op [Average]
  (min, avg, max) = (204.704, 205.942, 207.358), stdev = 0.734
  CI (99.9%): [205.304, 206.579] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 80.28% complete, ETA 00:07:34
# Fork: 1 of 2
# Warmup Iteration   1: 846.987 ns/op
# Warmup Iteration   2: 780.769 ns/op
# Warmup Iteration   3: 605.673 ns/op
Iteration   1: 604.386 ns/op
Iteration   2: 607.313 ns/op
Iteration   3: 611.884 ns/op
Iteration   4: 605.970 ns/op
Iteration   5: 610.084 ns/op
Iteration   6: 605.588 ns/op
Iteration   7: 604.432 ns/op
Iteration   8: 604.419 ns/op
Iteration   9: 609.166 ns/op
Iteration  10: 605.593 ns/op

# Run progress: 80.35% complete, ETA 00:07:32
# Fork: 2 of 2
# Warmup Iteration   1: 881.816 ns/op
# Warmup Iteration   2: 806.609 ns/op
# Warmup Iteration   3: 605.388 ns/op
Iteration   1: 604.199 ns/op
Iteration   2: 611.861 ns/op
Iteration   3: 604.451 ns/op
Iteration   4: 606.275 ns/op
Iteration   5: 604.263 ns/op
Iteration   6: 605.400 ns/op
Iteration   7: 604.191 ns/op
Iteration   8: 604.491 ns/op
Iteration   9: 604.578 ns/op
Iteration  10: 610.741 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  606.464 ±(99.9%) 2.358 ns/op [Average]
  (min, avg, max) = (604.191, 606.464, 611.884), stdev = 2.716
  CI (99.9%): [604.106, 608.823] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 80.42% complete, ETA 00:07:31
# Fork: 1 of 2
# Warmup Iteration   1: 641.642 ns/op
# Warmup Iteration   2: 225.974 ns/op
# Warmup Iteration   3: 160.869 ns/op
Iteration   1: 160.156 ns/op
Iteration   2: 160.976 ns/op
Iteration   3: 160.066 ns/op
Iteration   4: 161.816 ns/op
Iteration   5: 160.196 ns/op
Iteration   6: 160.612 ns/op
Iteration   7: 160.038 ns/op
Iteration   8: 160.072 ns/op
Iteration   9: 160.063 ns/op
Iteration  10: 160.654 ns/op

# Run progress: 80.49% complete, ETA 00:07:29
# Fork: 2 of 2
# Warmup Iteration   1: 761.808 ns/op
# Warmup Iteration   2: 222.994 ns/op
# Warmup Iteration   3: 170.426 ns/op
Iteration   1: 169.087 ns/op
Iteration   2: 171.017 ns/op
Iteration   3: 168.963 ns/op
Iteration   4: 170.898 ns/op
Iteration   5: 169.025 ns/op
Iteration   6: 170.358 ns/op
Iteration   7: 168.991 ns/op
Iteration   8: 169.007 ns/op
Iteration   9: 168.993 ns/op
Iteration  10: 170.432 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  165.071 ±(99.9%) 4.152 ns/op [Average]
  (min, avg, max) = (160.038, 165.071, 171.017), stdev = 4.781
  CI (99.9%): [160.919, 169.223] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 80.56% complete, ETA 00:07:27
# Fork: 1 of 2
# Warmup Iteration   1: 613.228 ns/op
# Warmup Iteration   2: 557.390 ns/op
# Warmup Iteration   3: 436.154 ns/op
Iteration   1: 435.107 ns/op
Iteration   2: 437.204 ns/op
Iteration   3: 434.913 ns/op
Iteration   4: 436.546 ns/op
Iteration   5: 434.376 ns/op
Iteration   6: 436.736 ns/op
Iteration   7: 434.411 ns/op
Iteration   8: 434.395 ns/op
Iteration   9: 434.466 ns/op
Iteration  10: 437.020 ns/op

# Run progress: 80.63% complete, ETA 00:07:26
# Fork: 2 of 2
# Warmup Iteration   1: 628.759 ns/op
# Warmup Iteration   2: 615.075 ns/op
# Warmup Iteration   3: 436.293 ns/op
Iteration   1: 434.837 ns/op
Iteration   2: 437.109 ns/op
Iteration   3: 434.895 ns/op
Iteration   4: 436.220 ns/op
Iteration   5: 434.328 ns/op
Iteration   6: 436.722 ns/op
Iteration   7: 434.409 ns/op
Iteration   8: 434.422 ns/op
Iteration   9: 434.317 ns/op
Iteration  10: 436.865 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  435.465 ±(99.9%) 1.005 ns/op [Average]
  (min, avg, max) = (434.317, 435.465, 437.204), stdev = 1.157
  CI (99.9%): [434.460, 436.470] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 80.69% complete, ETA 00:07:24
# Fork: 1 of 2
# Warmup Iteration   1: 240.195 ns/op
# Warmup Iteration   2: 230.688 ns/op
# Warmup Iteration   3: 161.417 ns/op
Iteration   1: 162.582 ns/op
Iteration   2: 207.213 ns/op
Iteration   3: 162.748 ns/op
Iteration   4: 225.460 ns/op
Iteration   5: 177.676 ns/op
Iteration   6: 175.249 ns/op
Iteration   7: 176.292 ns/op
Iteration   8: 176.426 ns/op
Iteration   9: 176.244 ns/op
Iteration  10: 175.762 ns/op

# Run progress: 80.76% complete, ETA 00:07:23
# Fork: 2 of 2
# Warmup Iteration   1: 267.806 ns/op
# Warmup Iteration   2: 218.888 ns/op
# Warmup Iteration   3: 161.077 ns/op
Iteration   1: 162.628 ns/op
Iteration   2: 166.443 ns/op
Iteration   3: 162.677 ns/op
Iteration   4: 183.106 ns/op
Iteration   5: 177.080 ns/op
Iteration   6: 175.022 ns/op
Iteration   7: 176.403 ns/op
Iteration   8: 176.365 ns/op
Iteration   9: 176.438 ns/op
Iteration  10: 175.209 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  177.351 ±(99.9%) 12.979 ns/op [Average]
  (min, avg, max) = (162.582, 177.351, 225.460), stdev = 14.947
  CI (99.9%): [164.372, 190.330] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 80.83% complete, ETA 00:07:21
# Fork: 1 of 2
# Warmup Iteration   1: 19.845 ns/op
# Warmup Iteration   2: 21.144 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.293 ns/op
Iteration   3: 17.031 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.375 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.005 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.971 ns/op

# Run progress: 80.90% complete, ETA 00:07:19
# Fork: 2 of 2
# Warmup Iteration   1: 19.433 ns/op
# Warmup Iteration   2: 22.986 ns/op
# Warmup Iteration   3: 15.022 ns/op
Iteration   1: 17.058 ns/op
Iteration   2: 15.255 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.029 ns/op
Iteration   5: 17.098 ns/op
Iteration   6: 15.379 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.018 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.969 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.969, 16.289, 17.107), stdev = 0.951
  CI (99.9%): [15.463, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 80.97% complete, ETA 00:07:18
# Fork: 1 of 2
# Warmup Iteration   1: 679.749 ns/op
# Warmup Iteration   2: 21168.133 ns/op
# Warmup Iteration   3: 1492.887 ns/op
Iteration   1: 17785.746 ns/op
Iteration   2: 23808.404 ns/op
Iteration   3: 21393.123 ns/op
Iteration   4: 319.161 ns/op
Iteration   5: 20312.514 ns/op
Iteration   6: 23869.914 ns/op
Iteration   7: 420.208 ns/op
Iteration   8: 303.293 ns/op
Iteration   9: 314.509 ns/op
Iteration  10: 382.527 ns/op

# Run progress: 81.04% complete, ETA 00:07:16
# Fork: 2 of 2
# Warmup Iteration   1: 653.493 ns/op
# Warmup Iteration   2: 11033.476 ns/op
# Warmup Iteration   3: 723.762 ns/op
Iteration   1: 20210.304 ns/op
Iteration   2: 2882.909 ns/op
Iteration   3: 22675.961 ns/op
Iteration   4: 308.949 ns/op
Iteration   5: 21396.321 ns/op
Iteration   6: 24529.260 ns/op
Iteration   7: 415.827 ns/op
Iteration   8: 307.294 ns/op
Iteration   9: 322.260 ns/op
Iteration  10: 383.235 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10117.086 ±(99.9%) 9486.846 ns/op [Average]
  (min, avg, max) = (303.293, 10117.086, 24529.260), stdev = 10925.066
  CI (99.9%): [630.240, 19603.932] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 81.11% complete, ETA 00:07:15
# Fork: 1 of 2
# Warmup Iteration   1: 569.117 ns/op
# Warmup Iteration   2: 553.438 ns/op
# Warmup Iteration   3: 469.796 ns/op
Iteration   1: 410.681 ns/op
Iteration   2: 441.652 ns/op
Iteration   3: 422.015 ns/op
Iteration   4: 444.920 ns/op
Iteration   5: 413.469 ns/op
Iteration   6: 450.483 ns/op
Iteration   7: 419.186 ns/op
Iteration   8: 407.228 ns/op
Iteration   9: 409.330 ns/op
Iteration  10: 469.234 ns/op

# Run progress: 81.18% complete, ETA 00:07:13
# Fork: 2 of 2
# Warmup Iteration   1: 581.224 ns/op
# Warmup Iteration   2: 520.361 ns/op
# Warmup Iteration   3: 469.720 ns/op
Iteration   1: 409.719 ns/op
Iteration   2: 442.073 ns/op
Iteration   3: 412.954 ns/op
Iteration   4: 444.504 ns/op
Iteration   5: 413.324 ns/op
Iteration   6: 450.280 ns/op
Iteration   7: 419.031 ns/op
Iteration   8: 408.228 ns/op
Iteration   9: 409.559 ns/op
Iteration  10: 469.265 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  428.357 ±(99.9%) 18.190 ns/op [Average]
  (min, avg, max) = (407.228, 428.357, 469.265), stdev = 20.948
  CI (99.9%): [410.166, 446.547] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 81.25% complete, ETA 00:07:11
# Fork: 1 of 2
# Warmup Iteration   1: 3945.674 ns/op
# Warmup Iteration   2: 990.115 ns/op
# Warmup Iteration   3: 719.094 ns/op
Iteration   1: 994.252 ns/op
Iteration   2: 432.202 ns/op
Iteration   3: 349.337 ns/op
Iteration   4: 1289.382 ns/op
Iteration   5: 359.858 ns/op
Iteration   6: 9206.226 ns/op
Iteration   7: 343.832 ns/op
Iteration   8: 465.542 ns/op
Iteration   9: 380.268 ns/op
Iteration  10: 386.731 ns/op

# Run progress: 81.32% complete, ETA 00:07:10
# Fork: 2 of 2
# Warmup Iteration   1: 7604.980 ns/op
# Warmup Iteration   2: 1166.887 ns/op
# Warmup Iteration   3: 732.684 ns/op
Iteration   1: 904.374 ns/op
Iteration   2: 432.796 ns/op
Iteration   3: 354.367 ns/op
Iteration   4: 1353.646 ns/op
Iteration   5: 368.219 ns/op
Iteration   6: 9244.892 ns/op
Iteration   7: 341.444 ns/op
Iteration   8: 464.180 ns/op
Iteration   9: 357.298 ns/op
Iteration  10: 386.616 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1420.773 ±(99.9%) 2334.103 ns/op [Average]
  (min, avg, max) = (341.444, 1420.773, 9244.892), stdev = 2687.956
  CI (99.9%): [≈ 0, 3754.876] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 81.39% complete, ETA 00:07:08
# Fork: 1 of 2
# Warmup Iteration   1: 519.773 ns/op
# Warmup Iteration   2: 2408.414 ns/op
# Warmup Iteration   3: 597.735 ns/op
Iteration   1: 719.406 ns/op
Iteration   2: 372.806 ns/op
Iteration   3: 353.162 ns/op
Iteration   4: 352.968 ns/op
Iteration   5: 329.753 ns/op
Iteration   6: 360.339 ns/op
Iteration   7: 350.264 ns/op
Iteration   8: 333.534 ns/op
Iteration   9: 316.000 ns/op
Iteration  10: 381.182 ns/op

# Run progress: 81.46% complete, ETA 00:07:07
# Fork: 2 of 2
# Warmup Iteration   1: 574.332 ns/op
# Warmup Iteration   2: 30824.865 ns/op
# Warmup Iteration   3: 586.844 ns/op
Iteration   1: 1171.391 ns/op
Iteration   2: 369.497 ns/op
Iteration   3: 349.195 ns/op
Iteration   4: 346.144 ns/op
Iteration   5: 326.536 ns/op
Iteration   6: 356.149 ns/op
Iteration   7: 344.585 ns/op
Iteration   8: 330.518 ns/op
Iteration   9: 313.958 ns/op
Iteration  10: 376.719 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  407.705 ±(99.9%) 172.687 ns/op [Average]
  (min, avg, max) = (313.958, 407.705, 1171.391), stdev = 198.866
  CI (99.9%): [235.019, 580.392] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 81.53% complete, ETA 00:07:05
# Fork: 1 of 2
# Warmup Iteration   1: 3355.649 ns/op
# Warmup Iteration   2: 2335.101 ns/op
# Warmup Iteration   3: 1715.642 ns/op
Iteration   1: 1602.537 ns/op
Iteration   2: 1677.258 ns/op
Iteration   3: 1604.104 ns/op
Iteration   4: 1694.242 ns/op
Iteration   5: 1645.961 ns/op
Iteration   6: 1681.643 ns/op
Iteration   7: 1639.587 ns/op
Iteration   8: 1631.166 ns/op
Iteration   9: 1626.596 ns/op
Iteration  10: 1728.293 ns/op

# Run progress: 81.60% complete, ETA 00:07:03
# Fork: 2 of 2
# Warmup Iteration   1: 3046.901 ns/op
# Warmup Iteration   2: 2039.617 ns/op
# Warmup Iteration   3: 1681.400 ns/op
Iteration   1: 1575.401 ns/op
Iteration   2: 1643.148 ns/op
Iteration   3: 1572.784 ns/op
Iteration   4: 1649.036 ns/op
Iteration   5: 1612.047 ns/op
Iteration   6: 1647.694 ns/op
Iteration   7: 1606.822 ns/op
Iteration   8: 1603.049 ns/op
Iteration   9: 1592.460 ns/op
Iteration  10: 1695.563 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1636.470 ±(99.9%) 36.751 ns/op [Average]
  (min, avg, max) = (1572.784, 1636.470, 1728.293), stdev = 42.323
  CI (99.9%): [1599.718, 1673.221] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 81.67% complete, ETA 00:07:02
# Fork: 1 of 2
# Warmup Iteration   1: 19.706 ns/op
# Warmup Iteration   2: 22.866 ns/op
# Warmup Iteration   3: 15.020 ns/op
Iteration   1: 17.081 ns/op
Iteration   2: 15.285 ns/op
Iteration   3: 17.022 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.401 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.027 ns/op
Iteration  10: 14.983 ns/op

# Run progress: 81.74% complete, ETA 00:07:00
# Fork: 2 of 2
# Warmup Iteration   1: 19.430 ns/op
# Warmup Iteration   2: 22.508 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.068 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.009 ns/op
Iteration   4: 15.015 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.415 ns/op
Iteration   7: 17.013 ns/op
Iteration   8: 17.023 ns/op
Iteration   9: 16.995 ns/op
Iteration  10: 14.956 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.956, 16.291, 17.108), stdev = 0.949
  CI (99.9%): [15.468, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 81.81% complete, ETA 00:06:59
# Fork: 1 of 2
# Warmup Iteration   1: 488.078 ns/op
# Warmup Iteration   2: 292.386 ns/op
# Warmup Iteration   3: 204.714 ns/op
Iteration   1: 205.428 ns/op
Iteration   2: 204.828 ns/op
Iteration   3: 206.147 ns/op
Iteration   4: 206.474 ns/op
Iteration   5: 206.083 ns/op
Iteration   6: 204.655 ns/op
Iteration   7: 205.950 ns/op
Iteration   8: 205.858 ns/op
Iteration   9: 205.806 ns/op
Iteration  10: 204.975 ns/op

# Run progress: 81.88% complete, ETA 00:06:57
# Fork: 2 of 2
# Warmup Iteration   1: 597.480 ns/op
# Warmup Iteration   2: 291.352 ns/op
# Warmup Iteration   3: 215.716 ns/op
Iteration   1: 217.474 ns/op
Iteration   2: 216.930 ns/op
Iteration   3: 217.954 ns/op
Iteration   4: 215.550 ns/op
Iteration   5: 217.649 ns/op
Iteration   6: 215.733 ns/op
Iteration   7: 217.675 ns/op
Iteration   8: 218.073 ns/op
Iteration   9: 218.234 ns/op
Iteration  10: 215.747 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  211.361 ±(99.9%) 5.166 ns/op [Average]
  (min, avg, max) = (204.655, 211.361, 218.234), stdev = 5.949
  CI (99.9%): [206.195, 216.527] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 81.94% complete, ETA 00:06:55
# Fork: 1 of 2
# Warmup Iteration   1: 873.506 ns/op
# Warmup Iteration   2: 842.201 ns/op
# Warmup Iteration   3: 605.594 ns/op
Iteration   1: 604.260 ns/op
Iteration   2: 607.204 ns/op
Iteration   3: 604.675 ns/op
Iteration   4: 606.170 ns/op
Iteration   5: 603.908 ns/op
Iteration   6: 605.478 ns/op
Iteration   7: 604.204 ns/op
Iteration   8: 604.752 ns/op
Iteration   9: 604.394 ns/op
Iteration  10: 605.606 ns/op

# Run progress: 82.01% complete, ETA 00:06:54
# Fork: 2 of 2
# Warmup Iteration   1: 858.163 ns/op
# Warmup Iteration   2: 776.851 ns/op
# Warmup Iteration   3: 606.416 ns/op
Iteration   1: 604.257 ns/op
Iteration   2: 607.198 ns/op
Iteration   3: 604.359 ns/op
Iteration   4: 605.865 ns/op
Iteration   5: 604.138 ns/op
Iteration   6: 605.391 ns/op
Iteration   7: 604.223 ns/op
Iteration   8: 604.618 ns/op
Iteration   9: 604.649 ns/op
Iteration  10: 609.615 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  605.248 ±(99.9%) 1.230 ns/op [Average]
  (min, avg, max) = (603.908, 605.248, 609.615), stdev = 1.416
  CI (99.9%): [604.018, 606.478] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 82.08% complete, ETA 00:06:52
# Fork: 1 of 2
# Warmup Iteration   1: 547.673 ns/op
# Warmup Iteration   2: 220.710 ns/op
# Warmup Iteration   3: 168.904 ns/op
Iteration   1: 167.792 ns/op
Iteration   2: 168.812 ns/op
Iteration   3: 167.803 ns/op
Iteration   4: 169.944 ns/op
Iteration   5: 167.767 ns/op
Iteration   6: 168.639 ns/op
Iteration   7: 167.744 ns/op
Iteration   8: 167.820 ns/op
Iteration   9: 167.822 ns/op
Iteration  10: 168.825 ns/op

# Run progress: 82.15% complete, ETA 00:06:51
# Fork: 2 of 2
# Warmup Iteration   1: 592.977 ns/op
# Warmup Iteration   2: 208.284 ns/op
# Warmup Iteration   3: 160.076 ns/op
Iteration   1: 159.478 ns/op
Iteration   2: 160.257 ns/op
Iteration   3: 159.353 ns/op
Iteration   4: 161.290 ns/op
Iteration   5: 159.429 ns/op
Iteration   6: 159.940 ns/op
Iteration   7: 159.333 ns/op
Iteration   8: 159.371 ns/op
Iteration   9: 159.312 ns/op
Iteration  10: 159.884 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  164.031 ±(99.9%) 3.844 ns/op [Average]
  (min, avg, max) = (159.312, 164.031, 169.944), stdev = 4.427
  CI (99.9%): [160.186, 167.875] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 82.22% complete, ETA 00:06:49
# Fork: 1 of 2
# Warmup Iteration   1: 617.905 ns/op
# Warmup Iteration   2: 561.936 ns/op
# Warmup Iteration   3: 436.112 ns/op
Iteration   1: 434.823 ns/op
Iteration   2: 437.003 ns/op
Iteration   3: 434.876 ns/op
Iteration   4: 435.886 ns/op
Iteration   5: 434.273 ns/op
Iteration   6: 436.933 ns/op
Iteration   7: 434.359 ns/op
Iteration   8: 434.350 ns/op
Iteration   9: 434.280 ns/op
Iteration  10: 436.612 ns/op

# Run progress: 82.29% complete, ETA 00:06:47
# Fork: 2 of 2
# Warmup Iteration   1: 617.259 ns/op
# Warmup Iteration   2: 562.128 ns/op
# Warmup Iteration   3: 436.159 ns/op
Iteration   1: 434.751 ns/op
Iteration   2: 437.150 ns/op
Iteration   3: 434.979 ns/op
Iteration   4: 436.112 ns/op
Iteration   5: 434.183 ns/op
Iteration   6: 436.718 ns/op
Iteration   7: 434.389 ns/op
Iteration   8: 434.343 ns/op
Iteration   9: 434.478 ns/op
Iteration  10: 436.801 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  435.365 ±(99.9%) 0.981 ns/op [Average]
  (min, avg, max) = (434.183, 435.365, 437.150), stdev = 1.130
  CI (99.9%): [434.384, 436.346] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 82.36% complete, ETA 00:06:46
# Fork: 1 of 2
# Warmup Iteration   1: 240.392 ns/op
# Warmup Iteration   2: 232.460 ns/op
# Warmup Iteration   3: 161.310 ns/op
Iteration   1: 162.491 ns/op
Iteration   2: 165.648 ns/op
Iteration   3: 162.784 ns/op
Iteration   4: 183.750 ns/op
Iteration   5: 177.699 ns/op
Iteration   6: 175.265 ns/op
Iteration   7: 176.283 ns/op
Iteration   8: 176.571 ns/op
Iteration   9: 176.276 ns/op
Iteration  10: 175.747 ns/op

# Run progress: 82.43% complete, ETA 00:06:44
# Fork: 2 of 2
# Warmup Iteration   1: 246.662 ns/op
# Warmup Iteration   2: 229.050 ns/op
# Warmup Iteration   3: 161.143 ns/op
Iteration   1: 162.690 ns/op
Iteration   2: 166.383 ns/op
Iteration   3: 162.620 ns/op
Iteration   4: 183.005 ns/op
Iteration   5: 177.083 ns/op
Iteration   6: 175.029 ns/op
Iteration   7: 176.344 ns/op
Iteration   8: 176.316 ns/op
Iteration   9: 176.490 ns/op
Iteration  10: 175.140 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  173.181 ±(99.9%) 5.877 ns/op [Average]
  (min, avg, max) = (162.491, 173.181, 183.750), stdev = 6.768
  CI (99.9%): [167.303, 179.058] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 82.50% complete, ETA 00:06:43
# Fork: 1 of 2
# Warmup Iteration   1: 19.287 ns/op
# Warmup Iteration   2: 22.914 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.269 ns/op
Iteration   3: 17.030 ns/op
Iteration   4: 15.028 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.000 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.012 ns/op
Iteration  10: 14.970 ns/op

# Run progress: 82.57% complete, ETA 00:06:41
# Fork: 2 of 2
# Warmup Iteration   1: 20.733 ns/op
# Warmup Iteration   2: 23.948 ns/op
# Warmup Iteration   3: 15.022 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.283 ns/op
Iteration   3: 17.016 ns/op
Iteration   4: 15.028 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.400 ns/op
Iteration   7: 17.021 ns/op
Iteration   8: 17.009 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.959 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.959, 16.291, 17.113), stdev = 0.949
  CI (99.9%): [15.466, 17.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 82.64% complete, ETA 00:06:39
# Fork: 1 of 2
# Warmup Iteration   1: 561.307 ns/op
# Warmup Iteration   2: 4169.462 ns/op
# Warmup Iteration   3: 207.213 ns/op
Iteration   1: 12463.306 ns/op
Iteration   2: 227.005 ns/op
Iteration   3: 212.769 ns/op
Iteration   4: 255.963 ns/op
Iteration   5: 212.413 ns/op
Iteration   6: 235.922 ns/op
Iteration   7: 239.586 ns/op
Iteration   8: 212.535 ns/op
Iteration   9: 241.914 ns/op
Iteration  10: 211.738 ns/op

# Run progress: 82.71% complete, ETA 00:06:38
# Fork: 2 of 2
# Warmup Iteration   1: 548.326 ns/op
# Warmup Iteration   2: 1516.244 ns/op
# Warmup Iteration   3: 209.722 ns/op
Iteration   1: 15797.102 ns/op
Iteration   2: 222.672 ns/op
Iteration   3: 218.294 ns/op
Iteration   4: 241.374 ns/op
Iteration   5: 218.357 ns/op
Iteration   6: 235.380 ns/op
Iteration   7: 243.275 ns/op
Iteration   8: 218.296 ns/op
Iteration   9: 248.519 ns/op
Iteration  10: 216.478 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1618.645 ±(99.9%) 3745.155 ns/op [Average]
  (min, avg, max) = (211.738, 1618.645, 15797.102), stdev = 4312.926
  CI (99.9%): [≈ 0, 5363.800] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 82.78% complete, ETA 00:06:36
# Fork: 1 of 2
# Warmup Iteration   1: 871.681 ns/op
# Warmup Iteration   2: 1169.400 ns/op
# Warmup Iteration   3: 618.428 ns/op
Iteration   1: 717.927 ns/op
Iteration   2: 693.354 ns/op
Iteration   3: 616.475 ns/op
Iteration   4: 664.220 ns/op
Iteration   5: 616.765 ns/op
Iteration   6: 689.252 ns/op
Iteration   7: 678.677 ns/op
Iteration   8: 617.028 ns/op
Iteration   9: 731.823 ns/op
Iteration  10: 618.187 ns/op

# Run progress: 82.85% complete, ETA 00:06:35
# Fork: 2 of 2
# Warmup Iteration   1: 882.361 ns/op
# Warmup Iteration   2: 2141.068 ns/op
# Warmup Iteration   3: 611.815 ns/op
Iteration   1: 710.151 ns/op
Iteration   2: 693.075 ns/op
Iteration   3: 611.741 ns/op
Iteration   4: 671.562 ns/op
Iteration   5: 611.965 ns/op
Iteration   6: 691.275 ns/op
Iteration   7: 679.881 ns/op
Iteration   8: 611.587 ns/op
Iteration   9: 731.947 ns/op
Iteration  10: 611.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  663.397 ±(99.9%) 38.652 ns/op [Average]
  (min, avg, max) = (611.056, 663.397, 731.947), stdev = 44.512
  CI (99.9%): [624.745, 702.049] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 82.92% complete, ETA 00:06:33
# Fork: 1 of 2
# Warmup Iteration   1: 636.828 ns/op
# Warmup Iteration   2: 2380.911 ns/op
# Warmup Iteration   3: 174.526 ns/op
Iteration   1: 601.092 ns/op
Iteration   2: 23111.537 ns/op
Iteration   3: 1571.200 ns/op
Iteration   4: 702.771 ns/op
Iteration   5: 178.113 ns/op
Iteration   6: 221.083 ns/op
Iteration   7: 226.919 ns/op
Iteration   8: 177.589 ns/op
Iteration   9: 187.128 ns/op
Iteration  10: 178.487 ns/op

# Run progress: 82.99% complete, ETA 00:06:31
# Fork: 2 of 2
# Warmup Iteration   1: 674.350 ns/op
# Warmup Iteration   2: 1616.976 ns/op
# Warmup Iteration   3: 174.280 ns/op
Iteration   1: 609.073 ns/op
Iteration   2: 37131.926 ns/op
Iteration   3: 357.518 ns/op
Iteration   4: 604.826 ns/op
Iteration   5: 177.610 ns/op
Iteration   6: 229.603 ns/op
Iteration   7: 235.840 ns/op
Iteration   8: 177.061 ns/op
Iteration   9: 193.720 ns/op
Iteration  10: 178.060 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3352.558 ±(99.9%) 8196.388 ns/op [Average]
  (min, avg, max) = (177.061, 3352.558, 37131.926), stdev = 9438.972
  CI (99.9%): [≈ 0, 11548.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 83.06% complete, ETA 00:06:30
# Fork: 1 of 2
# Warmup Iteration   1: 663.579 ns/op
# Warmup Iteration   2: 707.674 ns/op
# Warmup Iteration   3: 455.495 ns/op
Iteration   1: 449.556 ns/op
Iteration   2: 1036.715 ns/op
Iteration   3: 381.712 ns/op
Iteration   4: 379.072 ns/op
Iteration   5: 381.853 ns/op
Iteration   6: 381.251 ns/op
Iteration   7: 381.501 ns/op
Iteration   8: 381.821 ns/op
Iteration   9: 381.198 ns/op
Iteration  10: 383.022 ns/op

# Run progress: 83.13% complete, ETA 00:06:28
# Fork: 2 of 2
# Warmup Iteration   1: 660.647 ns/op
# Warmup Iteration   2: 1034.607 ns/op
# Warmup Iteration   3: 456.656 ns/op
Iteration   1: 450.664 ns/op
Iteration   2: 786.745 ns/op
Iteration   3: 382.334 ns/op
Iteration   4: 379.715 ns/op
Iteration   5: 382.404 ns/op
Iteration   6: 382.328 ns/op
Iteration   7: 383.552 ns/op
Iteration   8: 382.333 ns/op
Iteration   9: 382.940 ns/op
Iteration  10: 384.216 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  441.747 ±(99.9%) 145.082 ns/op [Average]
  (min, avg, max) = (379.072, 441.747, 1036.715), stdev = 167.077
  CI (99.9%): [296.664, 586.829] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 83.19% complete, ETA 00:06:27
# Fork: 1 of 2
# Warmup Iteration   1: 257.001 ns/op
# Warmup Iteration   2: 1629.717 ns/op
# Warmup Iteration   3: 147.647 ns/op
Iteration   1: 259.701 ns/op
Iteration   2: 15139.003 ns/op
Iteration   3: 162.565 ns/op
Iteration   4: 367.193 ns/op
Iteration   5: 183.775 ns/op
Iteration   6: 373.994 ns/op
Iteration   7: 374.893 ns/op
Iteration   8: 183.186 ns/op
Iteration   9: 309.633 ns/op
Iteration  10: 181.167 ns/op

# Run progress: 83.26% complete, ETA 00:06:25
# Fork: 2 of 2
# Warmup Iteration   1: 237.485 ns/op
# Warmup Iteration   2: 11750.507 ns/op
# Warmup Iteration   3: 147.588 ns/op
Iteration   1: 263.261 ns/op
Iteration   2: 906.108 ns/op
Iteration   3: 161.067 ns/op
Iteration   4: 372.728 ns/op
Iteration   5: 182.752 ns/op
Iteration   6: 379.662 ns/op
Iteration   7: 378.171 ns/op
Iteration   8: 182.494 ns/op
Iteration   9: 308.120 ns/op
Iteration  10: 180.967 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1042.522 ±(99.9%) 2884.790 ns/op [Average]
  (min, avg, max) = (161.067, 1042.522, 15139.003), stdev = 3322.129
  CI (99.9%): [≈ 0, 3927.312] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 83.33% complete, ETA 00:06:23
# Fork: 1 of 2
# Warmup Iteration   1: 19.471 ns/op
# Warmup Iteration   2: 22.860 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.243 ns/op
Iteration   3: 17.010 ns/op
Iteration   4: 15.032 ns/op
Iteration   5: 17.099 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.004 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.024 ns/op
Iteration  10: 14.971 ns/op

# Run progress: 83.40% complete, ETA 00:06:22
# Fork: 2 of 2
# Warmup Iteration   1: 19.630 ns/op
# Warmup Iteration   2: 21.042 ns/op
# Warmup Iteration   3: 15.048 ns/op
Iteration   1: 17.086 ns/op
Iteration   2: 15.277 ns/op
Iteration   3: 17.022 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.100 ns/op
Iteration   6: 15.397 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.967 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.967, 16.290, 17.100), stdev = 0.952
  CI (99.9%): [15.463, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 83.47% complete, ETA 00:06:20
# Fork: 1 of 2
# Warmup Iteration   1: 611.977 ns/op
# Warmup Iteration   2: 394.287 ns/op
# Warmup Iteration   3: 280.184 ns/op
Iteration   1: 281.165 ns/op
Iteration   2: 279.731 ns/op
Iteration   3: 280.963 ns/op
Iteration   4: 280.333 ns/op
Iteration   5: 280.978 ns/op
Iteration   6: 280.292 ns/op
Iteration   7: 280.857 ns/op
Iteration   8: 281.245 ns/op
Iteration   9: 280.920 ns/op
Iteration  10: 279.809 ns/op

# Run progress: 83.54% complete, ETA 00:06:19
# Fork: 2 of 2
# Warmup Iteration   1: 582.841 ns/op
# Warmup Iteration   2: 379.575 ns/op
# Warmup Iteration   3: 283.088 ns/op
Iteration   1: 283.963 ns/op
Iteration   2: 283.041 ns/op
Iteration   3: 284.557 ns/op
Iteration   4: 282.844 ns/op
Iteration   5: 284.402 ns/op
Iteration   6: 283.992 ns/op
Iteration   7: 283.596 ns/op
Iteration   8: 284.347 ns/op
Iteration   9: 283.820 ns/op
Iteration  10: 283.025 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  282.194 ±(99.9%) 1.479 ns/op [Average]
  (min, avg, max) = (279.731, 282.194, 284.557), stdev = 1.703
  CI (99.9%): [280.715, 283.673] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 83.61% complete, ETA 00:06:17
# Fork: 1 of 2
# Warmup Iteration   1: 574.152 ns/op
# Warmup Iteration   2: 527.809 ns/op
# Warmup Iteration   3: 410.944 ns/op
Iteration   1: 408.464 ns/op
Iteration   2: 412.243 ns/op
Iteration   3: 410.796 ns/op
Iteration   4: 413.453 ns/op
Iteration   5: 409.335 ns/op
Iteration   6: 412.015 ns/op
Iteration   7: 410.618 ns/op
Iteration   8: 409.610 ns/op
Iteration   9: 410.333 ns/op
Iteration  10: 412.406 ns/op

# Run progress: 83.68% complete, ETA 00:06:15
# Fork: 2 of 2
# Warmup Iteration   1: 583.484 ns/op
# Warmup Iteration   2: 553.770 ns/op
# Warmup Iteration   3: 411.785 ns/op
Iteration   1: 407.893 ns/op
Iteration   2: 411.460 ns/op
Iteration   3: 410.117 ns/op
Iteration   4: 413.789 ns/op
Iteration   5: 409.925 ns/op
Iteration   6: 413.133 ns/op
Iteration   7: 410.611 ns/op
Iteration   8: 410.590 ns/op
Iteration   9: 410.304 ns/op
Iteration  10: 411.480 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  410.929 ±(99.9%) 1.372 ns/op [Average]
  (min, avg, max) = (407.893, 410.929, 413.789), stdev = 1.580
  CI (99.9%): [409.557, 412.300] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 83.75% complete, ETA 00:06:14
# Fork: 1 of 2
# Warmup Iteration   1: 7346.381 ns/op
# Warmup Iteration   2: 609.841 ns/op
# Warmup Iteration   3: 424.617 ns/op
Iteration   1: 423.184 ns/op
Iteration   2: 424.233 ns/op
Iteration   3: 423.302 ns/op
Iteration   4: 434.258 ns/op
Iteration   5: 423.562 ns/op
Iteration   6: 424.271 ns/op
Iteration   7: 423.345 ns/op
Iteration   8: 423.017 ns/op
Iteration   9: 423.518 ns/op
Iteration  10: 424.390 ns/op

# Run progress: 83.82% complete, ETA 00:06:12
# Fork: 2 of 2
# Warmup Iteration   1: 7433.851 ns/op
# Warmup Iteration   2: 543.689 ns/op
# Warmup Iteration   3: 424.760 ns/op
Iteration   1: 423.664 ns/op
Iteration   2: 424.573 ns/op
Iteration   3: 423.579 ns/op
Iteration   4: 434.360 ns/op
Iteration   5: 423.711 ns/op
Iteration   6: 424.446 ns/op
Iteration   7: 423.554 ns/op
Iteration   8: 423.465 ns/op
Iteration   9: 423.468 ns/op
Iteration  10: 424.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  424.824 ±(99.9%) 2.847 ns/op [Average]
  (min, avg, max) = (423.017, 424.824, 434.360), stdev = 3.279
  CI (99.9%): [421.977, 427.671] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 83.89% complete, ETA 00:06:11
# Fork: 1 of 2
# Warmup Iteration   1: 593.186 ns/op
# Warmup Iteration   2: 429.440 ns/op
# Warmup Iteration   3: 330.847 ns/op
Iteration   1: 332.571 ns/op
Iteration   2: 332.407 ns/op
Iteration   3: 335.161 ns/op
Iteration   4: 332.536 ns/op
Iteration   5: 334.805 ns/op
Iteration   6: 331.290 ns/op
Iteration   7: 334.090 ns/op
Iteration   8: 332.652 ns/op
Iteration   9: 333.683 ns/op
Iteration  10: 330.882 ns/op

# Run progress: 83.96% complete, ETA 00:06:09
# Fork: 2 of 2
# Warmup Iteration   1: 528.337 ns/op
# Warmup Iteration   2: 432.621 ns/op
# Warmup Iteration   3: 332.088 ns/op
Iteration   1: 329.888 ns/op
Iteration   2: 332.354 ns/op
Iteration   3: 330.510 ns/op
Iteration   4: 332.278 ns/op
Iteration   5: 329.872 ns/op
Iteration   6: 333.437 ns/op
Iteration   7: 331.219 ns/op
Iteration   8: 330.768 ns/op
Iteration   9: 331.190 ns/op
Iteration  10: 333.048 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  332.232 ±(99.9%) 1.326 ns/op [Average]
  (min, avg, max) = (329.872, 332.232, 335.161), stdev = 1.527
  CI (99.9%): [330.906, 333.558] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 84.03% complete, ETA 00:06:07
# Fork: 1 of 2
# Warmup Iteration   1: 3164.114 ns/op
# Warmup Iteration   2: 2197.906 ns/op
# Warmup Iteration   3: 1599.012 ns/op
Iteration   1: 1603.664 ns/op
Iteration   2: 1594.983 ns/op
Iteration   3: 1598.427 ns/op
Iteration   4: 1622.941 ns/op
Iteration   5: 1615.497 ns/op
Iteration   6: 1612.910 ns/op
Iteration   7: 1615.774 ns/op
Iteration   8: 1614.195 ns/op
Iteration   9: 1619.238 ns/op
Iteration  10: 1616.073 ns/op

# Run progress: 84.10% complete, ETA 00:06:06
# Fork: 2 of 2
# Warmup Iteration   1: 2846.267 ns/op
# Warmup Iteration   2: 1983.386 ns/op
# Warmup Iteration   3: 1575.350 ns/op
Iteration   1: 1577.214 ns/op
Iteration   2: 1569.941 ns/op
Iteration   3: 1577.896 ns/op
Iteration   4: 1592.626 ns/op
Iteration   5: 1588.506 ns/op
Iteration   6: 1586.027 ns/op
Iteration   7: 1591.860 ns/op
Iteration   8: 1586.703 ns/op
Iteration   9: 1590.626 ns/op
Iteration  10: 1585.604 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1598.035 ±(99.9%) 13.812 ns/op [Average]
  (min, avg, max) = (1569.941, 1598.035, 1622.941), stdev = 15.906
  CI (99.9%): [1584.223, 1611.847] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 84.17% complete, ETA 00:06:04
# Fork: 1 of 2
# Warmup Iteration   1: 19.818 ns/op
# Warmup Iteration   2: 21.261 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.274 ns/op
Iteration   3: 17.028 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.386 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.029 ns/op
Iteration  10: 14.973 ns/op

# Run progress: 84.24% complete, ETA 00:06:03
# Fork: 2 of 2
# Warmup Iteration   1: 19.296 ns/op
# Warmup Iteration   2: 21.112 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.066 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.016 ns/op
Iteration   5: 17.111 ns/op
Iteration   6: 15.380 ns/op
Iteration   7: 17.012 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.971, 16.291, 17.111), stdev = 0.954
  CI (99.9%): [15.463, 17.120] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 84.31% complete, ETA 00:06:01
# Fork: 1 of 2
# Warmup Iteration   1: 401.911 ns/op
# Warmup Iteration   2: 260.345 ns/op
# Warmup Iteration   3: 179.140 ns/op
Iteration   1: 181.594 ns/op
Iteration   2: 178.395 ns/op
Iteration   3: 181.126 ns/op
Iteration   4: 180.629 ns/op
Iteration   5: 181.108 ns/op
Iteration   6: 178.728 ns/op
Iteration   7: 181.152 ns/op
Iteration   8: 181.155 ns/op
Iteration   9: 181.201 ns/op
Iteration  10: 179.810 ns/op

# Run progress: 84.38% complete, ETA 00:05:59
# Fork: 2 of 2
# Warmup Iteration   1: 389.200 ns/op
# Warmup Iteration   2: 251.062 ns/op
# Warmup Iteration   3: 184.959 ns/op
Iteration   1: 186.644 ns/op
Iteration   2: 184.986 ns/op
Iteration   3: 187.037 ns/op
Iteration   4: 186.379 ns/op
Iteration   5: 186.751 ns/op
Iteration   6: 184.960 ns/op
Iteration   7: 186.745 ns/op
Iteration   8: 186.865 ns/op
Iteration   9: 186.852 ns/op
Iteration  10: 184.944 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  183.353 ±(99.9%) 2.690 ns/op [Average]
  (min, avg, max) = (178.395, 183.353, 187.037), stdev = 3.098
  CI (99.9%): [180.663, 186.043] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 84.44% complete, ETA 00:05:58
# Fork: 1 of 2
# Warmup Iteration   1: 333.205 ns/op
# Warmup Iteration   2: 311.304 ns/op
# Warmup Iteration   3: 236.340 ns/op
Iteration   1: 234.818 ns/op
Iteration   2: 236.052 ns/op
Iteration   3: 234.926 ns/op
Iteration   4: 236.709 ns/op
Iteration   5: 234.824 ns/op
Iteration   6: 236.092 ns/op
Iteration   7: 234.841 ns/op
Iteration   8: 234.964 ns/op
Iteration   9: 234.998 ns/op
Iteration  10: 235.914 ns/op

# Run progress: 84.51% complete, ETA 00:05:56
# Fork: 2 of 2
# Warmup Iteration   1: 337.258 ns/op
# Warmup Iteration   2: 301.198 ns/op
# Warmup Iteration   3: 236.205 ns/op
Iteration   1: 234.913 ns/op
Iteration   2: 236.116 ns/op
Iteration   3: 234.937 ns/op
Iteration   4: 236.713 ns/op
Iteration   5: 234.763 ns/op
Iteration   6: 236.155 ns/op
Iteration   7: 234.941 ns/op
Iteration   8: 234.896 ns/op
Iteration   9: 234.899 ns/op
Iteration  10: 235.920 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  235.420 ±(99.9%) 0.600 ns/op [Average]
  (min, avg, max) = (234.763, 235.420, 236.713), stdev = 0.691
  CI (99.9%): [234.819, 236.020] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 84.58% complete, ETA 00:05:55
# Fork: 1 of 2
# Warmup Iteration   1: 4226.011 ns/op
# Warmup Iteration   2: 410.602 ns/op
# Warmup Iteration   3: 281.198 ns/op
Iteration   1: 279.773 ns/op
Iteration   2: 281.526 ns/op
Iteration   3: 279.587 ns/op
Iteration   4: 297.888 ns/op
Iteration   5: 280.375 ns/op
Iteration   6: 281.215 ns/op
Iteration   7: 279.647 ns/op
Iteration   8: 279.605 ns/op
Iteration   9: 279.598 ns/op
Iteration  10: 281.151 ns/op

# Run progress: 84.65% complete, ETA 00:05:53
# Fork: 2 of 2
# Warmup Iteration   1: 2053.464 ns/op
# Warmup Iteration   2: 347.880 ns/op
# Warmup Iteration   3: 271.321 ns/op
Iteration   1: 269.973 ns/op
Iteration   2: 271.766 ns/op
Iteration   3: 269.919 ns/op
Iteration   4: 275.193 ns/op
Iteration   5: 270.055 ns/op
Iteration   6: 271.322 ns/op
Iteration   7: 269.909 ns/op
Iteration   8: 269.962 ns/op
Iteration   9: 269.861 ns/op
Iteration  10: 271.587 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  276.496 ±(99.9%) 6.055 ns/op [Average]
  (min, avg, max) = (269.861, 276.496, 297.888), stdev = 6.973
  CI (99.9%): [270.441, 282.550] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 84.72% complete, ETA 00:05:51
# Fork: 1 of 2
# Warmup Iteration   1: 256.663 ns/op
# Warmup Iteration   2: 226.383 ns/op
# Warmup Iteration   3: 176.924 ns/op
Iteration   1: 175.668 ns/op
Iteration   2: 176.857 ns/op
Iteration   3: 176.082 ns/op
Iteration   4: 176.789 ns/op
Iteration   5: 175.618 ns/op
Iteration   6: 177.192 ns/op
Iteration   7: 175.859 ns/op
Iteration   8: 175.965 ns/op
Iteration   9: 176.138 ns/op
Iteration  10: 176.742 ns/op

# Run progress: 84.79% complete, ETA 00:05:50
# Fork: 2 of 2
# Warmup Iteration   1: 281.011 ns/op
# Warmup Iteration   2: 227.353 ns/op
# Warmup Iteration   3: 176.885 ns/op
Iteration   1: 175.511 ns/op
Iteration   2: 176.940 ns/op
Iteration   3: 175.729 ns/op
Iteration   4: 177.347 ns/op
Iteration   5: 175.581 ns/op
Iteration   6: 177.235 ns/op
Iteration   7: 175.845 ns/op
Iteration   8: 176.189 ns/op
Iteration   9: 176.665 ns/op
Iteration  10: 176.982 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  176.347 ±(99.9%) 0.542 ns/op [Average]
  (min, avg, max) = (175.511, 176.347, 177.347), stdev = 0.624
  CI (99.9%): [175.804, 176.889] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 84.86% complete, ETA 00:05:48
# Fork: 1 of 2
# Warmup Iteration   1: 511.955 ns/op
# Warmup Iteration   2: 342.978 ns/op
# Warmup Iteration   3: 245.694 ns/op
Iteration   1: 250.368 ns/op
Iteration   2: 245.999 ns/op
Iteration   3: 248.392 ns/op
Iteration   4: 267.150 ns/op
Iteration   5: 264.543 ns/op
Iteration   6: 263.744 ns/op
Iteration   7: 264.601 ns/op
Iteration   8: 264.321 ns/op
Iteration   9: 264.439 ns/op
Iteration  10: 263.716 ns/op

# Run progress: 84.93% complete, ETA 00:05:47
# Fork: 2 of 2
# Warmup Iteration   1: 498.416 ns/op
# Warmup Iteration   2: 341.789 ns/op
# Warmup Iteration   3: 242.479 ns/op
Iteration   1: 247.150 ns/op
Iteration   2: 242.786 ns/op
Iteration   3: 245.453 ns/op
Iteration   4: 274.193 ns/op
Iteration   5: 261.935 ns/op
Iteration   6: 260.681 ns/op
Iteration   7: 261.771 ns/op
Iteration   8: 261.974 ns/op
Iteration   9: 261.822 ns/op
Iteration  10: 260.518 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  258.778 ±(99.9%) 7.565 ns/op [Average]
  (min, avg, max) = (242.786, 258.778, 274.193), stdev = 8.712
  CI (99.9%): [251.213, 266.343] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 85.00% complete, ETA 00:05:45
# Fork: 1 of 2
# Warmup Iteration   1: 19.561 ns/op
# Warmup Iteration   2: 23.341 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.061 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.378 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.010 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 14.966 ns/op

# Run progress: 85.07% complete, ETA 00:05:43
# Fork: 2 of 2
# Warmup Iteration   1: 19.271 ns/op
# Warmup Iteration   2: 22.411 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.222 ns/op
Iteration   3: 17.007 ns/op
Iteration   4: 15.014 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.379 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.034 ns/op
Iteration   9: 17.021 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.286 ±(99.9%) 0.831 ns/op [Average]
  (min, avg, max) = (14.966, 16.286, 17.106), stdev = 0.957
  CI (99.9%): [15.455, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 85.14% complete, ETA 00:05:42
# Fork: 1 of 2
# Warmup Iteration   1: 1298.579 ns/op
# Warmup Iteration   2: 20997.058 ns/op
# Warmup Iteration   3: 1706.453 ns/op
Iteration   1: 2671.182 ns/op
Iteration   2: 19487.170 ns/op
Iteration   3: 16804.542 ns/op
Iteration   4: 19920.757 ns/op
Iteration   5: 310.611 ns/op
Iteration   6: 20970.872 ns/op
Iteration   7: 290.292 ns/op
Iteration   8: 512.030 ns/op
Iteration   9: 312.260 ns/op
Iteration  10: 391.020 ns/op

# Run progress: 85.21% complete, ETA 00:05:40
# Fork: 2 of 2
# Warmup Iteration   1: 1161.116 ns/op
# Warmup Iteration   2: 2708.316 ns/op
# Warmup Iteration   3: 1118.733 ns/op
Iteration   1: 18925.740 ns/op
Iteration   2: 22260.283 ns/op
Iteration   3: 17878.991 ns/op
Iteration   4: 18902.452 ns/op
Iteration   5: 297.240 ns/op
Iteration   6: 20888.825 ns/op
Iteration   7: 297.063 ns/op
Iteration   8: 504.565 ns/op
Iteration   9: 315.539 ns/op
Iteration  10: 388.350 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9116.489 ±(99.9%) 8480.239 ns/op [Average]
  (min, avg, max) = (290.292, 9116.489, 22260.283), stdev = 9765.856
  CI (99.9%): [636.250, 17596.728] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 85.28% complete, ETA 00:05:39
# Fork: 1 of 2
# Warmup Iteration   1: 630.356 ns/op
# Warmup Iteration   2: 610.235 ns/op
# Warmup Iteration   3: 396.736 ns/op
Iteration   1: 439.883 ns/op
Iteration   2: 445.341 ns/op
Iteration   3: 434.189 ns/op
Iteration   4: 388.011 ns/op
Iteration   5: 430.179 ns/op
Iteration   6: 396.250 ns/op
Iteration   7: 434.057 ns/op
Iteration   8: 421.743 ns/op
Iteration   9: 483.705 ns/op
Iteration  10: 397.275 ns/op

# Run progress: 85.35% complete, ETA 00:05:37
# Fork: 2 of 2
# Warmup Iteration   1: 676.323 ns/op
# Warmup Iteration   2: 651.427 ns/op
# Warmup Iteration   3: 396.792 ns/op
Iteration   1: 441.057 ns/op
Iteration   2: 447.901 ns/op
Iteration   3: 436.845 ns/op
Iteration   4: 389.672 ns/op
Iteration   5: 430.981 ns/op
Iteration   6: 396.814 ns/op
Iteration   7: 435.972 ns/op
Iteration   8: 423.497 ns/op
Iteration   9: 484.575 ns/op
Iteration  10: 396.908 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  427.743 ±(99.9%) 24.038 ns/op [Average]
  (min, avg, max) = (388.011, 427.743, 484.575), stdev = 27.683
  CI (99.9%): [403.704, 451.781] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 85.42% complete, ETA 00:05:35
# Fork: 1 of 2
# Warmup Iteration   1: 11151.941 ns/op
# Warmup Iteration   2: 1975.978 ns/op
# Warmup Iteration   3: 610.259 ns/op
Iteration   1: 570.613 ns/op
Iteration   2: 1167.404 ns/op
Iteration   3: 320.229 ns/op
Iteration   4: 1092.359 ns/op
Iteration   5: 8645.608 ns/op
Iteration   6: 387.229 ns/op
Iteration   7: 348.269 ns/op
Iteration   8: 351.227 ns/op
Iteration   9: 379.609 ns/op
Iteration  10: 406.951 ns/op

# Run progress: 85.49% complete, ETA 00:05:34
# Fork: 2 of 2
# Warmup Iteration   1: 10151.197 ns/op
# Warmup Iteration   2: 6012.923 ns/op
# Warmup Iteration   3: 566.567 ns/op
Iteration   1: 1677.044 ns/op
Iteration   2: 1121.105 ns/op
Iteration   3: 320.475 ns/op
Iteration   4: 1441.917 ns/op
Iteration   5: 8614.997 ns/op
Iteration   6: 376.671 ns/op
Iteration   7: 344.837 ns/op
Iteration   8: 350.885 ns/op
Iteration   9: 389.074 ns/op
Iteration  10: 408.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1435.774 ±(99.9%) 2167.488 ns/op [Average]
  (min, avg, max) = (320.229, 1435.774, 8645.608), stdev = 2496.082
  CI (99.9%): [≈ 0, 3603.261] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 85.56% complete, ETA 00:05:32
# Fork: 1 of 2
# Warmup Iteration   1: 637.844 ns/op
# Warmup Iteration   2: 2106.813 ns/op
# Warmup Iteration   3: 472.272 ns/op
Iteration   1: 348.299 ns/op
Iteration   2: 360.152 ns/op
Iteration   3: 332.092 ns/op
Iteration   4: 1238.277 ns/op
Iteration   5: 337.453 ns/op
Iteration   6: 331.064 ns/op
Iteration   7: 335.902 ns/op
Iteration   8: 327.929 ns/op
Iteration   9: 372.829 ns/op
Iteration  10: 317.942 ns/op

# Run progress: 85.63% complete, ETA 00:05:31
# Fork: 2 of 2
# Warmup Iteration   1: 504.639 ns/op
# Warmup Iteration   2: 8058.341 ns/op
# Warmup Iteration   3: 696.684 ns/op
Iteration   1: 352.495 ns/op
Iteration   2: 364.709 ns/op
Iteration   3: 334.983 ns/op
Iteration   4: 1033.571 ns/op
Iteration   5: 334.033 ns/op
Iteration   6: 328.250 ns/op
Iteration   7: 341.086 ns/op
Iteration   8: 327.192 ns/op
Iteration   9: 371.996 ns/op
Iteration  10: 315.871 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  420.306 ±(99.9%) 214.935 ns/op [Average]
  (min, avg, max) = (315.871, 420.306, 1238.277), stdev = 247.519
  CI (99.9%): [205.372, 635.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 85.69% complete, ETA 00:05:29
# Fork: 1 of 2
# Warmup Iteration   1: 2918.899 ns/op
# Warmup Iteration   2: 2320.428 ns/op
# Warmup Iteration   3: 1542.563 ns/op
Iteration   1: 1643.186 ns/op
Iteration   2: 1649.081 ns/op
Iteration   3: 1658.213 ns/op
Iteration   4: 1565.385 ns/op
Iteration   5: 1633.293 ns/op
Iteration   6: 1560.170 ns/op
Iteration   7: 1647.117 ns/op
Iteration   8: 1620.453 ns/op
Iteration   9: 1748.819 ns/op
Iteration  10: 1553.499 ns/op

# Run progress: 85.76% complete, ETA 00:05:27
# Fork: 2 of 2
# Warmup Iteration   1: 3330.840 ns/op
# Warmup Iteration   2: 2395.305 ns/op
# Warmup Iteration   3: 1540.271 ns/op
Iteration   1: 1639.527 ns/op
Iteration   2: 1646.980 ns/op
Iteration   3: 1675.742 ns/op
Iteration   4: 1564.747 ns/op
Iteration   5: 1626.764 ns/op
Iteration   6: 1560.873 ns/op
Iteration   7: 1643.822 ns/op
Iteration   8: 1610.444 ns/op
Iteration   9: 1746.199 ns/op
Iteration  10: 1553.592 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1627.395 ±(99.9%) 49.623 ns/op [Average]
  (min, avg, max) = (1553.499, 1627.395, 1748.819), stdev = 57.146
  CI (99.9%): [1577.772, 1677.018] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 85.83% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: 19.511 ns/op
# Warmup Iteration   2: 22.893 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.081 ns/op
Iteration   2: 15.275 ns/op
Iteration   3: 17.012 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.395 ns/op
Iteration   7: 17.027 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 14.971 ns/op

# Run progress: 85.90% complete, ETA 00:05:24
# Fork: 2 of 2
# Warmup Iteration   1: 19.282 ns/op
# Warmup Iteration   2: 22.682 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.286 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.025 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.018 ns/op
Iteration   8: 17.027 ns/op
Iteration   9: 17.013 ns/op
Iteration  10: 14.966 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.294 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.966, 16.294, 17.109), stdev = 0.951
  CI (99.9%): [15.468, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 85.97% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: 383.086 ns/op
# Warmup Iteration   2: 258.624 ns/op
# Warmup Iteration   3: 183.082 ns/op
Iteration   1: 183.622 ns/op
Iteration   2: 183.814 ns/op
Iteration   3: 181.884 ns/op
Iteration   4: 184.524 ns/op
Iteration   5: 182.874 ns/op
Iteration   6: 183.410 ns/op
Iteration   7: 182.813 ns/op
Iteration   8: 182.612 ns/op
Iteration   9: 181.920 ns/op
Iteration  10: 183.816 ns/op

# Run progress: 86.04% complete, ETA 00:05:21
# Fork: 2 of 2
# Warmup Iteration   1: 501.291 ns/op
# Warmup Iteration   2: 261.596 ns/op
# Warmup Iteration   3: 188.824 ns/op
Iteration   1: 185.528 ns/op
Iteration   2: 188.353 ns/op
Iteration   3: 186.429 ns/op
Iteration   4: 189.197 ns/op
Iteration   5: 186.135 ns/op
Iteration   6: 187.901 ns/op
Iteration   7: 186.064 ns/op
Iteration   8: 185.929 ns/op
Iteration   9: 185.907 ns/op
Iteration  10: 188.175 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  185.045 ±(99.9%) 1.946 ns/op [Average]
  (min, avg, max) = (181.884, 185.045, 189.197), stdev = 2.241
  CI (99.9%): [183.100, 186.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 86.11% complete, ETA 00:05:19
# Fork: 1 of 2
# Warmup Iteration   1: 337.852 ns/op
# Warmup Iteration   2: 337.959 ns/op
# Warmup Iteration   3: 236.184 ns/op
Iteration   1: 234.906 ns/op
Iteration   2: 236.109 ns/op
Iteration   3: 234.907 ns/op
Iteration   4: 236.686 ns/op
Iteration   5: 234.831 ns/op
Iteration   6: 236.026 ns/op
Iteration   7: 234.818 ns/op
Iteration   8: 234.925 ns/op
Iteration   9: 234.955 ns/op
Iteration  10: 236.027 ns/op

# Run progress: 86.18% complete, ETA 00:05:18
# Fork: 2 of 2
# Warmup Iteration   1: 338.713 ns/op
# Warmup Iteration   2: 312.413 ns/op
# Warmup Iteration   3: 236.312 ns/op
Iteration   1: 234.965 ns/op
Iteration   2: 236.107 ns/op
Iteration   3: 234.984 ns/op
Iteration   4: 236.644 ns/op
Iteration   5: 234.781 ns/op
Iteration   6: 236.053 ns/op
Iteration   7: 234.944 ns/op
Iteration   8: 235.002 ns/op
Iteration   9: 235.100 ns/op
Iteration  10: 236.028 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  235.440 ±(99.9%) 0.583 ns/op [Average]
  (min, avg, max) = (234.781, 235.440, 236.686), stdev = 0.671
  CI (99.9%): [234.857, 236.022] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 86.25% complete, ETA 00:05:16
# Fork: 1 of 2
# Warmup Iteration   1: 1733.110 ns/op
# Warmup Iteration   2: 365.056 ns/op
# Warmup Iteration   3: 281.461 ns/op
Iteration   1: 279.713 ns/op
Iteration   2: 281.574 ns/op
Iteration   3: 279.716 ns/op
Iteration   4: 302.307 ns/op
Iteration   5: 279.983 ns/op
Iteration   6: 281.089 ns/op
Iteration   7: 279.688 ns/op
Iteration   8: 279.700 ns/op
Iteration   9: 279.761 ns/op
Iteration  10: 280.997 ns/op

# Run progress: 86.32% complete, ETA 00:05:15
# Fork: 2 of 2
# Warmup Iteration   1: 996.089 ns/op
# Warmup Iteration   2: 358.655 ns/op
# Warmup Iteration   3: 281.211 ns/op
Iteration   1: 279.715 ns/op
Iteration   2: 281.436 ns/op
Iteration   3: 279.583 ns/op
Iteration   4: 298.020 ns/op
Iteration   5: 279.910 ns/op
Iteration   6: 281.051 ns/op
Iteration   7: 279.756 ns/op
Iteration   8: 279.664 ns/op
Iteration   9: 279.670 ns/op
Iteration  10: 281.142 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  282.224 ±(99.9%) 5.395 ns/op [Average]
  (min, avg, max) = (279.583, 282.224, 302.307), stdev = 6.213
  CI (99.9%): [276.828, 287.619] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 86.39% complete, ETA 00:05:13
# Fork: 1 of 2
# Warmup Iteration   1: 283.596 ns/op
# Warmup Iteration   2: 227.433 ns/op
# Warmup Iteration   3: 176.795 ns/op
Iteration   1: 175.574 ns/op
Iteration   2: 177.085 ns/op
Iteration   3: 175.546 ns/op
Iteration   4: 176.966 ns/op
Iteration   5: 175.595 ns/op
Iteration   6: 177.273 ns/op
Iteration   7: 176.047 ns/op
Iteration   8: 176.066 ns/op
Iteration   9: 175.975 ns/op
Iteration  10: 176.789 ns/op

# Run progress: 86.46% complete, ETA 00:05:11
# Fork: 2 of 2
# Warmup Iteration   1: 258.529 ns/op
# Warmup Iteration   2: 227.079 ns/op
# Warmup Iteration   3: 176.780 ns/op
Iteration   1: 175.589 ns/op
Iteration   2: 176.781 ns/op
Iteration   3: 176.035 ns/op
Iteration   4: 177.078 ns/op
Iteration   5: 175.566 ns/op
Iteration   6: 177.354 ns/op
Iteration   7: 175.960 ns/op
Iteration   8: 175.956 ns/op
Iteration   9: 175.953 ns/op
Iteration  10: 176.646 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  176.292 ±(99.9%) 0.549 ns/op [Average]
  (min, avg, max) = (175.546, 176.292, 177.354), stdev = 0.632
  CI (99.9%): [175.742, 176.841] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 86.53% complete, ETA 00:05:10
# Fork: 1 of 2
# Warmup Iteration   1: 455.309 ns/op
# Warmup Iteration   2: 365.393 ns/op
# Warmup Iteration   3: 253.628 ns/op
Iteration   1: 255.854 ns/op
Iteration   2: 254.062 ns/op
Iteration   3: 256.821 ns/op
Iteration   4: 274.440 ns/op
Iteration   5: 271.738 ns/op
Iteration   6: 270.952 ns/op
Iteration   7: 271.683 ns/op
Iteration   8: 272.539 ns/op
Iteration   9: 271.748 ns/op
Iteration  10: 269.901 ns/op

# Run progress: 86.60% complete, ETA 00:05:08
# Fork: 2 of 2
# Warmup Iteration   1: 498.543 ns/op
# Warmup Iteration   2: 349.234 ns/op
# Warmup Iteration   3: 246.669 ns/op
Iteration   1: 250.438 ns/op
Iteration   2: 246.631 ns/op
Iteration   3: 249.131 ns/op
Iteration   4: 277.693 ns/op
Iteration   5: 266.030 ns/op
Iteration   6: 263.981 ns/op
Iteration   7: 265.877 ns/op
Iteration   8: 265.336 ns/op
Iteration   9: 265.435 ns/op
Iteration  10: 262.214 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  264.125 ±(99.9%) 7.891 ns/op [Average]
  (min, avg, max) = (246.631, 264.125, 277.693), stdev = 9.088
  CI (99.9%): [256.234, 272.017] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 86.67% complete, ETA 00:05:07
# Fork: 1 of 2
# Warmup Iteration   1: 19.732 ns/op
# Warmup Iteration   2: 22.946 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.063 ns/op
Iteration   2: 15.275 ns/op
Iteration   3: 17.033 ns/op
Iteration   4: 15.028 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.391 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.956 ns/op

# Run progress: 86.74% complete, ETA 00:05:05
# Fork: 2 of 2
# Warmup Iteration   1: 20.070 ns/op
# Warmup Iteration   2: 22.447 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.254 ns/op
Iteration   3: 17.017 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.376 ns/op
Iteration   7: 17.014 ns/op
Iteration   8: 17.030 ns/op
Iteration   9: 17.005 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.289 ±(99.9%) 0.828 ns/op [Average]
  (min, avg, max) = (14.956, 16.289, 17.109), stdev = 0.953
  CI (99.9%): [15.461, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 86.81% complete, ETA 00:05:03
# Fork: 1 of 2
# Warmup Iteration   1: 400.192 ns/op
# Warmup Iteration   2: 18941.856 ns/op
# Warmup Iteration   3: 195.338 ns/op
Iteration   1: 204.861 ns/op
Iteration   2: 210.529 ns/op
Iteration   3: 196.577 ns/op
Iteration   4: 12367.768 ns/op
Iteration   5: 188.543 ns/op
Iteration   6: 13422.894 ns/op
Iteration   7: 206.973 ns/op
Iteration   8: 189.193 ns/op
Iteration   9: 234.794 ns/op
Iteration  10: 188.265 ns/op

# Run progress: 86.88% complete, ETA 00:05:02
# Fork: 2 of 2
# Warmup Iteration   1: 446.490 ns/op
# Warmup Iteration   2: 17492.836 ns/op
# Warmup Iteration   3: 187.227 ns/op
Iteration   1: 203.996 ns/op
Iteration   2: 201.812 ns/op
Iteration   3: 189.364 ns/op
Iteration   4: 12299.854 ns/op
Iteration   5: 184.815 ns/op
Iteration   6: 14369.954 ns/op
Iteration   7: 238.983 ns/op
Iteration   8: 213.863 ns/op
Iteration   9: 242.703 ns/op
Iteration  10: 213.603 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2788.467 ±(99.9%) 4612.563 ns/op [Average]
  (min, avg, max) = (184.815, 2788.467, 14369.954), stdev = 5311.835
  CI (99.9%): [≈ 0, 7401.030] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 86.94% complete, ETA 00:05:00
# Fork: 1 of 2
# Warmup Iteration   1: 332.738 ns/op
# Warmup Iteration   2: 625.834 ns/op
# Warmup Iteration   3: 239.936 ns/op
Iteration   1: 251.733 ns/op
Iteration   2: 280.025 ns/op
Iteration   3: 238.546 ns/op
Iteration   4: 457.371 ns/op
Iteration   5: 238.570 ns/op
Iteration   6: 426.625 ns/op
Iteration   7: 439.025 ns/op
Iteration   8: 238.444 ns/op
Iteration   9: 279.423 ns/op
Iteration  10: 239.733 ns/op

# Run progress: 87.01% complete, ETA 00:04:59
# Fork: 2 of 2
# Warmup Iteration   1: 334.005 ns/op
# Warmup Iteration   2: 743.541 ns/op
# Warmup Iteration   3: 248.368 ns/op
Iteration   1: 259.886 ns/op
Iteration   2: 277.439 ns/op
Iteration   3: 247.066 ns/op
Iteration   4: 402.902 ns/op
Iteration   5: 247.054 ns/op
Iteration   6: 387.215 ns/op
Iteration   7: 394.328 ns/op
Iteration   8: 247.053 ns/op
Iteration   9: 279.527 ns/op
Iteration  10: 248.428 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  304.020 ±(99.9%) 68.614 ns/op [Average]
  (min, avg, max) = (238.444, 304.020, 457.371), stdev = 79.016
  CI (99.9%): [235.406, 372.634] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 87.08% complete, ETA 00:04:57
# Fork: 1 of 2
# Warmup Iteration   1: 1343.163 ns/op
# Warmup Iteration   2: 35121.827 ns/op
# Warmup Iteration   3: 1052.781 ns/op
Iteration   1: 1476.478 ns/op
Iteration   2: 468.595 ns/op
Iteration   3: 295.063 ns/op
Iteration   4: 1275.647 ns/op
Iteration   5: 305.697 ns/op
Iteration   6: 275.683 ns/op
Iteration   7: 273.176 ns/op
Iteration   8: 305.479 ns/op
Iteration   9: 349.195 ns/op
Iteration  10: 306.822 ns/op

# Run progress: 87.15% complete, ETA 00:04:55
# Fork: 2 of 2
# Warmup Iteration   1: 2908.070 ns/op
# Warmup Iteration   2: 33739.021 ns/op
# Warmup Iteration   3: 640.903 ns/op
Iteration   1: 1381.270 ns/op
Iteration   2: 1523.054 ns/op
Iteration   3: 290.303 ns/op
Iteration   4: 616.911 ns/op
Iteration   5: 303.992 ns/op
Iteration   6: 280.043 ns/op
Iteration   7: 277.516 ns/op
Iteration   8: 304.550 ns/op
Iteration   9: 349.321 ns/op
Iteration  10: 305.192 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  548.199 ±(99.9%) 393.677 ns/op [Average]
  (min, avg, max) = (273.176, 548.199, 1523.054), stdev = 453.359
  CI (99.9%): [154.523, 941.876] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 87.22% complete, ETA 00:04:54
# Fork: 1 of 2
# Warmup Iteration   1: 261.904 ns/op
# Warmup Iteration   2: 724.165 ns/op
# Warmup Iteration   3: 189.401 ns/op
Iteration   1: 205.200 ns/op
Iteration   2: 1130.893 ns/op
Iteration   3: 180.083 ns/op
Iteration   4: 659.717 ns/op
Iteration   5: 196.769 ns/op
Iteration   6: 219.014 ns/op
Iteration   7: 213.702 ns/op
Iteration   8: 197.301 ns/op
Iteration   9: 221.642 ns/op
Iteration  10: 198.038 ns/op

# Run progress: 87.29% complete, ETA 00:04:52
# Fork: 2 of 2
# Warmup Iteration   1: 280.414 ns/op
# Warmup Iteration   2: 683.094 ns/op
# Warmup Iteration   3: 189.545 ns/op
Iteration   1: 205.248 ns/op
Iteration   2: 1724.812 ns/op
Iteration   3: 182.285 ns/op
Iteration   4: 455.855 ns/op
Iteration   5: 194.485 ns/op
Iteration   6: 215.104 ns/op
Iteration   7: 212.116 ns/op
Iteration   8: 194.559 ns/op
Iteration   9: 219.177 ns/op
Iteration  10: 195.981 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  361.099 ±(99.9%) 342.277 ns/op [Average]
  (min, avg, max) = (180.083, 361.099, 1724.812), stdev = 394.167
  CI (99.9%): [18.822, 703.376] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 87.36% complete, ETA 00:04:51
# Fork: 1 of 2
# Warmup Iteration   1: 539.946 ns/op
# Warmup Iteration   2: 16882.937 ns/op
# Warmup Iteration   3: 261.170 ns/op
Iteration   1: 353.262 ns/op
Iteration   2: 355.365 ns/op
Iteration   3: 262.879 ns/op
Iteration   4: 12067.624 ns/op
Iteration   5: 307.443 ns/op
Iteration   6: 440.418 ns/op
Iteration   7: 446.078 ns/op
Iteration   8: 307.088 ns/op
Iteration   9: 440.876 ns/op
Iteration  10: 305.088 ns/op

# Run progress: 87.43% complete, ETA 00:04:49
# Fork: 2 of 2
# Warmup Iteration   1: 568.597 ns/op
# Warmup Iteration   2: 15581.661 ns/op
# Warmup Iteration   3: 247.024 ns/op
Iteration   1: 337.088 ns/op
Iteration   2: 324.473 ns/op
Iteration   3: 248.402 ns/op
Iteration   4: 15695.769 ns/op
Iteration   5: 302.931 ns/op
Iteration   6: 428.550 ns/op
Iteration   7: 432.457 ns/op
Iteration   8: 301.811 ns/op
Iteration   9: 432.071 ns/op
Iteration  10: 300.000 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1704.484 ±(99.9%) 3652.639 ns/op [Average]
  (min, avg, max) = (248.402, 1704.484, 15695.769), stdev = 4206.384
  CI (99.9%): [≈ 0, 5357.122] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 87.50% complete, ETA 00:04:47
# Fork: 1 of 2
# Warmup Iteration   1: 19.302 ns/op
# Warmup Iteration   2: 23.419 ns/op
# Warmup Iteration   3: 15.032 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.281 ns/op
Iteration   3: 17.029 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.110 ns/op
Iteration   6: 15.387 ns/op
Iteration   7: 17.027 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.975 ns/op

# Run progress: 87.57% complete, ETA 00:04:46
# Fork: 2 of 2
# Warmup Iteration   1: 19.581 ns/op
# Warmup Iteration   2: 22.909 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.080 ns/op
Iteration   2: 15.284 ns/op
Iteration   3: 17.018 ns/op
Iteration   4: 15.018 ns/op
Iteration   5: 17.101 ns/op
Iteration   6: 15.372 ns/op
Iteration   7: 17.021 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.965 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.292 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (14.965, 16.292, 17.110), stdev = 0.952
  CI (99.9%): [15.465, 17.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 87.64% complete, ETA 00:04:44
# Fork: 1 of 2
# Warmup Iteration   1: 978.943 ns/op
# Warmup Iteration   2: 375.369 ns/op
# Warmup Iteration   3: 270.664 ns/op
Iteration   1: 270.881 ns/op
Iteration   2: 270.432 ns/op
Iteration   3: 271.054 ns/op
Iteration   4: 271.489 ns/op
Iteration   5: 271.000 ns/op
Iteration   6: 270.243 ns/op
Iteration   7: 270.831 ns/op
Iteration   8: 270.781 ns/op
Iteration   9: 270.744 ns/op
Iteration  10: 270.417 ns/op

# Run progress: 87.71% complete, ETA 00:04:43
# Fork: 2 of 2
# Warmup Iteration   1: 1007.430 ns/op
# Warmup Iteration   2: 387.810 ns/op
# Warmup Iteration   3: 269.193 ns/op
Iteration   1: 270.259 ns/op
Iteration   2: 269.137 ns/op
Iteration   3: 269.787 ns/op
Iteration   4: 270.220 ns/op
Iteration   5: 270.278 ns/op
Iteration   6: 268.998 ns/op
Iteration   7: 270.415 ns/op
Iteration   8: 269.972 ns/op
Iteration   9: 269.238 ns/op
Iteration  10: 268.599 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  270.239 ±(99.9%) 0.659 ns/op [Average]
  (min, avg, max) = (268.599, 270.239, 271.489), stdev = 0.759
  CI (99.9%): [269.580, 270.898] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 87.78% complete, ETA 00:04:41
# Fork: 1 of 2
# Warmup Iteration   1: 561.507 ns/op
# Warmup Iteration   2: 551.666 ns/op
# Warmup Iteration   3: 390.344 ns/op
Iteration   1: 388.911 ns/op
Iteration   2: 391.432 ns/op
Iteration   3: 400.409 ns/op
Iteration   4: 391.001 ns/op
Iteration   5: 388.801 ns/op
Iteration   6: 390.108 ns/op
Iteration   7: 388.902 ns/op
Iteration   8: 403.893 ns/op
Iteration   9: 388.797 ns/op
Iteration  10: 389.749 ns/op

# Run progress: 87.85% complete, ETA 00:04:39
# Fork: 2 of 2
# Warmup Iteration   1: 573.147 ns/op
# Warmup Iteration   2: 611.589 ns/op
# Warmup Iteration   3: 397.358 ns/op
Iteration   1: 394.978 ns/op
Iteration   2: 397.087 ns/op
Iteration   3: 394.672 ns/op
Iteration   4: 396.588 ns/op
Iteration   5: 394.951 ns/op
Iteration   6: 397.178 ns/op
Iteration   7: 394.798 ns/op
Iteration   8: 394.673 ns/op
Iteration   9: 394.843 ns/op
Iteration  10: 396.718 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  393.924 ±(99.9%) 3.627 ns/op [Average]
  (min, avg, max) = (388.797, 393.924, 403.893), stdev = 4.177
  CI (99.9%): [390.298, 397.551] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 87.92% complete, ETA 00:04:38
# Fork: 1 of 2
# Warmup Iteration   1: 4255.037 ns/op
# Warmup Iteration   2: 512.423 ns/op
# Warmup Iteration   3: 340.538 ns/op
Iteration   1: 339.900 ns/op
Iteration   2: 341.280 ns/op
Iteration   3: 339.472 ns/op
Iteration   4: 343.484 ns/op
Iteration   5: 339.400 ns/op
Iteration   6: 340.596 ns/op
Iteration   7: 339.317 ns/op
Iteration   8: 339.348 ns/op
Iteration   9: 339.464 ns/op
Iteration  10: 340.733 ns/op

# Run progress: 87.99% complete, ETA 00:04:36
# Fork: 2 of 2
# Warmup Iteration   1: 3009.452 ns/op
# Warmup Iteration   2: 402.315 ns/op
# Warmup Iteration   3: 340.718 ns/op
Iteration   1: 339.628 ns/op
Iteration   2: 341.383 ns/op
Iteration   3: 339.626 ns/op
Iteration   4: 343.362 ns/op
Iteration   5: 339.708 ns/op
Iteration   6: 340.737 ns/op
Iteration   7: 339.486 ns/op
Iteration   8: 339.408 ns/op
Iteration   9: 339.485 ns/op
Iteration  10: 340.769 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  340.329 ±(99.9%) 1.090 ns/op [Average]
  (min, avg, max) = (339.317, 340.329, 343.484), stdev = 1.255
  CI (99.9%): [339.240, 341.419] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 88.06% complete, ETA 00:04:35
# Fork: 1 of 2
# Warmup Iteration   1: 691.354 ns/op
# Warmup Iteration   2: 405.826 ns/op
# Warmup Iteration   3: 315.929 ns/op
Iteration   1: 314.161 ns/op
Iteration   2: 319.828 ns/op
Iteration   3: 314.438 ns/op
Iteration   4: 317.077 ns/op
Iteration   5: 314.837 ns/op
Iteration   6: 315.881 ns/op
Iteration   7: 314.334 ns/op
Iteration   8: 314.431 ns/op
Iteration   9: 314.142 ns/op
Iteration  10: 315.633 ns/op

# Run progress: 88.13% complete, ETA 00:04:33
# Fork: 2 of 2
# Warmup Iteration   1: 554.543 ns/op
# Warmup Iteration   2: 401.004 ns/op
# Warmup Iteration   3: 315.764 ns/op
Iteration   1: 315.203 ns/op
Iteration   2: 319.836 ns/op
Iteration   3: 315.522 ns/op
Iteration   4: 316.256 ns/op
Iteration   5: 315.345 ns/op
Iteration   6: 315.965 ns/op
Iteration   7: 314.948 ns/op
Iteration   8: 314.992 ns/op
Iteration   9: 314.982 ns/op
Iteration  10: 315.249 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  315.653 ±(99.9%) 1.398 ns/op [Average]
  (min, avg, max) = (314.142, 315.653, 319.836), stdev = 1.609
  CI (99.9%): [314.255, 317.050] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 88.19% complete, ETA 00:04:31
# Fork: 1 of 2
# Warmup Iteration   1: 3333.372 ns/op
# Warmup Iteration   2: 2004.804 ns/op
# Warmup Iteration   3: 1597.832 ns/op
Iteration   1: 1603.745 ns/op
Iteration   2: 1596.149 ns/op
Iteration   3: 1600.418 ns/op
Iteration   4: 1619.663 ns/op
Iteration   5: 1618.814 ns/op
Iteration   6: 1613.367 ns/op
Iteration   7: 1615.449 ns/op
Iteration   8: 1615.773 ns/op
Iteration   9: 1615.090 ns/op
Iteration  10: 1612.028 ns/op

# Run progress: 88.26% complete, ETA 00:04:30
# Fork: 2 of 2
# Warmup Iteration   1: 3392.299 ns/op
# Warmup Iteration   2: 2128.239 ns/op
# Warmup Iteration   3: 1597.677 ns/op
Iteration   1: 1603.652 ns/op
Iteration   2: 1600.233 ns/op
Iteration   3: 1597.872 ns/op
Iteration   4: 1620.543 ns/op
Iteration   5: 1618.151 ns/op
Iteration   6: 1614.004 ns/op
Iteration   7: 1617.642 ns/op
Iteration   8: 1614.462 ns/op
Iteration   9: 1614.196 ns/op
Iteration  10: 1616.282 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1611.377 ±(99.9%) 6.820 ns/op [Average]
  (min, avg, max) = (1596.149, 1611.377, 1620.543), stdev = 7.854
  CI (99.9%): [1604.556, 1618.197] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 88.33% complete, ETA 00:04:28
# Fork: 1 of 2
# Warmup Iteration   1: 19.775 ns/op
# Warmup Iteration   2: 20.962 ns/op
# Warmup Iteration   3: 15.112 ns/op
Iteration   1: 17.087 ns/op
Iteration   2: 15.265 ns/op
Iteration   3: 17.028 ns/op
Iteration   4: 15.014 ns/op
Iteration   5: 17.091 ns/op
Iteration   6: 15.374 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 16.999 ns/op
Iteration   9: 16.978 ns/op
Iteration  10: 14.970 ns/op

# Run progress: 88.40% complete, ETA 00:04:27
# Fork: 2 of 2
# Warmup Iteration   1: 19.729 ns/op
# Warmup Iteration   2: 23.115 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.067 ns/op
Iteration   2: 15.266 ns/op
Iteration   3: 17.010 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.098 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.021 ns/op
Iteration   8: 17.027 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.962 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.286 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.962, 16.286, 17.098), stdev = 0.952
  CI (99.9%): [15.460, 17.112] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 88.47% complete, ETA 00:04:25
# Fork: 1 of 2
# Warmup Iteration   1: 399.448 ns/op
# Warmup Iteration   2: 194.579 ns/op
# Warmup Iteration   3: 136.394 ns/op
Iteration   1: 137.774 ns/op
Iteration   2: 136.466 ns/op
Iteration   3: 137.736 ns/op
Iteration   4: 137.547 ns/op
Iteration   5: 138.116 ns/op
Iteration   6: 136.654 ns/op
Iteration   7: 137.824 ns/op
Iteration   8: 137.779 ns/op
Iteration   9: 137.759 ns/op
Iteration  10: 136.403 ns/op

# Run progress: 88.54% complete, ETA 00:04:23
# Fork: 2 of 2
# Warmup Iteration   1: 451.167 ns/op
# Warmup Iteration   2: 199.300 ns/op
# Warmup Iteration   3: 138.591 ns/op
Iteration   1: 140.061 ns/op
Iteration   2: 138.587 ns/op
Iteration   3: 140.085 ns/op
Iteration   4: 139.312 ns/op
Iteration   5: 140.298 ns/op
Iteration   6: 139.346 ns/op
Iteration   7: 140.209 ns/op
Iteration   8: 140.162 ns/op
Iteration   9: 139.839 ns/op
Iteration  10: 138.928 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  138.544 ±(99.9%) 1.141 ns/op [Average]
  (min, avg, max) = (136.403, 138.544, 140.298), stdev = 1.314
  CI (99.9%): [137.403, 139.686] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 88.61% complete, ETA 00:04:22
# Fork: 1 of 2
# Warmup Iteration   1: 397.904 ns/op
# Warmup Iteration   2: 372.948 ns/op
# Warmup Iteration   3: 256.621 ns/op
Iteration   1: 254.792 ns/op
Iteration   2: 257.250 ns/op
Iteration   3: 254.886 ns/op
Iteration   4: 256.552 ns/op
Iteration   5: 255.675 ns/op
Iteration   6: 256.315 ns/op
Iteration   7: 255.179 ns/op
Iteration   8: 254.927 ns/op
Iteration   9: 254.660 ns/op
Iteration  10: 256.513 ns/op

# Run progress: 88.68% complete, ETA 00:04:20
# Fork: 2 of 2
# Warmup Iteration   1: 365.250 ns/op
# Warmup Iteration   2: 328.394 ns/op
# Warmup Iteration   3: 253.638 ns/op
Iteration   1: 251.841 ns/op
Iteration   2: 253.885 ns/op
Iteration   3: 252.027 ns/op
Iteration   4: 253.630 ns/op
Iteration   5: 251.919 ns/op
Iteration   6: 253.032 ns/op
Iteration   7: 252.256 ns/op
Iteration   8: 251.977 ns/op
Iteration   9: 252.094 ns/op
Iteration  10: 253.356 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  254.138 ±(99.9%) 1.548 ns/op [Average]
  (min, avg, max) = (251.841, 254.138, 257.250), stdev = 1.783
  CI (99.9%): [252.590, 255.687] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 88.75% complete, ETA 00:04:19
# Fork: 1 of 2
# Warmup Iteration   1: 559.723 ns/op
# Warmup Iteration   2: 255.630 ns/op
# Warmup Iteration   3: 198.385 ns/op
Iteration   1: 197.458 ns/op
Iteration   2: 199.685 ns/op
Iteration   3: 197.080 ns/op
Iteration   4: 199.839 ns/op
Iteration   5: 197.919 ns/op
Iteration   6: 198.018 ns/op
Iteration   7: 197.152 ns/op
Iteration   8: 197.189 ns/op
Iteration   9: 197.146 ns/op
Iteration  10: 198.110 ns/op

# Run progress: 88.82% complete, ETA 00:04:17
# Fork: 2 of 2
# Warmup Iteration   1: 589.594 ns/op
# Warmup Iteration   2: 258.069 ns/op
# Warmup Iteration   3: 200.500 ns/op
Iteration   1: 199.350 ns/op
Iteration   2: 201.600 ns/op
Iteration   3: 199.122 ns/op
Iteration   4: 201.096 ns/op
Iteration   5: 199.337 ns/op
Iteration   6: 200.215 ns/op
Iteration   7: 199.167 ns/op
Iteration   8: 199.495 ns/op
Iteration   9: 199.036 ns/op
Iteration  10: 200.028 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  198.902 ±(99.9%) 1.167 ns/op [Average]
  (min, avg, max) = (197.080, 198.902, 201.600), stdev = 1.344
  CI (99.9%): [197.735, 200.069] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 88.89% complete, ETA 00:04:15
# Fork: 1 of 2
# Warmup Iteration   1: 255.144 ns/op
# Warmup Iteration   2: 210.824 ns/op
# Warmup Iteration   3: 164.422 ns/op
Iteration   1: 162.961 ns/op
Iteration   2: 165.016 ns/op
Iteration   3: 162.866 ns/op
Iteration   4: 165.167 ns/op
Iteration   5: 163.117 ns/op
Iteration   6: 164.278 ns/op
Iteration   7: 162.727 ns/op
Iteration   8: 162.968 ns/op
Iteration   9: 162.978 ns/op
Iteration  10: 164.496 ns/op

# Run progress: 88.96% complete, ETA 00:04:14
# Fork: 2 of 2
# Warmup Iteration   1: 235.565 ns/op
# Warmup Iteration   2: 215.524 ns/op
# Warmup Iteration   3: 164.516 ns/op
Iteration   1: 162.893 ns/op
Iteration   2: 164.983 ns/op
Iteration   3: 163.051 ns/op
Iteration   4: 165.094 ns/op
Iteration   5: 162.862 ns/op
Iteration   6: 164.206 ns/op
Iteration   7: 162.854 ns/op
Iteration   8: 162.892 ns/op
Iteration   9: 162.912 ns/op
Iteration  10: 164.518 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  163.642 ±(99.9%) 0.813 ns/op [Average]
  (min, avg, max) = (162.727, 163.642, 165.167), stdev = 0.936
  CI (99.9%): [162.829, 164.455] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 89.03% complete, ETA 00:04:12
# Fork: 1 of 2
# Warmup Iteration   1: 560.306 ns/op
# Warmup Iteration   2: 327.260 ns/op
# Warmup Iteration   3: 256.818 ns/op
Iteration   1: 257.593 ns/op
Iteration   2: 268.696 ns/op
Iteration   3: 257.621 ns/op
Iteration   4: 276.284 ns/op
Iteration   5: 273.880 ns/op
Iteration   6: 272.897 ns/op
Iteration   7: 281.290 ns/op
Iteration   8: 271.685 ns/op
Iteration   9: 284.677 ns/op
Iteration  10: 272.296 ns/op

# Run progress: 89.10% complete, ETA 00:04:11
# Fork: 2 of 2
# Warmup Iteration   1: 494.623 ns/op
# Warmup Iteration   2: 362.586 ns/op
# Warmup Iteration   3: 257.091 ns/op
Iteration   1: 257.641 ns/op
Iteration   2: 257.774 ns/op
Iteration   3: 258.015 ns/op
Iteration   4: 276.953 ns/op
Iteration   5: 274.249 ns/op
Iteration   6: 273.317 ns/op
Iteration   7: 272.219 ns/op
Iteration   8: 272.352 ns/op
Iteration   9: 272.463 ns/op
Iteration  10: 272.772 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  270.234 ±(99.9%) 7.097 ns/op [Average]
  (min, avg, max) = (257.593, 270.234, 284.677), stdev = 8.173
  CI (99.9%): [263.137, 277.331] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 89.17% complete, ETA 00:04:09
# Fork: 1 of 2
# Warmup Iteration   1: 19.298 ns/op
# Warmup Iteration   2: 21.010 ns/op
# Warmup Iteration   3: 15.031 ns/op
Iteration   1: 17.073 ns/op
Iteration   2: 15.264 ns/op
Iteration   3: 17.023 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.011 ns/op
Iteration   8: 17.008 ns/op
Iteration   9: 17.009 ns/op
Iteration  10: 14.968 ns/op

# Run progress: 89.24% complete, ETA 00:04:07
# Fork: 2 of 2
# Warmup Iteration   1: 19.388 ns/op
# Warmup Iteration   2: 21.681 ns/op
# Warmup Iteration   3: 15.033 ns/op
Iteration   1: 17.080 ns/op
Iteration   2: 15.275 ns/op
Iteration   3: 17.010 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.008 ns/op
Iteration  10: 14.959 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.288 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.959, 16.288, 17.108), stdev = 0.951
  CI (99.9%): [15.462, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 89.31% complete, ETA 00:04:06
# Fork: 1 of 2
# Warmup Iteration   1: 756.671 ns/op
# Warmup Iteration   2: 26923.860 ns/op
# Warmup Iteration   3: 2871.229 ns/op
Iteration   1: 19773.237 ns/op
Iteration   2: 16387.071 ns/op
Iteration   3: 309.293 ns/op
Iteration   4: 283.334 ns/op
Iteration   5: 355.188 ns/op
Iteration   6: 21096.370 ns/op
Iteration   7: 383.729 ns/op
Iteration   8: 325.255 ns/op
Iteration   9: 456.571 ns/op
Iteration  10: 344.209 ns/op

# Run progress: 89.38% complete, ETA 00:04:04
# Fork: 2 of 2
# Warmup Iteration   1: 938.525 ns/op
# Warmup Iteration   2: 4232.579 ns/op
# Warmup Iteration   3: 1757.859 ns/op
Iteration   1: 23350.679 ns/op
Iteration   2: 20939.009 ns/op
Iteration   3: 313.917 ns/op
Iteration   4: 284.598 ns/op
Iteration   5: 359.403 ns/op
Iteration   6: 23344.857 ns/op
Iteration   7: 378.664 ns/op
Iteration   8: 310.610 ns/op
Iteration   9: 443.905 ns/op
Iteration  10: 338.611 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6488.926 ±(99.9%) 8435.204 ns/op [Average]
  (min, avg, max) = (283.334, 6488.926, 23350.679), stdev = 9713.994
  CI (99.9%): [≈ 0, 14924.130] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 89.44% complete, ETA 00:04:03
# Fork: 1 of 2
# Warmup Iteration   1: 727.263 ns/op
# Warmup Iteration   2: 514.481 ns/op
# Warmup Iteration   3: 426.200 ns/op
Iteration   1: 495.544 ns/op
Iteration   2: 404.073 ns/op
Iteration   3: 405.563 ns/op
Iteration   4: 444.299 ns/op
Iteration   5: 439.844 ns/op
Iteration   6: 441.084 ns/op
Iteration   7: 471.642 ns/op
Iteration   8: 471.818 ns/op
Iteration   9: 401.350 ns/op
Iteration  10: 428.276 ns/op

# Run progress: 89.51% complete, ETA 00:04:01
# Fork: 2 of 2
# Warmup Iteration   1: 747.173 ns/op
# Warmup Iteration   2: 520.468 ns/op
# Warmup Iteration   3: 428.545 ns/op
Iteration   1: 495.788 ns/op
Iteration   2: 405.101 ns/op
Iteration   3: 408.543 ns/op
Iteration   4: 442.878 ns/op
Iteration   5: 441.948 ns/op
Iteration   6: 440.360 ns/op
Iteration   7: 481.995 ns/op
Iteration   8: 472.720 ns/op
Iteration   9: 404.683 ns/op
Iteration  10: 427.248 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  441.238 ±(99.9%) 27.294 ns/op [Average]
  (min, avg, max) = (401.350, 441.238, 495.788), stdev = 31.432
  CI (99.9%): [413.943, 468.532] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 89.58% complete, ETA 00:03:59
# Fork: 1 of 2
# Warmup Iteration   1: 7532.871 ns/op
# Warmup Iteration   2: 2230.662 ns/op
# Warmup Iteration   3: 813.420 ns/op
Iteration   1: 816.639 ns/op
Iteration   2: 1540.831 ns/op
Iteration   3: 328.208 ns/op
Iteration   4: 9628.325 ns/op
Iteration   5: 441.461 ns/op
Iteration   6: 339.107 ns/op
Iteration   7: 400.880 ns/op
Iteration   8: 430.436 ns/op
Iteration   9: 477.010 ns/op
Iteration  10: 365.444 ns/op

# Run progress: 89.65% complete, ETA 00:03:58
# Fork: 2 of 2
# Warmup Iteration   1: 21429.404 ns/op
# Warmup Iteration   2: 1285.362 ns/op
# Warmup Iteration   3: 1082.265 ns/op
Iteration   1: 9510.405 ns/op
Iteration   2: 1006.907 ns/op
Iteration   3: 331.614 ns/op
Iteration   4: 1382.205 ns/op
Iteration   5: 447.522 ns/op
Iteration   6: 347.248 ns/op
Iteration   7: 387.500 ns/op
Iteration   8: 433.567 ns/op
Iteration   9: 454.306 ns/op
Iteration  10: 369.122 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1471.937 ±(99.9%) 2423.731 ns/op [Average]
  (min, avg, max) = (328.208, 1471.937, 9628.325), stdev = 2791.172
  CI (99.9%): [≈ 0, 3895.668] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 89.72% complete, ETA 00:03:56
# Fork: 1 of 2
# Warmup Iteration   1: 531.035 ns/op
# Warmup Iteration   2: 412.143 ns/op
# Warmup Iteration   3: 319.803 ns/op
Iteration   1: 375.554 ns/op
Iteration   2: 312.975 ns/op
Iteration   3: 331.968 ns/op
Iteration   4: 345.090 ns/op
Iteration   5: 349.826 ns/op
Iteration   6: 344.142 ns/op
Iteration   7: 31590.069 ns/op
Iteration   8: 355.593 ns/op
Iteration   9: 326.755 ns/op
Iteration  10: 325.819 ns/op

# Run progress: 89.79% complete, ETA 00:03:55
# Fork: 2 of 2
# Warmup Iteration   1: 584.281 ns/op
# Warmup Iteration   2: 408.832 ns/op
# Warmup Iteration   3: 319.733 ns/op
Iteration   1: 368.461 ns/op
Iteration   2: 312.979 ns/op
Iteration   3: 333.185 ns/op
Iteration   4: 344.701 ns/op
Iteration   5: 350.288 ns/op
Iteration   6: 343.650 ns/op
Iteration   7: 3637.332 ns/op
Iteration   8: 354.094 ns/op
Iteration   9: 322.015 ns/op
Iteration  10: 321.050 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2067.277 ±(99.9%) 6067.954 ns/op [Average]
  (min, avg, max) = (312.975, 2067.277, 31590.069), stdev = 6987.865
  CI (99.9%): [≈ 0, 8135.231] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 89.86% complete, ETA 00:03:53
# Fork: 1 of 2
# Warmup Iteration   1: 3116.664 ns/op
# Warmup Iteration   2: 1958.185 ns/op
# Warmup Iteration   3: 1594.265 ns/op
Iteration   1: 1722.982 ns/op
Iteration   2: 1551.140 ns/op
Iteration   3: 1579.741 ns/op
Iteration   4: 1652.214 ns/op
Iteration   5: 1649.148 ns/op
Iteration   6: 1655.767 ns/op
Iteration   7: 1733.474 ns/op
Iteration   8: 1688.322 ns/op
Iteration   9: 1579.430 ns/op
Iteration  10: 1619.951 ns/op

# Run progress: 89.93% complete, ETA 00:03:51
# Fork: 2 of 2
# Warmup Iteration   1: 3398.092 ns/op
# Warmup Iteration   2: 2049.847 ns/op
# Warmup Iteration   3: 1590.455 ns/op
Iteration   1: 1723.069 ns/op
Iteration   2: 1546.001 ns/op
Iteration   3: 1576.288 ns/op
Iteration   4: 1659.014 ns/op
Iteration   5: 1657.265 ns/op
Iteration   6: 1661.225 ns/op
Iteration   7: 1730.911 ns/op
Iteration   8: 1684.195 ns/op
Iteration   9: 1580.517 ns/op
Iteration  10: 1603.198 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1642.693 ±(99.9%) 52.673 ns/op [Average]
  (min, avg, max) = (1546.001, 1642.693, 1733.474), stdev = 60.658
  CI (99.9%): [1590.020, 1695.366] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 90.00% complete, ETA 00:03:50
# Fork: 1 of 2
# Warmup Iteration   1: 19.562 ns/op
# Warmup Iteration   2: 23.183 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.065 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.386 ns/op
Iteration   7: 16.995 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.023 ns/op
Iteration  10: 14.962 ns/op

# Run progress: 90.07% complete, ETA 00:03:48
# Fork: 2 of 2
# Warmup Iteration   1: 19.469 ns/op
# Warmup Iteration   2: 20.984 ns/op
# Warmup Iteration   3: 15.022 ns/op
Iteration   1: 17.062 ns/op
Iteration   2: 15.286 ns/op
Iteration   3: 17.025 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.376 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.001 ns/op
Iteration   9: 17.008 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.287 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.962, 16.287, 17.108), stdev = 0.949
  CI (99.9%): [15.463, 17.111] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 90.14% complete, ETA 00:03:47
# Fork: 1 of 2
# Warmup Iteration   1: 411.075 ns/op
# Warmup Iteration   2: 186.576 ns/op
# Warmup Iteration   3: 136.509 ns/op
Iteration   1: 137.693 ns/op
Iteration   2: 136.434 ns/op
Iteration   3: 137.681 ns/op
Iteration   4: 137.693 ns/op
Iteration   5: 137.928 ns/op
Iteration   6: 136.650 ns/op
Iteration   7: 137.767 ns/op
Iteration   8: 137.647 ns/op
Iteration   9: 137.830 ns/op
Iteration  10: 136.071 ns/op

# Run progress: 90.21% complete, ETA 00:03:45
# Fork: 2 of 2
# Warmup Iteration   1: 408.644 ns/op
# Warmup Iteration   2: 200.353 ns/op
# Warmup Iteration   3: 138.778 ns/op
Iteration   1: 139.762 ns/op
Iteration   2: 138.648 ns/op
Iteration   3: 140.018 ns/op
Iteration   4: 139.286 ns/op
Iteration   5: 139.813 ns/op
Iteration   6: 139.354 ns/op
Iteration   7: 139.965 ns/op
Iteration   8: 139.964 ns/op
Iteration   9: 139.951 ns/op
Iteration  10: 138.840 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  138.450 ±(99.9%) 1.110 ns/op [Average]
  (min, avg, max) = (136.071, 138.450, 140.018), stdev = 1.278
  CI (99.9%): [137.340, 139.560] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 90.28% complete, ETA 00:03:43
# Fork: 1 of 2
# Warmup Iteration   1: 395.002 ns/op
# Warmup Iteration   2: 323.347 ns/op
# Warmup Iteration   3: 250.453 ns/op
Iteration   1: 249.275 ns/op
Iteration   2: 251.622 ns/op
Iteration   3: 249.218 ns/op
Iteration   4: 250.851 ns/op
Iteration   5: 249.242 ns/op
Iteration   6: 250.449 ns/op
Iteration   7: 249.224 ns/op
Iteration   8: 249.247 ns/op
Iteration   9: 249.505 ns/op
Iteration  10: 250.283 ns/op

# Run progress: 90.35% complete, ETA 00:03:42
# Fork: 2 of 2
# Warmup Iteration   1: 370.028 ns/op
# Warmup Iteration   2: 340.426 ns/op
# Warmup Iteration   3: 256.382 ns/op
Iteration   1: 254.911 ns/op
Iteration   2: 256.837 ns/op
Iteration   3: 255.167 ns/op
Iteration   4: 256.498 ns/op
Iteration   5: 254.840 ns/op
Iteration   6: 256.613 ns/op
Iteration   7: 254.987 ns/op
Iteration   8: 254.923 ns/op
Iteration   9: 254.918 ns/op
Iteration  10: 256.304 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  252.746 ±(99.9%) 2.643 ns/op [Average]
  (min, avg, max) = (249.218, 252.746, 256.837), stdev = 3.043
  CI (99.9%): [250.103, 255.388] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 90.42% complete, ETA 00:03:40
# Fork: 1 of 2
# Warmup Iteration   1: 551.382 ns/op
# Warmup Iteration   2: 260.964 ns/op
# Warmup Iteration   3: 199.377 ns/op
Iteration   1: 198.286 ns/op
Iteration   2: 200.878 ns/op
Iteration   3: 198.270 ns/op
Iteration   4: 200.574 ns/op
Iteration   5: 198.315 ns/op
Iteration   6: 199.379 ns/op
Iteration   7: 198.242 ns/op
Iteration   8: 198.170 ns/op
Iteration   9: 198.187 ns/op
Iteration  10: 199.538 ns/op

# Run progress: 90.49% complete, ETA 00:03:39
# Fork: 2 of 2
# Warmup Iteration   1: 701.333 ns/op
# Warmup Iteration   2: 254.827 ns/op
# Warmup Iteration   3: 198.403 ns/op
Iteration   1: 197.370 ns/op
Iteration   2: 199.688 ns/op
Iteration   3: 197.328 ns/op
Iteration   4: 199.735 ns/op
Iteration   5: 198.194 ns/op
Iteration   6: 198.082 ns/op
Iteration   7: 197.117 ns/op
Iteration   8: 197.126 ns/op
Iteration   9: 197.157 ns/op
Iteration  10: 198.542 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  198.509 ±(99.9%) 0.969 ns/op [Average]
  (min, avg, max) = (197.117, 198.509, 200.878), stdev = 1.116
  CI (99.9%): [197.540, 199.478] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 90.56% complete, ETA 00:03:37
# Fork: 1 of 2
# Warmup Iteration   1: 230.131 ns/op
# Warmup Iteration   2: 214.257 ns/op
# Warmup Iteration   3: 164.582 ns/op
Iteration   1: 163.257 ns/op
Iteration   2: 165.015 ns/op
Iteration   3: 162.787 ns/op
Iteration   4: 165.064 ns/op
Iteration   5: 162.769 ns/op
Iteration   6: 164.316 ns/op
Iteration   7: 162.943 ns/op
Iteration   8: 162.931 ns/op
Iteration   9: 162.871 ns/op
Iteration  10: 164.490 ns/op

# Run progress: 90.63% complete, ETA 00:03:35
# Fork: 2 of 2
# Warmup Iteration   1: 231.861 ns/op
# Warmup Iteration   2: 211.086 ns/op
# Warmup Iteration   3: 164.414 ns/op
Iteration   1: 163.120 ns/op
Iteration   2: 165.003 ns/op
Iteration   3: 163.127 ns/op
Iteration   4: 165.171 ns/op
Iteration   5: 163.123 ns/op
Iteration   6: 164.275 ns/op
Iteration   7: 162.868 ns/op
Iteration   8: 162.842 ns/op
Iteration   9: 162.924 ns/op
Iteration  10: 164.491 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  163.669 ±(99.9%) 0.801 ns/op [Average]
  (min, avg, max) = (162.769, 163.669, 165.171), stdev = 0.923
  CI (99.9%): [162.868, 164.470] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 90.69% complete, ETA 00:03:34
# Fork: 1 of 2
# Warmup Iteration   1: 503.081 ns/op
# Warmup Iteration   2: 367.253 ns/op
# Warmup Iteration   3: 257.352 ns/op
Iteration   1: 257.681 ns/op
Iteration   2: 257.493 ns/op
Iteration   3: 258.688 ns/op
Iteration   4: 276.659 ns/op
Iteration   5: 274.460 ns/op
Iteration   6: 272.794 ns/op
Iteration   7: 272.908 ns/op
Iteration   8: 271.599 ns/op
Iteration   9: 272.716 ns/op
Iteration  10: 272.923 ns/op

# Run progress: 90.76% complete, ETA 00:03:32
# Fork: 2 of 2
# Warmup Iteration   1: 535.374 ns/op
# Warmup Iteration   2: 374.007 ns/op
# Warmup Iteration   3: 256.681 ns/op
Iteration   1: 257.355 ns/op
Iteration   2: 256.388 ns/op
Iteration   3: 258.185 ns/op
Iteration   4: 276.755 ns/op
Iteration   5: 272.507 ns/op
Iteration   6: 271.702 ns/op
Iteration   7: 271.702 ns/op
Iteration   8: 271.437 ns/op
Iteration   9: 271.883 ns/op
Iteration  10: 272.041 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  268.394 ±(99.9%) 6.411 ns/op [Average]
  (min, avg, max) = (256.388, 268.394, 276.755), stdev = 7.383
  CI (99.9%): [261.982, 274.805] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 90.83% complete, ETA 00:03:31
# Fork: 1 of 2
# Warmup Iteration   1: 19.710 ns/op
# Warmup Iteration   2: 22.940 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.064 ns/op
Iteration   2: 15.279 ns/op
Iteration   3: 17.022 ns/op
Iteration   4: 15.024 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.025 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.018 ns/op
Iteration  10: 14.973 ns/op

# Run progress: 90.90% complete, ETA 00:03:29
# Fork: 2 of 2
# Warmup Iteration   1: 19.759 ns/op
# Warmup Iteration   2: 22.709 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.257 ns/op
Iteration   3: 17.010 ns/op
Iteration   4: 15.026 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.392 ns/op
Iteration   7: 17.022 ns/op
Iteration   8: 17.008 ns/op
Iteration   9: 17.013 ns/op
Iteration  10: 14.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.971, 16.290, 17.109), stdev = 0.951
  CI (99.9%): [15.465, 17.116] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 90.97% complete, ETA 00:03:27
# Fork: 1 of 2
# Warmup Iteration   1: 424.780 ns/op
# Warmup Iteration   2: 18523.776 ns/op
# Warmup Iteration   3: 159.514 ns/op
Iteration   1: 1215.238 ns/op
Iteration   2: 3293.483 ns/op
Iteration   3: 165.681 ns/op
Iteration   4: 223.011 ns/op
Iteration   5: 165.705 ns/op
Iteration   6: 204.499 ns/op
Iteration   7: 16860.346 ns/op
Iteration   8: 172.199 ns/op
Iteration   9: 275.769 ns/op
Iteration  10: 172.037 ns/op

# Run progress: 91.04% complete, ETA 00:03:26
# Fork: 2 of 2
# Warmup Iteration   1: 380.308 ns/op
# Warmup Iteration   2: 3167.493 ns/op
# Warmup Iteration   3: 159.059 ns/op
Iteration   1: 15134.193 ns/op
Iteration   2: 17489.438 ns/op
Iteration   3: 227.964 ns/op
Iteration   4: 240.203 ns/op
Iteration   5: 178.247 ns/op
Iteration   6: 225.391 ns/op
Iteration   7: 14101.088 ns/op
Iteration   8: 175.413 ns/op
Iteration   9: 276.331 ns/op
Iteration  10: 174.362 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3548.530 ±(99.9%) 5560.656 ns/op [Average]
  (min, avg, max) = (165.681, 3548.530, 17489.438), stdev = 6403.660
  CI (99.9%): [≈ 0, 9109.186] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 91.11% complete, ETA 00:03:24
# Fork: 1 of 2
# Warmup Iteration   1: 371.306 ns/op
# Warmup Iteration   2: 352.134 ns/op
# Warmup Iteration   3: 256.419 ns/op
Iteration   1: 427.666 ns/op
Iteration   2: 281.022 ns/op
Iteration   3: 262.341 ns/op
Iteration   4: 291.174 ns/op
Iteration   5: 262.544 ns/op
Iteration   6: 280.837 ns/op
Iteration   7: 282.225 ns/op
Iteration   8: 262.281 ns/op
Iteration   9: 267.212 ns/op
Iteration  10: 263.568 ns/op

# Run progress: 91.18% complete, ETA 00:03:23
# Fork: 2 of 2
# Warmup Iteration   1: 366.191 ns/op
# Warmup Iteration   2: 373.629 ns/op
# Warmup Iteration   3: 256.288 ns/op
Iteration   1: 491.925 ns/op
Iteration   2: 276.103 ns/op
Iteration   3: 260.597 ns/op
Iteration   4: 288.626 ns/op
Iteration   5: 260.276 ns/op
Iteration   6: 282.495 ns/op
Iteration   7: 280.362 ns/op
Iteration   8: 260.449 ns/op
Iteration   9: 263.898 ns/op
Iteration  10: 261.563 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  290.358 ±(99.9%) 51.914 ns/op [Average]
  (min, avg, max) = (260.276, 290.358, 491.925), stdev = 59.785
  CI (99.9%): [238.444, 342.273] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 91.25% complete, ETA 00:03:21
# Fork: 1 of 2
# Warmup Iteration   1: 539.248 ns/op
# Warmup Iteration   2: 13553.896 ns/op
# Warmup Iteration   3: 217.676 ns/op
Iteration   1: 1032.102 ns/op
Iteration   2: 664.160 ns/op
Iteration   3: 217.897 ns/op
Iteration   4: 34226.087 ns/op
Iteration   5: 21019.981 ns/op
Iteration   6: 1107.535 ns/op
Iteration   7: 290.267 ns/op
Iteration   8: 238.844 ns/op
Iteration   9: 267.119 ns/op
Iteration  10: 239.507 ns/op

# Run progress: 91.32% complete, ETA 00:03:19
# Fork: 2 of 2
# Warmup Iteration   1: 515.491 ns/op
# Warmup Iteration   2: 12224.895 ns/op
# Warmup Iteration   3: 211.472 ns/op
Iteration   1: 4271.231 ns/op
Iteration   2: 453.894 ns/op
Iteration   3: 212.626 ns/op
Iteration   4: 34126.865 ns/op
Iteration   5: 667.735 ns/op
Iteration   6: 280.252 ns/op
Iteration   7: 285.798 ns/op
Iteration   8: 237.774 ns/op
Iteration   9: 262.816 ns/op
Iteration  10: 239.157 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5017.082 ±(99.9%) 9547.384 ns/op [Average]
  (min, avg, max) = (212.626, 5017.082, 34226.087), stdev = 10994.782
  CI (99.9%): [≈ 0, 14564.466] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 91.39% complete, ETA 00:03:18
# Fork: 1 of 2
# Warmup Iteration   1: 231.849 ns/op
# Warmup Iteration   2: 419.658 ns/op
# Warmup Iteration   3: 148.152 ns/op
Iteration   1: 12360.518 ns/op
Iteration   2: 395.730 ns/op
Iteration   3: 168.023 ns/op
Iteration   4: 200.607 ns/op
Iteration   5: 168.828 ns/op
Iteration   6: 194.954 ns/op
Iteration   7: 441.930 ns/op
Iteration   8: 168.595 ns/op
Iteration   9: 198.364 ns/op
Iteration  10: 171.369 ns/op

# Run progress: 91.46% complete, ETA 00:03:16
# Fork: 2 of 2
# Warmup Iteration   1: 256.561 ns/op
# Warmup Iteration   2: 377.807 ns/op
# Warmup Iteration   3: 148.953 ns/op
Iteration   1: 377.156 ns/op
Iteration   2: 1623.008 ns/op
Iteration   3: 171.411 ns/op
Iteration   4: 205.648 ns/op
Iteration   5: 171.192 ns/op
Iteration   6: 201.781 ns/op
Iteration   7: 672.796 ns/op
Iteration   8: 169.924 ns/op
Iteration   9: 207.989 ns/op
Iteration  10: 173.288 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  922.156 ±(99.9%) 2355.723 ns/op [Average]
  (min, avg, max) = (168.023, 922.156, 12360.518), stdev = 2712.854
  CI (99.9%): [≈ 0, 3277.878] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 91.53% complete, ETA 00:03:15
# Fork: 1 of 2
# Warmup Iteration   1: 509.303 ns/op
# Warmup Iteration   2: 10128.099 ns/op
# Warmup Iteration   3: 288.120 ns/op
Iteration   1: 408.446 ns/op
Iteration   2: 1140.595 ns/op
Iteration   3: 294.496 ns/op
Iteration   4: 411.733 ns/op
Iteration   5: 315.164 ns/op
Iteration   6: 431.005 ns/op
Iteration   7: 433.979 ns/op
Iteration   8: 315.254 ns/op
Iteration   9: 414.206 ns/op
Iteration  10: 312.940 ns/op

# Run progress: 91.60% complete, ETA 00:03:13
# Fork: 2 of 2
# Warmup Iteration   1: 524.501 ns/op
# Warmup Iteration   2: 3771.038 ns/op
# Warmup Iteration   3: 290.943 ns/op
Iteration   1: 412.548 ns/op
Iteration   2: 3939.921 ns/op
Iteration   3: 301.981 ns/op
Iteration   4: 412.689 ns/op
Iteration   5: 315.848 ns/op
Iteration   6: 436.821 ns/op
Iteration   7: 440.318 ns/op
Iteration   8: 326.988 ns/op
Iteration   9: 416.849 ns/op
Iteration  10: 315.128 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  589.845 ±(99.9%) 702.273 ns/op [Average]
  (min, avg, max) = (294.496, 589.845, 3939.921), stdev = 808.739
  CI (99.9%): [≈ 0, 1292.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 91.67% complete, ETA 00:03:11
# Fork: 1 of 2
# Warmup Iteration   1: 19.352 ns/op
# Warmup Iteration   2: 22.755 ns/op
# Warmup Iteration   3: 15.146 ns/op
Iteration   1: 17.017 ns/op
Iteration   2: 17.141 ns/op
Iteration   3: 17.041 ns/op
Iteration   4: 15.244 ns/op
Iteration   5: 17.031 ns/op
Iteration   6: 14.977 ns/op
Iteration   7: 17.030 ns/op
Iteration   8: 17.025 ns/op
Iteration   9: 17.042 ns/op
Iteration  10: 15.204 ns/op

# Run progress: 91.74% complete, ETA 00:03:10
# Fork: 2 of 2
# Warmup Iteration   1: 19.770 ns/op
# Warmup Iteration   2: 22.116 ns/op
# Warmup Iteration   3: 15.144 ns/op
Iteration   1: 17.016 ns/op
Iteration   2: 17.114 ns/op
Iteration   3: 17.026 ns/op
Iteration   4: 15.276 ns/op
Iteration   5: 17.015 ns/op
Iteration   6: 14.974 ns/op
Iteration   7: 17.037 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.025 ns/op
Iteration  10: 15.213 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.473 ±(99.9%) 0.776 ns/op [Average]
  (min, avg, max) = (14.974, 16.473, 17.141), stdev = 0.893
  CI (99.9%): [15.697, 17.249] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 91.81% complete, ETA 00:03:08
# Fork: 1 of 2
# Warmup Iteration   1: 182.127 ns/op
# Warmup Iteration   2: 134.771 ns/op
# Warmup Iteration   3: 94.043 ns/op
Iteration   1: 95.494 ns/op
Iteration   2: 93.941 ns/op
Iteration   3: 95.537 ns/op
Iteration   4: 95.140 ns/op
Iteration   5: 95.451 ns/op
Iteration   6: 94.010 ns/op
Iteration   7: 95.517 ns/op
Iteration   8: 95.583 ns/op
Iteration   9: 95.545 ns/op
Iteration  10: 94.168 ns/op

# Run progress: 91.88% complete, ETA 00:03:07
# Fork: 2 of 2
# Warmup Iteration   1: 185.845 ns/op
# Warmup Iteration   2: 135.200 ns/op
# Warmup Iteration   3: 94.011 ns/op
Iteration   1: 95.260 ns/op
Iteration   2: 93.845 ns/op
Iteration   3: 95.427 ns/op
Iteration   4: 95.371 ns/op
Iteration   5: 95.027 ns/op
Iteration   6: 93.853 ns/op
Iteration   7: 95.408 ns/op
Iteration   8: 95.172 ns/op
Iteration   9: 95.435 ns/op
Iteration  10: 94.289 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  94.974 ±(99.9%) 0.576 ns/op [Average]
  (min, avg, max) = (93.845, 94.974, 95.583), stdev = 0.664
  CI (99.9%): [94.397, 95.550] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 91.94% complete, ETA 00:03:05
# Fork: 1 of 2
# Warmup Iteration   1: 64.057 ns/op
# Warmup Iteration   2: 66.112 ns/op
# Warmup Iteration   3: 45.782 ns/op
Iteration   1: 44.508 ns/op
Iteration   2: 45.798 ns/op
Iteration   3: 44.383 ns/op
Iteration   4: 46.221 ns/op
Iteration   5: 44.415 ns/op
Iteration   6: 45.827 ns/op
Iteration   7: 44.373 ns/op
Iteration   8: 44.396 ns/op
Iteration   9: 44.373 ns/op
Iteration  10: 45.760 ns/op

# Run progress: 92.01% complete, ETA 00:03:03
# Fork: 2 of 2
# Warmup Iteration   1: 64.898 ns/op
# Warmup Iteration   2: 71.536 ns/op
# Warmup Iteration   3: 45.773 ns/op
Iteration   1: 44.491 ns/op
Iteration   2: 45.803 ns/op
Iteration   3: 44.390 ns/op
Iteration   4: 46.251 ns/op
Iteration   5: 44.373 ns/op
Iteration   6: 45.806 ns/op
Iteration   7: 44.391 ns/op
Iteration   8: 44.393 ns/op
Iteration   9: 44.383 ns/op
Iteration  10: 45.777 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.006 ±(99.9%) 0.664 ns/op [Average]
  (min, avg, max) = (44.373, 45.006, 46.251), stdev = 0.765
  CI (99.9%): [44.342, 45.670] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 92.08% complete, ETA 00:03:02
# Fork: 1 of 2
# Warmup Iteration   1: 211.640 ns/op
# Warmup Iteration   2: 159.830 ns/op
# Warmup Iteration   3: 114.998 ns/op
Iteration   1: 113.651 ns/op
Iteration   2: 115.054 ns/op
Iteration   3: 113.650 ns/op
Iteration   4: 115.386 ns/op
Iteration   5: 113.713 ns/op
Iteration   6: 114.988 ns/op
Iteration   7: 113.658 ns/op
Iteration   8: 113.648 ns/op
Iteration   9: 113.621 ns/op
Iteration  10: 114.697 ns/op

# Run progress: 92.15% complete, ETA 00:03:00
# Fork: 2 of 2
# Warmup Iteration   1: 228.387 ns/op
# Warmup Iteration   2: 153.458 ns/op
# Warmup Iteration   3: 114.963 ns/op
Iteration   1: 113.703 ns/op
Iteration   2: 115.228 ns/op
Iteration   3: 113.881 ns/op
Iteration   4: 115.357 ns/op
Iteration   5: 113.733 ns/op
Iteration   6: 115.067 ns/op
Iteration   7: 113.662 ns/op
Iteration   8: 113.676 ns/op
Iteration   9: 113.704 ns/op
Iteration  10: 114.688 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.238 ±(99.9%) 0.614 ns/op [Average]
  (min, avg, max) = (113.621, 114.238, 115.386), stdev = 0.707
  CI (99.9%): [113.624, 114.853] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 92.22% complete, ETA 00:02:59
# Fork: 1 of 2
# Warmup Iteration   1: 66.728 ns/op
# Warmup Iteration   2: 74.501 ns/op
# Warmup Iteration   3: 49.138 ns/op
Iteration   1: 47.868 ns/op
Iteration   2: 49.092 ns/op
Iteration   3: 47.850 ns/op
Iteration   4: 49.097 ns/op
Iteration   5: 47.876 ns/op
Iteration   6: 49.053 ns/op
Iteration   7: 47.866 ns/op
Iteration   8: 47.904 ns/op
Iteration   9: 47.877 ns/op
Iteration  10: 49.075 ns/op

# Run progress: 92.29% complete, ETA 00:02:57
# Fork: 2 of 2
# Warmup Iteration   1: 66.381 ns/op
# Warmup Iteration   2: 78.166 ns/op
# Warmup Iteration   3: 49.137 ns/op
Iteration   1: 47.863 ns/op
Iteration   2: 49.065 ns/op
Iteration   3: 47.838 ns/op
Iteration   4: 49.115 ns/op
Iteration   5: 47.906 ns/op
Iteration   6: 49.034 ns/op
Iteration   7: 47.839 ns/op
Iteration   8: 47.900 ns/op
Iteration   9: 47.871 ns/op
Iteration  10: 49.110 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.355 ±(99.9%) 0.528 ns/op [Average]
  (min, avg, max) = (47.838, 48.355, 49.115), stdev = 0.608
  CI (99.9%): [47.827, 48.883] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 92.36% complete, ETA 00:02:55
# Fork: 1 of 2
# Warmup Iteration   1: 184.922 ns/op
# Warmup Iteration   2: 206.730 ns/op
# Warmup Iteration   3: 100.860 ns/op
Iteration   1: 102.294 ns/op
Iteration   2: 100.866 ns/op
Iteration   3: 102.518 ns/op
Iteration   4: 108.067 ns/op
Iteration   5: 107.814 ns/op
Iteration   6: 106.136 ns/op
Iteration   7: 107.597 ns/op
Iteration   8: 107.654 ns/op
Iteration   9: 107.707 ns/op
Iteration  10: 106.524 ns/op

# Run progress: 92.43% complete, ETA 00:02:54
# Fork: 2 of 2
# Warmup Iteration   1: 207.730 ns/op
# Warmup Iteration   2: 197.293 ns/op
# Warmup Iteration   3: 100.854 ns/op
Iteration   1: 102.315 ns/op
Iteration   2: 100.833 ns/op
Iteration   3: 102.564 ns/op
Iteration   4: 108.048 ns/op
Iteration   5: 107.718 ns/op
Iteration   6: 106.139 ns/op
Iteration   7: 107.649 ns/op
Iteration   8: 107.697 ns/op
Iteration   9: 107.708 ns/op
Iteration  10: 106.519 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  105.718 ±(99.9%) 2.312 ns/op [Average]
  (min, avg, max) = (100.833, 105.718, 108.067), stdev = 2.663
  CI (99.9%): [103.406, 108.031] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 92.50% complete, ETA 00:02:52
# Fork: 1 of 2
# Warmup Iteration   1: 19.347 ns/op
# Warmup Iteration   2: 20.699 ns/op
# Warmup Iteration   3: 15.143 ns/op
Iteration   1: 17.001 ns/op
Iteration   2: 17.112 ns/op
Iteration   3: 17.032 ns/op
Iteration   4: 15.293 ns/op
Iteration   5: 17.027 ns/op
Iteration   6: 14.965 ns/op
Iteration   7: 17.039 ns/op
Iteration   8: 17.012 ns/op
Iteration   9: 17.032 ns/op
Iteration  10: 15.189 ns/op

# Run progress: 92.57% complete, ETA 00:02:51
# Fork: 2 of 2
# Warmup Iteration   1: 19.657 ns/op
# Warmup Iteration   2: 20.875 ns/op
# Warmup Iteration   3: 15.146 ns/op
Iteration   1: 16.994 ns/op
Iteration   2: 17.097 ns/op
Iteration   3: 17.034 ns/op
Iteration   4: 15.250 ns/op
Iteration   5: 17.017 ns/op
Iteration   6: 14.975 ns/op
Iteration   7: 17.042 ns/op
Iteration   8: 16.994 ns/op
Iteration   9: 17.038 ns/op
Iteration  10: 15.213 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.468 ±(99.9%) 0.773 ns/op [Average]
  (min, avg, max) = (14.965, 16.468, 17.112), stdev = 0.890
  CI (99.9%): [15.695, 17.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 92.64% complete, ETA 00:02:49
# Fork: 1 of 2
# Warmup Iteration   1: 169.026 ns/op
# Warmup Iteration   2: 132.931 ns/op
# Warmup Iteration   3: 90.574 ns/op
Iteration   1: 92.131 ns/op
Iteration   2: 90.697 ns/op
Iteration   3: 92.031 ns/op
Iteration   4: 91.113 ns/op
Iteration   5: 92.150 ns/op
Iteration   6: 90.727 ns/op
Iteration   7: 92.265 ns/op
Iteration   8: 91.998 ns/op
Iteration   9: 91.968 ns/op
Iteration  10: 90.468 ns/op

# Run progress: 92.71% complete, ETA 00:02:47
# Fork: 2 of 2
# Warmup Iteration   1: 174.834 ns/op
# Warmup Iteration   2: 120.797 ns/op
# Warmup Iteration   3: 90.572 ns/op
Iteration   1: 92.137 ns/op
Iteration   2: 90.729 ns/op
Iteration   3: 92.053 ns/op
Iteration   4: 91.109 ns/op
Iteration   5: 92.007 ns/op
Iteration   6: 90.731 ns/op
Iteration   7: 92.085 ns/op
Iteration   8: 91.963 ns/op
Iteration   9: 92.059 ns/op
Iteration  10: 90.468 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.544 ±(99.9%) 0.591 ns/op [Average]
  (min, avg, max) = (90.468, 91.544, 92.265), stdev = 0.681
  CI (99.9%): [90.953, 92.136] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 92.78% complete, ETA 00:02:46
# Fork: 1 of 2
# Warmup Iteration   1: 64.956 ns/op
# Warmup Iteration   2: 66.325 ns/op
# Warmup Iteration   3: 45.832 ns/op
Iteration   1: 44.510 ns/op
Iteration   2: 45.778 ns/op
Iteration   3: 44.378 ns/op
Iteration   4: 46.263 ns/op
Iteration   5: 44.409 ns/op
Iteration   6: 45.847 ns/op
Iteration   7: 44.363 ns/op
Iteration   8: 44.385 ns/op
Iteration   9: 44.393 ns/op
Iteration  10: 45.773 ns/op

# Run progress: 92.85% complete, ETA 00:02:44
# Fork: 2 of 2
# Warmup Iteration   1: 65.255 ns/op
# Warmup Iteration   2: 71.503 ns/op
# Warmup Iteration   3: 45.783 ns/op
Iteration   1: 44.488 ns/op
Iteration   2: 45.793 ns/op
Iteration   3: 44.376 ns/op
Iteration   4: 46.245 ns/op
Iteration   5: 44.412 ns/op
Iteration   6: 45.813 ns/op
Iteration   7: 44.393 ns/op
Iteration   8: 44.431 ns/op
Iteration   9: 44.383 ns/op
Iteration  10: 45.773 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.010 ±(99.9%) 0.665 ns/op [Average]
  (min, avg, max) = (44.363, 45.010, 46.263), stdev = 0.766
  CI (99.9%): [44.345, 45.675] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 92.92% complete, ETA 00:02:43
# Fork: 1 of 2
# Warmup Iteration   1: 265.895 ns/op
# Warmup Iteration   2: 159.018 ns/op
# Warmup Iteration   3: 109.318 ns/op
Iteration   1: 108.092 ns/op
Iteration   2: 109.541 ns/op
Iteration   3: 107.762 ns/op
Iteration   4: 109.691 ns/op
Iteration   5: 107.754 ns/op
Iteration   6: 109.252 ns/op
Iteration   7: 108.082 ns/op
Iteration   8: 107.970 ns/op
Iteration   9: 108.050 ns/op
Iteration  10: 109.122 ns/op

# Run progress: 92.99% complete, ETA 00:02:41
# Fork: 2 of 2
# Warmup Iteration   1: 261.065 ns/op
# Warmup Iteration   2: 144.652 ns/op
# Warmup Iteration   3: 109.386 ns/op
Iteration   1: 107.819 ns/op
Iteration   2: 109.328 ns/op
Iteration   3: 108.032 ns/op
Iteration   4: 109.671 ns/op
Iteration   5: 107.755 ns/op
Iteration   6: 109.635 ns/op
Iteration   7: 108.046 ns/op
Iteration   8: 108.029 ns/op
Iteration   9: 108.069 ns/op
Iteration  10: 109.135 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  108.542 ±(99.9%) 0.659 ns/op [Average]
  (min, avg, max) = (107.754, 108.542, 109.691), stdev = 0.759
  CI (99.9%): [107.883, 109.201] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 93.06% complete, ETA 00:02:39
# Fork: 1 of 2
# Warmup Iteration   1: 66.639 ns/op
# Warmup Iteration   2: 68.925 ns/op
# Warmup Iteration   3: 49.149 ns/op
Iteration   1: 47.866 ns/op
Iteration   2: 49.074 ns/op
Iteration   3: 47.857 ns/op
Iteration   4: 49.126 ns/op
Iteration   5: 47.914 ns/op
Iteration   6: 49.050 ns/op
Iteration   7: 47.842 ns/op
Iteration   8: 47.912 ns/op
Iteration   9: 47.861 ns/op
Iteration  10: 49.068 ns/op

# Run progress: 93.13% complete, ETA 00:02:38
# Fork: 2 of 2
# Warmup Iteration   1: 67.267 ns/op
# Warmup Iteration   2: 68.949 ns/op
# Warmup Iteration   3: 49.176 ns/op
Iteration   1: 47.880 ns/op
Iteration   2: 49.095 ns/op
Iteration   3: 47.863 ns/op
Iteration   4: 49.096 ns/op
Iteration   5: 47.917 ns/op
Iteration   6: 48.991 ns/op
Iteration   7: 47.863 ns/op
Iteration   8: 47.899 ns/op
Iteration   9: 47.875 ns/op
Iteration  10: 49.114 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.358 ±(99.9%) 0.524 ns/op [Average]
  (min, avg, max) = (47.842, 48.358, 49.126), stdev = 0.603
  CI (99.9%): [47.835, 48.882] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 93.19% complete, ETA 00:02:36
# Fork: 1 of 2
# Warmup Iteration   1: 170.980 ns/op
# Warmup Iteration   2: 194.684 ns/op
# Warmup Iteration   3: 97.377 ns/op
Iteration   1: 99.032 ns/op
Iteration   2: 97.424 ns/op
Iteration   3: 98.953 ns/op
Iteration   4: 106.230 ns/op
Iteration   5: 105.718 ns/op
Iteration   6: 104.039 ns/op
Iteration   7: 105.644 ns/op
Iteration   8: 105.598 ns/op
Iteration   9: 105.638 ns/op
Iteration  10: 104.082 ns/op

# Run progress: 93.26% complete, ETA 00:02:35
# Fork: 2 of 2
# Warmup Iteration   1: 167.012 ns/op
# Warmup Iteration   2: 192.222 ns/op
# Warmup Iteration   3: 97.350 ns/op
Iteration   1: 99.056 ns/op
Iteration   2: 97.483 ns/op
Iteration   3: 98.979 ns/op
Iteration   4: 106.189 ns/op
Iteration   5: 105.558 ns/op
Iteration   6: 104.041 ns/op
Iteration   7: 105.664 ns/op
Iteration   8: 105.623 ns/op
Iteration   9: 105.712 ns/op
Iteration  10: 104.227 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.245 ±(99.9%) 2.856 ns/op [Average]
  (min, avg, max) = (97.424, 103.245, 106.230), stdev = 3.289
  CI (99.9%): [100.388, 106.101] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 93.33% complete, ETA 00:02:33
# Fork: 1 of 2
# Warmup Iteration   1: 19.372 ns/op
# Warmup Iteration   2: 22.600 ns/op
# Warmup Iteration   3: 15.140 ns/op
Iteration   1: 17.003 ns/op
Iteration   2: 17.155 ns/op
Iteration   3: 17.029 ns/op
Iteration   4: 15.298 ns/op
Iteration   5: 17.019 ns/op
Iteration   6: 14.958 ns/op
Iteration   7: 17.028 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.036 ns/op
Iteration  10: 15.217 ns/op

# Run progress: 93.40% complete, ETA 00:02:31
# Fork: 2 of 2
# Warmup Iteration   1: 20.018 ns/op
# Warmup Iteration   2: 20.755 ns/op
# Warmup Iteration   3: 15.150 ns/op
Iteration   1: 17.012 ns/op
Iteration   2: 17.126 ns/op
Iteration   3: 17.027 ns/op
Iteration   4: 15.252 ns/op
Iteration   5: 17.006 ns/op
Iteration   6: 14.960 ns/op
Iteration   7: 17.027 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.034 ns/op
Iteration  10: 15.217 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.472 ±(99.9%) 0.774 ns/op [Average]
  (min, avg, max) = (14.958, 16.472, 17.155), stdev = 0.892
  CI (99.9%): [15.698, 17.246] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 93.47% complete, ETA 00:02:30
# Fork: 1 of 2
# Warmup Iteration   1: 167.223 ns/op
# Warmup Iteration   2: 311.107 ns/op
# Warmup Iteration   3: 89.370 ns/op
Iteration   1: 90.562 ns/op
Iteration   2: 385.805 ns/op
Iteration   3: 93.085 ns/op
Iteration   4: 92.964 ns/op
Iteration   5: 93.167 ns/op
Iteration   6: 91.526 ns/op
Iteration   7: 92.353 ns/op
Iteration   8: 92.432 ns/op
Iteration   9: 93.166 ns/op
Iteration  10: 91.341 ns/op

# Run progress: 93.54% complete, ETA 00:02:28
# Fork: 2 of 2
# Warmup Iteration   1: 157.640 ns/op
# Warmup Iteration   2: 266.625 ns/op
# Warmup Iteration   3: 89.201 ns/op
Iteration   1: 90.536 ns/op
Iteration   2: 902.421 ns/op
Iteration   3: 93.142 ns/op
Iteration   4: 93.025 ns/op
Iteration   5: 93.247 ns/op
Iteration   6: 91.561 ns/op
Iteration   7: 92.248 ns/op
Iteration   8: 92.326 ns/op
Iteration   9: 93.154 ns/op
Iteration  10: 91.381 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  147.472 ±(99.9%) 164.467 ns/op [Average]
  (min, avg, max) = (90.536, 147.472, 902.421), stdev = 189.400
  CI (99.9%): [≈ 0, 311.939] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 93.61% complete, ETA 00:02:27
# Fork: 1 of 2
# Warmup Iteration   1: 64.909 ns/op
# Warmup Iteration   2: 63.808 ns/op
# Warmup Iteration   3: 45.772 ns/op
Iteration   1: 44.497 ns/op
Iteration   2: 45.794 ns/op
Iteration   3: 44.363 ns/op
Iteration   4: 46.339 ns/op
Iteration   5: 44.401 ns/op
Iteration   6: 45.831 ns/op
Iteration   7: 44.394 ns/op
Iteration   8: 44.422 ns/op
Iteration   9: 44.369 ns/op
Iteration  10: 45.784 ns/op

# Run progress: 93.68% complete, ETA 00:02:25
# Fork: 2 of 2
# Warmup Iteration   1: 64.366 ns/op
# Warmup Iteration   2: 67.832 ns/op
# Warmup Iteration   3: 45.789 ns/op
Iteration   1: 44.534 ns/op
Iteration   2: 45.790 ns/op
Iteration   3: 44.374 ns/op
Iteration   4: 46.231 ns/op
Iteration   5: 44.402 ns/op
Iteration   6: 45.797 ns/op
Iteration   7: 44.398 ns/op
Iteration   8: 44.423 ns/op
Iteration   9: 44.402 ns/op
Iteration  10: 45.772 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.016 ±(99.9%) 0.668 ns/op [Average]
  (min, avg, max) = (44.363, 45.016, 46.339), stdev = 0.769
  CI (99.9%): [44.348, 45.684] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 93.75% complete, ETA 00:02:23
# Fork: 1 of 2
# Warmup Iteration   1: 236.488 ns/op
# Warmup Iteration   2: 445.593 ns/op
# Warmup Iteration   3: 111.025 ns/op
Iteration   1: 10788.757 ns/op
Iteration   2: 176.746 ns/op
Iteration   3: 9350.908 ns/op
Iteration   4: 7086.482 ns/op
Iteration   5: 630.808 ns/op
Iteration   6: 116.510 ns/op
Iteration   7: 112.824 ns/op
Iteration   8: 113.376 ns/op
Iteration   9: 113.044 ns/op
Iteration  10: 114.373 ns/op

# Run progress: 93.82% complete, ETA 00:02:22
# Fork: 2 of 2
# Warmup Iteration   1: 238.189 ns/op
# Warmup Iteration   2: 1579.555 ns/op
# Warmup Iteration   3: 111.658 ns/op
Iteration   1: 6739.825 ns/op
Iteration   2: 7037.050 ns/op
Iteration   3: 9772.075 ns/op
Iteration   4: 6821.727 ns/op
Iteration   5: 400.910 ns/op
Iteration   6: 116.512 ns/op
Iteration   7: 112.836 ns/op
Iteration   8: 113.356 ns/op
Iteration   9: 113.073 ns/op
Iteration  10: 114.345 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2997.277 ±(99.9%) 3519.260 ns/op [Average]
  (min, avg, max) = (112.824, 2997.277, 10788.757), stdev = 4052.785
  CI (99.9%): [≈ 0, 6516.537] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 93.89% complete, ETA 00:02:20
# Fork: 1 of 2
# Warmup Iteration   1: 67.575 ns/op
# Warmup Iteration   2: 76.399 ns/op
# Warmup Iteration   3: 49.121 ns/op
Iteration   1: 47.980 ns/op
Iteration   2: 49.121 ns/op
Iteration   3: 47.857 ns/op
Iteration   4: 49.134 ns/op
Iteration   5: 47.919 ns/op
Iteration   6: 49.058 ns/op
Iteration   7: 47.857 ns/op
Iteration   8: 47.926 ns/op
Iteration   9: 47.859 ns/op
Iteration  10: 49.083 ns/op

# Run progress: 93.96% complete, ETA 00:02:19
# Fork: 2 of 2
# Warmup Iteration   1: 68.084 ns/op
# Warmup Iteration   2: 78.781 ns/op
# Warmup Iteration   3: 49.136 ns/op
Iteration   1: 47.882 ns/op
Iteration   2: 49.072 ns/op
Iteration   3: 47.863 ns/op
Iteration   4: 49.104 ns/op
Iteration   5: 47.915 ns/op
Iteration   6: 49.066 ns/op
Iteration   7: 47.877 ns/op
Iteration   8: 47.902 ns/op
Iteration   9: 47.877 ns/op
Iteration  10: 49.076 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.371 ±(99.9%) 0.523 ns/op [Average]
  (min, avg, max) = (47.857, 48.371, 49.134), stdev = 0.602
  CI (99.9%): [47.848, 48.894] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 94.03% complete, ETA 00:02:17
# Fork: 1 of 2
# Warmup Iteration   1: 174.646 ns/op
# Warmup Iteration   2: 288.985 ns/op
# Warmup Iteration   3: 99.503 ns/op
Iteration   1: 101.261 ns/op
Iteration   2: 101.192 ns/op
Iteration   3: 102.803 ns/op
Iteration   4: 106.863 ns/op
Iteration   5: 106.347 ns/op
Iteration   6: 104.715 ns/op
Iteration   7: 106.598 ns/op
Iteration   8: 104.994 ns/op
Iteration   9: 106.791 ns/op
Iteration  10: 103.460 ns/op

# Run progress: 94.10% complete, ETA 00:02:15
# Fork: 2 of 2
# Warmup Iteration   1: 166.798 ns/op
# Warmup Iteration   2: 299.558 ns/op
# Warmup Iteration   3: 99.467 ns/op
Iteration   1: 100.976 ns/op
Iteration   2: 100.793 ns/op
Iteration   3: 102.364 ns/op
Iteration   4: 106.779 ns/op
Iteration   5: 106.692 ns/op
Iteration   6: 105.198 ns/op
Iteration   7: 106.500 ns/op
Iteration   8: 104.532 ns/op
Iteration   9: 106.647 ns/op
Iteration  10: 103.332 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  104.442 ±(99.9%) 1.946 ns/op [Average]
  (min, avg, max) = (100.793, 104.442, 106.863), stdev = 2.241
  CI (99.9%): [102.496, 106.388] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 94.17% complete, ETA 00:02:14
# Fork: 1 of 2
# Warmup Iteration   1: 19.491 ns/op
# Warmup Iteration   2: 20.804 ns/op
# Warmup Iteration   3: 15.140 ns/op
Iteration   1: 17.006 ns/op
Iteration   2: 17.135 ns/op
Iteration   3: 17.031 ns/op
Iteration   4: 15.273 ns/op
Iteration   5: 17.025 ns/op
Iteration   6: 14.964 ns/op
Iteration   7: 17.026 ns/op
Iteration   8: 17.017 ns/op
Iteration   9: 17.033 ns/op
Iteration  10: 15.190 ns/op

# Run progress: 94.24% complete, ETA 00:02:12
# Fork: 2 of 2
# Warmup Iteration   1: 19.552 ns/op
# Warmup Iteration   2: 21.200 ns/op
# Warmup Iteration   3: 15.145 ns/op
Iteration   1: 17.011 ns/op
Iteration   2: 17.116 ns/op
Iteration   3: 17.028 ns/op
Iteration   4: 15.277 ns/op
Iteration   5: 17.015 ns/op
Iteration   6: 14.969 ns/op
Iteration   7: 17.035 ns/op
Iteration   8: 17.013 ns/op
Iteration   9: 17.031 ns/op
Iteration  10: 15.197 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.470 ±(99.9%) 0.776 ns/op [Average]
  (min, avg, max) = (14.964, 16.470, 17.135), stdev = 0.893
  CI (99.9%): [15.694, 17.245] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 94.31% complete, ETA 00:02:11
# Fork: 1 of 2
# Warmup Iteration   1: 165.804 ns/op
# Warmup Iteration   2: 125.437 ns/op
# Warmup Iteration   3: 90.597 ns/op
Iteration   1: 92.176 ns/op
Iteration   2: 90.741 ns/op
Iteration   3: 91.991 ns/op
Iteration   4: 91.174 ns/op
Iteration   5: 92.056 ns/op
Iteration   6: 91.042 ns/op
Iteration   7: 92.024 ns/op
Iteration   8: 92.039 ns/op
Iteration   9: 91.973 ns/op
Iteration  10: 90.443 ns/op

# Run progress: 94.38% complete, ETA 00:02:09
# Fork: 2 of 2
# Warmup Iteration   1: 160.412 ns/op
# Warmup Iteration   2: 124.547 ns/op
# Warmup Iteration   3: 90.591 ns/op
Iteration   1: 92.284 ns/op
Iteration   2: 90.712 ns/op
Iteration   3: 91.962 ns/op
Iteration   4: 91.149 ns/op
Iteration   5: 92.062 ns/op
Iteration   6: 90.722 ns/op
Iteration   7: 92.009 ns/op
Iteration   8: 92.057 ns/op
Iteration   9: 91.976 ns/op
Iteration  10: 90.447 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.552 ±(99.9%) 0.569 ns/op [Average]
  (min, avg, max) = (90.443, 91.552, 92.284), stdev = 0.655
  CI (99.9%): [90.983, 92.121] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 94.44% complete, ETA 00:02:07
# Fork: 1 of 2
# Warmup Iteration   1: 63.812 ns/op
# Warmup Iteration   2: 64.507 ns/op
# Warmup Iteration   3: 45.768 ns/op
Iteration   1: 44.498 ns/op
Iteration   2: 45.835 ns/op
Iteration   3: 44.375 ns/op
Iteration   4: 46.239 ns/op
Iteration   5: 44.406 ns/op
Iteration   6: 45.812 ns/op
Iteration   7: 44.393 ns/op
Iteration   8: 44.419 ns/op
Iteration   9: 44.380 ns/op
Iteration  10: 45.774 ns/op

# Run progress: 94.51% complete, ETA 00:02:06
# Fork: 2 of 2
# Warmup Iteration   1: 65.342 ns/op
# Warmup Iteration   2: 66.156 ns/op
# Warmup Iteration   3: 45.780 ns/op
Iteration   1: 44.503 ns/op
Iteration   2: 45.837 ns/op
Iteration   3: 44.390 ns/op
Iteration   4: 46.308 ns/op
Iteration   5: 44.414 ns/op
Iteration   6: 45.860 ns/op
Iteration   7: 44.372 ns/op
Iteration   8: 44.386 ns/op
Iteration   9: 44.386 ns/op
Iteration  10: 45.784 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.019 ±(99.9%) 0.674 ns/op [Average]
  (min, avg, max) = (44.372, 45.019, 46.308), stdev = 0.776
  CI (99.9%): [44.345, 45.692] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 94.58% complete, ETA 00:02:04
# Fork: 1 of 2
# Warmup Iteration   1: 289.505 ns/op
# Warmup Iteration   2: 161.043 ns/op
# Warmup Iteration   3: 112.365 ns/op
Iteration   1: 111.170 ns/op
Iteration   2: 112.592 ns/op
Iteration   3: 111.204 ns/op
Iteration   4: 112.652 ns/op
Iteration   5: 110.527 ns/op
Iteration   6: 112.291 ns/op
Iteration   7: 110.988 ns/op
Iteration   8: 111.125 ns/op
Iteration   9: 111.150 ns/op
Iteration  10: 112.131 ns/op

# Run progress: 94.65% complete, ETA 00:02:03
# Fork: 2 of 2
# Warmup Iteration   1: 316.291 ns/op
# Warmup Iteration   2: 146.672 ns/op
# Warmup Iteration   3: 109.669 ns/op
Iteration   1: 107.766 ns/op
Iteration   2: 109.557 ns/op
Iteration   3: 108.061 ns/op
Iteration   4: 109.476 ns/op
Iteration   5: 108.041 ns/op
Iteration   6: 109.298 ns/op
Iteration   7: 108.022 ns/op
Iteration   8: 107.755 ns/op
Iteration   9: 108.338 ns/op
Iteration  10: 108.821 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  110.048 ±(99.9%) 1.502 ns/op [Average]
  (min, avg, max) = (107.755, 110.048, 112.652), stdev = 1.729
  CI (99.9%): [108.547, 111.550] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 94.72% complete, ETA 00:02:01
# Fork: 1 of 2
# Warmup Iteration   1: 68.125 ns/op
# Warmup Iteration   2: 70.603 ns/op
# Warmup Iteration   3: 49.126 ns/op
Iteration   1: 47.883 ns/op
Iteration   2: 49.097 ns/op
Iteration   3: 47.861 ns/op
Iteration   4: 49.097 ns/op
Iteration   5: 47.898 ns/op
Iteration   6: 49.033 ns/op
Iteration   7: 47.856 ns/op
Iteration   8: 47.915 ns/op
Iteration   9: 47.860 ns/op
Iteration  10: 49.037 ns/op

# Run progress: 94.79% complete, ETA 00:01:59
# Fork: 2 of 2
# Warmup Iteration   1: 66.775 ns/op
# Warmup Iteration   2: 76.202 ns/op
# Warmup Iteration   3: 49.131 ns/op
Iteration   1: 47.861 ns/op
Iteration   2: 49.147 ns/op
Iteration   3: 47.860 ns/op
Iteration   4: 49.117 ns/op
Iteration   5: 47.907 ns/op
Iteration   6: 49.034 ns/op
Iteration   7: 47.864 ns/op
Iteration   8: 47.919 ns/op
Iteration   9: 47.858 ns/op
Iteration  10: 49.113 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.361 ±(99.9%) 0.527 ns/op [Average]
  (min, avg, max) = (47.856, 48.361, 49.147), stdev = 0.607
  CI (99.9%): [47.834, 48.888] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 94.86% complete, ETA 00:01:58
# Fork: 1 of 2
# Warmup Iteration   1: 169.866 ns/op
# Warmup Iteration   2: 193.362 ns/op
# Warmup Iteration   3: 97.404 ns/op
Iteration   1: 99.071 ns/op
Iteration   2: 97.504 ns/op
Iteration   3: 99.079 ns/op
Iteration   4: 106.233 ns/op
Iteration   5: 105.718 ns/op
Iteration   6: 104.091 ns/op
Iteration   7: 105.654 ns/op
Iteration   8: 105.722 ns/op
Iteration   9: 105.641 ns/op
Iteration  10: 104.226 ns/op

# Run progress: 94.93% complete, ETA 00:01:56
# Fork: 2 of 2
# Warmup Iteration   1: 167.982 ns/op
# Warmup Iteration   2: 192.372 ns/op
# Warmup Iteration   3: 97.293 ns/op
Iteration   1: 98.954 ns/op
Iteration   2: 97.467 ns/op
Iteration   3: 99.023 ns/op
Iteration   4: 106.257 ns/op
Iteration   5: 105.595 ns/op
Iteration   6: 104.024 ns/op
Iteration   7: 105.533 ns/op
Iteration   8: 105.665 ns/op
Iteration   9: 105.728 ns/op
Iteration  10: 104.112 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.265 ±(99.9%) 2.852 ns/op [Average]
  (min, avg, max) = (97.467, 103.265, 106.257), stdev = 3.285
  CI (99.9%): [100.413, 106.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 95.00% complete, ETA 00:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 19.285 ns/op
# Warmup Iteration   2: 22.808 ns/op
# Warmup Iteration   3: 15.144 ns/op
Iteration   1: 17.001 ns/op
Iteration   2: 17.117 ns/op
Iteration   3: 17.039 ns/op
Iteration   4: 15.285 ns/op
Iteration   5: 17.023 ns/op
Iteration   6: 14.972 ns/op
Iteration   7: 17.042 ns/op
Iteration   8: 17.022 ns/op
Iteration   9: 17.020 ns/op
Iteration  10: 15.197 ns/op

# Run progress: 95.07% complete, ETA 00:01:53
# Fork: 2 of 2
# Warmup Iteration   1: 19.511 ns/op
# Warmup Iteration   2: 22.626 ns/op
# Warmup Iteration   3: 15.145 ns/op
Iteration   1: 17.023 ns/op
Iteration   2: 17.105 ns/op
Iteration   3: 17.043 ns/op
Iteration   4: 15.273 ns/op
Iteration   5: 17.012 ns/op
Iteration   6: 14.969 ns/op
Iteration   7: 17.034 ns/op
Iteration   8: 17.019 ns/op
Iteration   9: 17.038 ns/op
Iteration  10: 15.208 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.472 ±(99.9%) 0.774 ns/op [Average]
  (min, avg, max) = (14.969, 16.472, 17.117), stdev = 0.891
  CI (99.9%): [15.698, 17.246] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 95.14% complete, ETA 00:01:51
# Fork: 1 of 2
# Warmup Iteration   1: 169.653 ns/op
# Warmup Iteration   2: 133.254 ns/op
# Warmup Iteration   3: 90.598 ns/op
Iteration   1: 92.063 ns/op
Iteration   2: 90.709 ns/op
Iteration   3: 92.185 ns/op
Iteration   4: 91.001 ns/op
Iteration   5: 91.916 ns/op
Iteration   6: 90.730 ns/op
Iteration   7: 92.013 ns/op
Iteration   8: 91.998 ns/op
Iteration   9: 91.993 ns/op
Iteration  10: 90.421 ns/op

# Run progress: 95.21% complete, ETA 00:01:50
# Fork: 2 of 2
# Warmup Iteration   1: 171.858 ns/op
# Warmup Iteration   2: 133.542 ns/op
# Warmup Iteration   3: 90.606 ns/op
Iteration   1: 92.072 ns/op
Iteration   2: 90.733 ns/op
Iteration   3: 92.166 ns/op
Iteration   4: 90.976 ns/op
Iteration   5: 92.101 ns/op
Iteration   6: 90.737 ns/op
Iteration   7: 92.352 ns/op
Iteration   8: 92.390 ns/op
Iteration   9: 92.093 ns/op
Iteration  10: 90.459 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  91.555 ±(99.9%) 0.624 ns/op [Average]
  (min, avg, max) = (90.421, 91.555, 92.390), stdev = 0.719
  CI (99.9%): [90.931, 92.179] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 95.28% complete, ETA 00:01:48
# Fork: 1 of 2
# Warmup Iteration   1: 64.827 ns/op
# Warmup Iteration   2: 64.557 ns/op
# Warmup Iteration   3: 45.781 ns/op
Iteration   1: 44.513 ns/op
Iteration   2: 45.797 ns/op
Iteration   3: 44.526 ns/op
Iteration   4: 46.244 ns/op
Iteration   5: 44.354 ns/op
Iteration   6: 45.816 ns/op
Iteration   7: 44.409 ns/op
Iteration   8: 44.364 ns/op
Iteration   9: 44.385 ns/op
Iteration  10: 45.812 ns/op

# Run progress: 95.35% complete, ETA 00:01:47
# Fork: 2 of 2
# Warmup Iteration   1: 64.601 ns/op
# Warmup Iteration   2: 63.425 ns/op
# Warmup Iteration   3: 45.770 ns/op
Iteration   1: 44.483 ns/op
Iteration   2: 45.800 ns/op
Iteration   3: 44.386 ns/op
Iteration   4: 46.321 ns/op
Iteration   5: 44.397 ns/op
Iteration   6: 45.797 ns/op
Iteration   7: 44.379 ns/op
Iteration   8: 44.428 ns/op
Iteration   9: 44.381 ns/op
Iteration  10: 45.857 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  45.023 ±(99.9%) 0.672 ns/op [Average]
  (min, avg, max) = (44.354, 45.023, 46.321), stdev = 0.774
  CI (99.9%): [44.351, 45.694] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 95.42% complete, ETA 00:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 286.868 ns/op
# Warmup Iteration   2: 152.325 ns/op
# Warmup Iteration   3: 109.971 ns/op
Iteration   1: 108.608 ns/op
Iteration   2: 110.204 ns/op
Iteration   3: 108.686 ns/op
Iteration   4: 110.484 ns/op
Iteration   5: 108.511 ns/op
Iteration   6: 109.857 ns/op
Iteration   7: 108.701 ns/op
Iteration   8: 108.512 ns/op
Iteration   9: 108.633 ns/op
Iteration  10: 109.855 ns/op

# Run progress: 95.49% complete, ETA 00:01:43
# Fork: 2 of 2
# Warmup Iteration   1: 341.034 ns/op
# Warmup Iteration   2: 153.220 ns/op
# Warmup Iteration   3: 110.097 ns/op
Iteration   1: 108.633 ns/op
Iteration   2: 110.156 ns/op
Iteration   3: 108.680 ns/op
Iteration   4: 110.554 ns/op
Iteration   5: 108.611 ns/op
Iteration   6: 110.038 ns/op
Iteration   7: 108.597 ns/op
Iteration   8: 108.714 ns/op
Iteration   9: 108.963 ns/op
Iteration  10: 109.834 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  109.242 ±(99.9%) 0.663 ns/op [Average]
  (min, avg, max) = (108.511, 109.242, 110.554), stdev = 0.763
  CI (99.9%): [108.579, 109.904] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 95.56% complete, ETA 00:01:42
# Fork: 1 of 2
# Warmup Iteration   1: 66.975 ns/op
# Warmup Iteration   2: 68.827 ns/op
# Warmup Iteration   3: 49.142 ns/op
Iteration   1: 47.878 ns/op
Iteration   2: 49.091 ns/op
Iteration   3: 47.862 ns/op
Iteration   4: 49.123 ns/op
Iteration   5: 47.898 ns/op
Iteration   6: 49.008 ns/op
Iteration   7: 47.861 ns/op
Iteration   8: 47.899 ns/op
Iteration   9: 47.871 ns/op
Iteration  10: 49.101 ns/op

# Run progress: 95.63% complete, ETA 00:01:40
# Fork: 2 of 2
# Warmup Iteration   1: 67.383 ns/op
# Warmup Iteration   2: 71.084 ns/op
# Warmup Iteration   3: 49.117 ns/op
Iteration   1: 47.866 ns/op
Iteration   2: 49.101 ns/op
Iteration   3: 47.870 ns/op
Iteration   4: 49.107 ns/op
Iteration   5: 47.916 ns/op
Iteration   6: 49.061 ns/op
Iteration   7: 47.868 ns/op
Iteration   8: 47.915 ns/op
Iteration   9: 47.866 ns/op
Iteration  10: 49.103 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  48.363 ±(99.9%) 0.527 ns/op [Average]
  (min, avg, max) = (47.861, 48.363, 49.123), stdev = 0.607
  CI (99.9%): [47.836, 48.890] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 95.69% complete, ETA 00:01:39
# Fork: 1 of 2
# Warmup Iteration   1: 167.097 ns/op
# Warmup Iteration   2: 193.358 ns/op
# Warmup Iteration   3: 97.302 ns/op
Iteration   1: 99.071 ns/op
Iteration   2: 97.466 ns/op
Iteration   3: 99.024 ns/op
Iteration   4: 106.241 ns/op
Iteration   5: 105.576 ns/op
Iteration   6: 104.096 ns/op
Iteration   7: 105.690 ns/op
Iteration   8: 105.637 ns/op
Iteration   9: 105.627 ns/op
Iteration  10: 104.153 ns/op

# Run progress: 95.76% complete, ETA 00:01:37
# Fork: 2 of 2
# Warmup Iteration   1: 164.371 ns/op
# Warmup Iteration   2: 183.827 ns/op
# Warmup Iteration   3: 97.383 ns/op
Iteration   1: 99.094 ns/op
Iteration   2: 97.389 ns/op
Iteration   3: 98.917 ns/op
Iteration   4: 106.224 ns/op
Iteration   5: 105.685 ns/op
Iteration   6: 104.088 ns/op
Iteration   7: 105.653 ns/op
Iteration   8: 105.549 ns/op
Iteration   9: 105.642 ns/op
Iteration  10: 104.237 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  103.253 ±(99.9%) 2.856 ns/op [Average]
  (min, avg, max) = (97.389, 103.253, 106.241), stdev = 3.289
  CI (99.9%): [100.397, 106.109] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 95.83% complete, ETA 00:01:35
# Fork: 1 of 2
# Warmup Iteration   1: 19.339 ns/op
# Warmup Iteration   2: 22.913 ns/op
# Warmup Iteration   3: 15.027 ns/op
Iteration   1: 17.076 ns/op
Iteration   2: 15.272 ns/op
Iteration   3: 17.003 ns/op
Iteration   4: 15.016 ns/op
Iteration   5: 17.108 ns/op
Iteration   6: 15.393 ns/op
Iteration   7: 17.027 ns/op
Iteration   8: 17.015 ns/op
Iteration   9: 17.027 ns/op
Iteration  10: 14.979 ns/op

# Run progress: 95.90% complete, ETA 00:01:34
# Fork: 2 of 2
# Warmup Iteration   1: 19.554 ns/op
# Warmup Iteration   2: 22.548 ns/op
# Warmup Iteration   3: 15.022 ns/op
Iteration   1: 17.074 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.005 ns/op
Iteration   4: 15.019 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.389 ns/op
Iteration   7: 17.024 ns/op
Iteration   8: 17.014 ns/op
Iteration   9: 17.022 ns/op
Iteration  10: 14.982 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.826 ns/op [Average]
  (min, avg, max) = (14.979, 16.291, 17.109), stdev = 0.951
  CI (99.9%): [15.466, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 95.97% complete, ETA 00:01:32
# Fork: 1 of 2
# Warmup Iteration   1: 850.405 ns/op
# Warmup Iteration   2: 379.424 ns/op
# Warmup Iteration   3: 297.710 ns/op
Iteration   1: 299.430 ns/op
Iteration   2: 298.996 ns/op
Iteration   3: 309.439 ns/op
Iteration   4: 298.130 ns/op
Iteration   5: 300.109 ns/op
Iteration   6: 298.582 ns/op
Iteration   7: 299.356 ns/op
Iteration   8: 300.027 ns/op
Iteration   9: 300.422 ns/op
Iteration  10: 298.768 ns/op

# Run progress: 96.04% complete, ETA 00:01:31
# Fork: 2 of 2
# Warmup Iteration   1: 707.742 ns/op
# Warmup Iteration   2: 399.631 ns/op
# Warmup Iteration   3: 295.568 ns/op
Iteration   1: 296.536 ns/op
Iteration   2: 296.229 ns/op
Iteration   3: 295.584 ns/op
Iteration   4: 295.404 ns/op
Iteration   5: 297.661 ns/op
Iteration   6: 295.277 ns/op
Iteration   7: 297.360 ns/op
Iteration   8: 297.990 ns/op
Iteration   9: 297.608 ns/op
Iteration  10: 295.548 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  298.423 ±(99.9%) 2.669 ns/op [Average]
  (min, avg, max) = (295.277, 298.423, 309.439), stdev = 3.073
  CI (99.9%): [295.754, 301.092] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 96.11% complete, ETA 00:01:29
# Fork: 1 of 2
# Warmup Iteration   1: 565.316 ns/op
# Warmup Iteration   2: 528.529 ns/op
# Warmup Iteration   3: 394.382 ns/op
Iteration   1: 393.506 ns/op
Iteration   2: 394.391 ns/op
Iteration   3: 393.584 ns/op
Iteration   4: 395.549 ns/op
Iteration   5: 393.465 ns/op
Iteration   6: 394.494 ns/op
Iteration   7: 393.504 ns/op
Iteration   8: 393.416 ns/op
Iteration   9: 393.499 ns/op
Iteration  10: 394.774 ns/op

# Run progress: 96.18% complete, ETA 00:01:27
# Fork: 2 of 2
# Warmup Iteration   1: 552.095 ns/op
# Warmup Iteration   2: 547.029 ns/op
# Warmup Iteration   3: 386.212 ns/op
Iteration   1: 384.567 ns/op
Iteration   2: 386.318 ns/op
Iteration   3: 384.428 ns/op
Iteration   4: 387.421 ns/op
Iteration   5: 384.546 ns/op
Iteration   6: 386.164 ns/op
Iteration   7: 384.437 ns/op
Iteration   8: 384.604 ns/op
Iteration   9: 384.456 ns/op
Iteration  10: 386.502 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  389.681 ±(99.9%) 3.947 ns/op [Average]
  (min, avg, max) = (384.428, 389.681, 395.549), stdev = 4.546
  CI (99.9%): [385.734, 393.629] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 96.25% complete, ETA 00:01:26
# Fork: 1 of 2
# Warmup Iteration   1: 7397.816 ns/op
# Warmup Iteration   2: 464.109 ns/op
# Warmup Iteration   3: 319.473 ns/op
Iteration   1: 317.969 ns/op
Iteration   2: 320.163 ns/op
Iteration   3: 317.953 ns/op
Iteration   4: 323.517 ns/op
Iteration   5: 317.684 ns/op
Iteration   6: 319.159 ns/op
Iteration   7: 317.856 ns/op
Iteration   8: 317.901 ns/op
Iteration   9: 317.779 ns/op
Iteration  10: 319.421 ns/op

# Run progress: 96.32% complete, ETA 00:01:24
# Fork: 2 of 2
# Warmup Iteration   1: 7698.302 ns/op
# Warmup Iteration   2: 482.089 ns/op
# Warmup Iteration   3: 316.921 ns/op
Iteration   1: 314.996 ns/op
Iteration   2: 317.547 ns/op
Iteration   3: 315.226 ns/op
Iteration   4: 319.276 ns/op
Iteration   5: 315.501 ns/op
Iteration   6: 317.231 ns/op
Iteration   7: 315.231 ns/op
Iteration   8: 315.223 ns/op
Iteration   9: 315.215 ns/op
Iteration  10: 317.195 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  317.602 ±(99.9%) 1.833 ns/op [Average]
  (min, avg, max) = (314.996, 317.602, 323.517), stdev = 2.111
  CI (99.9%): [315.769, 319.435] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 96.39% complete, ETA 00:01:23
# Fork: 1 of 2
# Warmup Iteration   1: 749.799 ns/op
# Warmup Iteration   2: 403.774 ns/op
# Warmup Iteration   3: 316.184 ns/op
Iteration   1: 314.306 ns/op
Iteration   2: 316.828 ns/op
Iteration   3: 314.242 ns/op
Iteration   4: 317.138 ns/op
Iteration   5: 314.631 ns/op
Iteration   6: 316.025 ns/op
Iteration   7: 314.407 ns/op
Iteration   8: 314.523 ns/op
Iteration   9: 314.354 ns/op
Iteration  10: 315.880 ns/op

# Run progress: 96.46% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: 611.712 ns/op
# Warmup Iteration   2: 427.364 ns/op
# Warmup Iteration   3: 315.690 ns/op
Iteration   1: 313.934 ns/op
Iteration   2: 316.340 ns/op
Iteration   3: 314.115 ns/op
Iteration   4: 317.396 ns/op
Iteration   5: 313.937 ns/op
Iteration   6: 315.832 ns/op
Iteration   7: 314.060 ns/op
Iteration   8: 313.843 ns/op
Iteration   9: 314.048 ns/op
Iteration  10: 316.015 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  315.093 ±(99.9%) 1.039 ns/op [Average]
  (min, avg, max) = (313.843, 315.093, 317.396), stdev = 1.196
  CI (99.9%): [314.054, 316.131] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 96.53% complete, ETA 00:01:19
# Fork: 1 of 2
# Warmup Iteration   1: 3044.576 ns/op
# Warmup Iteration   2: 2180.492 ns/op
# Warmup Iteration   3: 1584.221 ns/op
Iteration   1: 1584.353 ns/op
Iteration   2: 1583.761 ns/op
Iteration   3: 1586.152 ns/op
Iteration   4: 1597.715 ns/op
Iteration   5: 1595.535 ns/op
Iteration   6: 1594.196 ns/op
Iteration   7: 1597.192 ns/op
Iteration   8: 1596.498 ns/op
Iteration   9: 1596.346 ns/op
Iteration  10: 1595.725 ns/op

# Run progress: 96.60% complete, ETA 00:01:18
# Fork: 2 of 2
# Warmup Iteration   1: 2597.205 ns/op
# Warmup Iteration   2: 2151.375 ns/op
# Warmup Iteration   3: 1548.817 ns/op
Iteration   1: 1547.067 ns/op
Iteration   2: 1549.519 ns/op
Iteration   3: 1548.583 ns/op
Iteration   4: 1566.588 ns/op
Iteration   5: 1562.606 ns/op
Iteration   6: 1564.183 ns/op
Iteration   7: 1562.092 ns/op
Iteration   8: 1562.560 ns/op
Iteration   9: 1562.675 ns/op
Iteration  10: 1562.110 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1575.773 ±(99.9%) 16.099 ns/op [Average]
  (min, avg, max) = (1547.067, 1575.773, 1597.715), stdev = 18.540
  CI (99.9%): [1559.674, 1591.872] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 96.67% complete, ETA 00:01:16
# Fork: 1 of 2
# Warmup Iteration   1: 19.308 ns/op
# Warmup Iteration   2: 20.980 ns/op
# Warmup Iteration   3: 15.034 ns/op
Iteration   1: 17.064 ns/op
Iteration   2: 15.267 ns/op
Iteration   3: 17.026 ns/op
Iteration   4: 15.029 ns/op
Iteration   5: 17.106 ns/op
Iteration   6: 15.376 ns/op
Iteration   7: 17.011 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.004 ns/op
Iteration  10: 14.981 ns/op

# Run progress: 96.74% complete, ETA 00:01:15
# Fork: 2 of 2
# Warmup Iteration   1: 19.531 ns/op
# Warmup Iteration   2: 23.032 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.067 ns/op
Iteration   2: 15.277 ns/op
Iteration   3: 17.004 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.112 ns/op
Iteration   6: 15.397 ns/op
Iteration   7: 17.020 ns/op
Iteration   8: 17.020 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.977 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (14.977, 16.290, 17.112), stdev = 0.949
  CI (99.9%): [15.466, 17.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 96.81% complete, ETA 00:01:13
# Fork: 1 of 2
# Warmup Iteration   1: 595.733 ns/op
# Warmup Iteration   2: 272.130 ns/op
# Warmup Iteration   3: 203.116 ns/op
Iteration   1: 204.231 ns/op
Iteration   2: 203.019 ns/op
Iteration   3: 204.331 ns/op
Iteration   4: 203.238 ns/op
Iteration   5: 204.596 ns/op
Iteration   6: 202.865 ns/op
Iteration   7: 203.976 ns/op
Iteration   8: 204.131 ns/op
Iteration   9: 204.274 ns/op
Iteration  10: 202.868 ns/op

# Run progress: 96.88% complete, ETA 00:01:11
# Fork: 2 of 2
# Warmup Iteration   1: 580.282 ns/op
# Warmup Iteration   2: 274.055 ns/op
# Warmup Iteration   3: 202.920 ns/op
Iteration   1: 203.866 ns/op
Iteration   2: 202.584 ns/op
Iteration   3: 203.791 ns/op
Iteration   4: 203.585 ns/op
Iteration   5: 203.908 ns/op
Iteration   6: 202.956 ns/op
Iteration   7: 203.808 ns/op
Iteration   8: 203.853 ns/op
Iteration   9: 203.995 ns/op
Iteration  10: 202.528 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  203.620 ±(99.9%) 0.542 ns/op [Average]
  (min, avg, max) = (202.528, 203.620, 204.596), stdev = 0.624
  CI (99.9%): [203.078, 204.162] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 96.94% complete, ETA 00:01:10
# Fork: 1 of 2
# Warmup Iteration   1: 170.870 ns/op
# Warmup Iteration   2: 162.463 ns/op
# Warmup Iteration   3: 120.524 ns/op
Iteration   1: 122.133 ns/op
Iteration   2: 120.386 ns/op
Iteration   3: 119.094 ns/op
Iteration   4: 121.007 ns/op
Iteration   5: 119.042 ns/op
Iteration   6: 120.364 ns/op
Iteration   7: 119.029 ns/op
Iteration   8: 119.074 ns/op
Iteration   9: 119.075 ns/op
Iteration  10: 120.355 ns/op

# Run progress: 97.01% complete, ETA 00:01:08
# Fork: 2 of 2
# Warmup Iteration   1: 169.884 ns/op
# Warmup Iteration   2: 157.005 ns/op
# Warmup Iteration   3: 126.939 ns/op
Iteration   1: 122.212 ns/op
Iteration   2: 127.937 ns/op
Iteration   3: 119.136 ns/op
Iteration   4: 127.999 ns/op
Iteration   5: 119.076 ns/op
Iteration   6: 128.093 ns/op
Iteration   7: 119.024 ns/op
Iteration   8: 119.176 ns/op
Iteration   9: 119.059 ns/op
Iteration  10: 128.443 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  121.486 ±(99.9%) 3.080 ns/op [Average]
  (min, avg, max) = (119.024, 121.486, 128.443), stdev = 3.547
  CI (99.9%): [118.406, 124.565] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 97.08% complete, ETA 00:01:07
# Fork: 1 of 2
# Warmup Iteration   1: 1546.910 ns/op
# Warmup Iteration   2: 299.130 ns/op
# Warmup Iteration   3: 202.021 ns/op
Iteration   1: 201.069 ns/op
Iteration   2: 202.322 ns/op
Iteration   3: 200.874 ns/op
Iteration   4: 203.507 ns/op
Iteration   5: 200.835 ns/op
Iteration   6: 202.309 ns/op
Iteration   7: 201.099 ns/op
Iteration   8: 200.963 ns/op
Iteration   9: 201.246 ns/op
Iteration  10: 202.120 ns/op

# Run progress: 97.15% complete, ETA 00:01:05
# Fork: 2 of 2
# Warmup Iteration   1: 1352.696 ns/op
# Warmup Iteration   2: 276.243 ns/op
# Warmup Iteration   3: 198.405 ns/op
Iteration   1: 204.876 ns/op
Iteration   2: 198.630 ns/op
Iteration   3: 205.329 ns/op
Iteration   4: 200.203 ns/op
Iteration   5: 204.934 ns/op
Iteration   6: 198.396 ns/op
Iteration   7: 204.192 ns/op
Iteration   8: 204.619 ns/op
Iteration   9: 204.671 ns/op
Iteration  10: 198.228 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  202.021 ±(99.9%) 1.962 ns/op [Average]
  (min, avg, max) = (198.228, 202.021, 205.329), stdev = 2.259
  CI (99.9%): [200.059, 203.983] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 97.22% complete, ETA 00:01:03
# Fork: 1 of 2
# Warmup Iteration   1: 191.046 ns/op
# Warmup Iteration   2: 153.999 ns/op
# Warmup Iteration   3: 118.520 ns/op
Iteration   1: 117.238 ns/op
Iteration   2: 118.955 ns/op
Iteration   3: 117.632 ns/op
Iteration   4: 118.648 ns/op
Iteration   5: 117.926 ns/op
Iteration   6: 118.653 ns/op
Iteration   7: 118.656 ns/op
Iteration   8: 117.251 ns/op
Iteration   9: 117.576 ns/op
Iteration  10: 118.328 ns/op

# Run progress: 97.29% complete, ETA 00:01:02
# Fork: 2 of 2
# Warmup Iteration   1: 180.259 ns/op
# Warmup Iteration   2: 153.771 ns/op
# Warmup Iteration   3: 118.190 ns/op
Iteration   1: 117.691 ns/op
Iteration   2: 118.342 ns/op
Iteration   3: 117.576 ns/op
Iteration   4: 118.380 ns/op
Iteration   5: 116.855 ns/op
Iteration   6: 118.563 ns/op
Iteration   7: 116.741 ns/op
Iteration   8: 117.188 ns/op
Iteration   9: 117.733 ns/op
Iteration  10: 118.156 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  117.904 ±(99.9%) 0.566 ns/op [Average]
  (min, avg, max) = (116.741, 117.904, 118.955), stdev = 0.652
  CI (99.9%): [117.338, 118.471] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 97.36% complete, ETA 00:01:00
# Fork: 1 of 2
# Warmup Iteration   1: 1327.969 ns/op
# Warmup Iteration   2: 878.279 ns/op
# Warmup Iteration   3: 665.825 ns/op
Iteration   1: 669.273 ns/op
Iteration   2: 665.650 ns/op
Iteration   3: 666.692 ns/op
Iteration   4: 696.050 ns/op
Iteration   5: 689.229 ns/op
Iteration   6: 686.890 ns/op
Iteration   7: 689.120 ns/op
Iteration   8: 689.689 ns/op
Iteration   9: 688.867 ns/op
Iteration  10: 687.092 ns/op

# Run progress: 97.43% complete, ETA 00:00:59
# Fork: 2 of 2
# Warmup Iteration   1: 1248.296 ns/op
# Warmup Iteration   2: 1011.187 ns/op
# Warmup Iteration   3: 665.602 ns/op
Iteration   1: 669.480 ns/op
Iteration   2: 665.487 ns/op
Iteration   3: 666.637 ns/op
Iteration   4: 690.157 ns/op
Iteration   5: 687.988 ns/op
Iteration   6: 683.822 ns/op
Iteration   7: 687.632 ns/op
Iteration   8: 688.848 ns/op
Iteration   9: 687.947 ns/op
Iteration  10: 684.046 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  682.030 ±(99.9%) 8.930 ns/op [Average]
  (min, avg, max) = (665.487, 682.030, 696.050), stdev = 10.284
  CI (99.9%): [673.100, 690.960] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 97.50% complete, ETA 00:00:57
# Fork: 1 of 2
# Warmup Iteration   1: 19.707 ns/op
# Warmup Iteration   2: 20.857 ns/op
# Warmup Iteration   3: 15.029 ns/op
Iteration   1: 17.068 ns/op
Iteration   2: 15.284 ns/op
Iteration   3: 17.011 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.105 ns/op
Iteration   6: 15.411 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.003 ns/op
Iteration  10: 14.974 ns/op

# Run progress: 97.57% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 20.018 ns/op
# Warmup Iteration   2: 21.041 ns/op
# Warmup Iteration   3: 15.026 ns/op
Iteration   1: 17.081 ns/op
Iteration   2: 15.262 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 15.027 ns/op
Iteration   5: 17.109 ns/op
Iteration   6: 15.386 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.011 ns/op
Iteration   9: 17.009 ns/op
Iteration  10: 14.970 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.823 ns/op [Average]
  (min, avg, max) = (14.970, 16.290, 17.109), stdev = 0.948
  CI (99.9%): [15.467, 17.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 97.64% complete, ETA 00:00:54
# Fork: 1 of 2
# Warmup Iteration   1: 1375.109 ns/op
# Warmup Iteration   2: 26646.971 ns/op
# Warmup Iteration   3: 1519.627 ns/op
Iteration   1: 367.717 ns/op
Iteration   2: 20629.585 ns/op
Iteration   3: 706.908 ns/op
Iteration   4: 23026.224 ns/op
Iteration   5: 421.369 ns/op
Iteration   6: 19175.944 ns/op
Iteration   7: 300.234 ns/op
Iteration   8: 337.305 ns/op
Iteration   9: 434.607 ns/op
Iteration  10: 371.879 ns/op

# Run progress: 97.71% complete, ETA 00:00:52
# Fork: 2 of 2
# Warmup Iteration   1: 1148.883 ns/op
# Warmup Iteration   2: 26244.355 ns/op
# Warmup Iteration   3: 1948.109 ns/op
Iteration   1: 372.129 ns/op
Iteration   2: 20483.329 ns/op
Iteration   3: 341.744 ns/op
Iteration   4: 24480.650 ns/op
Iteration   5: 424.438 ns/op
Iteration   6: 20494.539 ns/op
Iteration   7: 304.624 ns/op
Iteration   8: 337.028 ns/op
Iteration   9: 435.521 ns/op
Iteration  10: 374.450 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6691.011 ±(99.9%) 8613.169 ns/op [Average]
  (min, avg, max) = (300.234, 6691.011, 24480.650), stdev = 9918.938
  CI (99.9%): [≈ 0, 15304.180] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 97.78% complete, ETA 00:00:51
# Fork: 1 of 2
# Warmup Iteration   1: 628.838 ns/op
# Warmup Iteration   2: 564.740 ns/op
# Warmup Iteration   3: 410.918 ns/op
Iteration   1: 458.874 ns/op
Iteration   2: 425.089 ns/op
Iteration   3: 447.476 ns/op
Iteration   4: 420.540 ns/op
Iteration   5: 441.422 ns/op
Iteration   6: 416.831 ns/op
Iteration   7: 427.934 ns/op
Iteration   8: 445.135 ns/op
Iteration   9: 440.089 ns/op
Iteration  10: 409.943 ns/op

# Run progress: 97.85% complete, ETA 00:00:49
# Fork: 2 of 2
# Warmup Iteration   1: 687.678 ns/op
# Warmup Iteration   2: 642.668 ns/op
# Warmup Iteration   3: 410.780 ns/op
Iteration   1: 458.069 ns/op
Iteration   2: 424.775 ns/op
Iteration   3: 448.152 ns/op
Iteration   4: 420.558 ns/op
Iteration   5: 441.643 ns/op
Iteration   6: 416.716 ns/op
Iteration   7: 428.095 ns/op
Iteration   8: 445.963 ns/op
Iteration   9: 454.651 ns/op
Iteration  10: 410.594 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  434.127 ±(99.9%) 13.718 ns/op [Average]
  (min, avg, max) = (409.943, 434.127, 458.874), stdev = 15.798
  CI (99.9%): [420.409, 447.846] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 97.92% complete, ETA 00:00:47
# Fork: 1 of 2
# Warmup Iteration   1: 11013.294 ns/op
# Warmup Iteration   2: 15842.878 ns/op
# Warmup Iteration   3: 411.450 ns/op
Iteration   1: 3471.948 ns/op
Iteration   2: 908.888 ns/op
Iteration   3: 354.828 ns/op
Iteration   4: 1524.012 ns/op
Iteration   5: 414.406 ns/op
Iteration   6: 1515.983 ns/op
Iteration   7: 372.224 ns/op
Iteration   8: 332.672 ns/op
Iteration   9: 367.148 ns/op
Iteration  10: 311.770 ns/op

# Run progress: 97.99% complete, ETA 00:00:46
# Fork: 2 of 2
# Warmup Iteration   1: 6860.093 ns/op
# Warmup Iteration   2: 14521.291 ns/op
# Warmup Iteration   3: 420.588 ns/op
Iteration   1: 11448.251 ns/op
Iteration   2: 12038.225 ns/op
Iteration   3: 356.448 ns/op
Iteration   4: 2022.163 ns/op
Iteration   5: 412.356 ns/op
Iteration   6: 1769.960 ns/op
Iteration   7: 380.154 ns/op
Iteration   8: 332.942 ns/op
Iteration   9: 378.090 ns/op
Iteration  10: 320.034 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1951.625 ±(99.9%) 2995.543 ns/op [Average]
  (min, avg, max) = (311.770, 1951.625, 12038.225), stdev = 3449.671
  CI (99.9%): [≈ 0, 4947.168] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 98.06% complete, ETA 00:00:44
# Fork: 1 of 2
# Warmup Iteration   1: 568.997 ns/op
# Warmup Iteration   2: 444.422 ns/op
# Warmup Iteration   3: 322.013 ns/op
Iteration   1: 352.913 ns/op
Iteration   2: 346.409 ns/op
Iteration   3: 342.465 ns/op
Iteration   4: 326.852 ns/op
Iteration   5: 353.710 ns/op
Iteration   6: 354.411 ns/op
Iteration   7: 346.638 ns/op
Iteration   8: 358.515 ns/op
Iteration   9: 341.231 ns/op
Iteration  10: 321.820 ns/op

# Run progress: 98.13% complete, ETA 00:00:43
# Fork: 2 of 2
# Warmup Iteration   1: 633.470 ns/op
# Warmup Iteration   2: 427.595 ns/op
# Warmup Iteration   3: 320.845 ns/op
Iteration   1: 351.500 ns/op
Iteration   2: 343.976 ns/op
Iteration   3: 339.661 ns/op
Iteration   4: 324.752 ns/op
Iteration   5: 352.701 ns/op
Iteration   6: 354.843 ns/op
Iteration   7: 345.949 ns/op
Iteration   8: 352.406 ns/op
Iteration   9: 338.354 ns/op
Iteration  10: 320.623 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  343.486 ±(99.9%) 10.134 ns/op [Average]
  (min, avg, max) = (320.623, 343.486, 358.515), stdev = 11.671
  CI (99.9%): [333.352, 353.621] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 98.19% complete, ETA 00:00:41
# Fork: 1 of 2
# Warmup Iteration   1: 3081.343 ns/op
# Warmup Iteration   2: 2146.262 ns/op
# Warmup Iteration   3: 1544.003 ns/op
Iteration   1: 1654.150 ns/op
Iteration   2: 1579.328 ns/op
Iteration   3: 1649.492 ns/op
Iteration   4: 1594.789 ns/op
Iteration   5: 1642.440 ns/op
Iteration   6: 1611.214 ns/op
Iteration   7: 1635.494 ns/op
Iteration   8: 1641.368 ns/op
Iteration   9: 1644.096 ns/op
Iteration  10: 1555.841 ns/op

# Run progress: 98.26% complete, ETA 00:00:39
# Fork: 2 of 2
# Warmup Iteration   1: 3484.968 ns/op
# Warmup Iteration   2: 2100.877 ns/op
# Warmup Iteration   3: 1548.444 ns/op
Iteration   1: 1648.860 ns/op
Iteration   2: 1577.661 ns/op
Iteration   3: 1646.325 ns/op
Iteration   4: 1589.391 ns/op
Iteration   5: 1642.916 ns/op
Iteration   6: 1591.488 ns/op
Iteration   7: 1630.054 ns/op
Iteration   8: 1638.496 ns/op
Iteration   9: 1640.498 ns/op
Iteration  10: 1554.095 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1618.400 ±(99.9%) 28.903 ns/op [Average]
  (min, avg, max) = (1554.095, 1618.400, 1654.150), stdev = 33.284
  CI (99.9%): [1589.497, 1647.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 98.33% complete, ETA 00:00:38
# Fork: 1 of 2
# Warmup Iteration   1: 19.295 ns/op
# Warmup Iteration   2: 22.863 ns/op
# Warmup Iteration   3: 15.030 ns/op
Iteration   1: 17.077 ns/op
Iteration   2: 15.261 ns/op
Iteration   3: 17.043 ns/op
Iteration   4: 15.021 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.388 ns/op
Iteration   7: 17.017 ns/op
Iteration   8: 17.016 ns/op
Iteration   9: 17.017 ns/op
Iteration  10: 14.960 ns/op

# Run progress: 98.40% complete, ETA 00:00:36
# Fork: 2 of 2
# Warmup Iteration   1: 19.391 ns/op
# Warmup Iteration   2: 22.619 ns/op
# Warmup Iteration   3: 15.025 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.265 ns/op
Iteration   3: 17.015 ns/op
Iteration   4: 15.020 ns/op
Iteration   5: 17.104 ns/op
Iteration   6: 15.384 ns/op
Iteration   7: 17.019 ns/op
Iteration   8: 17.021 ns/op
Iteration   9: 17.019 ns/op
Iteration  10: 14.975 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.290 ±(99.9%) 0.829 ns/op [Average]
  (min, avg, max) = (14.960, 16.290, 17.104), stdev = 0.954
  CI (99.9%): [15.461, 17.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 98.47% complete, ETA 00:00:35
# Fork: 1 of 2
# Warmup Iteration   1: 514.402 ns/op
# Warmup Iteration   2: 293.020 ns/op
# Warmup Iteration   3: 202.940 ns/op
Iteration   1: 203.961 ns/op
Iteration   2: 202.596 ns/op
Iteration   3: 203.842 ns/op
Iteration   4: 203.278 ns/op
Iteration   5: 203.837 ns/op
Iteration   6: 202.662 ns/op
Iteration   7: 203.816 ns/op
Iteration   8: 203.935 ns/op
Iteration   9: 204.226 ns/op
Iteration  10: 202.536 ns/op

# Run progress: 98.54% complete, ETA 00:00:33
# Fork: 2 of 2
# Warmup Iteration   1: 619.980 ns/op
# Warmup Iteration   2: 272.200 ns/op
# Warmup Iteration   3: 202.927 ns/op
Iteration   1: 203.789 ns/op
Iteration   2: 202.657 ns/op
Iteration   3: 203.745 ns/op
Iteration   4: 203.293 ns/op
Iteration   5: 204.124 ns/op
Iteration   6: 202.666 ns/op
Iteration   7: 203.680 ns/op
Iteration   8: 203.783 ns/op
Iteration   9: 203.873 ns/op
Iteration  10: 202.592 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  203.445 ±(99.9%) 0.518 ns/op [Average]
  (min, avg, max) = (202.536, 203.445, 204.226), stdev = 0.596
  CI (99.9%): [202.927, 203.962] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 98.61% complete, ETA 00:00:31
# Fork: 1 of 2
# Warmup Iteration   1: 167.979 ns/op
# Warmup Iteration   2: 161.792 ns/op
# Warmup Iteration   3: 120.531 ns/op
Iteration   1: 122.223 ns/op
Iteration   2: 120.317 ns/op
Iteration   3: 119.031 ns/op
Iteration   4: 121.026 ns/op
Iteration   5: 119.080 ns/op
Iteration   6: 120.349 ns/op
Iteration   7: 119.006 ns/op
Iteration   8: 118.968 ns/op
Iteration   9: 119.102 ns/op
Iteration  10: 120.350 ns/op

# Run progress: 98.68% complete, ETA 00:00:30
# Fork: 2 of 2
# Warmup Iteration   1: 169.554 ns/op
# Warmup Iteration   2: 157.711 ns/op
# Warmup Iteration   3: 126.948 ns/op
Iteration   1: 122.139 ns/op
Iteration   2: 127.928 ns/op
Iteration   3: 119.055 ns/op
Iteration   4: 128.497 ns/op
Iteration   5: 119.085 ns/op
Iteration   6: 127.940 ns/op
Iteration   7: 118.991 ns/op
Iteration   8: 119.120 ns/op
Iteration   9: 119.044 ns/op
Iteration  10: 127.971 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  121.461 ±(99.9%) 3.079 ns/op [Average]
  (min, avg, max) = (118.968, 121.461, 128.497), stdev = 3.546
  CI (99.9%): [118.382, 124.540] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 98.75% complete, ETA 00:00:28
# Fork: 1 of 2
# Warmup Iteration   1: 1624.819 ns/op
# Warmup Iteration   2: 263.179 ns/op
# Warmup Iteration   3: 202.647 ns/op
Iteration   1: 201.060 ns/op
Iteration   2: 202.664 ns/op
Iteration   3: 201.350 ns/op
Iteration   4: 204.339 ns/op
Iteration   5: 201.386 ns/op
Iteration   6: 202.262 ns/op
Iteration   7: 201.172 ns/op
Iteration   8: 201.473 ns/op
Iteration   9: 201.195 ns/op
Iteration  10: 202.403 ns/op

# Run progress: 98.82% complete, ETA 00:00:27
# Fork: 2 of 2
# Warmup Iteration   1: 1865.162 ns/op
# Warmup Iteration   2: 291.485 ns/op
# Warmup Iteration   3: 202.762 ns/op
Iteration   1: 201.014 ns/op
Iteration   2: 202.593 ns/op
Iteration   3: 201.150 ns/op
Iteration   4: 204.269 ns/op
Iteration   5: 201.292 ns/op
Iteration   6: 202.193 ns/op
Iteration   7: 201.675 ns/op
Iteration   8: 201.335 ns/op
Iteration   9: 201.127 ns/op
Iteration  10: 202.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  201.926 ±(99.9%) 0.862 ns/op [Average]
  (min, avg, max) = (201.014, 201.926, 204.339), stdev = 0.992
  CI (99.9%): [201.065, 202.788] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 98.89% complete, ETA 00:00:25
# Fork: 1 of 2
# Warmup Iteration   1: 199.645 ns/op
# Warmup Iteration   2: 170.565 ns/op
# Warmup Iteration   3: 117.980 ns/op
Iteration   1: 119.071 ns/op
Iteration   2: 118.095 ns/op
Iteration   3: 118.574 ns/op
Iteration   4: 118.735 ns/op
Iteration   5: 116.511 ns/op
Iteration   6: 117.861 ns/op
Iteration   7: 117.247 ns/op
Iteration   8: 116.864 ns/op
Iteration   9: 119.355 ns/op
Iteration  10: 117.903 ns/op

# Run progress: 98.96% complete, ETA 00:00:23
# Fork: 2 of 2
# Warmup Iteration   1: 173.024 ns/op
# Warmup Iteration   2: 157.149 ns/op
# Warmup Iteration   3: 119.106 ns/op
Iteration   1: 117.585 ns/op
Iteration   2: 117.936 ns/op
Iteration   3: 117.060 ns/op
Iteration   4: 118.761 ns/op
Iteration   5: 117.558 ns/op
Iteration   6: 118.257 ns/op
Iteration   7: 118.452 ns/op
Iteration   8: 118.853 ns/op
Iteration   9: 116.472 ns/op
Iteration  10: 119.238 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  118.019 ±(99.9%) 0.763 ns/op [Average]
  (min, avg, max) = (116.472, 118.019, 119.355), stdev = 0.878
  CI (99.9%): [117.257, 118.782] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 99.03% complete, ETA 00:00:22
# Fork: 1 of 2
# Warmup Iteration   1: 1031.771 ns/op
# Warmup Iteration   2: 904.097 ns/op
# Warmup Iteration   3: 664.889 ns/op
Iteration   1: 668.716 ns/op
Iteration   2: 665.999 ns/op
Iteration   3: 666.272 ns/op
Iteration   4: 688.854 ns/op
Iteration   5: 684.418 ns/op
Iteration   6: 682.803 ns/op
Iteration   7: 684.056 ns/op
Iteration   8: 686.187 ns/op
Iteration   9: 683.801 ns/op
Iteration  10: 683.138 ns/op

# Run progress: 99.10% complete, ETA 00:00:20
# Fork: 2 of 2
# Warmup Iteration   1: 1025.550 ns/op
# Warmup Iteration   2: 870.200 ns/op
# Warmup Iteration   3: 663.710 ns/op
Iteration   1: 667.537 ns/op
Iteration   2: 664.221 ns/op
Iteration   3: 665.033 ns/op
Iteration   4: 687.279 ns/op
Iteration   5: 681.774 ns/op
Iteration   6: 681.354 ns/op
Iteration   7: 681.843 ns/op
Iteration   8: 682.121 ns/op
Iteration   9: 681.989 ns/op
Iteration  10: 681.442 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  678.442 ±(99.9%) 7.315 ns/op [Average]
  (min, avg, max) = (664.221, 678.442, 688.854), stdev = 8.424
  CI (99.9%): [671.127, 685.757] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 99.17% complete, ETA 00:00:19
# Fork: 1 of 2
# Warmup Iteration   1: 19.299 ns/op
# Warmup Iteration   2: 20.964 ns/op
# Warmup Iteration   3: 15.024 ns/op
Iteration   1: 17.072 ns/op
Iteration   2: 15.288 ns/op
Iteration   3: 17.020 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.107 ns/op
Iteration   6: 15.356 ns/op
Iteration   7: 17.022 ns/op
Iteration   8: 17.026 ns/op
Iteration   9: 17.016 ns/op
Iteration  10: 14.975 ns/op

# Run progress: 99.24% complete, ETA 00:00:17
# Fork: 2 of 2
# Warmup Iteration   1: 19.413 ns/op
# Warmup Iteration   2: 22.871 ns/op
# Warmup Iteration   3: 15.028 ns/op
Iteration   1: 17.071 ns/op
Iteration   2: 15.286 ns/op
Iteration   3: 17.008 ns/op
Iteration   4: 15.023 ns/op
Iteration   5: 17.113 ns/op
Iteration   6: 15.396 ns/op
Iteration   7: 17.013 ns/op
Iteration   8: 17.024 ns/op
Iteration   9: 17.013 ns/op
Iteration  10: 14.974 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.291 ±(99.9%) 0.825 ns/op [Average]
  (min, avg, max) = (14.974, 16.291, 17.113), stdev = 0.950
  CI (99.9%): [15.466, 17.117] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 99.31% complete, ETA 00:00:15
# Fork: 1 of 2
# Warmup Iteration   1: 319.502 ns/op
# Warmup Iteration   2: 13905.916 ns/op
# Warmup Iteration   3: 143.409 ns/op
Iteration   1: 179.156 ns/op
Iteration   2: 1324.006 ns/op
Iteration   3: 146.948 ns/op
Iteration   4: 192.119 ns/op
Iteration   5: 146.856 ns/op
Iteration   6: 3644.319 ns/op
Iteration   7: 14082.414 ns/op
Iteration   8: 152.555 ns/op
Iteration   9: 205.580 ns/op
Iteration  10: 151.450 ns/op

# Run progress: 99.38% complete, ETA 00:00:14
# Fork: 2 of 2
# Warmup Iteration   1: 317.628 ns/op
# Warmup Iteration   2: 13200.779 ns/op
# Warmup Iteration   3: 144.181 ns/op
Iteration   1: 181.528 ns/op
Iteration   2: 12465.875 ns/op
Iteration   3: 146.755 ns/op
Iteration   4: 188.739 ns/op
Iteration   5: 146.713 ns/op
Iteration   6: 13915.726 ns/op
Iteration   7: 16275.474 ns/op
Iteration   8: 157.464 ns/op
Iteration   9: 213.625 ns/op
Iteration  10: 156.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3203.668 ±(99.9%) 4970.082 ns/op [Average]
  (min, avg, max) = (146.713, 3203.668, 16275.474), stdev = 5723.554
  CI (99.9%): [≈ 0, 8173.750] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 99.44% complete, ETA 00:00:12
# Fork: 1 of 2
# Warmup Iteration   1: 138.323 ns/op
# Warmup Iteration   2: 201.942 ns/op
# Warmup Iteration   3: 98.389 ns/op
Iteration   1: 195.440 ns/op
Iteration   2: 141.304 ns/op
Iteration   3: 112.257 ns/op
Iteration   4: 147.152 ns/op
Iteration   5: 112.249 ns/op
Iteration   6: 141.997 ns/op
Iteration   7: 150.306 ns/op
Iteration   8: 112.270 ns/op
Iteration   9: 165.352 ns/op
Iteration  10: 113.789 ns/op

# Run progress: 99.51% complete, ETA 00:00:11
# Fork: 2 of 2
# Warmup Iteration   1: 150.931 ns/op
# Warmup Iteration   2: 207.347 ns/op
# Warmup Iteration   3: 96.929 ns/op
Iteration   1: 174.868 ns/op
Iteration   2: 141.603 ns/op
Iteration   3: 112.262 ns/op
Iteration   4: 147.202 ns/op
Iteration   5: 112.221 ns/op
Iteration   6: 142.081 ns/op
Iteration   7: 149.121 ns/op
Iteration   8: 112.267 ns/op
Iteration   9: 154.960 ns/op
Iteration  10: 113.873 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  137.629 ±(99.9%) 21.211 ns/op [Average]
  (min, avg, max) = (112.221, 137.629, 195.440), stdev = 24.427
  CI (99.9%): [116.417, 158.840] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 99.58% complete, ETA 00:00:09
# Fork: 1 of 2
# Warmup Iteration   1: 502.226 ns/op
# Warmup Iteration   2: 13069.536 ns/op
# Warmup Iteration   3: 133.059 ns/op
Iteration   1: 167.226 ns/op
Iteration   2: 164.325 ns/op
Iteration   3: 131.151 ns/op
Iteration   4: 25603.978 ns/op
Iteration   5: 8415.341 ns/op
Iteration   6: 182.693 ns/op
Iteration   7: 184.833 ns/op
Iteration   8: 129.930 ns/op
Iteration   9: 175.823 ns/op
Iteration  10: 131.279 ns/op

# Run progress: 99.65% complete, ETA 00:00:07
# Fork: 2 of 2
# Warmup Iteration   1: 508.934 ns/op
# Warmup Iteration   2: 12665.957 ns/op
# Warmup Iteration   3: 131.263 ns/op
Iteration   1: 164.490 ns/op
Iteration   2: 161.666 ns/op
Iteration   3: 129.523 ns/op
Iteration   4: 23719.584 ns/op
Iteration   5: 580.490 ns/op
Iteration   6: 183.117 ns/op
Iteration   7: 184.003 ns/op
Iteration   8: 129.783 ns/op
Iteration   9: 177.080 ns/op
Iteration  10: 131.216 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3042.377 ±(99.9%) 6621.070 ns/op [Average]
  (min, avg, max) = (129.523, 3042.377, 25603.978), stdev = 7624.834
  CI (99.9%): [≈ 0, 9663.446] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 99.72% complete, ETA 00:00:06
# Fork: 1 of 2
# Warmup Iteration   1: 115.882 ns/op
# Warmup Iteration   2: 233.818 ns/op
# Warmup Iteration   3: 89.026 ns/op
Iteration   1: 181.620 ns/op
Iteration   2: 328.755 ns/op
Iteration   3: 90.056 ns/op
Iteration   4: 115.807 ns/op
Iteration   5: 90.002 ns/op
Iteration   6: 243.650 ns/op
Iteration   7: 124.910 ns/op
Iteration   8: 99.608 ns/op
Iteration   9: 117.903 ns/op
Iteration  10: 100.994 ns/op

# Run progress: 99.79% complete, ETA 00:00:04
# Fork: 2 of 2
# Warmup Iteration   1: 110.313 ns/op
# Warmup Iteration   2: 375.086 ns/op
# Warmup Iteration   3: 88.596 ns/op
Iteration   1: 221.263 ns/op
Iteration   2: 178.810 ns/op
Iteration   3: 90.065 ns/op
Iteration   4: 115.937 ns/op
Iteration   5: 90.214 ns/op
Iteration   6: 229.839 ns/op
Iteration   7: 125.165 ns/op
Iteration   8: 99.778 ns/op
Iteration   9: 118.206 ns/op
Iteration  10: 100.836 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  143.171 ±(99.9%) 57.369 ns/op [Average]
  (min, avg, max) = (90.002, 143.171, 328.755), stdev = 66.066
  CI (99.9%): [85.802, 200.540] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 50, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 99.86% complete, ETA 00:00:03
# Fork: 1 of 2
# Warmup Iteration   1: 1141.899 ns/op
# Warmup Iteration   2: 975.710 ns/op
# Warmup Iteration   3: 657.976 ns/op
Iteration   1: 671.872 ns/op
Iteration   2: 3351.029 ns/op
Iteration   3: 603.078 ns/op
Iteration   4: 633.500 ns/op
Iteration   5: 620.486 ns/op
Iteration   6: 636.973 ns/op
Iteration   7: 631.957 ns/op
Iteration   8: 620.250 ns/op
Iteration   9: 641.281 ns/op
Iteration  10: 619.262 ns/op

# Run progress: 99.93% complete, ETA 00:00:01
# Fork: 2 of 2
# Warmup Iteration   1: 1049.346 ns/op
# Warmup Iteration   2: 908.944 ns/op
# Warmup Iteration   3: 667.451 ns/op
Iteration   1: 683.974 ns/op
Iteration   2: 2497.015 ns/op
Iteration   3: 672.246 ns/op
Iteration   4: 698.179 ns/op
Iteration   5: 687.561 ns/op
Iteration   6: 701.715 ns/op
Iteration   7: 693.507 ns/op
Iteration   8: 687.778 ns/op
Iteration   9: 703.298 ns/op
Iteration  10: 686.671 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  887.082 ±(99.9%) 617.393 ns/op [Average]
  (min, avg, max) = (603.078, 887.082, 3351.029), stdev = 710.991
  CI (99.9%): [269.688, 1504.475] (assumes normal distribution)


# Run complete. Total time: 00:38:23

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                (arraySize)  (arraySubSize)  (dataTweaker)  (distBuilder)     (tSorter)  Mode  Cnt      Score      Error  Units
ArraySortBenchmark.sort           50               1     IDENT_____        STAGGER      BASELINE  avgt   20     16.292 ±    0.832  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        STAGGER        DPQ_11  avgt   20    290.363 ±    3.692  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20    259.019 ±    2.794  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        STAGGER    DPQ_18_11I  avgt   20    301.324 ±    1.953  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        STAGGER    DPQ_18_11P  avgt   20    189.889 ±    1.037  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        STAGGER         RADIX  avgt   20    257.218 ±    8.657  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SAWTOTH      BASELINE  avgt   20     16.295 ±    0.834  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SAWTOTH        DPQ_11  avgt   20     60.271 ±   35.312  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20     45.066 ±    0.652  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20     49.977 ±    1.314  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20     48.450 ±    0.528  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SAWTOTH         RADIX  avgt   20    129.554 ±    7.029  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        _RANDOM      BASELINE  avgt   20     16.290 ±    0.830  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        _RANDOM        DPQ_11  avgt   20     51.106 ±    0.452  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20     45.004 ±    0.646  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20     49.899 ±    1.283  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20     48.382 ±    0.554  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        _RANDOM         RADIX  avgt   20    129.335 ±    7.041  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        PLATEAU      BASELINE  avgt   20     16.288 ±    0.827  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        PLATEAU        DPQ_11  avgt   20     54.971 ±    0.472  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20     44.999 ±    0.649  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20     67.235 ±    0.932  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20     48.382 ±    0.544  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        PLATEAU         RADIX  avgt   20    133.001 ±    4.878  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SHUFFLE      BASELINE  avgt   20     16.290 ±    0.830  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SHUFFLE        DPQ_11  avgt   20     91.679 ±    0.643  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20     45.003 ±    0.648  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20    108.974 ±    0.806  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20     48.381 ±    0.556  ns/op
ArraySortBenchmark.sort           50               1     IDENT_____        SHUFFLE         RADIX  avgt   20    133.018 ±    4.886  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        STAGGER      BASELINE  avgt   20     16.289 ±    0.829  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        STAGGER        DPQ_11  avgt   20    304.458 ±    1.388  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20    534.985 ±    4.082  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        STAGGER    DPQ_18_11I  avgt   20    502.450 ±    2.507  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        STAGGER    DPQ_18_11P  avgt   20    336.366 ±    0.811  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        STAGGER         RADIX  avgt   20    293.840 ±    8.211  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SAWTOTH      BASELINE  avgt   20     16.290 ±    0.825  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SAWTOTH        DPQ_11  avgt   20     51.109 ±    0.460  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20     44.999 ±    0.639  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20     49.888 ±    1.287  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20     48.496 ±    0.729  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SAWTOTH         RADIX  avgt   20    129.387 ±    7.077  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        _RANDOM      BASELINE  avgt   20     16.292 ±    0.828  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        _RANDOM        DPQ_11  avgt   20     51.111 ±    0.442  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20     44.988 ±    0.650  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20     49.896 ±    1.285  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20     48.379 ±    0.546  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        _RANDOM         RADIX  avgt   20    129.511 ±    7.053  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        PLATEAU      BASELINE  avgt   20     16.292 ±    0.826  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        PLATEAU        DPQ_11  avgt   20     55.217 ±    0.530  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    110.273 ±    0.691  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20     67.696 ±    0.531  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20     79.470 ±    0.539  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        PLATEAU         RADIX  avgt   20    133.871 ±    5.981  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SHUFFLE      BASELINE  avgt   20     16.291 ±    0.826  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SHUFFLE        DPQ_11  avgt   20    207.416 ±    2.457  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20    605.109 ±    0.881  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20    160.358 ±    0.719  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20    435.488 ±    1.044  ns/op
ArraySortBenchmark.sort           50               1     REVERSE___        SHUFFLE         RADIX  avgt   20    173.160 ±    5.859  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        STAGGER      BASELINE  avgt   20     16.300 ±    0.814  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        STAGGER        DPQ_11  avgt   20    280.795 ±    0.489  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20    411.415 ±    0.666  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20    351.050 ±   10.264  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20    298.975 ±    0.960  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        STAGGER         RADIX  avgt   20    280.250 ±    6.865  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     16.290 ±    0.827  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20     51.095 ±    0.445  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20     44.995 ±    0.639  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20     49.888 ±    1.289  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20     48.390 ±    0.544  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SAWTOTH         RADIX  avgt   20    129.803 ±    7.363  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        _RANDOM      BASELINE  avgt   20     16.290 ±    0.827  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        _RANDOM        DPQ_11  avgt   20     51.122 ±    0.464  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20     44.994 ±    0.639  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20     49.886 ±    1.290  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20     48.373 ±    0.563  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        _RANDOM         RADIX  avgt   20    129.378 ±    7.083  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        PLATEAU      BASELINE  avgt   20     16.288 ±    0.829  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        PLATEAU        DPQ_11  avgt   20     56.749 ±    0.511  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    102.625 ±    0.996  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20     78.877 ±    1.541  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20     61.530 ±    0.578  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        PLATEAU         RADIX  avgt   20    131.965 ±    6.864  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     16.291 ±    0.828  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20    183.381 ±    2.737  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20    235.400 ±    0.622  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20    276.315 ±    6.273  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20    176.301 ±    0.535  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_FR        SHUFFLE         RADIX  avgt   20    258.724 ±    7.182  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        STAGGER      BASELINE  avgt   20     16.289 ±    0.824  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        STAGGER        DPQ_11  avgt   20    302.463 ±    0.400  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20    380.448 ±    3.489  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20    320.082 ±    3.488  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20    221.166 ±    0.616  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        STAGGER         RADIX  avgt   20    266.468 ±    6.924  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     16.290 ±    0.827  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20     51.122 ±    0.463  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20     44.999 ±    0.637  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20     49.888 ±    1.289  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20     48.362 ±    0.557  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SAWTOTH         RADIX  avgt   20    130.490 ±    7.783  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        _RANDOM      BASELINE  avgt   20     16.290 ±    0.826  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        _RANDOM        DPQ_11  avgt   20     51.106 ±    0.459  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20     44.994 ±    0.639  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20     49.890 ±    1.289  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20     48.382 ±    0.552  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        _RANDOM         RADIX  avgt   20    129.410 ±    7.078  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        PLATEAU      BASELINE  avgt   20     16.287 ±    0.830  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        PLATEAU        DPQ_11  avgt   20     54.818 ±    0.418  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20     45.005 ±    0.652  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20     67.535 ±    2.497  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20     48.371 ±    0.558  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        PLATEAU         RADIX  avgt   20    133.023 ±    4.884  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     16.289 ±    0.827  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20    137.393 ±    0.562  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20    254.587 ±    1.850  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20    198.932 ±    1.170  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20    163.680 ±    0.816  ns/op
ArraySortBenchmark.sort           50               1     REVERSE_BA        SHUFFLE         RADIX  avgt   20    269.739 ±    7.229  ns/op
ArraySortBenchmark.sort           50               1     SORT______        STAGGER      BASELINE  avgt   20     16.466 ±    0.781  ns/op
ArraySortBenchmark.sort           50               1     SORT______        STAGGER        DPQ_11  avgt   20     90.125 ±    0.620  ns/op
ArraySortBenchmark.sort           50               1     SORT______        STAGGER  DPQ_18_11_21  avgt   20     45.010 ±    0.668  ns/op
ArraySortBenchmark.sort           50               1     SORT______        STAGGER    DPQ_18_11I  avgt   20    110.341 ±    0.587  ns/op
ArraySortBenchmark.sort           50               1     SORT______        STAGGER    DPQ_18_11P  avgt   20     48.362 ±    0.527  ns/op
ArraySortBenchmark.sort           50               1     SORT______        STAGGER         RADIX  avgt   20    107.743 ±    1.713  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SAWTOTH      BASELINE  avgt   20     16.473 ±    0.774  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SAWTOTH        DPQ_11  avgt   20     51.036 ±    0.561  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20     45.011 ±    0.663  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SAWTOTH    DPQ_18_11I  avgt   20     50.401 ±    3.011  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SAWTOTH    DPQ_18_11P  avgt   20     48.359 ±    0.527  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SAWTOTH         RADIX  avgt   20     99.744 ±    4.613  ns/op
ArraySortBenchmark.sort           50               1     SORT______        _RANDOM      BASELINE  avgt   20     16.470 ±    0.779  ns/op
ArraySortBenchmark.sort           50               1     SORT______        _RANDOM        DPQ_11  avgt   20     51.043 ±    0.544  ns/op
ArraySortBenchmark.sort           50               1     SORT______        _RANDOM  DPQ_18_11_21  avgt   20     45.010 ±    0.663  ns/op
ArraySortBenchmark.sort           50               1     SORT______        _RANDOM    DPQ_18_11I  avgt   20     49.596 ±    0.677  ns/op
ArraySortBenchmark.sort           50               1     SORT______        _RANDOM    DPQ_18_11P  avgt   20     48.364 ±    0.533  ns/op
ArraySortBenchmark.sort           50               1     SORT______        _RANDOM         RADIX  avgt   20     99.721 ±    4.574  ns/op
ArraySortBenchmark.sort           50               1     SORT______        PLATEAU      BASELINE  avgt   20     16.468 ±    0.779  ns/op
ArraySortBenchmark.sort           50               1     SORT______        PLATEAU        DPQ_11  avgt   20     54.976 ±    0.327  ns/op
ArraySortBenchmark.sort           50               1     SORT______        PLATEAU  DPQ_18_11_21  avgt   20     45.016 ±    0.670  ns/op
ArraySortBenchmark.sort           50               1     SORT______        PLATEAU    DPQ_18_11I  avgt   20     66.951 ±    0.757  ns/op
ArraySortBenchmark.sort           50               1     SORT______        PLATEAU    DPQ_18_11P  avgt   20     48.362 ±    0.534  ns/op
ArraySortBenchmark.sort           50               1     SORT______        PLATEAU         RADIX  avgt   20    102.910 ±    3.081  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SHUFFLE      BASELINE  avgt   20     16.473 ±    0.774  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SHUFFLE        DPQ_11  avgt   20     91.553 ±    0.591  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20     45.005 ±    0.663  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    108.428 ±    0.576  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SHUFFLE    DPQ_18_11P  avgt   20     48.360 ±    0.528  ns/op
ArraySortBenchmark.sort           50               1     SORT______        SHUFFLE         RADIX  avgt   20    102.567 ±    3.236  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        STAGGER      BASELINE  avgt   20     16.286 ±    0.828  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        STAGGER        DPQ_11  avgt   20    315.645 ±    2.634  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        STAGGER  DPQ_18_11_21  avgt   20    265.964 ±    4.056  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        STAGGER    DPQ_18_11I  avgt   20    319.245 ±    4.156  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        STAGGER    DPQ_18_11P  avgt   20    210.482 ±    0.781  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        STAGGER         RADIX  avgt   20    762.319 ±   11.636  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SAWTOTH      BASELINE  avgt   20     16.291 ±    0.827  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SAWTOTH        DPQ_11  avgt   20    239.524 ±    1.141  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20    341.681 ±    0.764  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20    249.720 ±    1.075  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20    287.554 ±    1.146  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SAWTOTH         RADIX  avgt   20    728.938 ±   13.158  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        _RANDOM      BASELINE  avgt   20     16.291 ±    0.827  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        _RANDOM        DPQ_11  avgt   20    239.004 ±    1.059  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20    339.868 ±    1.780  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        _RANDOM    DPQ_18_11I  avgt   20    250.188 ±    0.951  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        _RANDOM    DPQ_18_11P  avgt   20    288.728 ±    5.549  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        _RANDOM         RADIX  avgt   20    747.780 ±    8.868  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        PLATEAU      BASELINE  avgt   20     16.287 ±    0.826  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        PLATEAU        DPQ_11  avgt   20    241.302 ±    2.849  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20    344.063 ±    2.504  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        PLATEAU    DPQ_18_11I  avgt   20    268.738 ±    0.600  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        PLATEAU    DPQ_18_11P  avgt   20    287.810 ±    2.058  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        PLATEAU         RADIX  avgt   20    726.340 ±   14.542  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SHUFFLE      BASELINE  avgt   20     16.287 ±    0.829  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SHUFFLE        DPQ_11  avgt   20    139.499 ±    1.172  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20     97.944 ±    0.817  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20    125.341 ±    0.762  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20     77.540 ±    0.640  ns/op
ArraySortBenchmark.sort           50               1     DITHER____        SHUFFLE         RADIX  avgt   20    672.597 ±    8.053  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        STAGGER      BASELINE  avgt   20     16.287 ±    0.830  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        STAGGER        DPQ_11  avgt   20    307.669 ±    4.611  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20    340.675 ±    0.612  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        STAGGER    DPQ_18_11I  avgt   20    311.653 ±    6.029  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        STAGGER    DPQ_18_11P  avgt   20    263.102 ±    0.964  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        STAGGER         RADIX  avgt   20    455.704 ±    7.703  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SAWTOTH      BASELINE  avgt   20     16.290 ±    0.830  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SAWTOTH        DPQ_11  avgt   20    295.120 ±    3.062  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20    338.675 ±    1.400  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20    200.588 ±    4.445  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20    281.033 ±    0.797  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SAWTOTH         RADIX  avgt   20    786.920 ±    9.118  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        _RANDOM      BASELINE  avgt   20     16.290 ±    0.828  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        _RANDOM        DPQ_11  avgt   20   4048.090 ± 5761.788  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20    363.594 ±   17.927  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20    996.301 ± 2239.937  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20    288.177 ±   11.645  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        _RANDOM         RADIX  avgt   20   1618.361 ±  184.659  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        PLATEAU      BASELINE  avgt   20     16.291 ±    0.824  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        PLATEAU        DPQ_11  avgt   20     58.999 ±    0.589  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20     44.995 ±    0.641  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20     72.462 ±    2.394  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20     48.387 ±    0.560  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        PLATEAU         RADIX  avgt   20    133.329 ±    5.008  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SHUFFLE      BASELINE  avgt   20     16.285 ±    0.831  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SHUFFLE        DPQ_11  avgt   20   4013.728 ± 6626.179  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20    225.431 ±   32.584  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   2148.585 ± 3830.607  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20    183.290 ±   16.752  ns/op
ArraySortBenchmark.sort           50               4     IDENT_____        SHUFFLE         RADIX  avgt   20    998.826 ± 1062.903  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        STAGGER      BASELINE  avgt   20     16.288 ±    0.825  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        STAGGER        DPQ_11  avgt   20    305.719 ±    0.833  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20    463.424 ±    9.516  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        STAGGER    DPQ_18_11I  avgt   20    328.835 ±    2.046  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        STAGGER    DPQ_18_11P  avgt   20    329.223 ±    0.630  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        STAGGER         RADIX  avgt   20    498.801 ±    8.930  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SAWTOTH      BASELINE  avgt   20     16.291 ±    0.828  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SAWTOTH        DPQ_11  avgt   20    295.956 ±    3.300  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20    362.916 ±    0.767  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20    203.815 ±    0.657  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20    289.196 ±    0.717  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SAWTOTH         RADIX  avgt   20    822.340 ±   22.054  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        _RANDOM      BASELINE  avgt   20     16.292 ±    0.821  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        _RANDOM        DPQ_11  avgt   20    527.041 ±  528.940  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20    357.368 ±   22.384  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20   2782.081 ± 5645.112  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20    292.919 ±   20.162  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        _RANDOM         RADIX  avgt   20   1667.488 ±  462.709  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        PLATEAU      BASELINE  avgt   20     16.288 ±    0.825  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        PLATEAU        DPQ_11  avgt   20     64.810 ±    0.523  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    169.346 ±    0.622  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20     76.323 ±    0.656  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    106.356 ±    0.622  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        PLATEAU         RADIX  avgt   20    135.747 ±    5.962  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SHUFFLE      BASELINE  avgt   20     16.287 ±    0.830  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SHUFFLE        DPQ_11  avgt   20   7172.447 ± 8316.046  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20    571.110 ±   28.819  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   4021.937 ± 9314.599  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20    404.514 ±   10.459  ns/op
ArraySortBenchmark.sort           50               4     REVERSE___        SHUFFLE         RADIX  avgt   20   3008.019 ± 6308.042  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        STAGGER      BASELINE  avgt   20     16.285 ±    0.833  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        STAGGER        DPQ_11  avgt   20    300.098 ±    1.421  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20    389.466 ±    1.701  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20    344.259 ±    4.137  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20    300.713 ±    1.131  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        STAGGER         RADIX  avgt   20    489.639 ±    7.778  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     16.290 ±    0.827  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20    257.192 ±    1.629  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20    353.108 ±    1.876  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20    249.408 ±    0.865  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20    289.670 ±    0.938  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SAWTOTH         RADIX  avgt   20    845.872 ±    6.541  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        _RANDOM      BASELINE  avgt   20     16.293 ±    0.825  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        _RANDOM        DPQ_11  avgt   20   1573.379 ± 2858.823  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20    359.346 ±   25.494  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20    579.847 ±  608.112  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20    279.387 ±   15.504  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        _RANDOM         RADIX  avgt   20   1575.744 ±  133.807  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        PLATEAU      BASELINE  avgt   20     16.292 ±    0.827  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        PLATEAU        DPQ_11  avgt   20     66.913 ±    0.640  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    134.281 ±    0.511  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    119.627 ±    0.738  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20     93.131 ±    0.600  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        PLATEAU         RADIX  avgt   20    134.618 ±    6.681  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     16.289 ±    0.827  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   8283.761 ± 7852.973  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20    319.768 ±   35.993  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   1654.129 ± 2143.390  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20    263.286 ±   28.793  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_FR        SHUFFLE         RADIX  avgt   20   5167.709 ± 7997.371  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        STAGGER      BASELINE  avgt   20     16.291 ±    0.828  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        STAGGER        DPQ_11  avgt   20    284.376 ±    0.808  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20    361.950 ±    0.796  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20    324.719 ±    0.923  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20    278.427 ±    1.465  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        STAGGER         RADIX  avgt   20    503.172 ±    7.912  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     16.292 ±    0.824  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20    179.756 ±    1.845  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20    339.489 ±    1.450  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20    188.699 ±    0.927  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20    302.048 ±    1.050  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SAWTOTH         RADIX  avgt   20    828.563 ±   12.231  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        _RANDOM      BASELINE  avgt   20     16.290 ±    0.828  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        _RANDOM        DPQ_11  avgt   20   3535.796 ± 4838.182  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20    364.663 ±   23.422  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20   1363.748 ± 2470.603  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20    293.891 ±   18.840  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        _RANDOM         RADIX  avgt   20   1567.693 ±  129.670  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        PLATEAU      BASELINE  avgt   20     16.288 ±    0.827  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        PLATEAU        DPQ_11  avgt   20     58.879 ±    0.601  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20     45.000 ±    0.639  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20     70.712 ±    0.836  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20     48.372 ±    0.552  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        PLATEAU         RADIX  avgt   20    128.622 ±    6.553  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     16.287 ±    0.825  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   6383.707 ± 8322.795  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20    326.148 ±   15.884  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   1119.306 ± 1902.470  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20    258.104 ±   18.868  ns/op
ArraySortBenchmark.sort           50               4     REVERSE_BA        SHUFFLE         RADIX  avgt   20   4476.430 ± 7338.477  ns/op
ArraySortBenchmark.sort           50               4     SORT______        STAGGER      BASELINE  avgt   20     16.473 ±    0.777  ns/op
ArraySortBenchmark.sort           50               4     SORT______        STAGGER        DPQ_11  avgt   20     94.916 ±    0.588  ns/op
ArraySortBenchmark.sort           50               4     SORT______        STAGGER  DPQ_18_11_21  avgt   20     45.021 ±    0.677  ns/op
ArraySortBenchmark.sort           50               4     SORT______        STAGGER    DPQ_18_11I  avgt   20    111.823 ±    0.897  ns/op
ArraySortBenchmark.sort           50               4     SORT______        STAGGER    DPQ_18_11P  avgt   20     48.362 ±    0.529  ns/op
ArraySortBenchmark.sort           50               4     SORT______        STAGGER         RADIX  avgt   20    104.228 ±    2.728  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SAWTOTH      BASELINE  avgt   20     16.474 ±    0.775  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SAWTOTH        DPQ_11  avgt   20    127.537 ±    2.170  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20     45.011 ±    0.666  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SAWTOTH    DPQ_18_11I  avgt   20    111.703 ±    0.844  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SAWTOTH    DPQ_18_11P  avgt   20     48.359 ±    0.523  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SAWTOTH         RADIX  avgt   20    104.524 ±    3.006  ns/op
ArraySortBenchmark.sort           50               4     SORT______        _RANDOM      BASELINE  avgt   20     16.466 ±    0.776  ns/op
ArraySortBenchmark.sort           50               4     SORT______        _RANDOM        DPQ_11  avgt   20    121.933 ±    2.508  ns/op
ArraySortBenchmark.sort           50               4     SORT______        _RANDOM  DPQ_18_11_21  avgt   20     45.010 ±    0.669  ns/op
ArraySortBenchmark.sort           50               4     SORT______        _RANDOM    DPQ_18_11I  avgt   20    103.977 ±    4.724  ns/op
ArraySortBenchmark.sort           50               4     SORT______        _RANDOM    DPQ_18_11P  avgt   20     48.356 ±    0.527  ns/op
ArraySortBenchmark.sort           50               4     SORT______        _RANDOM         RADIX  avgt   20    105.052 ±    2.960  ns/op
ArraySortBenchmark.sort           50               4     SORT______        PLATEAU      BASELINE  avgt   20     16.475 ±    0.777  ns/op
ArraySortBenchmark.sort           50               4     SORT______        PLATEAU        DPQ_11  avgt   20     58.837 ±    0.535  ns/op
ArraySortBenchmark.sort           50               4     SORT______        PLATEAU  DPQ_18_11_21  avgt   20     45.032 ±    0.661  ns/op
ArraySortBenchmark.sort           50               4     SORT______        PLATEAU    DPQ_18_11I  avgt   20     71.463 ±    1.209  ns/op
ArraySortBenchmark.sort           50               4     SORT______        PLATEAU    DPQ_18_11P  avgt   20     48.359 ±    0.527  ns/op
ArraySortBenchmark.sort           50               4     SORT______        PLATEAU         RADIX  avgt   20    103.259 ±    2.870  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SHUFFLE      BASELINE  avgt   20     16.470 ±    0.775  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SHUFFLE        DPQ_11  avgt   20     91.586 ±    0.609  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20     45.006 ±    0.667  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    107.342 ±    1.292  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SHUFFLE    DPQ_18_11P  avgt   20     48.364 ±    0.532  ns/op
ArraySortBenchmark.sort           50               4     SORT______        SHUFFLE         RADIX  avgt   20    103.223 ±    2.850  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        STAGGER      BASELINE  avgt   20     16.292 ±    0.824  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        STAGGER        DPQ_11  avgt   20    306.744 ±    1.117  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        STAGGER  DPQ_18_11_21  avgt   20    340.713 ±    0.564  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        STAGGER    DPQ_18_11I  avgt   20    317.202 ±    6.647  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        STAGGER    DPQ_18_11P  avgt   20    263.094 ±    0.962  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        STAGGER         RADIX  avgt   20    455.596 ±    7.733  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SAWTOTH      BASELINE  avgt   20     16.287 ±    0.826  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SAWTOTH        DPQ_11  avgt   20    310.315 ±    3.022  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20    372.875 ±    2.694  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20    293.461 ±    7.583  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20    308.300 ±    3.448  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SAWTOTH         RADIX  avgt   20   1535.196 ±    6.824  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        _RANDOM      BASELINE  avgt   20     16.290 ±    0.829  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        _RANDOM        DPQ_11  avgt   20   6732.406 ± 7716.413  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20    379.734 ±   11.882  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        _RANDOM    DPQ_18_11I  avgt   20    377.124 ±  157.436  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        _RANDOM    DPQ_18_11P  avgt   20   1633.720 ± 4542.542  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        _RANDOM         RADIX  avgt   20   1698.332 ±  357.612  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        PLATEAU      BASELINE  avgt   20     16.290 ±    0.827  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        PLATEAU        DPQ_11  avgt   20    238.566 ±    1.632  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20    321.106 ±    0.743  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        PLATEAU    DPQ_18_11I  avgt   20    263.033 ±    5.995  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        PLATEAU    DPQ_18_11P  avgt   20    277.955 ±    1.665  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        PLATEAU         RADIX  avgt   20    732.464 ±   18.703  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SHUFFLE      BASELINE  avgt   20     16.290 ±    0.827  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SHUFFLE        DPQ_11  avgt   20   5407.484 ± 6968.095  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20    240.466 ±   35.815  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20    497.912 ±  683.239  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20    209.351 ±   19.234  ns/op
ArraySortBenchmark.sort           50               4     DITHER____        SHUFFLE         RADIX  avgt   20   1201.392 ±  213.836  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        STAGGER      BASELINE  avgt   20     16.288 ±    0.824  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        STAGGER        DPQ_11  avgt   20    318.399 ±    0.800  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20    319.111 ±    1.070  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        STAGGER    DPQ_18_11I  avgt   20    376.751 ±    1.935  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        STAGGER    DPQ_18_11P  avgt   20    278.496 ±    1.215  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        STAGGER         RADIX  avgt   20   1435.424 ±   11.453  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SAWTOTH      BASELINE  avgt   20     16.287 ±    0.827  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SAWTOTH        DPQ_11  avgt   20    316.741 ±    7.806  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20    334.127 ±    2.139  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20    336.277 ±    1.007  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20    239.122 ±    0.669  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SAWTOTH         RADIX  avgt   20    414.342 ±    7.036  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        _RANDOM      BASELINE  avgt   20     16.290 ±    0.829  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        _RANDOM        DPQ_11  avgt   20   8178.325 ± 8583.465  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20    422.470 ±   14.240  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20   4504.092 ± 6822.409  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20   1727.730 ± 5168.072  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        _RANDOM         RADIX  avgt   20   1596.210 ±   30.071  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        PLATEAU      BASELINE  avgt   20     16.289 ±    0.828  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        PLATEAU        DPQ_11  avgt   20     73.153 ±    0.610  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20     45.007 ±    0.645  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20     76.295 ±    0.977  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20     48.373 ±    0.553  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        PLATEAU         RADIX  avgt   20    132.690 ±    4.716  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SHUFFLE      BASELINE  avgt   20     16.288 ±    0.826  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SHUFFLE        DPQ_11  avgt   20   4478.663 ± 5874.718  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20    126.271 ±   23.134  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   2836.268 ± 6943.227  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20    117.593 ±   43.040  ns/op
ArraySortBenchmark.sort           50              16     IDENT_____        SHUFFLE         RADIX  avgt   20    333.252 ±  106.670  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        STAGGER      BASELINE  avgt   20     16.294 ±    0.828  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        STAGGER        DPQ_11  avgt   20    315.388 ±    1.067  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20    501.511 ±    0.969  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        STAGGER    DPQ_18_11I  avgt   20    341.151 ±    3.614  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        STAGGER    DPQ_18_11P  avgt   20    415.195 ±    0.721  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        STAGGER         RADIX  avgt   20   1795.229 ±    9.632  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SAWTOTH      BASELINE  avgt   20     16.289 ±    0.827  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SAWTOTH        DPQ_11  avgt   20    266.323 ±    0.638  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20    491.802 ±    3.081  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20    299.818 ±    1.416  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20    336.691 ±    1.646  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SAWTOTH         RADIX  avgt   20    432.367 ±    9.026  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        _RANDOM      BASELINE  avgt   20     16.287 ±    0.827  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        _RANDOM        DPQ_11  avgt   20  12519.563 ± 9253.779  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20    415.153 ±   17.135  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20   1433.629 ± 2560.175  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20    342.380 ±   16.788  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        _RANDOM         RADIX  avgt   20   1595.890 ±   33.250  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        PLATEAU      BASELINE  avgt   20     16.289 ±    0.825  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        PLATEAU        DPQ_11  avgt   20    220.990 ±    1.525  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    354.886 ±    0.771  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    105.551 ±    0.760  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    236.789 ±    0.798  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        PLATEAU         RADIX  avgt   20    160.409 ±    7.642  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SHUFFLE      BASELINE  avgt   20     16.284 ±    0.831  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SHUFFLE        DPQ_11  avgt   20   1779.779 ± 4088.728  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20    652.788 ±   30.686  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   3551.963 ± 8649.163  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20    379.482 ±    7.672  ns/op
ArraySortBenchmark.sort           50              16     REVERSE___        SHUFFLE         RADIX  avgt   20    377.327 ±  110.349  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        STAGGER      BASELINE  avgt   20     16.289 ±    0.825  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        STAGGER        DPQ_11  avgt   20    347.063 ±    3.105  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20    373.297 ±    0.810  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20    397.873 ±    1.559  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20    343.475 ±    1.282  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        STAGGER         RADIX  avgt   20   1557.134 ±   14.672  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     16.291 ±    0.828  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20    348.029 ±    2.387  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20    409.015 ±    8.611  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20    333.516 ±    1.735  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20    305.872 ±    0.859  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SAWTOTH         RADIX  avgt   20    478.165 ±    8.380  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        _RANDOM      BASELINE  avgt   20     16.290 ±    0.824  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        _RANDOM        DPQ_11  avgt   20   7921.129 ± 8247.442  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20    414.183 ±   24.572  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20   5554.291 ± 9468.001  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20    396.387 ±  175.450  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        _RANDOM         RADIX  avgt   20   1609.175 ±   48.683  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        PLATEAU      BASELINE  avgt   20     16.290 ±    0.823  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        PLATEAU        DPQ_11  avgt   20    153.293 ±    1.354  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    209.649 ±    0.688  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    227.574 ±    2.344  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    162.278 ±    0.648  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        PLATEAU         RADIX  avgt   20    148.035 ±    6.679  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     16.288 ±    0.826  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   4120.259 ± 5914.427  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20    333.729 ±   69.292  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   2203.452 ± 3452.303  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20    767.238 ± 1407.403  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_FR        SHUFFLE         RADIX  avgt   20    445.424 ±   84.949  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        STAGGER      BASELINE  avgt   20     16.290 ±    0.826  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        STAGGER        DPQ_11  avgt   20    304.564 ±    1.834  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20    364.003 ±    0.692  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20    309.275 ±    0.780  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20    301.614 ±    3.164  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        STAGGER         RADIX  avgt   20   1547.564 ±   17.391  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     16.288 ±    0.828  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20    288.539 ±    7.984  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20    345.663 ±    2.724  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20    339.599 ±    2.653  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20    242.508 ±    1.086  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SAWTOTH         RADIX  avgt   20    488.411 ±    7.540  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        _RANDOM      BASELINE  avgt   20     16.288 ±    0.826  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        _RANDOM        DPQ_11  avgt   20   9155.449 ± 7884.779  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20    425.375 ±   25.301  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20   3612.146 ± 3938.858  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20    531.461 ±  602.222  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        _RANDOM         RADIX  avgt   20   1771.512 ±  395.016  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        PLATEAU      BASELINE  avgt   20     16.291 ±    0.827  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        PLATEAU        DPQ_11  avgt   20     76.615 ±    4.970  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20     45.002 ±    0.644  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20     75.807 ±    1.083  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20     48.372 ±    0.547  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        PLATEAU         RADIX  avgt   20    133.322 ±    4.976  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     16.289 ±    0.830  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   4401.552 ± 6439.437  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20    281.388 ±   12.531  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   4311.801 ± 9191.646  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20    342.846 ±  372.086  ns/op
ArraySortBenchmark.sort           50              16     REVERSE_BA        SHUFFLE         RADIX  avgt   20    452.181 ±   79.476  ns/op
ArraySortBenchmark.sort           50              16     SORT______        STAGGER      BASELINE  avgt   20     16.468 ±    0.779  ns/op
ArraySortBenchmark.sort           50              16     SORT______        STAGGER        DPQ_11  avgt   20     91.525 ±    0.582  ns/op
ArraySortBenchmark.sort           50              16     SORT______        STAGGER  DPQ_18_11_21  avgt   20     45.012 ±    0.669  ns/op
ArraySortBenchmark.sort           50              16     SORT______        STAGGER    DPQ_18_11I  avgt   20    109.084 ±    0.843  ns/op
ArraySortBenchmark.sort           50              16     SORT______        STAGGER    DPQ_18_11P  avgt   20     48.366 ±    0.530  ns/op
ArraySortBenchmark.sort           50              16     SORT______        STAGGER         RADIX  avgt   20    103.274 ±    2.850  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SAWTOTH      BASELINE  avgt   20     16.470 ±    0.777  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SAWTOTH        DPQ_11  avgt   20     91.501 ±    0.649  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20     45.018 ±    0.678  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SAWTOTH    DPQ_18_11I  avgt   20    110.761 ±    0.556  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SAWTOTH    DPQ_18_11P  avgt   20     48.360 ±    0.530  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SAWTOTH         RADIX  avgt   20    106.315 ±    2.279  ns/op
ArraySortBenchmark.sort           50              16     SORT______        _RANDOM      BASELINE  avgt   20     16.472 ±    0.776  ns/op
ArraySortBenchmark.sort           50              16     SORT______        _RANDOM        DPQ_11  avgt   20    680.228 ± 1856.153  ns/op
ArraySortBenchmark.sort           50              16     SORT______        _RANDOM  DPQ_18_11_21  avgt   20     45.011 ±    0.669  ns/op
ArraySortBenchmark.sort           50              16     SORT______        _RANDOM    DPQ_18_11I  avgt   20    828.474 ± 1930.456  ns/op
ArraySortBenchmark.sort           50              16     SORT______        _RANDOM    DPQ_18_11P  avgt   20     48.366 ±    0.531  ns/op
ArraySortBenchmark.sort           50              16     SORT______        _RANDOM         RADIX  avgt   20    108.714 ±    1.940  ns/op
ArraySortBenchmark.sort           50              16     SORT______        PLATEAU      BASELINE  avgt   20     16.471 ±    0.770  ns/op
ArraySortBenchmark.sort           50              16     SORT______        PLATEAU        DPQ_11  avgt   20     72.946 ±    0.653  ns/op
ArraySortBenchmark.sort           50              16     SORT______        PLATEAU  DPQ_18_11_21  avgt   20     45.004 ±    0.671  ns/op
ArraySortBenchmark.sort           50              16     SORT______        PLATEAU    DPQ_18_11I  avgt   20     76.200 ±    0.650  ns/op
ArraySortBenchmark.sort           50              16     SORT______        PLATEAU    DPQ_18_11P  avgt   20     48.364 ±    0.530  ns/op
ArraySortBenchmark.sort           50              16     SORT______        PLATEAU         RADIX  avgt   20    103.293 ±    2.885  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SHUFFLE      BASELINE  avgt   20     16.476 ±    0.774  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SHUFFLE        DPQ_11  avgt   20     91.605 ±    0.588  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20     45.009 ±    0.670  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    107.032 ±    1.096  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SHUFFLE    DPQ_18_11P  avgt   20     48.370 ±    0.524  ns/op
ArraySortBenchmark.sort           50              16     SORT______        SHUFFLE         RADIX  avgt   20    103.248 ±    2.863  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        STAGGER      BASELINE  avgt   20     16.289 ±    0.827  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        STAGGER        DPQ_11  avgt   20    316.126 ±    0.393  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        STAGGER  DPQ_18_11_21  avgt   20    342.022 ±    1.528  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        STAGGER    DPQ_18_11I  avgt   20    352.294 ±    1.382  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        STAGGER    DPQ_18_11P  avgt   20    296.431 ±    1.532  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        STAGGER         RADIX  avgt   20   1472.876 ±   17.243  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SAWTOTH      BASELINE  avgt   20     16.291 ±    0.826  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SAWTOTH        DPQ_11  avgt   20    339.462 ±    1.145  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20    351.314 ±    1.890  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20    340.950 ±    2.084  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20    270.887 ±    0.653  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SAWTOTH         RADIX  avgt   20    744.852 ±    8.075  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        _RANDOM      BASELINE  avgt   20     16.291 ±    0.825  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        _RANDOM        DPQ_11  avgt   20   8355.001 ± 8799.657  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20    422.275 ±   14.082  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        _RANDOM    DPQ_18_11I  avgt   20   1385.557 ± 2345.319  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        _RANDOM    DPQ_18_11P  avgt   20    385.958 ±  160.293  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        _RANDOM         RADIX  avgt   20   1846.430 ±  685.211  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        PLATEAU      BASELINE  avgt   20     16.291 ±    0.826  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        PLATEAU        DPQ_11  avgt   20    242.216 ±    5.705  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20    240.344 ±    0.949  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        PLATEAU    DPQ_18_11I  avgt   20    262.124 ±    0.455  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        PLATEAU    DPQ_18_11P  avgt   20    209.719 ±    0.913  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        PLATEAU         RADIX  avgt   20    730.240 ±    7.675  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SHUFFLE      BASELINE  avgt   20     16.285 ±    0.830  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SHUFFLE        DPQ_11  avgt   20   3805.501 ± 5440.303  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20    142.505 ±   25.581  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   3498.506 ± 7839.365  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20    221.984 ±  150.652  ns/op
ArraySortBenchmark.sort           50              16     DITHER____        SHUFFLE         RADIX  avgt   20   1268.657 ± 1893.582  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        STAGGER      BASELINE  avgt   20     16.287 ±    0.826  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        STAGGER        DPQ_11  avgt   20    302.107 ±    0.704  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20    388.514 ±    0.804  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        STAGGER    DPQ_18_11I  avgt   20    317.464 ±    1.913  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        STAGGER    DPQ_18_11P  avgt   20    314.909 ±    1.221  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        STAGGER         RADIX  avgt   20   1574.613 ±   15.349  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SAWTOTH      BASELINE  avgt   20     16.289 ±    0.828  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SAWTOTH        DPQ_11  avgt   20     91.557 ±    0.539  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20     44.992 ±    0.640  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20    108.675 ±    0.900  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20     48.383 ±    0.558  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SAWTOTH         RADIX  avgt   20    133.018 ±    4.886  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        _RANDOM      BASELINE  avgt   20     16.292 ±    0.826  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        _RANDOM        DPQ_11  avgt   20   6502.800 ± 8368.758  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20    435.084 ±   13.150  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20   5621.808 ± 7459.036  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20   2562.593 ± 7880.829  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        _RANDOM         RADIX  avgt   20   1661.010 ±   30.620  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        PLATEAU      BASELINE  avgt   20     16.291 ±    0.823  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        PLATEAU        DPQ_11  avgt   20     91.600 ±    0.573  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20     44.998 ±    0.636  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    107.982 ±    0.707  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20     48.370 ±    0.552  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        PLATEAU         RADIX  avgt   20    133.331 ±    5.009  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SHUFFLE      BASELINE  avgt   20     16.290 ±    0.827  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SHUFFLE        DPQ_11  avgt   20   4112.509 ± 5511.419  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20    121.263 ±   23.613  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   1479.306 ± 3508.380  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20     96.388 ±   32.347  ns/op
ArraySortBenchmark.sort           50              64     IDENT_____        SHUFFLE         RADIX  avgt   20   1293.676 ± 2851.341  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        STAGGER      BASELINE  avgt   20     16.291 ±    0.825  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        STAGGER        DPQ_11  avgt   20    314.921 ±    1.344  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20    426.471 ±    1.194  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        STAGGER    DPQ_18_11I  avgt   20    408.986 ±    6.533  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        STAGGER    DPQ_18_11P  avgt   20    319.247 ±    0.770  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        STAGGER         RADIX  avgt   20   1623.716 ±    5.275  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SAWTOTH      BASELINE  avgt   20     16.291 ±    0.824  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SAWTOTH        DPQ_11  avgt   20    205.942 ±    0.638  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20    606.464 ±    2.358  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20    165.071 ±    4.152  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20    435.465 ±    1.005  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SAWTOTH         RADIX  avgt   20    177.351 ±   12.979  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        _RANDOM      BASELINE  avgt   20     16.289 ±    0.826  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        _RANDOM        DPQ_11  avgt   20  10117.086 ± 9486.846  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20    428.357 ±   18.190  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20   1420.773 ± 2334.103  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20    407.705 ±  172.687  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        _RANDOM         RADIX  avgt   20   1636.470 ±   36.751  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        PLATEAU      BASELINE  avgt   20     16.291 ±    0.824  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        PLATEAU        DPQ_11  avgt   20    211.361 ±    5.166  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    605.248 ±    1.230  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    164.031 ±    3.844  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    435.365 ±    0.981  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        PLATEAU         RADIX  avgt   20    173.181 ±    5.877  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SHUFFLE      BASELINE  avgt   20     16.291 ±    0.824  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SHUFFLE        DPQ_11  avgt   20   1618.645 ± 3745.155  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20    663.397 ±   38.652  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   3352.558 ± 8196.388  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20    441.747 ±  145.082  ns/op
ArraySortBenchmark.sort           50              64     REVERSE___        SHUFFLE         RADIX  avgt   20   1042.522 ± 2884.790  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        STAGGER      BASELINE  avgt   20     16.290 ±    0.826  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        STAGGER        DPQ_11  avgt   20    282.194 ±    1.479  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20    410.929 ±    1.372  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20    424.824 ±    2.847  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20    332.232 ±    1.326  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        STAGGER         RADIX  avgt   20   1598.035 ±   13.812  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     16.291 ±    0.828  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20    183.353 ±    2.690  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20    235.420 ±    0.600  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20    276.496 ±    6.055  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20    176.347 ±    0.542  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SAWTOTH         RADIX  avgt   20    258.778 ±    7.565  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        _RANDOM      BASELINE  avgt   20     16.286 ±    0.831  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        _RANDOM        DPQ_11  avgt   20   9116.489 ± 8480.239  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20    427.743 ±   24.038  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20   1435.774 ± 2167.488  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20    420.306 ±  214.935  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        _RANDOM         RADIX  avgt   20   1627.395 ±   49.623  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        PLATEAU      BASELINE  avgt   20     16.294 ±    0.826  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        PLATEAU        DPQ_11  avgt   20    185.045 ±    1.946  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    235.440 ±    0.583  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    282.224 ±    5.395  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    176.292 ±    0.549  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        PLATEAU         RADIX  avgt   20    264.125 ±    7.891  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     16.289 ±    0.828  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   2788.467 ± 4612.563  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20    304.020 ±   68.614  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20    548.199 ±  393.677  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20    361.099 ±  342.277  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_FR        SHUFFLE         RADIX  avgt   20   1704.484 ± 3652.639  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        STAGGER      BASELINE  avgt   20     16.292 ±    0.827  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        STAGGER        DPQ_11  avgt   20    270.239 ±    0.659  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20    393.924 ±    3.627  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20    340.329 ±    1.090  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20    315.653 ±    1.398  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        STAGGER         RADIX  avgt   20   1611.377 ±    6.820  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     16.286 ±    0.826  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20    138.544 ±    1.141  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20    254.138 ±    1.548  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20    198.902 ±    1.167  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20    163.642 ±    0.813  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SAWTOTH         RADIX  avgt   20    270.234 ±    7.097  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        _RANDOM      BASELINE  avgt   20     16.288 ±    0.826  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        _RANDOM        DPQ_11  avgt   20   6488.926 ± 8435.204  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20    441.238 ±   27.294  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20   1471.937 ± 2423.731  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20   2067.277 ± 6067.954  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        _RANDOM         RADIX  avgt   20   1642.693 ±   52.673  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        PLATEAU      BASELINE  avgt   20     16.287 ±    0.824  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        PLATEAU        DPQ_11  avgt   20    138.450 ±    1.110  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    252.746 ±    2.643  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    198.509 ±    0.969  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20    163.669 ±    0.801  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        PLATEAU         RADIX  avgt   20    268.394 ±    6.411  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     16.290 ±    0.825  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   3548.530 ± 5560.656  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20    290.358 ±   51.914  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   5017.082 ± 9547.384  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20    922.156 ± 2355.723  ns/op
ArraySortBenchmark.sort           50              64     REVERSE_BA        SHUFFLE         RADIX  avgt   20    589.845 ±  702.273  ns/op
ArraySortBenchmark.sort           50              64     SORT______        STAGGER      BASELINE  avgt   20     16.473 ±    0.776  ns/op
ArraySortBenchmark.sort           50              64     SORT______        STAGGER        DPQ_11  avgt   20     94.974 ±    0.576  ns/op
ArraySortBenchmark.sort           50              64     SORT______        STAGGER  DPQ_18_11_21  avgt   20     45.006 ±    0.664  ns/op
ArraySortBenchmark.sort           50              64     SORT______        STAGGER    DPQ_18_11I  avgt   20    114.238 ±    0.614  ns/op
ArraySortBenchmark.sort           50              64     SORT______        STAGGER    DPQ_18_11P  avgt   20     48.355 ±    0.528  ns/op
ArraySortBenchmark.sort           50              64     SORT______        STAGGER         RADIX  avgt   20    105.718 ±    2.312  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SAWTOTH      BASELINE  avgt   20     16.468 ±    0.773  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SAWTOTH        DPQ_11  avgt   20     91.544 ±    0.591  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20     45.010 ±    0.665  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SAWTOTH    DPQ_18_11I  avgt   20    108.542 ±    0.659  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SAWTOTH    DPQ_18_11P  avgt   20     48.358 ±    0.524  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SAWTOTH         RADIX  avgt   20    103.245 ±    2.856  ns/op
ArraySortBenchmark.sort           50              64     SORT______        _RANDOM      BASELINE  avgt   20     16.472 ±    0.774  ns/op
ArraySortBenchmark.sort           50              64     SORT______        _RANDOM        DPQ_11  avgt   20    147.472 ±  164.467  ns/op
ArraySortBenchmark.sort           50              64     SORT______        _RANDOM  DPQ_18_11_21  avgt   20     45.016 ±    0.668  ns/op
ArraySortBenchmark.sort           50              64     SORT______        _RANDOM    DPQ_18_11I  avgt   20   2997.277 ± 3519.260  ns/op
ArraySortBenchmark.sort           50              64     SORT______        _RANDOM    DPQ_18_11P  avgt   20     48.371 ±    0.523  ns/op
ArraySortBenchmark.sort           50              64     SORT______        _RANDOM         RADIX  avgt   20    104.442 ±    1.946  ns/op
ArraySortBenchmark.sort           50              64     SORT______        PLATEAU      BASELINE  avgt   20     16.470 ±    0.776  ns/op
ArraySortBenchmark.sort           50              64     SORT______        PLATEAU        DPQ_11  avgt   20     91.552 ±    0.569  ns/op
ArraySortBenchmark.sort           50              64     SORT______        PLATEAU  DPQ_18_11_21  avgt   20     45.019 ±    0.674  ns/op
ArraySortBenchmark.sort           50              64     SORT______        PLATEAU    DPQ_18_11I  avgt   20    110.048 ±    1.502  ns/op
ArraySortBenchmark.sort           50              64     SORT______        PLATEAU    DPQ_18_11P  avgt   20     48.361 ±    0.527  ns/op
ArraySortBenchmark.sort           50              64     SORT______        PLATEAU         RADIX  avgt   20    103.265 ±    2.852  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SHUFFLE      BASELINE  avgt   20     16.472 ±    0.774  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SHUFFLE        DPQ_11  avgt   20     91.555 ±    0.624  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20     45.023 ±    0.672  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    109.242 ±    0.663  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SHUFFLE    DPQ_18_11P  avgt   20     48.363 ±    0.527  ns/op
ArraySortBenchmark.sort           50              64     SORT______        SHUFFLE         RADIX  avgt   20    103.253 ±    2.856  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        STAGGER      BASELINE  avgt   20     16.291 ±    0.826  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        STAGGER        DPQ_11  avgt   20    298.423 ±    2.669  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        STAGGER  DPQ_18_11_21  avgt   20    389.681 ±    3.947  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        STAGGER    DPQ_18_11I  avgt   20    317.602 ±    1.833  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        STAGGER    DPQ_18_11P  avgt   20    315.093 ±    1.039  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        STAGGER         RADIX  avgt   20   1575.773 ±   16.099  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SAWTOTH      BASELINE  avgt   20     16.290 ±    0.824  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SAWTOTH        DPQ_11  avgt   20    203.620 ±    0.542  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20    121.486 ±    3.080  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20    202.021 ±    1.962  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20    117.904 ±    0.566  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SAWTOTH         RADIX  avgt   20    682.030 ±    8.930  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        _RANDOM      BASELINE  avgt   20     16.290 ±    0.823  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        _RANDOM        DPQ_11  avgt   20   6691.011 ± 8613.169  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20    434.127 ±   13.718  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        _RANDOM    DPQ_18_11I  avgt   20   1951.625 ± 2995.543  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        _RANDOM    DPQ_18_11P  avgt   20    343.486 ±   10.134  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        _RANDOM         RADIX  avgt   20   1618.400 ±   28.903  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        PLATEAU      BASELINE  avgt   20     16.290 ±    0.829  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        PLATEAU        DPQ_11  avgt   20    203.445 ±    0.518  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20    121.461 ±    3.079  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        PLATEAU    DPQ_18_11I  avgt   20    201.926 ±    0.862  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        PLATEAU    DPQ_18_11P  avgt   20    118.019 ±    0.763  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        PLATEAU         RADIX  avgt   20    678.442 ±    7.315  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SHUFFLE      BASELINE  avgt   20     16.291 ±    0.825  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SHUFFLE        DPQ_11  avgt   20   3203.668 ± 4970.082  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20    137.629 ±   21.211  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   3042.377 ± 6621.070  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20    143.171 ±   57.369  ns/op
ArraySortBenchmark.sort           50              64     DITHER____        SHUFFLE         RADIX  avgt   20    887.082 ±  617.393  ns/op

Benchmark result is saved to sort-50.out
