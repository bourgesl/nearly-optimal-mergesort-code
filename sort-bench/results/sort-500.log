max(arraySize): 500
subSizeList: [1, 4, 16, 64, 256]
# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 0.00% complete, ETA 00:48:00
# Fork: 1 of 2
# Warmup Iteration   1: 37.991 ns/op
# Warmup Iteration   2: 67.517 ns/op
# Warmup Iteration   3: 35.709 ns/op
Iteration   1: 35.730 ns/op
Iteration   2: 35.726 ns/op
Iteration   3: 35.725 ns/op
Iteration   4: 35.708 ns/op
Iteration   5: 35.710 ns/op
Iteration   6: 36.176 ns/op
Iteration   7: 35.621 ns/op
Iteration   8: 34.431 ns/op
Iteration   9: 35.710 ns/op
Iteration  10: 35.718 ns/op

# Run progress: 0.06% complete, ETA 01:18:38
# Fork: 2 of 2
# Warmup Iteration   1: 37.978 ns/op
# Warmup Iteration   2: 67.714 ns/op
# Warmup Iteration   3: 35.684 ns/op
Iteration   1: 35.727 ns/op
Iteration   2: 35.668 ns/op
Iteration   3: 35.707 ns/op
Iteration   4: 35.716 ns/op
Iteration   5: 35.727 ns/op
Iteration   6: 36.176 ns/op
Iteration   7: 35.705 ns/op
Iteration   8: 34.432 ns/op
Iteration   9: 35.679 ns/op
Iteration  10: 35.671 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.623 ±(99.9%) 0.376 ns/op [Average]
  (min, avg, max) = (34.431, 35.623, 36.176), stdev = 0.433
  CI (99.9%): [35.247, 36.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 0.11% complete, ETA 01:15:24
# Fork: 1 of 2
# Warmup Iteration   1: 1834.782 ns/op
# Warmup Iteration   2: 1582.914 ns/op
# Warmup Iteration   3: 1402.028 ns/op
Iteration   1: 1401.489 ns/op
Iteration   2: 1401.784 ns/op
Iteration   3: 1403.236 ns/op
Iteration   4: 1391.372 ns/op
Iteration   5: 1405.840 ns/op
Iteration   6: 1391.977 ns/op
Iteration   7: 1403.958 ns/op
Iteration   8: 1403.101 ns/op
Iteration   9: 1390.355 ns/op
Iteration  10: 1390.676 ns/op

# Run progress: 0.17% complete, ETA 01:14:37
# Fork: 2 of 2
# Warmup Iteration   1: 1844.745 ns/op
# Warmup Iteration   2: 1606.480 ns/op
# Warmup Iteration   3: 1417.510 ns/op
Iteration   1: 1418.202 ns/op
Iteration   2: 1417.527 ns/op
Iteration   3: 1418.313 ns/op
Iteration   4: 1408.025 ns/op
Iteration   5: 1419.759 ns/op
Iteration   6: 1410.461 ns/op
Iteration   7: 1420.928 ns/op
Iteration   8: 1409.060 ns/op
Iteration   9: 1404.845 ns/op
Iteration  10: 1408.426 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1405.967 ±(99.9%) 8.533 ns/op [Average]
  (min, avg, max) = (1390.355, 1405.967, 1420.928), stdev = 9.827
  CI (99.9%): [1397.434, 1414.500] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 0.22% complete, ETA 01:13:59
# Fork: 1 of 2
# Warmup Iteration   1: 24836.878 ns/op
# Warmup Iteration   2: 9256.985 ns/op
# Warmup Iteration   3: 8505.924 ns/op
Iteration   1: 8189.785 ns/op
Iteration   2: 8165.223 ns/op
Iteration   3: 8157.507 ns/op
Iteration   4: 8152.723 ns/op
Iteration   5: 8152.183 ns/op
Iteration   6: 8169.374 ns/op
Iteration   7: 8163.263 ns/op
Iteration   8: 8167.556 ns/op
Iteration   9: 8189.962 ns/op
Iteration  10: 8192.072 ns/op

# Run progress: 0.28% complete, ETA 01:13:35
# Fork: 2 of 2
# Warmup Iteration   1: 22729.161 ns/op
# Warmup Iteration   2: 9301.617 ns/op
# Warmup Iteration   3: 8605.344 ns/op
Iteration   1: 8259.602 ns/op
Iteration   2: 8271.111 ns/op
Iteration   3: 8250.603 ns/op
Iteration   4: 8212.428 ns/op
Iteration   5: 8234.280 ns/op
Iteration   6: 8255.820 ns/op
Iteration   7: 8257.726 ns/op
Iteration   8: 8210.417 ns/op
Iteration   9: 8250.711 ns/op
Iteration  10: 8272.193 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8208.727 ±(99.9%) 38.040 ns/op [Average]
  (min, avg, max) = (8152.183, 8208.727, 8272.193), stdev = 43.806
  CI (99.9%): [8170.687, 8246.767] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 0.33% complete, ETA 01:13:11
# Fork: 1 of 2
# Warmup Iteration   1: 18787.319 ns/op
# Warmup Iteration   2: 8868.623 ns/op
# Warmup Iteration   3: 7776.838 ns/op
Iteration   1: 7802.971 ns/op
Iteration   2: 7777.178 ns/op
Iteration   3: 7801.869 ns/op
Iteration   4: 7780.667 ns/op
Iteration   5: 7773.105 ns/op
Iteration   6: 7787.560 ns/op
Iteration   7: 7761.789 ns/op
Iteration   8: 7840.487 ns/op
Iteration   9: 7784.772 ns/op
Iteration  10: 7778.853 ns/op

# Run progress: 0.39% complete, ETA 01:12:57
# Fork: 2 of 2
# Warmup Iteration   1: 26870.466 ns/op
# Warmup Iteration   2: 9125.020 ns/op
# Warmup Iteration   3: 8413.139 ns/op
Iteration   1: 8087.226 ns/op
Iteration   2: 8085.206 ns/op
Iteration   3: 8065.702 ns/op
Iteration   4: 8044.741 ns/op
Iteration   5: 8054.313 ns/op
Iteration   6: 8069.973 ns/op
Iteration   7: 8037.888 ns/op
Iteration   8: 8054.763 ns/op
Iteration   9: 8051.435 ns/op
Iteration  10: 8070.246 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7925.537 ±(99.9%) 122.807 ns/op [Average]
  (min, avg, max) = (7761.789, 7925.537, 8087.226), stdev = 141.424
  CI (99.9%): [7802.731, 8048.344] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 0.44% complete, ETA 01:12:48
# Fork: 1 of 2
# Warmup Iteration   1: 13408.286 ns/op
# Warmup Iteration   2: 8058.810 ns/op
# Warmup Iteration   3: 6975.689 ns/op
Iteration   1: 6993.173 ns/op
Iteration   2: 6942.257 ns/op
Iteration   3: 7250.021 ns/op
Iteration   4: 7037.600 ns/op
Iteration   5: 6938.479 ns/op
Iteration   6: 6970.102 ns/op
Iteration   7: 6999.180 ns/op
Iteration   8: 7131.838 ns/op
Iteration   9: 6978.418 ns/op
Iteration  10: 6971.501 ns/op

# Run progress: 0.50% complete, ETA 01:12:42
# Fork: 2 of 2
# Warmup Iteration   1: 13905.162 ns/op
# Warmup Iteration   2: 8100.007 ns/op
# Warmup Iteration   3: 6895.239 ns/op
Iteration   1: 6927.796 ns/op
Iteration   2: 6896.101 ns/op
Iteration   3: 6944.254 ns/op
Iteration   4: 6948.394 ns/op
Iteration   5: 6939.344 ns/op
Iteration   6: 6945.660 ns/op
Iteration   7: 6911.420 ns/op
Iteration   8: 6934.766 ns/op
Iteration   9: 6934.058 ns/op
Iteration  10: 6957.882 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6977.612 ±(99.9%) 71.065 ns/op [Average]
  (min, avg, max) = (6896.101, 6977.612, 7250.021), stdev = 81.839
  CI (99.9%): [6906.547, 7048.678] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 0.56% complete, ETA 01:12:38
# Fork: 1 of 2
# Warmup Iteration   1: 1763.512 ns/op
# Warmup Iteration   2: 1592.743 ns/op
# Warmup Iteration   3: 1450.957 ns/op
Iteration   1: 1452.199 ns/op
Iteration   2: 1450.820 ns/op
Iteration   3: 1451.212 ns/op
Iteration   4: 1457.418 ns/op
Iteration   5: 1446.599 ns/op
Iteration   6: 1449.170 ns/op
Iteration   7: 1446.477 ns/op
Iteration   8: 1444.871 ns/op
Iteration   9: 1446.852 ns/op
Iteration  10: 1446.506 ns/op

# Run progress: 0.61% complete, ETA 01:12:35
# Fork: 2 of 2
# Warmup Iteration   1: 1975.668 ns/op
# Warmup Iteration   2: 1696.133 ns/op
# Warmup Iteration   3: 1449.111 ns/op
Iteration   1: 1449.081 ns/op
Iteration   2: 1450.069 ns/op
Iteration   3: 1449.557 ns/op
Iteration   4: 1444.196 ns/op
Iteration   5: 1445.165 ns/op
Iteration   6: 1446.594 ns/op
Iteration   7: 1445.335 ns/op
Iteration   8: 1444.985 ns/op
Iteration   9: 1444.763 ns/op
Iteration  10: 1444.939 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1447.840 ±(99.9%) 2.897 ns/op [Average]
  (min, avg, max) = (1444.196, 1447.840, 1457.418), stdev = 3.336
  CI (99.9%): [1444.943, 1450.737] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 0.67% complete, ETA 01:12:27
# Fork: 1 of 2
# Warmup Iteration   1: 37.760 ns/op
# Warmup Iteration   2: 66.290 ns/op
# Warmup Iteration   3: 35.703 ns/op
Iteration   1: 35.706 ns/op
Iteration   2: 35.657 ns/op
Iteration   3: 35.662 ns/op
Iteration   4: 35.725 ns/op
Iteration   5: 35.618 ns/op
Iteration   6: 36.169 ns/op
Iteration   7: 35.725 ns/op
Iteration   8: 34.523 ns/op
Iteration   9: 35.741 ns/op
Iteration  10: 35.687 ns/op

# Run progress: 0.72% complete, ETA 01:12:19
# Fork: 2 of 2
# Warmup Iteration   1: 38.904 ns/op
# Warmup Iteration   2: 66.623 ns/op
# Warmup Iteration   3: 35.677 ns/op
Iteration   1: 35.665 ns/op
Iteration   2: 35.664 ns/op
Iteration   3: 35.645 ns/op
Iteration   4: 35.636 ns/op
Iteration   5: 35.680 ns/op
Iteration   6: 36.168 ns/op
Iteration   7: 35.672 ns/op
Iteration   8: 34.524 ns/op
Iteration   9: 35.626 ns/op
Iteration  10: 35.609 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.605 ±(99.9%) 0.349 ns/op [Average]
  (min, avg, max) = (34.523, 35.605, 36.169), stdev = 0.402
  CI (99.9%): [35.256, 35.954] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 0.78% complete, ETA 01:12:11
# Fork: 1 of 2
# Warmup Iteration   1: 273.439 ns/op
# Warmup Iteration   2: 284.194 ns/op
# Warmup Iteration   3: 235.556 ns/op
Iteration   1: 235.508 ns/op
Iteration   2: 235.531 ns/op
Iteration   3: 236.380 ns/op
Iteration   4: 233.745 ns/op
Iteration   5: 233.842 ns/op
Iteration   6: 234.246 ns/op
Iteration   7: 233.500 ns/op
Iteration   8: 233.992 ns/op
Iteration   9: 233.633 ns/op
Iteration  10: 233.678 ns/op

# Run progress: 0.83% complete, ETA 01:12:06
# Fork: 2 of 2
# Warmup Iteration   1: 274.973 ns/op
# Warmup Iteration   2: 280.869 ns/op
# Warmup Iteration   3: 235.721 ns/op
Iteration   1: 236.212 ns/op
Iteration   2: 235.991 ns/op
Iteration   3: 236.499 ns/op
Iteration   4: 233.962 ns/op
Iteration   5: 234.173 ns/op
Iteration   6: 234.520 ns/op
Iteration   7: 233.470 ns/op
Iteration   8: 233.334 ns/op
Iteration   9: 234.156 ns/op
Iteration  10: 234.113 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  234.524 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (233.334, 234.524, 236.499), stdev = 1.066
  CI (99.9%): [233.599, 235.450] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 0.89% complete, ETA 01:12:02
# Fork: 1 of 2
# Warmup Iteration   1: 704.462 ns/op
# Warmup Iteration   2: 265.628 ns/op
# Warmup Iteration   3: 224.980 ns/op
Iteration   1: 225.442 ns/op
Iteration   2: 225.609 ns/op
Iteration   3: 225.276 ns/op
Iteration   4: 224.965 ns/op
Iteration   5: 225.454 ns/op
Iteration   6: 225.757 ns/op
Iteration   7: 225.168 ns/op
Iteration   8: 243.961 ns/op
Iteration   9: 224.973 ns/op
Iteration  10: 225.552 ns/op

# Run progress: 0.94% complete, ETA 01:11:58
# Fork: 2 of 2
# Warmup Iteration   1: 450.766 ns/op
# Warmup Iteration   2: 259.919 ns/op
# Warmup Iteration   3: 225.286 ns/op
Iteration   1: 225.562 ns/op
Iteration   2: 225.613 ns/op
Iteration   3: 225.440 ns/op
Iteration   4: 225.255 ns/op
Iteration   5: 225.914 ns/op
Iteration   6: 225.393 ns/op
Iteration   7: 225.793 ns/op
Iteration   8: 227.890 ns/op
Iteration   9: 225.965 ns/op
Iteration  10: 225.648 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  226.532 ±(99.9%) 3.600 ns/op [Average]
  (min, avg, max) = (224.965, 226.532, 243.961), stdev = 4.146
  CI (99.9%): [222.931, 230.132] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 1.00% complete, ETA 01:11:54
# Fork: 1 of 2
# Warmup Iteration   1: 322.283 ns/op
# Warmup Iteration   2: 265.594 ns/op
# Warmup Iteration   3: 233.375 ns/op
Iteration   1: 233.646 ns/op
Iteration   2: 233.552 ns/op
Iteration   3: 233.582 ns/op
Iteration   4: 233.451 ns/op
Iteration   5: 233.850 ns/op
Iteration   6: 233.740 ns/op
Iteration   7: 233.687 ns/op
Iteration   8: 236.016 ns/op
Iteration   9: 233.398 ns/op
Iteration  10: 233.852 ns/op

# Run progress: 1.06% complete, ETA 01:11:51
# Fork: 2 of 2
# Warmup Iteration   1: 398.284 ns/op
# Warmup Iteration   2: 273.565 ns/op
# Warmup Iteration   3: 226.314 ns/op
Iteration   1: 226.865 ns/op
Iteration   2: 226.644 ns/op
Iteration   3: 226.769 ns/op
Iteration   4: 227.011 ns/op
Iteration   5: 227.651 ns/op
Iteration   6: 227.136 ns/op
Iteration   7: 226.436 ns/op
Iteration   8: 229.723 ns/op
Iteration   9: 226.697 ns/op
Iteration  10: 226.885 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  230.530 ±(99.9%) 3.071 ns/op [Average]
  (min, avg, max) = (226.436, 230.530, 236.016), stdev = 3.536
  CI (99.9%): [227.459, 233.600] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 1.11% complete, ETA 01:11:47
# Fork: 1 of 2
# Warmup Iteration   1: 499.892 ns/op
# Warmup Iteration   2: 308.313 ns/op
# Warmup Iteration   3: 287.538 ns/op
Iteration   1: 287.885 ns/op
Iteration   2: 287.541 ns/op
Iteration   3: 287.597 ns/op
Iteration   4: 287.911 ns/op
Iteration   5: 287.698 ns/op
Iteration   6: 287.723 ns/op
Iteration   7: 287.685 ns/op
Iteration   8: 273.212 ns/op
Iteration   9: 287.921 ns/op
Iteration  10: 287.978 ns/op

# Run progress: 1.17% complete, ETA 01:11:44
# Fork: 2 of 2
# Warmup Iteration   1: 429.697 ns/op
# Warmup Iteration   2: 309.554 ns/op
# Warmup Iteration   3: 270.005 ns/op
Iteration   1: 270.125 ns/op
Iteration   2: 269.939 ns/op
Iteration   3: 270.015 ns/op
Iteration   4: 270.025 ns/op
Iteration   5: 271.139 ns/op
Iteration   6: 270.436 ns/op
Iteration   7: 270.299 ns/op
Iteration   8: 272.862 ns/op
Iteration   9: 269.947 ns/op
Iteration  10: 270.102 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  278.402 ±(99.9%) 7.588 ns/op [Average]
  (min, avg, max) = (269.939, 278.402, 287.978), stdev = 8.738
  CI (99.9%): [270.814, 285.990] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 1.22% complete, ETA 01:11:41
# Fork: 1 of 2
# Warmup Iteration   1: 426.108 ns/op
# Warmup Iteration   2: 421.176 ns/op
# Warmup Iteration   3: 346.294 ns/op
Iteration   1: 346.676 ns/op
Iteration   2: 346.452 ns/op
Iteration   3: 346.263 ns/op
Iteration   4: 350.618 ns/op
Iteration   5: 351.433 ns/op
Iteration   6: 350.935 ns/op
Iteration   7: 350.590 ns/op
Iteration   8: 351.122 ns/op
Iteration   9: 350.620 ns/op
Iteration  10: 350.626 ns/op

# Run progress: 1.28% complete, ETA 01:11:37
# Fork: 2 of 2
# Warmup Iteration   1: 426.045 ns/op
# Warmup Iteration   2: 399.302 ns/op
# Warmup Iteration   3: 346.765 ns/op
Iteration   1: 346.574 ns/op
Iteration   2: 346.597 ns/op
Iteration   3: 346.172 ns/op
Iteration   4: 350.723 ns/op
Iteration   5: 350.447 ns/op
Iteration   6: 350.908 ns/op
Iteration   7: 351.211 ns/op
Iteration   8: 350.995 ns/op
Iteration   9: 350.838 ns/op
Iteration  10: 351.775 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  349.579 ±(99.9%) 1.843 ns/op [Average]
  (min, avg, max) = (346.172, 349.579, 351.775), stdev = 2.122
  CI (99.9%): [347.736, 351.422] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 1.33% complete, ETA 01:11:33
# Fork: 1 of 2
# Warmup Iteration   1: 37.777 ns/op
# Warmup Iteration   2: 72.317 ns/op
# Warmup Iteration   3: 35.710 ns/op
Iteration   1: 35.617 ns/op
Iteration   2: 35.708 ns/op
Iteration   3: 35.726 ns/op
Iteration   4: 35.702 ns/op
Iteration   5: 35.769 ns/op
Iteration   6: 36.171 ns/op
Iteration   7: 35.695 ns/op
Iteration   8: 34.421 ns/op
Iteration   9: 35.671 ns/op
Iteration  10: 35.642 ns/op

# Run progress: 1.39% complete, ETA 01:11:31
# Fork: 2 of 2
# Warmup Iteration   1: 37.722 ns/op
# Warmup Iteration   2: 67.235 ns/op
# Warmup Iteration   3: 35.670 ns/op
Iteration   1: 35.705 ns/op
Iteration   2: 35.731 ns/op
Iteration   3: 35.750 ns/op
Iteration   4: 35.703 ns/op
Iteration   5: 35.785 ns/op
Iteration   6: 36.202 ns/op
Iteration   7: 35.738 ns/op
Iteration   8: 34.421 ns/op
Iteration   9: 35.778 ns/op
Iteration  10: 35.755 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.635 ±(99.9%) 0.383 ns/op [Average]
  (min, avg, max) = (34.421, 35.635, 36.202), stdev = 0.441
  CI (99.9%): [35.251, 36.018] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 1.44% complete, ETA 01:11:26
# Fork: 1 of 2
# Warmup Iteration   1: 272.286 ns/op
# Warmup Iteration   2: 288.876 ns/op
# Warmup Iteration   3: 235.738 ns/op
Iteration   1: 236.045 ns/op
Iteration   2: 235.860 ns/op
Iteration   3: 236.150 ns/op
Iteration   4: 233.671 ns/op
Iteration   5: 233.654 ns/op
Iteration   6: 234.395 ns/op
Iteration   7: 233.264 ns/op
Iteration   8: 233.857 ns/op
Iteration   9: 233.552 ns/op
Iteration  10: 233.782 ns/op

# Run progress: 1.50% complete, ETA 01:11:24
# Fork: 2 of 2
# Warmup Iteration   1: 279.972 ns/op
# Warmup Iteration   2: 325.878 ns/op
# Warmup Iteration   3: 235.926 ns/op
Iteration   1: 235.924 ns/op
Iteration   2: 236.044 ns/op
Iteration   3: 236.337 ns/op
Iteration   4: 233.885 ns/op
Iteration   5: 234.061 ns/op
Iteration   6: 234.205 ns/op
Iteration   7: 233.879 ns/op
Iteration   8: 234.292 ns/op
Iteration   9: 234.187 ns/op
Iteration  10: 233.750 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  234.540 ±(99.9%) 0.918 ns/op [Average]
  (min, avg, max) = (233.264, 234.540, 236.337), stdev = 1.057
  CI (99.9%): [233.622, 235.458] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 1.56% complete, ETA 01:11:21
# Fork: 1 of 2
# Warmup Iteration   1: 335.217 ns/op
# Warmup Iteration   2: 275.501 ns/op
# Warmup Iteration   3: 233.388 ns/op
Iteration   1: 233.777 ns/op
Iteration   2: 233.427 ns/op
Iteration   3: 233.678 ns/op
Iteration   4: 233.443 ns/op
Iteration   5: 233.903 ns/op
Iteration   6: 233.782 ns/op
Iteration   7: 233.479 ns/op
Iteration   8: 236.007 ns/op
Iteration   9: 234.007 ns/op
Iteration  10: 233.420 ns/op

# Run progress: 1.61% complete, ETA 01:11:17
# Fork: 2 of 2
# Warmup Iteration   1: 472.430 ns/op
# Warmup Iteration   2: 260.391 ns/op
# Warmup Iteration   3: 225.598 ns/op
Iteration   1: 225.477 ns/op
Iteration   2: 225.049 ns/op
Iteration   3: 225.138 ns/op
Iteration   4: 224.883 ns/op
Iteration   5: 225.467 ns/op
Iteration   6: 225.451 ns/op
Iteration   7: 225.278 ns/op
Iteration   8: 228.298 ns/op
Iteration   9: 224.892 ns/op
Iteration  10: 225.449 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  229.715 ±(99.9%) 3.797 ns/op [Average]
  (min, avg, max) = (224.883, 229.715, 236.007), stdev = 4.373
  CI (99.9%): [225.918, 233.512] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 1.67% complete, ETA 01:11:14
# Fork: 1 of 2
# Warmup Iteration   1: 398.615 ns/op
# Warmup Iteration   2: 261.364 ns/op
# Warmup Iteration   3: 226.989 ns/op
Iteration   1: 226.795 ns/op
Iteration   2: 226.650 ns/op
Iteration   3: 226.452 ns/op
Iteration   4: 226.687 ns/op
Iteration   5: 227.481 ns/op
Iteration   6: 227.205 ns/op
Iteration   7: 227.404 ns/op
Iteration   8: 229.742 ns/op
Iteration   9: 226.677 ns/op
Iteration  10: 226.915 ns/op

# Run progress: 1.72% complete, ETA 01:11:11
# Fork: 2 of 2
# Warmup Iteration   1: 408.757 ns/op
# Warmup Iteration   2: 260.451 ns/op
# Warmup Iteration   3: 227.452 ns/op
Iteration   1: 227.036 ns/op
Iteration   2: 227.300 ns/op
Iteration   3: 227.242 ns/op
Iteration   4: 227.480 ns/op
Iteration   5: 228.076 ns/op
Iteration   6: 227.464 ns/op
Iteration   7: 227.737 ns/op
Iteration   8: 229.919 ns/op
Iteration   9: 227.482 ns/op
Iteration  10: 227.370 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  227.456 ±(99.9%) 0.788 ns/op [Average]
  (min, avg, max) = (226.452, 227.456, 229.919), stdev = 0.908
  CI (99.9%): [226.667, 228.244] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 1.78% complete, ETA 01:11:08
# Fork: 1 of 2
# Warmup Iteration   1: 363.027 ns/op
# Warmup Iteration   2: 325.756 ns/op
# Warmup Iteration   3: 268.813 ns/op
Iteration   1: 268.342 ns/op
Iteration   2: 268.493 ns/op
Iteration   3: 268.433 ns/op
Iteration   4: 268.372 ns/op
Iteration   5: 268.609 ns/op
Iteration   6: 269.161 ns/op
Iteration   7: 268.410 ns/op
Iteration   8: 271.911 ns/op
Iteration   9: 268.543 ns/op
Iteration  10: 268.480 ns/op

# Run progress: 1.83% complete, ETA 01:11:05
# Fork: 2 of 2
# Warmup Iteration   1: 408.529 ns/op
# Warmup Iteration   2: 307.438 ns/op
# Warmup Iteration   3: 270.044 ns/op
Iteration   1: 270.140 ns/op
Iteration   2: 270.112 ns/op
Iteration   3: 270.290 ns/op
Iteration   4: 269.980 ns/op
Iteration   5: 271.285 ns/op
Iteration   6: 270.253 ns/op
Iteration   7: 270.597 ns/op
Iteration   8: 272.783 ns/op
Iteration   9: 269.941 ns/op
Iteration  10: 270.033 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  269.708 ±(99.9%) 1.120 ns/op [Average]
  (min, avg, max) = (268.342, 269.708, 272.783), stdev = 1.290
  CI (99.9%): [268.588, 270.829] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 1.89% complete, ETA 01:11:03
# Fork: 1 of 2
# Warmup Iteration   1: 415.803 ns/op
# Warmup Iteration   2: 397.646 ns/op
# Warmup Iteration   3: 346.668 ns/op
Iteration   1: 346.238 ns/op
Iteration   2: 346.757 ns/op
Iteration   3: 346.255 ns/op
Iteration   4: 351.994 ns/op
Iteration   5: 350.572 ns/op
Iteration   6: 350.870 ns/op
Iteration   7: 350.428 ns/op
Iteration   8: 351.220 ns/op
Iteration   9: 350.887 ns/op
Iteration  10: 350.490 ns/op

# Run progress: 1.94% complete, ETA 01:11:00
# Fork: 2 of 2
# Warmup Iteration   1: 427.768 ns/op
# Warmup Iteration   2: 400.521 ns/op
# Warmup Iteration   3: 347.444 ns/op
Iteration   1: 346.116 ns/op
Iteration   2: 346.175 ns/op
Iteration   3: 346.259 ns/op
Iteration   4: 350.921 ns/op
Iteration   5: 350.315 ns/op
Iteration   6: 350.729 ns/op
Iteration   7: 350.264 ns/op
Iteration   8: 351.345 ns/op
Iteration   9: 351.028 ns/op
Iteration  10: 350.735 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  349.480 ±(99.9%) 1.887 ns/op [Average]
  (min, avg, max) = (346.116, 349.480, 351.994), stdev = 2.173
  CI (99.9%): [347.593, 351.367] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 2.00% complete, ETA 01:10:58
# Fork: 1 of 2
# Warmup Iteration   1: 38.532 ns/op
# Warmup Iteration   2: 66.000 ns/op
# Warmup Iteration   3: 35.649 ns/op
Iteration   1: 35.718 ns/op
Iteration   2: 35.724 ns/op
Iteration   3: 35.704 ns/op
Iteration   4: 35.685 ns/op
Iteration   5: 35.696 ns/op
Iteration   6: 36.162 ns/op
Iteration   7: 35.728 ns/op
Iteration   8: 34.541 ns/op
Iteration   9: 35.701 ns/op
Iteration  10: 35.680 ns/op

# Run progress: 2.06% complete, ETA 01:10:55
# Fork: 2 of 2
# Warmup Iteration   1: 56.037 ns/op
# Warmup Iteration   2: 68.250 ns/op
# Warmup Iteration   3: 49.962 ns/op
Iteration   1: 50.034 ns/op
Iteration   2: 50.025 ns/op
Iteration   3: 50.025 ns/op
Iteration   4: 50.021 ns/op
Iteration   5: 50.026 ns/op
Iteration   6: 50.025 ns/op
Iteration   7: 50.006 ns/op
Iteration   8: 34.567 ns/op
Iteration   9: 50.029 ns/op
Iteration  10: 50.117 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.061 ±(99.9%) 6.433 ns/op [Average]
  (min, avg, max) = (34.541, 42.061, 50.117), stdev = 7.409
  CI (99.9%): [35.627, 48.494] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 2.11% complete, ETA 01:10:51
# Fork: 1 of 2
# Warmup Iteration   1: 283.367 ns/op
# Warmup Iteration   2: 286.865 ns/op
# Warmup Iteration   3: 238.184 ns/op
Iteration   1: 238.106 ns/op
Iteration   2: 238.131 ns/op
Iteration   3: 238.344 ns/op
Iteration   4: 235.103 ns/op
Iteration   5: 235.048 ns/op
Iteration   6: 235.221 ns/op
Iteration   7: 235.455 ns/op
Iteration   8: 236.559 ns/op
Iteration   9: 236.298 ns/op
Iteration  10: 235.431 ns/op

# Run progress: 2.17% complete, ETA 01:10:50
# Fork: 2 of 2
# Warmup Iteration   1: 280.442 ns/op
# Warmup Iteration   2: 279.843 ns/op
# Warmup Iteration   3: 241.397 ns/op
Iteration   1: 241.103 ns/op
Iteration   2: 241.511 ns/op
Iteration   3: 241.079 ns/op
Iteration   4: 238.920 ns/op
Iteration   5: 237.452 ns/op
Iteration   6: 237.314 ns/op
Iteration   7: 239.077 ns/op
Iteration   8: 239.441 ns/op
Iteration   9: 237.957 ns/op
Iteration  10: 238.273 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  237.791 ±(99.9%) 1.765 ns/op [Average]
  (min, avg, max) = (235.048, 237.791, 241.511), stdev = 2.033
  CI (99.9%): [236.026, 239.556] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 2.22% complete, ETA 01:10:47
# Fork: 1 of 2
# Warmup Iteration   1: 1338.216 ns/op
# Warmup Iteration   2: 498.174 ns/op
# Warmup Iteration   3: 435.123 ns/op
Iteration   1: 435.143 ns/op
Iteration   2: 435.098 ns/op
Iteration   3: 435.235 ns/op
Iteration   4: 436.336 ns/op
Iteration   5: 435.035 ns/op
Iteration   6: 434.986 ns/op
Iteration   7: 435.754 ns/op
Iteration   8: 438.527 ns/op
Iteration   9: 435.162 ns/op
Iteration  10: 435.262 ns/op

# Run progress: 2.28% complete, ETA 01:10:45
# Fork: 2 of 2
# Warmup Iteration   1: 1498.551 ns/op
# Warmup Iteration   2: 550.647 ns/op
# Warmup Iteration   3: 437.989 ns/op
Iteration   1: 438.141 ns/op
Iteration   2: 437.932 ns/op
Iteration   3: 437.674 ns/op
Iteration   4: 438.030 ns/op
Iteration   5: 438.103 ns/op
Iteration   6: 438.075 ns/op
Iteration   7: 438.718 ns/op
Iteration   8: 440.875 ns/op
Iteration   9: 438.850 ns/op
Iteration  10: 437.963 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  437.045 ±(99.9%) 1.506 ns/op [Average]
  (min, avg, max) = (434.986, 437.045, 440.875), stdev = 1.735
  CI (99.9%): [435.539, 438.551] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 2.33% complete, ETA 01:10:45
# Fork: 1 of 2
# Warmup Iteration   1: 475.523 ns/op
# Warmup Iteration   2: 526.325 ns/op
# Warmup Iteration   3: 443.169 ns/op
Iteration   1: 443.351 ns/op
Iteration   2: 443.297 ns/op
Iteration   3: 443.360 ns/op
Iteration   4: 443.282 ns/op
Iteration   5: 443.448 ns/op
Iteration   6: 443.303 ns/op
Iteration   7: 443.409 ns/op
Iteration   8: 369.105 ns/op
Iteration   9: 443.302 ns/op
Iteration  10: 443.314 ns/op

# Run progress: 2.39% complete, ETA 01:10:42
# Fork: 2 of 2
# Warmup Iteration   1: 757.763 ns/op
# Warmup Iteration   2: 527.091 ns/op
# Warmup Iteration   3: 436.568 ns/op
Iteration   1: 437.516 ns/op
Iteration   2: 436.678 ns/op
Iteration   3: 437.203 ns/op
Iteration   4: 437.242 ns/op
Iteration   5: 437.529 ns/op
Iteration   6: 437.408 ns/op
Iteration   7: 437.609 ns/op
Iteration   8: 438.996 ns/op
Iteration   9: 437.407 ns/op
Iteration  10: 437.036 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  436.690 ±(99.9%) 14.051 ns/op [Average]
  (min, avg, max) = (369.105, 436.690, 443.448), stdev = 16.182
  CI (99.9%): [422.638, 450.741] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 2.44% complete, ETA 01:10:39
# Fork: 1 of 2
# Warmup Iteration   1: 762.526 ns/op
# Warmup Iteration   2: 495.905 ns/op
# Warmup Iteration   3: 435.142 ns/op
Iteration   1: 436.034 ns/op
Iteration   2: 436.181 ns/op
Iteration   3: 436.249 ns/op
Iteration   4: 435.496 ns/op
Iteration   5: 436.132 ns/op
Iteration   6: 435.721 ns/op
Iteration   7: 436.233 ns/op
Iteration   8: 437.420 ns/op
Iteration   9: 436.283 ns/op
Iteration  10: 436.262 ns/op

# Run progress: 2.50% complete, ETA 01:10:36
# Fork: 2 of 2
# Warmup Iteration   1: 656.452 ns/op
# Warmup Iteration   2: 498.691 ns/op
# Warmup Iteration   3: 436.366 ns/op
Iteration   1: 435.748 ns/op
Iteration   2: 436.323 ns/op
Iteration   3: 435.752 ns/op
Iteration   4: 435.115 ns/op
Iteration   5: 436.400 ns/op
Iteration   6: 435.178 ns/op
Iteration   7: 435.848 ns/op
Iteration   8: 438.507 ns/op
Iteration   9: 436.267 ns/op
Iteration  10: 436.338 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  436.174 ±(99.9%) 0.642 ns/op [Average]
  (min, avg, max) = (435.115, 436.174, 438.507), stdev = 0.740
  CI (99.9%): [435.532, 436.817] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 2.56% complete, ETA 01:10:33
# Fork: 1 of 2
# Warmup Iteration   1: 481.242 ns/op
# Warmup Iteration   2: 472.578 ns/op
# Warmup Iteration   3: 416.775 ns/op
Iteration   1: 416.343 ns/op
Iteration   2: 416.293 ns/op
Iteration   3: 416.466 ns/op
Iteration   4: 420.701 ns/op
Iteration   5: 420.472 ns/op
Iteration   6: 420.942 ns/op
Iteration   7: 420.415 ns/op
Iteration   8: 421.326 ns/op
Iteration   9: 420.609 ns/op
Iteration  10: 420.782 ns/op

# Run progress: 2.61% complete, ETA 01:10:30
# Fork: 2 of 2
# Warmup Iteration   1: 484.502 ns/op
# Warmup Iteration   2: 469.484 ns/op
# Warmup Iteration   3: 416.215 ns/op
Iteration   1: 416.308 ns/op
Iteration   2: 416.140 ns/op
Iteration   3: 415.960 ns/op
Iteration   4: 420.821 ns/op
Iteration   5: 420.917 ns/op
Iteration   6: 421.423 ns/op
Iteration   7: 421.181 ns/op
Iteration   8: 421.500 ns/op
Iteration   9: 420.842 ns/op
Iteration  10: 420.978 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  419.521 ±(99.9%) 1.923 ns/op [Average]
  (min, avg, max) = (415.960, 419.521, 421.500), stdev = 2.215
  CI (99.9%): [417.597, 421.444] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 2.67% complete, ETA 01:10:27
# Fork: 1 of 2
# Warmup Iteration   1: 51.508 ns/op
# Warmup Iteration   2: 66.585 ns/op
# Warmup Iteration   3: 35.665 ns/op
Iteration   1: 35.710 ns/op
Iteration   2: 35.624 ns/op
Iteration   3: 35.576 ns/op
Iteration   4: 35.577 ns/op
Iteration   5: 35.764 ns/op
Iteration   6: 36.168 ns/op
Iteration   7: 35.710 ns/op
Iteration   8: 34.529 ns/op
Iteration   9: 35.620 ns/op
Iteration  10: 35.575 ns/op

# Run progress: 2.72% complete, ETA 01:10:24
# Fork: 2 of 2
# Warmup Iteration   1: 38.341 ns/op
# Warmup Iteration   2: 66.616 ns/op
# Warmup Iteration   3: 35.676 ns/op
Iteration   1: 35.602 ns/op
Iteration   2: 35.658 ns/op
Iteration   3: 35.624 ns/op
Iteration   4: 35.679 ns/op
Iteration   5: 35.642 ns/op
Iteration   6: 36.176 ns/op
Iteration   7: 35.680 ns/op
Iteration   8: 34.422 ns/op
Iteration   9: 35.603 ns/op
Iteration  10: 35.644 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.579 ±(99.9%) 0.359 ns/op [Average]
  (min, avg, max) = (34.422, 35.579, 36.176), stdev = 0.414
  CI (99.9%): [35.220, 35.938] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 2.78% complete, ETA 01:10:21
# Fork: 1 of 2
# Warmup Iteration   1: 307.013 ns/op
# Warmup Iteration   2: 280.772 ns/op
# Warmup Iteration   3: 238.057 ns/op
Iteration   1: 238.118 ns/op
Iteration   2: 238.214 ns/op
Iteration   3: 237.967 ns/op
Iteration   4: 235.300 ns/op
Iteration   5: 235.195 ns/op
Iteration   6: 235.731 ns/op
Iteration   7: 235.431 ns/op
Iteration   8: 236.630 ns/op
Iteration   9: 235.202 ns/op
Iteration  10: 235.525 ns/op

# Run progress: 2.83% complete, ETA 01:10:18
# Fork: 2 of 2
# Warmup Iteration   1: 295.074 ns/op
# Warmup Iteration   2: 285.028 ns/op
# Warmup Iteration   3: 241.128 ns/op
Iteration   1: 241.176 ns/op
Iteration   2: 241.061 ns/op
Iteration   3: 240.651 ns/op
Iteration   4: 238.407 ns/op
Iteration   5: 237.273 ns/op
Iteration   6: 237.058 ns/op
Iteration   7: 238.493 ns/op
Iteration   8: 238.869 ns/op
Iteration   9: 238.105 ns/op
Iteration  10: 238.452 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  237.643 ±(99.9%) 1.661 ns/op [Average]
  (min, avg, max) = (235.195, 237.643, 241.176), stdev = 1.913
  CI (99.9%): [235.982, 239.304] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 2.89% complete, ETA 01:10:15
# Fork: 1 of 2
# Warmup Iteration   1: 1389.554 ns/op
# Warmup Iteration   2: 1113.816 ns/op
# Warmup Iteration   3: 978.390 ns/op
Iteration   1: 982.045 ns/op
Iteration   2: 981.262 ns/op
Iteration   3: 985.294 ns/op
Iteration   4: 980.290 ns/op
Iteration   5: 981.082 ns/op
Iteration   6: 983.405 ns/op
Iteration   7: 981.359 ns/op
Iteration   8: 983.875 ns/op
Iteration   9: 981.549 ns/op
Iteration  10: 982.332 ns/op

# Run progress: 2.94% complete, ETA 01:10:12
# Fork: 2 of 2
# Warmup Iteration   1: 1489.401 ns/op
# Warmup Iteration   2: 1103.541 ns/op
# Warmup Iteration   3: 972.534 ns/op
Iteration   1: 976.534 ns/op
Iteration   2: 973.615 ns/op
Iteration   3: 970.611 ns/op
Iteration   4: 972.774 ns/op
Iteration   5: 974.633 ns/op
Iteration   6: 978.611 ns/op
Iteration   7: 973.624 ns/op
Iteration   8: 973.900 ns/op
Iteration   9: 976.193 ns/op
Iteration  10: 979.009 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  978.600 ±(99.9%) 3.724 ns/op [Average]
  (min, avg, max) = (970.611, 978.600, 985.294), stdev = 4.288
  CI (99.9%): [974.876, 982.323] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 3.00% complete, ETA 01:10:09
# Fork: 1 of 2
# Warmup Iteration   1: 1805.684 ns/op
# Warmup Iteration   2: 1127.917 ns/op
# Warmup Iteration   3: 981.600 ns/op
Iteration   1: 981.512 ns/op
Iteration   2: 982.044 ns/op
Iteration   3: 980.014 ns/op
Iteration   4: 981.093 ns/op
Iteration   5: 988.352 ns/op
Iteration   6: 986.335 ns/op
Iteration   7: 982.831 ns/op
Iteration   8: 985.484 ns/op
Iteration   9: 982.277 ns/op
Iteration  10: 985.776 ns/op

# Run progress: 3.06% complete, ETA 01:10:06
# Fork: 2 of 2
# Warmup Iteration   1: 1487.248 ns/op
# Warmup Iteration   2: 1139.810 ns/op
# Warmup Iteration   3: 982.320 ns/op
Iteration   1: 985.349 ns/op
Iteration   2: 980.478 ns/op
Iteration   3: 980.729 ns/op
Iteration   4: 980.240 ns/op
Iteration   5: 982.386 ns/op
Iteration   6: 983.452 ns/op
Iteration   7: 981.536 ns/op
Iteration   8: 985.063 ns/op
Iteration   9: 980.747 ns/op
Iteration  10: 983.769 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  982.973 ±(99.9%) 2.062 ns/op [Average]
  (min, avg, max) = (980.014, 982.973, 988.352), stdev = 2.375
  CI (99.9%): [980.911, 985.036] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 3.11% complete, ETA 01:10:04
# Fork: 1 of 2
# Warmup Iteration   1: 1871.031 ns/op
# Warmup Iteration   2: 1498.105 ns/op
# Warmup Iteration   3: 1331.239 ns/op
Iteration   1: 1335.823 ns/op
Iteration   2: 1331.606 ns/op
Iteration   3: 1331.814 ns/op
Iteration   4: 1331.323 ns/op
Iteration   5: 1334.398 ns/op
Iteration   6: 1333.634 ns/op
Iteration   7: 1332.547 ns/op
Iteration   8: 1334.942 ns/op
Iteration   9: 1331.771 ns/op
Iteration  10: 1334.563 ns/op

# Run progress: 3.17% complete, ETA 01:10:01
# Fork: 2 of 2
# Warmup Iteration   1: 1748.864 ns/op
# Warmup Iteration   2: 1509.265 ns/op
# Warmup Iteration   3: 1331.252 ns/op
Iteration   1: 1336.095 ns/op
Iteration   2: 1331.689 ns/op
Iteration   3: 1331.985 ns/op
Iteration   4: 1330.793 ns/op
Iteration   5: 1334.139 ns/op
Iteration   6: 1332.615 ns/op
Iteration   7: 1332.222 ns/op
Iteration   8: 1335.034 ns/op
Iteration   9: 1332.097 ns/op
Iteration  10: 1334.610 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1333.185 ±(99.9%) 1.416 ns/op [Average]
  (min, avg, max) = (1330.793, 1333.185, 1336.095), stdev = 1.631
  CI (99.9%): [1331.769, 1334.601] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 3.22% complete, ETA 01:09:59
# Fork: 1 of 2
# Warmup Iteration   1: 350.999 ns/op
# Warmup Iteration   2: 363.378 ns/op
# Warmup Iteration   3: 322.062 ns/op
Iteration   1: 322.470 ns/op
Iteration   2: 322.404 ns/op
Iteration   3: 322.189 ns/op
Iteration   4: 326.236 ns/op
Iteration   5: 326.283 ns/op
Iteration   6: 326.557 ns/op
Iteration   7: 326.792 ns/op
Iteration   8: 326.932 ns/op
Iteration   9: 325.908 ns/op
Iteration  10: 326.295 ns/op

# Run progress: 3.28% complete, ETA 01:09:55
# Fork: 2 of 2
# Warmup Iteration   1: 355.746 ns/op
# Warmup Iteration   2: 358.018 ns/op
# Warmup Iteration   3: 323.334 ns/op
Iteration   1: 322.793 ns/op
Iteration   2: 322.961 ns/op
Iteration   3: 322.674 ns/op
Iteration   4: 326.833 ns/op
Iteration   5: 327.339 ns/op
Iteration   6: 326.483 ns/op
Iteration   7: 326.876 ns/op
Iteration   8: 327.205 ns/op
Iteration   9: 327.125 ns/op
Iteration  10: 327.043 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  325.470 ±(99.9%) 1.716 ns/op [Average]
  (min, avg, max) = (322.189, 325.470, 327.339), stdev = 1.976
  CI (99.9%): [323.754, 327.186] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 3.33% complete, ETA 01:09:53
# Fork: 1 of 2
# Warmup Iteration   1: 37.991 ns/op
# Warmup Iteration   2: 65.602 ns/op
# Warmup Iteration   3: 35.670 ns/op
Iteration   1: 35.684 ns/op
Iteration   2: 35.669 ns/op
Iteration   3: 35.673 ns/op
Iteration   4: 35.655 ns/op
Iteration   5: 35.667 ns/op
Iteration   6: 36.131 ns/op
Iteration   7: 35.723 ns/op
Iteration   8: 46.608 ns/op
Iteration   9: 35.704 ns/op
Iteration  10: 35.624 ns/op

# Run progress: 3.39% complete, ETA 01:09:50
# Fork: 2 of 2
# Warmup Iteration   1: 38.215 ns/op
# Warmup Iteration   2: 67.486 ns/op
# Warmup Iteration   3: 35.744 ns/op
Iteration   1: 35.682 ns/op
Iteration   2: 35.756 ns/op
Iteration   3: 35.681 ns/op
Iteration   4: 35.667 ns/op
Iteration   5: 35.694 ns/op
Iteration   6: 36.181 ns/op
Iteration   7: 35.693 ns/op
Iteration   8: 34.511 ns/op
Iteration   9: 35.670 ns/op
Iteration  10: 35.665 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  36.217 ±(99.9%) 2.141 ns/op [Average]
  (min, avg, max) = (34.511, 36.217, 46.608), stdev = 2.465
  CI (99.9%): [34.076, 38.358] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 3.44% complete, ETA 01:09:47
# Fork: 1 of 2
# Warmup Iteration   1: 3156.484 ns/op
# Warmup Iteration   2: 2127.196 ns/op
# Warmup Iteration   3: 1884.474 ns/op
Iteration   1: 1890.955 ns/op
Iteration   2: 1885.298 ns/op
Iteration   3: 1898.613 ns/op
Iteration   4: 1880.416 ns/op
Iteration   5: 1888.394 ns/op
Iteration   6: 1881.372 ns/op
Iteration   7: 1886.387 ns/op
Iteration   8: 1879.554 ns/op
Iteration   9: 1873.238 ns/op
Iteration  10: 1880.948 ns/op

# Run progress: 3.50% complete, ETA 01:09:44
# Fork: 2 of 2
# Warmup Iteration   1: 2680.560 ns/op
# Warmup Iteration   2: 2161.280 ns/op
# Warmup Iteration   3: 1889.638 ns/op
Iteration   1: 1896.345 ns/op
Iteration   2: 1890.255 ns/op
Iteration   3: 1905.695 ns/op
Iteration   4: 1885.941 ns/op
Iteration   5: 1894.677 ns/op
Iteration   6: 1886.973 ns/op
Iteration   7: 1891.815 ns/op
Iteration   8: 1885.262 ns/op
Iteration   9: 1878.556 ns/op
Iteration  10: 1993.337 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1892.701 ±(99.9%) 21.617 ns/op [Average]
  (min, avg, max) = (1873.238, 1892.701, 1993.337), stdev = 24.894
  CI (99.9%): [1871.084, 1914.319] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 3.56% complete, ETA 01:09:42
# Fork: 1 of 2
# Warmup Iteration   1: 17986.204 ns/op
# Warmup Iteration   2: 7280.592 ns/op
# Warmup Iteration   3: 6279.293 ns/op
Iteration   1: 6263.728 ns/op
Iteration   2: 6274.610 ns/op
Iteration   3: 6248.324 ns/op
Iteration   4: 6268.940 ns/op
Iteration   5: 6261.364 ns/op
Iteration   6: 6287.586 ns/op
Iteration   7: 6253.901 ns/op
Iteration   8: 6250.370 ns/op
Iteration   9: 6275.738 ns/op
Iteration  10: 6272.562 ns/op

# Run progress: 3.61% complete, ETA 01:09:39
# Fork: 2 of 2
# Warmup Iteration   1: 18531.930 ns/op
# Warmup Iteration   2: 7010.503 ns/op
# Warmup Iteration   3: 6227.674 ns/op
Iteration   1: 6227.654 ns/op
Iteration   2: 6222.617 ns/op
Iteration   3: 6261.268 ns/op
Iteration   4: 6232.302 ns/op
Iteration   5: 6207.797 ns/op
Iteration   6: 6250.135 ns/op
Iteration   7: 6223.156 ns/op
Iteration   8: 6222.981 ns/op
Iteration   9: 6218.673 ns/op
Iteration  10: 6253.203 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6248.845 ±(99.9%) 19.691 ns/op [Average]
  (min, avg, max) = (6207.797, 6248.845, 6287.586), stdev = 22.677
  CI (99.9%): [6229.154, 6268.537] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 3.67% complete, ETA 01:09:37
# Fork: 1 of 2
# Warmup Iteration   1: 16191.166 ns/op
# Warmup Iteration   2: 7381.328 ns/op
# Warmup Iteration   3: 6235.902 ns/op
Iteration   1: 6255.298 ns/op
Iteration   2: 6241.446 ns/op
Iteration   3: 6242.058 ns/op
Iteration   4: 6246.898 ns/op
Iteration   5: 6245.735 ns/op
Iteration   6: 6282.364 ns/op
Iteration   7: 6268.230 ns/op
Iteration   8: 6252.385 ns/op
Iteration   9: 6251.219 ns/op
Iteration  10: 6274.549 ns/op

# Run progress: 3.72% complete, ETA 01:09:34
# Fork: 2 of 2
# Warmup Iteration   1: 15746.346 ns/op
# Warmup Iteration   2: 7090.055 ns/op
# Warmup Iteration   3: 6257.528 ns/op
Iteration   1: 6264.951 ns/op
Iteration   2: 6246.372 ns/op
Iteration   3: 6274.744 ns/op
Iteration   4: 6251.616 ns/op
Iteration   5: 6260.803 ns/op
Iteration   6: 6240.195 ns/op
Iteration   7: 6267.542 ns/op
Iteration   8: 6269.456 ns/op
Iteration   9: 6291.638 ns/op
Iteration  10: 6299.632 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6261.357 ±(99.9%) 14.841 ns/op [Average]
  (min, avg, max) = (6240.195, 6261.357, 6299.632), stdev = 17.091
  CI (99.9%): [6246.515, 6276.198] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 3.78% complete, ETA 01:09:32
# Fork: 1 of 2
# Warmup Iteration   1: 12089.891 ns/op
# Warmup Iteration   2: 6980.109 ns/op
# Warmup Iteration   3: 6178.711 ns/op
Iteration   1: 6179.690 ns/op
Iteration   2: 6155.709 ns/op
Iteration   3: 6188.735 ns/op
Iteration   4: 6183.314 ns/op
Iteration   5: 6149.936 ns/op
Iteration   6: 6177.938 ns/op
Iteration   7: 6154.102 ns/op
Iteration   8: 6148.551 ns/op
Iteration   9: 6155.333 ns/op
Iteration  10: 6209.663 ns/op

# Run progress: 3.83% complete, ETA 01:09:29
# Fork: 2 of 2
# Warmup Iteration   1: 11333.000 ns/op
# Warmup Iteration   2: 6896.443 ns/op
# Warmup Iteration   3: 6127.409 ns/op
Iteration   1: 6131.254 ns/op
Iteration   2: 6126.607 ns/op
Iteration   3: 6157.596 ns/op
Iteration   4: 6133.760 ns/op
Iteration   5: 6131.401 ns/op
Iteration   6: 6145.533 ns/op
Iteration   7: 6125.993 ns/op
Iteration   8: 6153.976 ns/op
Iteration   9: 6150.872 ns/op
Iteration  10: 6138.903 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6154.943 ±(99.9%) 19.646 ns/op [Average]
  (min, avg, max) = (6125.993, 6154.943, 6209.663), stdev = 22.624
  CI (99.9%): [6135.297, 6174.589] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 3.89% complete, ETA 01:09:27
# Fork: 1 of 2
# Warmup Iteration   1: 2601.455 ns/op
# Warmup Iteration   2: 2108.336 ns/op
# Warmup Iteration   3: 1867.473 ns/op
Iteration   1: 1868.015 ns/op
Iteration   2: 1868.075 ns/op
Iteration   3: 1868.152 ns/op
Iteration   4: 1862.706 ns/op
Iteration   5: 1863.449 ns/op
Iteration   6: 1860.717 ns/op
Iteration   7: 1862.432 ns/op
Iteration   8: 1859.152 ns/op
Iteration   9: 1862.940 ns/op
Iteration  10: 1863.388 ns/op

# Run progress: 3.94% complete, ETA 01:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 2390.914 ns/op
# Warmup Iteration   2: 2117.772 ns/op
# Warmup Iteration   3: 1821.842 ns/op
Iteration   1: 1821.828 ns/op
Iteration   2: 1822.087 ns/op
Iteration   3: 1828.067 ns/op
Iteration   4: 1815.755 ns/op
Iteration   5: 1815.992 ns/op
Iteration   6: 1817.383 ns/op
Iteration   7: 1816.804 ns/op
Iteration   8: 1814.705 ns/op
Iteration   9: 1816.198 ns/op
Iteration  10: 1817.039 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1841.244 ±(99.9%) 20.426 ns/op [Average]
  (min, avg, max) = (1814.705, 1841.244, 1868.152), stdev = 23.523
  CI (99.9%): [1820.818, 1861.671] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 4.00% complete, ETA 01:09:22
# Fork: 1 of 2
# Warmup Iteration   1: 37.939 ns/op
# Warmup Iteration   2: 64.722 ns/op
# Warmup Iteration   3: 35.705 ns/op
Iteration   1: 35.688 ns/op
Iteration   2: 35.711 ns/op
Iteration   3: 35.735 ns/op
Iteration   4: 35.706 ns/op
Iteration   5: 35.695 ns/op
Iteration   6: 36.166 ns/op
Iteration   7: 35.704 ns/op
Iteration   8: 34.526 ns/op
Iteration   9: 35.649 ns/op
Iteration  10: 35.684 ns/op

# Run progress: 4.06% complete, ETA 01:09:19
# Fork: 2 of 2
# Warmup Iteration   1: 37.831 ns/op
# Warmup Iteration   2: 67.985 ns/op
# Warmup Iteration   3: 35.697 ns/op
Iteration   1: 35.677 ns/op
Iteration   2: 35.698 ns/op
Iteration   3: 35.753 ns/op
Iteration   4: 35.722 ns/op
Iteration   5: 35.757 ns/op
Iteration   6: 36.166 ns/op
Iteration   7: 35.646 ns/op
Iteration   8: 34.530 ns/op
Iteration   9: 35.733 ns/op
Iteration  10: 35.752 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.635 ±(99.9%) 0.352 ns/op [Average]
  (min, avg, max) = (34.526, 35.635, 36.166), stdev = 0.405
  CI (99.9%): [35.283, 35.987] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 4.11% complete, ETA 01:09:16
# Fork: 1 of 2
# Warmup Iteration   1: 278.250 ns/op
# Warmup Iteration   2: 273.423 ns/op
# Warmup Iteration   3: 235.791 ns/op
Iteration   1: 235.960 ns/op
Iteration   2: 235.890 ns/op
Iteration   3: 236.123 ns/op
Iteration   4: 234.021 ns/op
Iteration   5: 233.690 ns/op
Iteration   6: 234.480 ns/op
Iteration   7: 233.823 ns/op
Iteration   8: 233.729 ns/op
Iteration   9: 233.807 ns/op
Iteration  10: 234.312 ns/op

# Run progress: 4.17% complete, ETA 01:09:13
# Fork: 2 of 2
# Warmup Iteration   1: 276.893 ns/op
# Warmup Iteration   2: 279.977 ns/op
# Warmup Iteration   3: 236.082 ns/op
Iteration   1: 235.552 ns/op
Iteration   2: 235.805 ns/op
Iteration   3: 236.531 ns/op
Iteration   4: 233.564 ns/op
Iteration   5: 233.494 ns/op
Iteration   6: 234.077 ns/op
Iteration   7: 233.791 ns/op
Iteration   8: 247.476 ns/op
Iteration   9: 233.817 ns/op
Iteration  10: 233.832 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  235.189 ±(99.9%) 2.661 ns/op [Average]
  (min, avg, max) = (233.494, 235.189, 247.476), stdev = 3.065
  CI (99.9%): [232.527, 237.850] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 4.22% complete, ETA 01:09:11
# Fork: 1 of 2
# Warmup Iteration   1: 469.343 ns/op
# Warmup Iteration   2: 260.900 ns/op
# Warmup Iteration   3: 225.433 ns/op
Iteration   1: 225.377 ns/op
Iteration   2: 225.040 ns/op
Iteration   3: 225.213 ns/op
Iteration   4: 225.541 ns/op
Iteration   5: 225.431 ns/op
Iteration   6: 225.528 ns/op
Iteration   7: 225.401 ns/op
Iteration   8: 228.010 ns/op
Iteration   9: 225.621 ns/op
Iteration  10: 225.369 ns/op

# Run progress: 4.28% complete, ETA 01:09:08
# Fork: 2 of 2
# Warmup Iteration   1: 443.001 ns/op
# Warmup Iteration   2: 285.747 ns/op
# Warmup Iteration   3: 225.513 ns/op
Iteration   1: 225.473 ns/op
Iteration   2: 224.957 ns/op
Iteration   3: 225.299 ns/op
Iteration   4: 225.218 ns/op
Iteration   5: 225.185 ns/op
Iteration   6: 225.690 ns/op
Iteration   7: 225.462 ns/op
Iteration   8: 235.785 ns/op
Iteration   9: 225.082 ns/op
Iteration  10: 225.353 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  226.002 ±(99.9%) 2.072 ns/op [Average]
  (min, avg, max) = (224.957, 226.002, 235.785), stdev = 2.386
  CI (99.9%): [223.930, 228.074] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 4.33% complete, ETA 01:09:06
# Fork: 1 of 2
# Warmup Iteration   1: 399.813 ns/op
# Warmup Iteration   2: 265.337 ns/op
# Warmup Iteration   3: 226.608 ns/op
Iteration   1: 226.405 ns/op
Iteration   2: 226.777 ns/op
Iteration   3: 227.160 ns/op
Iteration   4: 226.901 ns/op
Iteration   5: 227.368 ns/op
Iteration   6: 227.046 ns/op
Iteration   7: 227.485 ns/op
Iteration   8: 229.795 ns/op
Iteration   9: 227.298 ns/op
Iteration  10: 226.622 ns/op

# Run progress: 4.39% complete, ETA 01:09:03
# Fork: 2 of 2
# Warmup Iteration   1: 544.055 ns/op
# Warmup Iteration   2: 273.997 ns/op
# Warmup Iteration   3: 226.712 ns/op
Iteration   1: 226.806 ns/op
Iteration   2: 227.208 ns/op
Iteration   3: 226.899 ns/op
Iteration   4: 226.906 ns/op
Iteration   5: 227.368 ns/op
Iteration   6: 227.098 ns/op
Iteration   7: 227.393 ns/op
Iteration   8: 229.629 ns/op
Iteration   9: 226.268 ns/op
Iteration  10: 226.524 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  227.248 ±(99.9%) 0.789 ns/op [Average]
  (min, avg, max) = (226.268, 227.248, 229.795), stdev = 0.909
  CI (99.9%): [226.458, 228.037] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 4.44% complete, ETA 01:09:01
# Fork: 1 of 2
# Warmup Iteration   1: 520.820 ns/op
# Warmup Iteration   2: 317.545 ns/op
# Warmup Iteration   3: 270.036 ns/op
Iteration   1: 270.021 ns/op
Iteration   2: 269.951 ns/op
Iteration   3: 270.022 ns/op
Iteration   4: 269.945 ns/op
Iteration   5: 271.207 ns/op
Iteration   6: 270.589 ns/op
Iteration   7: 270.691 ns/op
Iteration   8: 273.056 ns/op
Iteration   9: 270.038 ns/op
Iteration  10: 270.058 ns/op

# Run progress: 4.50% complete, ETA 01:08:58
# Fork: 2 of 2
# Warmup Iteration   1: 422.412 ns/op
# Warmup Iteration   2: 336.897 ns/op
# Warmup Iteration   3: 269.881 ns/op
Iteration   1: 269.947 ns/op
Iteration   2: 269.888 ns/op
Iteration   3: 270.007 ns/op
Iteration   4: 269.953 ns/op
Iteration   5: 271.174 ns/op
Iteration   6: 270.632 ns/op
Iteration   7: 270.730 ns/op
Iteration   8: 272.416 ns/op
Iteration   9: 270.017 ns/op
Iteration  10: 270.030 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  270.519 ±(99.9%) 0.757 ns/op [Average]
  (min, avg, max) = (269.888, 270.519, 273.056), stdev = 0.871
  CI (99.9%): [269.762, 271.275] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 4.56% complete, ETA 01:08:55
# Fork: 1 of 2
# Warmup Iteration   1: 410.890 ns/op
# Warmup Iteration   2: 394.940 ns/op
# Warmup Iteration   3: 346.948 ns/op
Iteration   1: 346.179 ns/op
Iteration   2: 346.642 ns/op
Iteration   3: 346.227 ns/op
Iteration   4: 350.815 ns/op
Iteration   5: 350.707 ns/op
Iteration   6: 351.085 ns/op
Iteration   7: 351.794 ns/op
Iteration   8: 351.065 ns/op
Iteration   9: 350.945 ns/op
Iteration  10: 350.584 ns/op

# Run progress: 4.61% complete, ETA 01:08:53
# Fork: 2 of 2
# Warmup Iteration   1: 420.955 ns/op
# Warmup Iteration   2: 394.870 ns/op
# Warmup Iteration   3: 350.104 ns/op
Iteration   1: 349.621 ns/op
Iteration   2: 349.626 ns/op
Iteration   3: 349.550 ns/op
Iteration   4: 350.758 ns/op
Iteration   5: 350.413 ns/op
Iteration   6: 350.611 ns/op
Iteration   7: 350.931 ns/op
Iteration   8: 350.973 ns/op
Iteration   9: 350.687 ns/op
Iteration  10: 350.668 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  349.994 ±(99.9%) 1.442 ns/op [Average]
  (min, avg, max) = (346.179, 349.994, 351.794), stdev = 1.660
  CI (99.9%): [348.552, 351.436] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 4.67% complete, ETA 01:08:50
# Fork: 1 of 2
# Warmup Iteration   1: 38.324 ns/op
# Warmup Iteration   2: 67.444 ns/op
# Warmup Iteration   3: 35.629 ns/op
Iteration   1: 35.606 ns/op
Iteration   2: 35.627 ns/op
Iteration   3: 35.659 ns/op
Iteration   4: 35.666 ns/op
Iteration   5: 35.675 ns/op
Iteration   6: 36.142 ns/op
Iteration   7: 35.616 ns/op
Iteration   8: 34.447 ns/op
Iteration   9: 35.619 ns/op
Iteration  10: 35.637 ns/op

# Run progress: 4.72% complete, ETA 01:08:47
# Fork: 2 of 2
# Warmup Iteration   1: 38.440 ns/op
# Warmup Iteration   2: 73.348 ns/op
# Warmup Iteration   3: 35.715 ns/op
Iteration   1: 35.683 ns/op
Iteration   2: 35.712 ns/op
Iteration   3: 35.732 ns/op
Iteration   4: 35.606 ns/op
Iteration   5: 35.717 ns/op
Iteration   6: 36.174 ns/op
Iteration   7: 35.738 ns/op
Iteration   8: 34.506 ns/op
Iteration   9: 35.633 ns/op
Iteration  10: 35.658 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.593 ±(99.9%) 0.359 ns/op [Average]
  (min, avg, max) = (34.447, 35.593, 36.174), stdev = 0.413
  CI (99.9%): [35.234, 35.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 4.78% complete, ETA 01:08:45
# Fork: 1 of 2
# Warmup Iteration   1: 270.571 ns/op
# Warmup Iteration   2: 279.743 ns/op
# Warmup Iteration   3: 235.835 ns/op
Iteration   1: 235.836 ns/op
Iteration   2: 235.939 ns/op
Iteration   3: 235.941 ns/op
Iteration   4: 233.533 ns/op
Iteration   5: 233.828 ns/op
Iteration   6: 234.165 ns/op
Iteration   7: 233.647 ns/op
Iteration   8: 234.247 ns/op
Iteration   9: 233.754 ns/op
Iteration  10: 234.107 ns/op

# Run progress: 4.83% complete, ETA 01:08:42
# Fork: 2 of 2
# Warmup Iteration   1: 275.882 ns/op
# Warmup Iteration   2: 279.653 ns/op
# Warmup Iteration   3: 235.729 ns/op
Iteration   1: 235.851 ns/op
Iteration   2: 235.688 ns/op
Iteration   3: 236.149 ns/op
Iteration   4: 234.068 ns/op
Iteration   5: 234.102 ns/op
Iteration   6: 234.314 ns/op
Iteration   7: 233.686 ns/op
Iteration   8: 233.925 ns/op
Iteration   9: 233.598 ns/op
Iteration  10: 233.834 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  234.511 ±(99.9%) 0.834 ns/op [Average]
  (min, avg, max) = (233.533, 234.511, 236.149), stdev = 0.960
  CI (99.9%): [233.677, 235.344] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 4.89% complete, ETA 01:08:40
# Fork: 1 of 2
# Warmup Iteration   1: 475.761 ns/op
# Warmup Iteration   2: 265.606 ns/op
# Warmup Iteration   3: 225.301 ns/op
Iteration   1: 225.867 ns/op
Iteration   2: 225.738 ns/op
Iteration   3: 225.239 ns/op
Iteration   4: 225.196 ns/op
Iteration   5: 226.209 ns/op
Iteration   6: 225.675 ns/op
Iteration   7: 225.472 ns/op
Iteration   8: 228.245 ns/op
Iteration   9: 225.276 ns/op
Iteration  10: 225.303 ns/op

# Run progress: 4.94% complete, ETA 01:08:38
# Fork: 2 of 2
# Warmup Iteration   1: 491.055 ns/op
# Warmup Iteration   2: 258.940 ns/op
# Warmup Iteration   3: 225.237 ns/op
Iteration   1: 225.796 ns/op
Iteration   2: 225.702 ns/op
Iteration   3: 225.264 ns/op
Iteration   4: 225.599 ns/op
Iteration   5: 226.123 ns/op
Iteration   6: 226.046 ns/op
Iteration   7: 225.444 ns/op
Iteration   8: 228.182 ns/op
Iteration   9: 225.657 ns/op
Iteration  10: 225.433 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  225.873 ±(99.9%) 0.741 ns/op [Average]
  (min, avg, max) = (225.196, 225.873, 228.245), stdev = 0.853
  CI (99.9%): [225.132, 226.614] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 5.00% complete, ETA 01:08:36
# Fork: 1 of 2
# Warmup Iteration   1: 322.728 ns/op
# Warmup Iteration   2: 270.022 ns/op
# Warmup Iteration   3: 233.407 ns/op
Iteration   1: 233.633 ns/op
Iteration   2: 233.399 ns/op
Iteration   3: 233.598 ns/op
Iteration   4: 233.387 ns/op
Iteration   5: 233.834 ns/op
Iteration   6: 233.709 ns/op
Iteration   7: 233.459 ns/op
Iteration   8: 235.961 ns/op
Iteration   9: 233.420 ns/op
Iteration  10: 233.391 ns/op

# Run progress: 5.06% complete, ETA 01:08:34
# Fork: 2 of 2
# Warmup Iteration   1: 306.847 ns/op
# Warmup Iteration   2: 267.211 ns/op
# Warmup Iteration   3: 233.023 ns/op
Iteration   1: 233.473 ns/op
Iteration   2: 233.050 ns/op
Iteration   3: 233.389 ns/op
Iteration   4: 233.044 ns/op
Iteration   5: 234.019 ns/op
Iteration   6: 233.685 ns/op
Iteration   7: 232.706 ns/op
Iteration   8: 236.146 ns/op
Iteration   9: 233.094 ns/op
Iteration  10: 233.090 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  233.674 ±(99.9%) 0.755 ns/op [Average]
  (min, avg, max) = (232.706, 233.674, 236.146), stdev = 0.870
  CI (99.9%): [232.919, 234.429] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 5.11% complete, ETA 01:08:31
# Fork: 1 of 2
# Warmup Iteration   1: 435.003 ns/op
# Warmup Iteration   2: 305.968 ns/op
# Warmup Iteration   3: 269.982 ns/op
Iteration   1: 269.988 ns/op
Iteration   2: 269.963 ns/op
Iteration   3: 270.014 ns/op
Iteration   4: 269.923 ns/op
Iteration   5: 271.300 ns/op
Iteration   6: 270.634 ns/op
Iteration   7: 270.375 ns/op
Iteration   8: 272.477 ns/op
Iteration   9: 270.106 ns/op
Iteration  10: 270.074 ns/op

# Run progress: 5.17% complete, ETA 01:08:29
# Fork: 2 of 2
# Warmup Iteration   1: 403.945 ns/op
# Warmup Iteration   2: 309.525 ns/op
# Warmup Iteration   3: 269.995 ns/op
Iteration   1: 269.896 ns/op
Iteration   2: 270.013 ns/op
Iteration   3: 270.027 ns/op
Iteration   4: 269.920 ns/op
Iteration   5: 271.163 ns/op
Iteration   6: 270.507 ns/op
Iteration   7: 270.382 ns/op
Iteration   8: 272.729 ns/op
Iteration   9: 269.950 ns/op
Iteration  10: 269.965 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  270.470 ±(99.9%) 0.724 ns/op [Average]
  (min, avg, max) = (269.896, 270.470, 272.729), stdev = 0.833
  CI (99.9%): [269.747, 271.194] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 5.22% complete, ETA 01:08:27
# Fork: 1 of 2
# Warmup Iteration   1: 424.856 ns/op
# Warmup Iteration   2: 397.347 ns/op
# Warmup Iteration   3: 346.723 ns/op
Iteration   1: 346.015 ns/op
Iteration   2: 346.336 ns/op
Iteration   3: 346.455 ns/op
Iteration   4: 352.325 ns/op
Iteration   5: 350.534 ns/op
Iteration   6: 350.962 ns/op
Iteration   7: 350.695 ns/op
Iteration   8: 351.228 ns/op
Iteration   9: 351.057 ns/op
Iteration  10: 350.617 ns/op

# Run progress: 5.28% complete, ETA 01:08:24
# Fork: 2 of 2
# Warmup Iteration   1: 405.282 ns/op
# Warmup Iteration   2: 386.017 ns/op
# Warmup Iteration   3: 346.029 ns/op
Iteration   1: 346.530 ns/op
Iteration   2: 345.930 ns/op
Iteration   3: 346.002 ns/op
Iteration   4: 350.544 ns/op
Iteration   5: 350.296 ns/op
Iteration   6: 350.893 ns/op
Iteration   7: 350.279 ns/op
Iteration   8: 351.166 ns/op
Iteration   9: 350.602 ns/op
Iteration  10: 350.952 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  349.471 ±(99.9%) 1.940 ns/op [Average]
  (min, avg, max) = (345.930, 349.471, 352.325), stdev = 2.234
  CI (99.9%): [347.531, 351.411] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 5.33% complete, ETA 01:08:21
# Fork: 1 of 2
# Warmup Iteration   1: 37.833 ns/op
# Warmup Iteration   2: 66.964 ns/op
# Warmup Iteration   3: 35.604 ns/op
Iteration   1: 35.685 ns/op
Iteration   2: 35.697 ns/op
Iteration   3: 35.725 ns/op
Iteration   4: 35.622 ns/op
Iteration   5: 35.638 ns/op
Iteration   6: 36.158 ns/op
Iteration   7: 35.626 ns/op
Iteration   8: 34.496 ns/op
Iteration   9: 35.603 ns/op
Iteration  10: 35.716 ns/op

# Run progress: 5.39% complete, ETA 01:08:19
# Fork: 2 of 2
# Warmup Iteration   1: 37.998 ns/op
# Warmup Iteration   2: 65.389 ns/op
# Warmup Iteration   3: 35.680 ns/op
Iteration   1: 35.700 ns/op
Iteration   2: 35.705 ns/op
Iteration   3: 35.711 ns/op
Iteration   4: 35.721 ns/op
Iteration   5: 35.639 ns/op
Iteration   6: 36.157 ns/op
Iteration   7: 35.695 ns/op
Iteration   8: 34.522 ns/op
Iteration   9: 35.698 ns/op
Iteration  10: 35.725 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.612 ±(99.9%) 0.352 ns/op [Average]
  (min, avg, max) = (34.496, 35.612, 36.158), stdev = 0.406
  CI (99.9%): [35.259, 35.964] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 5.44% complete, ETA 01:08:16
# Fork: 1 of 2
# Warmup Iteration   1: 671.410 ns/op
# Warmup Iteration   2: 585.963 ns/op
# Warmup Iteration   3: 503.665 ns/op
Iteration   1: 503.731 ns/op
Iteration   2: 503.741 ns/op
Iteration   3: 503.578 ns/op
Iteration   4: 500.738 ns/op
Iteration   5: 501.051 ns/op
Iteration   6: 501.118 ns/op
Iteration   7: 500.951 ns/op
Iteration   8: 486.921 ns/op
Iteration   9: 500.917 ns/op
Iteration  10: 500.829 ns/op

# Run progress: 5.50% complete, ETA 01:08:14
# Fork: 2 of 2
# Warmup Iteration   1: 610.078 ns/op
# Warmup Iteration   2: 569.787 ns/op
# Warmup Iteration   3: 491.058 ns/op
Iteration   1: 490.740 ns/op
Iteration   2: 491.449 ns/op
Iteration   3: 491.197 ns/op
Iteration   4: 488.968 ns/op
Iteration   5: 486.745 ns/op
Iteration   6: 487.031 ns/op
Iteration   7: 487.310 ns/op
Iteration   8: 488.024 ns/op
Iteration   9: 486.483 ns/op
Iteration  10: 486.279 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  494.390 ±(99.9%) 6.189 ns/op [Average]
  (min, avg, max) = (486.279, 494.390, 503.741), stdev = 7.127
  CI (99.9%): [488.201, 500.579] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 5.56% complete, ETA 01:08:11
# Fork: 1 of 2
# Warmup Iteration   1: 1317.303 ns/op
# Warmup Iteration   2: 529.660 ns/op
# Warmup Iteration   3: 430.434 ns/op
Iteration   1: 429.679 ns/op
Iteration   2: 430.926 ns/op
Iteration   3: 430.865 ns/op
Iteration   4: 430.913 ns/op
Iteration   5: 430.523 ns/op
Iteration   6: 429.856 ns/op
Iteration   7: 429.448 ns/op
Iteration   8: 433.270 ns/op
Iteration   9: 431.287 ns/op
Iteration  10: 430.676 ns/op

# Run progress: 5.61% complete, ETA 01:08:08
# Fork: 2 of 2
# Warmup Iteration   1: 861.929 ns/op
# Warmup Iteration   2: 488.369 ns/op
# Warmup Iteration   3: 427.497 ns/op
Iteration   1: 427.481 ns/op
Iteration   2: 427.814 ns/op
Iteration   3: 428.279 ns/op
Iteration   4: 428.038 ns/op
Iteration   5: 427.862 ns/op
Iteration   6: 427.567 ns/op
Iteration   7: 427.517 ns/op
Iteration   8: 430.844 ns/op
Iteration   9: 428.810 ns/op
Iteration  10: 428.702 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  429.518 ±(99.9%) 1.404 ns/op [Average]
  (min, avg, max) = (427.481, 429.518, 433.270), stdev = 1.617
  CI (99.9%): [428.113, 430.922] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 5.67% complete, ETA 01:08:06
# Fork: 1 of 2
# Warmup Iteration   1: 755.679 ns/op
# Warmup Iteration   2: 512.689 ns/op
# Warmup Iteration   3: 428.928 ns/op
Iteration   1: 429.242 ns/op
Iteration   2: 428.412 ns/op
Iteration   3: 428.139 ns/op
Iteration   4: 427.890 ns/op
Iteration   5: 428.998 ns/op
Iteration   6: 428.842 ns/op
Iteration   7: 428.664 ns/op
Iteration   8: 430.781 ns/op
Iteration   9: 428.982 ns/op
Iteration  10: 428.570 ns/op

# Run progress: 5.72% complete, ETA 01:08:03
# Fork: 2 of 2
# Warmup Iteration   1: 759.584 ns/op
# Warmup Iteration   2: 496.598 ns/op
# Warmup Iteration   3: 433.856 ns/op
Iteration   1: 432.883 ns/op
Iteration   2: 434.043 ns/op
Iteration   3: 433.810 ns/op
Iteration   4: 432.645 ns/op
Iteration   5: 433.143 ns/op
Iteration   6: 433.041 ns/op
Iteration   7: 434.113 ns/op
Iteration   8: 435.141 ns/op
Iteration   9: 433.862 ns/op
Iteration  10: 433.877 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  431.254 ±(99.9%) 2.236 ns/op [Average]
  (min, avg, max) = (427.890, 431.254, 435.141), stdev = 2.575
  CI (99.9%): [429.018, 433.490] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 5.78% complete, ETA 01:08:01
# Fork: 1 of 2
# Warmup Iteration   1: 629.876 ns/op
# Warmup Iteration   2: 489.722 ns/op
# Warmup Iteration   3: 427.633 ns/op
Iteration   1: 428.030 ns/op
Iteration   2: 428.676 ns/op
Iteration   3: 428.796 ns/op
Iteration   4: 429.007 ns/op
Iteration   5: 428.971 ns/op
Iteration   6: 429.070 ns/op
Iteration   7: 428.675 ns/op
Iteration   8: 430.958 ns/op
Iteration   9: 428.655 ns/op
Iteration  10: 428.168 ns/op

# Run progress: 5.83% complete, ETA 01:07:58
# Fork: 2 of 2
# Warmup Iteration   1: 651.074 ns/op
# Warmup Iteration   2: 501.035 ns/op
# Warmup Iteration   3: 428.748 ns/op
Iteration   1: 427.732 ns/op
Iteration   2: 429.192 ns/op
Iteration   3: 428.693 ns/op
Iteration   4: 428.722 ns/op
Iteration   5: 428.918 ns/op
Iteration   6: 428.104 ns/op
Iteration   7: 428.716 ns/op
Iteration   8: 431.389 ns/op
Iteration   9: 427.836 ns/op
Iteration  10: 429.381 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  428.884 ±(99.9%) 0.784 ns/op [Average]
  (min, avg, max) = (427.732, 428.884, 431.389), stdev = 0.903
  CI (99.9%): [428.100, 429.668] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 5.89% complete, ETA 01:07:56
# Fork: 1 of 2
# Warmup Iteration   1: 474.108 ns/op
# Warmup Iteration   2: 433.836 ns/op
# Warmup Iteration   3: 387.630 ns/op
Iteration   1: 387.487 ns/op
Iteration   2: 387.447 ns/op
Iteration   3: 387.561 ns/op
Iteration   4: 391.673 ns/op
Iteration   5: 391.633 ns/op
Iteration   6: 391.968 ns/op
Iteration   7: 391.489 ns/op
Iteration   8: 391.873 ns/op
Iteration   9: 391.857 ns/op
Iteration  10: 391.703 ns/op

# Run progress: 5.94% complete, ETA 01:07:53
# Fork: 2 of 2
# Warmup Iteration   1: 435.868 ns/op
# Warmup Iteration   2: 424.001 ns/op
# Warmup Iteration   3: 379.515 ns/op
Iteration   1: 379.187 ns/op
Iteration   2: 379.333 ns/op
Iteration   3: 379.586 ns/op
Iteration   4: 382.994 ns/op
Iteration   5: 383.025 ns/op
Iteration   6: 383.244 ns/op
Iteration   7: 382.973 ns/op
Iteration   8: 389.531 ns/op
Iteration   9: 382.983 ns/op
Iteration  10: 382.980 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  386.526 ±(99.9%) 4.129 ns/op [Average]
  (min, avg, max) = (379.187, 386.526, 391.968), stdev = 4.755
  CI (99.9%): [382.398, 390.655] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 6.00% complete, ETA 01:07:50
# Fork: 1 of 2
# Warmup Iteration   1: 37.769 ns/op
# Warmup Iteration   2: 66.378 ns/op
# Warmup Iteration   3: 35.674 ns/op
Iteration   1: 35.679 ns/op
Iteration   2: 35.619 ns/op
Iteration   3: 35.694 ns/op
Iteration   4: 35.654 ns/op
Iteration   5: 35.706 ns/op
Iteration   6: 36.199 ns/op
Iteration   7: 35.759 ns/op
Iteration   8: 34.504 ns/op
Iteration   9: 35.734 ns/op
Iteration  10: 35.726 ns/op

# Run progress: 6.06% complete, ETA 01:07:48
# Fork: 2 of 2
# Warmup Iteration   1: 38.558 ns/op
# Warmup Iteration   2: 67.476 ns/op
# Warmup Iteration   3: 50.001 ns/op
Iteration   1: 49.971 ns/op
Iteration   2: 50.069 ns/op
Iteration   3: 50.136 ns/op
Iteration   4: 50.025 ns/op
Iteration   5: 50.028 ns/op
Iteration   6: 50.004 ns/op
Iteration   7: 50.022 ns/op
Iteration   8: 34.512 ns/op
Iteration   9: 50.026 ns/op
Iteration  10: 50.060 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.056 ±(99.9%) 6.441 ns/op [Average]
  (min, avg, max) = (34.504, 42.056, 50.136), stdev = 7.417
  CI (99.9%): [35.616, 48.497] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 6.11% complete, ETA 01:07:45
# Fork: 1 of 2
# Warmup Iteration   1: 574.667 ns/op
# Warmup Iteration   2: 528.646 ns/op
# Warmup Iteration   3: 463.016 ns/op
Iteration   1: 463.246 ns/op
Iteration   2: 463.120 ns/op
Iteration   3: 463.356 ns/op
Iteration   4: 460.387 ns/op
Iteration   5: 460.974 ns/op
Iteration   6: 460.512 ns/op
Iteration   7: 460.274 ns/op
Iteration   8: 460.833 ns/op
Iteration   9: 460.678 ns/op
Iteration  10: 460.041 ns/op

# Run progress: 6.17% complete, ETA 01:07:42
# Fork: 2 of 2
# Warmup Iteration   1: 587.538 ns/op
# Warmup Iteration   2: 549.603 ns/op
# Warmup Iteration   3: 463.021 ns/op
Iteration   1: 463.365 ns/op
Iteration   2: 463.016 ns/op
Iteration   3: 462.634 ns/op
Iteration   4: 460.155 ns/op
Iteration   5: 463.201 ns/op
Iteration   6: 462.400 ns/op
Iteration   7: 460.334 ns/op
Iteration   8: 461.480 ns/op
Iteration   9: 460.659 ns/op
Iteration  10: 460.818 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  461.574 ±(99.9%) 1.116 ns/op [Average]
  (min, avg, max) = (460.041, 461.574, 463.365), stdev = 1.285
  CI (99.9%): [460.458, 462.690] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 6.22% complete, ETA 01:07:40
# Fork: 1 of 2
# Warmup Iteration   1: 4314.536 ns/op
# Warmup Iteration   2: 2629.646 ns/op
# Warmup Iteration   3: 2310.991 ns/op
Iteration   1: 2313.048 ns/op
Iteration   2: 2310.217 ns/op
Iteration   3: 2311.536 ns/op
Iteration   4: 2317.646 ns/op
Iteration   5: 2309.396 ns/op
Iteration   6: 2313.077 ns/op
Iteration   7: 2310.896 ns/op
Iteration   8: 2335.551 ns/op
Iteration   9: 2311.097 ns/op
Iteration  10: 2322.923 ns/op

# Run progress: 6.28% complete, ETA 01:07:37
# Fork: 2 of 2
# Warmup Iteration   1: 4303.460 ns/op
# Warmup Iteration   2: 2696.008 ns/op
# Warmup Iteration   3: 2327.228 ns/op
Iteration   1: 2329.644 ns/op
Iteration   2: 2327.466 ns/op
Iteration   3: 2327.244 ns/op
Iteration   4: 2324.091 ns/op
Iteration   5: 2329.648 ns/op
Iteration   6: 2334.163 ns/op
Iteration   7: 2327.915 ns/op
Iteration   8: 2332.723 ns/op
Iteration   9: 2325.982 ns/op
Iteration  10: 2336.915 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2322.559 ±(99.9%) 8.265 ns/op [Average]
  (min, avg, max) = (2309.396, 2322.559, 2336.915), stdev = 9.518
  CI (99.9%): [2314.294, 2330.824] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 6.33% complete, ETA 01:07:35
# Fork: 1 of 2
# Warmup Iteration   1: 5337.015 ns/op
# Warmup Iteration   2: 2711.601 ns/op
# Warmup Iteration   3: 2340.186 ns/op
Iteration   1: 2337.687 ns/op
Iteration   2: 2347.873 ns/op
Iteration   3: 2338.404 ns/op
Iteration   4: 2339.866 ns/op
Iteration   5: 2340.178 ns/op
Iteration   6: 2340.154 ns/op
Iteration   7: 2337.913 ns/op
Iteration   8: 2339.972 ns/op
Iteration   9: 2332.053 ns/op
Iteration  10: 2334.354 ns/op

# Run progress: 6.39% complete, ETA 01:07:32
# Fork: 2 of 2
# Warmup Iteration   1: 4682.715 ns/op
# Warmup Iteration   2: 2632.676 ns/op
# Warmup Iteration   3: 2323.038 ns/op
Iteration   1: 2324.392 ns/op
Iteration   2: 2324.968 ns/op
Iteration   3: 2331.216 ns/op
Iteration   4: 2319.902 ns/op
Iteration   5: 2323.923 ns/op
Iteration   6: 2319.400 ns/op
Iteration   7: 2320.848 ns/op
Iteration   8: 2324.343 ns/op
Iteration   9: 2321.062 ns/op
Iteration  10: 2318.813 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2330.866 ±(99.9%) 7.853 ns/op [Average]
  (min, avg, max) = (2318.813, 2330.866, 2347.873), stdev = 9.043
  CI (99.9%): [2323.014, 2338.719] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 6.44% complete, ETA 01:07:30
# Fork: 1 of 2
# Warmup Iteration   1: 2794.831 ns/op
# Warmup Iteration   2: 2325.246 ns/op
# Warmup Iteration   3: 2008.657 ns/op
Iteration   1: 2026.150 ns/op
Iteration   2: 2008.727 ns/op
Iteration   3: 2017.718 ns/op
Iteration   4: 2013.651 ns/op
Iteration   5: 2009.784 ns/op
Iteration   6: 2020.210 ns/op
Iteration   7: 2009.610 ns/op
Iteration   8: 2015.783 ns/op
Iteration   9: 2009.405 ns/op
Iteration  10: 2015.125 ns/op

# Run progress: 6.50% complete, ETA 01:07:27
# Fork: 2 of 2
# Warmup Iteration   1: 3094.516 ns/op
# Warmup Iteration   2: 2264.288 ns/op
# Warmup Iteration   3: 2002.761 ns/op
Iteration   1: 2009.050 ns/op
Iteration   2: 2003.946 ns/op
Iteration   3: 2004.210 ns/op
Iteration   4: 2003.047 ns/op
Iteration   5: 2008.170 ns/op
Iteration   6: 2010.531 ns/op
Iteration   7: 2004.990 ns/op
Iteration   8: 2006.207 ns/op
Iteration   9: 2003.391 ns/op
Iteration  10: 2006.803 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2010.325 ±(99.9%) 5.324 ns/op [Average]
  (min, avg, max) = (2003.047, 2010.325, 2026.150), stdev = 6.131
  CI (99.9%): [2005.002, 2015.649] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 6.56% complete, ETA 01:07:25
# Fork: 1 of 2
# Warmup Iteration   1: 1003.482 ns/op
# Warmup Iteration   2: 880.130 ns/op
# Warmup Iteration   3: 802.544 ns/op
Iteration   1: 809.613 ns/op
Iteration   2: 803.590 ns/op
Iteration   3: 811.618 ns/op
Iteration   4: 861.557 ns/op
Iteration   5: 805.711 ns/op
Iteration   6: 812.843 ns/op
Iteration   7: 807.079 ns/op
Iteration   8: 813.171 ns/op
Iteration   9: 805.610 ns/op
Iteration  10: 810.443 ns/op

# Run progress: 6.61% complete, ETA 01:07:23
# Fork: 2 of 2
# Warmup Iteration   1: 1057.371 ns/op
# Warmup Iteration   2: 911.546 ns/op
# Warmup Iteration   3: 788.642 ns/op
Iteration   1: 794.887 ns/op
Iteration   2: 786.332 ns/op
Iteration   3: 792.486 ns/op
Iteration   4: 796.094 ns/op
Iteration   5: 790.562 ns/op
Iteration   6: 796.764 ns/op
Iteration   7: 790.625 ns/op
Iteration   8: 797.188 ns/op
Iteration   9: 790.606 ns/op
Iteration  10: 795.029 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  803.590 ±(99.9%) 13.983 ns/op [Average]
  (min, avg, max) = (786.332, 803.590, 861.557), stdev = 16.102
  CI (99.9%): [789.608, 817.573] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 6.67% complete, ETA 01:07:20
# Fork: 1 of 2
# Warmup Iteration   1: 37.987 ns/op
# Warmup Iteration   2: 68.231 ns/op
# Warmup Iteration   3: 35.622 ns/op
Iteration   1: 35.658 ns/op
Iteration   2: 35.664 ns/op
Iteration   3: 35.729 ns/op
Iteration   4: 35.720 ns/op
Iteration   5: 35.706 ns/op
Iteration   6: 36.202 ns/op
Iteration   7: 35.652 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.687 ns/op
Iteration  10: 35.662 ns/op

# Run progress: 6.72% complete, ETA 01:07:17
# Fork: 2 of 2
# Warmup Iteration   1: 56.174 ns/op
# Warmup Iteration   2: 66.479 ns/op
# Warmup Iteration   3: 35.777 ns/op
Iteration   1: 35.684 ns/op
Iteration   2: 35.664 ns/op
Iteration   3: 35.667 ns/op
Iteration   4: 35.623 ns/op
Iteration   5: 35.685 ns/op
Iteration   6: 36.172 ns/op
Iteration   7: 35.728 ns/op
Iteration   8: 34.503 ns/op
Iteration   9: 35.650 ns/op
Iteration  10: 35.674 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.612 ±(99.9%) 0.355 ns/op [Average]
  (min, avg, max) = (34.503, 35.612, 36.202), stdev = 0.409
  CI (99.9%): [35.257, 35.967] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 6.78% complete, ETA 01:07:14
# Fork: 1 of 2
# Warmup Iteration   1: 2366.877 ns/op
# Warmup Iteration   2: 1890.728 ns/op
# Warmup Iteration   3: 1680.687 ns/op
Iteration   1: 1682.352 ns/op
Iteration   2: 1680.985 ns/op
Iteration   3: 1683.089 ns/op
Iteration   4: 1777.892 ns/op
Iteration   5: 1684.574 ns/op
Iteration   6: 1672.936 ns/op
Iteration   7: 1683.784 ns/op
Iteration   8: 1676.250 ns/op
Iteration   9: 1669.788 ns/op
Iteration  10: 1677.505 ns/op

# Run progress: 6.83% complete, ETA 01:07:12
# Fork: 2 of 2
# Warmup Iteration   1: 2503.406 ns/op
# Warmup Iteration   2: 1948.985 ns/op
# Warmup Iteration   3: 1681.744 ns/op
Iteration   1: 1682.467 ns/op
Iteration   2: 1681.411 ns/op
Iteration   3: 1746.107 ns/op
Iteration   4: 1676.685 ns/op
Iteration   5: 1685.606 ns/op
Iteration   6: 1672.567 ns/op
Iteration   7: 1684.788 ns/op
Iteration   8: 1676.741 ns/op
Iteration   9: 1669.632 ns/op
Iteration  10: 1677.658 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1687.141 ±(99.9%) 23.070 ns/op [Average]
  (min, avg, max) = (1669.632, 1687.141, 1777.892), stdev = 26.568
  CI (99.9%): [1664.071, 1710.211] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 6.89% complete, ETA 01:07:10
# Fork: 1 of 2
# Warmup Iteration   1: 36397.114 ns/op
# Warmup Iteration   2: 8941.939 ns/op
# Warmup Iteration   3: 7917.626 ns/op
Iteration   1: 7661.578 ns/op
Iteration   2: 7656.757 ns/op
Iteration   3: 7621.863 ns/op
Iteration   4: 7615.698 ns/op
Iteration   5: 7592.474 ns/op
Iteration   6: 7660.270 ns/op
Iteration   7: 7598.199 ns/op
Iteration   8: 7622.743 ns/op
Iteration   9: 7613.289 ns/op
Iteration  10: 7685.092 ns/op

# Run progress: 6.94% complete, ETA 01:07:07
# Fork: 2 of 2
# Warmup Iteration   1: 21921.018 ns/op
# Warmup Iteration   2: 8532.127 ns/op
# Warmup Iteration   3: 7990.358 ns/op
Iteration   1: 7712.329 ns/op
Iteration   2: 7709.164 ns/op
Iteration   3: 7670.169 ns/op
Iteration   4: 7696.804 ns/op
Iteration   5: 7701.516 ns/op
Iteration   6: 7682.718 ns/op
Iteration   7: 7668.296 ns/op
Iteration   8: 7702.236 ns/op
Iteration   9: 7703.826 ns/op
Iteration  10: 7768.002 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7667.151 ±(99.9%) 39.481 ns/op [Average]
  (min, avg, max) = (7592.474, 7667.151, 7768.002), stdev = 45.467
  CI (99.9%): [7627.670, 7706.632] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 7.00% complete, ETA 01:07:04
# Fork: 1 of 2
# Warmup Iteration   1: 16046.049 ns/op
# Warmup Iteration   2: 8647.244 ns/op
# Warmup Iteration   3: 7728.659 ns/op
Iteration   1: 7735.299 ns/op
Iteration   2: 7752.221 ns/op
Iteration   3: 7741.851 ns/op
Iteration   4: 7730.881 ns/op
Iteration   5: 7753.057 ns/op
Iteration   6: 7765.814 ns/op
Iteration   7: 7731.366 ns/op
Iteration   8: 7726.156 ns/op
Iteration   9: 7738.727 ns/op
Iteration  10: 7754.645 ns/op

# Run progress: 7.06% complete, ETA 01:07:02
# Fork: 2 of 2
# Warmup Iteration   1: 21001.547 ns/op
# Warmup Iteration   2: 8738.935 ns/op
# Warmup Iteration   3: 7727.038 ns/op
Iteration   1: 7766.916 ns/op
Iteration   2: 7765.272 ns/op
Iteration   3: 7763.569 ns/op
Iteration   4: 7715.126 ns/op
Iteration   5: 7712.743 ns/op
Iteration   6: 7709.249 ns/op
Iteration   7: 7709.410 ns/op
Iteration   8: 7725.232 ns/op
Iteration   9: 7692.223 ns/op
Iteration  10: 7746.131 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7736.794 ±(99.9%) 18.974 ns/op [Average]
  (min, avg, max) = (7692.223, 7736.794, 7766.916), stdev = 21.851
  CI (99.9%): [7717.820, 7755.768] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 7.11% complete, ETA 01:06:59
# Fork: 1 of 2
# Warmup Iteration   1: 10957.648 ns/op
# Warmup Iteration   2: 7275.029 ns/op
# Warmup Iteration   3: 6126.389 ns/op
Iteration   1: 6118.119 ns/op
Iteration   2: 6125.139 ns/op
Iteration   3: 6115.610 ns/op
Iteration   4: 6122.420 ns/op
Iteration   5: 6185.946 ns/op
Iteration   6: 6196.632 ns/op
Iteration   7: 6148.822 ns/op
Iteration   8: 6129.323 ns/op
Iteration   9: 6131.947 ns/op
Iteration  10: 6134.480 ns/op

# Run progress: 7.17% complete, ETA 01:06:57
# Fork: 2 of 2
# Warmup Iteration   1: 10404.634 ns/op
# Warmup Iteration   2: 6877.518 ns/op
# Warmup Iteration   3: 6174.702 ns/op
Iteration   1: 6133.878 ns/op
Iteration   2: 6101.047 ns/op
Iteration   3: 6139.358 ns/op
Iteration   4: 6133.144 ns/op
Iteration   5: 6140.892 ns/op
Iteration   6: 6134.904 ns/op
Iteration   7: 6136.806 ns/op
Iteration   8: 6151.969 ns/op
Iteration   9: 6167.719 ns/op
Iteration  10: 6405.928 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6152.704 ±(99.9%) 55.369 ns/op [Average]
  (min, avg, max) = (6101.047, 6152.704, 6405.928), stdev = 63.763
  CI (99.9%): [6097.335, 6208.074] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 7.22% complete, ETA 01:06:54
# Fork: 1 of 2
# Warmup Iteration   1: 2328.935 ns/op
# Warmup Iteration   2: 1922.174 ns/op
# Warmup Iteration   3: 1694.371 ns/op
Iteration   1: 1694.990 ns/op
Iteration   2: 1694.943 ns/op
Iteration   3: 1695.136 ns/op
Iteration   4: 1691.663 ns/op
Iteration   5: 1691.586 ns/op
Iteration   6: 1692.815 ns/op
Iteration   7: 1690.481 ns/op
Iteration   8: 1691.176 ns/op
Iteration   9: 1691.347 ns/op
Iteration  10: 1692.539 ns/op

# Run progress: 7.28% complete, ETA 01:06:52
# Fork: 2 of 2
# Warmup Iteration   1: 2318.838 ns/op
# Warmup Iteration   2: 1961.557 ns/op
# Warmup Iteration   3: 1704.668 ns/op
Iteration   1: 1704.325 ns/op
Iteration   2: 1705.238 ns/op
Iteration   3: 1703.340 ns/op
Iteration   4: 1700.917 ns/op
Iteration   5: 1700.231 ns/op
Iteration   6: 1701.705 ns/op
Iteration   7: 1700.879 ns/op
Iteration   8: 1702.451 ns/op
Iteration   9: 1700.824 ns/op
Iteration  10: 1703.347 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1697.497 ±(99.9%) 4.541 ns/op [Average]
  (min, avg, max) = (1690.481, 1697.497, 1705.238), stdev = 5.230
  CI (99.9%): [1692.955, 1702.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 7.33% complete, ETA 01:06:49
# Fork: 1 of 2
# Warmup Iteration   1: 37.783 ns/op
# Warmup Iteration   2: 72.968 ns/op
# Warmup Iteration   3: 35.640 ns/op
Iteration   1: 35.665 ns/op
Iteration   2: 35.717 ns/op
Iteration   3: 35.653 ns/op
Iteration   4: 35.711 ns/op
Iteration   5: 35.670 ns/op
Iteration   6: 36.142 ns/op
Iteration   7: 35.644 ns/op
Iteration   8: 46.590 ns/op
Iteration   9: 35.660 ns/op
Iteration  10: 35.748 ns/op

# Run progress: 7.39% complete, ETA 01:06:47
# Fork: 2 of 2
# Warmup Iteration   1: 37.795 ns/op
# Warmup Iteration   2: 64.697 ns/op
# Warmup Iteration   3: 50.001 ns/op
Iteration   1: 50.003 ns/op
Iteration   2: 50.073 ns/op
Iteration   3: 50.060 ns/op
Iteration   4: 50.079 ns/op
Iteration   5: 49.977 ns/op
Iteration   6: 50.059 ns/op
Iteration   7: 50.036 ns/op
Iteration   8: 34.446 ns/op
Iteration   9: 50.079 ns/op
Iteration  10: 50.052 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.653 ±(99.9%) 6.318 ns/op [Average]
  (min, avg, max) = (34.446, 42.653, 50.079), stdev = 7.276
  CI (99.9%): [36.335, 48.971] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 7.44% complete, ETA 01:06:44
# Fork: 1 of 2
# Warmup Iteration   1: 280.278 ns/op
# Warmup Iteration   2: 283.649 ns/op
# Warmup Iteration   3: 235.660 ns/op
Iteration   1: 235.704 ns/op
Iteration   2: 235.627 ns/op
Iteration   3: 235.707 ns/op
Iteration   4: 233.229 ns/op
Iteration   5: 233.818 ns/op
Iteration   6: 234.089 ns/op
Iteration   7: 233.021 ns/op
Iteration   8: 233.481 ns/op
Iteration   9: 233.396 ns/op
Iteration  10: 232.816 ns/op

# Run progress: 7.50% complete, ETA 01:06:42
# Fork: 2 of 2
# Warmup Iteration   1: 275.317 ns/op
# Warmup Iteration   2: 283.954 ns/op
# Warmup Iteration   3: 235.707 ns/op
Iteration   1: 235.523 ns/op
Iteration   2: 235.301 ns/op
Iteration   3: 236.434 ns/op
Iteration   4: 234.067 ns/op
Iteration   5: 234.155 ns/op
Iteration   6: 233.587 ns/op
Iteration   7: 233.663 ns/op
Iteration   8: 234.014 ns/op
Iteration   9: 234.639 ns/op
Iteration  10: 233.940 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  234.311 ±(99.9%) 0.909 ns/op [Average]
  (min, avg, max) = (232.816, 234.311, 236.434), stdev = 1.047
  CI (99.9%): [233.402, 235.220] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 7.56% complete, ETA 01:06:39
# Fork: 1 of 2
# Warmup Iteration   1: 730.879 ns/op
# Warmup Iteration   2: 261.261 ns/op
# Warmup Iteration   3: 225.378 ns/op
Iteration   1: 225.232 ns/op
Iteration   2: 225.619 ns/op
Iteration   3: 225.245 ns/op
Iteration   4: 225.607 ns/op
Iteration   5: 225.269 ns/op
Iteration   6: 225.408 ns/op
Iteration   7: 225.298 ns/op
Iteration   8: 227.793 ns/op
Iteration   9: 224.791 ns/op
Iteration  10: 225.530 ns/op

# Run progress: 7.61% complete, ETA 01:06:37
# Fork: 2 of 2
# Warmup Iteration   1: 453.364 ns/op
# Warmup Iteration   2: 263.884 ns/op
# Warmup Iteration   3: 225.561 ns/op
Iteration   1: 225.647 ns/op
Iteration   2: 225.331 ns/op
Iteration   3: 225.305 ns/op
Iteration   4: 225.579 ns/op
Iteration   5: 225.895 ns/op
Iteration   6: 225.423 ns/op
Iteration   7: 225.818 ns/op
Iteration   8: 227.898 ns/op
Iteration   9: 225.572 ns/op
Iteration  10: 225.503 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  225.688 ±(99.9%) 0.673 ns/op [Average]
  (min, avg, max) = (224.791, 225.688, 227.898), stdev = 0.776
  CI (99.9%): [225.015, 226.362] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 7.67% complete, ETA 01:06:34
# Fork: 1 of 2
# Warmup Iteration   1: 399.664 ns/op
# Warmup Iteration   2: 269.834 ns/op
# Warmup Iteration   3: 226.546 ns/op
Iteration   1: 226.567 ns/op
Iteration   2: 226.655 ns/op
Iteration   3: 226.471 ns/op
Iteration   4: 226.762 ns/op
Iteration   5: 227.426 ns/op
Iteration   6: 227.134 ns/op
Iteration   7: 227.448 ns/op
Iteration   8: 244.760 ns/op
Iteration   9: 226.712 ns/op
Iteration  10: 226.663 ns/op

# Run progress: 7.72% complete, ETA 01:06:32
# Fork: 2 of 2
# Warmup Iteration   1: 404.464 ns/op
# Warmup Iteration   2: 264.646 ns/op
# Warmup Iteration   3: 227.350 ns/op
Iteration   1: 226.874 ns/op
Iteration   2: 227.362 ns/op
Iteration   3: 227.356 ns/op
Iteration   4: 227.412 ns/op
Iteration   5: 227.617 ns/op
Iteration   6: 227.097 ns/op
Iteration   7: 227.387 ns/op
Iteration   8: 255.729 ns/op
Iteration   9: 227.404 ns/op
Iteration  10: 227.361 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  229.410 ±(99.9%) 6.385 ns/op [Average]
  (min, avg, max) = (226.471, 229.410, 255.729), stdev = 7.352
  CI (99.9%): [223.025, 235.795] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 7.78% complete, ETA 01:06:29
# Fork: 1 of 2
# Warmup Iteration   1: 404.206 ns/op
# Warmup Iteration   2: 307.420 ns/op
# Warmup Iteration   3: 269.965 ns/op
Iteration   1: 269.929 ns/op
Iteration   2: 269.945 ns/op
Iteration   3: 270.016 ns/op
Iteration   4: 269.937 ns/op
Iteration   5: 271.278 ns/op
Iteration   6: 270.373 ns/op
Iteration   7: 270.335 ns/op
Iteration   8: 273.079 ns/op
Iteration   9: 270.260 ns/op
Iteration  10: 270.059 ns/op

# Run progress: 7.83% complete, ETA 01:06:27
# Fork: 2 of 2
# Warmup Iteration   1: 409.881 ns/op
# Warmup Iteration   2: 323.764 ns/op
# Warmup Iteration   3: 269.905 ns/op
Iteration   1: 269.950 ns/op
Iteration   2: 269.942 ns/op
Iteration   3: 270.112 ns/op
Iteration   4: 269.958 ns/op
Iteration   5: 271.344 ns/op
Iteration   6: 270.311 ns/op
Iteration   7: 270.427 ns/op
Iteration   8: 272.707 ns/op
Iteration   9: 269.992 ns/op
Iteration  10: 270.325 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  270.514 ±(99.9%) 0.790 ns/op [Average]
  (min, avg, max) = (269.929, 270.514, 273.079), stdev = 0.909
  CI (99.9%): [269.724, 271.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 7.89% complete, ETA 01:06:24
# Fork: 1 of 2
# Warmup Iteration   1: 404.831 ns/op
# Warmup Iteration   2: 391.067 ns/op
# Warmup Iteration   3: 345.595 ns/op
Iteration   1: 345.660 ns/op
Iteration   2: 345.716 ns/op
Iteration   3: 345.521 ns/op
Iteration   4: 350.998 ns/op
Iteration   5: 350.703 ns/op
Iteration   6: 350.407 ns/op
Iteration   7: 350.469 ns/op
Iteration   8: 350.716 ns/op
Iteration   9: 350.500 ns/op
Iteration  10: 350.513 ns/op

# Run progress: 7.94% complete, ETA 01:06:22
# Fork: 2 of 2
# Warmup Iteration   1: 403.986 ns/op
# Warmup Iteration   2: 395.989 ns/op
# Warmup Iteration   3: 345.624 ns/op
Iteration   1: 346.027 ns/op
Iteration   2: 345.849 ns/op
Iteration   3: 346.264 ns/op
Iteration   4: 351.283 ns/op
Iteration   5: 350.308 ns/op
Iteration   6: 350.715 ns/op
Iteration   7: 350.935 ns/op
Iteration   8: 350.592 ns/op
Iteration   9: 350.695 ns/op
Iteration  10: 350.325 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  349.210 ±(99.9%) 1.979 ns/op [Average]
  (min, avg, max) = (345.521, 349.210, 351.283), stdev = 2.279
  CI (99.9%): [347.231, 351.189] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 8.00% complete, ETA 01:06:19
# Fork: 1 of 2
# Warmup Iteration   1: 37.787 ns/op
# Warmup Iteration   2: 66.175 ns/op
# Warmup Iteration   3: 35.715 ns/op
Iteration   1: 35.666 ns/op
Iteration   2: 35.715 ns/op
Iteration   3: 35.787 ns/op
Iteration   4: 35.710 ns/op
Iteration   5: 35.685 ns/op
Iteration   6: 36.169 ns/op
Iteration   7: 35.690 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.734 ns/op
Iteration  10: 35.659 ns/op

# Run progress: 8.06% complete, ETA 01:06:17
# Fork: 2 of 2
# Warmup Iteration   1: 38.095 ns/op
# Warmup Iteration   2: 66.235 ns/op
# Warmup Iteration   3: 35.684 ns/op
Iteration   1: 35.703 ns/op
Iteration   2: 35.639 ns/op
Iteration   3: 35.700 ns/op
Iteration   4: 35.685 ns/op
Iteration   5: 35.713 ns/op
Iteration   6: 36.154 ns/op
Iteration   7: 35.750 ns/op
Iteration   8: 34.415 ns/op
Iteration   9: 35.688 ns/op
Iteration  10: 35.676 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.623 ±(99.9%) 0.366 ns/op [Average]
  (min, avg, max) = (34.415, 35.623, 36.169), stdev = 0.422
  CI (99.9%): [35.256, 35.989] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 8.11% complete, ETA 01:06:14
# Fork: 1 of 2
# Warmup Iteration   1: 271.066 ns/op
# Warmup Iteration   2: 286.010 ns/op
# Warmup Iteration   3: 235.800 ns/op
Iteration   1: 235.447 ns/op
Iteration   2: 235.934 ns/op
Iteration   3: 235.906 ns/op
Iteration   4: 233.484 ns/op
Iteration   5: 234.037 ns/op
Iteration   6: 234.368 ns/op
Iteration   7: 233.346 ns/op
Iteration   8: 233.979 ns/op
Iteration   9: 233.756 ns/op
Iteration  10: 233.643 ns/op

# Run progress: 8.17% complete, ETA 01:06:12
# Fork: 2 of 2
# Warmup Iteration   1: 293.548 ns/op
# Warmup Iteration   2: 283.798 ns/op
# Warmup Iteration   3: 235.473 ns/op
Iteration   1: 235.450 ns/op
Iteration   2: 235.448 ns/op
Iteration   3: 235.294 ns/op
Iteration   4: 232.925 ns/op
Iteration   5: 233.043 ns/op
Iteration   6: 233.399 ns/op
Iteration   7: 233.353 ns/op
Iteration   8: 233.963 ns/op
Iteration   9: 232.479 ns/op
Iteration  10: 233.014 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  234.113 ±(99.9%) 0.939 ns/op [Average]
  (min, avg, max) = (232.479, 234.113, 235.934), stdev = 1.082
  CI (99.9%): [233.174, 235.053] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 8.22% complete, ETA 01:06:09
# Fork: 1 of 2
# Warmup Iteration   1: 323.942 ns/op
# Warmup Iteration   2: 283.154 ns/op
# Warmup Iteration   3: 241.242 ns/op
Iteration   1: 241.448 ns/op
Iteration   2: 241.538 ns/op
Iteration   3: 241.323 ns/op
Iteration   4: 241.331 ns/op
Iteration   5: 241.188 ns/op
Iteration   6: 241.288 ns/op
Iteration   7: 241.357 ns/op
Iteration   8: 236.069 ns/op
Iteration   9: 241.231 ns/op
Iteration  10: 241.165 ns/op

# Run progress: 8.28% complete, ETA 01:06:07
# Fork: 2 of 2
# Warmup Iteration   1: 479.791 ns/op
# Warmup Iteration   2: 257.740 ns/op
# Warmup Iteration   3: 225.466 ns/op
Iteration   1: 225.294 ns/op
Iteration   2: 225.530 ns/op
Iteration   3: 225.255 ns/op
Iteration   4: 225.097 ns/op
Iteration   5: 225.444 ns/op
Iteration   6: 225.460 ns/op
Iteration   7: 225.456 ns/op
Iteration   8: 227.785 ns/op
Iteration   9: 225.567 ns/op
Iteration  10: 225.417 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  233.212 ±(99.9%) 6.843 ns/op [Average]
  (min, avg, max) = (225.097, 233.212, 241.538), stdev = 7.880
  CI (99.9%): [226.369, 240.055] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 8.33% complete, ETA 01:06:05
# Fork: 1 of 2
# Warmup Iteration   1: 394.111 ns/op
# Warmup Iteration   2: 275.687 ns/op
# Warmup Iteration   3: 226.899 ns/op
Iteration   1: 227.231 ns/op
Iteration   2: 226.929 ns/op
Iteration   3: 226.852 ns/op
Iteration   4: 226.291 ns/op
Iteration   5: 227.667 ns/op
Iteration   6: 227.091 ns/op
Iteration   7: 227.463 ns/op
Iteration   8: 229.873 ns/op
Iteration   9: 226.990 ns/op
Iteration  10: 226.553 ns/op

# Run progress: 8.39% complete, ETA 01:06:02
# Fork: 2 of 2
# Warmup Iteration   1: 545.684 ns/op
# Warmup Iteration   2: 261.093 ns/op
# Warmup Iteration   3: 227.469 ns/op
Iteration   1: 227.478 ns/op
Iteration   2: 227.365 ns/op
Iteration   3: 227.275 ns/op
Iteration   4: 227.787 ns/op
Iteration   5: 227.983 ns/op
Iteration   6: 227.741 ns/op
Iteration   7: 227.531 ns/op
Iteration   8: 230.242 ns/op
Iteration   9: 227.680 ns/op
Iteration  10: 227.260 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  227.564 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (226.291, 227.564, 230.242), stdev = 0.952
  CI (99.9%): [226.737, 228.391] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 8.44% complete, ETA 01:06:00
# Fork: 1 of 2
# Warmup Iteration   1: 411.259 ns/op
# Warmup Iteration   2: 311.049 ns/op
# Warmup Iteration   3: 269.882 ns/op
Iteration   1: 270.079 ns/op
Iteration   2: 269.966 ns/op
Iteration   3: 270.074 ns/op
Iteration   4: 270.149 ns/op
Iteration   5: 271.168 ns/op
Iteration   6: 270.310 ns/op
Iteration   7: 270.392 ns/op
Iteration   8: 273.154 ns/op
Iteration   9: 269.979 ns/op
Iteration  10: 269.961 ns/op

# Run progress: 8.50% complete, ETA 01:05:57
# Fork: 2 of 2
# Warmup Iteration   1: 418.422 ns/op
# Warmup Iteration   2: 321.878 ns/op
# Warmup Iteration   3: 269.954 ns/op
Iteration   1: 270.098 ns/op
Iteration   2: 269.941 ns/op
Iteration   3: 270.245 ns/op
Iteration   4: 269.991 ns/op
Iteration   5: 271.107 ns/op
Iteration   6: 270.346 ns/op
Iteration   7: 270.328 ns/op
Iteration   8: 272.663 ns/op
Iteration   9: 269.945 ns/op
Iteration  10: 270.006 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  270.495 ±(99.9%) 0.780 ns/op [Average]
  (min, avg, max) = (269.941, 270.495, 273.154), stdev = 0.898
  CI (99.9%): [269.715, 271.275] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 8.56% complete, ETA 01:05:55
# Fork: 1 of 2
# Warmup Iteration   1: 416.416 ns/op
# Warmup Iteration   2: 395.068 ns/op
# Warmup Iteration   3: 346.411 ns/op
Iteration   1: 346.822 ns/op
Iteration   2: 345.920 ns/op
Iteration   3: 346.734 ns/op
Iteration   4: 350.957 ns/op
Iteration   5: 350.864 ns/op
Iteration   6: 351.141 ns/op
Iteration   7: 350.387 ns/op
Iteration   8: 350.848 ns/op
Iteration   9: 351.124 ns/op
Iteration  10: 350.340 ns/op

# Run progress: 8.61% complete, ETA 01:05:52
# Fork: 2 of 2
# Warmup Iteration   1: 448.343 ns/op
# Warmup Iteration   2: 384.849 ns/op
# Warmup Iteration   3: 346.295 ns/op
Iteration   1: 346.309 ns/op
Iteration   2: 346.152 ns/op
Iteration   3: 346.180 ns/op
Iteration   4: 350.507 ns/op
Iteration   5: 350.336 ns/op
Iteration   6: 350.802 ns/op
Iteration   7: 350.260 ns/op
Iteration   8: 350.897 ns/op
Iteration   9: 350.569 ns/op
Iteration  10: 350.465 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  349.381 ±(99.9%) 1.786 ns/op [Average]
  (min, avg, max) = (345.920, 349.381, 351.141), stdev = 2.057
  CI (99.9%): [347.594, 351.167] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 8.67% complete, ETA 01:05:50
# Fork: 1 of 2
# Warmup Iteration   1: 38.296 ns/op
# Warmup Iteration   2: 66.119 ns/op
# Warmup Iteration   3: 35.666 ns/op
Iteration   1: 35.707 ns/op
Iteration   2: 35.750 ns/op
Iteration   3: 35.671 ns/op
Iteration   4: 35.639 ns/op
Iteration   5: 35.683 ns/op
Iteration   6: 36.134 ns/op
Iteration   7: 35.653 ns/op
Iteration   8: 34.515 ns/op
Iteration   9: 35.605 ns/op
Iteration  10: 35.673 ns/op

# Run progress: 8.72% complete, ETA 01:05:47
# Fork: 2 of 2
# Warmup Iteration   1: 38.532 ns/op
# Warmup Iteration   2: 66.964 ns/op
# Warmup Iteration   3: 35.647 ns/op
Iteration   1: 35.712 ns/op
Iteration   2: 35.623 ns/op
Iteration   3: 35.676 ns/op
Iteration   4: 35.737 ns/op
Iteration   5: 35.740 ns/op
Iteration   6: 36.133 ns/op
Iteration   7: 35.689 ns/op
Iteration   8: 34.524 ns/op
Iteration   9: 35.683 ns/op
Iteration  10: 35.690 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.612 ±(99.9%) 0.347 ns/op [Average]
  (min, avg, max) = (34.515, 35.612, 36.134), stdev = 0.400
  CI (99.9%): [35.265, 35.959] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 8.78% complete, ETA 01:05:45
# Fork: 1 of 2
# Warmup Iteration   1: 1467.143 ns/op
# Warmup Iteration   2: 1315.277 ns/op
# Warmup Iteration   3: 1138.975 ns/op
Iteration   1: 1138.438 ns/op
Iteration   2: 1137.484 ns/op
Iteration   3: 1137.875 ns/op
Iteration   4: 1131.519 ns/op
Iteration   5: 1144.200 ns/op
Iteration   6: 1132.664 ns/op
Iteration   7: 1138.981 ns/op
Iteration   8: 1118.973 ns/op
Iteration   9: 1125.757 ns/op
Iteration  10: 1131.411 ns/op

# Run progress: 8.83% complete, ETA 01:05:42
# Fork: 2 of 2
# Warmup Iteration   1: 1574.841 ns/op
# Warmup Iteration   2: 1327.930 ns/op
# Warmup Iteration   3: 1137.969 ns/op
Iteration   1: 1137.403 ns/op
Iteration   2: 1137.751 ns/op
Iteration   3: 1137.715 ns/op
Iteration   4: 1126.084 ns/op
Iteration   5: 1141.833 ns/op
Iteration   6: 1129.425 ns/op
Iteration   7: 1139.820 ns/op
Iteration   8: 1126.171 ns/op
Iteration   9: 1125.834 ns/op
Iteration  10: 1125.555 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1133.245 ±(99.9%) 5.944 ns/op [Average]
  (min, avg, max) = (1118.973, 1133.245, 1144.200), stdev = 6.845
  CI (99.9%): [1127.301, 1139.189] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 8.89% complete, ETA 01:05:40
# Fork: 1 of 2
# Warmup Iteration   1: 882.983 ns/op
# Warmup Iteration   2: 508.058 ns/op
# Warmup Iteration   3: 437.505 ns/op
Iteration   1: 437.694 ns/op
Iteration   2: 438.987 ns/op
Iteration   3: 438.490 ns/op
Iteration   4: 437.761 ns/op
Iteration   5: 437.979 ns/op
Iteration   6: 437.769 ns/op
Iteration   7: 438.611 ns/op
Iteration   8: 439.872 ns/op
Iteration   9: 439.415 ns/op
Iteration  10: 437.363 ns/op

# Run progress: 8.94% complete, ETA 01:05:37
# Fork: 2 of 2
# Warmup Iteration   1: 1539.850 ns/op
# Warmup Iteration   2: 525.058 ns/op
# Warmup Iteration   3: 437.419 ns/op
Iteration   1: 437.190 ns/op
Iteration   2: 436.913 ns/op
Iteration   3: 438.214 ns/op
Iteration   4: 437.677 ns/op
Iteration   5: 437.716 ns/op
Iteration   6: 437.202 ns/op
Iteration   7: 437.703 ns/op
Iteration   8: 441.654 ns/op
Iteration   9: 438.716 ns/op
Iteration  10: 436.844 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  438.188 ±(99.9%) 0.996 ns/op [Average]
  (min, avg, max) = (436.844, 438.188, 441.654), stdev = 1.147
  CI (99.9%): [437.193, 439.184] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 9.00% complete, ETA 01:05:35
# Fork: 1 of 2
# Warmup Iteration   1: 787.009 ns/op
# Warmup Iteration   2: 512.031 ns/op
# Warmup Iteration   3: 437.882 ns/op
Iteration   1: 439.089 ns/op
Iteration   2: 438.116 ns/op
Iteration   3: 438.773 ns/op
Iteration   4: 439.109 ns/op
Iteration   5: 443.108 ns/op
Iteration   6: 438.531 ns/op
Iteration   7: 439.232 ns/op
Iteration   8: 443.833 ns/op
Iteration   9: 437.633 ns/op
Iteration  10: 437.751 ns/op

# Run progress: 9.06% complete, ETA 01:05:32
# Fork: 2 of 2
# Warmup Iteration   1: 1105.457 ns/op
# Warmup Iteration   2: 508.665 ns/op
# Warmup Iteration   3: 437.504 ns/op
Iteration   1: 438.302 ns/op
Iteration   2: 438.453 ns/op
Iteration   3: 438.341 ns/op
Iteration   4: 437.009 ns/op
Iteration   5: 438.536 ns/op
Iteration   6: 437.289 ns/op
Iteration   7: 438.371 ns/op
Iteration   8: 440.046 ns/op
Iteration   9: 439.141 ns/op
Iteration  10: 438.403 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  438.953 ±(99.9%) 1.476 ns/op [Average]
  (min, avg, max) = (437.009, 438.953, 443.833), stdev = 1.700
  CI (99.9%): [437.477, 440.430] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 9.11% complete, ETA 01:05:30
# Fork: 1 of 2
# Warmup Iteration   1: 649.452 ns/op
# Warmup Iteration   2: 519.676 ns/op
# Warmup Iteration   3: 437.082 ns/op
Iteration   1: 437.462 ns/op
Iteration   2: 437.685 ns/op
Iteration   3: 437.270 ns/op
Iteration   4: 437.623 ns/op
Iteration   5: 437.757 ns/op
Iteration   6: 445.791 ns/op
Iteration   7: 438.037 ns/op
Iteration   8: 440.258 ns/op
Iteration   9: 437.794 ns/op
Iteration  10: 437.624 ns/op

# Run progress: 9.17% complete, ETA 01:05:27
# Fork: 2 of 2
# Warmup Iteration   1: 650.912 ns/op
# Warmup Iteration   2: 510.071 ns/op
# Warmup Iteration   3: 437.460 ns/op
Iteration   1: 446.436 ns/op
Iteration   2: 437.559 ns/op
Iteration   3: 437.685 ns/op
Iteration   4: 437.137 ns/op
Iteration   5: 445.701 ns/op
Iteration   6: 445.349 ns/op
Iteration   7: 437.749 ns/op
Iteration   8: 440.314 ns/op
Iteration   9: 437.626 ns/op
Iteration  10: 444.166 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  439.851 ±(99.9%) 3.006 ns/op [Average]
  (min, avg, max) = (437.137, 439.851, 446.436), stdev = 3.462
  CI (99.9%): [436.845, 442.857] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 9.22% complete, ETA 01:05:25
# Fork: 1 of 2
# Warmup Iteration   1: 350.450 ns/op
# Warmup Iteration   2: 307.445 ns/op
# Warmup Iteration   3: 284.116 ns/op
Iteration   1: 284.596 ns/op
Iteration   2: 284.202 ns/op
Iteration   3: 284.394 ns/op
Iteration   4: 287.820 ns/op
Iteration   5: 288.166 ns/op
Iteration   6: 288.100 ns/op
Iteration   7: 288.070 ns/op
Iteration   8: 288.557 ns/op
Iteration   9: 287.969 ns/op
Iteration  10: 287.806 ns/op

# Run progress: 9.28% complete, ETA 01:05:22
# Fork: 2 of 2
# Warmup Iteration   1: 327.066 ns/op
# Warmup Iteration   2: 307.806 ns/op
# Warmup Iteration   3: 290.287 ns/op
Iteration   1: 290.617 ns/op
Iteration   2: 290.507 ns/op
Iteration   3: 290.436 ns/op
Iteration   4: 293.942 ns/op
Iteration   5: 293.915 ns/op
Iteration   6: 294.064 ns/op
Iteration   7: 294.150 ns/op
Iteration   8: 288.659 ns/op
Iteration   9: 294.091 ns/op
Iteration  10: 294.128 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  289.710 ±(99.9%) 2.955 ns/op [Average]
  (min, avg, max) = (284.202, 289.710, 294.150), stdev = 3.403
  CI (99.9%): [286.755, 292.665] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 9.33% complete, ETA 01:05:20
# Fork: 1 of 2
# Warmup Iteration   1: 39.068 ns/op
# Warmup Iteration   2: 65.012 ns/op
# Warmup Iteration   3: 35.618 ns/op
Iteration   1: 35.694 ns/op
Iteration   2: 35.693 ns/op
Iteration   3: 35.705 ns/op
Iteration   4: 35.653 ns/op
Iteration   5: 35.705 ns/op
Iteration   6: 36.151 ns/op
Iteration   7: 35.679 ns/op
Iteration   8: 34.430 ns/op
Iteration   9: 35.722 ns/op
Iteration  10: 35.680 ns/op

# Run progress: 9.39% complete, ETA 01:05:17
# Fork: 2 of 2
# Warmup Iteration   1: 37.889 ns/op
# Warmup Iteration   2: 70.818 ns/op
# Warmup Iteration   3: 35.673 ns/op
Iteration   1: 35.684 ns/op
Iteration   2: 35.721 ns/op
Iteration   3: 35.640 ns/op
Iteration   4: 35.681 ns/op
Iteration   5: 35.695 ns/op
Iteration   6: 36.160 ns/op
Iteration   7: 35.696 ns/op
Iteration   8: 34.516 ns/op
Iteration   9: 35.643 ns/op
Iteration  10: 35.681 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.611 ±(99.9%) 0.361 ns/op [Average]
  (min, avg, max) = (34.430, 35.611, 36.160), stdev = 0.416
  CI (99.9%): [35.250, 35.973] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 9.44% complete, ETA 01:05:15
# Fork: 1 of 2
# Warmup Iteration   1: 470.231 ns/op
# Warmup Iteration   2: 421.666 ns/op
# Warmup Iteration   3: 368.123 ns/op
Iteration   1: 367.827 ns/op
Iteration   2: 368.095 ns/op
Iteration   3: 368.957 ns/op
Iteration   4: 366.006 ns/op
Iteration   5: 365.388 ns/op
Iteration   6: 366.911 ns/op
Iteration   7: 367.141 ns/op
Iteration   8: 367.084 ns/op
Iteration   9: 366.063 ns/op
Iteration  10: 367.269 ns/op

# Run progress: 9.50% complete, ETA 01:05:12
# Fork: 2 of 2
# Warmup Iteration   1: 464.815 ns/op
# Warmup Iteration   2: 430.613 ns/op
# Warmup Iteration   3: 369.547 ns/op
Iteration   1: 369.842 ns/op
Iteration   2: 369.139 ns/op
Iteration   3: 368.804 ns/op
Iteration   4: 365.326 ns/op
Iteration   5: 365.774 ns/op
Iteration   6: 366.653 ns/op
Iteration   7: 365.878 ns/op
Iteration   8: 364.458 ns/op
Iteration   9: 365.367 ns/op
Iteration  10: 366.983 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  366.948 ±(99.9%) 1.275 ns/op [Average]
  (min, avg, max) = (364.458, 366.948, 369.842), stdev = 1.468
  CI (99.9%): [365.673, 368.223] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 9.56% complete, ETA 01:05:10
# Fork: 1 of 2
# Warmup Iteration   1: 7966.590 ns/op
# Warmup Iteration   2: 4241.958 ns/op
# Warmup Iteration   3: 3601.547 ns/op
Iteration   1: 3599.205 ns/op
Iteration   2: 3602.410 ns/op
Iteration   3: 3604.391 ns/op
Iteration   4: 3598.066 ns/op
Iteration   5: 3595.032 ns/op
Iteration   6: 3596.979 ns/op
Iteration   7: 3599.562 ns/op
Iteration   8: 3590.742 ns/op
Iteration   9: 3614.740 ns/op
Iteration  10: 3591.470 ns/op

# Run progress: 9.61% complete, ETA 01:05:08
# Fork: 2 of 2
# Warmup Iteration   1: 8884.220 ns/op
# Warmup Iteration   2: 4129.512 ns/op
# Warmup Iteration   3: 3667.861 ns/op
Iteration   1: 3685.245 ns/op
Iteration   2: 3684.790 ns/op
Iteration   3: 3694.967 ns/op
Iteration   4: 3706.970 ns/op
Iteration   5: 3677.297 ns/op
Iteration   6: 3647.069 ns/op
Iteration   7: 3695.387 ns/op
Iteration   8: 3708.324 ns/op
Iteration   9: 3692.016 ns/op
Iteration  10: 3680.407 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3643.253 ±(99.9%) 40.776 ns/op [Average]
  (min, avg, max) = (3590.742, 3643.253, 3708.324), stdev = 46.957
  CI (99.9%): [3602.478, 3684.029] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 9.67% complete, ETA 01:05:05
# Fork: 1 of 2
# Warmup Iteration   1: 7440.755 ns/op
# Warmup Iteration   2: 4086.308 ns/op
# Warmup Iteration   3: 3595.622 ns/op
Iteration   1: 3599.320 ns/op
Iteration   2: 3601.009 ns/op
Iteration   3: 3610.756 ns/op
Iteration   4: 3590.204 ns/op
Iteration   5: 3602.093 ns/op
Iteration   6: 3597.240 ns/op
Iteration   7: 3600.962 ns/op
Iteration   8: 3603.014 ns/op
Iteration   9: 3608.138 ns/op
Iteration  10: 3613.023 ns/op

# Run progress: 9.72% complete, ETA 01:05:03
# Fork: 2 of 2
# Warmup Iteration   1: 7871.847 ns/op
# Warmup Iteration   2: 4068.891 ns/op
# Warmup Iteration   3: 3588.502 ns/op
Iteration   1: 3586.523 ns/op
Iteration   2: 3594.219 ns/op
Iteration   3: 3583.630 ns/op
Iteration   4: 3581.243 ns/op
Iteration   5: 3583.347 ns/op
Iteration   6: 3583.335 ns/op
Iteration   7: 3580.577 ns/op
Iteration   8: 3630.873 ns/op
Iteration   9: 3607.743 ns/op
Iteration  10: 3578.778 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3596.801 ±(99.9%) 11.781 ns/op [Average]
  (min, avg, max) = (3578.778, 3596.801, 3630.873), stdev = 13.567
  CI (99.9%): [3585.021, 3608.582] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 9.78% complete, ETA 01:05:00
# Fork: 1 of 2
# Warmup Iteration   1: 5203.155 ns/op
# Warmup Iteration   2: 3861.161 ns/op
# Warmup Iteration   3: 3255.448 ns/op
Iteration   1: 3260.855 ns/op
Iteration   2: 3280.545 ns/op
Iteration   3: 3253.148 ns/op
Iteration   4: 3260.220 ns/op
Iteration   5: 3251.230 ns/op
Iteration   6: 3272.754 ns/op
Iteration   7: 3270.966 ns/op
Iteration   8: 3271.443 ns/op
Iteration   9: 3250.208 ns/op
Iteration  10: 3256.639 ns/op

# Run progress: 9.83% complete, ETA 01:04:58
# Fork: 2 of 2
# Warmup Iteration   1: 6009.811 ns/op
# Warmup Iteration   2: 3955.344 ns/op
# Warmup Iteration   3: 3357.196 ns/op
Iteration   1: 3339.819 ns/op
Iteration   2: 3335.865 ns/op
Iteration   3: 3338.073 ns/op
Iteration   4: 3358.903 ns/op
Iteration   5: 3342.118 ns/op
Iteration   6: 3351.533 ns/op
Iteration   7: 3341.826 ns/op
Iteration   8: 3414.811 ns/op
Iteration   9: 3337.891 ns/op
Iteration  10: 3343.394 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3306.612 ±(99.9%) 41.988 ns/op [Average]
  (min, avg, max) = (3250.208, 3306.612, 3414.811), stdev = 48.353
  CI (99.9%): [3264.624, 3348.600] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 9.89% complete, ETA 01:04:55
# Fork: 1 of 2
# Warmup Iteration   1: 1997.883 ns/op
# Warmup Iteration   2: 1661.264 ns/op
# Warmup Iteration   3: 1474.135 ns/op
Iteration   1: 1474.810 ns/op
Iteration   2: 1474.058 ns/op
Iteration   3: 1475.096 ns/op
Iteration   4: 1467.747 ns/op
Iteration   5: 1468.239 ns/op
Iteration   6: 1474.943 ns/op
Iteration   7: 1467.792 ns/op
Iteration   8: 1466.011 ns/op
Iteration   9: 1468.600 ns/op
Iteration  10: 1469.877 ns/op

# Run progress: 9.94% complete, ETA 01:04:53
# Fork: 2 of 2
# Warmup Iteration   1: 1997.768 ns/op
# Warmup Iteration   2: 1694.391 ns/op
# Warmup Iteration   3: 1476.822 ns/op
Iteration   1: 1477.487 ns/op
Iteration   2: 1476.821 ns/op
Iteration   3: 1477.609 ns/op
Iteration   4: 1470.454 ns/op
Iteration   5: 1470.217 ns/op
Iteration   6: 1473.134 ns/op
Iteration   7: 1472.417 ns/op
Iteration   8: 1495.689 ns/op
Iteration   9: 1471.474 ns/op
Iteration  10: 1472.432 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1473.245 ±(99.9%) 5.473 ns/op [Average]
  (min, avg, max) = (1466.011, 1473.245, 1495.689), stdev = 6.302
  CI (99.9%): [1467.773, 1478.718] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 10.00% complete, ETA 01:04:50
# Fork: 1 of 2
# Warmup Iteration   1: 38.415 ns/op
# Warmup Iteration   2: 67.047 ns/op
# Warmup Iteration   3: 35.710 ns/op
Iteration   1: 35.711 ns/op
Iteration   2: 35.702 ns/op
Iteration   3: 35.744 ns/op
Iteration   4: 35.684 ns/op
Iteration   5: 35.693 ns/op
Iteration   6: 36.152 ns/op
Iteration   7: 35.678 ns/op
Iteration   8: 34.500 ns/op
Iteration   9: 35.700 ns/op
Iteration  10: 35.669 ns/op

# Run progress: 10.06% complete, ETA 01:04:48
# Fork: 2 of 2
# Warmup Iteration   1: 38.111 ns/op
# Warmup Iteration   2: 66.843 ns/op
# Warmup Iteration   3: 35.659 ns/op
Iteration   1: 35.683 ns/op
Iteration   2: 35.718 ns/op
Iteration   3: 35.725 ns/op
Iteration   4: 35.676 ns/op
Iteration   5: 35.686 ns/op
Iteration   6: 36.122 ns/op
Iteration   7: 35.661 ns/op
Iteration   8: 34.524 ns/op
Iteration   9: 35.770 ns/op
Iteration  10: 35.658 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.623 ±(99.9%) 0.351 ns/op [Average]
  (min, avg, max) = (34.500, 35.623, 36.152), stdev = 0.404
  CI (99.9%): [35.272, 35.974] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 10.11% complete, ETA 01:04:45
# Fork: 1 of 2
# Warmup Iteration   1: 2357.528 ns/op
# Warmup Iteration   2: 1864.210 ns/op
# Warmup Iteration   3: 1605.591 ns/op
Iteration   1: 1610.807 ns/op
Iteration   2: 1605.955 ns/op
Iteration   3: 1619.489 ns/op
Iteration   4: 1594.507 ns/op
Iteration   5: 1609.303 ns/op
Iteration   6: 1600.514 ns/op
Iteration   7: 1608.087 ns/op
Iteration   8: 1641.147 ns/op
Iteration   9: 1594.510 ns/op
Iteration  10: 1594.414 ns/op

# Run progress: 10.17% complete, ETA 01:04:43
# Fork: 2 of 2
# Warmup Iteration   1: 2320.866 ns/op
# Warmup Iteration   2: 1847.282 ns/op
# Warmup Iteration   3: 1605.229 ns/op
Iteration   1: 1609.850 ns/op
Iteration   2: 1605.458 ns/op
Iteration   3: 1618.701 ns/op
Iteration   4: 1593.350 ns/op
Iteration   5: 1608.653 ns/op
Iteration   6: 1600.618 ns/op
Iteration   7: 1605.880 ns/op
Iteration   8: 1594.098 ns/op
Iteration   9: 1593.326 ns/op
Iteration  10: 1593.240 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1605.095 ±(99.9%) 10.362 ns/op [Average]
  (min, avg, max) = (1593.240, 1605.095, 1641.147), stdev = 11.932
  CI (99.9%): [1594.734, 1615.457] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 10.22% complete, ETA 01:04:40
# Fork: 1 of 2
# Warmup Iteration   1: 20230.715 ns/op
# Warmup Iteration   2: 9092.982 ns/op
# Warmup Iteration   3: 7881.281 ns/op
Iteration   1: 7865.172 ns/op
Iteration   2: 7853.408 ns/op
Iteration   3: 7855.933 ns/op
Iteration   4: 7877.683 ns/op
Iteration   5: 7872.647 ns/op
Iteration   6: 7878.977 ns/op
Iteration   7: 7872.875 ns/op
Iteration   8: 7864.032 ns/op
Iteration   9: 7868.463 ns/op
Iteration  10: 7859.916 ns/op

# Run progress: 10.28% complete, ETA 01:04:38
# Fork: 2 of 2
# Warmup Iteration   1: 21497.843 ns/op
# Warmup Iteration   2: 8844.666 ns/op
# Warmup Iteration   3: 8243.581 ns/op
Iteration   1: 7903.655 ns/op
Iteration   2: 7920.997 ns/op
Iteration   3: 7953.437 ns/op
Iteration   4: 7970.676 ns/op
Iteration   5: 7952.703 ns/op
Iteration   6: 7936.291 ns/op
Iteration   7: 7913.551 ns/op
Iteration   8: 7915.629 ns/op
Iteration   9: 7934.172 ns/op
Iteration  10: 7949.929 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7901.007 ±(99.9%) 33.402 ns/op [Average]
  (min, avg, max) = (7853.408, 7901.007, 7970.676), stdev = 38.466
  CI (99.9%): [7867.605, 7934.409] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 10.33% complete, ETA 01:04:35
# Fork: 1 of 2
# Warmup Iteration   1: 25941.891 ns/op
# Warmup Iteration   2: 9013.725 ns/op
# Warmup Iteration   3: 8343.522 ns/op
Iteration   1: 8024.602 ns/op
Iteration   2: 7987.201 ns/op
Iteration   3: 7965.976 ns/op
Iteration   4: 7995.737 ns/op
Iteration   5: 7955.900 ns/op
Iteration   6: 8070.572 ns/op
Iteration   7: 7948.508 ns/op
Iteration   8: 7966.508 ns/op
Iteration   9: 8014.526 ns/op
Iteration  10: 7987.825 ns/op

# Run progress: 10.39% complete, ETA 01:04:33
# Fork: 2 of 2
# Warmup Iteration   1: 29089.531 ns/op
# Warmup Iteration   2: 8999.604 ns/op
# Warmup Iteration   3: 8364.084 ns/op
Iteration   1: 8037.739 ns/op
Iteration   2: 7993.491 ns/op
Iteration   3: 8036.716 ns/op
Iteration   4: 8014.975 ns/op
Iteration   5: 7990.325 ns/op
Iteration   6: 8047.754 ns/op
Iteration   7: 7995.137 ns/op
Iteration   8: 8024.659 ns/op
Iteration   9: 8015.712 ns/op
Iteration  10: 8021.463 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8004.766 ±(99.9%) 27.676 ns/op [Average]
  (min, avg, max) = (7948.508, 8004.766, 8070.572), stdev = 31.872
  CI (99.9%): [7977.090, 8032.442] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 10.44% complete, ETA 01:04:30
# Fork: 1 of 2
# Warmup Iteration   1: 15372.926 ns/op
# Warmup Iteration   2: 7205.097 ns/op
# Warmup Iteration   3: 6110.371 ns/op
Iteration   1: 6112.465 ns/op
Iteration   2: 6116.805 ns/op
Iteration   3: 6180.280 ns/op
Iteration   4: 6137.194 ns/op
Iteration   5: 6129.067 ns/op
Iteration   6: 6152.156 ns/op
Iteration   7: 6107.905 ns/op
Iteration   8: 6115.748 ns/op
Iteration   9: 6163.911 ns/op
Iteration  10: 6115.697 ns/op

# Run progress: 10.50% complete, ETA 01:04:28
# Fork: 2 of 2
# Warmup Iteration   1: 12216.837 ns/op
# Warmup Iteration   2: 6947.375 ns/op
# Warmup Iteration   3: 6174.371 ns/op
Iteration   1: 6166.558 ns/op
Iteration   2: 6186.900 ns/op
Iteration   3: 6207.997 ns/op
Iteration   4: 6229.383 ns/op
Iteration   5: 6154.561 ns/op
Iteration   6: 6180.208 ns/op
Iteration   7: 6194.460 ns/op
Iteration   8: 6175.339 ns/op
Iteration   9: 6177.281 ns/op
Iteration  10: 6229.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6161.675 ±(99.9%) 33.069 ns/op [Average]
  (min, avg, max) = (6107.905, 6161.675, 6229.582), stdev = 38.082
  CI (99.9%): [6128.606, 6194.744] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 10.56% complete, ETA 01:04:26
# Fork: 1 of 2
# Warmup Iteration   1: 2218.798 ns/op
# Warmup Iteration   2: 1810.521 ns/op
# Warmup Iteration   3: 1579.866 ns/op
Iteration   1: 1572.188 ns/op
Iteration   2: 1581.154 ns/op
Iteration   3: 1579.766 ns/op
Iteration   4: 1569.258 ns/op
Iteration   5: 1568.901 ns/op
Iteration   6: 1567.372 ns/op
Iteration   7: 1579.258 ns/op
Iteration   8: 1571.367 ns/op
Iteration   9: 1577.170 ns/op
Iteration  10: 1578.325 ns/op

# Run progress: 10.61% complete, ETA 01:04:23
# Fork: 2 of 2
# Warmup Iteration   1: 2283.319 ns/op
# Warmup Iteration   2: 1742.374 ns/op
# Warmup Iteration   3: 1580.703 ns/op
Iteration   1: 1575.808 ns/op
Iteration   2: 1575.386 ns/op
Iteration   3: 1580.126 ns/op
Iteration   4: 1589.796 ns/op
Iteration   5: 1578.836 ns/op
Iteration   6: 1573.844 ns/op
Iteration   7: 1574.939 ns/op
Iteration   8: 1577.365 ns/op
Iteration   9: 1571.792 ns/op
Iteration  10: 1573.167 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1575.791 ±(99.9%) 4.511 ns/op [Average]
  (min, avg, max) = (1567.372, 1575.791, 1589.796), stdev = 5.195
  CI (99.9%): [1571.280, 1580.302] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 10.67% complete, ETA 01:04:21
# Fork: 1 of 2
# Warmup Iteration   1: 38.572 ns/op
# Warmup Iteration   2: 66.073 ns/op
# Warmup Iteration   3: 35.616 ns/op
Iteration   1: 35.691 ns/op
Iteration   2: 35.683 ns/op
Iteration   3: 35.722 ns/op
Iteration   4: 35.677 ns/op
Iteration   5: 35.696 ns/op
Iteration   6: 36.166 ns/op
Iteration   7: 35.700 ns/op
Iteration   8: 34.521 ns/op
Iteration   9: 35.687 ns/op
Iteration  10: 35.718 ns/op

# Run progress: 10.72% complete, ETA 01:04:18
# Fork: 2 of 2
# Warmup Iteration   1: 37.761 ns/op
# Warmup Iteration   2: 66.487 ns/op
# Warmup Iteration   3: 35.671 ns/op
Iteration   1: 35.658 ns/op
Iteration   2: 35.661 ns/op
Iteration   3: 35.705 ns/op
Iteration   4: 35.686 ns/op
Iteration   5: 35.732 ns/op
Iteration   6: 36.157 ns/op
Iteration   7: 35.667 ns/op
Iteration   8: 34.420 ns/op
Iteration   9: 35.736 ns/op
Iteration  10: 35.718 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.620 ±(99.9%) 0.364 ns/op [Average]
  (min, avg, max) = (34.420, 35.620, 36.166), stdev = 0.419
  CI (99.9%): [35.256, 35.984] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 10.78% complete, ETA 01:04:16
# Fork: 1 of 2
# Warmup Iteration   1: 279.904 ns/op
# Warmup Iteration   2: 285.093 ns/op
# Warmup Iteration   3: 236.081 ns/op
Iteration   1: 235.801 ns/op
Iteration   2: 235.932 ns/op
Iteration   3: 236.151 ns/op
Iteration   4: 233.719 ns/op
Iteration   5: 233.641 ns/op
Iteration   6: 233.558 ns/op
Iteration   7: 233.682 ns/op
Iteration   8: 234.304 ns/op
Iteration   9: 234.087 ns/op
Iteration  10: 234.594 ns/op

# Run progress: 10.83% complete, ETA 01:04:13
# Fork: 2 of 2
# Warmup Iteration   1: 279.038 ns/op
# Warmup Iteration   2: 278.556 ns/op
# Warmup Iteration   3: 235.430 ns/op
Iteration   1: 235.829 ns/op
Iteration   2: 235.776 ns/op
Iteration   3: 236.043 ns/op
Iteration   4: 233.323 ns/op
Iteration   5: 233.373 ns/op
Iteration   6: 234.316 ns/op
Iteration   7: 233.823 ns/op
Iteration   8: 233.887 ns/op
Iteration   9: 233.697 ns/op
Iteration  10: 234.067 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  234.480 ±(99.9%) 0.885 ns/op [Average]
  (min, avg, max) = (233.323, 234.480, 236.151), stdev = 1.019
  CI (99.9%): [233.596, 235.365] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 10.89% complete, ETA 01:04:11
# Fork: 1 of 2
# Warmup Iteration   1: 687.189 ns/op
# Warmup Iteration   2: 273.404 ns/op
# Warmup Iteration   3: 225.509 ns/op
Iteration   1: 225.604 ns/op
Iteration   2: 224.916 ns/op
Iteration   3: 225.197 ns/op
Iteration   4: 224.870 ns/op
Iteration   5: 225.441 ns/op
Iteration   6: 225.329 ns/op
Iteration   7: 225.222 ns/op
Iteration   8: 243.902 ns/op
Iteration   9: 225.002 ns/op
Iteration  10: 225.328 ns/op

# Run progress: 10.94% complete, ETA 01:04:08
# Fork: 2 of 2
# Warmup Iteration   1: 476.294 ns/op
# Warmup Iteration   2: 285.514 ns/op
# Warmup Iteration   3: 225.562 ns/op
Iteration   1: 225.793 ns/op
Iteration   2: 225.267 ns/op
Iteration   3: 225.518 ns/op
Iteration   4: 225.194 ns/op
Iteration   5: 226.047 ns/op
Iteration   6: 225.747 ns/op
Iteration   7: 225.334 ns/op
Iteration   8: 228.437 ns/op
Iteration   9: 225.178 ns/op
Iteration  10: 225.598 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  226.446 ±(99.9%) 3.626 ns/op [Average]
  (min, avg, max) = (224.870, 226.446, 243.902), stdev = 4.176
  CI (99.9%): [222.820, 230.072] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 11.00% complete, ETA 01:04:06
# Fork: 1 of 2
# Warmup Iteration   1: 428.125 ns/op
# Warmup Iteration   2: 277.517 ns/op
# Warmup Iteration   3: 227.459 ns/op
Iteration   1: 227.202 ns/op
Iteration   2: 227.527 ns/op
Iteration   3: 227.222 ns/op
Iteration   4: 227.784 ns/op
Iteration   5: 228.031 ns/op
Iteration   6: 227.613 ns/op
Iteration   7: 227.553 ns/op
Iteration   8: 229.707 ns/op
Iteration   9: 227.579 ns/op
Iteration  10: 227.566 ns/op

# Run progress: 11.06% complete, ETA 01:04:03
# Fork: 2 of 2
# Warmup Iteration   1: 399.138 ns/op
# Warmup Iteration   2: 260.433 ns/op
# Warmup Iteration   3: 227.471 ns/op
Iteration   1: 227.005 ns/op
Iteration   2: 227.503 ns/op
Iteration   3: 226.926 ns/op
Iteration   4: 227.460 ns/op
Iteration   5: 227.926 ns/op
Iteration   6: 227.825 ns/op
Iteration   7: 227.655 ns/op
Iteration   8: 229.325 ns/op
Iteration   9: 227.486 ns/op
Iteration  10: 227.587 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  227.724 ±(99.9%) 0.586 ns/op [Average]
  (min, avg, max) = (226.926, 227.724, 229.707), stdev = 0.675
  CI (99.9%): [227.138, 228.310] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 11.11% complete, ETA 01:04:01
# Fork: 1 of 2
# Warmup Iteration   1: 401.555 ns/op
# Warmup Iteration   2: 308.996 ns/op
# Warmup Iteration   3: 287.593 ns/op
Iteration   1: 287.702 ns/op
Iteration   2: 287.751 ns/op
Iteration   3: 287.662 ns/op
Iteration   4: 287.635 ns/op
Iteration   5: 287.832 ns/op
Iteration   6: 287.692 ns/op
Iteration   7: 287.622 ns/op
Iteration   8: 272.360 ns/op
Iteration   9: 287.630 ns/op
Iteration  10: 287.618 ns/op

# Run progress: 11.17% complete, ETA 01:03:58
# Fork: 2 of 2
# Warmup Iteration   1: 421.674 ns/op
# Warmup Iteration   2: 341.886 ns/op
# Warmup Iteration   3: 269.915 ns/op
Iteration   1: 269.997 ns/op
Iteration   2: 269.958 ns/op
Iteration   3: 270.191 ns/op
Iteration   4: 269.947 ns/op
Iteration   5: 271.342 ns/op
Iteration   6: 270.558 ns/op
Iteration   7: 270.322 ns/op
Iteration   8: 273.366 ns/op
Iteration   9: 269.957 ns/op
Iteration  10: 270.024 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  278.358 ±(99.9%) 7.549 ns/op [Average]
  (min, avg, max) = (269.947, 278.358, 287.832), stdev = 8.694
  CI (99.9%): [270.809, 285.908] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 11.22% complete, ETA 01:03:56
# Fork: 1 of 2
# Warmup Iteration   1: 405.734 ns/op
# Warmup Iteration   2: 394.143 ns/op
# Warmup Iteration   3: 346.836 ns/op
Iteration   1: 346.616 ns/op
Iteration   2: 346.096 ns/op
Iteration   3: 345.990 ns/op
Iteration   4: 351.010 ns/op
Iteration   5: 350.376 ns/op
Iteration   6: 350.797 ns/op
Iteration   7: 350.738 ns/op
Iteration   8: 350.988 ns/op
Iteration   9: 350.651 ns/op
Iteration  10: 350.616 ns/op

# Run progress: 11.28% complete, ETA 01:03:53
# Fork: 2 of 2
# Warmup Iteration   1: 410.689 ns/op
# Warmup Iteration   2: 401.749 ns/op
# Warmup Iteration   3: 345.602 ns/op
Iteration   1: 345.641 ns/op
Iteration   2: 345.628 ns/op
Iteration   3: 346.200 ns/op
Iteration   4: 350.464 ns/op
Iteration   5: 350.381 ns/op
Iteration   6: 350.148 ns/op
Iteration   7: 350.350 ns/op
Iteration   8: 351.407 ns/op
Iteration   9: 350.501 ns/op
Iteration  10: 350.459 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  349.253 ±(99.9%) 1.903 ns/op [Average]
  (min, avg, max) = (345.628, 349.253, 351.407), stdev = 2.191
  CI (99.9%): [347.350, 351.156] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 11.33% complete, ETA 01:03:51
# Fork: 1 of 2
# Warmup Iteration   1: 38.415 ns/op
# Warmup Iteration   2: 65.102 ns/op
# Warmup Iteration   3: 35.696 ns/op
Iteration   1: 35.631 ns/op
Iteration   2: 35.659 ns/op
Iteration   3: 35.688 ns/op
Iteration   4: 35.768 ns/op
Iteration   5: 35.673 ns/op
Iteration   6: 36.135 ns/op
Iteration   7: 35.635 ns/op
Iteration   8: 34.554 ns/op
Iteration   9: 35.736 ns/op
Iteration  10: 35.651 ns/op

# Run progress: 11.39% complete, ETA 01:03:49
# Fork: 2 of 2
# Warmup Iteration   1: 37.421 ns/op
# Warmup Iteration   2: 65.174 ns/op
# Warmup Iteration   3: 35.677 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.702 ns/op
Iteration   3: 35.688 ns/op
Iteration   4: 35.707 ns/op
Iteration   5: 35.617 ns/op
Iteration   6: 36.148 ns/op
Iteration   7: 35.666 ns/op
Iteration   8: 34.520 ns/op
Iteration   9: 35.715 ns/op
Iteration  10: 35.631 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.611 ±(99.9%) 0.343 ns/op [Average]
  (min, avg, max) = (34.520, 35.611, 36.148), stdev = 0.395
  CI (99.9%): [35.268, 35.954] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 11.44% complete, ETA 01:03:46
# Fork: 1 of 2
# Warmup Iteration   1: 281.952 ns/op
# Warmup Iteration   2: 273.012 ns/op
# Warmup Iteration   3: 235.644 ns/op
Iteration   1: 236.001 ns/op
Iteration   2: 235.709 ns/op
Iteration   3: 236.164 ns/op
Iteration   4: 233.753 ns/op
Iteration   5: 233.632 ns/op
Iteration   6: 234.826 ns/op
Iteration   7: 233.703 ns/op
Iteration   8: 233.943 ns/op
Iteration   9: 233.904 ns/op
Iteration  10: 233.854 ns/op

# Run progress: 11.50% complete, ETA 01:03:44
# Fork: 2 of 2
# Warmup Iteration   1: 272.281 ns/op
# Warmup Iteration   2: 279.676 ns/op
# Warmup Iteration   3: 235.962 ns/op
Iteration   1: 235.530 ns/op
Iteration   2: 235.805 ns/op
Iteration   3: 236.133 ns/op
Iteration   4: 233.510 ns/op
Iteration   5: 233.882 ns/op
Iteration   6: 233.654 ns/op
Iteration   7: 233.732 ns/op
Iteration   8: 233.850 ns/op
Iteration   9: 233.806 ns/op
Iteration  10: 233.615 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  234.450 ±(99.9%) 0.876 ns/op [Average]
  (min, avg, max) = (233.510, 234.450, 236.164), stdev = 1.009
  CI (99.9%): [233.574, 235.327] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 11.56% complete, ETA 01:03:41
# Fork: 1 of 2
# Warmup Iteration   1: 321.021 ns/op
# Warmup Iteration   2: 268.000 ns/op
# Warmup Iteration   3: 233.403 ns/op
Iteration   1: 233.604 ns/op
Iteration   2: 233.416 ns/op
Iteration   3: 233.593 ns/op
Iteration   4: 233.409 ns/op
Iteration   5: 233.942 ns/op
Iteration   6: 233.828 ns/op
Iteration   7: 233.496 ns/op
Iteration   8: 235.952 ns/op
Iteration   9: 233.426 ns/op
Iteration  10: 233.402 ns/op

# Run progress: 11.61% complete, ETA 01:03:39
# Fork: 2 of 2
# Warmup Iteration   1: 479.581 ns/op
# Warmup Iteration   2: 259.481 ns/op
# Warmup Iteration   3: 238.628 ns/op
Iteration   1: 238.716 ns/op
Iteration   2: 238.870 ns/op
Iteration   3: 238.918 ns/op
Iteration   4: 238.724 ns/op
Iteration   5: 238.677 ns/op
Iteration   6: 238.641 ns/op
Iteration   7: 238.707 ns/op
Iteration   8: 228.057 ns/op
Iteration   9: 238.748 ns/op
Iteration  10: 238.739 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  235.743 ±(99.9%) 2.698 ns/op [Average]
  (min, avg, max) = (228.057, 235.743, 238.918), stdev = 3.107
  CI (99.9%): [233.046, 238.441] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 11.67% complete, ETA 01:03:36
# Fork: 1 of 2
# Warmup Iteration   1: 540.980 ns/op
# Warmup Iteration   2: 261.477 ns/op
# Warmup Iteration   3: 227.497 ns/op
Iteration   1: 227.245 ns/op
Iteration   2: 227.459 ns/op
Iteration   3: 227.252 ns/op
Iteration   4: 227.469 ns/op
Iteration   5: 227.997 ns/op
Iteration   6: 227.301 ns/op
Iteration   7: 227.544 ns/op
Iteration   8: 229.896 ns/op
Iteration   9: 227.576 ns/op
Iteration  10: 227.076 ns/op

# Run progress: 11.72% complete, ETA 01:03:34
# Fork: 2 of 2
# Warmup Iteration   1: 322.171 ns/op
# Warmup Iteration   2: 270.267 ns/op
# Warmup Iteration   3: 257.964 ns/op
Iteration   1: 258.194 ns/op
Iteration   2: 258.276 ns/op
Iteration   3: 257.875 ns/op
Iteration   4: 258.047 ns/op
Iteration   5: 258.253 ns/op
Iteration   6: 257.920 ns/op
Iteration   7: 257.886 ns/op
Iteration   8: 243.995 ns/op
Iteration   9: 259.426 ns/op
Iteration  10: 257.910 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  242.230 ±(99.9%) 13.248 ns/op [Average]
  (min, avg, max) = (227.076, 242.230, 259.426), stdev = 15.257
  CI (99.9%): [228.982, 255.478] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 11.78% complete, ETA 01:03:32
# Fork: 1 of 2
# Warmup Iteration   1: 424.951 ns/op
# Warmup Iteration   2: 309.213 ns/op
# Warmup Iteration   3: 269.863 ns/op
Iteration   1: 270.033 ns/op
Iteration   2: 269.895 ns/op
Iteration   3: 270.178 ns/op
Iteration   4: 269.907 ns/op
Iteration   5: 271.340 ns/op
Iteration   6: 270.532 ns/op
Iteration   7: 270.569 ns/op
Iteration   8: 272.743 ns/op
Iteration   9: 270.045 ns/op
Iteration  10: 270.126 ns/op

# Run progress: 11.83% complete, ETA 01:03:29
# Fork: 2 of 2
# Warmup Iteration   1: 406.444 ns/op
# Warmup Iteration   2: 317.114 ns/op
# Warmup Iteration   3: 269.874 ns/op
Iteration   1: 269.923 ns/op
Iteration   2: 270.012 ns/op
Iteration   3: 270.354 ns/op
Iteration   4: 269.951 ns/op
Iteration   5: 271.478 ns/op
Iteration   6: 270.381 ns/op
Iteration   7: 270.393 ns/op
Iteration   8: 272.786 ns/op
Iteration   9: 270.075 ns/op
Iteration  10: 270.129 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  270.542 ±(99.9%) 0.759 ns/op [Average]
  (min, avg, max) = (269.895, 270.542, 272.786), stdev = 0.874
  CI (99.9%): [269.783, 271.302] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 11.89% complete, ETA 01:03:27
# Fork: 1 of 2
# Warmup Iteration   1: 426.574 ns/op
# Warmup Iteration   2: 395.490 ns/op
# Warmup Iteration   3: 345.989 ns/op
Iteration   1: 345.676 ns/op
Iteration   2: 345.942 ns/op
Iteration   3: 345.855 ns/op
Iteration   4: 350.512 ns/op
Iteration   5: 350.995 ns/op
Iteration   6: 350.852 ns/op
Iteration   7: 350.458 ns/op
Iteration   8: 351.784 ns/op
Iteration   9: 350.558 ns/op
Iteration  10: 350.410 ns/op

# Run progress: 11.94% complete, ETA 01:03:24
# Fork: 2 of 2
# Warmup Iteration   1: 428.250 ns/op
# Warmup Iteration   2: 380.118 ns/op
# Warmup Iteration   3: 346.395 ns/op
Iteration   1: 346.339 ns/op
Iteration   2: 346.434 ns/op
Iteration   3: 346.165 ns/op
Iteration   4: 351.430 ns/op
Iteration   5: 350.974 ns/op
Iteration   6: 350.856 ns/op
Iteration   7: 351.551 ns/op
Iteration   8: 350.865 ns/op
Iteration   9: 350.657 ns/op
Iteration  10: 350.456 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  349.438 ±(99.9%) 1.994 ns/op [Average]
  (min, avg, max) = (345.676, 349.438, 351.784), stdev = 2.297
  CI (99.9%): [347.444, 351.433] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 12.00% complete, ETA 01:03:22
# Fork: 1 of 2
# Warmup Iteration   1: 37.882 ns/op
# Warmup Iteration   2: 67.187 ns/op
# Warmup Iteration   3: 35.731 ns/op
Iteration   1: 35.703 ns/op
Iteration   2: 35.727 ns/op
Iteration   3: 35.706 ns/op
Iteration   4: 35.683 ns/op
Iteration   5: 35.651 ns/op
Iteration   6: 36.109 ns/op
Iteration   7: 35.694 ns/op
Iteration   8: 34.512 ns/op
Iteration   9: 35.667 ns/op
Iteration  10: 35.686 ns/op

# Run progress: 12.06% complete, ETA 01:03:19
# Fork: 2 of 2
# Warmup Iteration   1: 38.890 ns/op
# Warmup Iteration   2: 65.958 ns/op
# Warmup Iteration   3: 35.670 ns/op
Iteration   1: 35.638 ns/op
Iteration   2: 35.600 ns/op
Iteration   3: 35.692 ns/op
Iteration   4: 35.660 ns/op
Iteration   5: 35.676 ns/op
Iteration   6: 36.150 ns/op
Iteration   7: 35.665 ns/op
Iteration   8: 34.510 ns/op
Iteration   9: 35.631 ns/op
Iteration  10: 35.669 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.602 ±(99.9%) 0.347 ns/op [Average]
  (min, avg, max) = (34.510, 35.602, 36.150), stdev = 0.399
  CI (99.9%): [35.255, 35.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 12.11% complete, ETA 01:03:17
# Fork: 1 of 2
# Warmup Iteration   1: 299.259 ns/op
# Warmup Iteration   2: 274.816 ns/op
# Warmup Iteration   3: 237.917 ns/op
Iteration   1: 237.825 ns/op
Iteration   2: 238.065 ns/op
Iteration   3: 237.984 ns/op
Iteration   4: 235.426 ns/op
Iteration   5: 235.171 ns/op
Iteration   6: 235.557 ns/op
Iteration   7: 235.354 ns/op
Iteration   8: 236.329 ns/op
Iteration   9: 235.386 ns/op
Iteration  10: 235.363 ns/op

# Run progress: 12.17% complete, ETA 01:03:15
# Fork: 2 of 2
# Warmup Iteration   1: 282.364 ns/op
# Warmup Iteration   2: 283.981 ns/op
# Warmup Iteration   3: 241.089 ns/op
Iteration   1: 241.033 ns/op
Iteration   2: 240.853 ns/op
Iteration   3: 241.045 ns/op
Iteration   4: 238.099 ns/op
Iteration   5: 237.167 ns/op
Iteration   6: 236.883 ns/op
Iteration   7: 237.386 ns/op
Iteration   8: 239.290 ns/op
Iteration   9: 237.974 ns/op
Iteration  10: 238.029 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  237.511 ±(99.9%) 1.667 ns/op [Average]
  (min, avg, max) = (235.171, 237.511, 241.045), stdev = 1.920
  CI (99.9%): [235.844, 239.178] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 12.22% complete, ETA 01:03:12
# Fork: 1 of 2
# Warmup Iteration   1: 902.687 ns/op
# Warmup Iteration   2: 508.781 ns/op
# Warmup Iteration   3: 435.043 ns/op
Iteration   1: 435.265 ns/op
Iteration   2: 434.995 ns/op
Iteration   3: 435.341 ns/op
Iteration   4: 435.198 ns/op
Iteration   5: 435.169 ns/op
Iteration   6: 435.294 ns/op
Iteration   7: 436.167 ns/op
Iteration   8: 439.392 ns/op
Iteration   9: 435.252 ns/op
Iteration  10: 435.300 ns/op

# Run progress: 12.28% complete, ETA 01:03:10
# Fork: 2 of 2
# Warmup Iteration   1: 942.531 ns/op
# Warmup Iteration   2: 499.677 ns/op
# Warmup Iteration   3: 437.577 ns/op
Iteration   1: 437.330 ns/op
Iteration   2: 437.717 ns/op
Iteration   3: 437.644 ns/op
Iteration   4: 437.596 ns/op
Iteration   5: 437.671 ns/op
Iteration   6: 437.746 ns/op
Iteration   7: 437.353 ns/op
Iteration   8: 441.369 ns/op
Iteration   9: 437.638 ns/op
Iteration  10: 437.613 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  436.852 ±(99.9%) 1.459 ns/op [Average]
  (min, avg, max) = (434.995, 436.852, 441.369), stdev = 1.680
  CI (99.9%): [435.394, 438.311] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 12.33% complete, ETA 01:03:07
# Fork: 1 of 2
# Warmup Iteration   1: 778.628 ns/op
# Warmup Iteration   2: 498.753 ns/op
# Warmup Iteration   3: 436.136 ns/op
Iteration   1: 437.490 ns/op
Iteration   2: 436.184 ns/op
Iteration   3: 437.135 ns/op
Iteration   4: 437.345 ns/op
Iteration   5: 437.417 ns/op
Iteration   6: 436.220 ns/op
Iteration   7: 437.238 ns/op
Iteration   8: 439.462 ns/op
Iteration   9: 437.468 ns/op
Iteration  10: 437.362 ns/op

# Run progress: 12.39% complete, ETA 01:03:05
# Fork: 2 of 2
# Warmup Iteration   1: 826.335 ns/op
# Warmup Iteration   2: 498.122 ns/op
# Warmup Iteration   3: 441.541 ns/op
Iteration   1: 440.985 ns/op
Iteration   2: 442.526 ns/op
Iteration   3: 441.434 ns/op
Iteration   4: 441.263 ns/op
Iteration   5: 442.384 ns/op
Iteration   6: 441.329 ns/op
Iteration   7: 441.184 ns/op
Iteration   8: 443.914 ns/op
Iteration   9: 440.784 ns/op
Iteration  10: 447.239 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  439.818 ±(99.9%) 2.566 ns/op [Average]
  (min, avg, max) = (436.184, 439.818, 447.239), stdev = 2.955
  CI (99.9%): [437.252, 442.384] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 12.44% complete, ETA 01:03:02
# Fork: 1 of 2
# Warmup Iteration   1: 640.520 ns/op
# Warmup Iteration   2: 496.879 ns/op
# Warmup Iteration   3: 436.286 ns/op
Iteration   1: 436.228 ns/op
Iteration   2: 436.388 ns/op
Iteration   3: 435.275 ns/op
Iteration   4: 436.019 ns/op
Iteration   5: 436.574 ns/op
Iteration   6: 436.412 ns/op
Iteration   7: 436.429 ns/op
Iteration   8: 438.941 ns/op
Iteration   9: 436.229 ns/op
Iteration  10: 436.337 ns/op

# Run progress: 12.50% complete, ETA 01:03:00
# Fork: 2 of 2
# Warmup Iteration   1: 755.624 ns/op
# Warmup Iteration   2: 496.754 ns/op
# Warmup Iteration   3: 436.243 ns/op
Iteration   1: 435.281 ns/op
Iteration   2: 435.493 ns/op
Iteration   3: 435.265 ns/op
Iteration   4: 436.173 ns/op
Iteration   5: 436.343 ns/op
Iteration   6: 435.741 ns/op
Iteration   7: 436.288 ns/op
Iteration   8: 438.302 ns/op
Iteration   9: 436.266 ns/op
Iteration  10: 436.228 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  436.311 ±(99.9%) 0.780 ns/op [Average]
  (min, avg, max) = (435.265, 436.311, 438.941), stdev = 0.898
  CI (99.9%): [435.531, 437.091] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 12.56% complete, ETA 01:02:58
# Fork: 1 of 2
# Warmup Iteration   1: 472.130 ns/op
# Warmup Iteration   2: 465.742 ns/op
# Warmup Iteration   3: 416.226 ns/op
Iteration   1: 416.153 ns/op
Iteration   2: 416.149 ns/op
Iteration   3: 416.154 ns/op
Iteration   4: 420.369 ns/op
Iteration   5: 420.395 ns/op
Iteration   6: 420.919 ns/op
Iteration   7: 420.391 ns/op
Iteration   8: 421.029 ns/op
Iteration   9: 420.574 ns/op
Iteration  10: 420.523 ns/op

# Run progress: 12.61% complete, ETA 01:02:55
# Fork: 2 of 2
# Warmup Iteration   1: 484.551 ns/op
# Warmup Iteration   2: 469.315 ns/op
# Warmup Iteration   3: 416.288 ns/op
Iteration   1: 416.025 ns/op
Iteration   2: 416.195 ns/op
Iteration   3: 416.424 ns/op
Iteration   4: 420.807 ns/op
Iteration   5: 421.126 ns/op
Iteration   6: 421.310 ns/op
Iteration   7: 420.644 ns/op
Iteration   8: 421.056 ns/op
Iteration   9: 420.707 ns/op
Iteration  10: 420.448 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  419.370 ±(99.9%) 1.873 ns/op [Average]
  (min, avg, max) = (416.025, 419.370, 421.310), stdev = 2.157
  CI (99.9%): [417.497, 421.243] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 12.67% complete, ETA 01:02:53
# Fork: 1 of 2
# Warmup Iteration   1: 38.318 ns/op
# Warmup Iteration   2: 67.035 ns/op
# Warmup Iteration   3: 35.659 ns/op
Iteration   1: 35.752 ns/op
Iteration   2: 35.665 ns/op
Iteration   3: 35.713 ns/op
Iteration   4: 35.720 ns/op
Iteration   5: 35.705 ns/op
Iteration   6: 36.204 ns/op
Iteration   7: 35.674 ns/op
Iteration   8: 34.525 ns/op
Iteration   9: 35.649 ns/op
Iteration  10: 35.864 ns/op

# Run progress: 12.72% complete, ETA 01:02:50
# Fork: 2 of 2
# Warmup Iteration   1: 38.147 ns/op
# Warmup Iteration   2: 66.942 ns/op
# Warmup Iteration   3: 35.681 ns/op
Iteration   1: 35.796 ns/op
Iteration   2: 35.760 ns/op
Iteration   3: 35.675 ns/op
Iteration   4: 35.668 ns/op
Iteration   5: 35.822 ns/op
Iteration   6: 36.102 ns/op
Iteration   7: 35.691 ns/op
Iteration   8: 34.525 ns/op
Iteration   9: 35.744 ns/op
Iteration  10: 35.650 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.645 ±(99.9%) 0.356 ns/op [Average]
  (min, avg, max) = (34.525, 35.645, 36.204), stdev = 0.410
  CI (99.9%): [35.290, 36.001] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 12.78% complete, ETA 01:02:48
# Fork: 1 of 2
# Warmup Iteration   1: 2354.931 ns/op
# Warmup Iteration   2: 1860.936 ns/op
# Warmup Iteration   3: 1617.390 ns/op
Iteration   1: 1623.588 ns/op
Iteration   2: 1617.343 ns/op
Iteration   3: 1714.551 ns/op
Iteration   4: 1606.052 ns/op
Iteration   5: 1620.548 ns/op
Iteration   6: 1613.388 ns/op
Iteration   7: 1618.744 ns/op
Iteration   8: 1606.039 ns/op
Iteration   9: 1605.619 ns/op
Iteration  10: 1605.913 ns/op

# Run progress: 12.83% complete, ETA 01:02:45
# Fork: 2 of 2
# Warmup Iteration   1: 2291.256 ns/op
# Warmup Iteration   2: 1873.555 ns/op
# Warmup Iteration   3: 1617.069 ns/op
Iteration   1: 1622.665 ns/op
Iteration   2: 1617.531 ns/op
Iteration   3: 1632.008 ns/op
Iteration   4: 1605.697 ns/op
Iteration   5: 1620.019 ns/op
Iteration   6: 1612.220 ns/op
Iteration   7: 1618.374 ns/op
Iteration   8: 1652.288 ns/op
Iteration   9: 1605.150 ns/op
Iteration  10: 1605.628 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1621.168 ±(99.9%) 21.518 ns/op [Average]
  (min, avg, max) = (1605.150, 1621.168, 1714.551), stdev = 24.781
  CI (99.9%): [1599.650, 1642.687] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 12.89% complete, ETA 01:02:43
# Fork: 1 of 2
# Warmup Iteration   1: 6763.073 ns/op
# Warmup Iteration   2: 3461.408 ns/op
# Warmup Iteration   3: 2974.544 ns/op
Iteration   1: 2986.703 ns/op
Iteration   2: 2976.041 ns/op
Iteration   3: 2987.387 ns/op
Iteration   4: 2980.295 ns/op
Iteration   5: 2981.615 ns/op
Iteration   6: 2974.480 ns/op
Iteration   7: 2988.471 ns/op
Iteration   8: 2966.037 ns/op
Iteration   9: 2971.153 ns/op
Iteration  10: 2971.855 ns/op

# Run progress: 12.94% complete, ETA 01:02:41
# Fork: 2 of 2
# Warmup Iteration   1: 8248.478 ns/op
# Warmup Iteration   2: 3343.416 ns/op
# Warmup Iteration   3: 2937.996 ns/op
Iteration   1: 2929.743 ns/op
Iteration   2: 2941.287 ns/op
Iteration   3: 2937.300 ns/op
Iteration   4: 2931.657 ns/op
Iteration   5: 2942.838 ns/op
Iteration   6: 2939.589 ns/op
Iteration   7: 2943.755 ns/op
Iteration   8: 2944.305 ns/op
Iteration   9: 2939.220 ns/op
Iteration  10: 2929.795 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2958.176 ±(99.9%) 18.904 ns/op [Average]
  (min, avg, max) = (2929.743, 2958.176, 2988.471), stdev = 21.770
  CI (99.9%): [2939.272, 2977.080] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 13.00% complete, ETA 01:02:38
# Fork: 1 of 2
# Warmup Iteration   1: 7270.894 ns/op
# Warmup Iteration   2: 3348.034 ns/op
# Warmup Iteration   3: 2972.641 ns/op
Iteration   1: 2965.104 ns/op
Iteration   2: 2975.636 ns/op
Iteration   3: 2978.806 ns/op
Iteration   4: 2979.054 ns/op
Iteration   5: 2979.175 ns/op
Iteration   6: 2971.766 ns/op
Iteration   7: 2974.111 ns/op
Iteration   8: 2978.759 ns/op
Iteration   9: 2973.571 ns/op
Iteration  10: 2966.342 ns/op

# Run progress: 13.06% complete, ETA 01:02:36
# Fork: 2 of 2
# Warmup Iteration   1: 6551.420 ns/op
# Warmup Iteration   2: 3294.540 ns/op
# Warmup Iteration   3: 2932.103 ns/op
Iteration   1: 2934.686 ns/op
Iteration   2: 2933.783 ns/op
Iteration   3: 2932.811 ns/op
Iteration   4: 2933.943 ns/op
Iteration   5: 2934.249 ns/op
Iteration   6: 2933.530 ns/op
Iteration   7: 2933.624 ns/op
Iteration   8: 2941.229 ns/op
Iteration   9: 2932.973 ns/op
Iteration  10: 2932.786 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2954.297 ±(99.9%) 18.092 ns/op [Average]
  (min, avg, max) = (2932.786, 2954.297, 2979.175), stdev = 20.835
  CI (99.9%): [2936.205, 2972.389] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 13.11% complete, ETA 01:02:33
# Fork: 1 of 2
# Warmup Iteration   1: 4212.398 ns/op
# Warmup Iteration   2: 2814.226 ns/op
# Warmup Iteration   3: 2486.574 ns/op
Iteration   1: 2531.137 ns/op
Iteration   2: 2485.294 ns/op
Iteration   3: 2504.868 ns/op
Iteration   4: 2480.225 ns/op
Iteration   5: 2484.624 ns/op
Iteration   6: 2486.916 ns/op
Iteration   7: 2483.799 ns/op
Iteration   8: 2489.440 ns/op
Iteration   9: 2483.744 ns/op
Iteration  10: 2485.388 ns/op

# Run progress: 13.17% complete, ETA 01:02:31
# Fork: 2 of 2
# Warmup Iteration   1: 3921.588 ns/op
# Warmup Iteration   2: 2791.719 ns/op
# Warmup Iteration   3: 2470.043 ns/op
Iteration   1: 2475.964 ns/op
Iteration   2: 2470.328 ns/op
Iteration   3: 2503.206 ns/op
Iteration   4: 2496.693 ns/op
Iteration   5: 2468.568 ns/op
Iteration   6: 2473.496 ns/op
Iteration   7: 2509.238 ns/op
Iteration   8: 2474.130 ns/op
Iteration   9: 2472.094 ns/op
Iteration  10: 2471.690 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2486.542 ±(99.9%) 13.719 ns/op [Average]
  (min, avg, max) = (2468.568, 2486.542, 2531.137), stdev = 15.798
  CI (99.9%): [2472.823, 2500.261] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 13.22% complete, ETA 01:02:29
# Fork: 1 of 2
# Warmup Iteration   1: 2167.861 ns/op
# Warmup Iteration   2: 1884.010 ns/op
# Warmup Iteration   3: 1624.315 ns/op
Iteration   1: 1624.593 ns/op
Iteration   2: 1624.414 ns/op
Iteration   3: 1624.730 ns/op
Iteration   4: 1621.429 ns/op
Iteration   5: 1620.938 ns/op
Iteration   6: 1620.288 ns/op
Iteration   7: 1620.594 ns/op
Iteration   8: 1660.032 ns/op
Iteration   9: 1621.283 ns/op
Iteration  10: 1621.545 ns/op

# Run progress: 13.28% complete, ETA 01:02:26
# Fork: 2 of 2
# Warmup Iteration   1: 2171.013 ns/op
# Warmup Iteration   2: 1881.073 ns/op
# Warmup Iteration   3: 1623.412 ns/op
Iteration   1: 1622.603 ns/op
Iteration   2: 1623.281 ns/op
Iteration   3: 1647.246 ns/op
Iteration   4: 1623.210 ns/op
Iteration   5: 1623.094 ns/op
Iteration   6: 1619.296 ns/op
Iteration   7: 1621.804 ns/op
Iteration   8: 1647.849 ns/op
Iteration   9: 1623.259 ns/op
Iteration  10: 1623.347 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1626.742 ±(99.9%) 9.647 ns/op [Average]
  (min, avg, max) = (1619.296, 1626.742, 1660.032), stdev = 11.109
  CI (99.9%): [1617.095, 1636.388] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 13.33% complete, ETA 01:02:24
# Fork: 1 of 2
# Warmup Iteration   1: 38.673 ns/op
# Warmup Iteration   2: 62.613 ns/op
# Warmup Iteration   3: 38.268 ns/op
Iteration   1: 38.294 ns/op
Iteration   2: 38.117 ns/op
Iteration   3: 38.119 ns/op
Iteration   4: 38.198 ns/op
Iteration   5: 38.105 ns/op
Iteration   6: 38.120 ns/op
Iteration   7: 38.230 ns/op
Iteration   8: 37.156 ns/op
Iteration   9: 38.140 ns/op
Iteration  10: 38.082 ns/op

# Run progress: 13.39% complete, ETA 01:02:21
# Fork: 2 of 2
# Warmup Iteration   1: 37.874 ns/op
# Warmup Iteration   2: 60.136 ns/op
# Warmup Iteration   3: 38.045 ns/op
Iteration   1: 38.236 ns/op
Iteration   2: 38.203 ns/op
Iteration   3: 38.023 ns/op
Iteration   4: 38.033 ns/op
Iteration   5: 38.121 ns/op
Iteration   6: 38.106 ns/op
Iteration   7: 38.096 ns/op
Iteration   8: 37.152 ns/op
Iteration   9: 38.175 ns/op
Iteration  10: 38.224 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.047 ±(99.9%) 0.272 ns/op [Average]
  (min, avg, max) = (37.152, 38.047, 38.294), stdev = 0.313
  CI (99.9%): [37.775, 38.318] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 13.44% complete, ETA 01:02:19
# Fork: 1 of 2
# Warmup Iteration   1: 309.209 ns/op
# Warmup Iteration   2: 285.032 ns/op
# Warmup Iteration   3: 240.621 ns/op
Iteration   1: 240.595 ns/op
Iteration   2: 240.854 ns/op
Iteration   3: 240.628 ns/op
Iteration   4: 241.088 ns/op
Iteration   5: 241.737 ns/op
Iteration   6: 241.129 ns/op
Iteration   7: 240.627 ns/op
Iteration   8: 240.227 ns/op
Iteration   9: 240.612 ns/op
Iteration  10: 241.779 ns/op

# Run progress: 13.50% complete, ETA 01:02:16
# Fork: 2 of 2
# Warmup Iteration   1: 304.200 ns/op
# Warmup Iteration   2: 285.757 ns/op
# Warmup Iteration   3: 241.390 ns/op
Iteration   1: 241.493 ns/op
Iteration   2: 241.318 ns/op
Iteration   3: 241.100 ns/op
Iteration   4: 241.835 ns/op
Iteration   5: 241.296 ns/op
Iteration   6: 242.512 ns/op
Iteration   7: 241.004 ns/op
Iteration   8: 238.043 ns/op
Iteration   9: 241.708 ns/op
Iteration  10: 240.941 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  241.026 ±(99.9%) 0.773 ns/op [Average]
  (min, avg, max) = (238.043, 241.026, 242.512), stdev = 0.890
  CI (99.9%): [240.254, 241.799] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 13.56% complete, ETA 01:02:14
# Fork: 1 of 2
# Warmup Iteration   1: 1514.139 ns/op
# Warmup Iteration   2: 1137.402 ns/op
# Warmup Iteration   3: 992.970 ns/op
Iteration   1: 996.684 ns/op
Iteration   2: 995.262 ns/op
Iteration   3: 991.715 ns/op
Iteration   4: 992.195 ns/op
Iteration   5: 992.767 ns/op
Iteration   6: 994.891 ns/op
Iteration   7: 993.789 ns/op
Iteration   8: 993.540 ns/op
Iteration   9: 992.816 ns/op
Iteration  10: 994.829 ns/op

# Run progress: 13.61% complete, ETA 01:02:11
# Fork: 2 of 2
# Warmup Iteration   1: 1475.763 ns/op
# Warmup Iteration   2: 1130.935 ns/op
# Warmup Iteration   3: 998.040 ns/op
Iteration   1: 997.100 ns/op
Iteration   2: 997.738 ns/op
Iteration   3: 995.659 ns/op
Iteration   4: 995.067 ns/op
Iteration   5: 998.115 ns/op
Iteration   6: 998.308 ns/op
Iteration   7: 997.813 ns/op
Iteration   8: 994.968 ns/op
Iteration   9: 994.394 ns/op
Iteration  10: 996.612 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  995.213 ±(99.9%) 1.759 ns/op [Average]
  (min, avg, max) = (991.715, 995.213, 998.308), stdev = 2.025
  CI (99.9%): [993.454, 996.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 13.67% complete, ETA 01:02:09
# Fork: 1 of 2
# Warmup Iteration   1: 1895.739 ns/op
# Warmup Iteration   2: 1146.922 ns/op
# Warmup Iteration   3: 1001.236 ns/op
Iteration   1: 1002.031 ns/op
Iteration   2: 1004.418 ns/op
Iteration   3: 1003.738 ns/op
Iteration   4: 1001.534 ns/op
Iteration   5: 1001.837 ns/op
Iteration   6: 1002.836 ns/op
Iteration   7: 1005.706 ns/op
Iteration   8: 1001.458 ns/op
Iteration   9: 1003.183 ns/op
Iteration  10: 1001.396 ns/op

# Run progress: 13.72% complete, ETA 01:02:07
# Fork: 2 of 2
# Warmup Iteration   1: 1537.097 ns/op
# Warmup Iteration   2: 1128.113 ns/op
# Warmup Iteration   3: 1000.374 ns/op
Iteration   1: 1000.689 ns/op
Iteration   2: 1007.766 ns/op
Iteration   3: 1000.671 ns/op
Iteration   4: 1001.349 ns/op
Iteration   5: 1004.315 ns/op
Iteration   6: 1002.682 ns/op
Iteration   7: 1009.184 ns/op
Iteration   8: 1003.644 ns/op
Iteration   9: 1001.930 ns/op
Iteration  10: 1001.341 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1003.085 ±(99.9%) 1.990 ns/op [Average]
  (min, avg, max) = (1000.671, 1003.085, 1009.184), stdev = 2.291
  CI (99.9%): [1001.096, 1005.075] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 13.78% complete, ETA 01:02:04
# Fork: 1 of 2
# Warmup Iteration   1: 1468.853 ns/op
# Warmup Iteration   2: 1145.480 ns/op
# Warmup Iteration   3: 1008.153 ns/op
Iteration   1: 1009.507 ns/op
Iteration   2: 1008.151 ns/op
Iteration   3: 1007.898 ns/op
Iteration   4: 1008.757 ns/op
Iteration   5: 1009.220 ns/op
Iteration   6: 1008.824 ns/op
Iteration   7: 1008.353 ns/op
Iteration   8: 1021.628 ns/op
Iteration   9: 1008.268 ns/op
Iteration  10: 1008.324 ns/op

# Run progress: 13.83% complete, ETA 01:02:02
# Fork: 2 of 2
# Warmup Iteration   1: 1507.564 ns/op
# Warmup Iteration   2: 1166.816 ns/op
# Warmup Iteration   3: 1021.622 ns/op
Iteration   1: 1022.965 ns/op
Iteration   2: 1021.970 ns/op
Iteration   3: 1021.513 ns/op
Iteration   4: 1022.461 ns/op
Iteration   5: 1022.240 ns/op
Iteration   6: 1022.052 ns/op
Iteration   7: 1021.871 ns/op
Iteration   8: 1022.341 ns/op
Iteration   9: 1022.196 ns/op
Iteration  10: 1022.486 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1016.051 ±(99.9%) 6.026 ns/op [Average]
  (min, avg, max) = (1007.898, 1016.051, 1022.965), stdev = 6.940
  CI (99.9%): [1010.025, 1022.078] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 13.89% complete, ETA 01:02:00
# Fork: 1 of 2
# Warmup Iteration   1: 530.366 ns/op
# Warmup Iteration   2: 546.565 ns/op
# Warmup Iteration   3: 459.143 ns/op
Iteration   1: 459.745 ns/op
Iteration   2: 459.977 ns/op
Iteration   3: 459.876 ns/op
Iteration   4: 461.395 ns/op
Iteration   5: 461.362 ns/op
Iteration   6: 461.984 ns/op
Iteration   7: 461.389 ns/op
Iteration   8: 457.980 ns/op
Iteration   9: 461.398 ns/op
Iteration  10: 461.286 ns/op

# Run progress: 13.94% complete, ETA 01:01:57
# Fork: 2 of 2
# Warmup Iteration   1: 518.063 ns/op
# Warmup Iteration   2: 533.405 ns/op
# Warmup Iteration   3: 459.846 ns/op
Iteration   1: 460.166 ns/op
Iteration   2: 460.102 ns/op
Iteration   3: 460.103 ns/op
Iteration   4: 461.332 ns/op
Iteration   5: 461.375 ns/op
Iteration   6: 461.825 ns/op
Iteration   7: 461.366 ns/op
Iteration   8: 458.202 ns/op
Iteration   9: 461.305 ns/op
Iteration  10: 461.423 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  460.680 ±(99.9%) 0.977 ns/op [Average]
  (min, avg, max) = (457.980, 460.680, 461.984), stdev = 1.126
  CI (99.9%): [459.702, 461.657] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 14.00% complete, ETA 01:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 38.454 ns/op
# Warmup Iteration   2: 61.206 ns/op
# Warmup Iteration   3: 38.154 ns/op
Iteration   1: 37.929 ns/op
Iteration   2: 37.969 ns/op
Iteration   3: 38.099 ns/op
Iteration   4: 38.077 ns/op
Iteration   5: 38.032 ns/op
Iteration   6: 38.151 ns/op
Iteration   7: 38.124 ns/op
Iteration   8: 37.255 ns/op
Iteration   9: 38.097 ns/op
Iteration  10: 38.082 ns/op

# Run progress: 14.06% complete, ETA 01:01:52
# Fork: 2 of 2
# Warmup Iteration   1: 38.445 ns/op
# Warmup Iteration   2: 62.176 ns/op
# Warmup Iteration   3: 38.106 ns/op
Iteration   1: 38.028 ns/op
Iteration   2: 37.931 ns/op
Iteration   3: 38.072 ns/op
Iteration   4: 38.198 ns/op
Iteration   5: 38.012 ns/op
Iteration   6: 38.470 ns/op
Iteration   7: 38.037 ns/op
Iteration   8: 37.196 ns/op
Iteration   9: 38.395 ns/op
Iteration  10: 37.988 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.007 ±(99.9%) 0.260 ns/op [Average]
  (min, avg, max) = (37.196, 38.007, 38.470), stdev = 0.300
  CI (99.9%): [37.747, 38.267] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 14.11% complete, ETA 01:01:50
# Fork: 1 of 2
# Warmup Iteration   1: 268.568 ns/op
# Warmup Iteration   2: 280.750 ns/op
# Warmup Iteration   3: 235.609 ns/op
Iteration   1: 235.906 ns/op
Iteration   2: 235.978 ns/op
Iteration   3: 236.097 ns/op
Iteration   4: 236.084 ns/op
Iteration   5: 236.035 ns/op
Iteration   6: 236.744 ns/op
Iteration   7: 236.203 ns/op
Iteration   8: 233.950 ns/op
Iteration   9: 236.163 ns/op
Iteration  10: 236.119 ns/op

# Run progress: 14.17% complete, ETA 01:01:47
# Fork: 2 of 2
# Warmup Iteration   1: 276.859 ns/op
# Warmup Iteration   2: 276.838 ns/op
# Warmup Iteration   3: 235.033 ns/op
Iteration   1: 236.541 ns/op
Iteration   2: 235.743 ns/op
Iteration   3: 235.072 ns/op
Iteration   4: 235.624 ns/op
Iteration   5: 236.102 ns/op
Iteration   6: 236.382 ns/op
Iteration   7: 235.145 ns/op
Iteration   8: 233.842 ns/op
Iteration   9: 235.762 ns/op
Iteration  10: 235.621 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  235.756 ±(99.9%) 0.654 ns/op [Average]
  (min, avg, max) = (233.842, 235.756, 236.744), stdev = 0.753
  CI (99.9%): [235.102, 236.410] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 14.22% complete, ETA 01:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 682.337 ns/op
# Warmup Iteration   2: 262.083 ns/op
# Warmup Iteration   3: 227.920 ns/op
Iteration   1: 228.116 ns/op
Iteration   2: 228.012 ns/op
Iteration   3: 227.843 ns/op
Iteration   4: 227.826 ns/op
Iteration   5: 228.893 ns/op
Iteration   6: 228.005 ns/op
Iteration   7: 228.477 ns/op
Iteration   8: 230.745 ns/op
Iteration   9: 227.965 ns/op
Iteration  10: 228.332 ns/op

# Run progress: 14.28% complete, ETA 01:01:43
# Fork: 2 of 2
# Warmup Iteration   1: 745.412 ns/op
# Warmup Iteration   2: 267.427 ns/op
# Warmup Iteration   3: 227.813 ns/op
Iteration   1: 228.431 ns/op
Iteration   2: 228.179 ns/op
Iteration   3: 227.962 ns/op
Iteration   4: 228.337 ns/op
Iteration   5: 228.885 ns/op
Iteration   6: 228.431 ns/op
Iteration   7: 227.968 ns/op
Iteration   8: 230.527 ns/op
Iteration   9: 227.996 ns/op
Iteration  10: 228.110 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  228.452 ±(99.9%) 0.700 ns/op [Average]
  (min, avg, max) = (227.826, 228.452, 230.745), stdev = 0.806
  CI (99.9%): [227.752, 229.152] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 14.33% complete, ETA 01:01:40
# Fork: 1 of 2
# Warmup Iteration   1: 593.032 ns/op
# Warmup Iteration   2: 264.656 ns/op
# Warmup Iteration   3: 229.940 ns/op
Iteration   1: 230.129 ns/op
Iteration   2: 230.241 ns/op
Iteration   3: 229.892 ns/op
Iteration   4: 230.084 ns/op
Iteration   5: 230.137 ns/op
Iteration   6: 229.945 ns/op
Iteration   7: 230.154 ns/op
Iteration   8: 253.241 ns/op
Iteration   9: 229.825 ns/op
Iteration  10: 230.178 ns/op

# Run progress: 14.39% complete, ETA 01:01:38
# Fork: 2 of 2
# Warmup Iteration   1: 325.448 ns/op
# Warmup Iteration   2: 276.589 ns/op
# Warmup Iteration   3: 236.110 ns/op
Iteration   1: 236.196 ns/op
Iteration   2: 236.121 ns/op
Iteration   3: 236.184 ns/op
Iteration   4: 236.132 ns/op
Iteration   5: 236.332 ns/op
Iteration   6: 236.101 ns/op
Iteration   7: 236.071 ns/op
Iteration   8: 236.089 ns/op
Iteration   9: 236.387 ns/op
Iteration  10: 236.137 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  234.279 ±(99.9%) 4.696 ns/op [Average]
  (min, avg, max) = (229.825, 234.279, 253.241), stdev = 5.408
  CI (99.9%): [229.583, 238.974] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 14.44% complete, ETA 01:01:35
# Fork: 1 of 2
# Warmup Iteration   1: 412.680 ns/op
# Warmup Iteration   2: 312.506 ns/op
# Warmup Iteration   3: 272.498 ns/op
Iteration   1: 272.900 ns/op
Iteration   2: 273.089 ns/op
Iteration   3: 272.598 ns/op
Iteration   4: 272.622 ns/op
Iteration   5: 274.005 ns/op
Iteration   6: 272.466 ns/op
Iteration   7: 272.620 ns/op
Iteration   8: 276.304 ns/op
Iteration   9: 272.491 ns/op
Iteration  10: 272.637 ns/op

# Run progress: 14.50% complete, ETA 01:01:33
# Fork: 2 of 2
# Warmup Iteration   1: 412.678 ns/op
# Warmup Iteration   2: 313.202 ns/op
# Warmup Iteration   3: 272.640 ns/op
Iteration   1: 272.571 ns/op
Iteration   2: 272.425 ns/op
Iteration   3: 272.519 ns/op
Iteration   4: 272.590 ns/op
Iteration   5: 274.031 ns/op
Iteration   6: 273.005 ns/op
Iteration   7: 272.508 ns/op
Iteration   8: 275.676 ns/op
Iteration   9: 272.487 ns/op
Iteration  10: 272.768 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  273.116 ±(99.9%) 0.945 ns/op [Average]
  (min, avg, max) = (272.425, 273.116, 276.304), stdev = 1.088
  CI (99.9%): [272.171, 274.061] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 14.56% complete, ETA 01:01:30
# Fork: 1 of 2
# Warmup Iteration   1: 404.479 ns/op
# Warmup Iteration   2: 416.194 ns/op
# Warmup Iteration   3: 358.247 ns/op
Iteration   1: 358.145 ns/op
Iteration   2: 358.913 ns/op
Iteration   3: 358.295 ns/op
Iteration   4: 352.189 ns/op
Iteration   5: 352.778 ns/op
Iteration   6: 352.496 ns/op
Iteration   7: 353.298 ns/op
Iteration   8: 348.835 ns/op
Iteration   9: 352.947 ns/op
Iteration  10: 352.573 ns/op

# Run progress: 14.61% complete, ETA 01:01:28
# Fork: 2 of 2
# Warmup Iteration   1: 408.684 ns/op
# Warmup Iteration   2: 417.071 ns/op
# Warmup Iteration   3: 358.977 ns/op
Iteration   1: 358.156 ns/op
Iteration   2: 358.293 ns/op
Iteration   3: 358.339 ns/op
Iteration   4: 352.122 ns/op
Iteration   5: 352.815 ns/op
Iteration   6: 353.127 ns/op
Iteration   7: 352.636 ns/op
Iteration   8: 349.009 ns/op
Iteration   9: 353.439 ns/op
Iteration  10: 352.420 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  354.041 ±(99.9%) 2.723 ns/op [Average]
  (min, avg, max) = (348.835, 354.041, 358.913), stdev = 3.136
  CI (99.9%): [351.318, 356.765] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 14.67% complete, ETA 01:01:26
# Fork: 1 of 2
# Warmup Iteration   1: 38.030 ns/op
# Warmup Iteration   2: 59.871 ns/op
# Warmup Iteration   3: 38.097 ns/op
Iteration   1: 38.115 ns/op
Iteration   2: 38.138 ns/op
Iteration   3: 38.342 ns/op
Iteration   4: 38.095 ns/op
Iteration   5: 38.118 ns/op
Iteration   6: 38.176 ns/op
Iteration   7: 38.185 ns/op
Iteration   8: 37.243 ns/op
Iteration   9: 38.073 ns/op
Iteration  10: 37.972 ns/op

# Run progress: 14.72% complete, ETA 01:01:23
# Fork: 2 of 2
# Warmup Iteration   1: 37.925 ns/op
# Warmup Iteration   2: 61.948 ns/op
# Warmup Iteration   3: 38.028 ns/op
Iteration   1: 38.075 ns/op
Iteration   2: 38.018 ns/op
Iteration   3: 37.992 ns/op
Iteration   4: 38.025 ns/op
Iteration   5: 38.097 ns/op
Iteration   6: 38.059 ns/op
Iteration   7: 38.021 ns/op
Iteration   8: 37.085 ns/op
Iteration   9: 38.175 ns/op
Iteration  10: 38.087 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.005 ±(99.9%) 0.261 ns/op [Average]
  (min, avg, max) = (37.085, 38.005, 38.342), stdev = 0.300
  CI (99.9%): [37.744, 38.265] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 14.78% complete, ETA 01:01:21
# Fork: 1 of 2
# Warmup Iteration   1: 269.888 ns/op
# Warmup Iteration   2: 282.640 ns/op
# Warmup Iteration   3: 235.834 ns/op
Iteration   1: 236.189 ns/op
Iteration   2: 235.953 ns/op
Iteration   3: 235.637 ns/op
Iteration   4: 235.860 ns/op
Iteration   5: 236.240 ns/op
Iteration   6: 236.070 ns/op
Iteration   7: 235.410 ns/op
Iteration   8: 233.228 ns/op
Iteration   9: 235.758 ns/op
Iteration  10: 235.394 ns/op

# Run progress: 14.83% complete, ETA 01:01:18
# Fork: 2 of 2
# Warmup Iteration   1: 270.494 ns/op
# Warmup Iteration   2: 282.737 ns/op
# Warmup Iteration   3: 236.204 ns/op
Iteration   1: 235.724 ns/op
Iteration   2: 236.109 ns/op
Iteration   3: 236.267 ns/op
Iteration   4: 235.927 ns/op
Iteration   5: 235.999 ns/op
Iteration   6: 237.528 ns/op
Iteration   7: 236.211 ns/op
Iteration   8: 234.273 ns/op
Iteration   9: 235.528 ns/op
Iteration  10: 235.762 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  235.753 ±(99.9%) 0.726 ns/op [Average]
  (min, avg, max) = (233.228, 235.753, 237.528), stdev = 0.837
  CI (99.9%): [235.027, 236.480] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 14.89% complete, ETA 01:01:16
# Fork: 1 of 2
# Warmup Iteration   1: 464.937 ns/op
# Warmup Iteration   2: 262.775 ns/op
# Warmup Iteration   3: 227.943 ns/op
Iteration   1: 227.979 ns/op
Iteration   2: 227.887 ns/op
Iteration   3: 227.967 ns/op
Iteration   4: 227.929 ns/op
Iteration   5: 228.839 ns/op
Iteration   6: 228.419 ns/op
Iteration   7: 228.072 ns/op
Iteration   8: 244.145 ns/op
Iteration   9: 228.264 ns/op
Iteration  10: 227.937 ns/op

# Run progress: 14.94% complete, ETA 01:01:13
# Fork: 2 of 2
# Warmup Iteration   1: 479.123 ns/op
# Warmup Iteration   2: 268.913 ns/op
# Warmup Iteration   3: 236.284 ns/op
Iteration   1: 236.810 ns/op
Iteration   2: 236.768 ns/op
Iteration   3: 236.399 ns/op
Iteration   4: 236.367 ns/op
Iteration   5: 236.909 ns/op
Iteration   6: 236.915 ns/op
Iteration   7: 236.715 ns/op
Iteration   8: 244.263 ns/op
Iteration   9: 236.348 ns/op
Iteration  10: 236.364 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  233.565 ±(99.9%) 4.782 ns/op [Average]
  (min, avg, max) = (227.887, 233.565, 244.263), stdev = 5.507
  CI (99.9%): [228.783, 238.347] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 15.00% complete, ETA 01:01:11
# Fork: 1 of 2
# Warmup Iteration   1: 395.301 ns/op
# Warmup Iteration   2: 277.148 ns/op
# Warmup Iteration   3: 229.670 ns/op
Iteration   1: 229.754 ns/op
Iteration   2: 229.850 ns/op
Iteration   3: 229.821 ns/op
Iteration   4: 229.615 ns/op
Iteration   5: 230.184 ns/op
Iteration   6: 229.693 ns/op
Iteration   7: 229.800 ns/op
Iteration   8: 230.385 ns/op
Iteration   9: 229.715 ns/op
Iteration  10: 230.198 ns/op

# Run progress: 15.06% complete, ETA 01:01:08
# Fork: 2 of 2
# Warmup Iteration   1: 399.757 ns/op
# Warmup Iteration   2: 273.044 ns/op
# Warmup Iteration   3: 229.513 ns/op
Iteration   1: 229.981 ns/op
Iteration   2: 229.463 ns/op
Iteration   3: 229.830 ns/op
Iteration   4: 230.004 ns/op
Iteration   5: 229.923 ns/op
Iteration   6: 230.186 ns/op
Iteration   7: 229.994 ns/op
Iteration   8: 229.896 ns/op
Iteration   9: 229.704 ns/op
Iteration  10: 229.883 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  229.894 ±(99.9%) 0.194 ns/op [Average]
  (min, avg, max) = (229.463, 229.894, 230.385), stdev = 0.223
  CI (99.9%): [229.700, 230.088] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 15.11% complete, ETA 01:01:06
# Fork: 1 of 2
# Warmup Iteration   1: 410.729 ns/op
# Warmup Iteration   2: 313.374 ns/op
# Warmup Iteration   3: 272.442 ns/op
Iteration   1: 272.810 ns/op
Iteration   2: 272.492 ns/op
Iteration   3: 272.693 ns/op
Iteration   4: 272.586 ns/op
Iteration   5: 273.466 ns/op
Iteration   6: 272.425 ns/op
Iteration   7: 272.441 ns/op
Iteration   8: 275.669 ns/op
Iteration   9: 272.433 ns/op
Iteration  10: 272.405 ns/op

# Run progress: 15.17% complete, ETA 01:01:04
# Fork: 2 of 2
# Warmup Iteration   1: 489.705 ns/op
# Warmup Iteration   2: 313.832 ns/op
# Warmup Iteration   3: 272.627 ns/op
Iteration   1: 273.399 ns/op
Iteration   2: 272.495 ns/op
Iteration   3: 273.220 ns/op
Iteration   4: 272.822 ns/op
Iteration   5: 274.089 ns/op
Iteration   6: 272.942 ns/op
Iteration   7: 272.683 ns/op
Iteration   8: 283.690 ns/op
Iteration   9: 272.777 ns/op
Iteration  10: 273.113 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  273.533 ±(99.9%) 2.179 ns/op [Average]
  (min, avg, max) = (272.405, 273.533, 283.690), stdev = 2.510
  CI (99.9%): [271.353, 275.712] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 15.22% complete, ETA 01:01:01
# Fork: 1 of 2
# Warmup Iteration   1: 421.508 ns/op
# Warmup Iteration   2: 417.223 ns/op
# Warmup Iteration   3: 360.216 ns/op
Iteration   1: 359.731 ns/op
Iteration   2: 360.739 ns/op
Iteration   3: 359.784 ns/op
Iteration   4: 352.035 ns/op
Iteration   5: 352.934 ns/op
Iteration   6: 352.513 ns/op
Iteration   7: 352.246 ns/op
Iteration   8: 348.747 ns/op
Iteration   9: 352.530 ns/op
Iteration  10: 352.108 ns/op

# Run progress: 15.28% complete, ETA 01:00:59
# Fork: 2 of 2
# Warmup Iteration   1: 424.548 ns/op
# Warmup Iteration   2: 416.682 ns/op
# Warmup Iteration   3: 358.555 ns/op
Iteration   1: 357.635 ns/op
Iteration   2: 357.898 ns/op
Iteration   3: 357.496 ns/op
Iteration   4: 351.467 ns/op
Iteration   5: 352.228 ns/op
Iteration   6: 352.751 ns/op
Iteration   7: 352.568 ns/op
Iteration   8: 349.496 ns/op
Iteration   9: 351.682 ns/op
Iteration  10: 352.158 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  353.937 ±(99.9%) 3.074 ns/op [Average]
  (min, avg, max) = (348.747, 353.937, 360.739), stdev = 3.540
  CI (99.9%): [350.863, 357.011] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 15.33% complete, ETA 01:00:56
# Fork: 1 of 2
# Warmup Iteration   1: 38.763 ns/op
# Warmup Iteration   2: 61.593 ns/op
# Warmup Iteration   3: 38.083 ns/op
Iteration   1: 38.084 ns/op
Iteration   2: 38.024 ns/op
Iteration   3: 38.135 ns/op
Iteration   4: 38.196 ns/op
Iteration   5: 38.065 ns/op
Iteration   6: 38.112 ns/op
Iteration   7: 37.975 ns/op
Iteration   8: 37.058 ns/op
Iteration   9: 38.207 ns/op
Iteration  10: 38.092 ns/op

# Run progress: 15.39% complete, ETA 01:00:54
# Fork: 2 of 2
# Warmup Iteration   1: 38.662 ns/op
# Warmup Iteration   2: 62.110 ns/op
# Warmup Iteration   3: 38.110 ns/op
Iteration   1: 38.090 ns/op
Iteration   2: 38.450 ns/op
Iteration   3: 38.136 ns/op
Iteration   4: 38.141 ns/op
Iteration   5: 38.060 ns/op
Iteration   6: 38.134 ns/op
Iteration   7: 38.106 ns/op
Iteration   8: 37.155 ns/op
Iteration   9: 38.099 ns/op
Iteration  10: 38.144 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.023 ±(99.9%) 0.284 ns/op [Average]
  (min, avg, max) = (37.058, 38.023, 38.450), stdev = 0.327
  CI (99.9%): [37.739, 38.307] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 15.44% complete, ETA 01:00:51
# Fork: 1 of 2
# Warmup Iteration   1: 296.386 ns/op
# Warmup Iteration   2: 282.606 ns/op
# Warmup Iteration   3: 241.270 ns/op
Iteration   1: 242.115 ns/op
Iteration   2: 241.323 ns/op
Iteration   3: 240.944 ns/op
Iteration   4: 241.197 ns/op
Iteration   5: 240.892 ns/op
Iteration   6: 238.927 ns/op
Iteration   7: 240.516 ns/op
Iteration   8: 239.127 ns/op
Iteration   9: 241.002 ns/op
Iteration  10: 241.068 ns/op

# Run progress: 15.50% complete, ETA 01:00:49
# Fork: 2 of 2
# Warmup Iteration   1: 299.720 ns/op
# Warmup Iteration   2: 295.415 ns/op
# Warmup Iteration   3: 238.721 ns/op
Iteration   1: 238.705 ns/op
Iteration   2: 238.856 ns/op
Iteration   3: 238.667 ns/op
Iteration   4: 238.330 ns/op
Iteration   5: 238.915 ns/op
Iteration   6: 239.601 ns/op
Iteration   7: 239.324 ns/op
Iteration   8: 237.068 ns/op
Iteration   9: 238.671 ns/op
Iteration  10: 239.083 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  239.716 ±(99.9%) 1.138 ns/op [Average]
  (min, avg, max) = (237.068, 239.716, 242.115), stdev = 1.310
  CI (99.9%): [238.579, 240.854] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 15.56% complete, ETA 01:00:47
# Fork: 1 of 2
# Warmup Iteration   1: 1348.285 ns/op
# Warmup Iteration   2: 510.485 ns/op
# Warmup Iteration   3: 440.303 ns/op
Iteration   1: 439.005 ns/op
Iteration   2: 439.309 ns/op
Iteration   3: 439.434 ns/op
Iteration   4: 439.053 ns/op
Iteration   5: 439.627 ns/op
Iteration   6: 440.329 ns/op
Iteration   7: 438.914 ns/op
Iteration   8: 440.040 ns/op
Iteration   9: 439.099 ns/op
Iteration  10: 438.956 ns/op

# Run progress: 15.61% complete, ETA 01:00:44
# Fork: 2 of 2
# Warmup Iteration   1: 1362.576 ns/op
# Warmup Iteration   2: 508.739 ns/op
# Warmup Iteration   3: 441.021 ns/op
Iteration   1: 440.561 ns/op
Iteration   2: 440.840 ns/op
Iteration   3: 440.797 ns/op
Iteration   4: 440.672 ns/op
Iteration   5: 440.664 ns/op
Iteration   6: 440.694 ns/op
Iteration   7: 440.793 ns/op
Iteration   8: 440.606 ns/op
Iteration   9: 440.710 ns/op
Iteration  10: 440.670 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  440.039 ±(99.9%) 0.660 ns/op [Average]
  (min, avg, max) = (438.914, 440.039, 440.840), stdev = 0.760
  CI (99.9%): [439.379, 440.698] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 15.67% complete, ETA 01:00:42
# Fork: 1 of 2
# Warmup Iteration   1: 766.373 ns/op
# Warmup Iteration   2: 503.241 ns/op
# Warmup Iteration   3: 440.027 ns/op
Iteration   1: 440.093 ns/op
Iteration   2: 440.151 ns/op
Iteration   3: 438.774 ns/op
Iteration   4: 439.959 ns/op
Iteration   5: 438.844 ns/op
Iteration   6: 438.897 ns/op
Iteration   7: 439.610 ns/op
Iteration   8: 440.292 ns/op
Iteration   9: 439.417 ns/op
Iteration  10: 438.705 ns/op

# Run progress: 15.72% complete, ETA 01:00:39
# Fork: 2 of 2
# Warmup Iteration   1: 795.643 ns/op
# Warmup Iteration   2: 536.238 ns/op
# Warmup Iteration   3: 443.969 ns/op
Iteration   1: 443.494 ns/op
Iteration   2: 443.315 ns/op
Iteration   3: 445.172 ns/op
Iteration   4: 444.146 ns/op
Iteration   5: 444.667 ns/op
Iteration   6: 443.582 ns/op
Iteration   7: 443.404 ns/op
Iteration   8: 443.427 ns/op
Iteration   9: 445.090 ns/op
Iteration  10: 443.296 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  441.717 ±(99.9%) 2.082 ns/op [Average]
  (min, avg, max) = (438.705, 441.717, 445.172), stdev = 2.398
  CI (99.9%): [439.634, 443.799] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 15.78% complete, ETA 01:00:37
# Fork: 1 of 2
# Warmup Iteration   1: 643.026 ns/op
# Warmup Iteration   2: 499.633 ns/op
# Warmup Iteration   3: 438.807 ns/op
Iteration   1: 437.757 ns/op
Iteration   2: 438.407 ns/op
Iteration   3: 438.085 ns/op
Iteration   4: 438.144 ns/op
Iteration   5: 438.815 ns/op
Iteration   6: 438.431 ns/op
Iteration   7: 438.729 ns/op
Iteration   8: 438.379 ns/op
Iteration   9: 438.601 ns/op
Iteration  10: 437.237 ns/op

# Run progress: 15.83% complete, ETA 01:00:34
# Fork: 2 of 2
# Warmup Iteration   1: 661.324 ns/op
# Warmup Iteration   2: 501.282 ns/op
# Warmup Iteration   3: 438.509 ns/op
Iteration   1: 438.726 ns/op
Iteration   2: 438.897 ns/op
Iteration   3: 438.646 ns/op
Iteration   4: 438.327 ns/op
Iteration   5: 438.955 ns/op
Iteration   6: 438.342 ns/op
Iteration   7: 437.529 ns/op
Iteration   8: 437.214 ns/op
Iteration   9: 438.570 ns/op
Iteration  10: 437.269 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  438.253 ±(99.9%) 0.489 ns/op [Average]
  (min, avg, max) = (437.214, 438.253, 438.955), stdev = 0.563
  CI (99.9%): [437.764, 438.742] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 15.89% complete, ETA 01:00:32
# Fork: 1 of 2
# Warmup Iteration   1: 356.395 ns/op
# Warmup Iteration   2: 391.820 ns/op
# Warmup Iteration   3: 326.539 ns/op
Iteration   1: 326.101 ns/op
Iteration   2: 326.383 ns/op
Iteration   3: 326.514 ns/op
Iteration   4: 328.014 ns/op
Iteration   5: 328.153 ns/op
Iteration   6: 327.979 ns/op
Iteration   7: 327.994 ns/op
Iteration   8: 325.146 ns/op
Iteration   9: 328.080 ns/op
Iteration  10: 327.995 ns/op

# Run progress: 15.94% complete, ETA 01:00:30
# Fork: 2 of 2
# Warmup Iteration   1: 477.506 ns/op
# Warmup Iteration   2: 497.642 ns/op
# Warmup Iteration   3: 419.536 ns/op
Iteration   1: 420.026 ns/op
Iteration   2: 419.529 ns/op
Iteration   3: 419.753 ns/op
Iteration   4: 420.917 ns/op
Iteration   5: 421.205 ns/op
Iteration   6: 421.086 ns/op
Iteration   7: 421.119 ns/op
Iteration   8: 418.382 ns/op
Iteration   9: 421.186 ns/op
Iteration  10: 420.771 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  373.817 ±(99.9%) 41.508 ns/op [Average]
  (min, avg, max) = (325.146, 373.817, 421.205), stdev = 47.801
  CI (99.9%): [332.308, 415.325] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 16.00% complete, ETA 01:00:27
# Fork: 1 of 2
# Warmup Iteration   1: 38.493 ns/op
# Warmup Iteration   2: 62.745 ns/op
# Warmup Iteration   3: 38.069 ns/op
Iteration   1: 37.982 ns/op
Iteration   2: 38.126 ns/op
Iteration   3: 38.087 ns/op
Iteration   4: 37.922 ns/op
Iteration   5: 38.298 ns/op
Iteration   6: 38.150 ns/op
Iteration   7: 37.905 ns/op
Iteration   8: 37.048 ns/op
Iteration   9: 38.244 ns/op
Iteration  10: 38.142 ns/op

# Run progress: 16.06% complete, ETA 01:00:25
# Fork: 2 of 2
# Warmup Iteration   1: 38.439 ns/op
# Warmup Iteration   2: 64.299 ns/op
# Warmup Iteration   3: 38.051 ns/op
Iteration   1: 38.067 ns/op
Iteration   2: 38.192 ns/op
Iteration   3: 38.130 ns/op
Iteration   4: 38.031 ns/op
Iteration   5: 37.991 ns/op
Iteration   6: 38.060 ns/op
Iteration   7: 38.192 ns/op
Iteration   8: 37.198 ns/op
Iteration   9: 37.956 ns/op
Iteration  10: 38.027 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  37.987 ±(99.9%) 0.273 ns/op [Average]
  (min, avg, max) = (37.048, 37.987, 38.298), stdev = 0.315
  CI (99.9%): [37.714, 38.260] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 16.11% complete, ETA 01:00:22
# Fork: 1 of 2
# Warmup Iteration   1: 297.445 ns/op
# Warmup Iteration   2: 285.110 ns/op
# Warmup Iteration   3: 238.292 ns/op
Iteration   1: 238.609 ns/op
Iteration   2: 238.569 ns/op
Iteration   3: 238.668 ns/op
Iteration   4: 238.179 ns/op
Iteration   5: 238.244 ns/op
Iteration   6: 238.803 ns/op
Iteration   7: 239.236 ns/op
Iteration   8: 236.368 ns/op
Iteration   9: 238.805 ns/op
Iteration  10: 238.180 ns/op

# Run progress: 16.17% complete, ETA 01:00:20
# Fork: 2 of 2
# Warmup Iteration   1: 294.828 ns/op
# Warmup Iteration   2: 280.824 ns/op
# Warmup Iteration   3: 238.626 ns/op
Iteration   1: 238.811 ns/op
Iteration   2: 238.681 ns/op
Iteration   3: 238.567 ns/op
Iteration   4: 238.179 ns/op
Iteration   5: 238.281 ns/op
Iteration   6: 238.589 ns/op
Iteration   7: 239.288 ns/op
Iteration   8: 236.360 ns/op
Iteration   9: 238.476 ns/op
Iteration  10: 238.597 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  238.375 ±(99.9%) 0.654 ns/op [Average]
  (min, avg, max) = (236.360, 238.375, 239.288), stdev = 0.753
  CI (99.9%): [237.721, 239.029] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 16.22% complete, ETA 01:00:17
# Fork: 1 of 2
# Warmup Iteration   1: 1773.664 ns/op
# Warmup Iteration   2: 1178.231 ns/op
# Warmup Iteration   3: 974.013 ns/op
Iteration   1: 975.363 ns/op
Iteration   2: 974.069 ns/op
Iteration   3: 975.634 ns/op
Iteration   4: 976.037 ns/op
Iteration   5: 975.193 ns/op
Iteration   6: 976.265 ns/op
Iteration   7: 974.199 ns/op
Iteration   8: 974.097 ns/op
Iteration   9: 973.787 ns/op
Iteration  10: 973.649 ns/op

# Run progress: 16.28% complete, ETA 01:00:15
# Fork: 2 of 2
# Warmup Iteration   1: 1468.101 ns/op
# Warmup Iteration   2: 1103.244 ns/op
# Warmup Iteration   3: 975.834 ns/op
Iteration   1: 974.738 ns/op
Iteration   2: 975.313 ns/op
Iteration   3: 975.154 ns/op
Iteration   4: 973.112 ns/op
Iteration   5: 976.067 ns/op
Iteration   6: 976.332 ns/op
Iteration   7: 974.136 ns/op
Iteration   8: 977.556 ns/op
Iteration   9: 974.525 ns/op
Iteration  10: 973.891 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  974.956 ±(99.9%) 0.981 ns/op [Average]
  (min, avg, max) = (973.112, 974.956, 977.556), stdev = 1.129
  CI (99.9%): [973.975, 975.936] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 16.33% complete, ETA 01:00:13
# Fork: 1 of 2
# Warmup Iteration   1: 1505.153 ns/op
# Warmup Iteration   2: 1120.058 ns/op
# Warmup Iteration   3: 983.301 ns/op
Iteration   1: 983.330 ns/op
Iteration   2: 986.506 ns/op
Iteration   3: 984.403 ns/op
Iteration   4: 986.233 ns/op
Iteration   5: 986.405 ns/op
Iteration   6: 983.302 ns/op
Iteration   7: 982.638 ns/op
Iteration   8: 986.048 ns/op
Iteration   9: 985.827 ns/op
Iteration  10: 984.376 ns/op

# Run progress: 16.39% complete, ETA 01:00:10
# Fork: 2 of 2
# Warmup Iteration   1: 1387.630 ns/op
# Warmup Iteration   2: 1127.295 ns/op
# Warmup Iteration   3: 983.938 ns/op
Iteration   1: 986.842 ns/op
Iteration   2: 984.772 ns/op
Iteration   3: 985.278 ns/op
Iteration   4: 985.452 ns/op
Iteration   5: 983.607 ns/op
Iteration   6: 983.776 ns/op
Iteration   7: 984.969 ns/op
Iteration   8: 983.012 ns/op
Iteration   9: 988.014 ns/op
Iteration  10: 985.082 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  984.994 ±(99.9%) 1.256 ns/op [Average]
  (min, avg, max) = (982.638, 984.994, 988.014), stdev = 1.446
  CI (99.9%): [983.738, 986.250] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 16.44% complete, ETA 01:00:08
# Fork: 1 of 2
# Warmup Iteration   1: 1855.342 ns/op
# Warmup Iteration   2: 1586.945 ns/op
# Warmup Iteration   3: 1334.652 ns/op
Iteration   1: 1335.990 ns/op
Iteration   2: 1334.847 ns/op
Iteration   3: 1334.339 ns/op
Iteration   4: 1334.911 ns/op
Iteration   5: 1338.136 ns/op
Iteration   6: 1334.401 ns/op
Iteration   7: 1333.005 ns/op
Iteration   8: 1334.987 ns/op
Iteration   9: 1334.693 ns/op
Iteration  10: 1336.034 ns/op

# Run progress: 16.50% complete, ETA 01:00:05
# Fork: 2 of 2
# Warmup Iteration   1: 1974.793 ns/op
# Warmup Iteration   2: 1595.907 ns/op
# Warmup Iteration   3: 1334.478 ns/op
Iteration   1: 1335.819 ns/op
Iteration   2: 1334.663 ns/op
Iteration   3: 1334.348 ns/op
Iteration   4: 1334.754 ns/op
Iteration   5: 1337.366 ns/op
Iteration   6: 1334.190 ns/op
Iteration   7: 1333.119 ns/op
Iteration   8: 1335.121 ns/op
Iteration   9: 1334.477 ns/op
Iteration  10: 1335.943 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1335.057 ±(99.9%) 1.072 ns/op [Average]
  (min, avg, max) = (1333.005, 1335.057, 1338.136), stdev = 1.235
  CI (99.9%): [1333.985, 1336.129] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 16.56% complete, ETA 01:00:03
# Fork: 1 of 2
# Warmup Iteration   1: 369.674 ns/op
# Warmup Iteration   2: 369.696 ns/op
# Warmup Iteration   3: 326.370 ns/op
Iteration   1: 326.604 ns/op
Iteration   2: 326.021 ns/op
Iteration   3: 326.061 ns/op
Iteration   4: 328.363 ns/op
Iteration   5: 327.721 ns/op
Iteration   6: 328.484 ns/op
Iteration   7: 327.998 ns/op
Iteration   8: 325.430 ns/op
Iteration   9: 327.689 ns/op
Iteration  10: 327.689 ns/op

# Run progress: 16.61% complete, ETA 01:00:01
# Fork: 2 of 2
# Warmup Iteration   1: 360.389 ns/op
# Warmup Iteration   2: 385.652 ns/op
# Warmup Iteration   3: 326.600 ns/op
Iteration   1: 326.765 ns/op
Iteration   2: 326.803 ns/op
Iteration   3: 326.806 ns/op
Iteration   4: 328.401 ns/op
Iteration   5: 328.430 ns/op
Iteration   6: 328.438 ns/op
Iteration   7: 328.777 ns/op
Iteration   8: 324.936 ns/op
Iteration   9: 328.667 ns/op
Iteration  10: 328.411 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  327.425 ±(99.9%) 1.011 ns/op [Average]
  (min, avg, max) = (324.936, 327.425, 328.777), stdev = 1.165
  CI (99.9%): [326.413, 328.436] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 16.67% complete, ETA 00:59:58
# Fork: 1 of 2
# Warmup Iteration   1: 38.785 ns/op
# Warmup Iteration   2: 66.585 ns/op
# Warmup Iteration   3: 35.694 ns/op
Iteration   1: 35.606 ns/op
Iteration   2: 35.684 ns/op
Iteration   3: 35.700 ns/op
Iteration   4: 35.676 ns/op
Iteration   5: 35.746 ns/op
Iteration   6: 36.146 ns/op
Iteration   7: 35.690 ns/op
Iteration   8: 34.452 ns/op
Iteration   9: 35.683 ns/op
Iteration  10: 35.673 ns/op

# Run progress: 16.72% complete, ETA 00:59:56
# Fork: 2 of 2
# Warmup Iteration   1: 37.374 ns/op
# Warmup Iteration   2: 64.461 ns/op
# Warmup Iteration   3: 35.608 ns/op
Iteration   1: 35.710 ns/op
Iteration   2: 35.678 ns/op
Iteration   3: 35.658 ns/op
Iteration   4: 35.635 ns/op
Iteration   5: 35.699 ns/op
Iteration   6: 36.145 ns/op
Iteration   7: 35.722 ns/op
Iteration   8: 34.424 ns/op
Iteration   9: 35.678 ns/op
Iteration  10: 35.667 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.604 ±(99.9%) 0.368 ns/op [Average]
  (min, avg, max) = (34.424, 35.604, 36.146), stdev = 0.424
  CI (99.9%): [35.235, 35.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 16.78% complete, ETA 00:59:53
# Fork: 1 of 2
# Warmup Iteration   1: 7996.566 ns/op
# Warmup Iteration   2: 5468.314 ns/op
# Warmup Iteration   3: 4778.786 ns/op
Iteration   1: 4778.198 ns/op
Iteration   2: 4766.960 ns/op
Iteration   3: 4784.088 ns/op
Iteration   4: 4819.426 ns/op
Iteration   5: 4795.136 ns/op
Iteration   6: 4780.432 ns/op
Iteration   7: 4768.783 ns/op
Iteration   8: 4769.352 ns/op
Iteration   9: 4764.399 ns/op
Iteration  10: 4787.214 ns/op

# Run progress: 16.83% complete, ETA 00:59:51
# Fork: 2 of 2
# Warmup Iteration   1: 8239.977 ns/op
# Warmup Iteration   2: 5282.698 ns/op
# Warmup Iteration   3: 4602.383 ns/op
Iteration   1: 4592.028 ns/op
Iteration   2: 4555.311 ns/op
Iteration   3: 4554.399 ns/op
Iteration   4: 4552.782 ns/op
Iteration   5: 4589.139 ns/op
Iteration   6: 4590.942 ns/op
Iteration   7: 4581.530 ns/op
Iteration   8: 4595.845 ns/op
Iteration   9: 4577.351 ns/op
Iteration  10: 4587.891 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4679.560 ±(99.9%) 91.841 ns/op [Average]
  (min, avg, max) = (4552.782, 4679.560, 4819.426), stdev = 105.764
  CI (99.9%): [4587.719, 4771.401] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 16.89% complete, ETA 00:59:48
# Fork: 1 of 2
# Warmup Iteration   1: 24953.818 ns/op
# Warmup Iteration   2: 10111.922 ns/op
# Warmup Iteration   3: 8723.835 ns/op
Iteration   1: 8333.804 ns/op
Iteration   2: 8342.274 ns/op
Iteration   3: 8328.389 ns/op
Iteration   4: 8328.954 ns/op
Iteration   5: 8304.688 ns/op
Iteration   6: 8324.033 ns/op
Iteration   7: 8317.074 ns/op
Iteration   8: 8368.416 ns/op
Iteration   9: 8318.508 ns/op
Iteration  10: 8334.861 ns/op

# Run progress: 16.94% complete, ETA 00:59:46
# Fork: 2 of 2
# Warmup Iteration   1: 35949.932 ns/op
# Warmup Iteration   2: 9500.695 ns/op
# Warmup Iteration   3: 8704.236 ns/op
Iteration   1: 8413.742 ns/op
Iteration   2: 8440.065 ns/op
Iteration   3: 8386.931 ns/op
Iteration   4: 8387.556 ns/op
Iteration   5: 8400.602 ns/op
Iteration   6: 8407.310 ns/op
Iteration   7: 8376.022 ns/op
Iteration   8: 8377.475 ns/op
Iteration   9: 8402.569 ns/op
Iteration  10: 8389.536 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8364.140 ±(99.9%) 34.017 ns/op [Average]
  (min, avg, max) = (8304.688, 8364.140, 8440.065), stdev = 39.174
  CI (99.9%): [8330.124, 8398.157] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 17.00% complete, ETA 00:59:44
# Fork: 1 of 2
# Warmup Iteration   1: 23036.104 ns/op
# Warmup Iteration   2: 9386.269 ns/op
# Warmup Iteration   3: 8638.033 ns/op
Iteration   1: 8267.202 ns/op
Iteration   2: 8232.921 ns/op
Iteration   3: 8298.931 ns/op
Iteration   4: 8272.640 ns/op
Iteration   5: 8250.009 ns/op
Iteration   6: 8227.925 ns/op
Iteration   7: 8247.702 ns/op
Iteration   8: 8278.849 ns/op
Iteration   9: 8282.006 ns/op
Iteration  10: 8261.784 ns/op

# Run progress: 17.06% complete, ETA 00:59:41
# Fork: 2 of 2
# Warmup Iteration   1: 23664.523 ns/op
# Warmup Iteration   2: 9239.522 ns/op
# Warmup Iteration   3: 8591.921 ns/op
Iteration   1: 8262.505 ns/op
Iteration   2: 8237.566 ns/op
Iteration   3: 8267.611 ns/op
Iteration   4: 8311.180 ns/op
Iteration   5: 8288.390 ns/op
Iteration   6: 8270.576 ns/op
Iteration   7: 8229.751 ns/op
Iteration   8: 8270.826 ns/op
Iteration   9: 8257.100 ns/op
Iteration  10: 8294.537 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8265.500 ±(99.9%) 20.234 ns/op [Average]
  (min, avg, max) = (8227.925, 8265.500, 8311.180), stdev = 23.301
  CI (99.9%): [8245.267, 8285.734] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 17.11% complete, ETA 00:59:39
# Fork: 1 of 2
# Warmup Iteration   1: 13260.910 ns/op
# Warmup Iteration   2: 7175.822 ns/op
# Warmup Iteration   3: 6168.359 ns/op
Iteration   1: 6206.334 ns/op
Iteration   2: 6224.136 ns/op
Iteration   3: 6214.171 ns/op
Iteration   4: 6169.396 ns/op
Iteration   5: 6212.136 ns/op
Iteration   6: 6151.456 ns/op
Iteration   7: 6197.755 ns/op
Iteration   8: 6201.980 ns/op
Iteration   9: 6196.559 ns/op
Iteration  10: 6161.873 ns/op

# Run progress: 17.17% complete, ETA 00:59:36
# Fork: 2 of 2
# Warmup Iteration   1: 12874.655 ns/op
# Warmup Iteration   2: 6870.832 ns/op
# Warmup Iteration   3: 6075.270 ns/op
Iteration   1: 6097.801 ns/op
Iteration   2: 6041.749 ns/op
Iteration   3: 6064.521 ns/op
Iteration   4: 6097.715 ns/op
Iteration   5: 6068.784 ns/op
Iteration   6: 6121.767 ns/op
Iteration   7: 6046.507 ns/op
Iteration   8: 6059.371 ns/op
Iteration   9: 6105.977 ns/op
Iteration  10: 6060.588 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6135.029 ±(99.9%) 56.546 ns/op [Average]
  (min, avg, max) = (6041.749, 6135.029, 6224.136), stdev = 65.119
  CI (99.9%): [6078.483, 6191.575] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 17.22% complete, ETA 00:59:34
# Fork: 1 of 2
# Warmup Iteration   1: 13476.794 ns/op
# Warmup Iteration   2: 10030.572 ns/op
# Warmup Iteration   3: 8626.650 ns/op
Iteration   1: 8544.218 ns/op
Iteration   2: 8543.693 ns/op
Iteration   3: 8536.554 ns/op
Iteration   4: 8537.179 ns/op
Iteration   5: 8543.378 ns/op
Iteration   6: 8535.971 ns/op
Iteration   7: 8557.818 ns/op
Iteration   8: 8535.686 ns/op
Iteration   9: 8564.352 ns/op
Iteration  10: 8621.966 ns/op

# Run progress: 17.28% complete, ETA 00:59:32
# Fork: 2 of 2
# Warmup Iteration   1: 13578.899 ns/op
# Warmup Iteration   2: 10431.411 ns/op
# Warmup Iteration   3: 8883.836 ns/op
Iteration   1: 8759.498 ns/op
Iteration   2: 8769.739 ns/op
Iteration   3: 8799.426 ns/op
Iteration   4: 8770.681 ns/op
Iteration   5: 8753.639 ns/op
Iteration   6: 8816.932 ns/op
Iteration   7: 8762.279 ns/op
Iteration   8: 8784.847 ns/op
Iteration   9: 8761.090 ns/op
Iteration  10: 8881.361 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8669.015 ±(99.9%) 107.908 ns/op [Average]
  (min, avg, max) = (8535.686, 8669.015, 8881.361), stdev = 124.267
  CI (99.9%): [8561.108, 8776.923] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 17.33% complete, ETA 00:59:29
# Fork: 1 of 2
# Warmup Iteration   1: 38.387 ns/op
# Warmup Iteration   2: 65.589 ns/op
# Warmup Iteration   3: 35.711 ns/op
Iteration   1: 35.727 ns/op
Iteration   2: 35.786 ns/op
Iteration   3: 35.724 ns/op
Iteration   4: 35.715 ns/op
Iteration   5: 35.709 ns/op
Iteration   6: 36.170 ns/op
Iteration   7: 35.755 ns/op
Iteration   8: 34.477 ns/op
Iteration   9: 35.655 ns/op
Iteration  10: 35.646 ns/op

# Run progress: 17.39% complete, ETA 00:59:27
# Fork: 2 of 2
# Warmup Iteration   1: 38.333 ns/op
# Warmup Iteration   2: 72.768 ns/op
# Warmup Iteration   3: 35.688 ns/op
Iteration   1: 35.722 ns/op
Iteration   2: 35.743 ns/op
Iteration   3: 35.687 ns/op
Iteration   4: 35.690 ns/op
Iteration   5: 35.785 ns/op
Iteration   6: 36.225 ns/op
Iteration   7: 35.711 ns/op
Iteration   8: 34.455 ns/op
Iteration   9: 35.681 ns/op
Iteration  10: 35.693 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.638 ±(99.9%) 0.372 ns/op [Average]
  (min, avg, max) = (34.455, 35.638, 36.225), stdev = 0.429
  CI (99.9%): [35.265, 36.010] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 17.44% complete, ETA 00:59:24
# Fork: 1 of 2
# Warmup Iteration   1: 3488.428 ns/op
# Warmup Iteration   2: 3178.337 ns/op
# Warmup Iteration   3: 2709.102 ns/op
Iteration   1: 2703.248 ns/op
Iteration   2: 2701.529 ns/op
Iteration   3: 2704.417 ns/op
Iteration   4: 2701.095 ns/op
Iteration   5: 2701.959 ns/op
Iteration   6: 2712.781 ns/op
Iteration   7: 2701.783 ns/op
Iteration   8: 2685.494 ns/op
Iteration   9: 2693.031 ns/op
Iteration  10: 2668.898 ns/op

# Run progress: 17.50% complete, ETA 00:59:22
# Fork: 2 of 2
# Warmup Iteration   1: 3146.814 ns/op
# Warmup Iteration   2: 2999.381 ns/op
# Warmup Iteration   3: 2540.012 ns/op
Iteration   1: 2561.219 ns/op
Iteration   2: 2554.175 ns/op
Iteration   3: 2557.802 ns/op
Iteration   4: 2551.038 ns/op
Iteration   5: 2539.776 ns/op
Iteration   6: 2553.031 ns/op
Iteration   7: 2541.947 ns/op
Iteration   8: 2550.595 ns/op
Iteration   9: 2539.572 ns/op
Iteration  10: 2549.258 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2623.632 ±(99.9%) 66.300 ns/op [Average]
  (min, avg, max) = (2539.572, 2623.632, 2712.781), stdev = 76.351
  CI (99.9%): [2557.333, 2689.932] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 17.56% complete, ETA 00:59:19
# Fork: 1 of 2
# Warmup Iteration   1: 1910.512 ns/op
# Warmup Iteration   2: 1704.502 ns/op
# Warmup Iteration   3: 1466.805 ns/op
Iteration   1: 1481.940 ns/op
Iteration   2: 1469.840 ns/op
Iteration   3: 1467.453 ns/op
Iteration   4: 1468.216 ns/op
Iteration   5: 1470.669 ns/op
Iteration   6: 1478.936 ns/op
Iteration   7: 1470.313 ns/op
Iteration   8: 1467.830 ns/op
Iteration   9: 1474.999 ns/op
Iteration  10: 1475.113 ns/op

# Run progress: 17.61% complete, ETA 00:59:17
# Fork: 2 of 2
# Warmup Iteration   1: 1895.535 ns/op
# Warmup Iteration   2: 1754.684 ns/op
# Warmup Iteration   3: 1470.152 ns/op
Iteration   1: 1472.632 ns/op
Iteration   2: 1474.762 ns/op
Iteration   3: 1475.600 ns/op
Iteration   4: 1470.628 ns/op
Iteration   5: 1468.621 ns/op
Iteration   6: 1480.974 ns/op
Iteration   7: 1473.845 ns/op
Iteration   8: 1471.173 ns/op
Iteration   9: 1471.730 ns/op
Iteration  10: 1470.140 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1472.771 ±(99.9%) 3.662 ns/op [Average]
  (min, avg, max) = (1467.453, 1472.771, 1481.940), stdev = 4.217
  CI (99.9%): [1469.109, 1476.432] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 17.67% complete, ETA 00:59:15
# Fork: 1 of 2
# Warmup Iteration   1: 2051.754 ns/op
# Warmup Iteration   2: 1668.662 ns/op
# Warmup Iteration   3: 1470.657 ns/op
Iteration   1: 1469.437 ns/op
Iteration   2: 1471.905 ns/op
Iteration   3: 1473.700 ns/op
Iteration   4: 1467.492 ns/op
Iteration   5: 1472.045 ns/op
Iteration   6: 1467.955 ns/op
Iteration   7: 1478.311 ns/op
Iteration   8: 1476.565 ns/op
Iteration   9: 1470.360 ns/op
Iteration  10: 1466.880 ns/op

# Run progress: 17.72% complete, ETA 00:59:12
# Fork: 2 of 2
# Warmup Iteration   1: 2043.993 ns/op
# Warmup Iteration   2: 1709.297 ns/op
# Warmup Iteration   3: 1489.245 ns/op
Iteration   1: 1488.571 ns/op
Iteration   2: 1485.711 ns/op
Iteration   3: 1486.704 ns/op
Iteration   4: 1484.579 ns/op
Iteration   5: 1487.570 ns/op
Iteration   6: 1486.970 ns/op
Iteration   7: 1485.019 ns/op
Iteration   8: 1489.591 ns/op
Iteration   9: 1490.636 ns/op
Iteration  10: 1488.584 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1479.429 ±(99.9%) 7.551 ns/op [Average]
  (min, avg, max) = (1466.880, 1479.429, 1490.636), stdev = 8.696
  CI (99.9%): [1471.878, 1486.980] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 17.78% complete, ETA 00:59:10
# Fork: 1 of 2
# Warmup Iteration   1: 2185.792 ns/op
# Warmup Iteration   2: 1775.073 ns/op
# Warmup Iteration   3: 1560.997 ns/op
Iteration   1: 1563.409 ns/op
Iteration   2: 1569.880 ns/op
Iteration   3: 1561.652 ns/op
Iteration   4: 1571.361 ns/op
Iteration   5: 1560.515 ns/op
Iteration   6: 1585.654 ns/op
Iteration   7: 1560.793 ns/op
Iteration   8: 1562.883 ns/op
Iteration   9: 1559.747 ns/op
Iteration  10: 1559.608 ns/op

# Run progress: 17.83% complete, ETA 00:59:07
# Fork: 2 of 2
# Warmup Iteration   1: 2192.695 ns/op
# Warmup Iteration   2: 1729.741 ns/op
# Warmup Iteration   3: 1535.050 ns/op
Iteration   1: 1528.280 ns/op
Iteration   2: 1532.357 ns/op
Iteration   3: 1537.599 ns/op
Iteration   4: 1545.862 ns/op
Iteration   5: 1535.488 ns/op
Iteration   6: 1540.834 ns/op
Iteration   7: 1528.939 ns/op
Iteration   8: 1529.621 ns/op
Iteration   9: 1526.828 ns/op
Iteration  10: 1528.322 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1549.482 ±(99.9%) 15.594 ns/op [Average]
  (min, avg, max) = (1526.828, 1549.482, 1585.654), stdev = 17.958
  CI (99.9%): [1533.887, 1565.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 17.89% complete, ETA 00:59:05
# Fork: 1 of 2
# Warmup Iteration   1: 13784.598 ns/op
# Warmup Iteration   2: 9022.203 ns/op
# Warmup Iteration   3: 8095.398 ns/op
Iteration   1: 7876.410 ns/op
Iteration   2: 7897.458 ns/op
Iteration   3: 7902.124 ns/op
Iteration   4: 7869.669 ns/op
Iteration   5: 7886.381 ns/op
Iteration   6: 7866.162 ns/op
Iteration   7: 7881.383 ns/op
Iteration   8: 7870.977 ns/op
Iteration   9: 7892.317 ns/op
Iteration  10: 8094.402 ns/op

# Run progress: 17.94% complete, ETA 00:59:03
# Fork: 2 of 2
# Warmup Iteration   1: 13823.189 ns/op
# Warmup Iteration   2: 9243.680 ns/op
# Warmup Iteration   3: 8064.257 ns/op
Iteration   1: 7838.839 ns/op
Iteration   2: 7839.886 ns/op
Iteration   3: 7850.843 ns/op
Iteration   4: 7836.141 ns/op
Iteration   5: 7838.527 ns/op
Iteration   6: 7834.434 ns/op
Iteration   7: 7846.466 ns/op
Iteration   8: 7843.520 ns/op
Iteration   9: 7878.909 ns/op
Iteration  10: 8066.450 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7885.565 ±(99.9%) 61.021 ns/op [Average]
  (min, avg, max) = (7834.434, 7885.565, 8094.402), stdev = 70.271
  CI (99.9%): [7824.544, 7946.586] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 18.00% complete, ETA 00:59:00
# Fork: 1 of 2
# Warmup Iteration   1: 38.059 ns/op
# Warmup Iteration   2: 66.841 ns/op
# Warmup Iteration   3: 35.679 ns/op
Iteration   1: 35.684 ns/op
Iteration   2: 35.661 ns/op
Iteration   3: 35.643 ns/op
Iteration   4: 35.749 ns/op
Iteration   5: 35.667 ns/op
Iteration   6: 36.136 ns/op
Iteration   7: 35.664 ns/op
Iteration   8: 34.433 ns/op
Iteration   9: 35.694 ns/op
Iteration  10: 35.703 ns/op

# Run progress: 18.06% complete, ETA 00:58:58
# Fork: 2 of 2
# Warmup Iteration   1: 37.842 ns/op
# Warmup Iteration   2: 65.928 ns/op
# Warmup Iteration   3: 35.671 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.673 ns/op
Iteration   3: 35.688 ns/op
Iteration   4: 35.641 ns/op
Iteration   5: 35.699 ns/op
Iteration   6: 36.194 ns/op
Iteration   7: 35.747 ns/op
Iteration   8: 34.427 ns/op
Iteration   9: 35.720 ns/op
Iteration  10: 35.681 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.610 ±(99.9%) 0.373 ns/op [Average]
  (min, avg, max) = (34.427, 35.610, 36.194), stdev = 0.430
  CI (99.9%): [35.236, 35.983] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 18.11% complete, ETA 00:58:55
# Fork: 1 of 2
# Warmup Iteration   1: 3324.849 ns/op
# Warmup Iteration   2: 3213.416 ns/op
# Warmup Iteration   3: 2718.328 ns/op
Iteration   1: 2716.930 ns/op
Iteration   2: 2692.445 ns/op
Iteration   3: 2699.531 ns/op
Iteration   4: 2696.490 ns/op
Iteration   5: 2705.861 ns/op
Iteration   6: 2696.203 ns/op
Iteration   7: 2709.602 ns/op
Iteration   8: 2683.684 ns/op
Iteration   9: 2698.473 ns/op
Iteration  10: 2671.262 ns/op

# Run progress: 18.17% complete, ETA 00:58:53
# Fork: 2 of 2
# Warmup Iteration   1: 3306.985 ns/op
# Warmup Iteration   2: 2938.453 ns/op
# Warmup Iteration   3: 2552.320 ns/op
Iteration   1: 2569.957 ns/op
Iteration   2: 2551.562 ns/op
Iteration   3: 2569.784 ns/op
Iteration   4: 2558.574 ns/op
Iteration   5: 2547.902 ns/op
Iteration   6: 2561.196 ns/op
Iteration   7: 2551.087 ns/op
Iteration   8: 2559.963 ns/op
Iteration   9: 2557.066 ns/op
Iteration  10: 2558.109 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2627.784 ±(99.9%) 62.345 ns/op [Average]
  (min, avg, max) = (2547.902, 2627.784, 2716.930), stdev = 71.797
  CI (99.9%): [2565.439, 2690.129] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 18.22% complete, ETA 00:58:50
# Fork: 1 of 2
# Warmup Iteration   1: 1906.323 ns/op
# Warmup Iteration   2: 1676.556 ns/op
# Warmup Iteration   3: 1471.349 ns/op
Iteration   1: 1470.573 ns/op
Iteration   2: 1471.845 ns/op
Iteration   3: 1469.180 ns/op
Iteration   4: 1469.796 ns/op
Iteration   5: 1470.549 ns/op
Iteration   6: 1470.294 ns/op
Iteration   7: 1473.234 ns/op
Iteration   8: 1480.444 ns/op
Iteration   9: 1473.106 ns/op
Iteration  10: 1468.711 ns/op

# Run progress: 18.28% complete, ETA 00:58:48
# Fork: 2 of 2
# Warmup Iteration   1: 2253.707 ns/op
# Warmup Iteration   2: 1677.806 ns/op
# Warmup Iteration   3: 1489.556 ns/op
Iteration   1: 1497.999 ns/op
Iteration   2: 1490.188 ns/op
Iteration   3: 1483.426 ns/op
Iteration   4: 1485.209 ns/op
Iteration   5: 1483.664 ns/op
Iteration   6: 1486.132 ns/op
Iteration   7: 1485.089 ns/op
Iteration   8: 1487.981 ns/op
Iteration   9: 1551.003 ns/op
Iteration  10: 1482.656 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1482.554 ±(99.9%) 15.820 ns/op [Average]
  (min, avg, max) = (1468.711, 1482.554, 1551.003), stdev = 18.218
  CI (99.9%): [1466.734, 1498.374] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 18.33% complete, ETA 00:58:46
# Fork: 1 of 2
# Warmup Iteration   1: 2049.800 ns/op
# Warmup Iteration   2: 1694.303 ns/op
# Warmup Iteration   3: 1490.373 ns/op
Iteration   1: 1492.967 ns/op
Iteration   2: 1484.103 ns/op
Iteration   3: 1486.977 ns/op
Iteration   4: 1495.864 ns/op
Iteration   5: 1490.349 ns/op
Iteration   6: 1518.246 ns/op
Iteration   7: 1498.976 ns/op
Iteration   8: 1495.539 ns/op
Iteration   9: 1488.993 ns/op
Iteration  10: 1515.019 ns/op

# Run progress: 18.39% complete, ETA 00:58:43
# Fork: 2 of 2
# Warmup Iteration   1: 1924.778 ns/op
# Warmup Iteration   2: 1685.645 ns/op
# Warmup Iteration   3: 1485.958 ns/op
Iteration   1: 1491.448 ns/op
Iteration   2: 1484.267 ns/op
Iteration   3: 1485.022 ns/op
Iteration   4: 1484.260 ns/op
Iteration   5: 1485.793 ns/op
Iteration   6: 1483.232 ns/op
Iteration   7: 1490.762 ns/op
Iteration   8: 1490.519 ns/op
Iteration   9: 1487.622 ns/op
Iteration  10: 1487.361 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1491.866 ±(99.9%) 8.270 ns/op [Average]
  (min, avg, max) = (1483.232, 1491.866, 1518.246), stdev = 9.524
  CI (99.9%): [1483.596, 1500.136] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 18.44% complete, ETA 00:58:41
# Fork: 1 of 2
# Warmup Iteration   1: 2183.634 ns/op
# Warmup Iteration   2: 1765.633 ns/op
# Warmup Iteration   3: 1558.157 ns/op
Iteration   1: 1562.357 ns/op
Iteration   2: 1556.071 ns/op
Iteration   3: 1562.429 ns/op
Iteration   4: 1569.121 ns/op
Iteration   5: 1558.246 ns/op
Iteration   6: 1559.922 ns/op
Iteration   7: 1559.731 ns/op
Iteration   8: 1580.812 ns/op
Iteration   9: 1562.450 ns/op
Iteration  10: 1557.290 ns/op

# Run progress: 18.50% complete, ETA 00:58:38
# Fork: 2 of 2
# Warmup Iteration   1: 2227.957 ns/op
# Warmup Iteration   2: 1777.297 ns/op
# Warmup Iteration   3: 1566.539 ns/op
Iteration   1: 1569.302 ns/op
Iteration   2: 1566.058 ns/op
Iteration   3: 1561.937 ns/op
Iteration   4: 1562.787 ns/op
Iteration   5: 1568.119 ns/op
Iteration   6: 1567.826 ns/op
Iteration   7: 1575.996 ns/op
Iteration   8: 1571.152 ns/op
Iteration   9: 1563.486 ns/op
Iteration  10: 1564.585 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1564.984 ±(99.9%) 5.413 ns/op [Average]
  (min, avg, max) = (1556.071, 1564.984, 1580.812), stdev = 6.233
  CI (99.9%): [1559.571, 1570.397] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 18.56% complete, ETA 00:58:36
# Fork: 1 of 2
# Warmup Iteration   1: 13552.553 ns/op
# Warmup Iteration   2: 8983.749 ns/op
# Warmup Iteration   3: 7642.485 ns/op
Iteration   1: 7647.386 ns/op
Iteration   2: 7657.561 ns/op
Iteration   3: 7615.631 ns/op
Iteration   4: 7635.944 ns/op
Iteration   5: 7617.597 ns/op
Iteration   6: 7640.542 ns/op
Iteration   7: 7640.829 ns/op
Iteration   8: 7648.737 ns/op
Iteration   9: 7680.197 ns/op
Iteration  10: 7654.510 ns/op

# Run progress: 18.61% complete, ETA 00:58:34
# Fork: 2 of 2
# Warmup Iteration   1: 12668.869 ns/op
# Warmup Iteration   2: 9100.888 ns/op
# Warmup Iteration   3: 8024.073 ns/op
Iteration   1: 7805.042 ns/op
Iteration   2: 7801.532 ns/op
Iteration   3: 7808.507 ns/op
Iteration   4: 7793.833 ns/op
Iteration   5: 7797.545 ns/op
Iteration   6: 7779.100 ns/op
Iteration   7: 7798.268 ns/op
Iteration   8: 7787.552 ns/op
Iteration   9: 7828.375 ns/op
Iteration  10: 8031.124 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7733.491 ±(99.9%) 92.030 ns/op [Average]
  (min, avg, max) = (7615.631, 7733.491, 8031.124), stdev = 105.982
  CI (99.9%): [7641.460, 7825.521] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 18.67% complete, ETA 00:58:31
# Fork: 1 of 2
# Warmup Iteration   1: 38.124 ns/op
# Warmup Iteration   2: 65.194 ns/op
# Warmup Iteration   3: 35.699 ns/op
Iteration   1: 35.725 ns/op
Iteration   2: 35.667 ns/op
Iteration   3: 35.726 ns/op
Iteration   4: 35.652 ns/op
Iteration   5: 35.690 ns/op
Iteration   6: 36.174 ns/op
Iteration   7: 35.663 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.688 ns/op
Iteration  10: 35.680 ns/op

# Run progress: 18.72% complete, ETA 00:58:29
# Fork: 2 of 2
# Warmup Iteration   1: 38.600 ns/op
# Warmup Iteration   2: 66.311 ns/op
# Warmup Iteration   3: 35.643 ns/op
Iteration   1: 35.742 ns/op
Iteration   2: 35.671 ns/op
Iteration   3: 35.663 ns/op
Iteration   4: 35.669 ns/op
Iteration   5: 35.697 ns/op
Iteration   6: 36.154 ns/op
Iteration   7: 35.718 ns/op
Iteration   8: 34.428 ns/op
Iteration   9: 35.701 ns/op
Iteration  10: 35.670 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.615 ±(99.9%) 0.363 ns/op [Average]
  (min, avg, max) = (34.428, 35.615, 36.174), stdev = 0.418
  CI (99.9%): [35.252, 35.978] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 18.78% complete, ETA 00:58:26
# Fork: 1 of 2
# Warmup Iteration   1: 3250.507 ns/op
# Warmup Iteration   2: 2977.584 ns/op
# Warmup Iteration   3: 2533.810 ns/op
Iteration   1: 2551.526 ns/op
Iteration   2: 2532.093 ns/op
Iteration   3: 2550.065 ns/op
Iteration   4: 2537.224 ns/op
Iteration   5: 2528.757 ns/op
Iteration   6: 2540.731 ns/op
Iteration   7: 2536.644 ns/op
Iteration   8: 2543.901 ns/op
Iteration   9: 2533.131 ns/op
Iteration  10: 2537.061 ns/op

# Run progress: 18.83% complete, ETA 00:58:24
# Fork: 2 of 2
# Warmup Iteration   1: 3116.252 ns/op
# Warmup Iteration   2: 3014.570 ns/op
# Warmup Iteration   3: 2539.653 ns/op
Iteration   1: 2765.079 ns/op
Iteration   2: 2548.612 ns/op
Iteration   3: 2571.919 ns/op
Iteration   4: 2546.536 ns/op
Iteration   5: 2542.881 ns/op
Iteration   6: 2570.733 ns/op
Iteration   7: 2539.001 ns/op
Iteration   8: 2553.206 ns/op
Iteration   9: 2545.133 ns/op
Iteration  10: 2549.441 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2556.184 ±(99.9%) 43.789 ns/op [Average]
  (min, avg, max) = (2528.757, 2556.184, 2765.079), stdev = 50.427
  CI (99.9%): [2512.395, 2599.973] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 18.89% complete, ETA 00:58:22
# Fork: 1 of 2
# Warmup Iteration   1: 2051.808 ns/op
# Warmup Iteration   2: 1738.477 ns/op
# Warmup Iteration   3: 1497.421 ns/op
Iteration   1: 2052.471 ns/op
Iteration   2: 1498.054 ns/op
Iteration   3: 1500.380 ns/op
Iteration   4: 1495.710 ns/op
Iteration   5: 1497.161 ns/op
Iteration   6: 1501.307 ns/op
Iteration   7: 1493.066 ns/op
Iteration   8: 1498.435 ns/op
Iteration   9: 1495.084 ns/op
Iteration  10: 1494.200 ns/op

# Run progress: 18.94% complete, ETA 00:58:19
# Fork: 2 of 2
# Warmup Iteration   1: 1943.699 ns/op
# Warmup Iteration   2: 1700.795 ns/op
# Warmup Iteration   3: 1504.269 ns/op
Iteration   1: 1949.770 ns/op
Iteration   2: 1498.735 ns/op
Iteration   3: 1498.936 ns/op
Iteration   4: 1498.166 ns/op
Iteration   5: 1497.218 ns/op
Iteration   6: 1494.595 ns/op
Iteration   7: 1497.348 ns/op
Iteration   8: 1498.731 ns/op
Iteration   9: 1500.773 ns/op
Iteration  10: 1501.438 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1548.079 ±(99.9%) 135.331 ns/op [Average]
  (min, avg, max) = (1493.066, 1548.079, 2052.471), stdev = 155.848
  CI (99.9%): [1412.748, 1683.410] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 19.00% complete, ETA 00:58:17
# Fork: 1 of 2
# Warmup Iteration   1: 1935.391 ns/op
# Warmup Iteration   2: 1768.019 ns/op
# Warmup Iteration   3: 1497.473 ns/op
Iteration   1: 1500.656 ns/op
Iteration   2: 1495.625 ns/op
Iteration   3: 1495.455 ns/op
Iteration   4: 1498.172 ns/op
Iteration   5: 1495.781 ns/op
Iteration   6: 1497.257 ns/op
Iteration   7: 1500.186 ns/op
Iteration   8: 1504.317 ns/op
Iteration   9: 1496.836 ns/op
Iteration  10: 1494.317 ns/op

# Run progress: 19.06% complete, ETA 00:58:14
# Fork: 2 of 2
# Warmup Iteration   1: 1943.892 ns/op
# Warmup Iteration   2: 1701.001 ns/op
# Warmup Iteration   3: 1495.785 ns/op
Iteration   1: 1502.241 ns/op
Iteration   2: 1494.681 ns/op
Iteration   3: 1500.375 ns/op
Iteration   4: 1500.600 ns/op
Iteration   5: 1507.318 ns/op
Iteration   6: 1500.079 ns/op
Iteration   7: 1515.416 ns/op
Iteration   8: 1499.244 ns/op
Iteration   9: 1499.599 ns/op
Iteration  10: 1498.044 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1499.810 ±(99.9%) 4.267 ns/op [Average]
  (min, avg, max) = (1494.317, 1499.810, 1515.416), stdev = 4.914
  CI (99.9%): [1495.543, 1504.077] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 19.11% complete, ETA 00:58:12
# Fork: 1 of 2
# Warmup Iteration   1: 2368.578 ns/op
# Warmup Iteration   2: 1968.789 ns/op
# Warmup Iteration   3: 1682.148 ns/op
Iteration   1: 1682.637 ns/op
Iteration   2: 1683.444 ns/op
Iteration   3: 1682.285 ns/op
Iteration   4: 1682.701 ns/op
Iteration   5: 1684.994 ns/op
Iteration   6: 1682.792 ns/op
Iteration   7: 1682.774 ns/op
Iteration   8: 1684.296 ns/op
Iteration   9: 1681.875 ns/op
Iteration  10: 1681.333 ns/op

# Run progress: 19.17% complete, ETA 00:58:10
# Fork: 2 of 2
# Warmup Iteration   1: 1973.596 ns/op
# Warmup Iteration   2: 1549.413 ns/op
# Warmup Iteration   3: 1377.822 ns/op
Iteration   1: 1382.993 ns/op
Iteration   2: 1408.318 ns/op
Iteration   3: 1386.267 ns/op
Iteration   4: 1412.128 ns/op
Iteration   5: 1393.749 ns/op
Iteration   6: 1374.324 ns/op
Iteration   7: 1392.470 ns/op
Iteration   8: 1401.160 ns/op
Iteration   9: 1384.374 ns/op
Iteration  10: 1388.824 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1537.687 ±(99.9%) 129.577 ns/op [Average]
  (min, avg, max) = (1374.324, 1537.687, 1684.994), stdev = 149.222
  CI (99.9%): [1408.109, 1667.264] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 19.22% complete, ETA 00:58:07
# Fork: 1 of 2
# Warmup Iteration   1: 12024.207 ns/op
# Warmup Iteration   2: 9194.674 ns/op
# Warmup Iteration   3: 7869.485 ns/op
Iteration   1: 7876.414 ns/op
Iteration   2: 7874.859 ns/op
Iteration   3: 7875.580 ns/op
Iteration   4: 7871.753 ns/op
Iteration   5: 7879.071 ns/op
Iteration   6: 7872.730 ns/op
Iteration   7: 7882.043 ns/op
Iteration   8: 7870.313 ns/op
Iteration   9: 7913.145 ns/op
Iteration  10: 7886.026 ns/op

# Run progress: 19.28% complete, ETA 00:58:05
# Fork: 2 of 2
# Warmup Iteration   1: 13461.791 ns/op
# Warmup Iteration   2: 9260.586 ns/op
# Warmup Iteration   3: 8090.794 ns/op
Iteration   1: 7912.859 ns/op
Iteration   2: 7919.030 ns/op
Iteration   3: 7921.927 ns/op
Iteration   4: 7901.766 ns/op
Iteration   5: 7927.279 ns/op
Iteration   6: 7910.439 ns/op
Iteration   7: 7920.215 ns/op
Iteration   8: 7900.778 ns/op
Iteration   9: 7939.446 ns/op
Iteration  10: 8085.206 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7907.044 ±(99.9%) 41.057 ns/op [Average]
  (min, avg, max) = (7870.313, 7907.044, 8085.206), stdev = 47.281
  CI (99.9%): [7865.987, 7948.101] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 19.33% complete, ETA 00:58:02
# Fork: 1 of 2
# Warmup Iteration   1: 51.991 ns/op
# Warmup Iteration   2: 63.926 ns/op
# Warmup Iteration   3: 35.686 ns/op
Iteration   1: 35.607 ns/op
Iteration   2: 35.653 ns/op
Iteration   3: 35.647 ns/op
Iteration   4: 35.650 ns/op
Iteration   5: 35.688 ns/op
Iteration   6: 36.170 ns/op
Iteration   7: 35.646 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.692 ns/op
Iteration  10: 35.654 ns/op

# Run progress: 19.39% complete, ETA 00:58:00
# Fork: 2 of 2
# Warmup Iteration   1: 38.307 ns/op
# Warmup Iteration   2: 66.396 ns/op
# Warmup Iteration   3: 35.727 ns/op
Iteration   1: 35.664 ns/op
Iteration   2: 35.732 ns/op
Iteration   3: 35.729 ns/op
Iteration   4: 35.716 ns/op
Iteration   5: 35.728 ns/op
Iteration   6: 36.148 ns/op
Iteration   7: 35.673 ns/op
Iteration   8: 34.429 ns/op
Iteration   9: 35.720 ns/op
Iteration  10: 35.683 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.607 ±(99.9%) 0.362 ns/op [Average]
  (min, avg, max) = (34.429, 35.607, 36.170), stdev = 0.417
  CI (99.9%): [35.245, 35.969] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 19.44% complete, ETA 00:57:57
# Fork: 1 of 2
# Warmup Iteration   1: 4245.878 ns/op
# Warmup Iteration   2: 2974.490 ns/op
# Warmup Iteration   3: 2500.921 ns/op
Iteration   1: 2495.170 ns/op
Iteration   2: 2504.142 ns/op
Iteration   3: 2501.199 ns/op
Iteration   4: 2500.613 ns/op
Iteration   5: 2509.305 ns/op
Iteration   6: 2499.912 ns/op
Iteration   7: 2491.484 ns/op
Iteration   8: 2514.434 ns/op
Iteration   9: 2505.326 ns/op
Iteration  10: 2492.169 ns/op

# Run progress: 19.50% complete, ETA 00:57:55
# Fork: 2 of 2
# Warmup Iteration   1: 4654.276 ns/op
# Warmup Iteration   2: 2953.178 ns/op
# Warmup Iteration   3: 2545.419 ns/op
Iteration   1: 2548.440 ns/op
Iteration   2: 2545.389 ns/op
Iteration   3: 2547.048 ns/op
Iteration   4: 2552.324 ns/op
Iteration   5: 2547.934 ns/op
Iteration   6: 2547.313 ns/op
Iteration   7: 2546.044 ns/op
Iteration   8: 2550.166 ns/op
Iteration   9: 2545.624 ns/op
Iteration  10: 2547.343 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2524.569 ±(99.9%) 21.159 ns/op [Average]
  (min, avg, max) = (2491.484, 2524.569, 2552.324), stdev = 24.366
  CI (99.9%): [2503.410, 2545.727] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 19.56% complete, ETA 00:57:53
# Fork: 1 of 2
# Warmup Iteration   1: 2006.498 ns/op
# Warmup Iteration   2: 1433.392 ns/op
# Warmup Iteration   3: 1237.525 ns/op
Iteration   1: 1236.195 ns/op
Iteration   2: 1235.246 ns/op
Iteration   3: 1234.578 ns/op
Iteration   4: 1239.450 ns/op
Iteration   5: 1235.374 ns/op
Iteration   6: 1239.145 ns/op
Iteration   7: 1235.476 ns/op
Iteration   8: 1237.596 ns/op
Iteration   9: 1234.955 ns/op
Iteration  10: 1234.394 ns/op

# Run progress: 19.61% complete, ETA 00:57:50
# Fork: 2 of 2
# Warmup Iteration   1: 2147.388 ns/op
# Warmup Iteration   2: 1419.164 ns/op
# Warmup Iteration   3: 1234.887 ns/op
Iteration   1: 1235.872 ns/op
Iteration   2: 1237.085 ns/op
Iteration   3: 1235.229 ns/op
Iteration   4: 1234.937 ns/op
Iteration   5: 1239.797 ns/op
Iteration   6: 1239.021 ns/op
Iteration   7: 1239.259 ns/op
Iteration   8: 1238.522 ns/op
Iteration   9: 1241.334 ns/op
Iteration  10: 1235.256 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1236.936 ±(99.9%) 1.850 ns/op [Average]
  (min, avg, max) = (1234.394, 1236.936, 1241.334), stdev = 2.130
  CI (99.9%): [1235.086, 1238.786] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 19.67% complete, ETA 00:57:48
# Fork: 1 of 2
# Warmup Iteration   1: 2379.254 ns/op
# Warmup Iteration   2: 1423.579 ns/op
# Warmup Iteration   3: 1252.893 ns/op
Iteration   1: 1252.241 ns/op
Iteration   2: 1251.793 ns/op
Iteration   3: 1253.211 ns/op
Iteration   4: 1257.966 ns/op
Iteration   5: 1255.388 ns/op
Iteration   6: 1258.746 ns/op
Iteration   7: 1254.810 ns/op
Iteration   8: 1256.694 ns/op
Iteration   9: 1254.624 ns/op
Iteration  10: 1254.781 ns/op

# Run progress: 19.72% complete, ETA 00:57:45
# Fork: 2 of 2
# Warmup Iteration   1: 2051.552 ns/op
# Warmup Iteration   2: 1419.930 ns/op
# Warmup Iteration   3: 1249.259 ns/op
Iteration   1: 1247.500 ns/op
Iteration   2: 1248.496 ns/op
Iteration   3: 1235.460 ns/op
Iteration   4: 1251.777 ns/op
Iteration   5: 1256.860 ns/op
Iteration   6: 1257.717 ns/op
Iteration   7: 1252.773 ns/op
Iteration   8: 1253.528 ns/op
Iteration   9: 1246.611 ns/op
Iteration  10: 1253.678 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1252.733 ±(99.9%) 4.565 ns/op [Average]
  (min, avg, max) = (1235.460, 1252.733, 1258.746), stdev = 5.258
  CI (99.9%): [1248.167, 1257.298] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 19.78% complete, ETA 00:57:43
# Fork: 1 of 2
# Warmup Iteration   1: 2075.753 ns/op
# Warmup Iteration   2: 1623.465 ns/op
# Warmup Iteration   3: 1402.973 ns/op
Iteration   1: 1403.771 ns/op
Iteration   2: 1403.436 ns/op
Iteration   3: 1403.178 ns/op
Iteration   4: 1403.897 ns/op
Iteration   5: 1403.225 ns/op
Iteration   6: 1403.477 ns/op
Iteration   7: 1402.738 ns/op
Iteration   8: 1406.495 ns/op
Iteration   9: 1402.983 ns/op
Iteration  10: 1403.333 ns/op

# Run progress: 19.83% complete, ETA 00:57:41
# Fork: 2 of 2
# Warmup Iteration   1: 2192.203 ns/op
# Warmup Iteration   2: 1513.878 ns/op
# Warmup Iteration   3: 1332.388 ns/op
Iteration   1: 1334.094 ns/op
Iteration   2: 1332.406 ns/op
Iteration   3: 1333.702 ns/op
Iteration   4: 1333.723 ns/op
Iteration   5: 1333.170 ns/op
Iteration   6: 1333.699 ns/op
Iteration   7: 1336.201 ns/op
Iteration   8: 1337.962 ns/op
Iteration   9: 1333.342 ns/op
Iteration  10: 1333.026 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1368.893 ±(99.9%) 30.991 ns/op [Average]
  (min, avg, max) = (1332.406, 1368.893, 1406.495), stdev = 35.689
  CI (99.9%): [1337.902, 1399.884] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 19.89% complete, ETA 00:57:38
# Fork: 1 of 2
# Warmup Iteration   1: 15649.126 ns/op
# Warmup Iteration   2: 18522.883 ns/op
# Warmup Iteration   3: 9092.370 ns/op
Iteration   1: 9048.598 ns/op
Iteration   2: 8995.112 ns/op
Iteration   3: 8885.542 ns/op
Iteration   4: 9103.631 ns/op
Iteration   5: 9134.738 ns/op
Iteration   6: 9109.107 ns/op
Iteration   7: 9214.736 ns/op
Iteration   8: 9073.442 ns/op
Iteration   9: 9143.166 ns/op
Iteration  10: 9088.399 ns/op

# Run progress: 19.94% complete, ETA 00:57:36
# Fork: 2 of 2
# Warmup Iteration   1: 14491.116 ns/op
# Warmup Iteration   2: 17409.291 ns/op
# Warmup Iteration   3: 8954.794 ns/op
Iteration   1: 8858.027 ns/op
Iteration   2: 8839.876 ns/op
Iteration   3: 8664.171 ns/op
Iteration   4: 8906.090 ns/op
Iteration   5: 8901.976 ns/op
Iteration   6: 8914.897 ns/op
Iteration   7: 8903.392 ns/op
Iteration   8: 8896.087 ns/op
Iteration   9: 8940.242 ns/op
Iteration  10: 8971.559 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8979.639 ±(99.9%) 115.573 ns/op [Average]
  (min, avg, max) = (8664.171, 8979.639, 9214.736), stdev = 133.094
  CI (99.9%): [8864.066, 9095.213] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 20.00% complete, ETA 00:57:33
# Fork: 1 of 2
# Warmup Iteration   1: 38.686 ns/op
# Warmup Iteration   2: 66.239 ns/op
# Warmup Iteration   3: 35.674 ns/op
Iteration   1: 35.636 ns/op
Iteration   2: 35.698 ns/op
Iteration   3: 35.797 ns/op
Iteration   4: 35.669 ns/op
Iteration   5: 35.718 ns/op
Iteration   6: 36.176 ns/op
Iteration   7: 35.698 ns/op
Iteration   8: 34.442 ns/op
Iteration   9: 35.680 ns/op
Iteration  10: 36.060 ns/op

# Run progress: 20.06% complete, ETA 00:57:31
# Fork: 2 of 2
# Warmup Iteration   1: 37.887 ns/op
# Warmup Iteration   2: 65.827 ns/op
# Warmup Iteration   3: 35.661 ns/op
Iteration   1: 35.744 ns/op
Iteration   2: 35.761 ns/op
Iteration   3: 35.648 ns/op
Iteration   4: 35.738 ns/op
Iteration   5: 35.788 ns/op
Iteration   6: 36.160 ns/op
Iteration   7: 35.740 ns/op
Iteration   8: 34.465 ns/op
Iteration   9: 35.631 ns/op
Iteration  10: 35.684 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.647 ±(99.9%) 0.381 ns/op [Average]
  (min, avg, max) = (34.442, 35.647, 36.176), stdev = 0.439
  CI (99.9%): [35.266, 36.028] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 20.11% complete, ETA 00:57:29
# Fork: 1 of 2
# Warmup Iteration   1: 4325.168 ns/op
# Warmup Iteration   2: 3625.945 ns/op
# Warmup Iteration   3: 3103.926 ns/op
Iteration   1: 3102.493 ns/op
Iteration   2: 3104.741 ns/op
Iteration   3: 3103.212 ns/op
Iteration   4: 3088.645 ns/op
Iteration   5: 3103.069 ns/op
Iteration   6: 3094.398 ns/op
Iteration   7: 3101.277 ns/op
Iteration   8: 3103.375 ns/op
Iteration   9: 3088.994 ns/op
Iteration  10: 3088.175 ns/op

# Run progress: 20.17% complete, ETA 00:57:26
# Fork: 2 of 2
# Warmup Iteration   1: 4410.940 ns/op
# Warmup Iteration   2: 3569.666 ns/op
# Warmup Iteration   3: 3103.642 ns/op
Iteration   1: 3100.335 ns/op
Iteration   2: 3106.667 ns/op
Iteration   3: 3098.458 ns/op
Iteration   4: 3088.807 ns/op
Iteration   5: 3103.755 ns/op
Iteration   6: 3089.956 ns/op
Iteration   7: 3098.136 ns/op
Iteration   8: 3092.104 ns/op
Iteration   9: 3089.147 ns/op
Iteration  10: 3086.898 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3096.632 ±(99.9%) 5.971 ns/op [Average]
  (min, avg, max) = (3086.898, 3096.632, 3106.667), stdev = 6.876
  CI (99.9%): [3090.661, 3102.603] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 20.22% complete, ETA 00:57:24
# Fork: 1 of 2
# Warmup Iteration   1: 14342.110 ns/op
# Warmup Iteration   2: 7454.538 ns/op
# Warmup Iteration   3: 6502.903 ns/op
Iteration   1: 6549.706 ns/op
Iteration   2: 6490.660 ns/op
Iteration   3: 6517.725 ns/op
Iteration   4: 6518.318 ns/op
Iteration   5: 6511.312 ns/op
Iteration   6: 6581.328 ns/op
Iteration   7: 6540.321 ns/op
Iteration   8: 6510.405 ns/op
Iteration   9: 6506.365 ns/op
Iteration  10: 6519.639 ns/op

# Run progress: 20.28% complete, ETA 00:57:21
# Fork: 2 of 2
# Warmup Iteration   1: 19843.895 ns/op
# Warmup Iteration   2: 7987.416 ns/op
# Warmup Iteration   3: 6503.669 ns/op
Iteration   1: 6502.170 ns/op
Iteration   2: 6469.570 ns/op
Iteration   3: 6495.190 ns/op
Iteration   4: 6493.004 ns/op
Iteration   5: 6486.434 ns/op
Iteration   6: 6506.095 ns/op
Iteration   7: 6500.796 ns/op
Iteration   8: 6510.989 ns/op
Iteration   9: 6487.024 ns/op
Iteration  10: 6506.300 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6510.168 ±(99.9%) 21.452 ns/op [Average]
  (min, avg, max) = (6469.570, 6510.168, 6581.328), stdev = 24.705
  CI (99.9%): [6488.715, 6531.620] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 20.33% complete, ETA 00:57:19
# Fork: 1 of 2
# Warmup Iteration   1: 15978.082 ns/op
# Warmup Iteration   2: 7409.766 ns/op
# Warmup Iteration   3: 6446.074 ns/op
Iteration   1: 6448.986 ns/op
Iteration   2: 6443.459 ns/op
Iteration   3: 6444.900 ns/op
Iteration   4: 6441.400 ns/op
Iteration   5: 6470.062 ns/op
Iteration   6: 6445.198 ns/op
Iteration   7: 6438.508 ns/op
Iteration   8: 6449.877 ns/op
Iteration   9: 6437.668 ns/op
Iteration  10: 6440.835 ns/op

# Run progress: 20.39% complete, ETA 00:57:16
# Fork: 2 of 2
# Warmup Iteration   1: 17497.034 ns/op
# Warmup Iteration   2: 7313.454 ns/op
# Warmup Iteration   3: 6465.643 ns/op
Iteration   1: 6466.973 ns/op
Iteration   2: 6481.987 ns/op
Iteration   3: 6465.825 ns/op
Iteration   4: 6474.424 ns/op
Iteration   5: 6471.351 ns/op
Iteration   6: 6474.864 ns/op
Iteration   7: 6474.132 ns/op
Iteration   8: 6469.563 ns/op
Iteration   9: 6477.785 ns/op
Iteration  10: 6487.553 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6460.267 ±(99.9%) 14.377 ns/op [Average]
  (min, avg, max) = (6437.668, 6460.267, 6487.553), stdev = 16.557
  CI (99.9%): [6445.890, 6474.645] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 20.44% complete, ETA 00:57:14
# Fork: 1 of 2
# Warmup Iteration   1: 9915.652 ns/op
# Warmup Iteration   2: 6022.559 ns/op
# Warmup Iteration   3: 5401.642 ns/op
Iteration   1: 5471.233 ns/op
Iteration   2: 5374.333 ns/op
Iteration   3: 5370.886 ns/op
Iteration   4: 5365.568 ns/op
Iteration   5: 5392.147 ns/op
Iteration   6: 5386.480 ns/op
Iteration   7: 5428.400 ns/op
Iteration   8: 5395.705 ns/op
Iteration   9: 5364.216 ns/op
Iteration  10: 5384.933 ns/op

# Run progress: 20.50% complete, ETA 00:57:12
# Fork: 2 of 2
# Warmup Iteration   1: 8342.278 ns/op
# Warmup Iteration   2: 6072.866 ns/op
# Warmup Iteration   3: 5463.864 ns/op
Iteration   1: 5446.580 ns/op
Iteration   2: 5414.169 ns/op
Iteration   3: 5447.204 ns/op
Iteration   4: 5430.149 ns/op
Iteration   5: 5418.310 ns/op
Iteration   6: 5408.197 ns/op
Iteration   7: 5409.485 ns/op
Iteration   8: 5413.161 ns/op
Iteration   9: 5473.159 ns/op
Iteration  10: 5393.384 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5409.385 ±(99.9%) 28.279 ns/op [Average]
  (min, avg, max) = (5364.216, 5409.385, 5473.159), stdev = 32.566
  CI (99.9%): [5381.106, 5437.664] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 20.56% complete, ETA 00:57:09
# Fork: 1 of 2
# Warmup Iteration   1: 4779.642 ns/op
# Warmup Iteration   2: 3827.276 ns/op
# Warmup Iteration   3: 3224.405 ns/op
Iteration   1: 3223.422 ns/op
Iteration   2: 3222.023 ns/op
Iteration   3: 3231.810 ns/op
Iteration   4: 3228.787 ns/op
Iteration   5: 3218.895 ns/op
Iteration   6: 3227.077 ns/op
Iteration   7: 3226.528 ns/op
Iteration   8: 3224.426 ns/op
Iteration   9: 3232.651 ns/op
Iteration  10: 3224.596 ns/op

# Run progress: 20.61% complete, ETA 00:57:07
# Fork: 2 of 2
# Warmup Iteration   1: 4788.848 ns/op
# Warmup Iteration   2: 3647.931 ns/op
# Warmup Iteration   3: 3222.208 ns/op
Iteration   1: 3221.574 ns/op
Iteration   2: 3223.099 ns/op
Iteration   3: 3221.509 ns/op
Iteration   4: 3222.213 ns/op
Iteration   5: 3219.150 ns/op
Iteration   6: 3221.544 ns/op
Iteration   7: 3221.536 ns/op
Iteration   8: 3222.320 ns/op
Iteration   9: 3220.758 ns/op
Iteration  10: 3258.297 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3225.611 ±(99.9%) 7.440 ns/op [Average]
  (min, avg, max) = (3218.895, 3225.611, 3258.297), stdev = 8.568
  CI (99.9%): [3218.171, 3233.051] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 20.67% complete, ETA 00:57:04
# Fork: 1 of 2
# Warmup Iteration   1: 38.629 ns/op
# Warmup Iteration   2: 65.259 ns/op
# Warmup Iteration   3: 35.761 ns/op
Iteration   1: 35.721 ns/op
Iteration   2: 35.711 ns/op
Iteration   3: 35.724 ns/op
Iteration   4: 35.712 ns/op
Iteration   5: 35.760 ns/op
Iteration   6: 36.222 ns/op
Iteration   7: 35.707 ns/op
Iteration   8: 34.516 ns/op
Iteration   9: 35.744 ns/op
Iteration  10: 35.637 ns/op

# Run progress: 20.72% complete, ETA 00:57:02
# Fork: 2 of 2
# Warmup Iteration   1: 38.339 ns/op
# Warmup Iteration   2: 66.637 ns/op
# Warmup Iteration   3: 35.692 ns/op
Iteration   1: 35.754 ns/op
Iteration   2: 35.703 ns/op
Iteration   3: 35.725 ns/op
Iteration   4: 35.746 ns/op
Iteration   5: 35.667 ns/op
Iteration   6: 36.184 ns/op
Iteration   7: 35.696 ns/op
Iteration   8: 34.430 ns/op
Iteration   9: 35.710 ns/op
Iteration  10: 35.646 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.636 ±(99.9%) 0.371 ns/op [Average]
  (min, avg, max) = (34.430, 35.636, 36.222), stdev = 0.427
  CI (99.9%): [35.265, 36.006] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 20.78% complete, ETA 00:56:59
# Fork: 1 of 2
# Warmup Iteration   1: 2232.248 ns/op
# Warmup Iteration   2: 2017.748 ns/op
# Warmup Iteration   3: 1748.819 ns/op
Iteration   1: 1748.637 ns/op
Iteration   2: 1765.261 ns/op
Iteration   3: 1745.087 ns/op
Iteration   4: 1763.368 ns/op
Iteration   5: 1748.951 ns/op
Iteration   6: 1743.376 ns/op
Iteration   7: 1785.508 ns/op
Iteration   8: 1785.290 ns/op
Iteration   9: 1755.010 ns/op
Iteration  10: 1757.009 ns/op

# Run progress: 20.83% complete, ETA 00:56:57
# Fork: 2 of 2
# Warmup Iteration   1: 2348.411 ns/op
# Warmup Iteration   2: 1993.928 ns/op
# Warmup Iteration   3: 1742.609 ns/op
Iteration   1: 1763.087 ns/op
Iteration   2: 1758.544 ns/op
Iteration   3: 1745.868 ns/op
Iteration   4: 1740.881 ns/op
Iteration   5: 1740.738 ns/op
Iteration   6: 1768.063 ns/op
Iteration   7: 1748.812 ns/op
Iteration   8: 1769.601 ns/op
Iteration   9: 1741.203 ns/op
Iteration  10: 1757.501 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1756.590 ±(99.9%) 11.736 ns/op [Average]
  (min, avg, max) = (1740.738, 1756.590, 1785.508), stdev = 13.515
  CI (99.9%): [1744.854, 1768.325] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 20.89% complete, ETA 00:56:55
# Fork: 1 of 2
# Warmup Iteration   1: 3168.546 ns/op
# Warmup Iteration   2: 1355.844 ns/op
# Warmup Iteration   3: 1147.951 ns/op
Iteration   1: 1148.135 ns/op
Iteration   2: 1148.942 ns/op
Iteration   3: 1145.429 ns/op
Iteration   4: 1148.359 ns/op
Iteration   5: 1154.107 ns/op
Iteration   6: 1151.546 ns/op
Iteration   7: 1148.014 ns/op
Iteration   8: 1152.166 ns/op
Iteration   9: 1145.776 ns/op
Iteration  10: 1147.179 ns/op

# Run progress: 20.94% complete, ETA 00:56:52
# Fork: 2 of 2
# Warmup Iteration   1: 1784.361 ns/op
# Warmup Iteration   2: 1228.285 ns/op
# Warmup Iteration   3: 1064.172 ns/op
Iteration   1: 1078.605 ns/op
Iteration   2: 1061.588 ns/op
Iteration   3: 1062.073 ns/op
Iteration   4: 1061.674 ns/op
Iteration   5: 1065.539 ns/op
Iteration   6: 1062.034 ns/op
Iteration   7: 1063.738 ns/op
Iteration   8: 1071.807 ns/op
Iteration   9: 1065.657 ns/op
Iteration  10: 1063.363 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1107.286 ±(99.9%) 37.316 ns/op [Average]
  (min, avg, max) = (1061.588, 1107.286, 1154.107), stdev = 42.973
  CI (99.9%): [1069.971, 1144.602] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 21.00% complete, ETA 00:56:50
# Fork: 1 of 2
# Warmup Iteration   1: 1941.055 ns/op
# Warmup Iteration   2: 1339.617 ns/op
# Warmup Iteration   3: 1137.619 ns/op
Iteration   1: 1141.950 ns/op
Iteration   2: 1141.494 ns/op
Iteration   3: 1137.357 ns/op
Iteration   4: 1138.968 ns/op
Iteration   5: 1141.421 ns/op
Iteration   6: 1140.370 ns/op
Iteration   7: 1146.015 ns/op
Iteration   8: 1132.261 ns/op
Iteration   9: 1137.681 ns/op
Iteration  10: 1145.676 ns/op

# Run progress: 21.06% complete, ETA 00:56:47
# Fork: 2 of 2
# Warmup Iteration   1: 1852.963 ns/op
# Warmup Iteration   2: 1219.499 ns/op
# Warmup Iteration   3: 1083.500 ns/op
Iteration   1: 1117.872 ns/op
Iteration   2: 1091.862 ns/op
Iteration   3: 1089.019 ns/op
Iteration   4: 1089.877 ns/op
Iteration   5: 1083.945 ns/op
Iteration   6: 1102.447 ns/op
Iteration   7: 1092.214 ns/op
Iteration   8: 1091.011 ns/op
Iteration   9: 1088.007 ns/op
Iteration  10: 1085.234 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1116.734 ±(99.9%) 21.986 ns/op [Average]
  (min, avg, max) = (1083.945, 1116.734, 1146.015), stdev = 25.319
  CI (99.9%): [1094.748, 1138.720] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 21.11% complete, ETA 00:56:45
# Fork: 1 of 2
# Warmup Iteration   1: 2089.553 ns/op
# Warmup Iteration   2: 1679.628 ns/op
# Warmup Iteration   3: 1471.693 ns/op
Iteration   1: 1471.302 ns/op
Iteration   2: 1470.690 ns/op
Iteration   3: 1471.643 ns/op
Iteration   4: 1470.890 ns/op
Iteration   5: 1471.006 ns/op
Iteration   6: 1470.544 ns/op
Iteration   7: 1470.742 ns/op
Iteration   8: 1474.575 ns/op
Iteration   9: 1471.355 ns/op
Iteration  10: 1472.309 ns/op

# Run progress: 21.17% complete, ETA 00:56:43
# Fork: 2 of 2
# Warmup Iteration   1: 2192.864 ns/op
# Warmup Iteration   2: 1666.439 ns/op
# Warmup Iteration   3: 1470.354 ns/op
Iteration   1: 1471.013 ns/op
Iteration   2: 1470.571 ns/op
Iteration   3: 1472.035 ns/op
Iteration   4: 1471.177 ns/op
Iteration   5: 1470.649 ns/op
Iteration   6: 1471.075 ns/op
Iteration   7: 1470.754 ns/op
Iteration   8: 1473.222 ns/op
Iteration   9: 1470.626 ns/op
Iteration  10: 1470.710 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1471.344 ±(99.9%) 0.886 ns/op [Average]
  (min, avg, max) = (1470.544, 1471.344, 1474.575), stdev = 1.020
  CI (99.9%): [1470.459, 1472.230] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 21.22% complete, ETA 00:56:40
# Fork: 1 of 2
# Warmup Iteration   1: 13418.371 ns/op
# Warmup Iteration   2: 9388.680 ns/op
# Warmup Iteration   3: 7999.737 ns/op
Iteration   1: 7989.961 ns/op
Iteration   2: 7981.979 ns/op
Iteration   3: 7987.762 ns/op
Iteration   4: 7985.972 ns/op
Iteration   5: 7984.701 ns/op
Iteration   6: 7969.755 ns/op
Iteration   7: 7987.230 ns/op
Iteration   8: 7969.287 ns/op
Iteration   9: 7998.205 ns/op
Iteration  10: 8004.563 ns/op

# Run progress: 21.28% complete, ETA 00:56:38
# Fork: 2 of 2
# Warmup Iteration   1: 12330.476 ns/op
# Warmup Iteration   2: 9246.708 ns/op
# Warmup Iteration   3: 7932.137 ns/op
Iteration   1: 7905.599 ns/op
Iteration   2: 7922.966 ns/op
Iteration   3: 7930.547 ns/op
Iteration   4: 7930.541 ns/op
Iteration   5: 7922.749 ns/op
Iteration   6: 7905.538 ns/op
Iteration   7: 7913.783 ns/op
Iteration   8: 7908.912 ns/op
Iteration   9: 7919.289 ns/op
Iteration  10: 7938.249 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7952.879 ±(99.9%) 30.918 ns/op [Average]
  (min, avg, max) = (7905.538, 7952.879, 8004.563), stdev = 35.605
  CI (99.9%): [7921.961, 7983.797] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 21.33% complete, ETA 00:56:35
# Fork: 1 of 2
# Warmup Iteration   1: 38.474 ns/op
# Warmup Iteration   2: 66.317 ns/op
# Warmup Iteration   3: 35.734 ns/op
Iteration   1: 35.769 ns/op
Iteration   2: 35.684 ns/op
Iteration   3: 35.722 ns/op
Iteration   4: 35.761 ns/op
Iteration   5: 35.730 ns/op
Iteration   6: 36.171 ns/op
Iteration   7: 35.726 ns/op
Iteration   8: 34.412 ns/op
Iteration   9: 35.675 ns/op
Iteration  10: 35.704 ns/op

# Run progress: 21.39% complete, ETA 00:56:33
# Fork: 2 of 2
# Warmup Iteration   1: 38.167 ns/op
# Warmup Iteration   2: 66.953 ns/op
# Warmup Iteration   3: 35.659 ns/op
Iteration   1: 35.699 ns/op
Iteration   2: 35.686 ns/op
Iteration   3: 35.689 ns/op
Iteration   4: 35.726 ns/op
Iteration   5: 35.669 ns/op
Iteration   6: 36.158 ns/op
Iteration   7: 35.625 ns/op
Iteration   8: 50.726 ns/op
Iteration   9: 35.729 ns/op
Iteration  10: 35.674 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  36.437 ±(99.9%) 2.935 ns/op [Average]
  (min, avg, max) = (34.412, 36.437, 50.726), stdev = 3.380
  CI (99.9%): [33.502, 39.372] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 21.44% complete, ETA 00:56:31
# Fork: 1 of 2
# Warmup Iteration   1: 3420.757 ns/op
# Warmup Iteration   2: 2080.023 ns/op
# Warmup Iteration   3: 2361.948 ns/op
Iteration   1: 2710.823 ns/op
Iteration   2: 2298.844 ns/op
Iteration   3: 2646.383 ns/op
Iteration   4: 2166.031 ns/op
Iteration   5: 2604.485 ns/op
Iteration   6: 2674.404 ns/op
Iteration   7: 2149.508 ns/op
Iteration   8: 2140.332 ns/op
Iteration   9: 2189.026 ns/op
Iteration  10: 1896.148 ns/op

# Run progress: 21.50% complete, ETA 00:56:28
# Fork: 2 of 2
# Warmup Iteration   1: 2758.938 ns/op
# Warmup Iteration   2: 2877.409 ns/op
# Warmup Iteration   3: 2330.817 ns/op
Iteration   1: 2459.594 ns/op
Iteration   2: 2197.943 ns/op
Iteration   3: 2492.805 ns/op
Iteration   4: 2040.524 ns/op
Iteration   5: 2474.578 ns/op
Iteration   6: 2653.786 ns/op
Iteration   7: 2152.715 ns/op
Iteration   8: 2172.259 ns/op
Iteration   9: 2225.598 ns/op
Iteration  10: 2208.078 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2327.693 ±(99.9%) 208.542 ns/op [Average]
  (min, avg, max) = (1896.148, 2327.693, 2710.823), stdev = 240.157
  CI (99.9%): [2119.151, 2536.235] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 21.56% complete, ETA 00:56:26
# Fork: 1 of 2
# Warmup Iteration   1: 1487.989 ns/op
# Warmup Iteration   2: 2510.336 ns/op
# Warmup Iteration   3: 1639.580 ns/op
Iteration   1: 1617.434 ns/op
Iteration   2: 1769.840 ns/op
Iteration   3: 1944.061 ns/op
Iteration   4: 1509.773 ns/op
Iteration   5: 1188.305 ns/op
Iteration   6: 1925.478 ns/op
Iteration   7: 1308.394 ns/op
Iteration   8: 978.585 ns/op
Iteration   9: 1051.714 ns/op
Iteration  10: 1188.131 ns/op

# Run progress: 21.61% complete, ETA 00:56:23
# Fork: 2 of 2
# Warmup Iteration   1: 1398.935 ns/op
# Warmup Iteration   2: 2971.807 ns/op
# Warmup Iteration   3: 1459.845 ns/op
Iteration   1: 2155.044 ns/op
Iteration   2: 2654.829 ns/op
Iteration   3: 2649.489 ns/op
Iteration   4: 1735.885 ns/op
Iteration   5: 1334.468 ns/op
Iteration   6: 1736.037 ns/op
Iteration   7: 1265.944 ns/op
Iteration   8: 1028.798 ns/op
Iteration   9: 1115.381 ns/op
Iteration  10: 1511.679 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1583.463 ±(99.9%) 430.840 ns/op [Average]
  (min, avg, max) = (978.585, 1583.463, 2654.829), stdev = 496.156
  CI (99.9%): [1152.624, 2014.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 21.67% complete, ETA 00:56:21
# Fork: 1 of 2
# Warmup Iteration   1: 1407.445 ns/op
# Warmup Iteration   2: 2550.876 ns/op
# Warmup Iteration   3: 1496.025 ns/op
Iteration   1: 2488.290 ns/op
Iteration   2: 1944.241 ns/op
Iteration   3: 2219.728 ns/op
Iteration   4: 2074.301 ns/op
Iteration   5: 1317.004 ns/op
Iteration   6: 2069.361 ns/op
Iteration   7: 1337.117 ns/op
Iteration   8: 1043.969 ns/op
Iteration   9: 1127.288 ns/op
Iteration  10: 1931.476 ns/op

# Run progress: 21.72% complete, ETA 00:56:18
# Fork: 2 of 2
# Warmup Iteration   1: 1843.121 ns/op
# Warmup Iteration   2: 2913.882 ns/op
# Warmup Iteration   3: 1532.581 ns/op
Iteration   1: 3070.426 ns/op
Iteration   2: 3503.931 ns/op
Iteration   3: 2180.901 ns/op
Iteration   4: 1581.698 ns/op
Iteration   5: 1311.269 ns/op
Iteration   6: 2044.618 ns/op
Iteration   7: 1347.473 ns/op
Iteration   8: 1052.269 ns/op
Iteration   9: 1094.987 ns/op
Iteration  10: 1278.438 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1800.939 ±(99.9%) 592.616 ns/op [Average]
  (min, avg, max) = (1043.969, 1800.939, 3503.931), stdev = 682.457
  CI (99.9%): [1208.324, 2393.555] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 21.78% complete, ETA 00:56:16
# Fork: 1 of 2
# Warmup Iteration   1: 2746.922 ns/op
# Warmup Iteration   2: 2045.228 ns/op
# Warmup Iteration   3: 1403.014 ns/op
Iteration   1: 1794.764 ns/op
Iteration   2: 1342.553 ns/op
Iteration   3: 1856.744 ns/op
Iteration   4: 1877.964 ns/op
Iteration   5: 1347.591 ns/op
Iteration   6: 1858.628 ns/op
Iteration   7: 1293.194 ns/op
Iteration   8: 1275.144 ns/op
Iteration   9: 1143.135 ns/op
Iteration  10: 1333.733 ns/op

# Run progress: 21.83% complete, ETA 00:56:14
# Fork: 2 of 2
# Warmup Iteration   1: 2216.296 ns/op
# Warmup Iteration   2: 2439.921 ns/op
# Warmup Iteration   3: 1332.770 ns/op
Iteration   1: 1614.432 ns/op
Iteration   2: 1563.948 ns/op
Iteration   3: 1317.704 ns/op
Iteration   4: 1526.817 ns/op
Iteration   5: 1225.328 ns/op
Iteration   6: 1787.169 ns/op
Iteration   7: 1329.628 ns/op
Iteration   8: 1206.020 ns/op
Iteration   9: 1086.872 ns/op
Iteration  10: 1262.773 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1452.207 ±(99.9%) 226.065 ns/op [Average]
  (min, avg, max) = (1086.872, 1452.207, 1877.964), stdev = 260.337
  CI (99.9%): [1226.142, 1678.272] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 21.89% complete, ETA 00:56:11
# Fork: 1 of 2
# Warmup Iteration   1: 12871.972 ns/op
# Warmup Iteration   2: 9220.579 ns/op
# Warmup Iteration   3: 7820.600 ns/op
Iteration   1: 7856.158 ns/op
Iteration   2: 7771.855 ns/op
Iteration   3: 7774.433 ns/op
Iteration   4: 7787.692 ns/op
Iteration   5: 7843.670 ns/op
Iteration   6: 7856.404 ns/op
Iteration   7: 7762.884 ns/op
Iteration   8: 7852.875 ns/op
Iteration   9: 7863.494 ns/op
Iteration  10: 7807.671 ns/op

# Run progress: 21.94% complete, ETA 00:56:09
# Fork: 2 of 2
# Warmup Iteration   1: 12704.823 ns/op
# Warmup Iteration   2: 9444.738 ns/op
# Warmup Iteration   3: 8042.393 ns/op
Iteration   1: 8060.703 ns/op
Iteration   2: 8052.959 ns/op
Iteration   3: 8082.824 ns/op
Iteration   4: 8027.656 ns/op
Iteration   5: 8086.337 ns/op
Iteration   6: 8050.571 ns/op
Iteration   7: 8059.660 ns/op
Iteration   8: 8132.628 ns/op
Iteration   9: 8111.135 ns/op
Iteration  10: 8062.034 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7945.182 ±(99.9%) 117.625 ns/op [Average]
  (min, avg, max) = (7762.884, 7945.182, 8132.628), stdev = 135.457
  CI (99.9%): [7827.557, 8062.807] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 22.00% complete, ETA 00:56:06
# Fork: 1 of 2
# Warmup Iteration   1: 37.668 ns/op
# Warmup Iteration   2: 67.125 ns/op
# Warmup Iteration   3: 35.670 ns/op
Iteration   1: 35.736 ns/op
Iteration   2: 35.741 ns/op
Iteration   3: 35.696 ns/op
Iteration   4: 35.675 ns/op
Iteration   5: 35.776 ns/op
Iteration   6: 36.174 ns/op
Iteration   7: 35.676 ns/op
Iteration   8: 34.423 ns/op
Iteration   9: 35.700 ns/op
Iteration  10: 35.756 ns/op

# Run progress: 22.06% complete, ETA 00:56:04
# Fork: 2 of 2
# Warmup Iteration   1: 38.512 ns/op
# Warmup Iteration   2: 66.443 ns/op
# Warmup Iteration   3: 35.667 ns/op
Iteration   1: 35.744 ns/op
Iteration   2: 35.694 ns/op
Iteration   3: 35.740 ns/op
Iteration   4: 35.649 ns/op
Iteration   5: 35.697 ns/op
Iteration   6: 36.093 ns/op
Iteration   7: 35.695 ns/op
Iteration   8: 34.510 ns/op
Iteration   9: 35.663 ns/op
Iteration  10: 35.695 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.627 ±(99.9%) 0.364 ns/op [Average]
  (min, avg, max) = (34.423, 35.627, 36.174), stdev = 0.419
  CI (99.9%): [35.263, 35.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 22.11% complete, ETA 00:56:01
# Fork: 1 of 2
# Warmup Iteration   1: 282.759 ns/op
# Warmup Iteration   2: 286.206 ns/op
# Warmup Iteration   3: 237.832 ns/op
Iteration   1: 238.076 ns/op
Iteration   2: 237.814 ns/op
Iteration   3: 238.086 ns/op
Iteration   4: 235.229 ns/op
Iteration   5: 235.579 ns/op
Iteration   6: 235.432 ns/op
Iteration   7: 235.469 ns/op
Iteration   8: 236.151 ns/op
Iteration   9: 235.391 ns/op
Iteration  10: 235.156 ns/op

# Run progress: 22.17% complete, ETA 00:55:59
# Fork: 2 of 2
# Warmup Iteration   1: 278.700 ns/op
# Warmup Iteration   2: 284.344 ns/op
# Warmup Iteration   3: 240.576 ns/op
Iteration   1: 241.216 ns/op
Iteration   2: 241.156 ns/op
Iteration   3: 240.978 ns/op
Iteration   4: 238.014 ns/op
Iteration   5: 237.130 ns/op
Iteration   6: 236.988 ns/op
Iteration   7: 238.525 ns/op
Iteration   8: 238.759 ns/op
Iteration   9: 238.041 ns/op
Iteration  10: 238.072 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  237.563 ±(99.9%) 1.701 ns/op [Average]
  (min, avg, max) = (235.156, 237.563, 241.216), stdev = 1.959
  CI (99.9%): [235.862, 239.264] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 22.22% complete, ETA 00:55:57
# Fork: 1 of 2
# Warmup Iteration   1: 1304.701 ns/op
# Warmup Iteration   2: 515.175 ns/op
# Warmup Iteration   3: 441.202 ns/op
Iteration   1: 441.189 ns/op
Iteration   2: 441.315 ns/op
Iteration   3: 442.529 ns/op
Iteration   4: 441.195 ns/op
Iteration   5: 441.369 ns/op
Iteration   6: 442.133 ns/op
Iteration   7: 441.413 ns/op
Iteration   8: 445.408 ns/op
Iteration   9: 442.021 ns/op
Iteration  10: 441.382 ns/op

# Run progress: 22.28% complete, ETA 00:55:54
# Fork: 2 of 2
# Warmup Iteration   1: 892.757 ns/op
# Warmup Iteration   2: 507.398 ns/op
# Warmup Iteration   3: 441.265 ns/op
Iteration   1: 441.867 ns/op
Iteration   2: 441.178 ns/op
Iteration   3: 441.384 ns/op
Iteration   4: 441.260 ns/op
Iteration   5: 441.437 ns/op
Iteration   6: 442.121 ns/op
Iteration   7: 441.637 ns/op
Iteration   8: 443.976 ns/op
Iteration   9: 441.287 ns/op
Iteration  10: 442.900 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  441.950 ±(99.9%) 0.936 ns/op [Average]
  (min, avg, max) = (441.178, 441.950, 445.408), stdev = 1.078
  CI (99.9%): [441.014, 442.886] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 22.33% complete, ETA 00:55:52
# Fork: 1 of 2
# Warmup Iteration   1: 750.588 ns/op
# Warmup Iteration   2: 521.041 ns/op
# Warmup Iteration   3: 439.478 ns/op
Iteration   1: 439.869 ns/op
Iteration   2: 439.413 ns/op
Iteration   3: 439.520 ns/op
Iteration   4: 439.611 ns/op
Iteration   5: 440.020 ns/op
Iteration   6: 440.043 ns/op
Iteration   7: 440.516 ns/op
Iteration   8: 442.290 ns/op
Iteration   9: 439.413 ns/op
Iteration  10: 439.529 ns/op

# Run progress: 22.39% complete, ETA 00:55:49
# Fork: 2 of 2
# Warmup Iteration   1: 598.027 ns/op
# Warmup Iteration   2: 535.612 ns/op
# Warmup Iteration   3: 445.769 ns/op
Iteration   1: 446.221 ns/op
Iteration   2: 446.186 ns/op
Iteration   3: 445.952 ns/op
Iteration   4: 446.989 ns/op
Iteration   5: 446.024 ns/op
Iteration   6: 447.315 ns/op
Iteration   7: 446.217 ns/op
Iteration   8: 449.507 ns/op
Iteration   9: 447.083 ns/op
Iteration  10: 445.869 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  443.379 ±(99.9%) 3.106 ns/op [Average]
  (min, avg, max) = (439.413, 443.379, 449.507), stdev = 3.577
  CI (99.9%): [440.273, 446.485] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 22.44% complete, ETA 00:55:47
# Fork: 1 of 2
# Warmup Iteration   1: 684.480 ns/op
# Warmup Iteration   2: 508.961 ns/op
# Warmup Iteration   3: 434.865 ns/op
Iteration   1: 436.924 ns/op
Iteration   2: 436.967 ns/op
Iteration   3: 439.952 ns/op
Iteration   4: 440.177 ns/op
Iteration   5: 440.515 ns/op
Iteration   6: 439.508 ns/op
Iteration   7: 439.122 ns/op
Iteration   8: 443.001 ns/op
Iteration   9: 440.145 ns/op
Iteration  10: 437.956 ns/op

# Run progress: 22.50% complete, ETA 00:55:45
# Fork: 2 of 2
# Warmup Iteration   1: 689.057 ns/op
# Warmup Iteration   2: 503.507 ns/op
# Warmup Iteration   3: 436.777 ns/op
Iteration   1: 433.327 ns/op
Iteration   2: 439.586 ns/op
Iteration   3: 436.803 ns/op
Iteration   4: 440.100 ns/op
Iteration   5: 440.576 ns/op
Iteration   6: 439.502 ns/op
Iteration   7: 439.928 ns/op
Iteration   8: 442.397 ns/op
Iteration   9: 440.530 ns/op
Iteration  10: 436.606 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  439.181 ±(99.9%) 1.919 ns/op [Average]
  (min, avg, max) = (433.327, 439.181, 443.001), stdev = 2.210
  CI (99.9%): [437.262, 441.100] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 22.56% complete, ETA 00:55:42
# Fork: 1 of 2
# Warmup Iteration   1: 476.346 ns/op
# Warmup Iteration   2: 469.136 ns/op
# Warmup Iteration   3: 416.770 ns/op
Iteration   1: 416.335 ns/op
Iteration   2: 416.236 ns/op
Iteration   3: 416.385 ns/op
Iteration   4: 420.481 ns/op
Iteration   5: 420.707 ns/op
Iteration   6: 420.776 ns/op
Iteration   7: 420.859 ns/op
Iteration   8: 421.205 ns/op
Iteration   9: 420.950 ns/op
Iteration  10: 420.832 ns/op

# Run progress: 22.61% complete, ETA 00:55:40
# Fork: 2 of 2
# Warmup Iteration   1: 473.544 ns/op
# Warmup Iteration   2: 467.003 ns/op
# Warmup Iteration   3: 416.697 ns/op
Iteration   1: 416.254 ns/op
Iteration   2: 416.318 ns/op
Iteration   3: 416.308 ns/op
Iteration   4: 420.720 ns/op
Iteration   5: 420.749 ns/op
Iteration   6: 421.059 ns/op
Iteration   7: 420.723 ns/op
Iteration   8: 421.023 ns/op
Iteration   9: 421.099 ns/op
Iteration  10: 420.660 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  419.484 ±(99.9%) 1.859 ns/op [Average]
  (min, avg, max) = (416.236, 419.484, 421.205), stdev = 2.141
  CI (99.9%): [417.625, 421.343] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 22.67% complete, ETA 00:55:37
# Fork: 1 of 2
# Warmup Iteration   1: 56.988 ns/op
# Warmup Iteration   2: 66.706 ns/op
# Warmup Iteration   3: 35.704 ns/op
Iteration   1: 35.626 ns/op
Iteration   2: 35.737 ns/op
Iteration   3: 35.683 ns/op
Iteration   4: 35.742 ns/op
Iteration   5: 35.670 ns/op
Iteration   6: 36.105 ns/op
Iteration   7: 35.782 ns/op
Iteration   8: 34.483 ns/op
Iteration   9: 35.720 ns/op
Iteration  10: 35.647 ns/op

# Run progress: 22.72% complete, ETA 00:55:35
# Fork: 2 of 2
# Warmup Iteration   1: 38.372 ns/op
# Warmup Iteration   2: 67.075 ns/op
# Warmup Iteration   3: 35.697 ns/op
Iteration   1: 35.710 ns/op
Iteration   2: 35.674 ns/op
Iteration   3: 35.663 ns/op
Iteration   4: 35.716 ns/op
Iteration   5: 35.722 ns/op
Iteration   6: 36.167 ns/op
Iteration   7: 35.664 ns/op
Iteration   8: 46.565 ns/op
Iteration   9: 35.690 ns/op
Iteration  10: 35.638 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  36.220 ±(99.9%) 2.132 ns/op [Average]
  (min, avg, max) = (34.483, 36.220, 46.565), stdev = 2.455
  CI (99.9%): [34.088, 38.352] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 22.78% complete, ETA 00:55:32
# Fork: 1 of 2
# Warmup Iteration   1: 12062.986 ns/op
# Warmup Iteration   2: 6473.399 ns/op
# Warmup Iteration   3: 5913.938 ns/op
Iteration   1: 5556.135 ns/op
Iteration   2: 5552.800 ns/op
Iteration   3: 5795.093 ns/op
Iteration   4: 7363.247 ns/op
Iteration   5: 5516.366 ns/op
Iteration   6: 5639.127 ns/op
Iteration   7: 5698.419 ns/op
Iteration   8: 5745.861 ns/op
Iteration   9: 5622.813 ns/op
Iteration  10: 5882.525 ns/op

# Run progress: 22.83% complete, ETA 00:55:30
# Fork: 2 of 2
# Warmup Iteration   1: 12611.501 ns/op
# Warmup Iteration   2: 6435.323 ns/op
# Warmup Iteration   3: 5899.271 ns/op
Iteration   1: 5655.227 ns/op
Iteration   2: 5540.875 ns/op
Iteration   3: 5789.992 ns/op
Iteration   4: 7356.646 ns/op
Iteration   5: 5545.629 ns/op
Iteration   6: 5691.702 ns/op
Iteration   7: 5647.656 ns/op
Iteration   8: 5736.289 ns/op
Iteration   9: 5643.110 ns/op
Iteration  10: 5919.335 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5844.942 ±(99.9%) 460.166 ns/op [Average]
  (min, avg, max) = (5516.366, 5844.942, 7363.247), stdev = 529.928
  CI (99.9%): [5384.777, 6305.108] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 22.89% complete, ETA 00:55:28
# Fork: 1 of 2
# Warmup Iteration   1: 12740.592 ns/op
# Warmup Iteration   2: 8822.266 ns/op
# Warmup Iteration   3: 5690.399 ns/op
Iteration   1: 5480.316 ns/op
Iteration   2: 5835.829 ns/op
Iteration   3: 5561.550 ns/op
Iteration   4: 6803.957 ns/op
Iteration   5: 4636.117 ns/op
Iteration   6: 4526.230 ns/op
Iteration   7: 5093.442 ns/op
Iteration   8: 5364.444 ns/op
Iteration   9: 5282.908 ns/op
Iteration  10: 5617.950 ns/op

# Run progress: 22.94% complete, ETA 00:55:25
# Fork: 2 of 2
# Warmup Iteration   1: 13585.320 ns/op
# Warmup Iteration   2: 8735.119 ns/op
# Warmup Iteration   3: 5658.675 ns/op
Iteration   1: 5440.149 ns/op
Iteration   2: 5780.418 ns/op
Iteration   3: 5587.239 ns/op
Iteration   4: 7503.253 ns/op
Iteration   5: 4642.871 ns/op
Iteration   6: 4549.952 ns/op
Iteration   7: 5116.918 ns/op
Iteration   8: 5343.993 ns/op
Iteration   9: 5322.567 ns/op
Iteration  10: 5661.439 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5457.577 ±(99.9%) 620.106 ns/op [Average]
  (min, avg, max) = (4526.230, 5457.577, 7503.253), stdev = 714.115
  CI (99.9%): [4837.471, 6077.683] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 23.00% complete, ETA 00:55:23
# Fork: 1 of 2
# Warmup Iteration   1: 12358.358 ns/op
# Warmup Iteration   2: 8405.718 ns/op
# Warmup Iteration   3: 5166.187 ns/op
Iteration   1: 5142.400 ns/op
Iteration   2: 5548.244 ns/op
Iteration   3: 5175.089 ns/op
Iteration   4: 5229.520 ns/op
Iteration   5: 4442.162 ns/op
Iteration   6: 4599.012 ns/op
Iteration   7: 5305.524 ns/op
Iteration   8: 5290.537 ns/op
Iteration   9: 4912.563 ns/op
Iteration  10: 5165.132 ns/op

# Run progress: 23.06% complete, ETA 00:55:21
# Fork: 2 of 2
# Warmup Iteration   1: 13256.387 ns/op
# Warmup Iteration   2: 8449.945 ns/op
# Warmup Iteration   3: 5163.659 ns/op
Iteration   1: 5165.013 ns/op
Iteration   2: 5560.910 ns/op
Iteration   3: 5199.291 ns/op
Iteration   4: 5250.032 ns/op
Iteration   5: 4481.716 ns/op
Iteration   6: 4626.058 ns/op
Iteration   7: 5273.194 ns/op
Iteration   8: 5290.448 ns/op
Iteration   9: 4966.134 ns/op
Iteration  10: 5158.226 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5089.060 ±(99.9%) 279.462 ns/op [Average]
  (min, avg, max) = (4442.162, 5089.060, 5560.910), stdev = 321.829
  CI (99.9%): [4809.598, 5368.522] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 23.11% complete, ETA 00:55:18
# Fork: 1 of 2
# Warmup Iteration   1: 7911.992 ns/op
# Warmup Iteration   2: 7107.906 ns/op
# Warmup Iteration   3: 4427.948 ns/op
Iteration   1: 4342.006 ns/op
Iteration   2: 6100.132 ns/op
Iteration   3: 4557.258 ns/op
Iteration   4: 4374.315 ns/op
Iteration   5: 3752.536 ns/op
Iteration   6: 3825.015 ns/op
Iteration   7: 4523.963 ns/op
Iteration   8: 4389.890 ns/op
Iteration   9: 4351.411 ns/op
Iteration  10: 4549.783 ns/op

# Run progress: 23.17% complete, ETA 00:55:16
# Fork: 2 of 2
# Warmup Iteration   1: 7200.081 ns/op
# Warmup Iteration   2: 7314.132 ns/op
# Warmup Iteration   3: 4495.450 ns/op
Iteration   1: 4355.649 ns/op
Iteration   2: 5106.039 ns/op
Iteration   3: 4583.790 ns/op
Iteration   4: 4357.337 ns/op
Iteration   5: 3758.961 ns/op
Iteration   6: 3826.552 ns/op
Iteration   7: 4431.421 ns/op
Iteration   8: 4389.402 ns/op
Iteration   9: 4351.562 ns/op
Iteration  10: 4515.031 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4422.103 ±(99.9%) 445.102 ns/op [Average]
  (min, avg, max) = (3752.536, 4422.103, 6100.132), stdev = 512.580
  CI (99.9%): [3977.001, 4867.204] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 23.22% complete, ETA 00:55:13
# Fork: 1 of 2
# Warmup Iteration   1: 16284.329 ns/op
# Warmup Iteration   2: 25655.167 ns/op
# Warmup Iteration   3: 9782.116 ns/op
Iteration   1: 9735.492 ns/op
Iteration   2: 9788.400 ns/op
Iteration   3: 10019.385 ns/op
Iteration   4: 12905.170 ns/op
Iteration   5: 9873.171 ns/op
Iteration   6: 9886.860 ns/op
Iteration   7: 9952.153 ns/op
Iteration   8: 9376.426 ns/op
Iteration   9: 10098.223 ns/op
Iteration  10: 9814.943 ns/op

# Run progress: 23.28% complete, ETA 00:55:11
# Fork: 2 of 2
# Warmup Iteration   1: 15336.615 ns/op
# Warmup Iteration   2: 19008.367 ns/op
# Warmup Iteration   3: 9856.189 ns/op
Iteration   1: 9723.606 ns/op
Iteration   2: 9791.654 ns/op
Iteration   3: 9992.932 ns/op
Iteration   4: 12457.423 ns/op
Iteration   5: 9936.016 ns/op
Iteration   6: 9932.844 ns/op
Iteration   7: 10095.240 ns/op
Iteration   8: 9376.245 ns/op
Iteration   9: 10171.073 ns/op
Iteration  10: 9979.489 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10145.337 ±(99.9%) 776.472 ns/op [Average]
  (min, avg, max) = (9376.245, 10145.337, 12905.170), stdev = 894.186
  CI (99.9%): [9368.866, 10921.809] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 23.33% complete, ETA 00:55:09
# Fork: 1 of 2
# Warmup Iteration   1: 38.220 ns/op
# Warmup Iteration   2: 64.224 ns/op
# Warmup Iteration   3: 35.618 ns/op
Iteration   1: 35.687 ns/op
Iteration   2: 35.714 ns/op
Iteration   3: 35.689 ns/op
Iteration   4: 35.702 ns/op
Iteration   5: 35.665 ns/op
Iteration   6: 36.156 ns/op
Iteration   7: 35.676 ns/op
Iteration   8: 34.520 ns/op
Iteration   9: 35.702 ns/op
Iteration  10: 35.741 ns/op

# Run progress: 23.39% complete, ETA 00:55:06
# Fork: 2 of 2
# Warmup Iteration   1: 38.374 ns/op
# Warmup Iteration   2: 66.842 ns/op
# Warmup Iteration   3: 35.736 ns/op
Iteration   1: 35.665 ns/op
Iteration   2: 35.611 ns/op
Iteration   3: 35.675 ns/op
Iteration   4: 35.648 ns/op
Iteration   5: 35.638 ns/op
Iteration   6: 36.163 ns/op
Iteration   7: 35.647 ns/op
Iteration   8: 34.440 ns/op
Iteration   9: 35.667 ns/op
Iteration  10: 35.762 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.608 ±(99.9%) 0.360 ns/op [Average]
  (min, avg, max) = (34.440, 35.608, 36.163), stdev = 0.414
  CI (99.9%): [35.249, 35.968] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 23.44% complete, ETA 00:55:04
# Fork: 1 of 2
# Warmup Iteration   1: 5272.347 ns/op
# Warmup Iteration   2: 4016.583 ns/op
# Warmup Iteration   3: 3518.766 ns/op
Iteration   1: 3528.298 ns/op
Iteration   2: 3521.341 ns/op
Iteration   3: 3524.162 ns/op
Iteration   4: 3517.102 ns/op
Iteration   5: 3524.403 ns/op
Iteration   6: 3525.834 ns/op
Iteration   7: 3522.731 ns/op
Iteration   8: 3514.576 ns/op
Iteration   9: 3510.282 ns/op
Iteration  10: 3516.232 ns/op

# Run progress: 23.50% complete, ETA 00:55:01
# Fork: 2 of 2
# Warmup Iteration   1: 5639.027 ns/op
# Warmup Iteration   2: 4101.512 ns/op
# Warmup Iteration   3: 3516.854 ns/op
Iteration   1: 3526.952 ns/op
Iteration   2: 3518.896 ns/op
Iteration   3: 3525.773 ns/op
Iteration   4: 3516.993 ns/op
Iteration   5: 3524.690 ns/op
Iteration   6: 3511.895 ns/op
Iteration   7: 3519.163 ns/op
Iteration   8: 3513.362 ns/op
Iteration   9: 3505.168 ns/op
Iteration  10: 3519.334 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3519.359 ±(99.9%) 5.390 ns/op [Average]
  (min, avg, max) = (3505.168, 3519.359, 3528.298), stdev = 6.207
  CI (99.9%): [3513.970, 3524.749] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 23.56% complete, ETA 00:54:59
# Fork: 1 of 2
# Warmup Iteration   1: 13840.261 ns/op
# Warmup Iteration   2: 6826.632 ns/op
# Warmup Iteration   3: 5696.895 ns/op
Iteration   1: 5689.484 ns/op
Iteration   2: 5686.838 ns/op
Iteration   3: 5689.066 ns/op
Iteration   4: 5696.910 ns/op
Iteration   5: 5699.780 ns/op
Iteration   6: 5728.844 ns/op
Iteration   7: 5697.268 ns/op
Iteration   8: 5697.596 ns/op
Iteration   9: 5714.002 ns/op
Iteration  10: 5707.749 ns/op

# Run progress: 23.61% complete, ETA 00:54:56
# Fork: 2 of 2
# Warmup Iteration   1: 12530.138 ns/op
# Warmup Iteration   2: 6527.187 ns/op
# Warmup Iteration   3: 5783.169 ns/op
Iteration   1: 5808.429 ns/op
Iteration   2: 5815.345 ns/op
Iteration   3: 5800.378 ns/op
Iteration   4: 5813.152 ns/op
Iteration   5: 5795.406 ns/op
Iteration   6: 5825.288 ns/op
Iteration   7: 5784.602 ns/op
Iteration   8: 5784.175 ns/op
Iteration   9: 5777.525 ns/op
Iteration  10: 5792.416 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5750.213 ±(99.9%) 45.699 ns/op [Average]
  (min, avg, max) = (5686.838, 5750.213, 5825.288), stdev = 52.627
  CI (99.9%): [5704.514, 5795.911] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 23.67% complete, ETA 00:54:54
# Fork: 1 of 2
# Warmup Iteration   1: 10883.890 ns/op
# Warmup Iteration   2: 6179.930 ns/op
# Warmup Iteration   3: 5360.053 ns/op
Iteration   1: 5361.752 ns/op
Iteration   2: 5369.254 ns/op
Iteration   3: 5349.547 ns/op
Iteration   4: 5353.184 ns/op
Iteration   5: 5342.631 ns/op
Iteration   6: 5358.200 ns/op
Iteration   7: 5379.796 ns/op
Iteration   8: 5363.610 ns/op
Iteration   9: 5335.470 ns/op
Iteration  10: 5348.248 ns/op

# Run progress: 23.72% complete, ETA 00:54:52
# Fork: 2 of 2
# Warmup Iteration   1: 14355.709 ns/op
# Warmup Iteration   2: 6815.729 ns/op
# Warmup Iteration   3: 5622.941 ns/op
Iteration   1: 5615.238 ns/op
Iteration   2: 5626.018 ns/op
Iteration   3: 5637.738 ns/op
Iteration   4: 5611.424 ns/op
Iteration   5: 5620.111 ns/op
Iteration   6: 5624.125 ns/op
Iteration   7: 5613.205 ns/op
Iteration   8: 5629.710 ns/op
Iteration   9: 5605.719 ns/op
Iteration  10: 5640.671 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5489.282 ±(99.9%) 119.048 ns/op [Average]
  (min, avg, max) = (5335.470, 5489.282, 5640.671), stdev = 137.096
  CI (99.9%): [5370.235, 5608.330] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 23.78% complete, ETA 00:54:49
# Fork: 1 of 2
# Warmup Iteration   1: 9841.585 ns/op
# Warmup Iteration   2: 6620.900 ns/op
# Warmup Iteration   3: 5689.595 ns/op
Iteration   1: 5677.730 ns/op
Iteration   2: 5654.907 ns/op
Iteration   3: 5705.531 ns/op
Iteration   4: 5745.564 ns/op
Iteration   5: 5666.891 ns/op
Iteration   6: 5715.814 ns/op
Iteration   7: 5705.479 ns/op
Iteration   8: 5693.903 ns/op
Iteration   9: 5683.338 ns/op
Iteration  10: 5705.017 ns/op

# Run progress: 23.83% complete, ETA 00:54:47
# Fork: 2 of 2
# Warmup Iteration   1: 8837.180 ns/op
# Warmup Iteration   2: 6296.217 ns/op
# Warmup Iteration   3: 5537.085 ns/op
Iteration   1: 5515.754 ns/op
Iteration   2: 5527.023 ns/op
Iteration   3: 5554.925 ns/op
Iteration   4: 5518.206 ns/op
Iteration   5: 5571.368 ns/op
Iteration   6: 5517.752 ns/op
Iteration   7: 5535.116 ns/op
Iteration   8: 5564.504 ns/op
Iteration   9: 5535.183 ns/op
Iteration  10: 5545.344 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5616.967 ±(99.9%) 72.602 ns/op [Average]
  (min, avg, max) = (5515.754, 5616.967, 5745.564), stdev = 83.608
  CI (99.9%): [5544.366, 5689.569] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 23.89% complete, ETA 00:54:44
# Fork: 1 of 2
# Warmup Iteration   1: 5337.869 ns/op
# Warmup Iteration   2: 3753.744 ns/op
# Warmup Iteration   3: 3221.243 ns/op
Iteration   1: 3232.187 ns/op
Iteration   2: 3243.084 ns/op
Iteration   3: 3231.834 ns/op
Iteration   4: 3228.814 ns/op
Iteration   5: 3219.170 ns/op
Iteration   6: 3230.402 ns/op
Iteration   7: 3263.948 ns/op
Iteration   8: 3227.944 ns/op
Iteration   9: 3217.669 ns/op
Iteration  10: 3231.434 ns/op

# Run progress: 23.94% complete, ETA 00:54:42
# Fork: 2 of 2
# Warmup Iteration   1: 4948.417 ns/op
# Warmup Iteration   2: 3828.857 ns/op
# Warmup Iteration   3: 3370.305 ns/op
Iteration   1: 3358.497 ns/op
Iteration   2: 3371.033 ns/op
Iteration   3: 3356.150 ns/op
Iteration   4: 3352.828 ns/op
Iteration   5: 3372.634 ns/op
Iteration   6: 3378.721 ns/op
Iteration   7: 3372.428 ns/op
Iteration   8: 3352.702 ns/op
Iteration   9: 3346.230 ns/op
Iteration  10: 3350.270 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3296.899 ±(99.9%) 58.176 ns/op [Average]
  (min, avg, max) = (3217.669, 3296.899, 3378.721), stdev = 66.996
  CI (99.9%): [3238.723, 3355.075] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 24.00% complete, ETA 00:54:40
# Fork: 1 of 2
# Warmup Iteration   1: 38.471 ns/op
# Warmup Iteration   2: 66.828 ns/op
# Warmup Iteration   3: 35.695 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.629 ns/op
Iteration   3: 35.683 ns/op
Iteration   4: 35.664 ns/op
Iteration   5: 35.788 ns/op
Iteration   6: 36.182 ns/op
Iteration   7: 35.661 ns/op
Iteration   8: 34.517 ns/op
Iteration   9: 35.647 ns/op
Iteration  10: 35.731 ns/op

# Run progress: 24.06% complete, ETA 00:54:37
# Fork: 2 of 2
# Warmup Iteration   1: 38.181 ns/op
# Warmup Iteration   2: 64.377 ns/op
# Warmup Iteration   3: 35.774 ns/op
Iteration   1: 35.747 ns/op
Iteration   2: 35.732 ns/op
Iteration   3: 35.709 ns/op
Iteration   4: 35.687 ns/op
Iteration   5: 35.699 ns/op
Iteration   6: 36.101 ns/op
Iteration   7: 35.701 ns/op
Iteration   8: 34.518 ns/op
Iteration   9: 35.696 ns/op
Iteration  10: 35.735 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.626 ±(99.9%) 0.351 ns/op [Average]
  (min, avg, max) = (34.517, 35.626, 36.182), stdev = 0.404
  CI (99.9%): [35.275, 35.977] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 24.11% complete, ETA 00:54:35
# Fork: 1 of 2
# Warmup Iteration   1: 2843.243 ns/op
# Warmup Iteration   2: 2613.303 ns/op
# Warmup Iteration   3: 2269.035 ns/op
Iteration   1: 2271.175 ns/op
Iteration   2: 2269.990 ns/op
Iteration   3: 2275.680 ns/op
Iteration   4: 2278.127 ns/op
Iteration   5: 2269.256 ns/op
Iteration   6: 2271.542 ns/op
Iteration   7: 2268.783 ns/op
Iteration   8: 2279.141 ns/op
Iteration   9: 2269.850 ns/op
Iteration  10: 2274.790 ns/op

# Run progress: 24.17% complete, ETA 00:54:32
# Fork: 2 of 2
# Warmup Iteration   1: 2819.280 ns/op
# Warmup Iteration   2: 2619.008 ns/op
# Warmup Iteration   3: 2255.175 ns/op
Iteration   1: 2264.650 ns/op
Iteration   2: 2274.619 ns/op
Iteration   3: 2256.534 ns/op
Iteration   4: 2264.985 ns/op
Iteration   5: 2256.507 ns/op
Iteration   6: 2268.225 ns/op
Iteration   7: 2271.836 ns/op
Iteration   8: 2258.681 ns/op
Iteration   9: 2257.456 ns/op
Iteration  10: 2272.919 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2268.737 ±(99.9%) 6.035 ns/op [Average]
  (min, avg, max) = (2256.507, 2268.737, 2279.141), stdev = 6.950
  CI (99.9%): [2262.702, 2274.772] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 24.22% complete, ETA 00:54:30
# Fork: 1 of 2
# Warmup Iteration   1: 1989.032 ns/op
# Warmup Iteration   2: 1324.077 ns/op
# Warmup Iteration   3: 1178.677 ns/op
Iteration   1: 1176.290 ns/op
Iteration   2: 1183.792 ns/op
Iteration   3: 1185.929 ns/op
Iteration   4: 1195.627 ns/op
Iteration   5: 1183.847 ns/op
Iteration   6: 1182.713 ns/op
Iteration   7: 1181.167 ns/op
Iteration   8: 1175.089 ns/op
Iteration   9: 1182.392 ns/op
Iteration  10: 1180.758 ns/op

# Run progress: 24.28% complete, ETA 00:54:28
# Fork: 2 of 2
# Warmup Iteration   1: 1999.685 ns/op
# Warmup Iteration   2: 1375.852 ns/op
# Warmup Iteration   3: 1182.617 ns/op
Iteration   1: 1183.390 ns/op
Iteration   2: 1181.219 ns/op
Iteration   3: 1182.012 ns/op
Iteration   4: 1181.810 ns/op
Iteration   5: 1182.860 ns/op
Iteration   6: 1192.764 ns/op
Iteration   7: 1183.761 ns/op
Iteration   8: 1198.174 ns/op
Iteration   9: 1185.082 ns/op
Iteration  10: 1181.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1184.032 ±(99.9%) 4.887 ns/op [Average]
  (min, avg, max) = (1175.089, 1184.032, 1198.174), stdev = 5.628
  CI (99.9%): [1179.145, 1188.919] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 24.33% complete, ETA 00:54:25
# Fork: 1 of 2
# Warmup Iteration   1: 1977.926 ns/op
# Warmup Iteration   2: 1347.442 ns/op
# Warmup Iteration   3: 1180.219 ns/op
Iteration   1: 1185.715 ns/op
Iteration   2: 1182.428 ns/op
Iteration   3: 1178.593 ns/op
Iteration   4: 1179.702 ns/op
Iteration   5: 1177.583 ns/op
Iteration   6: 1188.859 ns/op
Iteration   7: 1186.436 ns/op
Iteration   8: 1182.197 ns/op
Iteration   9: 1179.207 ns/op
Iteration  10: 1179.623 ns/op

# Run progress: 24.39% complete, ETA 00:54:23
# Fork: 2 of 2
# Warmup Iteration   1: 1983.650 ns/op
# Warmup Iteration   2: 1341.640 ns/op
# Warmup Iteration   3: 1178.637 ns/op
Iteration   1: 1179.680 ns/op
Iteration   2: 1177.649 ns/op
Iteration   3: 1176.251 ns/op
Iteration   4: 1176.589 ns/op
Iteration   5: 1179.097 ns/op
Iteration   6: 1179.588 ns/op
Iteration   7: 1180.089 ns/op
Iteration   8: 1184.110 ns/op
Iteration   9: 1178.180 ns/op
Iteration  10: 1178.200 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1180.489 ±(99.9%) 2.975 ns/op [Average]
  (min, avg, max) = (1176.251, 1180.489, 1188.859), stdev = 3.426
  CI (99.9%): [1177.514, 1183.463] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 24.44% complete, ETA 00:54:20
# Fork: 1 of 2
# Warmup Iteration   1: 1747.027 ns/op
# Warmup Iteration   2: 1453.983 ns/op
# Warmup Iteration   3: 1224.310 ns/op
Iteration   1: 1225.429 ns/op
Iteration   2: 1224.716 ns/op
Iteration   3: 1223.864 ns/op
Iteration   4: 1225.177 ns/op
Iteration   5: 1224.733 ns/op
Iteration   6: 1225.323 ns/op
Iteration   7: 1225.624 ns/op
Iteration   8: 1215.122 ns/op
Iteration   9: 1226.732 ns/op
Iteration  10: 1222.068 ns/op

# Run progress: 24.50% complete, ETA 00:54:18
# Fork: 2 of 2
# Warmup Iteration   1: 2099.534 ns/op
# Warmup Iteration   2: 1383.504 ns/op
# Warmup Iteration   3: 1223.145 ns/op
Iteration   1: 1227.480 ns/op
Iteration   2: 1223.243 ns/op
Iteration   3: 1228.531 ns/op
Iteration   4: 1222.663 ns/op
Iteration   5: 1222.492 ns/op
Iteration   6: 1227.245 ns/op
Iteration   7: 1223.386 ns/op
Iteration   8: 1224.611 ns/op
Iteration   9: 1231.204 ns/op
Iteration  10: 1225.345 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1224.749 ±(99.9%) 2.745 ns/op [Average]
  (min, avg, max) = (1215.122, 1224.749, 1231.204), stdev = 3.162
  CI (99.9%): [1222.004, 1227.495] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 24.56% complete, ETA 00:54:16
# Fork: 1 of 2
# Warmup Iteration   1: 13842.588 ns/op
# Warmup Iteration   2: 9160.034 ns/op
# Warmup Iteration   3: 7929.113 ns/op
Iteration   1: 7934.237 ns/op
Iteration   2: 7930.052 ns/op
Iteration   3: 7928.118 ns/op
Iteration   4: 7922.091 ns/op
Iteration   5: 7925.556 ns/op
Iteration   6: 7930.808 ns/op
Iteration   7: 7919.386 ns/op
Iteration   8: 7932.004 ns/op
Iteration   9: 7942.920 ns/op
Iteration  10: 7925.894 ns/op

# Run progress: 24.61% complete, ETA 00:54:13
# Fork: 2 of 2
# Warmup Iteration   1: 14442.852 ns/op
# Warmup Iteration   2: 9343.962 ns/op
# Warmup Iteration   3: 7996.275 ns/op
Iteration   1: 8003.453 ns/op
Iteration   2: 7977.001 ns/op
Iteration   3: 8013.267 ns/op
Iteration   4: 7994.248 ns/op
Iteration   5: 7989.355 ns/op
Iteration   6: 7970.449 ns/op
Iteration   7: 7983.999 ns/op
Iteration   8: 7981.443 ns/op
Iteration   9: 8004.757 ns/op
Iteration  10: 7998.129 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7960.358 ±(99.9%) 29.271 ns/op [Average]
  (min, avg, max) = (7919.386, 7960.358, 8013.267), stdev = 33.709
  CI (99.9%): [7931.087, 7989.630] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 24.67% complete, ETA 00:54:11
# Fork: 1 of 2
# Warmup Iteration   1: 38.607 ns/op
# Warmup Iteration   2: 65.347 ns/op
# Warmup Iteration   3: 35.663 ns/op
Iteration   1: 35.708 ns/op
Iteration   2: 35.654 ns/op
Iteration   3: 35.664 ns/op
Iteration   4: 35.688 ns/op
Iteration   5: 35.711 ns/op
Iteration   6: 36.109 ns/op
Iteration   7: 35.703 ns/op
Iteration   8: 34.551 ns/op
Iteration   9: 35.667 ns/op
Iteration  10: 35.757 ns/op

# Run progress: 24.72% complete, ETA 00:54:08
# Fork: 2 of 2
# Warmup Iteration   1: 38.840 ns/op
# Warmup Iteration   2: 66.705 ns/op
# Warmup Iteration   3: 35.648 ns/op
Iteration   1: 35.643 ns/op
Iteration   2: 35.721 ns/op
Iteration   3: 35.726 ns/op
Iteration   4: 35.639 ns/op
Iteration   5: 35.733 ns/op
Iteration   6: 36.148 ns/op
Iteration   7: 35.690 ns/op
Iteration   8: 34.430 ns/op
Iteration   9: 35.644 ns/op
Iteration  10: 35.649 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.612 ±(99.9%) 0.355 ns/op [Average]
  (min, avg, max) = (34.430, 35.612, 36.148), stdev = 0.408
  CI (99.9%): [35.257, 35.966] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 24.78% complete, ETA 00:54:06
# Fork: 1 of 2
# Warmup Iteration   1: 2992.170 ns/op
# Warmup Iteration   2: 2580.837 ns/op
# Warmup Iteration   3: 2494.938 ns/op
Iteration   1: 2247.497 ns/op
Iteration   2: 3017.023 ns/op
Iteration   3: 2549.396 ns/op
Iteration   4: 2290.390 ns/op
Iteration   5: 2170.799 ns/op
Iteration   6: 2016.271 ns/op
Iteration   7: 2107.591 ns/op
Iteration   8: 2043.206 ns/op
Iteration   9: 2032.126 ns/op
Iteration  10: 1845.381 ns/op

# Run progress: 24.83% complete, ETA 00:54:03
# Fork: 2 of 2
# Warmup Iteration   1: 3098.626 ns/op
# Warmup Iteration   2: 2551.264 ns/op
# Warmup Iteration   3: 2235.806 ns/op
Iteration   1: 2111.631 ns/op
Iteration   2: 2778.027 ns/op
Iteration   3: 2596.967 ns/op
Iteration   4: 2210.849 ns/op
Iteration   5: 2198.450 ns/op
Iteration   6: 2006.613 ns/op
Iteration   7: 2065.794 ns/op
Iteration   8: 2031.023 ns/op
Iteration   9: 1993.437 ns/op
Iteration  10: 1838.322 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2207.540 ±(99.9%) 265.608 ns/op [Average]
  (min, avg, max) = (1838.322, 2207.540, 3017.023), stdev = 305.875
  CI (99.9%): [1941.931, 2473.148] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 24.89% complete, ETA 00:54:01
# Fork: 1 of 2
# Warmup Iteration   1: 1850.018 ns/op
# Warmup Iteration   2: 2860.597 ns/op
# Warmup Iteration   3: 1935.435 ns/op
Iteration   1: 1545.484 ns/op
Iteration   2: 1093.638 ns/op
Iteration   3: 1112.156 ns/op
Iteration   4: 1205.316 ns/op
Iteration   5: 1102.384 ns/op
Iteration   6: 1159.797 ns/op
Iteration   7: 1163.251 ns/op
Iteration   8: 1135.728 ns/op
Iteration   9: 1130.883 ns/op
Iteration  10: 1265.541 ns/op

# Run progress: 24.94% complete, ETA 00:53:59
# Fork: 2 of 2
# Warmup Iteration   1: 1518.600 ns/op
# Warmup Iteration   2: 3365.045 ns/op
# Warmup Iteration   3: 2039.827 ns/op
Iteration   1: 1579.737 ns/op
Iteration   2: 1108.945 ns/op
Iteration   3: 1234.418 ns/op
Iteration   4: 1225.760 ns/op
Iteration   5: 1206.533 ns/op
Iteration   6: 1210.245 ns/op
Iteration   7: 1191.924 ns/op
Iteration   8: 1140.317 ns/op
Iteration   9: 1222.034 ns/op
Iteration  10: 1396.669 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1221.538 ±(99.9%) 118.213 ns/op [Average]
  (min, avg, max) = (1093.638, 1221.538, 1579.737), stdev = 136.134
  CI (99.9%): [1103.325, 1339.751] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 25.00% complete, ETA 00:53:56
# Fork: 1 of 2
# Warmup Iteration   1: 1488.028 ns/op
# Warmup Iteration   2: 2569.724 ns/op
# Warmup Iteration   3: 1992.278 ns/op
Iteration   1: 1561.993 ns/op
Iteration   2: 1109.284 ns/op
Iteration   3: 1201.792 ns/op
Iteration   4: 1213.825 ns/op
Iteration   5: 1157.530 ns/op
Iteration   6: 1221.412 ns/op
Iteration   7: 1197.630 ns/op
Iteration   8: 1833.749 ns/op
Iteration   9: 1185.208 ns/op
Iteration  10: 1316.487 ns/op

# Run progress: 25.06% complete, ETA 00:53:54
# Fork: 2 of 2
# Warmup Iteration   1: 1447.203 ns/op
# Warmup Iteration   2: 2789.091 ns/op
# Warmup Iteration   3: 1869.400 ns/op
Iteration   1: 1724.935 ns/op
Iteration   2: 1087.079 ns/op
Iteration   3: 1161.039 ns/op
Iteration   4: 1211.746 ns/op
Iteration   5: 1126.616 ns/op
Iteration   6: 1195.692 ns/op
Iteration   7: 1168.696 ns/op
Iteration   8: 1179.822 ns/op
Iteration   9: 1150.149 ns/op
Iteration  10: 1285.418 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1264.505 ±(99.9%) 175.995 ns/op [Average]
  (min, avg, max) = (1087.079, 1264.505, 1833.749), stdev = 202.676
  CI (99.9%): [1088.510, 1440.500] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 25.11% complete, ETA 00:53:52
# Fork: 1 of 2
# Warmup Iteration   1: 2545.895 ns/op
# Warmup Iteration   2: 2501.962 ns/op
# Warmup Iteration   3: 1681.688 ns/op
Iteration   1: 1304.649 ns/op
Iteration   2: 1086.639 ns/op
Iteration   3: 1048.361 ns/op
Iteration   4: 1113.909 ns/op
Iteration   5: 1023.233 ns/op
Iteration   6: 1051.273 ns/op
Iteration   7: 1099.983 ns/op
Iteration   8: 1063.096 ns/op
Iteration   9: 1037.004 ns/op
Iteration  10: 1134.951 ns/op

# Run progress: 25.17% complete, ETA 00:53:49
# Fork: 2 of 2
# Warmup Iteration   1: 2453.850 ns/op
# Warmup Iteration   2: 2359.297 ns/op
# Warmup Iteration   3: 1420.672 ns/op
Iteration   1: 1383.541 ns/op
Iteration   2: 1109.144 ns/op
Iteration   3: 1169.700 ns/op
Iteration   4: 1127.688 ns/op
Iteration   5: 1130.635 ns/op
Iteration   6: 1121.317 ns/op
Iteration   7: 1130.488 ns/op
Iteration   8: 1086.193 ns/op
Iteration   9: 1155.939 ns/op
Iteration  10: 1384.269 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1138.101 ±(99.9%) 89.815 ns/op [Average]
  (min, avg, max) = (1023.233, 1138.101, 1384.269), stdev = 103.431
  CI (99.9%): [1048.286, 1227.915] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 25.22% complete, ETA 00:53:47
# Fork: 1 of 2
# Warmup Iteration   1: 12925.261 ns/op
# Warmup Iteration   2: 8769.108 ns/op
# Warmup Iteration   3: 7645.774 ns/op
Iteration   1: 7684.512 ns/op
Iteration   2: 7645.163 ns/op
Iteration   3: 7636.243 ns/op
Iteration   4: 7634.831 ns/op
Iteration   5: 7616.214 ns/op
Iteration   6: 7629.017 ns/op
Iteration   7: 7646.233 ns/op
Iteration   8: 7635.301 ns/op
Iteration   9: 7680.994 ns/op
Iteration  10: 7643.740 ns/op

# Run progress: 25.28% complete, ETA 00:53:44
# Fork: 2 of 2
# Warmup Iteration   1: 13362.346 ns/op
# Warmup Iteration   2: 9317.145 ns/op
# Warmup Iteration   3: 8002.587 ns/op
Iteration   1: 8013.837 ns/op
Iteration   2: 7973.687 ns/op
Iteration   3: 7953.581 ns/op
Iteration   4: 7973.209 ns/op
Iteration   5: 7956.350 ns/op
Iteration   6: 7977.832 ns/op
Iteration   7: 7994.865 ns/op
Iteration   8: 7945.216 ns/op
Iteration   9: 8000.330 ns/op
Iteration  10: 7992.701 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7811.693 ±(99.9%) 149.466 ns/op [Average]
  (min, avg, max) = (7616.214, 7811.693, 8013.837), stdev = 172.125
  CI (99.9%): [7662.227, 7961.159] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 25.33% complete, ETA 00:53:42
# Fork: 1 of 2
# Warmup Iteration   1: 38.626 ns/op
# Warmup Iteration   2: 64.498 ns/op
# Warmup Iteration   3: 49.979 ns/op
Iteration   1: 49.997 ns/op
Iteration   2: 50.015 ns/op
Iteration   3: 49.983 ns/op
Iteration   4: 50.013 ns/op
Iteration   5: 50.050 ns/op
Iteration   6: 49.992 ns/op
Iteration   7: 50.064 ns/op
Iteration   8: 34.513 ns/op
Iteration   9: 50.007 ns/op
Iteration  10: 50.054 ns/op

# Run progress: 25.39% complete, ETA 00:53:39
# Fork: 2 of 2
# Warmup Iteration   1: 38.422 ns/op
# Warmup Iteration   2: 66.720 ns/op
# Warmup Iteration   3: 35.671 ns/op
Iteration   1: 35.630 ns/op
Iteration   2: 35.691 ns/op
Iteration   3: 35.671 ns/op
Iteration   4: 35.667 ns/op
Iteration   5: 35.699 ns/op
Iteration   6: 36.148 ns/op
Iteration   7: 35.716 ns/op
Iteration   8: 34.523 ns/op
Iteration   9: 35.693 ns/op
Iteration  10: 35.776 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.045 ±(99.9%) 6.434 ns/op [Average]
  (min, avg, max) = (34.513, 42.045, 50.064), stdev = 7.410
  CI (99.9%): [35.611, 48.480] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 25.44% complete, ETA 00:53:37
# Fork: 1 of 2
# Warmup Iteration   1: 599.104 ns/op
# Warmup Iteration   2: 571.136 ns/op
# Warmup Iteration   3: 490.360 ns/op
Iteration   1: 490.496 ns/op
Iteration   2: 490.532 ns/op
Iteration   3: 490.496 ns/op
Iteration   4: 487.743 ns/op
Iteration   5: 487.362 ns/op
Iteration   6: 487.597 ns/op
Iteration   7: 487.501 ns/op
Iteration   8: 489.106 ns/op
Iteration   9: 487.462 ns/op
Iteration  10: 487.494 ns/op

# Run progress: 25.50% complete, ETA 00:53:35
# Fork: 2 of 2
# Warmup Iteration   1: 591.220 ns/op
# Warmup Iteration   2: 553.916 ns/op
# Warmup Iteration   3: 490.711 ns/op
Iteration   1: 491.005 ns/op
Iteration   2: 490.906 ns/op
Iteration   3: 490.964 ns/op
Iteration   4: 488.602 ns/op
Iteration   5: 488.284 ns/op
Iteration   6: 488.329 ns/op
Iteration   7: 488.475 ns/op
Iteration   8: 507.944 ns/op
Iteration   9: 488.273 ns/op
Iteration  10: 488.315 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  489.844 ±(99.9%) 3.876 ns/op [Average]
  (min, avg, max) = (487.362, 489.844, 507.944), stdev = 4.463
  CI (99.9%): [485.969, 493.720] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 25.56% complete, ETA 00:53:32
# Fork: 1 of 2
# Warmup Iteration   1: 942.722 ns/op
# Warmup Iteration   2: 549.658 ns/op
# Warmup Iteration   3: 444.656 ns/op
Iteration   1: 445.054 ns/op
Iteration   2: 444.789 ns/op
Iteration   3: 444.525 ns/op
Iteration   4: 444.679 ns/op
Iteration   5: 444.940 ns/op
Iteration   6: 444.855 ns/op
Iteration   7: 444.955 ns/op
Iteration   8: 448.208 ns/op
Iteration   9: 444.533 ns/op
Iteration  10: 444.806 ns/op

# Run progress: 25.61% complete, ETA 00:53:30
# Fork: 2 of 2
# Warmup Iteration   1: 902.897 ns/op
# Warmup Iteration   2: 509.534 ns/op
# Warmup Iteration   3: 445.087 ns/op
Iteration   1: 443.656 ns/op
Iteration   2: 444.069 ns/op
Iteration   3: 443.751 ns/op
Iteration   4: 445.286 ns/op
Iteration   5: 446.270 ns/op
Iteration   6: 444.301 ns/op
Iteration   7: 443.819 ns/op
Iteration   8: 446.857 ns/op
Iteration   9: 444.065 ns/op
Iteration  10: 444.165 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  444.879 ±(99.9%) 0.966 ns/op [Average]
  (min, avg, max) = (443.656, 444.879, 448.208), stdev = 1.112
  CI (99.9%): [443.914, 445.845] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 25.67% complete, ETA 00:53:27
# Fork: 1 of 2
# Warmup Iteration   1: 819.528 ns/op
# Warmup Iteration   2: 508.698 ns/op
# Warmup Iteration   3: 449.312 ns/op
Iteration   1: 450.412 ns/op
Iteration   2: 449.558 ns/op
Iteration   3: 448.866 ns/op
Iteration   4: 450.663 ns/op
Iteration   5: 449.343 ns/op
Iteration   6: 449.240 ns/op
Iteration   7: 449.963 ns/op
Iteration   8: 439.076 ns/op
Iteration   9: 450.252 ns/op
Iteration  10: 449.064 ns/op

# Run progress: 25.72% complete, ETA 00:53:25
# Fork: 2 of 2
# Warmup Iteration   1: 780.644 ns/op
# Warmup Iteration   2: 509.738 ns/op
# Warmup Iteration   3: 436.329 ns/op
Iteration   1: 436.263 ns/op
Iteration   2: 436.324 ns/op
Iteration   3: 437.233 ns/op
Iteration   4: 436.570 ns/op
Iteration   5: 436.698 ns/op
Iteration   6: 436.868 ns/op
Iteration   7: 436.725 ns/op
Iteration   8: 439.293 ns/op
Iteration   9: 436.280 ns/op
Iteration  10: 436.077 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  442.739 ±(99.9%) 5.670 ns/op [Average]
  (min, avg, max) = (436.077, 442.739, 450.663), stdev = 6.530
  CI (99.9%): [437.068, 448.409] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 25.78% complete, ETA 00:53:23
# Fork: 1 of 2
# Warmup Iteration   1: 659.881 ns/op
# Warmup Iteration   2: 512.891 ns/op
# Warmup Iteration   3: 442.550 ns/op
Iteration   1: 442.548 ns/op
Iteration   2: 442.540 ns/op
Iteration   3: 442.369 ns/op
Iteration   4: 442.196 ns/op
Iteration   5: 441.323 ns/op
Iteration   6: 441.527 ns/op
Iteration   7: 442.579 ns/op
Iteration   8: 444.208 ns/op
Iteration   9: 441.887 ns/op
Iteration  10: 441.509 ns/op

# Run progress: 25.83% complete, ETA 00:53:20
# Fork: 2 of 2
# Warmup Iteration   1: 692.257 ns/op
# Warmup Iteration   2: 504.576 ns/op
# Warmup Iteration   3: 442.336 ns/op
Iteration   1: 441.388 ns/op
Iteration   2: 441.341 ns/op
Iteration   3: 441.332 ns/op
Iteration   4: 441.691 ns/op
Iteration   5: 441.639 ns/op
Iteration   6: 442.740 ns/op
Iteration   7: 442.513 ns/op
Iteration   8: 445.385 ns/op
Iteration   9: 442.372 ns/op
Iteration  10: 442.312 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  442.270 ±(99.9%) 0.878 ns/op [Average]
  (min, avg, max) = (441.323, 442.270, 445.385), stdev = 1.012
  CI (99.9%): [441.392, 443.148] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 25.89% complete, ETA 00:53:18
# Fork: 1 of 2
# Warmup Iteration   1: 495.456 ns/op
# Warmup Iteration   2: 448.857 ns/op
# Warmup Iteration   3: 398.181 ns/op
Iteration   1: 398.414 ns/op
Iteration   2: 398.544 ns/op
Iteration   3: 398.488 ns/op
Iteration   4: 402.684 ns/op
Iteration   5: 402.601 ns/op
Iteration   6: 402.524 ns/op
Iteration   7: 402.554 ns/op
Iteration   8: 402.932 ns/op
Iteration   9: 402.305 ns/op
Iteration  10: 402.645 ns/op

# Run progress: 25.94% complete, ETA 00:53:15
# Fork: 2 of 2
# Warmup Iteration   1: 453.164 ns/op
# Warmup Iteration   2: 394.424 ns/op
# Warmup Iteration   3: 357.464 ns/op
Iteration   1: 357.314 ns/op
Iteration   2: 357.210 ns/op
Iteration   3: 357.443 ns/op
Iteration   4: 361.406 ns/op
Iteration   5: 361.034 ns/op
Iteration   6: 361.608 ns/op
Iteration   7: 361.549 ns/op
Iteration   8: 361.891 ns/op
Iteration   9: 362.177 ns/op
Iteration  10: 361.469 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  380.840 ±(99.9%) 18.371 ns/op [Average]
  (min, avg, max) = (357.210, 380.840, 402.932), stdev = 21.156
  CI (99.9%): [362.468, 399.211] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 26.00% complete, ETA 00:53:13
# Fork: 1 of 2
# Warmup Iteration   1: 51.370 ns/op
# Warmup Iteration   2: 66.873 ns/op
# Warmup Iteration   3: 35.654 ns/op
Iteration   1: 35.637 ns/op
Iteration   2: 35.609 ns/op
Iteration   3: 35.670 ns/op
Iteration   4: 35.707 ns/op
Iteration   5: 35.657 ns/op
Iteration   6: 36.154 ns/op
Iteration   7: 35.688 ns/op
Iteration   8: 34.419 ns/op
Iteration   9: 35.692 ns/op
Iteration  10: 35.610 ns/op

# Run progress: 26.06% complete, ETA 00:53:11
# Fork: 2 of 2
# Warmup Iteration   1: 52.448 ns/op
# Warmup Iteration   2: 65.347 ns/op
# Warmup Iteration   3: 35.723 ns/op
Iteration   1: 35.694 ns/op
Iteration   2: 35.692 ns/op
Iteration   3: 35.671 ns/op
Iteration   4: 35.719 ns/op
Iteration   5: 35.674 ns/op
Iteration   6: 36.089 ns/op
Iteration   7: 35.678 ns/op
Iteration   8: 34.416 ns/op
Iteration   9: 35.623 ns/op
Iteration  10: 35.722 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.591 ±(99.9%) 0.369 ns/op [Average]
  (min, avg, max) = (34.416, 35.591, 36.154), stdev = 0.426
  CI (99.9%): [35.222, 35.961] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 26.11% complete, ETA 00:53:08
# Fork: 1 of 2
# Warmup Iteration   1: 14254.756 ns/op
# Warmup Iteration   2: 9902.180 ns/op
# Warmup Iteration   3: 7185.218 ns/op
Iteration   1: 4962.285 ns/op
Iteration   2: 4726.051 ns/op
Iteration   3: 4910.779 ns/op
Iteration   4: 5068.920 ns/op
Iteration   5: 5182.184 ns/op
Iteration   6: 4715.798 ns/op
Iteration   7: 4856.312 ns/op
Iteration   8: 4807.722 ns/op
Iteration   9: 5031.238 ns/op
Iteration  10: 5008.258 ns/op

# Run progress: 26.17% complete, ETA 00:53:06
# Fork: 2 of 2
# Warmup Iteration   1: 7544.887 ns/op
# Warmup Iteration   2: 10037.244 ns/op
# Warmup Iteration   3: 7739.281 ns/op
Iteration   1: 5143.416 ns/op
Iteration   2: 4957.554 ns/op
Iteration   3: 5116.014 ns/op
Iteration   4: 5348.004 ns/op
Iteration   5: 5273.654 ns/op
Iteration   6: 4952.106 ns/op
Iteration   7: 5091.844 ns/op
Iteration   8: 4973.969 ns/op
Iteration   9: 5110.130 ns/op
Iteration  10: 5220.933 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5022.858 ±(99.9%) 148.481 ns/op [Average]
  (min, avg, max) = (4715.798, 5022.858, 5348.004), stdev = 170.991
  CI (99.9%): [4874.377, 5171.340] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 26.22% complete, ETA 00:53:03
# Fork: 1 of 2
# Warmup Iteration   1: 13814.243 ns/op
# Warmup Iteration   2: 10124.764 ns/op
# Warmup Iteration   3: 10734.154 ns/op
Iteration   1: 6575.938 ns/op
Iteration   2: 7379.549 ns/op
Iteration   3: 7039.061 ns/op
Iteration   4: 4240.757 ns/op
Iteration   5: 6643.843 ns/op
Iteration   6: 5593.728 ns/op
Iteration   7: 4697.336 ns/op
Iteration   8: 4848.961 ns/op
Iteration   9: 7367.700 ns/op
Iteration  10: 7825.468 ns/op

# Run progress: 26.28% complete, ETA 00:53:01
# Fork: 2 of 2
# Warmup Iteration   1: 11019.416 ns/op
# Warmup Iteration   2: 11800.945 ns/op
# Warmup Iteration   3: 9959.918 ns/op
Iteration   1: 6570.164 ns/op
Iteration   2: 7294.827 ns/op
Iteration   3: 7066.811 ns/op
Iteration   4: 4251.471 ns/op
Iteration   5: 6583.566 ns/op
Iteration   6: 5517.314 ns/op
Iteration   7: 4735.055 ns/op
Iteration   8: 4907.879 ns/op
Iteration   9: 7357.730 ns/op
Iteration  10: 7791.928 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6214.454 ±(99.9%) 1071.172 ns/op [Average]
  (min, avg, max) = (4240.757, 6214.454, 7825.468), stdev = 1233.563
  CI (99.9%): [5143.283, 7285.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 26.33% complete, ETA 00:52:59
# Fork: 1 of 2
# Warmup Iteration   1: 14264.447 ns/op
# Warmup Iteration   2: 15040.038 ns/op
# Warmup Iteration   3: 8804.039 ns/op
Iteration   1: 6347.599 ns/op
Iteration   2: 6921.225 ns/op
Iteration   3: 6687.390 ns/op
Iteration   4: 4127.958 ns/op
Iteration   5: 6298.481 ns/op
Iteration   6: 5419.602 ns/op
Iteration   7: 4601.640 ns/op
Iteration   8: 4762.510 ns/op
Iteration   9: 7062.129 ns/op
Iteration  10: 7307.195 ns/op

# Run progress: 26.39% complete, ETA 00:52:56
# Fork: 2 of 2
# Warmup Iteration   1: 20708.306 ns/op
# Warmup Iteration   2: 13729.960 ns/op
# Warmup Iteration   3: 10585.160 ns/op
Iteration   1: 6361.361 ns/op
Iteration   2: 6907.625 ns/op
Iteration   3: 6678.100 ns/op
Iteration   4: 4079.676 ns/op
Iteration   5: 6291.678 ns/op
Iteration   6: 5449.081 ns/op
Iteration   7: 4527.244 ns/op
Iteration   8: 4759.945 ns/op
Iteration   9: 7004.373 ns/op
Iteration  10: 7286.289 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5944.055 ±(99.9%) 965.605 ns/op [Average]
  (min, avg, max) = (4079.676, 5944.055, 7307.195), stdev = 1111.993
  CI (99.9%): [4978.450, 6909.660] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 26.44% complete, ETA 00:52:54
# Fork: 1 of 2
# Warmup Iteration   1: 7727.007 ns/op
# Warmup Iteration   2: 9899.400 ns/op
# Warmup Iteration   3: 6596.144 ns/op
Iteration   1: 5276.005 ns/op
Iteration   2: 5746.721 ns/op
Iteration   3: 5627.494 ns/op
Iteration   4: 3944.797 ns/op
Iteration   5: 5264.980 ns/op
Iteration   6: 4793.343 ns/op
Iteration   7: 4075.454 ns/op
Iteration   8: 4164.027 ns/op
Iteration   9: 5515.520 ns/op
Iteration  10: 5719.989 ns/op

# Run progress: 26.50% complete, ETA 00:52:51
# Fork: 2 of 2
# Warmup Iteration   1: 7664.730 ns/op
# Warmup Iteration   2: 8450.260 ns/op
# Warmup Iteration   3: 6322.990 ns/op
Iteration   1: 5248.864 ns/op
Iteration   2: 5766.513 ns/op
Iteration   3: 5638.491 ns/op
Iteration   4: 4030.737 ns/op
Iteration   5: 5275.846 ns/op
Iteration   6: 4802.726 ns/op
Iteration   7: 4172.387 ns/op
Iteration   8: 4205.328 ns/op
Iteration   9: 5501.028 ns/op
Iteration  10: 5791.818 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5028.103 ±(99.9%) 593.711 ns/op [Average]
  (min, avg, max) = (3944.797, 5028.103, 5791.818), stdev = 683.719
  CI (99.9%): [4434.392, 5621.815] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 26.56% complete, ETA 00:52:49
# Fork: 1 of 2
# Warmup Iteration   1: 16125.128 ns/op
# Warmup Iteration   2: 27526.393 ns/op
# Warmup Iteration   3: 10500.246 ns/op
Iteration   1: 10913.385 ns/op
Iteration   2: 11961.203 ns/op
Iteration   3: 10902.871 ns/op
Iteration   4: 10779.655 ns/op
Iteration   5: 10522.139 ns/op
Iteration   6: 10404.801 ns/op
Iteration   7: 10725.094 ns/op
Iteration   8: 9182.991 ns/op
Iteration   9: 10259.696 ns/op
Iteration  10: 10489.332 ns/op

# Run progress: 26.61% complete, ETA 00:52:47
# Fork: 2 of 2
# Warmup Iteration   1: 15984.362 ns/op
# Warmup Iteration   2: 27513.674 ns/op
# Warmup Iteration   3: 10396.187 ns/op
Iteration   1: 10785.068 ns/op
Iteration   2: 11945.729 ns/op
Iteration   3: 10885.249 ns/op
Iteration   4: 10627.563 ns/op
Iteration   5: 10470.524 ns/op
Iteration   6: 10380.603 ns/op
Iteration   7: 10653.868 ns/op
Iteration   8: 9149.307 ns/op
Iteration   9: 10194.991 ns/op
Iteration  10: 10403.836 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10581.895 ±(99.9%) 583.073 ns/op [Average]
  (min, avg, max) = (9149.307, 10581.895, 11961.203), stdev = 671.468
  CI (99.9%): [9998.822, 11164.968] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 26.67% complete, ETA 00:52:44
# Fork: 1 of 2
# Warmup Iteration   1: 37.776 ns/op
# Warmup Iteration   2: 68.010 ns/op
# Warmup Iteration   3: 35.662 ns/op
Iteration   1: 35.692 ns/op
Iteration   2: 35.794 ns/op
Iteration   3: 35.649 ns/op
Iteration   4: 35.730 ns/op
Iteration   5: 35.687 ns/op
Iteration   6: 36.128 ns/op
Iteration   7: 35.713 ns/op
Iteration   8: 34.467 ns/op
Iteration   9: 35.658 ns/op
Iteration  10: 35.728 ns/op

# Run progress: 26.72% complete, ETA 00:52:42
# Fork: 2 of 2
# Warmup Iteration   1: 38.175 ns/op
# Warmup Iteration   2: 68.096 ns/op
# Warmup Iteration   3: 35.645 ns/op
Iteration   1: 35.720 ns/op
Iteration   2: 35.675 ns/op
Iteration   3: 35.672 ns/op
Iteration   4: 35.759 ns/op
Iteration   5: 35.676 ns/op
Iteration   6: 36.177 ns/op
Iteration   7: 35.728 ns/op
Iteration   8: 34.440 ns/op
Iteration   9: 35.735 ns/op
Iteration  10: 35.666 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.625 ±(99.9%) 0.369 ns/op [Average]
  (min, avg, max) = (34.440, 35.625, 36.177), stdev = 0.425
  CI (99.9%): [35.256, 35.994] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 26.78% complete, ETA 00:52:39
# Fork: 1 of 2
# Warmup Iteration   1: 5146.176 ns/op
# Warmup Iteration   2: 3943.831 ns/op
# Warmup Iteration   3: 3354.821 ns/op
Iteration   1: 3362.393 ns/op
Iteration   2: 3356.775 ns/op
Iteration   3: 3362.447 ns/op
Iteration   4: 3344.320 ns/op
Iteration   5: 3353.693 ns/op
Iteration   6: 3348.569 ns/op
Iteration   7: 3355.273 ns/op
Iteration   8: 3346.091 ns/op
Iteration   9: 3342.373 ns/op
Iteration  10: 3343.536 ns/op

# Run progress: 26.83% complete, ETA 00:52:37
# Fork: 2 of 2
# Warmup Iteration   1: 5226.996 ns/op
# Warmup Iteration   2: 3940.738 ns/op
# Warmup Iteration   3: 3370.282 ns/op
Iteration   1: 3360.418 ns/op
Iteration   2: 3356.378 ns/op
Iteration   3: 3356.858 ns/op
Iteration   4: 3348.623 ns/op
Iteration   5: 3354.687 ns/op
Iteration   6: 3344.470 ns/op
Iteration   7: 3363.114 ns/op
Iteration   8: 3343.029 ns/op
Iteration   9: 3347.638 ns/op
Iteration  10: 3346.513 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3351.860 ±(99.9%) 6.189 ns/op [Average]
  (min, avg, max) = (3342.373, 3351.860, 3363.114), stdev = 7.128
  CI (99.9%): [3345.671, 3358.049] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 26.89% complete, ETA 00:52:34
# Fork: 1 of 2
# Warmup Iteration   1: 15998.388 ns/op
# Warmup Iteration   2: 8784.167 ns/op
# Warmup Iteration   3: 7854.136 ns/op
Iteration   1: 7916.014 ns/op
Iteration   2: 7824.712 ns/op
Iteration   3: 7878.254 ns/op
Iteration   4: 7861.826 ns/op
Iteration   5: 7897.545 ns/op
Iteration   6: 7853.095 ns/op
Iteration   7: 7854.141 ns/op
Iteration   8: 7884.505 ns/op
Iteration   9: 7883.366 ns/op
Iteration  10: 7870.812 ns/op

# Run progress: 26.94% complete, ETA 00:52:32
# Fork: 2 of 2
# Warmup Iteration   1: 19314.181 ns/op
# Warmup Iteration   2: 8787.244 ns/op
# Warmup Iteration   3: 7919.129 ns/op
Iteration   1: 7881.323 ns/op
Iteration   2: 7924.480 ns/op
Iteration   3: 7883.449 ns/op
Iteration   4: 7909.625 ns/op
Iteration   5: 7882.208 ns/op
Iteration   6: 7918.562 ns/op
Iteration   7: 7865.005 ns/op
Iteration   8: 7901.115 ns/op
Iteration   9: 7876.203 ns/op
Iteration  10: 7933.561 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7884.990 ±(99.9%) 23.505 ns/op [Average]
  (min, avg, max) = (7824.712, 7884.990, 7933.561), stdev = 27.068
  CI (99.9%): [7861.485, 7908.495] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 27.00% complete, ETA 00:52:30
# Fork: 1 of 2
# Warmup Iteration   1: 15655.834 ns/op
# Warmup Iteration   2: 9042.800 ns/op
# Warmup Iteration   3: 7841.586 ns/op
Iteration   1: 7863.983 ns/op
Iteration   2: 7848.833 ns/op
Iteration   3: 7867.010 ns/op
Iteration   4: 7877.505 ns/op
Iteration   5: 7844.109 ns/op
Iteration   6: 7899.618 ns/op
Iteration   7: 7849.045 ns/op
Iteration   8: 7843.946 ns/op
Iteration   9: 7817.217 ns/op
Iteration  10: 7900.368 ns/op

# Run progress: 27.06% complete, ETA 00:52:27
# Fork: 2 of 2
# Warmup Iteration   1: 16483.348 ns/op
# Warmup Iteration   2: 8866.500 ns/op
# Warmup Iteration   3: 7880.794 ns/op
Iteration   1: 7839.650 ns/op
Iteration   2: 7910.442 ns/op
Iteration   3: 7915.644 ns/op
Iteration   4: 7887.085 ns/op
Iteration   5: 7883.380 ns/op
Iteration   6: 7885.334 ns/op
Iteration   7: 7897.903 ns/op
Iteration   8: 7900.120 ns/op
Iteration   9: 7895.678 ns/op
Iteration  10: 7861.985 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7874.443 ±(99.9%) 23.809 ns/op [Average]
  (min, avg, max) = (7817.217, 7874.443, 7915.644), stdev = 27.419
  CI (99.9%): [7850.634, 7898.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 27.11% complete, ETA 00:52:25
# Fork: 1 of 2
# Warmup Iteration   1: 8921.106 ns/op
# Warmup Iteration   2: 6369.052 ns/op
# Warmup Iteration   3: 5525.826 ns/op
Iteration   1: 5518.834 ns/op
Iteration   2: 5475.624 ns/op
Iteration   3: 5541.389 ns/op
Iteration   4: 5522.890 ns/op
Iteration   5: 5514.458 ns/op
Iteration   6: 5517.869 ns/op
Iteration   7: 5512.380 ns/op
Iteration   8: 5487.732 ns/op
Iteration   9: 5496.980 ns/op
Iteration  10: 5507.096 ns/op

# Run progress: 27.17% complete, ETA 00:52:22
# Fork: 2 of 2
# Warmup Iteration   1: 9172.018 ns/op
# Warmup Iteration   2: 6197.589 ns/op
# Warmup Iteration   3: 5528.159 ns/op
Iteration   1: 5542.344 ns/op
Iteration   2: 5504.485 ns/op
Iteration   3: 5525.051 ns/op
Iteration   4: 5532.661 ns/op
Iteration   5: 5502.871 ns/op
Iteration   6: 5534.567 ns/op
Iteration   7: 5529.813 ns/op
Iteration   8: 5509.596 ns/op
Iteration   9: 5553.879 ns/op
Iteration  10: 5480.107 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5515.531 ±(99.9%) 18.087 ns/op [Average]
  (min, avg, max) = (5475.624, 5515.531, 5553.879), stdev = 20.829
  CI (99.9%): [5497.444, 5533.618] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 27.22% complete, ETA 00:52:20
# Fork: 1 of 2
# Warmup Iteration   1: 5403.887 ns/op
# Warmup Iteration   2: 3871.603 ns/op
# Warmup Iteration   3: 3432.486 ns/op
Iteration   1: 3431.307 ns/op
Iteration   2: 3430.899 ns/op
Iteration   3: 3434.289 ns/op
Iteration   4: 3440.128 ns/op
Iteration   5: 3428.146 ns/op
Iteration   6: 3429.467 ns/op
Iteration   7: 3436.650 ns/op
Iteration   8: 3429.269 ns/op
Iteration   9: 3429.061 ns/op
Iteration  10: 3514.203 ns/op

# Run progress: 27.28% complete, ETA 00:52:18
# Fork: 2 of 2
# Warmup Iteration   1: 4636.321 ns/op
# Warmup Iteration   2: 3993.446 ns/op
# Warmup Iteration   3: 3421.793 ns/op
Iteration   1: 3424.107 ns/op
Iteration   2: 3426.810 ns/op
Iteration   3: 3425.922 ns/op
Iteration   4: 3426.377 ns/op
Iteration   5: 3420.979 ns/op
Iteration   6: 3427.268 ns/op
Iteration   7: 3423.015 ns/op
Iteration   8: 3428.455 ns/op
Iteration   9: 3419.869 ns/op
Iteration  10: 3424.698 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3432.546 ±(99.9%) 17.228 ns/op [Average]
  (min, avg, max) = (3419.869, 3432.546, 3514.203), stdev = 19.840
  CI (99.9%): [3415.318, 3449.774] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 27.33% complete, ETA 00:52:15
# Fork: 1 of 2
# Warmup Iteration   1: 38.856 ns/op
# Warmup Iteration   2: 66.453 ns/op
# Warmup Iteration   3: 35.705 ns/op
Iteration   1: 35.717 ns/op
Iteration   2: 35.667 ns/op
Iteration   3: 35.653 ns/op
Iteration   4: 35.735 ns/op
Iteration   5: 35.670 ns/op
Iteration   6: 36.094 ns/op
Iteration   7: 35.699 ns/op
Iteration   8: 34.517 ns/op
Iteration   9: 35.710 ns/op
Iteration  10: 35.718 ns/op

# Run progress: 27.39% complete, ETA 00:52:13
# Fork: 2 of 2
# Warmup Iteration   1: 37.770 ns/op
# Warmup Iteration   2: 67.894 ns/op
# Warmup Iteration   3: 35.616 ns/op
Iteration   1: 35.723 ns/op
Iteration   2: 35.703 ns/op
Iteration   3: 35.710 ns/op
Iteration   4: 35.699 ns/op
Iteration   5: 35.685 ns/op
Iteration   6: 36.107 ns/op
Iteration   7: 35.671 ns/op
Iteration   8: 34.544 ns/op
Iteration   9: 35.735 ns/op
Iteration  10: 35.641 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.620 ±(99.9%) 0.342 ns/op [Average]
  (min, avg, max) = (34.517, 35.620, 36.107), stdev = 0.393
  CI (99.9%): [35.278, 35.961] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 27.44% complete, ETA 00:52:10
# Fork: 1 of 2
# Warmup Iteration   1: 3682.382 ns/op
# Warmup Iteration   2: 3193.762 ns/op
# Warmup Iteration   3: 2772.059 ns/op
Iteration   1: 2901.086 ns/op
Iteration   2: 2764.790 ns/op
Iteration   3: 2789.258 ns/op
Iteration   4: 2777.019 ns/op
Iteration   5: 2767.412 ns/op
Iteration   6: 2790.410 ns/op
Iteration   7: 2768.782 ns/op
Iteration   8: 2784.115 ns/op
Iteration   9: 2766.459 ns/op
Iteration  10: 2787.246 ns/op

# Run progress: 27.50% complete, ETA 00:52:08
# Fork: 2 of 2
# Warmup Iteration   1: 3578.729 ns/op
# Warmup Iteration   2: 3085.408 ns/op
# Warmup Iteration   3: 2652.167 ns/op
Iteration   1: 2666.724 ns/op
Iteration   2: 2646.901 ns/op
Iteration   3: 2667.561 ns/op
Iteration   4: 2667.977 ns/op
Iteration   5: 2644.198 ns/op
Iteration   6: 2676.276 ns/op
Iteration   7: 2642.658 ns/op
Iteration   8: 2678.365 ns/op
Iteration   9: 2654.852 ns/op
Iteration  10: 2677.617 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2725.985 ±(99.9%) 62.223 ns/op [Average]
  (min, avg, max) = (2642.658, 2725.985, 2901.086), stdev = 71.656
  CI (99.9%): [2663.762, 2788.208] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 27.56% complete, ETA 00:52:06
# Fork: 1 of 2
# Warmup Iteration   1: 1786.020 ns/op
# Warmup Iteration   2: 1194.167 ns/op
# Warmup Iteration   3: 1050.951 ns/op
Iteration   1: 1051.975 ns/op
Iteration   2: 1050.908 ns/op
Iteration   3: 1050.851 ns/op
Iteration   4: 1050.350 ns/op
Iteration   5: 1056.193 ns/op
Iteration   6: 1052.089 ns/op
Iteration   7: 1051.498 ns/op
Iteration   8: 1062.442 ns/op
Iteration   9: 1051.382 ns/op
Iteration  10: 1051.549 ns/op

# Run progress: 27.61% complete, ETA 00:52:03
# Fork: 2 of 2
# Warmup Iteration   1: 1746.797 ns/op
# Warmup Iteration   2: 1216.530 ns/op
# Warmup Iteration   3: 1054.384 ns/op
Iteration   1: 1065.259 ns/op
Iteration   2: 1054.732 ns/op
Iteration   3: 1059.292 ns/op
Iteration   4: 1056.432 ns/op
Iteration   5: 1055.040 ns/op
Iteration   6: 1056.056 ns/op
Iteration   7: 1052.488 ns/op
Iteration   8: 1062.147 ns/op
Iteration   9: 1055.369 ns/op
Iteration  10: 1056.523 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1055.129 ±(99.9%) 3.747 ns/op [Average]
  (min, avg, max) = (1050.350, 1055.129, 1065.259), stdev = 4.315
  CI (99.9%): [1051.382, 1058.875] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 27.67% complete, ETA 00:52:01
# Fork: 1 of 2
# Warmup Iteration   1: 1730.972 ns/op
# Warmup Iteration   2: 1180.324 ns/op
# Warmup Iteration   3: 1051.516 ns/op
Iteration   1: 1050.184 ns/op
Iteration   2: 1051.943 ns/op
Iteration   3: 1047.811 ns/op
Iteration   4: 1051.715 ns/op
Iteration   5: 1048.565 ns/op
Iteration   6: 1053.838 ns/op
Iteration   7: 1050.972 ns/op
Iteration   8: 1052.928 ns/op
Iteration   9: 1049.552 ns/op
Iteration  10: 1048.844 ns/op

# Run progress: 27.72% complete, ETA 00:51:58
# Fork: 2 of 2
# Warmup Iteration   1: 1789.866 ns/op
# Warmup Iteration   2: 1258.023 ns/op
# Warmup Iteration   3: 1035.221 ns/op
Iteration   1: 1033.674 ns/op
Iteration   2: 1037.589 ns/op
Iteration   3: 1036.777 ns/op
Iteration   4: 1038.445 ns/op
Iteration   5: 1039.026 ns/op
Iteration   6: 1036.631 ns/op
Iteration   7: 1034.790 ns/op
Iteration   8: 1040.602 ns/op
Iteration   9: 1046.706 ns/op
Iteration  10: 1037.480 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1044.404 ±(99.9%) 6.070 ns/op [Average]
  (min, avg, max) = (1033.674, 1044.404, 1053.838), stdev = 6.990
  CI (99.9%): [1038.334, 1050.473] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 27.78% complete, ETA 00:51:56
# Fork: 1 of 2
# Warmup Iteration   1: 2129.203 ns/op
# Warmup Iteration   2: 1748.888 ns/op
# Warmup Iteration   3: 1475.114 ns/op
Iteration   1: 1473.591 ns/op
Iteration   2: 1473.298 ns/op
Iteration   3: 1474.998 ns/op
Iteration   4: 1475.053 ns/op
Iteration   5: 1474.415 ns/op
Iteration   6: 1474.182 ns/op
Iteration   7: 1475.919 ns/op
Iteration   8: 1478.200 ns/op
Iteration   9: 1475.686 ns/op
Iteration  10: 1474.541 ns/op

# Run progress: 27.83% complete, ETA 00:51:54
# Fork: 2 of 2
# Warmup Iteration   1: 2331.327 ns/op
# Warmup Iteration   2: 1699.376 ns/op
# Warmup Iteration   3: 1498.486 ns/op
Iteration   1: 1496.598 ns/op
Iteration   2: 1496.140 ns/op
Iteration   3: 1495.959 ns/op
Iteration   4: 1498.596 ns/op
Iteration   5: 1497.783 ns/op
Iteration   6: 1497.054 ns/op
Iteration   7: 1498.593 ns/op
Iteration   8: 1503.153 ns/op
Iteration   9: 1496.378 ns/op
Iteration  10: 1499.293 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1486.472 ±(99.9%) 10.346 ns/op [Average]
  (min, avg, max) = (1473.298, 1486.472, 1503.153), stdev = 11.914
  CI (99.9%): [1476.126, 1496.817] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 27.89% complete, ETA 00:51:51
# Fork: 1 of 2
# Warmup Iteration   1: 14423.789 ns/op
# Warmup Iteration   2: 9003.538 ns/op
# Warmup Iteration   3: 8034.583 ns/op
Iteration   1: 8021.157 ns/op
Iteration   2: 8054.020 ns/op
Iteration   3: 8025.990 ns/op
Iteration   4: 8028.820 ns/op
Iteration   5: 8039.438 ns/op
Iteration   6: 8024.179 ns/op
Iteration   7: 8027.564 ns/op
Iteration   8: 8040.991 ns/op
Iteration   9: 8044.661 ns/op
Iteration  10: 8050.984 ns/op

# Run progress: 27.94% complete, ETA 00:51:49
# Fork: 2 of 2
# Warmup Iteration   1: 12944.302 ns/op
# Warmup Iteration   2: 9454.867 ns/op
# Warmup Iteration   3: 8180.308 ns/op
Iteration   1: 8182.396 ns/op
Iteration   2: 8156.968 ns/op
Iteration   3: 8148.107 ns/op
Iteration   4: 8152.893 ns/op
Iteration   5: 8136.664 ns/op
Iteration   6: 8149.585 ns/op
Iteration   7: 8134.528 ns/op
Iteration   8: 8134.495 ns/op
Iteration   9: 8159.254 ns/op
Iteration  10: 8168.755 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8094.072 ±(99.9%) 53.214 ns/op [Average]
  (min, avg, max) = (8021.157, 8094.072, 8182.396), stdev = 61.281
  CI (99.9%): [8040.859, 8147.286] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 28.00% complete, ETA 00:51:46
# Fork: 1 of 2
# Warmup Iteration   1: 51.378 ns/op
# Warmup Iteration   2: 66.818 ns/op
# Warmup Iteration   3: 35.724 ns/op
Iteration   1: 35.619 ns/op
Iteration   2: 35.699 ns/op
Iteration   3: 35.630 ns/op
Iteration   4: 35.696 ns/op
Iteration   5: 35.617 ns/op
Iteration   6: 36.160 ns/op
Iteration   7: 35.682 ns/op
Iteration   8: 34.455 ns/op
Iteration   9: 35.666 ns/op
Iteration  10: 35.688 ns/op

# Run progress: 28.06% complete, ETA 00:51:44
# Fork: 2 of 2
# Warmup Iteration   1: 38.325 ns/op
# Warmup Iteration   2: 66.546 ns/op
# Warmup Iteration   3: 35.632 ns/op
Iteration   1: 35.661 ns/op
Iteration   2: 35.667 ns/op
Iteration   3: 35.700 ns/op
Iteration   4: 35.724 ns/op
Iteration   5: 35.654 ns/op
Iteration   6: 36.168 ns/op
Iteration   7: 35.692 ns/op
Iteration   8: 34.478 ns/op
Iteration   9: 35.614 ns/op
Iteration  10: 35.709 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.599 ±(99.9%) 0.362 ns/op [Average]
  (min, avg, max) = (34.455, 35.599, 36.168), stdev = 0.417
  CI (99.9%): [35.237, 35.961] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 28.11% complete, ETA 00:51:42
# Fork: 1 of 2
# Warmup Iteration   1: 2823.731 ns/op
# Warmup Iteration   2: 2934.664 ns/op
# Warmup Iteration   3: 2477.448 ns/op
Iteration   1: 2232.326 ns/op
Iteration   2: 2203.132 ns/op
Iteration   3: 2119.484 ns/op
Iteration   4: 3065.200 ns/op
Iteration   5: 2407.765 ns/op
Iteration   6: 2442.256 ns/op
Iteration   7: 1989.350 ns/op
Iteration   8: 2055.814 ns/op
Iteration   9: 2008.512 ns/op
Iteration  10: 2107.561 ns/op

# Run progress: 28.17% complete, ETA 00:51:39
# Fork: 2 of 2
# Warmup Iteration   1: 2789.945 ns/op
# Warmup Iteration   2: 2695.227 ns/op
# Warmup Iteration   3: 2502.497 ns/op
Iteration   1: 2222.148 ns/op
Iteration   2: 2193.786 ns/op
Iteration   3: 2121.760 ns/op
Iteration   4: 2547.286 ns/op
Iteration   5: 2349.405 ns/op
Iteration   6: 2367.930 ns/op
Iteration   7: 1963.835 ns/op
Iteration   8: 2081.881 ns/op
Iteration   9: 1846.233 ns/op
Iteration  10: 2068.924 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2219.729 ±(99.9%) 231.500 ns/op [Average]
  (min, avg, max) = (1846.233, 2219.729, 3065.200), stdev = 266.596
  CI (99.9%): [1988.229, 2451.229] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 28.22% complete, ETA 00:51:37
# Fork: 1 of 2
# Warmup Iteration   1: 2098.776 ns/op
# Warmup Iteration   2: 1996.052 ns/op
# Warmup Iteration   3: 1530.938 ns/op
Iteration   1: 1483.994 ns/op
Iteration   2: 1183.153 ns/op
Iteration   3: 1168.275 ns/op
Iteration   4: 1227.379 ns/op
Iteration   5: 1169.231 ns/op
Iteration   6: 1201.359 ns/op
Iteration   7: 1194.370 ns/op
Iteration   8: 1676.570 ns/op
Iteration   9: 1181.232 ns/op
Iteration  10: 1208.908 ns/op

# Run progress: 28.28% complete, ETA 00:51:34
# Fork: 2 of 2
# Warmup Iteration   1: 1668.644 ns/op
# Warmup Iteration   2: 1985.090 ns/op
# Warmup Iteration   3: 1594.089 ns/op
Iteration   1: 1391.691 ns/op
Iteration   2: 1131.743 ns/op
Iteration   3: 1140.254 ns/op
Iteration   4: 1119.545 ns/op
Iteration   5: 1087.405 ns/op
Iteration   6: 1129.095 ns/op
Iteration   7: 1213.271 ns/op
Iteration   8: 1386.659 ns/op
Iteration   9: 1144.816 ns/op
Iteration  10: 1152.989 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1229.597 ±(99.9%) 126.486 ns/op [Average]
  (min, avg, max) = (1087.405, 1229.597, 1676.570), stdev = 145.662
  CI (99.9%): [1103.111, 1356.083] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 28.33% complete, ETA 00:51:32
# Fork: 1 of 2
# Warmup Iteration   1: 2199.611 ns/op
# Warmup Iteration   2: 2653.091 ns/op
# Warmup Iteration   3: 1491.174 ns/op
Iteration   1: 1471.533 ns/op
Iteration   2: 1144.368 ns/op
Iteration   3: 1174.098 ns/op
Iteration   4: 1174.340 ns/op
Iteration   5: 1165.836 ns/op
Iteration   6: 1184.870 ns/op
Iteration   7: 1176.951 ns/op
Iteration   8: 1604.368 ns/op
Iteration   9: 1157.024 ns/op
Iteration  10: 1190.846 ns/op

# Run progress: 28.39% complete, ETA 00:51:30
# Fork: 2 of 2
# Warmup Iteration   1: 2106.457 ns/op
# Warmup Iteration   2: 1918.121 ns/op
# Warmup Iteration   3: 2511.989 ns/op
Iteration   1: 1368.489 ns/op
Iteration   2: 1109.687 ns/op
Iteration   3: 1260.997 ns/op
Iteration   4: 1106.981 ns/op
Iteration   5: 1097.284 ns/op
Iteration   6: 1129.806 ns/op
Iteration   7: 1349.079 ns/op
Iteration   8: 1769.074 ns/op
Iteration   9: 1264.496 ns/op
Iteration  10: 1314.248 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1260.719 ±(99.9%) 154.243 ns/op [Average]
  (min, avg, max) = (1097.284, 1260.719, 1769.074), stdev = 177.626
  CI (99.9%): [1106.476, 1414.961] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 28.44% complete, ETA 00:51:27
# Fork: 1 of 2
# Warmup Iteration   1: 1813.997 ns/op
# Warmup Iteration   2: 1836.284 ns/op
# Warmup Iteration   3: 1494.177 ns/op
Iteration   1: 1275.765 ns/op
Iteration   2: 1085.557 ns/op
Iteration   3: 1201.412 ns/op
Iteration   4: 1075.364 ns/op
Iteration   5: 1051.816 ns/op
Iteration   6: 1060.356 ns/op
Iteration   7: 1245.199 ns/op
Iteration   8: 1406.954 ns/op
Iteration   9: 1185.095 ns/op
Iteration  10: 1194.982 ns/op

# Run progress: 28.50% complete, ETA 00:51:25
# Fork: 2 of 2
# Warmup Iteration   1: 2178.454 ns/op
# Warmup Iteration   2: 2056.060 ns/op
# Warmup Iteration   3: 1383.155 ns/op
Iteration   1: 1447.204 ns/op
Iteration   2: 1099.640 ns/op
Iteration   3: 1163.918 ns/op
Iteration   4: 1099.465 ns/op
Iteration   5: 1086.347 ns/op
Iteration   6: 1073.401 ns/op
Iteration   7: 1219.817 ns/op
Iteration   8: 1392.629 ns/op
Iteration   9: 1156.484 ns/op
Iteration  10: 1200.926 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1186.117 ±(99.9%) 103.136 ns/op [Average]
  (min, avg, max) = (1051.816, 1186.117, 1447.204), stdev = 118.771
  CI (99.9%): [1082.981, 1289.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 28.56% complete, ETA 00:51:22
# Fork: 1 of 2
# Warmup Iteration   1: 14331.217 ns/op
# Warmup Iteration   2: 9352.310 ns/op
# Warmup Iteration   3: 8049.331 ns/op
Iteration   1: 7956.751 ns/op
Iteration   2: 7977.940 ns/op
Iteration   3: 8062.024 ns/op
Iteration   4: 8007.616 ns/op
Iteration   5: 8116.124 ns/op
Iteration   6: 8867.259 ns/op
Iteration   7: 8052.553 ns/op
Iteration   8: 8007.742 ns/op
Iteration   9: 8038.090 ns/op
Iteration  10: 8040.942 ns/op

# Run progress: 28.61% complete, ETA 00:51:20
# Fork: 2 of 2
# Warmup Iteration   1: 13470.242 ns/op
# Warmup Iteration   2: 8993.616 ns/op
# Warmup Iteration   3: 8053.504 ns/op
Iteration   1: 8000.424 ns/op
Iteration   2: 8016.621 ns/op
Iteration   3: 8022.229 ns/op
Iteration   4: 8017.421 ns/op
Iteration   5: 8063.449 ns/op
Iteration   6: 9702.398 ns/op
Iteration   7: 8067.959 ns/op
Iteration   8: 8033.460 ns/op
Iteration   9: 8055.915 ns/op
Iteration  10: 8059.025 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8158.297 ±(99.9%) 355.936 ns/op [Average]
  (min, avg, max) = (7956.751, 8158.297, 9702.398), stdev = 409.896
  CI (99.9%): [7802.361, 8514.233] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 28.67% complete, ETA 00:51:18
# Fork: 1 of 2
# Warmup Iteration   1: 38.344 ns/op
# Warmup Iteration   2: 66.538 ns/op
# Warmup Iteration   3: 35.694 ns/op
Iteration   1: 35.690 ns/op
Iteration   2: 35.635 ns/op
Iteration   3: 35.630 ns/op
Iteration   4: 35.693 ns/op
Iteration   5: 35.673 ns/op
Iteration   6: 36.173 ns/op
Iteration   7: 35.652 ns/op
Iteration   8: 34.529 ns/op
Iteration   9: 35.708 ns/op
Iteration  10: 35.667 ns/op

# Run progress: 28.72% complete, ETA 00:51:15
# Fork: 2 of 2
# Warmup Iteration   1: 38.106 ns/op
# Warmup Iteration   2: 63.466 ns/op
# Warmup Iteration   3: 35.665 ns/op
Iteration   1: 35.652 ns/op
Iteration   2: 35.677 ns/op
Iteration   3: 35.721 ns/op
Iteration   4: 35.734 ns/op
Iteration   5: 35.743 ns/op
Iteration   6: 36.164 ns/op
Iteration   7: 35.739 ns/op
Iteration   8: 34.528 ns/op
Iteration   9: 35.688 ns/op
Iteration  10: 35.663 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.618 ±(99.9%) 0.349 ns/op [Average]
  (min, avg, max) = (34.528, 35.618, 36.173), stdev = 0.402
  CI (99.9%): [35.269, 35.967] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 28.78% complete, ETA 00:51:13
# Fork: 1 of 2
# Warmup Iteration   1: 1368.486 ns/op
# Warmup Iteration   2: 1222.347 ns/op
# Warmup Iteration   3: 1040.479 ns/op
Iteration   1: 1040.705 ns/op
Iteration   2: 1041.652 ns/op
Iteration   3: 1041.237 ns/op
Iteration   4: 1030.434 ns/op
Iteration   5: 1057.452 ns/op
Iteration   6: 1040.678 ns/op
Iteration   7: 1044.865 ns/op
Iteration   8: 1030.214 ns/op
Iteration   9: 1031.037 ns/op
Iteration  10: 1030.029 ns/op

# Run progress: 28.83% complete, ETA 00:51:10
# Fork: 2 of 2
# Warmup Iteration   1: 1334.826 ns/op
# Warmup Iteration   2: 1191.998 ns/op
# Warmup Iteration   3: 1040.250 ns/op
Iteration   1: 1040.151 ns/op
Iteration   2: 1040.108 ns/op
Iteration   3: 1042.067 ns/op
Iteration   4: 1028.656 ns/op
Iteration   5: 1052.895 ns/op
Iteration   6: 1038.291 ns/op
Iteration   7: 1048.174 ns/op
Iteration   8: 1035.509 ns/op
Iteration   9: 1038.895 ns/op
Iteration  10: 1038.559 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1039.580 ±(99.9%) 6.576 ns/op [Average]
  (min, avg, max) = (1028.656, 1039.580, 1057.452), stdev = 7.572
  CI (99.9%): [1033.005, 1046.156] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 28.89% complete, ETA 00:51:08
# Fork: 1 of 2
# Warmup Iteration   1: 921.537 ns/op
# Warmup Iteration   2: 505.245 ns/op
# Warmup Iteration   3: 442.764 ns/op
Iteration   1: 442.743 ns/op
Iteration   2: 443.287 ns/op
Iteration   3: 442.595 ns/op
Iteration   4: 442.690 ns/op
Iteration   5: 442.793 ns/op
Iteration   6: 443.370 ns/op
Iteration   7: 442.694 ns/op
Iteration   8: 445.596 ns/op
Iteration   9: 442.712 ns/op
Iteration  10: 442.955 ns/op

# Run progress: 28.94% complete, ETA 00:51:06
# Fork: 2 of 2
# Warmup Iteration   1: 939.371 ns/op
# Warmup Iteration   2: 511.195 ns/op
# Warmup Iteration   3: 442.908 ns/op
Iteration   1: 443.076 ns/op
Iteration   2: 443.048 ns/op
Iteration   3: 443.163 ns/op
Iteration   4: 443.058 ns/op
Iteration   5: 443.826 ns/op
Iteration   6: 443.060 ns/op
Iteration   7: 443.350 ns/op
Iteration   8: 445.714 ns/op
Iteration   9: 442.882 ns/op
Iteration  10: 442.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  443.279 ±(99.9%) 0.750 ns/op [Average]
  (min, avg, max) = (442.595, 443.279, 445.714), stdev = 0.864
  CI (99.9%): [442.529, 444.029] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 29.00% complete, ETA 00:51:03
# Fork: 1 of 2
# Warmup Iteration   1: 774.353 ns/op
# Warmup Iteration   2: 504.573 ns/op
# Warmup Iteration   3: 441.583 ns/op
Iteration   1: 441.952 ns/op
Iteration   2: 443.057 ns/op
Iteration   3: 442.954 ns/op
Iteration   4: 442.865 ns/op
Iteration   5: 442.244 ns/op
Iteration   6: 441.916 ns/op
Iteration   7: 443.357 ns/op
Iteration   8: 444.884 ns/op
Iteration   9: 443.031 ns/op
Iteration  10: 441.766 ns/op

# Run progress: 29.06% complete, ETA 00:51:01
# Fork: 2 of 2
# Warmup Iteration   1: 1233.127 ns/op
# Warmup Iteration   2: 506.583 ns/op
# Warmup Iteration   3: 443.032 ns/op
Iteration   1: 464.120 ns/op
Iteration   2: 442.707 ns/op
Iteration   3: 443.699 ns/op
Iteration   4: 442.766 ns/op
Iteration   5: 442.938 ns/op
Iteration   6: 442.778 ns/op
Iteration   7: 443.024 ns/op
Iteration   8: 445.732 ns/op
Iteration   9: 442.743 ns/op
Iteration  10: 445.009 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  444.177 ±(99.9%) 4.172 ns/op [Average]
  (min, avg, max) = (441.766, 444.177, 464.120), stdev = 4.805
  CI (99.9%): [440.005, 448.350] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 29.11% complete, ETA 00:50:58
# Fork: 1 of 2
# Warmup Iteration   1: 669.726 ns/op
# Warmup Iteration   2: 527.510 ns/op
# Warmup Iteration   3: 438.884 ns/op
Iteration   1: 427.739 ns/op
Iteration   2: 440.323 ns/op
Iteration   3: 410.049 ns/op
Iteration   4: 437.653 ns/op
Iteration   5: 416.070 ns/op
Iteration   6: 424.700 ns/op
Iteration   7: 440.058 ns/op
Iteration   8: 425.481 ns/op
Iteration   9: 434.592 ns/op
Iteration  10: 441.058 ns/op

# Run progress: 29.17% complete, ETA 00:50:56
# Fork: 2 of 2
# Warmup Iteration   1: 612.368 ns/op
# Warmup Iteration   2: 502.554 ns/op
# Warmup Iteration   3: 445.238 ns/op
Iteration   1: 445.851 ns/op
Iteration   2: 445.499 ns/op
Iteration   3: 445.187 ns/op
Iteration   4: 445.640 ns/op
Iteration   5: 446.340 ns/op
Iteration   6: 446.391 ns/op
Iteration   7: 446.549 ns/op
Iteration   8: 447.327 ns/op
Iteration   9: 445.249 ns/op
Iteration  10: 445.440 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  437.860 ±(99.9%) 9.693 ns/op [Average]
  (min, avg, max) = (410.049, 437.860, 447.327), stdev = 11.162
  CI (99.9%): [428.167, 447.553] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 29.22% complete, ETA 00:50:54
# Fork: 1 of 2
# Warmup Iteration   1: 378.355 ns/op
# Warmup Iteration   2: 330.040 ns/op
# Warmup Iteration   3: 297.497 ns/op
Iteration   1: 296.356 ns/op
Iteration   2: 296.229 ns/op
Iteration   3: 296.381 ns/op
Iteration   4: 300.959 ns/op
Iteration   5: 300.767 ns/op
Iteration   6: 301.876 ns/op
Iteration   7: 300.799 ns/op
Iteration   8: 301.461 ns/op
Iteration   9: 301.048 ns/op
Iteration  10: 300.875 ns/op

# Run progress: 29.28% complete, ETA 00:50:51
# Fork: 2 of 2
# Warmup Iteration   1: 343.762 ns/op
# Warmup Iteration   2: 337.567 ns/op
# Warmup Iteration   3: 298.115 ns/op
Iteration   1: 296.368 ns/op
Iteration   2: 296.427 ns/op
Iteration   3: 296.430 ns/op
Iteration   4: 300.845 ns/op
Iteration   5: 300.894 ns/op
Iteration   6: 300.859 ns/op
Iteration   7: 300.816 ns/op
Iteration   8: 301.300 ns/op
Iteration   9: 300.831 ns/op
Iteration  10: 301.018 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  299.627 ±(99.9%) 1.916 ns/op [Average]
  (min, avg, max) = (296.229, 299.627, 301.876), stdev = 2.207
  CI (99.9%): [297.711, 301.543] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 29.33% complete, ETA 00:50:49
# Fork: 1 of 2
# Warmup Iteration   1: 38.144 ns/op
# Warmup Iteration   2: 66.995 ns/op
# Warmup Iteration   3: 35.659 ns/op
Iteration   1: 35.695 ns/op
Iteration   2: 35.637 ns/op
Iteration   3: 35.672 ns/op
Iteration   4: 35.663 ns/op
Iteration   5: 35.689 ns/op
Iteration   6: 36.171 ns/op
Iteration   7: 35.709 ns/op
Iteration   8: 34.426 ns/op
Iteration   9: 35.750 ns/op
Iteration  10: 35.691 ns/op

# Run progress: 29.39% complete, ETA 00:50:46
# Fork: 2 of 2
# Warmup Iteration   1: 51.576 ns/op
# Warmup Iteration   2: 66.506 ns/op
# Warmup Iteration   3: 35.683 ns/op
Iteration   1: 35.677 ns/op
Iteration   2: 35.683 ns/op
Iteration   3: 35.574 ns/op
Iteration   4: 35.628 ns/op
Iteration   5: 35.698 ns/op
Iteration   6: 36.149 ns/op
Iteration   7: 35.607 ns/op
Iteration   8: 34.417 ns/op
Iteration   9: 35.645 ns/op
Iteration  10: 35.620 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.590 ±(99.9%) 0.373 ns/op [Average]
  (min, avg, max) = (34.417, 35.590, 36.171), stdev = 0.429
  CI (99.9%): [35.217, 35.963] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 29.44% complete, ETA 00:50:44
# Fork: 1 of 2
# Warmup Iteration   1: 11181.059 ns/op
# Warmup Iteration   2: 5676.485 ns/op
# Warmup Iteration   3: 4800.308 ns/op
Iteration   1: 26380.222 ns/op
Iteration   2: 5642.926 ns/op
Iteration   3: 5511.905 ns/op
Iteration   4: 5339.199 ns/op
Iteration   5: 5313.793 ns/op
Iteration   6: 5064.102 ns/op
Iteration   7: 5581.457 ns/op
Iteration   8: 5695.288 ns/op
Iteration   9: 5333.706 ns/op
Iteration  10: 5220.606 ns/op

# Run progress: 29.50% complete, ETA 00:50:42
# Fork: 2 of 2
# Warmup Iteration   1: 9753.574 ns/op
# Warmup Iteration   2: 5868.476 ns/op
# Warmup Iteration   3: 4990.702 ns/op
Iteration   1: 243451.256 ns/op
Iteration   2: 5765.967 ns/op
Iteration   3: 5226.103 ns/op
Iteration   4: 5032.704 ns/op
Iteration   5: 5002.317 ns/op
Iteration   6: 4827.109 ns/op
Iteration   7: 5197.871 ns/op
Iteration   8: 5373.712 ns/op
Iteration   9: 5076.075 ns/op
Iteration  10: 4958.669 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18249.749 ±(99.9%) 46210.781 ns/op [Average]
  (min, avg, max) = (4827.109, 18249.749, 243451.256), stdev = 53216.404
  CI (99.9%): [≈ 0, 64460.530] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 29.56% complete, ETA 00:50:39
# Fork: 1 of 2
# Warmup Iteration   1: 16817.600 ns/op
# Warmup Iteration   2: 6222.498 ns/op
# Warmup Iteration   3: 7465.406 ns/op
Iteration   1: 11018.266 ns/op
Iteration   2: 4882.420 ns/op
Iteration   3: 4600.444 ns/op
Iteration   4: 4616.608 ns/op
Iteration   5: 5090.141 ns/op
Iteration   6: 4041.140 ns/op
Iteration   7: 5042.338 ns/op
Iteration   8: 5482.879 ns/op
Iteration   9: 5259.589 ns/op
Iteration  10: 5502.047 ns/op

# Run progress: 29.61% complete, ETA 00:50:37
# Fork: 2 of 2
# Warmup Iteration   1: 12340.137 ns/op
# Warmup Iteration   2: 6250.078 ns/op
# Warmup Iteration   3: 7340.830 ns/op
Iteration   1: 8889.855 ns/op
Iteration   2: 4855.973 ns/op
Iteration   3: 4578.952 ns/op
Iteration   4: 4637.460 ns/op
Iteration   5: 5112.190 ns/op
Iteration   6: 4078.720 ns/op
Iteration   7: 5014.445 ns/op
Iteration   8: 5375.458 ns/op
Iteration   9: 5171.853 ns/op
Iteration  10: 5445.028 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5434.790 ±(99.9%) 1421.722 ns/op [Average]
  (min, avg, max) = (4041.140, 5434.790, 11018.266), stdev = 1637.257
  CI (99.9%): [4013.068, 6856.512] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 29.67% complete, ETA 00:50:34
# Fork: 1 of 2
# Warmup Iteration   1: 13133.072 ns/op
# Warmup Iteration   2: 6429.081 ns/op
# Warmup Iteration   3: 6728.558 ns/op
Iteration   1: 4252.836 ns/op
Iteration   2: 4608.943 ns/op
Iteration   3: 4389.529 ns/op
Iteration   4: 4277.810 ns/op
Iteration   5: 5053.347 ns/op
Iteration   6: 4115.791 ns/op
Iteration   7: 4991.073 ns/op
Iteration   8: 5406.538 ns/op
Iteration   9: 5169.307 ns/op
Iteration  10: 5014.858 ns/op

# Run progress: 29.72% complete, ETA 00:50:32
# Fork: 2 of 2
# Warmup Iteration   1: 15997.766 ns/op
# Warmup Iteration   2: 8853.970 ns/op
# Warmup Iteration   3: 5863.000 ns/op
Iteration   1: 4380.998 ns/op
Iteration   2: 4665.519 ns/op
Iteration   3: 4550.247 ns/op
Iteration   4: 4368.666 ns/op
Iteration   5: 5213.006 ns/op
Iteration   6: 4158.919 ns/op
Iteration   7: 5192.977 ns/op
Iteration   8: 5599.689 ns/op
Iteration   9: 5233.845 ns/op
Iteration  10: 5067.434 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4785.567 ±(99.9%) 396.906 ns/op [Average]
  (min, avg, max) = (4115.791, 4785.567, 5599.689), stdev = 457.077
  CI (99.9%): [4388.661, 5182.472] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 29.78% complete, ETA 00:50:30
# Fork: 1 of 2
# Warmup Iteration   1: 7843.341 ns/op
# Warmup Iteration   2: 18879.257 ns/op
# Warmup Iteration   3: 5012.932 ns/op
Iteration   1: 15183.511 ns/op
Iteration   2: 4310.942 ns/op
Iteration   3: 4026.109 ns/op
Iteration   4: 3987.819 ns/op
Iteration   5: 4028.979 ns/op
Iteration   6: 3930.833 ns/op
Iteration   7: 4519.366 ns/op
Iteration   8: 4839.253 ns/op
Iteration   9: 4681.085 ns/op
Iteration  10: 4794.563 ns/op

# Run progress: 29.83% complete, ETA 00:50:27
# Fork: 2 of 2
# Warmup Iteration   1: 8646.913 ns/op
# Warmup Iteration   2: 13566.378 ns/op
# Warmup Iteration   3: 5578.594 ns/op
Iteration   1: 91598.853 ns/op
Iteration   2: 4342.140 ns/op
Iteration   3: 4073.011 ns/op
Iteration   4: 3995.945 ns/op
Iteration   5: 3930.693 ns/op
Iteration   6: 3941.661 ns/op
Iteration   7: 4476.485 ns/op
Iteration   8: 4769.584 ns/op
Iteration   9: 4725.945 ns/op
Iteration  10: 4764.873 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9246.083 ±(99.9%) 16965.355 ns/op [Average]
  (min, avg, max) = (3930.693, 9246.083, 91598.853), stdev = 19537.328
  CI (99.9%): [≈ 0, 26211.438] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 29.89% complete, ETA 00:50:25
# Fork: 1 of 2
# Warmup Iteration   1: 15936.555 ns/op
# Warmup Iteration   2: 19851.491 ns/op
# Warmup Iteration   3: 10368.672 ns/op
Iteration   1: 14814.541 ns/op
Iteration   2: 10844.527 ns/op
Iteration   3: 10168.748 ns/op
Iteration   4: 10107.855 ns/op
Iteration   5: 10154.249 ns/op
Iteration   6: 10201.008 ns/op
Iteration   7: 10260.377 ns/op
Iteration   8: 9444.395 ns/op
Iteration   9: 10422.766 ns/op
Iteration  10: 10459.642 ns/op

# Run progress: 29.94% complete, ETA 00:50:22
# Fork: 2 of 2
# Warmup Iteration   1: 15896.525 ns/op
# Warmup Iteration   2: 19953.641 ns/op
# Warmup Iteration   3: 10311.668 ns/op
Iteration   1: 13260.741 ns/op
Iteration   2: 10752.275 ns/op
Iteration   3: 10038.764 ns/op
Iteration   4: 10041.177 ns/op
Iteration   5: 10032.787 ns/op
Iteration   6: 10136.927 ns/op
Iteration   7: 10200.566 ns/op
Iteration   8: 9353.188 ns/op
Iteration   9: 10307.660 ns/op
Iteration  10: 10349.752 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10567.597 ±(99.9%) 1095.090 ns/op [Average]
  (min, avg, max) = (9353.188, 10567.597, 14814.541), stdev = 1261.107
  CI (99.9%): [9472.507, 11662.687] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 30.00% complete, ETA 00:50:20
# Fork: 1 of 2
# Warmup Iteration   1: 38.114 ns/op
# Warmup Iteration   2: 65.999 ns/op
# Warmup Iteration   3: 35.628 ns/op
Iteration   1: 35.678 ns/op
Iteration   2: 35.715 ns/op
Iteration   3: 35.757 ns/op
Iteration   4: 35.707 ns/op
Iteration   5: 35.638 ns/op
Iteration   6: 36.157 ns/op
Iteration   7: 35.676 ns/op
Iteration   8: 34.503 ns/op
Iteration   9: 35.613 ns/op
Iteration  10: 35.715 ns/op

# Run progress: 30.06% complete, ETA 00:50:18
# Fork: 2 of 2
# Warmup Iteration   1: 38.546 ns/op
# Warmup Iteration   2: 66.976 ns/op
# Warmup Iteration   3: 35.705 ns/op
Iteration   1: 35.718 ns/op
Iteration   2: 35.759 ns/op
Iteration   3: 35.729 ns/op
Iteration   4: 35.684 ns/op
Iteration   5: 35.689 ns/op
Iteration   6: 36.150 ns/op
Iteration   7: 35.745 ns/op
Iteration   8: 34.515 ns/op
Iteration   9: 35.692 ns/op
Iteration  10: 35.749 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.630 ±(99.9%) 0.355 ns/op [Average]
  (min, avg, max) = (34.503, 35.630, 36.157), stdev = 0.409
  CI (99.9%): [35.275, 35.985] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 30.11% complete, ETA 00:50:15
# Fork: 1 of 2
# Warmup Iteration   1: 5882.056 ns/op
# Warmup Iteration   2: 4205.504 ns/op
# Warmup Iteration   3: 3603.800 ns/op
Iteration   1: 3613.046 ns/op
Iteration   2: 3605.696 ns/op
Iteration   3: 3618.283 ns/op
Iteration   4: 3592.934 ns/op
Iteration   5: 3604.859 ns/op
Iteration   6: 3602.953 ns/op
Iteration   7: 3600.201 ns/op
Iteration   8: 3593.505 ns/op
Iteration   9: 3587.930 ns/op
Iteration  10: 3599.536 ns/op

# Run progress: 30.17% complete, ETA 00:50:13
# Fork: 2 of 2
# Warmup Iteration   1: 5815.750 ns/op
# Warmup Iteration   2: 4218.823 ns/op
# Warmup Iteration   3: 3616.697 ns/op
Iteration   1: 3754.995 ns/op
Iteration   2: 3603.299 ns/op
Iteration   3: 3612.971 ns/op
Iteration   4: 3601.256 ns/op
Iteration   5: 3602.386 ns/op
Iteration   6: 3598.443 ns/op
Iteration   7: 3598.819 ns/op
Iteration   8: 3589.155 ns/op
Iteration   9: 3598.984 ns/op
Iteration  10: 3591.782 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3608.552 ±(99.9%) 30.698 ns/op [Average]
  (min, avg, max) = (3587.930, 3608.552, 3754.995), stdev = 35.351
  CI (99.9%): [3577.854, 3639.249] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 30.22% complete, ETA 00:50:10
# Fork: 1 of 2
# Warmup Iteration   1: 22459.628 ns/op
# Warmup Iteration   2: 7795.530 ns/op
# Warmup Iteration   3: 7053.476 ns/op
Iteration   1: 6756.818 ns/op
Iteration   2: 6755.466 ns/op
Iteration   3: 6741.574 ns/op
Iteration   4: 6797.665 ns/op
Iteration   5: 6738.403 ns/op
Iteration   6: 6753.437 ns/op
Iteration   7: 6749.402 ns/op
Iteration   8: 6780.083 ns/op
Iteration   9: 6753.451 ns/op
Iteration  10: 6781.486 ns/op

# Run progress: 30.28% complete, ETA 00:50:08
# Fork: 2 of 2
# Warmup Iteration   1: 16802.152 ns/op
# Warmup Iteration   2: 7600.819 ns/op
# Warmup Iteration   3: 6750.231 ns/op
Iteration   1: 6777.694 ns/op
Iteration   2: 6760.214 ns/op
Iteration   3: 6781.074 ns/op
Iteration   4: 6807.856 ns/op
Iteration   5: 6769.320 ns/op
Iteration   6: 6778.956 ns/op
Iteration   7: 6761.508 ns/op
Iteration   8: 6783.210 ns/op
Iteration   9: 6759.258 ns/op
Iteration  10: 6772.015 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6767.944 ±(99.9%) 15.731 ns/op [Average]
  (min, avg, max) = (6738.403, 6767.944, 6807.856), stdev = 18.116
  CI (99.9%): [6752.213, 6783.676] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 30.33% complete, ETA 00:50:06
# Fork: 1 of 2
# Warmup Iteration   1: 18447.854 ns/op
# Warmup Iteration   2: 7699.099 ns/op
# Warmup Iteration   3: 6793.380 ns/op
Iteration   1: 6848.960 ns/op
Iteration   2: 6839.343 ns/op
Iteration   3: 6846.341 ns/op
Iteration   4: 6868.158 ns/op
Iteration   5: 6820.481 ns/op
Iteration   6: 6851.501 ns/op
Iteration   7: 6806.662 ns/op
Iteration   8: 6835.337 ns/op
Iteration   9: 6847.236 ns/op
Iteration  10: 6881.106 ns/op

# Run progress: 30.39% complete, ETA 00:50:03
# Fork: 2 of 2
# Warmup Iteration   1: 18166.627 ns/op
# Warmup Iteration   2: 7696.188 ns/op
# Warmup Iteration   3: 6822.353 ns/op
Iteration   1: 6808.331 ns/op
Iteration   2: 6824.556 ns/op
Iteration   3: 6824.921 ns/op
Iteration   4: 6802.749 ns/op
Iteration   5: 6802.086 ns/op
Iteration   6: 6814.466 ns/op
Iteration   7: 6771.580 ns/op
Iteration   8: 6889.810 ns/op
Iteration   9: 6812.082 ns/op
Iteration  10: 6814.054 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6830.488 ±(99.9%) 25.241 ns/op [Average]
  (min, avg, max) = (6771.580, 6830.488, 6889.810), stdev = 29.068
  CI (99.9%): [6805.247, 6855.729] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 30.44% complete, ETA 00:50:01
# Fork: 1 of 2
# Warmup Iteration   1: 14607.399 ns/op
# Warmup Iteration   2: 7987.549 ns/op
# Warmup Iteration   3: 6849.646 ns/op
Iteration   1: 6860.029 ns/op
Iteration   2: 6854.021 ns/op
Iteration   3: 6861.338 ns/op
Iteration   4: 6868.355 ns/op
Iteration   5: 6855.196 ns/op
Iteration   6: 6858.019 ns/op
Iteration   7: 6870.133 ns/op
Iteration   8: 6887.907 ns/op
Iteration   9: 6837.955 ns/op
Iteration  10: 6863.263 ns/op

# Run progress: 30.50% complete, ETA 00:49:58
# Fork: 2 of 2
# Warmup Iteration   1: 14219.174 ns/op
# Warmup Iteration   2: 8352.159 ns/op
# Warmup Iteration   3: 6888.729 ns/op
Iteration   1: 6890.675 ns/op
Iteration   2: 6895.196 ns/op
Iteration   3: 6882.908 ns/op
Iteration   4: 6940.522 ns/op
Iteration   5: 6866.658 ns/op
Iteration   6: 6882.175 ns/op
Iteration   7: 6881.346 ns/op
Iteration   8: 6930.278 ns/op
Iteration   9: 6878.256 ns/op
Iteration  10: 6889.110 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6877.667 ±(99.9%) 21.428 ns/op [Average]
  (min, avg, max) = (6837.955, 6877.667, 6940.522), stdev = 24.677
  CI (99.9%): [6856.239, 6899.095] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 30.56% complete, ETA 00:49:56
# Fork: 1 of 2
# Warmup Iteration   1: 5346.244 ns/op
# Warmup Iteration   2: 3979.781 ns/op
# Warmup Iteration   3: 3436.450 ns/op
Iteration   1: 3450.759 ns/op
Iteration   2: 3448.752 ns/op
Iteration   3: 3441.014 ns/op
Iteration   4: 3441.406 ns/op
Iteration   5: 3434.889 ns/op
Iteration   6: 3436.689 ns/op
Iteration   7: 3452.438 ns/op
Iteration   8: 3437.505 ns/op
Iteration   9: 3446.370 ns/op
Iteration  10: 3436.087 ns/op

# Run progress: 30.61% complete, ETA 00:49:54
# Fork: 2 of 2
# Warmup Iteration   1: 5115.782 ns/op
# Warmup Iteration   2: 3940.510 ns/op
# Warmup Iteration   3: 3446.969 ns/op
Iteration   1: 3465.806 ns/op
Iteration   2: 3444.414 ns/op
Iteration   3: 3462.604 ns/op
Iteration   4: 3441.391 ns/op
Iteration   5: 3443.376 ns/op
Iteration   6: 3446.243 ns/op
Iteration   7: 3447.774 ns/op
Iteration   8: 3445.002 ns/op
Iteration   9: 3441.705 ns/op
Iteration  10: 3441.375 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3445.280 ±(99.9%) 6.988 ns/op [Average]
  (min, avg, max) = (3434.889, 3445.280, 3465.806), stdev = 8.048
  CI (99.9%): [3438.292, 3452.268] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 30.67% complete, ETA 00:49:51
# Fork: 1 of 2
# Warmup Iteration   1: 38.218 ns/op
# Warmup Iteration   2: 64.931 ns/op
# Warmup Iteration   3: 35.635 ns/op
Iteration   1: 35.705 ns/op
Iteration   2: 35.661 ns/op
Iteration   3: 35.697 ns/op
Iteration   4: 35.692 ns/op
Iteration   5: 35.689 ns/op
Iteration   6: 36.164 ns/op
Iteration   7: 35.740 ns/op
Iteration   8: 34.521 ns/op
Iteration   9: 35.713 ns/op
Iteration  10: 35.625 ns/op

# Run progress: 30.72% complete, ETA 00:49:49
# Fork: 2 of 2
# Warmup Iteration   1: 38.003 ns/op
# Warmup Iteration   2: 63.971 ns/op
# Warmup Iteration   3: 35.679 ns/op
Iteration   1: 35.697 ns/op
Iteration   2: 35.751 ns/op
Iteration   3: 35.641 ns/op
Iteration   4: 35.647 ns/op
Iteration   5: 35.716 ns/op
Iteration   6: 36.169 ns/op
Iteration   7: 35.642 ns/op
Iteration   8: 34.512 ns/op
Iteration   9: 35.667 ns/op
Iteration  10: 35.749 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.620 ±(99.9%) 0.353 ns/op [Average]
  (min, avg, max) = (34.512, 35.620, 36.169), stdev = 0.406
  CI (99.9%): [35.267, 35.973] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 30.78% complete, ETA 00:49:46
# Fork: 1 of 2
# Warmup Iteration   1: 2421.619 ns/op
# Warmup Iteration   2: 2155.625 ns/op
# Warmup Iteration   3: 1849.058 ns/op
Iteration   1: 1854.589 ns/op
Iteration   2: 1849.839 ns/op
Iteration   3: 1852.732 ns/op
Iteration   4: 1863.288 ns/op
Iteration   5: 1846.007 ns/op
Iteration   6: 1845.759 ns/op
Iteration   7: 1846.072 ns/op
Iteration   8: 1847.734 ns/op
Iteration   9: 1845.967 ns/op
Iteration  10: 1847.232 ns/op

# Run progress: 30.83% complete, ETA 00:49:44
# Fork: 2 of 2
# Warmup Iteration   1: 2459.827 ns/op
# Warmup Iteration   2: 2097.192 ns/op
# Warmup Iteration   3: 1847.176 ns/op
Iteration   1: 1856.221 ns/op
Iteration   2: 1852.223 ns/op
Iteration   3: 1841.725 ns/op
Iteration   4: 1839.571 ns/op
Iteration   5: 1848.163 ns/op
Iteration   6: 1845.489 ns/op
Iteration   7: 1838.980 ns/op
Iteration   8: 1866.444 ns/op
Iteration   9: 1845.949 ns/op
Iteration  10: 2003.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1856.878 ±(99.9%) 30.589 ns/op [Average]
  (min, avg, max) = (1838.980, 1856.878, 2003.579), stdev = 35.226
  CI (99.9%): [1826.289, 1887.467] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 30.89% complete, ETA 00:49:41
# Fork: 1 of 2
# Warmup Iteration   1: 1919.715 ns/op
# Warmup Iteration   2: 1336.645 ns/op
# Warmup Iteration   3: 1195.064 ns/op
Iteration   1: 1194.894 ns/op
Iteration   2: 1194.699 ns/op
Iteration   3: 1201.954 ns/op
Iteration   4: 1185.856 ns/op
Iteration   5: 1194.562 ns/op
Iteration   6: 1195.720 ns/op
Iteration   7: 1187.107 ns/op
Iteration   8: 1184.741 ns/op
Iteration   9: 1188.789 ns/op
Iteration  10: 1199.850 ns/op

# Run progress: 30.94% complete, ETA 00:49:39
# Fork: 2 of 2
# Warmup Iteration   1: 1846.644 ns/op
# Warmup Iteration   2: 1360.879 ns/op
# Warmup Iteration   3: 1130.404 ns/op
Iteration   1: 1129.164 ns/op
Iteration   2: 1129.776 ns/op
Iteration   3: 1130.635 ns/op
Iteration   4: 1130.084 ns/op
Iteration   5: 1129.259 ns/op
Iteration   6: 1131.220 ns/op
Iteration   7: 1127.761 ns/op
Iteration   8: 1132.044 ns/op
Iteration   9: 1131.358 ns/op
Iteration  10: 1131.164 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1161.532 ±(99.9%) 28.106 ns/op [Average]
  (min, avg, max) = (1127.761, 1161.532, 1201.954), stdev = 32.367
  CI (99.9%): [1133.425, 1189.638] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 31.00% complete, ETA 00:49:37
# Fork: 1 of 2
# Warmup Iteration   1: 1985.549 ns/op
# Warmup Iteration   2: 1350.080 ns/op
# Warmup Iteration   3: 1202.469 ns/op
Iteration   1: 1195.327 ns/op
Iteration   2: 1195.821 ns/op
Iteration   3: 1200.123 ns/op
Iteration   4: 1191.511 ns/op
Iteration   5: 1200.470 ns/op
Iteration   6: 1202.764 ns/op
Iteration   7: 1191.197 ns/op
Iteration   8: 1185.300 ns/op
Iteration   9: 1214.547 ns/op
Iteration  10: 1199.594 ns/op

# Run progress: 31.06% complete, ETA 00:49:34
# Fork: 2 of 2
# Warmup Iteration   1: 1917.721 ns/op
# Warmup Iteration   2: 1283.409 ns/op
# Warmup Iteration   3: 1139.486 ns/op
Iteration   1: 1144.517 ns/op
Iteration   2: 1138.861 ns/op
Iteration   3: 1141.782 ns/op
Iteration   4: 1147.220 ns/op
Iteration   5: 1153.944 ns/op
Iteration   6: 1141.421 ns/op
Iteration   7: 1139.194 ns/op
Iteration   8: 1150.926 ns/op
Iteration   9: 1147.292 ns/op
Iteration  10: 1154.357 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1171.808 ±(99.9%) 23.773 ns/op [Average]
  (min, avg, max) = (1138.861, 1171.808, 1214.547), stdev = 27.377
  CI (99.9%): [1148.036, 1195.581] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 31.11% complete, ETA 00:49:32
# Fork: 1 of 2
# Warmup Iteration   1: 2366.898 ns/op
# Warmup Iteration   2: 1877.183 ns/op
# Warmup Iteration   3: 1658.135 ns/op
Iteration   1: 1660.239 ns/op
Iteration   2: 1668.452 ns/op
Iteration   3: 1656.380 ns/op
Iteration   4: 1655.822 ns/op
Iteration   5: 1660.571 ns/op
Iteration   6: 1655.569 ns/op
Iteration   7: 1660.627 ns/op
Iteration   8: 1686.441 ns/op
Iteration   9: 1661.656 ns/op
Iteration  10: 1657.249 ns/op

# Run progress: 31.17% complete, ETA 00:49:30
# Fork: 2 of 2
# Warmup Iteration   1: 2757.105 ns/op
# Warmup Iteration   2: 1920.562 ns/op
# Warmup Iteration   3: 1659.470 ns/op
Iteration   1: 1658.621 ns/op
Iteration   2: 1657.618 ns/op
Iteration   3: 1656.041 ns/op
Iteration   4: 1651.598 ns/op
Iteration   5: 1659.014 ns/op
Iteration   6: 1657.485 ns/op
Iteration   7: 1659.093 ns/op
Iteration   8: 1665.406 ns/op
Iteration   9: 1659.997 ns/op
Iteration  10: 1660.948 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1660.441 ±(99.9%) 6.172 ns/op [Average]
  (min, avg, max) = (1651.598, 1660.441, 1686.441), stdev = 7.108
  CI (99.9%): [1654.269, 1666.614] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 31.22% complete, ETA 00:49:27
# Fork: 1 of 2
# Warmup Iteration   1: 13147.587 ns/op
# Warmup Iteration   2: 9070.897 ns/op
# Warmup Iteration   3: 7889.105 ns/op
Iteration   1: 7879.077 ns/op
Iteration   2: 7927.872 ns/op
Iteration   3: 7918.093 ns/op
Iteration   4: 7899.509 ns/op
Iteration   5: 7925.751 ns/op
Iteration   6: 7927.774 ns/op
Iteration   7: 7912.910 ns/op
Iteration   8: 7925.208 ns/op
Iteration   9: 7963.451 ns/op
Iteration  10: 7923.449 ns/op

# Run progress: 31.28% complete, ETA 00:49:25
# Fork: 2 of 2
# Warmup Iteration   1: 14053.301 ns/op
# Warmup Iteration   2: 9287.939 ns/op
# Warmup Iteration   3: 8101.193 ns/op
Iteration   1: 7961.856 ns/op
Iteration   2: 7949.618 ns/op
Iteration   3: 7947.415 ns/op
Iteration   4: 7968.583 ns/op
Iteration   5: 7982.343 ns/op
Iteration   6: 7971.021 ns/op
Iteration   7: 7967.834 ns/op
Iteration   8: 7966.571 ns/op
Iteration   9: 7992.209 ns/op
Iteration  10: 8122.161 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7951.635 ±(99.9%) 43.182 ns/op [Average]
  (min, avg, max) = (7879.077, 7951.635, 8122.161), stdev = 49.729
  CI (99.9%): [7908.453, 7994.817] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 31.33% complete, ETA 00:49:22
# Fork: 1 of 2
# Warmup Iteration   1: 38.015 ns/op
# Warmup Iteration   2: 69.616 ns/op
# Warmup Iteration   3: 35.660 ns/op
Iteration   1: 35.706 ns/op
Iteration   2: 35.655 ns/op
Iteration   3: 35.665 ns/op
Iteration   4: 35.671 ns/op
Iteration   5: 35.711 ns/op
Iteration   6: 36.137 ns/op
Iteration   7: 35.686 ns/op
Iteration   8: 34.455 ns/op
Iteration   9: 35.670 ns/op
Iteration  10: 35.662 ns/op

# Run progress: 31.39% complete, ETA 00:49:20
# Fork: 2 of 2
# Warmup Iteration   1: 38.449 ns/op
# Warmup Iteration   2: 67.005 ns/op
# Warmup Iteration   3: 35.651 ns/op
Iteration   1: 35.745 ns/op
Iteration   2: 35.683 ns/op
Iteration   3: 35.711 ns/op
Iteration   4: 35.765 ns/op
Iteration   5: 35.777 ns/op
Iteration   6: 36.125 ns/op
Iteration   7: 35.658 ns/op
Iteration   8: 34.523 ns/op
Iteration   9: 35.703 ns/op
Iteration  10: 35.663 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.619 ±(99.9%) 0.356 ns/op [Average]
  (min, avg, max) = (34.455, 35.619, 36.137), stdev = 0.410
  CI (99.9%): [35.262, 35.975] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 31.44% complete, ETA 00:49:17
# Fork: 1 of 2
# Warmup Iteration   1: 2737.038 ns/op
# Warmup Iteration   2: 3762.681 ns/op
# Warmup Iteration   3: 2035.404 ns/op
Iteration   1: 2930.745 ns/op
Iteration   2: 2639.637 ns/op
Iteration   3: 3207.516 ns/op
Iteration   4: 2530.708 ns/op
Iteration   5: 2498.340 ns/op
Iteration   6: 2424.040 ns/op
Iteration   7: 2043.685 ns/op
Iteration   8: 2032.224 ns/op
Iteration   9: 2611.568 ns/op
Iteration  10: 2033.305 ns/op

# Run progress: 31.50% complete, ETA 00:49:15
# Fork: 2 of 2
# Warmup Iteration   1: 3353.753 ns/op
# Warmup Iteration   2: 2579.244 ns/op
# Warmup Iteration   3: 1729.419 ns/op
Iteration   1: 1828.736 ns/op
Iteration   2: 2078.310 ns/op
Iteration   3: 2380.519 ns/op
Iteration   4: 2242.505 ns/op
Iteration   5: 1902.599 ns/op
Iteration   6: 2091.427 ns/op
Iteration   7: 1724.657 ns/op
Iteration   8: 1720.876 ns/op
Iteration   9: 2233.052 ns/op
Iteration  10: 1740.796 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2244.762 ±(99.9%) 353.871 ns/op [Average]
  (min, avg, max) = (1720.876, 2244.762, 3207.516), stdev = 407.519
  CI (99.9%): [1890.891, 2598.633] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 31.56% complete, ETA 00:49:13
# Fork: 1 of 2
# Warmup Iteration   1: 1504.273 ns/op
# Warmup Iteration   2: 1869.050 ns/op
# Warmup Iteration   3: 2139.932 ns/op
Iteration   1: 1648.797 ns/op
Iteration   2: 1707.606 ns/op
Iteration   3: 1164.875 ns/op
Iteration   4: 1211.144 ns/op
Iteration   5: 1290.150 ns/op
Iteration   6: 1581.527 ns/op
Iteration   7: 1270.097 ns/op
Iteration   8: 1261.827 ns/op
Iteration   9: 1127.746 ns/op
Iteration  10: 1460.276 ns/op

# Run progress: 31.61% complete, ETA 00:49:10
# Fork: 2 of 2
# Warmup Iteration   1: 1632.638 ns/op
# Warmup Iteration   2: 1648.514 ns/op
# Warmup Iteration   3: 2510.915 ns/op
Iteration   1: 1546.548 ns/op
Iteration   2: 1580.422 ns/op
Iteration   3: 1032.345 ns/op
Iteration   4: 1083.160 ns/op
Iteration   5: 1138.031 ns/op
Iteration   6: 1397.336 ns/op
Iteration   7: 1161.636 ns/op
Iteration   8: 1177.688 ns/op
Iteration   9: 1015.285 ns/op
Iteration  10: 3215.070 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1403.578 ±(99.9%) 413.719 ns/op [Average]
  (min, avg, max) = (1015.285, 1403.578, 3215.070), stdev = 476.440
  CI (99.9%): [989.859, 1817.298] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 31.67% complete, ETA 00:49:08
# Fork: 1 of 2
# Warmup Iteration   1: 1549.395 ns/op
# Warmup Iteration   2: 2029.899 ns/op
# Warmup Iteration   3: 2019.656 ns/op
Iteration   1: 1530.422 ns/op
Iteration   2: 1800.547 ns/op
Iteration   3: 1101.998 ns/op
Iteration   4: 1215.249 ns/op
Iteration   5: 1240.782 ns/op
Iteration   6: 1812.543 ns/op
Iteration   7: 1250.731 ns/op
Iteration   8: 1337.489 ns/op
Iteration   9: 1085.122 ns/op
Iteration  10: 1625.962 ns/op

# Run progress: 31.72% complete, ETA 00:49:05
# Fork: 2 of 2
# Warmup Iteration   1: 1470.691 ns/op
# Warmup Iteration   2: 2042.476 ns/op
# Warmup Iteration   3: 1862.816 ns/op
Iteration   1: 1326.770 ns/op
Iteration   2: 1845.044 ns/op
Iteration   3: 1087.838 ns/op
Iteration   4: 1203.830 ns/op
Iteration   5: 1295.613 ns/op
Iteration   6: 1813.096 ns/op
Iteration   7: 1267.352 ns/op
Iteration   8: 1330.610 ns/op
Iteration   9: 1076.608 ns/op
Iteration  10: 1610.208 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1392.891 ±(99.9%) 232.612 ns/op [Average]
  (min, avg, max) = (1076.608, 1392.891, 1845.044), stdev = 267.876
  CI (99.9%): [1160.279, 1625.502] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 31.78% complete, ETA 00:49:03
# Fork: 1 of 2
# Warmup Iteration   1: 2427.904 ns/op
# Warmup Iteration   2: 3142.244 ns/op
# Warmup Iteration   3: 2466.743 ns/op
Iteration   1: 1986.541 ns/op
Iteration   2: 1446.657 ns/op
Iteration   3: 1066.268 ns/op
Iteration   4: 1094.003 ns/op
Iteration   5: 1215.787 ns/op
Iteration   6: 1401.140 ns/op
Iteration   7: 1198.369 ns/op
Iteration   8: 1188.468 ns/op
Iteration   9: 1086.521 ns/op
Iteration  10: 1524.924 ns/op

# Run progress: 31.83% complete, ETA 00:49:01
# Fork: 2 of 2
# Warmup Iteration   1: 2391.931 ns/op
# Warmup Iteration   2: 2880.385 ns/op
# Warmup Iteration   3: 2141.910 ns/op
Iteration   1: 2029.098 ns/op
Iteration   2: 1612.456 ns/op
Iteration   3: 1050.090 ns/op
Iteration   4: 1076.163 ns/op
Iteration   5: 1122.264 ns/op
Iteration   6: 1306.823 ns/op
Iteration   7: 1105.932 ns/op
Iteration   8: 1095.530 ns/op
Iteration   9: 1037.726 ns/op
Iteration  10: 1446.247 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1304.550 ±(99.9%) 257.350 ns/op [Average]
  (min, avg, max) = (1037.726, 1304.550, 2029.098), stdev = 296.364
  CI (99.9%): [1047.201, 1561.900] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 31.89% complete, ETA 00:48:58
# Fork: 1 of 2
# Warmup Iteration   1: 14421.330 ns/op
# Warmup Iteration   2: 9251.992 ns/op
# Warmup Iteration   3: 7859.700 ns/op
Iteration   1: 7867.427 ns/op
Iteration   2: 7830.620 ns/op
Iteration   3: 7844.342 ns/op
Iteration   4: 7813.694 ns/op
Iteration   5: 7843.752 ns/op
Iteration   6: 7836.023 ns/op
Iteration   7: 7829.833 ns/op
Iteration   8: 7932.669 ns/op
Iteration   9: 7906.020 ns/op
Iteration  10: 7850.599 ns/op

# Run progress: 31.94% complete, ETA 00:48:56
# Fork: 2 of 2
# Warmup Iteration   1: 12565.711 ns/op
# Warmup Iteration   2: 8947.912 ns/op
# Warmup Iteration   3: 7945.120 ns/op
Iteration   1: 7957.748 ns/op
Iteration   2: 7946.762 ns/op
Iteration   3: 7971.604 ns/op
Iteration   4: 7938.343 ns/op
Iteration   5: 7987.088 ns/op
Iteration   6: 7964.710 ns/op
Iteration   7: 7967.511 ns/op
Iteration   8: 8034.627 ns/op
Iteration   9: 8037.306 ns/op
Iteration  10: 7943.549 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7915.211 ±(99.9%) 61.350 ns/op [Average]
  (min, avg, max) = (7813.694, 7915.211, 8037.306), stdev = 70.651
  CI (99.9%): [7853.861, 7976.562] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 32.00% complete, ETA 00:48:53
# Fork: 1 of 2
# Warmup Iteration   1: 38.441 ns/op
# Warmup Iteration   2: 66.528 ns/op
# Warmup Iteration   3: 35.687 ns/op
Iteration   1: 35.706 ns/op
Iteration   2: 35.697 ns/op
Iteration   3: 35.669 ns/op
Iteration   4: 35.686 ns/op
Iteration   5: 35.680 ns/op
Iteration   6: 36.167 ns/op
Iteration   7: 35.608 ns/op
Iteration   8: 34.420 ns/op
Iteration   9: 35.729 ns/op
Iteration  10: 35.683 ns/op

# Run progress: 32.06% complete, ETA 00:48:51
# Fork: 2 of 2
# Warmup Iteration   1: 38.098 ns/op
# Warmup Iteration   2: 64.293 ns/op
# Warmup Iteration   3: 35.662 ns/op
Iteration   1: 35.721 ns/op
Iteration   2: 35.665 ns/op
Iteration   3: 35.715 ns/op
Iteration   4: 35.658 ns/op
Iteration   5: 35.665 ns/op
Iteration   6: 36.147 ns/op
Iteration   7: 35.686 ns/op
Iteration   8: 34.508 ns/op
Iteration   9: 35.760 ns/op
Iteration  10: 35.682 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.613 ±(99.9%) 0.364 ns/op [Average]
  (min, avg, max) = (34.420, 35.613, 36.167), stdev = 0.420
  CI (99.9%): [35.248, 35.977] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 32.11% complete, ETA 00:48:49
# Fork: 1 of 2
# Warmup Iteration   1: 311.248 ns/op
# Warmup Iteration   2: 281.143 ns/op
# Warmup Iteration   3: 238.236 ns/op
Iteration   1: 238.061 ns/op
Iteration   2: 238.218 ns/op
Iteration   3: 238.026 ns/op
Iteration   4: 235.633 ns/op
Iteration   5: 235.630 ns/op
Iteration   6: 235.676 ns/op
Iteration   7: 235.624 ns/op
Iteration   8: 235.910 ns/op
Iteration   9: 235.468 ns/op
Iteration  10: 235.393 ns/op

# Run progress: 32.17% complete, ETA 00:48:46
# Fork: 2 of 2
# Warmup Iteration   1: 293.472 ns/op
# Warmup Iteration   2: 281.090 ns/op
# Warmup Iteration   3: 251.784 ns/op
Iteration   1: 251.556 ns/op
Iteration   2: 251.647 ns/op
Iteration   3: 252.172 ns/op
Iteration   4: 249.700 ns/op
Iteration   5: 248.899 ns/op
Iteration   6: 249.433 ns/op
Iteration   7: 249.250 ns/op
Iteration   8: 239.349 ns/op
Iteration   9: 249.042 ns/op
Iteration  10: 249.271 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  242.698 ±(99.9%) 6.085 ns/op [Average]
  (min, avg, max) = (235.393, 242.698, 252.172), stdev = 7.008
  CI (99.9%): [236.613, 248.783] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 32.22% complete, ETA 00:48:44
# Fork: 1 of 2
# Warmup Iteration   1: 1302.625 ns/op
# Warmup Iteration   2: 507.423 ns/op
# Warmup Iteration   3: 440.814 ns/op
Iteration   1: 441.265 ns/op
Iteration   2: 440.983 ns/op
Iteration   3: 441.013 ns/op
Iteration   4: 440.993 ns/op
Iteration   5: 441.198 ns/op
Iteration   6: 442.390 ns/op
Iteration   7: 441.154 ns/op
Iteration   8: 458.992 ns/op
Iteration   9: 441.530 ns/op
Iteration  10: 442.425 ns/op

# Run progress: 32.28% complete, ETA 00:48:41
# Fork: 2 of 2
# Warmup Iteration   1: 803.394 ns/op
# Warmup Iteration   2: 504.919 ns/op
# Warmup Iteration   3: 444.048 ns/op
Iteration   1: 446.463 ns/op
Iteration   2: 444.640 ns/op
Iteration   3: 446.346 ns/op
Iteration   4: 445.162 ns/op
Iteration   5: 446.406 ns/op
Iteration   6: 446.178 ns/op
Iteration   7: 443.372 ns/op
Iteration   8: 446.149 ns/op
Iteration   9: 444.749 ns/op
Iteration  10: 444.815 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  444.311 ±(99.9%) 3.534 ns/op [Average]
  (min, avg, max) = (440.983, 444.311, 458.992), stdev = 4.069
  CI (99.9%): [440.778, 447.845] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 32.33% complete, ETA 00:48:39
# Fork: 1 of 2
# Warmup Iteration   1: 731.652 ns/op
# Warmup Iteration   2: 499.403 ns/op
# Warmup Iteration   3: 439.422 ns/op
Iteration   1: 440.395 ns/op
Iteration   2: 439.374 ns/op
Iteration   3: 440.228 ns/op
Iteration   4: 439.612 ns/op
Iteration   5: 439.969 ns/op
Iteration   6: 440.178 ns/op
Iteration   7: 439.878 ns/op
Iteration   8: 442.312 ns/op
Iteration   9: 439.628 ns/op
Iteration  10: 439.514 ns/op

# Run progress: 32.39% complete, ETA 00:48:37
# Fork: 2 of 2
# Warmup Iteration   1: 769.794 ns/op
# Warmup Iteration   2: 502.580 ns/op
# Warmup Iteration   3: 440.420 ns/op
Iteration   1: 440.303 ns/op
Iteration   2: 440.270 ns/op
Iteration   3: 440.249 ns/op
Iteration   4: 440.555 ns/op
Iteration   5: 440.660 ns/op
Iteration   6: 440.647 ns/op
Iteration   7: 440.387 ns/op
Iteration   8: 443.594 ns/op
Iteration   9: 440.721 ns/op
Iteration  10: 440.489 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  440.448 ±(99.9%) 0.838 ns/op [Average]
  (min, avg, max) = (439.374, 440.448, 443.594), stdev = 0.966
  CI (99.9%): [439.610, 441.287] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 32.44% complete, ETA 00:48:34
# Fork: 1 of 2
# Warmup Iteration   1: 635.673 ns/op
# Warmup Iteration   2: 501.408 ns/op
# Warmup Iteration   3: 458.286 ns/op
Iteration   1: 458.472 ns/op
Iteration   2: 458.484 ns/op
Iteration   3: 458.461 ns/op
Iteration   4: 458.424 ns/op
Iteration   5: 458.519 ns/op
Iteration   6: 458.469 ns/op
Iteration   7: 458.486 ns/op
Iteration   8: 443.241 ns/op
Iteration   9: 458.947 ns/op
Iteration  10: 458.437 ns/op

# Run progress: 32.50% complete, ETA 00:48:32
# Fork: 2 of 2
# Warmup Iteration   1: 635.278 ns/op
# Warmup Iteration   2: 499.235 ns/op
# Warmup Iteration   3: 440.149 ns/op
Iteration   1: 440.167 ns/op
Iteration   2: 440.227 ns/op
Iteration   3: 440.208 ns/op
Iteration   4: 440.788 ns/op
Iteration   5: 440.751 ns/op
Iteration   6: 439.705 ns/op
Iteration   7: 440.157 ns/op
Iteration   8: 442.359 ns/op
Iteration   9: 440.162 ns/op
Iteration  10: 440.252 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  448.736 ±(99.9%) 7.916 ns/op [Average]
  (min, avg, max) = (439.705, 448.736, 458.947), stdev = 9.117
  CI (99.9%): [440.819, 456.652] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 32.56% complete, ETA 00:48:29
# Fork: 1 of 2
# Warmup Iteration   1: 470.280 ns/op
# Warmup Iteration   2: 461.622 ns/op
# Warmup Iteration   3: 417.756 ns/op
Iteration   1: 417.991 ns/op
Iteration   2: 418.152 ns/op
Iteration   3: 418.075 ns/op
Iteration   4: 420.746 ns/op
Iteration   5: 420.631 ns/op
Iteration   6: 421.416 ns/op
Iteration   7: 420.625 ns/op
Iteration   8: 420.895 ns/op
Iteration   9: 420.740 ns/op
Iteration  10: 420.745 ns/op

# Run progress: 32.61% complete, ETA 00:48:27
# Fork: 2 of 2
# Warmup Iteration   1: 369.427 ns/op
# Warmup Iteration   2: 355.370 ns/op
# Warmup Iteration   3: 323.228 ns/op
Iteration   1: 323.837 ns/op
Iteration   2: 323.377 ns/op
Iteration   3: 323.471 ns/op
Iteration   4: 326.475 ns/op
Iteration   5: 326.951 ns/op
Iteration   6: 327.127 ns/op
Iteration   7: 326.463 ns/op
Iteration   8: 327.777 ns/op
Iteration   9: 326.987 ns/op
Iteration  10: 327.143 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  372.981 ±(99.9%) 41.911 ns/op [Average]
  (min, avg, max) = (323.377, 372.981, 421.416), stdev = 48.265
  CI (99.9%): [331.070, 414.892] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 32.67% complete, ETA 00:48:25
# Fork: 1 of 2
# Warmup Iteration   1: 38.358 ns/op
# Warmup Iteration   2: 73.083 ns/op
# Warmup Iteration   3: 35.597 ns/op
Iteration   1: 35.661 ns/op
Iteration   2: 35.655 ns/op
Iteration   3: 35.687 ns/op
Iteration   4: 35.710 ns/op
Iteration   5: 35.726 ns/op
Iteration   6: 36.165 ns/op
Iteration   7: 35.627 ns/op
Iteration   8: 34.462 ns/op
Iteration   9: 35.668 ns/op
Iteration  10: 35.681 ns/op

# Run progress: 32.72% complete, ETA 00:48:22
# Fork: 2 of 2
# Warmup Iteration   1: 38.126 ns/op
# Warmup Iteration   2: 74.317 ns/op
# Warmup Iteration   3: 35.656 ns/op
Iteration   1: 35.680 ns/op
Iteration   2: 35.675 ns/op
Iteration   3: 35.693 ns/op
Iteration   4: 35.783 ns/op
Iteration   5: 35.713 ns/op
Iteration   6: 36.201 ns/op
Iteration   7: 35.661 ns/op
Iteration   8: 34.513 ns/op
Iteration   9: 35.756 ns/op
Iteration  10: 35.778 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.625 ±(99.9%) 0.363 ns/op [Average]
  (min, avg, max) = (34.462, 35.625, 36.201), stdev = 0.418
  CI (99.9%): [35.261, 35.988] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 32.78% complete, ETA 00:48:20
# Fork: 1 of 2
# Warmup Iteration   1: 10752.316 ns/op
# Warmup Iteration   2: 11386.403 ns/op
# Warmup Iteration   3: 8312.069 ns/op
Iteration   1: 4636.701 ns/op
Iteration   2: 4318.785 ns/op
Iteration   3: 4541.473 ns/op
Iteration   4: 4600.439 ns/op
Iteration   5: 4267.862 ns/op
Iteration   6: 4542.119 ns/op
Iteration   7: 4674.612 ns/op
Iteration   8: 4837.387 ns/op
Iteration   9: 4537.393 ns/op
Iteration  10: 4419.993 ns/op

# Run progress: 32.83% complete, ETA 00:48:17
# Fork: 2 of 2
# Warmup Iteration   1: 10644.785 ns/op
# Warmup Iteration   2: 10501.964 ns/op
# Warmup Iteration   3: 6585.864 ns/op
Iteration   1: 4636.629 ns/op
Iteration   2: 4355.147 ns/op
Iteration   3: 4619.815 ns/op
Iteration   4: 4694.773 ns/op
Iteration   5: 4295.541 ns/op
Iteration   6: 4607.110 ns/op
Iteration   7: 4749.278 ns/op
Iteration   8: 4941.583 ns/op
Iteration   9: 4582.914 ns/op
Iteration  10: 4499.160 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4567.936 ±(99.9%) 152.765 ns/op [Average]
  (min, avg, max) = (4267.862, 4567.936, 4941.583), stdev = 175.924
  CI (99.9%): [4415.171, 4720.701] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 32.89% complete, ETA 00:48:15
# Fork: 1 of 2
# Warmup Iteration   1: 15312.554 ns/op
# Warmup Iteration   2: 6951.507 ns/op
# Warmup Iteration   3: 5550.226 ns/op
Iteration   1: 6418.183 ns/op
Iteration   2: 5874.408 ns/op
Iteration   3: 7483.471 ns/op
Iteration   4: 5999.433 ns/op
Iteration   5: 7072.305 ns/op
Iteration   6: 4947.538 ns/op
Iteration   7: 5577.628 ns/op
Iteration   8: 5919.742 ns/op
Iteration   9: 6172.711 ns/op
Iteration  10: 5517.513 ns/op

# Run progress: 32.94% complete, ETA 00:48:13
# Fork: 2 of 2
# Warmup Iteration   1: 12660.976 ns/op
# Warmup Iteration   2: 6976.510 ns/op
# Warmup Iteration   3: 5549.937 ns/op
Iteration   1: 6417.090 ns/op
Iteration   2: 5877.594 ns/op
Iteration   3: 7517.294 ns/op
Iteration   4: 5973.355 ns/op
Iteration   5: 6994.788 ns/op
Iteration   6: 4953.392 ns/op
Iteration   7: 5572.663 ns/op
Iteration   8: 5953.963 ns/op
Iteration   9: 6124.512 ns/op
Iteration  10: 5508.651 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6093.812 ±(99.9%) 628.041 ns/op [Average]
  (min, avg, max) = (4947.538, 6093.812, 7517.294), stdev = 723.253
  CI (99.9%): [5465.771, 6721.853] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 33.00% complete, ETA 00:48:10
# Fork: 1 of 2
# Warmup Iteration   1: 13639.795 ns/op
# Warmup Iteration   2: 11811.876 ns/op
# Warmup Iteration   3: 7942.610 ns/op
Iteration   1: 6255.314 ns/op
Iteration   2: 5787.973 ns/op
Iteration   3: 7352.331 ns/op
Iteration   4: 5930.891 ns/op
Iteration   5: 7134.944 ns/op
Iteration   6: 5023.189 ns/op
Iteration   7: 5808.767 ns/op
Iteration   8: 5964.507 ns/op
Iteration   9: 5929.906 ns/op
Iteration  10: 5548.670 ns/op

# Run progress: 33.06% complete, ETA 00:48:08
# Fork: 2 of 2
# Warmup Iteration   1: 19209.667 ns/op
# Warmup Iteration   2: 6688.136 ns/op
# Warmup Iteration   3: 5675.196 ns/op
Iteration   1: 6282.844 ns/op
Iteration   2: 5807.297 ns/op
Iteration   3: 7282.761 ns/op
Iteration   4: 5848.117 ns/op
Iteration   5: 6973.418 ns/op
Iteration   6: 5143.906 ns/op
Iteration   7: 5806.550 ns/op
Iteration   8: 6069.679 ns/op
Iteration   9: 6019.063 ns/op
Iteration  10: 5680.198 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6082.516 ±(99.9%) 560.189 ns/op [Average]
  (min, avg, max) = (5023.189, 6082.516, 7352.331), stdev = 645.114
  CI (99.9%): [5522.328, 6642.705] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 33.11% complete, ETA 00:48:05
# Fork: 1 of 2
# Warmup Iteration   1: 8240.314 ns/op
# Warmup Iteration   2: 5702.908 ns/op
# Warmup Iteration   3: 5037.525 ns/op
Iteration   1: 5336.757 ns/op
Iteration   2: 4583.900 ns/op
Iteration   3: 6047.816 ns/op
Iteration   4: 4784.554 ns/op
Iteration   5: 5769.518 ns/op
Iteration   6: 4205.197 ns/op
Iteration   7: 4841.793 ns/op
Iteration   8: 5065.559 ns/op
Iteration   9: 4896.101 ns/op
Iteration  10: 5035.350 ns/op

# Run progress: 33.17% complete, ETA 00:48:03
# Fork: 2 of 2
# Warmup Iteration   1: 9042.139 ns/op
# Warmup Iteration   2: 9147.629 ns/op
# Warmup Iteration   3: 6416.435 ns/op
Iteration   1: 5937.709 ns/op
Iteration   2: 5062.453 ns/op
Iteration   3: 6874.610 ns/op
Iteration   4: 5422.418 ns/op
Iteration   5: 6583.418 ns/op
Iteration   6: 4490.235 ns/op
Iteration   7: 5233.967 ns/op
Iteration   8: 5498.602 ns/op
Iteration   9: 5499.543 ns/op
Iteration  10: 5271.003 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5322.025 ±(99.9%) 583.917 ns/op [Average]
  (min, avg, max) = (4205.197, 5322.025, 6874.610), stdev = 672.439
  CI (99.9%): [4738.108, 5905.942] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 33.22% complete, ETA 00:48:01
# Fork: 1 of 2
# Warmup Iteration   1: 15656.003 ns/op
# Warmup Iteration   2: 19622.586 ns/op
# Warmup Iteration   3: 9934.867 ns/op
Iteration   1: 9824.881 ns/op
Iteration   2: 10499.418 ns/op
Iteration   3: 10542.145 ns/op
Iteration   4: 13045.148 ns/op
Iteration   5: 10399.320 ns/op
Iteration   6: 10146.960 ns/op
Iteration   7: 10343.923 ns/op
Iteration   8: 9341.466 ns/op
Iteration   9: 10102.655 ns/op
Iteration  10: 9991.716 ns/op

# Run progress: 33.28% complete, ETA 00:47:58
# Fork: 2 of 2
# Warmup Iteration   1: 15014.887 ns/op
# Warmup Iteration   2: 19083.208 ns/op
# Warmup Iteration   3: 9936.519 ns/op
Iteration   1: 9870.660 ns/op
Iteration   2: 10672.502 ns/op
Iteration   3: 10865.357 ns/op
Iteration   4: 13264.315 ns/op
Iteration   5: 10617.600 ns/op
Iteration   6: 10316.322 ns/op
Iteration   7: 10474.252 ns/op
Iteration   8: 9544.390 ns/op
Iteration   9: 10268.959 ns/op
Iteration  10: 10003.191 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10506.759 ±(99.9%) 852.544 ns/op [Average]
  (min, avg, max) = (9341.466, 10506.759, 13264.315), stdev = 981.791
  CI (99.9%): [9654.215, 11359.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 33.33% complete, ETA 00:47:56
# Fork: 1 of 2
# Warmup Iteration   1: 39.067 ns/op
# Warmup Iteration   2: 63.584 ns/op
# Warmup Iteration   3: 37.940 ns/op
Iteration   1: 38.112 ns/op
Iteration   2: 38.157 ns/op
Iteration   3: 37.959 ns/op
Iteration   4: 38.099 ns/op
Iteration   5: 38.084 ns/op
Iteration   6: 38.081 ns/op
Iteration   7: 38.065 ns/op
Iteration   8: 52.832 ns/op
Iteration   9: 37.964 ns/op
Iteration  10: 38.120 ns/op

# Run progress: 33.39% complete, ETA 00:47:53
# Fork: 2 of 2
# Warmup Iteration   1: 38.347 ns/op
# Warmup Iteration   2: 62.136 ns/op
# Warmup Iteration   3: 50.548 ns/op
Iteration   1: 50.706 ns/op
Iteration   2: 50.848 ns/op
Iteration   3: 50.618 ns/op
Iteration   4: 50.805 ns/op
Iteration   5: 50.812 ns/op
Iteration   6: 50.686 ns/op
Iteration   7: 50.672 ns/op
Iteration   8: 37.123 ns/op
Iteration   9: 50.837 ns/op
Iteration  10: 50.731 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  44.466 ±(99.9%) 5.798 ns/op [Average]
  (min, avg, max) = (37.123, 44.466, 52.832), stdev = 6.677
  CI (99.9%): [38.668, 50.263] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 33.44% complete, ETA 00:47:51
# Fork: 1 of 2
# Warmup Iteration   1: 300.747 ns/op
# Warmup Iteration   2: 287.123 ns/op
# Warmup Iteration   3: 240.996 ns/op
Iteration   1: 241.404 ns/op
Iteration   2: 241.413 ns/op
Iteration   3: 241.334 ns/op
Iteration   4: 241.225 ns/op
Iteration   5: 241.883 ns/op
Iteration   6: 241.313 ns/op
Iteration   7: 240.983 ns/op
Iteration   8: 238.313 ns/op
Iteration   9: 241.368 ns/op
Iteration  10: 241.285 ns/op

# Run progress: 33.50% complete, ETA 00:47:49
# Fork: 2 of 2
# Warmup Iteration   1: 295.123 ns/op
# Warmup Iteration   2: 283.221 ns/op
# Warmup Iteration   3: 240.495 ns/op
Iteration   1: 240.954 ns/op
Iteration   2: 240.285 ns/op
Iteration   3: 240.168 ns/op
Iteration   4: 240.362 ns/op
Iteration   5: 242.409 ns/op
Iteration   6: 240.650 ns/op
Iteration   7: 240.186 ns/op
Iteration   8: 238.528 ns/op
Iteration   9: 240.241 ns/op
Iteration  10: 239.989 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  240.715 ±(99.9%) 0.875 ns/op [Average]
  (min, avg, max) = (238.313, 240.715, 242.409), stdev = 1.007
  CI (99.9%): [239.840, 241.589] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 33.56% complete, ETA 00:47:46
# Fork: 1 of 2
# Warmup Iteration   1: 2248.350 ns/op
# Warmup Iteration   2: 1173.172 ns/op
# Warmup Iteration   3: 1033.926 ns/op
Iteration   1: 1034.554 ns/op
Iteration   2: 1035.473 ns/op
Iteration   3: 1038.006 ns/op
Iteration   4: 1036.625 ns/op
Iteration   5: 1034.518 ns/op
Iteration   6: 1037.427 ns/op
Iteration   7: 1036.039 ns/op
Iteration   8: 1036.347 ns/op
Iteration   9: 1037.017 ns/op
Iteration  10: 1035.262 ns/op

# Run progress: 33.61% complete, ETA 00:47:44
# Fork: 2 of 2
# Warmup Iteration   1: 2269.778 ns/op
# Warmup Iteration   2: 1190.623 ns/op
# Warmup Iteration   3: 1035.353 ns/op
Iteration   1: 1035.245 ns/op
Iteration   2: 1036.081 ns/op
Iteration   3: 1036.564 ns/op
Iteration   4: 1037.074 ns/op
Iteration   5: 1034.946 ns/op
Iteration   6: 1037.007 ns/op
Iteration   7: 1035.051 ns/op
Iteration   8: 1034.658 ns/op
Iteration   9: 1038.235 ns/op
Iteration  10: 1034.630 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1036.038 ±(99.9%) 1.024 ns/op [Average]
  (min, avg, max) = (1034.518, 1036.038, 1038.235), stdev = 1.179
  CI (99.9%): [1035.014, 1037.062] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 33.67% complete, ETA 00:47:42
# Fork: 1 of 2
# Warmup Iteration   1: 1586.414 ns/op
# Warmup Iteration   2: 1255.664 ns/op
# Warmup Iteration   3: 1048.201 ns/op
Iteration   1: 1052.691 ns/op
Iteration   2: 1047.551 ns/op
Iteration   3: 1047.964 ns/op
Iteration   4: 1047.180 ns/op
Iteration   5: 1048.752 ns/op
Iteration   6: 1052.048 ns/op
Iteration   7: 1048.536 ns/op
Iteration   8: 1049.565 ns/op
Iteration   9: 1046.865 ns/op
Iteration  10: 1049.027 ns/op

# Run progress: 33.72% complete, ETA 00:47:39
# Fork: 2 of 2
# Warmup Iteration   1: 1643.897 ns/op
# Warmup Iteration   2: 1266.688 ns/op
# Warmup Iteration   3: 1047.711 ns/op
Iteration   1: 1048.486 ns/op
Iteration   2: 1047.446 ns/op
Iteration   3: 1047.191 ns/op
Iteration   4: 1051.191 ns/op
Iteration   5: 1046.166 ns/op
Iteration   6: 1047.369 ns/op
Iteration   7: 1047.693 ns/op
Iteration   8: 1049.550 ns/op
Iteration   9: 1045.953 ns/op
Iteration  10: 1047.175 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1048.420 ±(99.9%) 1.592 ns/op [Average]
  (min, avg, max) = (1045.953, 1048.420, 1052.691), stdev = 1.834
  CI (99.9%): [1046.828, 1050.012] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 33.78% complete, ETA 00:47:37
# Fork: 1 of 2
# Warmup Iteration   1: 1471.788 ns/op
# Warmup Iteration   2: 1171.789 ns/op
# Warmup Iteration   3: 1011.330 ns/op
Iteration   1: 1011.629 ns/op
Iteration   2: 1011.328 ns/op
Iteration   3: 1011.534 ns/op
Iteration   4: 1022.543 ns/op
Iteration   5: 1012.398 ns/op
Iteration   6: 1012.127 ns/op
Iteration   7: 1011.225 ns/op
Iteration   8: 1011.564 ns/op
Iteration   9: 1022.191 ns/op
Iteration  10: 1022.396 ns/op

# Run progress: 33.83% complete, ETA 00:47:35
# Fork: 2 of 2
# Warmup Iteration   1: 1453.915 ns/op
# Warmup Iteration   2: 1184.366 ns/op
# Warmup Iteration   3: 1010.631 ns/op
Iteration   1: 1011.389 ns/op
Iteration   2: 1010.908 ns/op
Iteration   3: 1010.808 ns/op
Iteration   4: 1011.369 ns/op
Iteration   5: 1011.260 ns/op
Iteration   6: 1011.453 ns/op
Iteration   7: 1011.058 ns/op
Iteration   8: 1010.848 ns/op
Iteration   9: 1011.461 ns/op
Iteration  10: 1011.165 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1013.033 ±(99.9%) 3.513 ns/op [Average]
  (min, avg, max) = (1010.808, 1013.033, 1022.543), stdev = 4.046
  CI (99.9%): [1009.520, 1016.546] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 33.89% complete, ETA 00:47:32
# Fork: 1 of 2
# Warmup Iteration   1: 547.766 ns/op
# Warmup Iteration   2: 536.049 ns/op
# Warmup Iteration   3: 459.710 ns/op
Iteration   1: 459.572 ns/op
Iteration   2: 460.063 ns/op
Iteration   3: 459.890 ns/op
Iteration   4: 462.124 ns/op
Iteration   5: 462.250 ns/op
Iteration   6: 462.004 ns/op
Iteration   7: 461.943 ns/op
Iteration   8: 458.599 ns/op
Iteration   9: 461.582 ns/op
Iteration  10: 462.078 ns/op

# Run progress: 33.94% complete, ETA 00:47:30
# Fork: 2 of 2
# Warmup Iteration   1: 542.033 ns/op
# Warmup Iteration   2: 535.913 ns/op
# Warmup Iteration   3: 459.890 ns/op
Iteration   1: 460.117 ns/op
Iteration   2: 459.880 ns/op
Iteration   3: 459.985 ns/op
Iteration   4: 462.342 ns/op
Iteration   5: 461.908 ns/op
Iteration   6: 461.861 ns/op
Iteration   7: 462.252 ns/op
Iteration   8: 458.548 ns/op
Iteration   9: 462.259 ns/op
Iteration  10: 462.548 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  461.090 ±(99.9%) 1.161 ns/op [Average]
  (min, avg, max) = (458.548, 461.090, 462.548), stdev = 1.337
  CI (99.9%): [459.929, 462.251] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 34.00% complete, ETA 00:47:27
# Fork: 1 of 2
# Warmup Iteration   1: 38.066 ns/op
# Warmup Iteration   2: 60.257 ns/op
# Warmup Iteration   3: 38.089 ns/op
Iteration   1: 37.963 ns/op
Iteration   2: 38.088 ns/op
Iteration   3: 38.133 ns/op
Iteration   4: 38.026 ns/op
Iteration   5: 38.365 ns/op
Iteration   6: 38.414 ns/op
Iteration   7: 38.142 ns/op
Iteration   8: 37.124 ns/op
Iteration   9: 38.011 ns/op
Iteration  10: 38.437 ns/op

# Run progress: 34.06% complete, ETA 00:47:25
# Fork: 2 of 2
# Warmup Iteration   1: 38.913 ns/op
# Warmup Iteration   2: 62.475 ns/op
# Warmup Iteration   3: 38.212 ns/op
Iteration   1: 38.129 ns/op
Iteration   2: 38.362 ns/op
Iteration   3: 38.125 ns/op
Iteration   4: 38.141 ns/op
Iteration   5: 38.119 ns/op
Iteration   6: 38.074 ns/op
Iteration   7: 38.009 ns/op
Iteration   8: 37.204 ns/op
Iteration   9: 38.035 ns/op
Iteration  10: 38.115 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.051 ±(99.9%) 0.289 ns/op [Average]
  (min, avg, max) = (37.124, 38.051, 38.437), stdev = 0.333
  CI (99.9%): [37.761, 38.340] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 34.11% complete, ETA 00:47:23
# Fork: 1 of 2
# Warmup Iteration   1: 285.110 ns/op
# Warmup Iteration   2: 276.798 ns/op
# Warmup Iteration   3: 239.736 ns/op
Iteration   1: 238.840 ns/op
Iteration   2: 239.279 ns/op
Iteration   3: 240.040 ns/op
Iteration   4: 240.100 ns/op
Iteration   5: 239.317 ns/op
Iteration   6: 239.359 ns/op
Iteration   7: 239.727 ns/op
Iteration   8: 237.799 ns/op
Iteration   9: 240.033 ns/op
Iteration  10: 239.423 ns/op

# Run progress: 34.17% complete, ETA 00:47:20
# Fork: 2 of 2
# Warmup Iteration   1: 295.826 ns/op
# Warmup Iteration   2: 284.526 ns/op
# Warmup Iteration   3: 240.046 ns/op
Iteration   1: 240.171 ns/op
Iteration   2: 239.723 ns/op
Iteration   3: 239.714 ns/op
Iteration   4: 239.009 ns/op
Iteration   5: 239.384 ns/op
Iteration   6: 239.181 ns/op
Iteration   7: 239.278 ns/op
Iteration   8: 237.731 ns/op
Iteration   9: 239.521 ns/op
Iteration  10: 239.535 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  239.358 ±(99.9%) 0.567 ns/op [Average]
  (min, avg, max) = (237.731, 239.358, 240.171), stdev = 0.653
  CI (99.9%): [238.791, 239.925] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 34.22% complete, ETA 00:47:18
# Fork: 1 of 2
# Warmup Iteration   1: 2003.875 ns/op
# Warmup Iteration   2: 1345.135 ns/op
# Warmup Iteration   3: 1189.074 ns/op
Iteration   1: 1184.047 ns/op
Iteration   2: 1190.936 ns/op
Iteration   3: 1190.477 ns/op
Iteration   4: 1189.868 ns/op
Iteration   5: 1190.040 ns/op
Iteration   6: 1193.295 ns/op
Iteration   7: 1188.298 ns/op
Iteration   8: 1205.687 ns/op
Iteration   9: 1190.643 ns/op
Iteration  10: 1192.727 ns/op

# Run progress: 34.28% complete, ETA 00:47:15
# Fork: 2 of 2
# Warmup Iteration   1: 1933.776 ns/op
# Warmup Iteration   2: 1353.207 ns/op
# Warmup Iteration   3: 1170.266 ns/op
Iteration   1: 1172.752 ns/op
Iteration   2: 1172.440 ns/op
Iteration   3: 1173.167 ns/op
Iteration   4: 1168.874 ns/op
Iteration   5: 1168.627 ns/op
Iteration   6: 1173.763 ns/op
Iteration   7: 1178.530 ns/op
Iteration   8: 1179.749 ns/op
Iteration   9: 1180.575 ns/op
Iteration  10: 1174.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1182.973 ±(99.9%) 8.739 ns/op [Average]
  (min, avg, max) = (1168.627, 1182.973, 1205.687), stdev = 10.063
  CI (99.9%): [1174.234, 1191.712] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 34.33% complete, ETA 00:47:13
# Fork: 1 of 2
# Warmup Iteration   1: 2381.267 ns/op
# Warmup Iteration   2: 1348.539 ns/op
# Warmup Iteration   3: 1182.514 ns/op
Iteration   1: 1177.759 ns/op
Iteration   2: 1182.741 ns/op
Iteration   3: 1190.956 ns/op
Iteration   4: 1196.626 ns/op
Iteration   5: 1194.709 ns/op
Iteration   6: 1183.804 ns/op
Iteration   7: 1186.242 ns/op
Iteration   8: 1175.819 ns/op
Iteration   9: 1187.294 ns/op
Iteration  10: 1188.047 ns/op

# Run progress: 34.39% complete, ETA 00:47:11
# Fork: 2 of 2
# Warmup Iteration   1: 1994.872 ns/op
# Warmup Iteration   2: 1384.907 ns/op
# Warmup Iteration   3: 1177.315 ns/op
Iteration   1: 1170.006 ns/op
Iteration   2: 1177.735 ns/op
Iteration   3: 1179.237 ns/op
Iteration   4: 1178.062 ns/op
Iteration   5: 1171.288 ns/op
Iteration   6: 1172.407 ns/op
Iteration   7: 1171.568 ns/op
Iteration   8: 1176.027 ns/op
Iteration   9: 1176.427 ns/op
Iteration  10: 1174.012 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1180.538 ±(99.9%) 6.863 ns/op [Average]
  (min, avg, max) = (1170.006, 1180.538, 1196.626), stdev = 7.903
  CI (99.9%): [1173.675, 1187.401] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 34.44% complete, ETA 00:47:08
# Fork: 1 of 2
# Warmup Iteration   1: 1623.687 ns/op
# Warmup Iteration   2: 1215.893 ns/op
# Warmup Iteration   3: 1062.568 ns/op
Iteration   1: 1068.315 ns/op
Iteration   2: 1070.601 ns/op
Iteration   3: 1067.980 ns/op
Iteration   4: 1070.317 ns/op
Iteration   5: 1070.694 ns/op
Iteration   6: 1058.305 ns/op
Iteration   7: 1072.323 ns/op
Iteration   8: 1074.580 ns/op
Iteration   9: 1067.801 ns/op
Iteration  10: 1063.182 ns/op

# Run progress: 34.50% complete, ETA 00:47:06
# Fork: 2 of 2
# Warmup Iteration   1: 1541.830 ns/op
# Warmup Iteration   2: 1213.609 ns/op
# Warmup Iteration   3: 1055.806 ns/op
Iteration   1: 1071.461 ns/op
Iteration   2: 1063.149 ns/op
Iteration   3: 1064.001 ns/op
Iteration   4: 1061.024 ns/op
Iteration   5: 1070.968 ns/op
Iteration   6: 1060.309 ns/op
Iteration   7: 1061.608 ns/op
Iteration   8: 1068.192 ns/op
Iteration   9: 1061.495 ns/op
Iteration  10: 1062.676 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1066.449 ±(99.9%) 4.132 ns/op [Average]
  (min, avg, max) = (1058.305, 1066.449, 1074.580), stdev = 4.759
  CI (99.9%): [1062.317, 1070.581] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 34.56% complete, ETA 00:47:03
# Fork: 1 of 2
# Warmup Iteration   1: 527.038 ns/op
# Warmup Iteration   2: 520.327 ns/op
# Warmup Iteration   3: 439.195 ns/op
Iteration   1: 439.151 ns/op
Iteration   2: 439.199 ns/op
Iteration   3: 439.086 ns/op
Iteration   4: 441.708 ns/op
Iteration   5: 441.613 ns/op
Iteration   6: 441.930 ns/op
Iteration   7: 441.826 ns/op
Iteration   8: 438.111 ns/op
Iteration   9: 441.981 ns/op
Iteration  10: 441.783 ns/op

# Run progress: 34.61% complete, ETA 00:47:01
# Fork: 2 of 2
# Warmup Iteration   1: 541.880 ns/op
# Warmup Iteration   2: 521.624 ns/op
# Warmup Iteration   3: 438.749 ns/op
Iteration   1: 438.831 ns/op
Iteration   2: 439.127 ns/op
Iteration   3: 439.065 ns/op
Iteration   4: 441.747 ns/op
Iteration   5: 441.845 ns/op
Iteration   6: 441.939 ns/op
Iteration   7: 441.147 ns/op
Iteration   8: 437.995 ns/op
Iteration   9: 441.492 ns/op
Iteration  10: 441.425 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  440.550 ±(99.9%) 1.294 ns/op [Average]
  (min, avg, max) = (437.995, 440.550, 441.981), stdev = 1.491
  CI (99.9%): [439.256, 441.844] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 34.67% complete, ETA 00:46:59
# Fork: 1 of 2
# Warmup Iteration   1: 38.338 ns/op
# Warmup Iteration   2: 61.232 ns/op
# Warmup Iteration   3: 38.113 ns/op
Iteration   1: 38.106 ns/op
Iteration   2: 37.929 ns/op
Iteration   3: 38.360 ns/op
Iteration   4: 38.224 ns/op
Iteration   5: 38.081 ns/op
Iteration   6: 38.007 ns/op
Iteration   7: 38.414 ns/op
Iteration   8: 37.067 ns/op
Iteration   9: 38.110 ns/op
Iteration  10: 38.257 ns/op

# Run progress: 34.72% complete, ETA 00:46:56
# Fork: 2 of 2
# Warmup Iteration   1: 38.397 ns/op
# Warmup Iteration   2: 62.507 ns/op
# Warmup Iteration   3: 38.085 ns/op
Iteration   1: 38.081 ns/op
Iteration   2: 38.103 ns/op
Iteration   3: 38.083 ns/op
Iteration   4: 38.181 ns/op
Iteration   5: 38.130 ns/op
Iteration   6: 38.195 ns/op
Iteration   7: 38.140 ns/op
Iteration   8: 37.207 ns/op
Iteration   9: 38.128 ns/op
Iteration  10: 37.995 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.040 ±(99.9%) 0.286 ns/op [Average]
  (min, avg, max) = (37.067, 38.040, 38.414), stdev = 0.330
  CI (99.9%): [37.753, 38.326] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 34.78% complete, ETA 00:46:54
# Fork: 1 of 2
# Warmup Iteration   1: 316.661 ns/op
# Warmup Iteration   2: 280.025 ns/op
# Warmup Iteration   3: 246.744 ns/op
Iteration   1: 239.482 ns/op
Iteration   2: 239.570 ns/op
Iteration   3: 238.027 ns/op
Iteration   4: 237.725 ns/op
Iteration   5: 244.969 ns/op
Iteration   6: 247.568 ns/op
Iteration   7: 245.733 ns/op
Iteration   8: 238.256 ns/op
Iteration   9: 238.196 ns/op
Iteration  10: 247.141 ns/op

# Run progress: 34.83% complete, ETA 00:46:51
# Fork: 2 of 2
# Warmup Iteration   1: 290.728 ns/op
# Warmup Iteration   2: 286.870 ns/op
# Warmup Iteration   3: 239.795 ns/op
Iteration   1: 239.149 ns/op
Iteration   2: 239.581 ns/op
Iteration   3: 237.807 ns/op
Iteration   4: 238.096 ns/op
Iteration   5: 245.610 ns/op
Iteration   6: 239.711 ns/op
Iteration   7: 246.031 ns/op
Iteration   8: 245.710 ns/op
Iteration   9: 245.188 ns/op
Iteration  10: 239.718 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  241.663 ±(99.9%) 3.232 ns/op [Average]
  (min, avg, max) = (237.725, 241.663, 247.568), stdev = 3.722
  CI (99.9%): [238.432, 244.895] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 34.89% complete, ETA 00:46:49
# Fork: 1 of 2
# Warmup Iteration   1: 1277.626 ns/op
# Warmup Iteration   2: 1038.783 ns/op
# Warmup Iteration   3: 894.439 ns/op
Iteration   1: 923.671 ns/op
Iteration   2: 854.089 ns/op
Iteration   3: 1076.450 ns/op
Iteration   4: 891.178 ns/op
Iteration   5: 775.682 ns/op
Iteration   6: 1083.033 ns/op
Iteration   7: 774.600 ns/op
Iteration   8: 993.318 ns/op
Iteration   9: 934.568 ns/op
Iteration  10: 895.037 ns/op

# Run progress: 34.94% complete, ETA 00:46:47
# Fork: 2 of 2
# Warmup Iteration   1: 1299.735 ns/op
# Warmup Iteration   2: 1035.648 ns/op
# Warmup Iteration   3: 892.389 ns/op
Iteration   1: 910.575 ns/op
Iteration   2: 855.031 ns/op
Iteration   3: 1080.330 ns/op
Iteration   4: 892.693 ns/op
Iteration   5: 774.321 ns/op
Iteration   6: 1093.606 ns/op
Iteration   7: 778.840 ns/op
Iteration   8: 996.480 ns/op
Iteration   9: 914.102 ns/op
Iteration  10: 894.824 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  919.621 ±(99.9%) 91.939 ns/op [Average]
  (min, avg, max) = (774.321, 919.621, 1093.606), stdev = 105.877
  CI (99.9%): [827.683, 1011.560] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 35.00% complete, ETA 00:46:44
# Fork: 1 of 2
# Warmup Iteration   1: 1358.433 ns/op
# Warmup Iteration   2: 1053.835 ns/op
# Warmup Iteration   3: 897.182 ns/op
Iteration   1: 909.482 ns/op
Iteration   2: 855.438 ns/op
Iteration   3: 1084.254 ns/op
Iteration   4: 897.655 ns/op
Iteration   5: 774.629 ns/op
Iteration   6: 1091.607 ns/op
Iteration   7: 785.188 ns/op
Iteration   8: 992.746 ns/op
Iteration   9: 915.247 ns/op
Iteration  10: 897.224 ns/op

# Run progress: 35.06% complete, ETA 00:46:42
# Fork: 2 of 2
# Warmup Iteration   1: 1225.702 ns/op
# Warmup Iteration   2: 1034.627 ns/op
# Warmup Iteration   3: 893.546 ns/op
Iteration   1: 907.643 ns/op
Iteration   2: 856.724 ns/op
Iteration   3: 1083.880 ns/op
Iteration   4: 894.662 ns/op
Iteration   5: 775.177 ns/op
Iteration   6: 1104.940 ns/op
Iteration   7: 777.935 ns/op
Iteration   8: 995.836 ns/op
Iteration   9: 910.337 ns/op
Iteration  10: 894.252 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  920.243 ±(99.9%) 93.412 ns/op [Average]
  (min, avg, max) = (774.629, 920.243, 1104.940), stdev = 107.573
  CI (99.9%): [826.831, 1013.654] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 35.11% complete, ETA 00:46:39
# Fork: 1 of 2
# Warmup Iteration   1: 1592.758 ns/op
# Warmup Iteration   2: 1038.415 ns/op
# Warmup Iteration   3: 877.483 ns/op
Iteration   1: 899.475 ns/op
Iteration   2: 907.326 ns/op
Iteration   3: 1062.384 ns/op
Iteration   4: 874.534 ns/op
Iteration   5: 748.505 ns/op
Iteration   6: 1071.769 ns/op
Iteration   7: 749.511 ns/op
Iteration   8: 1042.909 ns/op
Iteration   9: 901.710 ns/op
Iteration  10: 876.659 ns/op

# Run progress: 35.17% complete, ETA 00:46:37
# Fork: 2 of 2
# Warmup Iteration   1: 1930.820 ns/op
# Warmup Iteration   2: 1049.117 ns/op
# Warmup Iteration   3: 873.951 ns/op
Iteration   1: 916.827 ns/op
Iteration   2: 912.028 ns/op
Iteration   3: 1073.851 ns/op
Iteration   4: 873.100 ns/op
Iteration   5: 778.818 ns/op
Iteration   6: 1079.169 ns/op
Iteration   7: 749.275 ns/op
Iteration   8: 1068.439 ns/op
Iteration   9: 924.033 ns/op
Iteration  10: 876.138 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  919.323 ±(99.9%) 98.822 ns/op [Average]
  (min, avg, max) = (748.505, 919.323, 1079.169), stdev = 113.804
  CI (99.9%): [820.501, 1018.146] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 35.22% complete, ETA 00:46:35
# Fork: 1 of 2
# Warmup Iteration   1: 534.136 ns/op
# Warmup Iteration   2: 521.932 ns/op
# Warmup Iteration   3: 440.205 ns/op
Iteration   1: 439.068 ns/op
Iteration   2: 434.586 ns/op
Iteration   3: 439.136 ns/op
Iteration   4: 447.345 ns/op
Iteration   5: 446.550 ns/op
Iteration   6: 442.074 ns/op
Iteration   7: 447.170 ns/op
Iteration   8: 434.379 ns/op
Iteration   9: 442.473 ns/op
Iteration  10: 442.029 ns/op

# Run progress: 35.28% complete, ETA 00:46:32
# Fork: 2 of 2
# Warmup Iteration   1: 467.774 ns/op
# Warmup Iteration   2: 485.176 ns/op
# Warmup Iteration   3: 412.190 ns/op
Iteration   1: 411.496 ns/op
Iteration   2: 411.292 ns/op
Iteration   3: 412.244 ns/op
Iteration   4: 412.658 ns/op
Iteration   5: 421.239 ns/op
Iteration   6: 413.667 ns/op
Iteration   7: 422.149 ns/op
Iteration   8: 408.851 ns/op
Iteration   9: 412.736 ns/op
Iteration  10: 413.208 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  427.718 ±(99.9%) 12.846 ns/op [Average]
  (min, avg, max) = (408.851, 427.718, 447.345), stdev = 14.794
  CI (99.9%): [414.871, 440.564] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 35.33% complete, ETA 00:46:30
# Fork: 1 of 2
# Warmup Iteration   1: 37.955 ns/op
# Warmup Iteration   2: 61.304 ns/op
# Warmup Iteration   3: 38.034 ns/op
Iteration   1: 38.054 ns/op
Iteration   2: 38.115 ns/op
Iteration   3: 38.191 ns/op
Iteration   4: 38.369 ns/op
Iteration   5: 38.193 ns/op
Iteration   6: 38.005 ns/op
Iteration   7: 38.043 ns/op
Iteration   8: 52.507 ns/op
Iteration   9: 38.091 ns/op
Iteration  10: 38.100 ns/op

# Run progress: 35.39% complete, ETA 00:46:27
# Fork: 2 of 2
# Warmup Iteration   1: 38.157 ns/op
# Warmup Iteration   2: 63.270 ns/op
# Warmup Iteration   3: 38.215 ns/op
Iteration   1: 38.189 ns/op
Iteration   2: 38.116 ns/op
Iteration   3: 38.062 ns/op
Iteration   4: 38.065 ns/op
Iteration   5: 37.974 ns/op
Iteration   6: 38.102 ns/op
Iteration   7: 38.034 ns/op
Iteration   8: 37.174 ns/op
Iteration   9: 38.128 ns/op
Iteration  10: 38.050 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.778 ±(99.9%) 2.813 ns/op [Average]
  (min, avg, max) = (37.174, 38.778, 52.507), stdev = 3.239
  CI (99.9%): [35.965, 41.591] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 35.44% complete, ETA 00:46:25
# Fork: 1 of 2
# Warmup Iteration   1: 297.591 ns/op
# Warmup Iteration   2: 280.499 ns/op
# Warmup Iteration   3: 238.529 ns/op
Iteration   1: 238.974 ns/op
Iteration   2: 238.875 ns/op
Iteration   3: 240.035 ns/op
Iteration   4: 239.468 ns/op
Iteration   5: 239.205 ns/op
Iteration   6: 238.730 ns/op
Iteration   7: 239.618 ns/op
Iteration   8: 235.826 ns/op
Iteration   9: 240.588 ns/op
Iteration  10: 239.703 ns/op

# Run progress: 35.50% complete, ETA 00:46:23
# Fork: 2 of 2
# Warmup Iteration   1: 297.515 ns/op
# Warmup Iteration   2: 286.382 ns/op
# Warmup Iteration   3: 238.102 ns/op
Iteration   1: 238.599 ns/op
Iteration   2: 238.606 ns/op
Iteration   3: 239.646 ns/op
Iteration   4: 239.734 ns/op
Iteration   5: 238.432 ns/op
Iteration   6: 238.782 ns/op
Iteration   7: 238.616 ns/op
Iteration   8: 236.437 ns/op
Iteration   9: 239.257 ns/op
Iteration  10: 238.859 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  238.900 ±(99.9%) 0.958 ns/op [Average]
  (min, avg, max) = (235.826, 238.900, 240.588), stdev = 1.103
  CI (99.9%): [237.941, 239.858] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 35.56% complete, ETA 00:46:20
# Fork: 1 of 2
# Warmup Iteration   1: 1282.593 ns/op
# Warmup Iteration   2: 518.657 ns/op
# Warmup Iteration   3: 443.987 ns/op
Iteration   1: 443.886 ns/op
Iteration   2: 443.933 ns/op
Iteration   3: 444.204 ns/op
Iteration   4: 444.282 ns/op
Iteration   5: 444.111 ns/op
Iteration   6: 447.094 ns/op
Iteration   7: 444.197 ns/op
Iteration   8: 444.066 ns/op
Iteration   9: 443.958 ns/op
Iteration  10: 444.352 ns/op

# Run progress: 35.61% complete, ETA 00:46:18
# Fork: 2 of 2
# Warmup Iteration   1: 826.508 ns/op
# Warmup Iteration   2: 508.698 ns/op
# Warmup Iteration   3: 447.745 ns/op
Iteration   1: 446.657 ns/op
Iteration   2: 447.747 ns/op
Iteration   3: 452.654 ns/op
Iteration   4: 448.518 ns/op
Iteration   5: 446.955 ns/op
Iteration   6: 452.838 ns/op
Iteration   7: 449.059 ns/op
Iteration   8: 448.116 ns/op
Iteration   9: 446.882 ns/op
Iteration  10: 448.150 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  446.583 ±(99.9%) 2.422 ns/op [Average]
  (min, avg, max) = (443.886, 446.583, 452.838), stdev = 2.789
  CI (99.9%): [444.161, 449.005] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 35.67% complete, ETA 00:46:15
# Fork: 1 of 2
# Warmup Iteration   1: 609.949 ns/op
# Warmup Iteration   2: 530.079 ns/op
# Warmup Iteration   3: 447.452 ns/op
Iteration   1: 447.656 ns/op
Iteration   2: 447.393 ns/op
Iteration   3: 447.816 ns/op
Iteration   4: 447.288 ns/op
Iteration   5: 447.598 ns/op
Iteration   6: 448.091 ns/op
Iteration   7: 447.658 ns/op
Iteration   8: 447.541 ns/op
Iteration   9: 447.535 ns/op
Iteration  10: 447.443 ns/op

# Run progress: 35.72% complete, ETA 00:46:13
# Fork: 2 of 2
# Warmup Iteration   1: 757.911 ns/op
# Warmup Iteration   2: 500.768 ns/op
# Warmup Iteration   3: 442.222 ns/op
Iteration   1: 442.351 ns/op
Iteration   2: 442.914 ns/op
Iteration   3: 442.867 ns/op
Iteration   4: 442.369 ns/op
Iteration   5: 442.795 ns/op
Iteration   6: 442.249 ns/op
Iteration   7: 442.534 ns/op
Iteration   8: 442.262 ns/op
Iteration   9: 442.441 ns/op
Iteration  10: 442.323 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  445.056 ±(99.9%) 2.277 ns/op [Average]
  (min, avg, max) = (442.249, 445.056, 448.091), stdev = 2.622
  CI (99.9%): [442.779, 447.333] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 35.78% complete, ETA 00:46:11
# Fork: 1 of 2
# Warmup Iteration   1: 695.565 ns/op
# Warmup Iteration   2: 500.741 ns/op
# Warmup Iteration   3: 442.871 ns/op
Iteration   1: 442.401 ns/op
Iteration   2: 442.772 ns/op
Iteration   3: 442.779 ns/op
Iteration   4: 442.637 ns/op
Iteration   5: 442.883 ns/op
Iteration   6: 443.790 ns/op
Iteration   7: 442.499 ns/op
Iteration   8: 442.358 ns/op
Iteration   9: 443.637 ns/op
Iteration  10: 442.647 ns/op

# Run progress: 35.83% complete, ETA 00:46:08
# Fork: 2 of 2
# Warmup Iteration   1: 625.908 ns/op
# Warmup Iteration   2: 506.228 ns/op
# Warmup Iteration   3: 443.041 ns/op
Iteration   1: 442.494 ns/op
Iteration   2: 442.685 ns/op
Iteration   3: 442.646 ns/op
Iteration   4: 443.104 ns/op
Iteration   5: 442.952 ns/op
Iteration   6: 442.612 ns/op
Iteration   7: 443.102 ns/op
Iteration   8: 442.552 ns/op
Iteration   9: 442.890 ns/op
Iteration  10: 442.732 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  442.809 ±(99.9%) 0.323 ns/op [Average]
  (min, avg, max) = (442.358, 442.809, 443.790), stdev = 0.372
  CI (99.9%): [442.486, 443.132] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 35.89% complete, ETA 00:46:06
# Fork: 1 of 2
# Warmup Iteration   1: 477.400 ns/op
# Warmup Iteration   2: 500.123 ns/op
# Warmup Iteration   3: 420.896 ns/op
Iteration   1: 420.631 ns/op
Iteration   2: 420.578 ns/op
Iteration   3: 420.863 ns/op
Iteration   4: 421.377 ns/op
Iteration   5: 421.323 ns/op
Iteration   6: 421.388 ns/op
Iteration   7: 421.439 ns/op
Iteration   8: 417.562 ns/op
Iteration   9: 421.262 ns/op
Iteration  10: 421.540 ns/op

# Run progress: 35.94% complete, ETA 00:46:03
# Fork: 2 of 2
# Warmup Iteration   1: 469.265 ns/op
# Warmup Iteration   2: 490.057 ns/op
# Warmup Iteration   3: 420.585 ns/op
Iteration   1: 420.718 ns/op
Iteration   2: 420.250 ns/op
Iteration   3: 420.792 ns/op
Iteration   4: 421.624 ns/op
Iteration   5: 422.096 ns/op
Iteration   6: 421.501 ns/op
Iteration   7: 421.290 ns/op
Iteration   8: 419.070 ns/op
Iteration   9: 421.585 ns/op
Iteration  10: 421.854 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  420.937 ±(99.9%) 0.901 ns/op [Average]
  (min, avg, max) = (417.562, 420.937, 422.096), stdev = 1.037
  CI (99.9%): [420.037, 421.838] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 36.00% complete, ETA 00:46:01
# Fork: 1 of 2
# Warmup Iteration   1: 38.903 ns/op
# Warmup Iteration   2: 61.573 ns/op
# Warmup Iteration   3: 37.871 ns/op
Iteration   1: 38.449 ns/op
Iteration   2: 37.945 ns/op
Iteration   3: 38.201 ns/op
Iteration   4: 38.034 ns/op
Iteration   5: 37.913 ns/op
Iteration   6: 38.141 ns/op
Iteration   7: 38.042 ns/op
Iteration   8: 37.217 ns/op
Iteration   9: 38.215 ns/op
Iteration  10: 37.890 ns/op

# Run progress: 36.06% complete, ETA 00:45:59
# Fork: 2 of 2
# Warmup Iteration   1: 38.457 ns/op
# Warmup Iteration   2: 62.354 ns/op
# Warmup Iteration   3: 38.058 ns/op
Iteration   1: 37.990 ns/op
Iteration   2: 38.011 ns/op
Iteration   3: 38.168 ns/op
Iteration   4: 38.084 ns/op
Iteration   5: 38.168 ns/op
Iteration   6: 38.428 ns/op
Iteration   7: 38.099 ns/op
Iteration   8: 37.175 ns/op
Iteration   9: 38.003 ns/op
Iteration  10: 37.969 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.007 ±(99.9%) 0.273 ns/op [Average]
  (min, avg, max) = (37.175, 38.007, 38.449), stdev = 0.315
  CI (99.9%): [37.734, 38.281] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 36.11% complete, ETA 00:45:56
# Fork: 1 of 2
# Warmup Iteration   1: 299.767 ns/op
# Warmup Iteration   2: 277.630 ns/op
# Warmup Iteration   3: 238.238 ns/op
Iteration   1: 238.267 ns/op
Iteration   2: 238.336 ns/op
Iteration   3: 238.598 ns/op
Iteration   4: 239.121 ns/op
Iteration   5: 238.479 ns/op
Iteration   6: 238.485 ns/op
Iteration   7: 239.104 ns/op
Iteration   8: 236.506 ns/op
Iteration   9: 238.831 ns/op
Iteration  10: 238.573 ns/op

# Run progress: 36.17% complete, ETA 00:45:54
# Fork: 2 of 2
# Warmup Iteration   1: 299.060 ns/op
# Warmup Iteration   2: 273.533 ns/op
# Warmup Iteration   3: 238.586 ns/op
Iteration   1: 239.210 ns/op
Iteration   2: 238.524 ns/op
Iteration   3: 239.225 ns/op
Iteration   4: 238.983 ns/op
Iteration   5: 240.866 ns/op
Iteration   6: 239.020 ns/op
Iteration   7: 239.208 ns/op
Iteration   8: 236.967 ns/op
Iteration   9: 238.447 ns/op
Iteration  10: 238.770 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  238.676 ±(99.9%) 0.755 ns/op [Average]
  (min, avg, max) = (236.506, 238.676, 240.866), stdev = 0.870
  CI (99.9%): [237.921, 239.431] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 36.22% complete, ETA 00:45:52
# Fork: 1 of 2
# Warmup Iteration   1: 1753.464 ns/op
# Warmup Iteration   2: 1115.767 ns/op
# Warmup Iteration   3: 976.792 ns/op
Iteration   1: 974.960 ns/op
Iteration   2: 974.650 ns/op
Iteration   3: 976.950 ns/op
Iteration   4: 979.187 ns/op
Iteration   5: 976.474 ns/op
Iteration   6: 975.307 ns/op
Iteration   7: 973.960 ns/op
Iteration   8: 979.463 ns/op
Iteration   9: 976.748 ns/op
Iteration  10: 975.408 ns/op

# Run progress: 36.28% complete, ETA 00:45:49
# Fork: 2 of 2
# Warmup Iteration   1: 1461.384 ns/op
# Warmup Iteration   2: 1140.133 ns/op
# Warmup Iteration   3: 975.957 ns/op
Iteration   1: 977.376 ns/op
Iteration   2: 973.581 ns/op
Iteration   3: 974.583 ns/op
Iteration   4: 974.086 ns/op
Iteration   5: 976.278 ns/op
Iteration   6: 973.964 ns/op
Iteration   7: 976.888 ns/op
Iteration   8: 977.205 ns/op
Iteration   9: 975.040 ns/op
Iteration  10: 975.174 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  975.864 ±(99.9%) 1.448 ns/op [Average]
  (min, avg, max) = (973.581, 975.864, 979.463), stdev = 1.668
  CI (99.9%): [974.416, 977.312] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 36.33% complete, ETA 00:45:47
# Fork: 1 of 2
# Warmup Iteration   1: 1682.006 ns/op
# Warmup Iteration   2: 1119.707 ns/op
# Warmup Iteration   3: 985.231 ns/op
Iteration   1: 983.041 ns/op
Iteration   2: 986.261 ns/op
Iteration   3: 986.869 ns/op
Iteration   4: 983.684 ns/op
Iteration   5: 985.336 ns/op
Iteration   6: 983.818 ns/op
Iteration   7: 986.895 ns/op
Iteration   8: 989.734 ns/op
Iteration   9: 985.862 ns/op
Iteration  10: 985.942 ns/op

# Run progress: 36.39% complete, ETA 00:45:45
# Fork: 2 of 2
# Warmup Iteration   1: 1432.654 ns/op
# Warmup Iteration   2: 1117.323 ns/op
# Warmup Iteration   3: 985.670 ns/op
Iteration   1: 984.422 ns/op
Iteration   2: 988.315 ns/op
Iteration   3: 986.075 ns/op
Iteration   4: 985.166 ns/op
Iteration   5: 986.763 ns/op
Iteration   6: 983.101 ns/op
Iteration   7: 983.707 ns/op
Iteration   8: 988.027 ns/op
Iteration   9: 983.245 ns/op
Iteration  10: 983.367 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  985.481 ±(99.9%) 1.678 ns/op [Average]
  (min, avg, max) = (983.041, 985.481, 989.734), stdev = 1.933
  CI (99.9%): [983.803, 987.160] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 36.44% complete, ETA 00:45:42
# Fork: 1 of 2
# Warmup Iteration   1: 1861.480 ns/op
# Warmup Iteration   2: 1531.095 ns/op
# Warmup Iteration   3: 1348.359 ns/op
Iteration   1: 1348.028 ns/op
Iteration   2: 1349.067 ns/op
Iteration   3: 1349.701 ns/op
Iteration   4: 1349.849 ns/op
Iteration   5: 1350.081 ns/op
Iteration   6: 1347.283 ns/op
Iteration   7: 1348.408 ns/op
Iteration   8: 1346.512 ns/op
Iteration   9: 1348.609 ns/op
Iteration  10: 1350.076 ns/op

# Run progress: 36.50% complete, ETA 00:45:40
# Fork: 2 of 2
# Warmup Iteration   1: 1756.688 ns/op
# Warmup Iteration   2: 1558.388 ns/op
# Warmup Iteration   3: 1334.565 ns/op
Iteration   1: 1335.436 ns/op
Iteration   2: 1334.950 ns/op
Iteration   3: 1334.602 ns/op
Iteration   4: 1335.049 ns/op
Iteration   5: 1337.418 ns/op
Iteration   6: 1335.740 ns/op
Iteration   7: 1333.496 ns/op
Iteration   8: 1334.573 ns/op
Iteration   9: 1334.686 ns/op
Iteration  10: 1336.288 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1341.993 ±(99.9%) 6.109 ns/op [Average]
  (min, avg, max) = (1333.496, 1341.993, 1350.081), stdev = 7.035
  CI (99.9%): [1335.884, 1348.102] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 36.56% complete, ETA 00:45:38
# Fork: 1 of 2
# Warmup Iteration   1: 470.729 ns/op
# Warmup Iteration   2: 476.070 ns/op
# Warmup Iteration   3: 420.066 ns/op
Iteration   1: 420.059 ns/op
Iteration   2: 420.027 ns/op
Iteration   3: 420.258 ns/op
Iteration   4: 421.018 ns/op
Iteration   5: 421.194 ns/op
Iteration   6: 421.663 ns/op
Iteration   7: 421.299 ns/op
Iteration   8: 418.513 ns/op
Iteration   9: 421.368 ns/op
Iteration  10: 421.435 ns/op

# Run progress: 36.61% complete, ETA 00:45:35
# Fork: 2 of 2
# Warmup Iteration   1: 486.797 ns/op
# Warmup Iteration   2: 490.200 ns/op
# Warmup Iteration   3: 420.401 ns/op
Iteration   1: 420.758 ns/op
Iteration   2: 420.154 ns/op
Iteration   3: 420.491 ns/op
Iteration   4: 421.614 ns/op
Iteration   5: 421.478 ns/op
Iteration   6: 421.384 ns/op
Iteration   7: 421.639 ns/op
Iteration   8: 418.345 ns/op
Iteration   9: 421.564 ns/op
Iteration  10: 421.670 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  420.797 ±(99.9%) 0.860 ns/op [Average]
  (min, avg, max) = (418.345, 420.797, 421.670), stdev = 0.991
  CI (99.9%): [419.936, 421.657] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 36.67% complete, ETA 00:45:33
# Fork: 1 of 2
# Warmup Iteration   1: 38.564 ns/op
# Warmup Iteration   2: 66.856 ns/op
# Warmup Iteration   3: 35.661 ns/op
Iteration   1: 35.681 ns/op
Iteration   2: 35.722 ns/op
Iteration   3: 35.696 ns/op
Iteration   4: 35.695 ns/op
Iteration   5: 35.671 ns/op
Iteration   6: 36.151 ns/op
Iteration   7: 35.706 ns/op
Iteration   8: 34.468 ns/op
Iteration   9: 35.687 ns/op
Iteration  10: 35.615 ns/op

# Run progress: 36.72% complete, ETA 00:45:31
# Fork: 2 of 2
# Warmup Iteration   1: 38.107 ns/op
# Warmup Iteration   2: 64.223 ns/op
# Warmup Iteration   3: 35.658 ns/op
Iteration   1: 35.668 ns/op
Iteration   2: 35.608 ns/op
Iteration   3: 35.689 ns/op
Iteration   4: 35.677 ns/op
Iteration   5: 35.712 ns/op
Iteration   6: 36.174 ns/op
Iteration   7: 35.708 ns/op
Iteration   8: 34.524 ns/op
Iteration   9: 35.684 ns/op
Iteration  10: 35.762 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.615 ±(99.9%) 0.357 ns/op [Average]
  (min, avg, max) = (34.468, 35.615, 36.174), stdev = 0.411
  CI (99.9%): [35.258, 35.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 36.78% complete, ETA 00:45:28
# Fork: 1 of 2
# Warmup Iteration   1: 4336.913 ns/op
# Warmup Iteration   2: 3496.376 ns/op
# Warmup Iteration   3: 3102.872 ns/op
Iteration   1: 3100.299 ns/op
Iteration   2: 3103.541 ns/op
Iteration   3: 3098.596 ns/op
Iteration   4: 3087.877 ns/op
Iteration   5: 3102.682 ns/op
Iteration   6: 3090.171 ns/op
Iteration   7: 3099.945 ns/op
Iteration   8: 3092.899 ns/op
Iteration   9: 3088.051 ns/op
Iteration  10: 3086.157 ns/op

# Run progress: 36.83% complete, ETA 00:45:26
# Fork: 2 of 2
# Warmup Iteration   1: 4593.617 ns/op
# Warmup Iteration   2: 3468.318 ns/op
# Warmup Iteration   3: 3101.666 ns/op
Iteration   1: 3109.193 ns/op
Iteration   2: 3100.803 ns/op
Iteration   3: 3155.382 ns/op
Iteration   4: 3087.247 ns/op
Iteration   5: 3100.998 ns/op
Iteration   6: 3088.720 ns/op
Iteration   7: 3101.104 ns/op
Iteration   8: 3091.345 ns/op
Iteration   9: 3087.870 ns/op
Iteration  10: 3092.113 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3098.250 ±(99.9%) 13.090 ns/op [Average]
  (min, avg, max) = (3086.157, 3098.250, 3155.382), stdev = 15.075
  CI (99.9%): [3085.160, 3111.340] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 36.89% complete, ETA 00:45:23
# Fork: 1 of 2
# Warmup Iteration   1: 14449.103 ns/op
# Warmup Iteration   2: 7357.564 ns/op
# Warmup Iteration   3: 6476.975 ns/op
Iteration   1: 6519.037 ns/op
Iteration   2: 6483.300 ns/op
Iteration   3: 6503.948 ns/op
Iteration   4: 6495.584 ns/op
Iteration   5: 6531.273 ns/op
Iteration   6: 6551.790 ns/op
Iteration   7: 6461.669 ns/op
Iteration   8: 6478.961 ns/op
Iteration   9: 6536.528 ns/op
Iteration  10: 6520.919 ns/op

# Run progress: 36.94% complete, ETA 00:45:21
# Fork: 2 of 2
# Warmup Iteration   1: 17727.033 ns/op
# Warmup Iteration   2: 7247.969 ns/op
# Warmup Iteration   3: 6464.736 ns/op
Iteration   1: 6485.969 ns/op
Iteration   2: 6479.145 ns/op
Iteration   3: 6515.166 ns/op
Iteration   4: 6470.099 ns/op
Iteration   5: 6488.853 ns/op
Iteration   6: 6482.428 ns/op
Iteration   7: 6474.514 ns/op
Iteration   8: 6475.491 ns/op
Iteration   9: 6509.293 ns/op
Iteration  10: 6497.234 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6498.060 ±(99.9%) 21.343 ns/op [Average]
  (min, avg, max) = (6461.669, 6498.060, 6551.790), stdev = 24.579
  CI (99.9%): [6476.717, 6519.403] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 37.00% complete, ETA 00:45:19
# Fork: 1 of 2
# Warmup Iteration   1: 14434.903 ns/op
# Warmup Iteration   2: 7432.909 ns/op
# Warmup Iteration   3: 6451.436 ns/op
Iteration   1: 6474.739 ns/op
Iteration   2: 6467.965 ns/op
Iteration   3: 6475.223 ns/op
Iteration   4: 6468.412 ns/op
Iteration   5: 6488.446 ns/op
Iteration   6: 6470.820 ns/op
Iteration   7: 6457.605 ns/op
Iteration   8: 6465.845 ns/op
Iteration   9: 6478.631 ns/op
Iteration  10: 6439.974 ns/op

# Run progress: 37.06% complete, ETA 00:45:16
# Fork: 2 of 2
# Warmup Iteration   1: 24917.860 ns/op
# Warmup Iteration   2: 7269.977 ns/op
# Warmup Iteration   3: 6779.844 ns/op
Iteration   1: 6478.759 ns/op
Iteration   2: 6488.047 ns/op
Iteration   3: 6515.209 ns/op
Iteration   4: 6509.643 ns/op
Iteration   5: 6498.049 ns/op
Iteration   6: 6504.809 ns/op
Iteration   7: 6524.628 ns/op
Iteration   8: 6493.622 ns/op
Iteration   9: 6502.659 ns/op
Iteration  10: 6520.821 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6486.195 ±(99.9%) 19.424 ns/op [Average]
  (min, avg, max) = (6439.974, 6486.195, 6524.628), stdev = 22.368
  CI (99.9%): [6466.772, 6505.619] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 37.11% complete, ETA 00:45:14
# Fork: 1 of 2
# Warmup Iteration   1: 9083.585 ns/op
# Warmup Iteration   2: 6244.244 ns/op
# Warmup Iteration   3: 5406.073 ns/op
Iteration   1: 5443.886 ns/op
Iteration   2: 5429.509 ns/op
Iteration   3: 5467.532 ns/op
Iteration   4: 5434.580 ns/op
Iteration   5: 5415.394 ns/op
Iteration   6: 5409.725 ns/op
Iteration   7: 5439.490 ns/op
Iteration   8: 5394.294 ns/op
Iteration   9: 5460.191 ns/op
Iteration  10: 5397.011 ns/op

# Run progress: 37.17% complete, ETA 00:45:11
# Fork: 2 of 2
# Warmup Iteration   1: 10008.533 ns/op
# Warmup Iteration   2: 6202.257 ns/op
# Warmup Iteration   3: 5203.742 ns/op
Iteration   1: 5232.835 ns/op
Iteration   2: 5219.367 ns/op
Iteration   3: 5232.446 ns/op
Iteration   4: 5207.755 ns/op
Iteration   5: 5211.526 ns/op
Iteration   6: 5300.180 ns/op
Iteration   7: 5232.946 ns/op
Iteration   8: 5199.451 ns/op
Iteration   9: 5251.700 ns/op
Iteration  10: 5233.321 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5330.657 ±(99.9%) 90.622 ns/op [Average]
  (min, avg, max) = (5199.451, 5330.657, 5467.532), stdev = 104.361
  CI (99.9%): [5240.035, 5421.279] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 37.22% complete, ETA 00:45:09
# Fork: 1 of 2
# Warmup Iteration   1: 4795.115 ns/op
# Warmup Iteration   2: 3697.672 ns/op
# Warmup Iteration   3: 3225.834 ns/op
Iteration   1: 3217.929 ns/op
Iteration   2: 3219.269 ns/op
Iteration   3: 3221.197 ns/op
Iteration   4: 3219.700 ns/op
Iteration   5: 3219.742 ns/op
Iteration   6: 3223.677 ns/op
Iteration   7: 3224.688 ns/op
Iteration   8: 3224.793 ns/op
Iteration   9: 3222.784 ns/op
Iteration  10: 3219.419 ns/op

# Run progress: 37.28% complete, ETA 00:45:07
# Fork: 2 of 2
# Warmup Iteration   1: 4969.787 ns/op
# Warmup Iteration   2: 3588.591 ns/op
# Warmup Iteration   3: 3217.841 ns/op
Iteration   1: 3223.270 ns/op
Iteration   2: 3217.654 ns/op
Iteration   3: 3220.779 ns/op
Iteration   4: 3218.485 ns/op
Iteration   5: 3223.264 ns/op
Iteration   6: 3218.326 ns/op
Iteration   7: 3224.636 ns/op
Iteration   8: 3220.500 ns/op
Iteration   9: 3222.187 ns/op
Iteration  10: 3223.377 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3221.284 ±(99.9%) 2.094 ns/op [Average]
  (min, avg, max) = (3217.654, 3221.284, 3224.793), stdev = 2.412
  CI (99.9%): [3219.190, 3223.378] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 37.33% complete, ETA 00:45:04
# Fork: 1 of 2
# Warmup Iteration   1: 38.512 ns/op
# Warmup Iteration   2: 66.866 ns/op
# Warmup Iteration   3: 35.678 ns/op
Iteration   1: 35.674 ns/op
Iteration   2: 35.747 ns/op
Iteration   3: 35.715 ns/op
Iteration   4: 35.704 ns/op
Iteration   5: 35.723 ns/op
Iteration   6: 36.119 ns/op
Iteration   7: 35.671 ns/op
Iteration   8: 34.519 ns/op
Iteration   9: 35.714 ns/op
Iteration  10: 35.711 ns/op

# Run progress: 37.39% complete, ETA 00:45:02
# Fork: 2 of 2
# Warmup Iteration   1: 37.729 ns/op
# Warmup Iteration   2: 65.359 ns/op
# Warmup Iteration   3: 35.644 ns/op
Iteration   1: 35.664 ns/op
Iteration   2: 35.702 ns/op
Iteration   3: 35.673 ns/op
Iteration   4: 35.665 ns/op
Iteration   5: 35.667 ns/op
Iteration   6: 36.165 ns/op
Iteration   7: 35.738 ns/op
Iteration   8: 34.513 ns/op
Iteration   9: 35.693 ns/op
Iteration  10: 35.662 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.622 ±(99.9%) 0.350 ns/op [Average]
  (min, avg, max) = (34.513, 35.622, 36.165), stdev = 0.403
  CI (99.9%): [35.272, 35.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 37.44% complete, ETA 00:44:59
# Fork: 1 of 2
# Warmup Iteration   1: 4095.764 ns/op
# Warmup Iteration   2: 3139.496 ns/op
# Warmup Iteration   3: 2701.980 ns/op
Iteration   1: 2690.299 ns/op
Iteration   2: 2762.896 ns/op
Iteration   3: 2758.856 ns/op
Iteration   4: 2781.604 ns/op
Iteration   5: 2774.679 ns/op
Iteration   6: 2746.510 ns/op
Iteration   7: 2751.322 ns/op
Iteration   8: 2732.151 ns/op
Iteration   9: 2755.404 ns/op
Iteration  10: 2808.281 ns/op

# Run progress: 37.50% complete, ETA 00:44:57
# Fork: 2 of 2
# Warmup Iteration   1: 4105.933 ns/op
# Warmup Iteration   2: 3189.442 ns/op
# Warmup Iteration   3: 2724.198 ns/op
Iteration   1: 2743.696 ns/op
Iteration   2: 2761.495 ns/op
Iteration   3: 2728.113 ns/op
Iteration   4: 2769.292 ns/op
Iteration   5: 2745.053 ns/op
Iteration   6: 2810.615 ns/op
Iteration   7: 2763.359 ns/op
Iteration   8: 2720.350 ns/op
Iteration   9: 2754.142 ns/op
Iteration  10: 2755.407 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2755.676 ±(99.9%) 23.870 ns/op [Average]
  (min, avg, max) = (2690.299, 2755.676, 2810.615), stdev = 27.488
  CI (99.9%): [2731.806, 2779.546] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 37.56% complete, ETA 00:44:55
# Fork: 1 of 2
# Warmup Iteration   1: 3453.556 ns/op
# Warmup Iteration   2: 2072.886 ns/op
# Warmup Iteration   3: 1819.554 ns/op
Iteration   1: 1829.882 ns/op
Iteration   2: 1835.936 ns/op
Iteration   3: 1820.239 ns/op
Iteration   4: 1816.461 ns/op
Iteration   5: 1836.008 ns/op
Iteration   6: 1829.907 ns/op
Iteration   7: 1829.315 ns/op
Iteration   8: 1835.253 ns/op
Iteration   9: 1845.668 ns/op
Iteration  10: 1845.814 ns/op

# Run progress: 37.61% complete, ETA 00:44:52
# Fork: 2 of 2
# Warmup Iteration   1: 3733.117 ns/op
# Warmup Iteration   2: 2187.293 ns/op
# Warmup Iteration   3: 1815.989 ns/op
Iteration   1: 1815.058 ns/op
Iteration   2: 1813.759 ns/op
Iteration   3: 1814.681 ns/op
Iteration   4: 1813.661 ns/op
Iteration   5: 1817.303 ns/op
Iteration   6: 1817.047 ns/op
Iteration   7: 1814.385 ns/op
Iteration   8: 1835.285 ns/op
Iteration   9: 1813.981 ns/op
Iteration  10: 1826.334 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1825.299 ±(99.9%) 9.535 ns/op [Average]
  (min, avg, max) = (1813.661, 1825.299, 1845.814), stdev = 10.981
  CI (99.9%): [1815.764, 1834.834] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 37.67% complete, ETA 00:44:50
# Fork: 1 of 2
# Warmup Iteration   1: 3486.385 ns/op
# Warmup Iteration   2: 2053.914 ns/op
# Warmup Iteration   3: 1821.794 ns/op
Iteration   1: 1807.191 ns/op
Iteration   2: 1810.916 ns/op
Iteration   3: 1822.409 ns/op
Iteration   4: 1821.632 ns/op
Iteration   5: 1801.678 ns/op
Iteration   6: 1810.116 ns/op
Iteration   7: 1808.923 ns/op
Iteration   8: 1823.979 ns/op
Iteration   9: 1819.099 ns/op
Iteration  10: 1805.779 ns/op

# Run progress: 37.72% complete, ETA 00:44:47
# Fork: 2 of 2
# Warmup Iteration   1: 3799.125 ns/op
# Warmup Iteration   2: 2139.254 ns/op
# Warmup Iteration   3: 1840.169 ns/op
Iteration   1: 1829.026 ns/op
Iteration   2: 1836.124 ns/op
Iteration   3: 1830.874 ns/op
Iteration   4: 1857.110 ns/op
Iteration   5: 1848.243 ns/op
Iteration   6: 1853.823 ns/op
Iteration   7: 1852.385 ns/op
Iteration   8: 1841.636 ns/op
Iteration   9: 1838.158 ns/op
Iteration  10: 1851.126 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1828.511 ±(99.9%) 15.655 ns/op [Average]
  (min, avg, max) = (1801.678, 1828.511, 1857.110), stdev = 18.028
  CI (99.9%): [1812.857, 1844.166] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 37.78% complete, ETA 00:44:45
# Fork: 1 of 2
# Warmup Iteration   1: 2893.716 ns/op
# Warmup Iteration   2: 2015.812 ns/op
# Warmup Iteration   3: 1791.529 ns/op
Iteration   1: 1778.750 ns/op
Iteration   2: 1778.804 ns/op
Iteration   3: 1789.606 ns/op
Iteration   4: 1779.459 ns/op
Iteration   5: 1783.397 ns/op
Iteration   6: 1806.564 ns/op
Iteration   7: 1786.086 ns/op
Iteration   8: 1779.630 ns/op
Iteration   9: 1783.568 ns/op
Iteration  10: 1786.096 ns/op

# Run progress: 37.83% complete, ETA 00:44:43
# Fork: 2 of 2
# Warmup Iteration   1: 2794.576 ns/op
# Warmup Iteration   2: 2035.076 ns/op
# Warmup Iteration   3: 1784.002 ns/op
Iteration   1: 1792.756 ns/op
Iteration   2: 1782.741 ns/op
Iteration   3: 1799.439 ns/op
Iteration   4: 1784.099 ns/op
Iteration   5: 1798.067 ns/op
Iteration   6: 1785.554 ns/op
Iteration   7: 1787.418 ns/op
Iteration   8: 1784.750 ns/op
Iteration   9: 1786.522 ns/op
Iteration  10: 1786.289 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1786.980 ±(99.9%) 6.323 ns/op [Average]
  (min, avg, max) = (1778.750, 1786.980, 1806.564), stdev = 7.281
  CI (99.9%): [1780.657, 1793.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 37.89% complete, ETA 00:44:40
# Fork: 1 of 2
# Warmup Iteration   1: 12520.291 ns/op
# Warmup Iteration   2: 9267.518 ns/op
# Warmup Iteration   3: 7922.291 ns/op
Iteration   1: 7916.494 ns/op
Iteration   2: 7914.362 ns/op
Iteration   3: 7921.866 ns/op
Iteration   4: 7909.218 ns/op
Iteration   5: 7919.074 ns/op
Iteration   6: 7918.475 ns/op
Iteration   7: 7920.607 ns/op
Iteration   8: 7891.089 ns/op
Iteration   9: 7926.341 ns/op
Iteration  10: 7923.536 ns/op

# Run progress: 37.94% complete, ETA 00:44:38
# Fork: 2 of 2
# Warmup Iteration   1: 13682.673 ns/op
# Warmup Iteration   2: 9339.738 ns/op
# Warmup Iteration   3: 7968.081 ns/op
Iteration   1: 7959.577 ns/op
Iteration   2: 7951.532 ns/op
Iteration   3: 7971.365 ns/op
Iteration   4: 7943.689 ns/op
Iteration   5: 7964.225 ns/op
Iteration   6: 7950.435 ns/op
Iteration   7: 7962.414 ns/op
Iteration   8: 7940.597 ns/op
Iteration   9: 7966.748 ns/op
Iteration  10: 7961.443 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7936.654 ±(99.9%) 20.195 ns/op [Average]
  (min, avg, max) = (7891.089, 7936.654, 7971.365), stdev = 23.257
  CI (99.9%): [7916.459, 7956.850] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 38.00% complete, ETA 00:44:35
# Fork: 1 of 2
# Warmup Iteration   1: 38.784 ns/op
# Warmup Iteration   2: 66.814 ns/op
# Warmup Iteration   3: 35.705 ns/op
Iteration   1: 35.756 ns/op
Iteration   2: 35.605 ns/op
Iteration   3: 35.664 ns/op
Iteration   4: 35.682 ns/op
Iteration   5: 35.723 ns/op
Iteration   6: 36.096 ns/op
Iteration   7: 35.704 ns/op
Iteration   8: 34.473 ns/op
Iteration   9: 35.680 ns/op
Iteration  10: 35.679 ns/op

# Run progress: 38.06% complete, ETA 00:44:33
# Fork: 2 of 2
# Warmup Iteration   1: 38.635 ns/op
# Warmup Iteration   2: 65.477 ns/op
# Warmup Iteration   3: 35.633 ns/op
Iteration   1: 35.657 ns/op
Iteration   2: 35.655 ns/op
Iteration   3: 35.681 ns/op
Iteration   4: 35.675 ns/op
Iteration   5: 35.710 ns/op
Iteration   6: 36.138 ns/op
Iteration   7: 35.671 ns/op
Iteration   8: 34.524 ns/op
Iteration   9: 35.649 ns/op
Iteration  10: 35.667 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.604 ±(99.9%) 0.350 ns/op [Average]
  (min, avg, max) = (34.473, 35.604, 36.138), stdev = 0.403
  CI (99.9%): [35.255, 35.954] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 38.11% complete, ETA 00:44:31
# Fork: 1 of 2
# Warmup Iteration   1: 5226.584 ns/op
# Warmup Iteration   2: 3442.798 ns/op
# Warmup Iteration   3: 3401.682 ns/op
Iteration   1: 3710.732 ns/op
Iteration   2: 4192.598 ns/op
Iteration   3: 3555.887 ns/op
Iteration   4: 4702.811 ns/op
Iteration   5: 3547.550 ns/op
Iteration   6: 2609.352 ns/op
Iteration   7: 2678.820 ns/op
Iteration   8: 3164.156 ns/op
Iteration   9: 2696.762 ns/op
Iteration  10: 3019.570 ns/op

# Run progress: 38.17% complete, ETA 00:44:28
# Fork: 2 of 2
# Warmup Iteration   1: 3671.201 ns/op
# Warmup Iteration   2: 3633.121 ns/op
# Warmup Iteration   3: 3360.604 ns/op
Iteration   1: 3373.376 ns/op
Iteration   2: 4117.730 ns/op
Iteration   3: 3528.477 ns/op
Iteration   4: 4567.065 ns/op
Iteration   5: 3657.745 ns/op
Iteration   6: 2456.428 ns/op
Iteration   7: 2656.136 ns/op
Iteration   8: 3281.108 ns/op
Iteration   9: 2677.571 ns/op
Iteration  10: 3018.794 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3360.633 ±(99.9%) 576.110 ns/op [Average]
  (min, avg, max) = (2456.428, 3360.633, 4702.811), stdev = 663.449
  CI (99.9%): [2784.524, 3936.743] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 38.22% complete, ETA 00:44:26
# Fork: 1 of 2
# Warmup Iteration   1: 3785.694 ns/op
# Warmup Iteration   2: 2391.817 ns/op
# Warmup Iteration   3: 2936.919 ns/op
Iteration   1: 2987.416 ns/op
Iteration   2: 1724.560 ns/op
Iteration   3: 3236.694 ns/op
Iteration   4: 2172.274 ns/op
Iteration   5: 1764.652 ns/op
Iteration   6: 1631.628 ns/op
Iteration   7: 1807.109 ns/op
Iteration   8: 2038.612 ns/op
Iteration   9: 1630.801 ns/op
Iteration  10: 2210.419 ns/op

# Run progress: 38.28% complete, ETA 00:44:23
# Fork: 2 of 2
# Warmup Iteration   1: 3474.456 ns/op
# Warmup Iteration   2: 2563.155 ns/op
# Warmup Iteration   3: 2800.854 ns/op
Iteration   1: 3826.670 ns/op
Iteration   2: 1857.812 ns/op
Iteration   3: 3231.660 ns/op
Iteration   4: 2070.890 ns/op
Iteration   5: 1741.614 ns/op
Iteration   6: 1475.609 ns/op
Iteration   7: 1766.096 ns/op
Iteration   8: 1815.008 ns/op
Iteration   9: 1516.845 ns/op
Iteration  10: 2027.287 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2126.683 ±(99.9%) 571.963 ns/op [Average]
  (min, avg, max) = (1475.609, 2126.683, 3826.670), stdev = 658.674
  CI (99.9%): [1554.720, 2698.646] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 38.33% complete, ETA 00:44:21
# Fork: 1 of 2
# Warmup Iteration   1: 3413.605 ns/op
# Warmup Iteration   2: 2813.016 ns/op
# Warmup Iteration   3: 1936.016 ns/op
Iteration   1: 3023.944 ns/op
Iteration   2: 2007.756 ns/op
Iteration   3: 3224.101 ns/op
Iteration   4: 2164.153 ns/op
Iteration   5: 1809.237 ns/op
Iteration   6: 1605.827 ns/op
Iteration   7: 1901.745 ns/op
Iteration   8: 2043.350 ns/op
Iteration   9: 1643.834 ns/op
Iteration  10: 1869.354 ns/op

# Run progress: 38.39% complete, ETA 00:44:19
# Fork: 2 of 2
# Warmup Iteration   1: 3460.108 ns/op
# Warmup Iteration   2: 2571.902 ns/op
# Warmup Iteration   3: 2191.920 ns/op
Iteration   1: 3452.172 ns/op
Iteration   2: 2109.062 ns/op
Iteration   3: 2872.205 ns/op
Iteration   4: 2189.022 ns/op
Iteration   5: 1805.460 ns/op
Iteration   6: 1597.331 ns/op
Iteration   7: 1875.498 ns/op
Iteration   8: 2056.820 ns/op
Iteration   9: 1651.292 ns/op
Iteration  10: 1855.087 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2137.863 ±(99.9%) 480.577 ns/op [Average]
  (min, avg, max) = (1597.331, 2137.863, 3452.172), stdev = 553.433
  CI (99.9%): [1657.286, 2618.439] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 38.44% complete, ETA 00:44:16
# Fork: 1 of 2
# Warmup Iteration   1: 2915.666 ns/op
# Warmup Iteration   2: 5354.062 ns/op
# Warmup Iteration   3: 2369.409 ns/op
Iteration   1: 2848.438 ns/op
Iteration   2: 2058.067 ns/op
Iteration   3: 3002.806 ns/op
Iteration   4: 2265.213 ns/op
Iteration   5: 2010.384 ns/op
Iteration   6: 3657.168 ns/op
Iteration   7: 1816.172 ns/op
Iteration   8: 2017.762 ns/op
Iteration   9: 1852.798 ns/op
Iteration  10: 2070.201 ns/op

# Run progress: 38.50% complete, ETA 00:44:14
# Fork: 2 of 2
# Warmup Iteration   1: 3107.713 ns/op
# Warmup Iteration   2: 4770.421 ns/op
# Warmup Iteration   3: 2286.116 ns/op
Iteration   1: 3039.692 ns/op
Iteration   2: 2016.215 ns/op
Iteration   3: 2747.975 ns/op
Iteration   4: 2179.385 ns/op
Iteration   5: 1858.037 ns/op
Iteration   6: 1842.732 ns/op
Iteration   7: 1803.967 ns/op
Iteration   8: 1836.280 ns/op
Iteration   9: 1807.797 ns/op
Iteration  10: 1857.792 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2229.444 ±(99.9%) 462.652 ns/op [Average]
  (min, avg, max) = (1803.967, 2229.444, 3657.168), stdev = 532.791
  CI (99.9%): [1766.792, 2692.096] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 38.56% complete, ETA 00:44:11
# Fork: 1 of 2
# Warmup Iteration   1: 13277.394 ns/op
# Warmup Iteration   2: 9908.354 ns/op
# Warmup Iteration   3: 7923.328 ns/op
Iteration   1: 7909.204 ns/op
Iteration   2: 7899.731 ns/op
Iteration   3: 7881.277 ns/op
Iteration   4: 7890.689 ns/op
Iteration   5: 7924.576 ns/op
Iteration   6: 7908.400 ns/op
Iteration   7: 7893.746 ns/op
Iteration   8: 7879.091 ns/op
Iteration   9: 7893.036 ns/op
Iteration  10: 7923.270 ns/op

# Run progress: 38.61% complete, ETA 00:44:09
# Fork: 2 of 2
# Warmup Iteration   1: 13294.907 ns/op
# Warmup Iteration   2: 10857.286 ns/op
# Warmup Iteration   3: 7937.013 ns/op
Iteration   1: 7956.137 ns/op
Iteration   2: 7948.965 ns/op
Iteration   3: 7959.634 ns/op
Iteration   4: 7902.233 ns/op
Iteration   5: 7929.286 ns/op
Iteration   6: 7939.488 ns/op
Iteration   7: 7967.859 ns/op
Iteration   8: 7947.919 ns/op
Iteration   9: 7964.180 ns/op
Iteration  10: 7943.005 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7923.086 ±(99.9%) 25.199 ns/op [Average]
  (min, avg, max) = (7879.091, 7923.086, 7967.859), stdev = 29.019
  CI (99.9%): [7897.887, 7948.285] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 38.67% complete, ETA 00:44:07
# Fork: 1 of 2
# Warmup Iteration   1: 38.458 ns/op
# Warmup Iteration   2: 65.503 ns/op
# Warmup Iteration   3: 35.695 ns/op
Iteration   1: 35.748 ns/op
Iteration   2: 35.694 ns/op
Iteration   3: 35.733 ns/op
Iteration   4: 35.686 ns/op
Iteration   5: 35.613 ns/op
Iteration   6: 36.196 ns/op
Iteration   7: 35.692 ns/op
Iteration   8: 34.569 ns/op
Iteration   9: 35.740 ns/op
Iteration  10: 35.750 ns/op

# Run progress: 38.72% complete, ETA 00:44:04
# Fork: 2 of 2
# Warmup Iteration   1: 38.366 ns/op
# Warmup Iteration   2: 66.376 ns/op
# Warmup Iteration   3: 35.682 ns/op
Iteration   1: 35.696 ns/op
Iteration   2: 35.641 ns/op
Iteration   3: 35.685 ns/op
Iteration   4: 35.697 ns/op
Iteration   5: 35.673 ns/op
Iteration   6: 36.139 ns/op
Iteration   7: 35.741 ns/op
Iteration   8: 34.557 ns/op
Iteration   9: 35.680 ns/op
Iteration  10: 35.673 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.630 ±(99.9%) 0.342 ns/op [Average]
  (min, avg, max) = (34.557, 35.630, 36.196), stdev = 0.394
  CI (99.9%): [35.288, 35.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 38.78% complete, ETA 00:44:02
# Fork: 1 of 2
# Warmup Iteration   1: 3076.920 ns/op
# Warmup Iteration   2: 2759.354 ns/op
# Warmup Iteration   3: 2403.216 ns/op
Iteration   1: 2401.399 ns/op
Iteration   2: 2399.891 ns/op
Iteration   3: 2397.564 ns/op
Iteration   4: 2395.680 ns/op
Iteration   5: 2406.136 ns/op
Iteration   6: 2397.158 ns/op
Iteration   7: 2395.272 ns/op
Iteration   8: 2389.736 ns/op
Iteration   9: 2405.525 ns/op
Iteration  10: 2398.560 ns/op

# Run progress: 38.83% complete, ETA 00:43:59
# Fork: 2 of 2
# Warmup Iteration   1: 2979.246 ns/op
# Warmup Iteration   2: 2688.737 ns/op
# Warmup Iteration   3: 2377.698 ns/op
Iteration   1: 2395.498 ns/op
Iteration   2: 2372.624 ns/op
Iteration   3: 2364.059 ns/op
Iteration   4: 2388.318 ns/op
Iteration   5: 2372.065 ns/op
Iteration   6: 2367.047 ns/op
Iteration   7: 2376.363 ns/op
Iteration   8: 2418.120 ns/op
Iteration   9: 2372.706 ns/op
Iteration  10: 2379.611 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2389.667 ±(99.9%) 12.924 ns/op [Average]
  (min, avg, max) = (2364.059, 2389.667, 2418.120), stdev = 14.884
  CI (99.9%): [2376.742, 2402.591] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 38.89% complete, ETA 00:43:57
# Fork: 1 of 2
# Warmup Iteration   1: 1902.415 ns/op
# Warmup Iteration   2: 1705.502 ns/op
# Warmup Iteration   3: 1480.502 ns/op
Iteration   1: 1480.901 ns/op
Iteration   2: 1479.724 ns/op
Iteration   3: 1490.227 ns/op
Iteration   4: 1489.082 ns/op
Iteration   5: 1477.563 ns/op
Iteration   6: 1499.837 ns/op
Iteration   7: 1482.573 ns/op
Iteration   8: 1478.426 ns/op
Iteration   9: 1473.991 ns/op
Iteration  10: 1473.958 ns/op

# Run progress: 38.94% complete, ETA 00:43:55
# Fork: 2 of 2
# Warmup Iteration   1: 1942.446 ns/op
# Warmup Iteration   2: 1669.476 ns/op
# Warmup Iteration   3: 1467.617 ns/op
Iteration   1: 1499.010 ns/op
Iteration   2: 1471.487 ns/op
Iteration   3: 1483.028 ns/op
Iteration   4: 1500.662 ns/op
Iteration   5: 1473.360 ns/op
Iteration   6: 1466.379 ns/op
Iteration   7: 1501.700 ns/op
Iteration   8: 1496.104 ns/op
Iteration   9: 1483.939 ns/op
Iteration  10: 1489.415 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1484.568 ±(99.9%) 9.314 ns/op [Average]
  (min, avg, max) = (1466.379, 1484.568, 1501.700), stdev = 10.726
  CI (99.9%): [1475.255, 1493.882] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 39.00% complete, ETA 00:43:52
# Fork: 1 of 2
# Warmup Iteration   1: 2025.216 ns/op
# Warmup Iteration   2: 1765.951 ns/op
# Warmup Iteration   3: 1566.352 ns/op
Iteration   1: 1562.197 ns/op
Iteration   2: 1565.226 ns/op
Iteration   3: 1570.160 ns/op
Iteration   4: 1574.131 ns/op
Iteration   5: 1569.896 ns/op
Iteration   6: 1564.942 ns/op
Iteration   7: 1572.128 ns/op
Iteration   8: 1568.085 ns/op
Iteration   9: 1567.911 ns/op
Iteration  10: 1565.636 ns/op

# Run progress: 39.06% complete, ETA 00:43:50
# Fork: 2 of 2
# Warmup Iteration   1: 1921.560 ns/op
# Warmup Iteration   2: 1663.937 ns/op
# Warmup Iteration   3: 1493.200 ns/op
Iteration   1: 1481.879 ns/op
Iteration   2: 1486.247 ns/op
Iteration   3: 1494.093 ns/op
Iteration   4: 1473.778 ns/op
Iteration   5: 1479.701 ns/op
Iteration   6: 1466.851 ns/op
Iteration   7: 1493.145 ns/op
Iteration   8: 1477.914 ns/op
Iteration   9: 1462.041 ns/op
Iteration  10: 1484.859 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1524.041 ±(99.9%) 39.742 ns/op [Average]
  (min, avg, max) = (1462.041, 1524.041, 1574.131), stdev = 45.767
  CI (99.9%): [1484.299, 1563.783] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 39.11% complete, ETA 00:43:47
# Fork: 1 of 2
# Warmup Iteration   1: 2314.430 ns/op
# Warmup Iteration   2: 1855.218 ns/op
# Warmup Iteration   3: 1634.544 ns/op
Iteration   1: 1634.982 ns/op
Iteration   2: 1635.138 ns/op
Iteration   3: 1635.153 ns/op
Iteration   4: 1634.847 ns/op
Iteration   5: 1634.249 ns/op
Iteration   6: 1648.979 ns/op
Iteration   7: 1653.393 ns/op
Iteration   8: 1638.489 ns/op
Iteration   9: 1635.014 ns/op
Iteration  10: 1638.125 ns/op

# Run progress: 39.17% complete, ETA 00:43:45
# Fork: 2 of 2
# Warmup Iteration   1: 2332.111 ns/op
# Warmup Iteration   2: 1881.807 ns/op
# Warmup Iteration   3: 1653.634 ns/op
Iteration   1: 1641.175 ns/op
Iteration   2: 1635.379 ns/op
Iteration   3: 1650.532 ns/op
Iteration   4: 1650.857 ns/op
Iteration   5: 1640.295 ns/op
Iteration   6: 1637.761 ns/op
Iteration   7: 1635.329 ns/op
Iteration   8: 1667.160 ns/op
Iteration   9: 1637.072 ns/op
Iteration  10: 1636.151 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1641.004 ±(99.9%) 7.565 ns/op [Average]
  (min, avg, max) = (1634.249, 1641.004, 1667.160), stdev = 8.711
  CI (99.9%): [1633.439, 1648.569] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 39.22% complete, ETA 00:43:43
# Fork: 1 of 2
# Warmup Iteration   1: 14531.813 ns/op
# Warmup Iteration   2: 9372.942 ns/op
# Warmup Iteration   3: 7900.539 ns/op
Iteration   1: 7878.148 ns/op
Iteration   2: 7897.546 ns/op
Iteration   3: 7898.723 ns/op
Iteration   4: 7888.076 ns/op
Iteration   5: 7900.854 ns/op
Iteration   6: 7872.603 ns/op
Iteration   7: 7901.958 ns/op
Iteration   8: 7898.383 ns/op
Iteration   9: 7914.248 ns/op
Iteration  10: 7910.999 ns/op

# Run progress: 39.28% complete, ETA 00:43:40
# Fork: 2 of 2
# Warmup Iteration   1: 12987.800 ns/op
# Warmup Iteration   2: 8942.250 ns/op
# Warmup Iteration   3: 7916.112 ns/op
Iteration   1: 7902.704 ns/op
Iteration   2: 7902.409 ns/op
Iteration   3: 7910.059 ns/op
Iteration   4: 7893.621 ns/op
Iteration   5: 7923.544 ns/op
Iteration   6: 7888.620 ns/op
Iteration   7: 7919.499 ns/op
Iteration   8: 7897.218 ns/op
Iteration   9: 7925.976 ns/op
Iteration  10: 7907.753 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7901.647 ±(99.9%) 11.980 ns/op [Average]
  (min, avg, max) = (7872.603, 7901.647, 7925.976), stdev = 13.796
  CI (99.9%): [7889.667, 7913.627] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 39.33% complete, ETA 00:43:38
# Fork: 1 of 2
# Warmup Iteration   1: 38.297 ns/op
# Warmup Iteration   2: 66.905 ns/op
# Warmup Iteration   3: 35.675 ns/op
Iteration   1: 35.640 ns/op
Iteration   2: 35.677 ns/op
Iteration   3: 35.730 ns/op
Iteration   4: 35.629 ns/op
Iteration   5: 35.647 ns/op
Iteration   6: 36.171 ns/op
Iteration   7: 35.631 ns/op
Iteration   8: 34.502 ns/op
Iteration   9: 35.615 ns/op
Iteration  10: 35.606 ns/op

# Run progress: 39.39% complete, ETA 00:43:35
# Fork: 2 of 2
# Warmup Iteration   1: 51.634 ns/op
# Warmup Iteration   2: 66.667 ns/op
# Warmup Iteration   3: 35.635 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.618 ns/op
Iteration   3: 35.686 ns/op
Iteration   4: 35.638 ns/op
Iteration   5: 35.681 ns/op
Iteration   6: 36.191 ns/op
Iteration   7: 35.686 ns/op
Iteration   8: 34.516 ns/op
Iteration   9: 35.663 ns/op
Iteration  10: 35.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.590 ±(99.9%) 0.352 ns/op [Average]
  (min, avg, max) = (34.502, 35.590, 36.191), stdev = 0.405
  CI (99.9%): [35.238, 35.942] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 39.44% complete, ETA 00:43:33
# Fork: 1 of 2
# Warmup Iteration   1: 12749.369 ns/op
# Warmup Iteration   2: 9643.088 ns/op
# Warmup Iteration   3: 6725.127 ns/op
Iteration   1: 4394.474 ns/op
Iteration   2: 4384.379 ns/op
Iteration   3: 4474.343 ns/op
Iteration   4: 17463.053 ns/op
Iteration   5: 4522.686 ns/op
Iteration   6: 4484.567 ns/op
Iteration   7: 4736.486 ns/op
Iteration   8: 4529.070 ns/op
Iteration   9: 4647.994 ns/op
Iteration  10: 4529.753 ns/op

# Run progress: 39.50% complete, ETA 00:43:31
# Fork: 2 of 2
# Warmup Iteration   1: 7874.103 ns/op
# Warmup Iteration   2: 10238.577 ns/op
# Warmup Iteration   3: 6750.915 ns/op
Iteration   1: 4487.796 ns/op
Iteration   2: 4468.158 ns/op
Iteration   3: 4622.016 ns/op
Iteration   4: 13240.625 ns/op
Iteration   5: 4504.676 ns/op
Iteration   6: 4450.386 ns/op
Iteration   7: 4732.819 ns/op
Iteration   8: 4490.687 ns/op
Iteration   9: 4585.379 ns/op
Iteration  10: 4520.190 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5613.477 ±(99.9%) 2953.678 ns/op [Average]
  (min, avg, max) = (4384.379, 5613.477, 17463.053), stdev = 3401.460
  CI (99.9%): [2659.799, 8567.155] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 39.56% complete, ETA 00:43:28
# Fork: 1 of 2
# Warmup Iteration   1: 13112.520 ns/op
# Warmup Iteration   2: 6335.282 ns/op
# Warmup Iteration   3: 5502.069 ns/op
Iteration   1: 5595.972 ns/op
Iteration   2: 9363.679 ns/op
Iteration   3: 5636.018 ns/op
Iteration   4: 5384.447 ns/op
Iteration   5: 4986.284 ns/op
Iteration   6: 4184.133 ns/op
Iteration   7: 5228.834 ns/op
Iteration   8: 4994.228 ns/op
Iteration   9: 5375.573 ns/op
Iteration  10: 5365.154 ns/op

# Run progress: 39.61% complete, ETA 00:43:26
# Fork: 2 of 2
# Warmup Iteration   1: 11838.989 ns/op
# Warmup Iteration   2: 6260.301 ns/op
# Warmup Iteration   3: 5529.426 ns/op
Iteration   1: 5588.474 ns/op
Iteration   2: 9039.643 ns/op
Iteration   3: 5695.575 ns/op
Iteration   4: 5370.527 ns/op
Iteration   5: 4996.742 ns/op
Iteration   6: 4175.245 ns/op
Iteration   7: 5226.771 ns/op
Iteration   8: 5041.662 ns/op
Iteration   9: 5405.533 ns/op
Iteration  10: 5313.389 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5598.394 ±(99.9%) 1128.028 ns/op [Average]
  (min, avg, max) = (4175.245, 5598.394, 9363.679), stdev = 1299.038
  CI (99.9%): [4470.367, 6726.422] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 39.67% complete, ETA 00:43:23
# Fork: 1 of 2
# Warmup Iteration   1: 16666.713 ns/op
# Warmup Iteration   2: 12148.314 ns/op
# Warmup Iteration   3: 4647.685 ns/op
Iteration   1: 4702.439 ns/op
Iteration   2: 4341.049 ns/op
Iteration   3: 4696.950 ns/op
Iteration   4: 4582.950 ns/op
Iteration   5: 4250.593 ns/op
Iteration   6: 3863.622 ns/op
Iteration   7: 4651.128 ns/op
Iteration   8: 4344.738 ns/op
Iteration   9: 4591.081 ns/op
Iteration  10: 4621.135 ns/op

# Run progress: 39.72% complete, ETA 00:43:21
# Fork: 2 of 2
# Warmup Iteration   1: 15326.596 ns/op
# Warmup Iteration   2: 10076.189 ns/op
# Warmup Iteration   3: 4523.293 ns/op
Iteration   1: 4655.689 ns/op
Iteration   2: 4295.346 ns/op
Iteration   3: 4615.999 ns/op
Iteration   4: 4495.226 ns/op
Iteration   5: 4181.347 ns/op
Iteration   6: 3806.069 ns/op
Iteration   7: 4581.577 ns/op
Iteration   8: 4252.884 ns/op
Iteration   9: 4608.802 ns/op
Iteration  10: 4532.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4433.560 ±(99.9%) 227.491 ns/op [Average]
  (min, avg, max) = (3806.069, 4433.560, 4702.439), stdev = 261.979
  CI (99.9%): [4206.069, 4661.052] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 39.78% complete, ETA 00:43:19
# Fork: 1 of 2
# Warmup Iteration   1: 7819.588 ns/op
# Warmup Iteration   2: 5671.753 ns/op
# Warmup Iteration   3: 5050.220 ns/op
Iteration   1: 11474.610 ns/op
Iteration   2: 34231.048 ns/op
Iteration   3: 4892.905 ns/op
Iteration   4: 4607.922 ns/op
Iteration   5: 4245.310 ns/op
Iteration   6: 4011.848 ns/op
Iteration   7: 4437.459 ns/op
Iteration   8: 4250.100 ns/op
Iteration   9: 4500.003 ns/op
Iteration  10: 4774.910 ns/op

# Run progress: 39.83% complete, ETA 00:43:16
# Fork: 2 of 2
# Warmup Iteration   1: 7608.059 ns/op
# Warmup Iteration   2: 5376.964 ns/op
# Warmup Iteration   3: 5032.540 ns/op
Iteration   1: 28947.463 ns/op
Iteration   2: 7394.153 ns/op
Iteration   3: 4728.905 ns/op
Iteration   4: 4688.641 ns/op
Iteration   5: 4297.141 ns/op
Iteration   6: 4044.840 ns/op
Iteration   7: 4459.809 ns/op
Iteration   8: 4347.134 ns/op
Iteration   9: 4625.958 ns/op
Iteration  10: 4868.928 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7691.454 ±(99.9%) 7281.697 ns/op [Average]
  (min, avg, max) = (4011.848, 7691.454, 34231.048), stdev = 8385.613
  CI (99.9%): [409.757, 14973.152] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 39.89% complete, ETA 00:43:14
# Fork: 1 of 2
# Warmup Iteration   1: 15519.302 ns/op
# Warmup Iteration   2: 31712.851 ns/op
# Warmup Iteration   3: 9856.319 ns/op
Iteration   1: 9804.457 ns/op
Iteration   2: 9945.113 ns/op
Iteration   3: 10019.627 ns/op
Iteration   4: 10054.643 ns/op
Iteration   5: 9882.554 ns/op
Iteration   6: 9884.914 ns/op
Iteration   7: 10083.351 ns/op
Iteration   8: 9307.445 ns/op
Iteration   9: 10128.421 ns/op
Iteration  10: 9790.316 ns/op

# Run progress: 39.94% complete, ETA 00:43:11
# Fork: 2 of 2
# Warmup Iteration   1: 15715.105 ns/op
# Warmup Iteration   2: 24848.611 ns/op
# Warmup Iteration   3: 9790.915 ns/op
Iteration   1: 9755.959 ns/op
Iteration   2: 9848.621 ns/op
Iteration   3: 9901.581 ns/op
Iteration   4: 9886.497 ns/op
Iteration   5: 9806.241 ns/op
Iteration   6: 9812.522 ns/op
Iteration   7: 10016.078 ns/op
Iteration   8: 9164.284 ns/op
Iteration   9: 10034.042 ns/op
Iteration  10: 9788.343 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9845.750 ±(99.9%) 205.607 ns/op [Average]
  (min, avg, max) = (9164.284, 9845.750, 10128.421), stdev = 236.778
  CI (99.9%): [9640.143, 10051.358] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 40.00% complete, ETA 00:43:09
# Fork: 1 of 2
# Warmup Iteration   1: 38.176 ns/op
# Warmup Iteration   2: 64.142 ns/op
# Warmup Iteration   3: 35.686 ns/op
Iteration   1: 35.636 ns/op
Iteration   2: 35.684 ns/op
Iteration   3: 35.678 ns/op
Iteration   4: 35.730 ns/op
Iteration   5: 35.752 ns/op
Iteration   6: 36.226 ns/op
Iteration   7: 35.678 ns/op
Iteration   8: 34.512 ns/op
Iteration   9: 35.678 ns/op
Iteration  10: 35.713 ns/op

# Run progress: 40.06% complete, ETA 00:43:07
# Fork: 2 of 2
# Warmup Iteration   1: 37.727 ns/op
# Warmup Iteration   2: 73.279 ns/op
# Warmup Iteration   3: 35.654 ns/op
Iteration   1: 35.669 ns/op
Iteration   2: 35.715 ns/op
Iteration   3: 35.699 ns/op
Iteration   4: 35.666 ns/op
Iteration   5: 35.708 ns/op
Iteration   6: 36.122 ns/op
Iteration   7: 35.751 ns/op
Iteration   8: 34.506 ns/op
Iteration   9: 35.716 ns/op
Iteration  10: 35.641 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.624 ±(99.9%) 0.356 ns/op [Average]
  (min, avg, max) = (34.506, 35.624, 36.226), stdev = 0.410
  CI (99.9%): [35.268, 35.980] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 40.11% complete, ETA 00:43:04
# Fork: 1 of 2
# Warmup Iteration   1: 7632.799 ns/op
# Warmup Iteration   2: 6464.364 ns/op
# Warmup Iteration   3: 5600.319 ns/op
Iteration   1: 5622.508 ns/op
Iteration   2: 5680.448 ns/op
Iteration   3: 5608.465 ns/op
Iteration   4: 5601.170 ns/op
Iteration   5: 5635.348 ns/op
Iteration   6: 5577.806 ns/op
Iteration   7: 5610.898 ns/op
Iteration   8: 5612.830 ns/op
Iteration   9: 5578.051 ns/op
Iteration  10: 5599.847 ns/op

# Run progress: 40.17% complete, ETA 00:43:02
# Fork: 2 of 2
# Warmup Iteration   1: 7953.088 ns/op
# Warmup Iteration   2: 6648.146 ns/op
# Warmup Iteration   3: 5589.075 ns/op
Iteration   1: 5590.791 ns/op
Iteration   2: 5591.911 ns/op
Iteration   3: 5599.794 ns/op
Iteration   4: 5583.316 ns/op
Iteration   5: 5591.878 ns/op
Iteration   6: 5578.639 ns/op
Iteration   7: 5591.977 ns/op
Iteration   8: 5581.334 ns/op
Iteration   9: 5578.140 ns/op
Iteration  10: 5668.247 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5604.170 ±(99.9%) 24.970 ns/op [Average]
  (min, avg, max) = (5577.806, 5604.170, 5680.448), stdev = 28.755
  CI (99.9%): [5579.200, 5629.139] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 40.22% complete, ETA 00:42:59
# Fork: 1 of 2
# Warmup Iteration   1: 16631.172 ns/op
# Warmup Iteration   2: 8453.531 ns/op
# Warmup Iteration   3: 7489.589 ns/op
Iteration   1: 7463.930 ns/op
Iteration   2: 7485.443 ns/op
Iteration   3: 7482.331 ns/op
Iteration   4: 7466.493 ns/op
Iteration   5: 7483.308 ns/op
Iteration   6: 7487.380 ns/op
Iteration   7: 7481.945 ns/op
Iteration   8: 7494.237 ns/op
Iteration   9: 7495.964 ns/op
Iteration  10: 7488.780 ns/op

# Run progress: 40.28% complete, ETA 00:42:57
# Fork: 2 of 2
# Warmup Iteration   1: 17544.992 ns/op
# Warmup Iteration   2: 8527.649 ns/op
# Warmup Iteration   3: 7530.062 ns/op
Iteration   1: 7518.370 ns/op
Iteration   2: 7558.094 ns/op
Iteration   3: 7561.498 ns/op
Iteration   4: 7575.320 ns/op
Iteration   5: 7526.149 ns/op
Iteration   6: 7550.076 ns/op
Iteration   7: 7516.191 ns/op
Iteration   8: 7573.418 ns/op
Iteration   9: 7540.787 ns/op
Iteration  10: 7570.925 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7516.032 ±(99.9%) 33.007 ns/op [Average]
  (min, avg, max) = (7463.930, 7516.032, 7575.320), stdev = 38.011
  CI (99.9%): [7483.025, 7549.039] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 40.33% complete, ETA 00:42:54
# Fork: 1 of 2
# Warmup Iteration   1: 21067.599 ns/op
# Warmup Iteration   2: 8708.193 ns/op
# Warmup Iteration   3: 7478.594 ns/op
Iteration   1: 7476.836 ns/op
Iteration   2: 7494.103 ns/op
Iteration   3: 7509.237 ns/op
Iteration   4: 7493.432 ns/op
Iteration   5: 7484.681 ns/op
Iteration   6: 7505.212 ns/op
Iteration   7: 7503.650 ns/op
Iteration   8: 7487.703 ns/op
Iteration   9: 7471.142 ns/op
Iteration  10: 7496.135 ns/op

# Run progress: 40.39% complete, ETA 00:42:52
# Fork: 2 of 2
# Warmup Iteration   1: 21226.251 ns/op
# Warmup Iteration   2: 8335.007 ns/op
# Warmup Iteration   3: 7800.728 ns/op
Iteration   1: 7470.397 ns/op
Iteration   2: 7442.437 ns/op
Iteration   3: 7483.570 ns/op
Iteration   4: 7442.045 ns/op
Iteration   5: 7442.820 ns/op
Iteration   6: 7464.102 ns/op
Iteration   7: 7438.663 ns/op
Iteration   8: 7486.797 ns/op
Iteration   9: 7431.602 ns/op
Iteration  10: 7462.524 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7474.354 ±(99.9%) 21.098 ns/op [Average]
  (min, avg, max) = (7431.602, 7474.354, 7509.237), stdev = 24.296
  CI (99.9%): [7453.256, 7495.452] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 40.44% complete, ETA 00:42:50
# Fork: 1 of 2
# Warmup Iteration   1: 11484.401 ns/op
# Warmup Iteration   2: 7420.257 ns/op
# Warmup Iteration   3: 6528.949 ns/op
Iteration   1: 6463.615 ns/op
Iteration   2: 6491.765 ns/op
Iteration   3: 6516.832 ns/op
Iteration   4: 6462.733 ns/op
Iteration   5: 6523.383 ns/op
Iteration   6: 6508.294 ns/op
Iteration   7: 6467.102 ns/op
Iteration   8: 6504.404 ns/op
Iteration   9: 6515.209 ns/op
Iteration  10: 6461.392 ns/op

# Run progress: 40.50% complete, ETA 00:42:47
# Fork: 2 of 2
# Warmup Iteration   1: 11082.868 ns/op
# Warmup Iteration   2: 7347.686 ns/op
# Warmup Iteration   3: 6573.497 ns/op
Iteration   1: 6525.501 ns/op
Iteration   2: 6514.909 ns/op
Iteration   3: 6554.219 ns/op
Iteration   4: 6508.363 ns/op
Iteration   5: 6548.632 ns/op
Iteration   6: 6534.738 ns/op
Iteration   7: 6537.313 ns/op
Iteration   8: 6534.102 ns/op
Iteration   9: 6542.023 ns/op
Iteration  10: 6540.366 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6512.745 ±(99.9%) 25.713 ns/op [Average]
  (min, avg, max) = (6461.392, 6512.745, 6554.219), stdev = 29.611
  CI (99.9%): [6487.032, 6538.457] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 40.56% complete, ETA 00:42:45
# Fork: 1 of 2
# Warmup Iteration   1: 15413.487 ns/op
# Warmup Iteration   2: 10368.928 ns/op
# Warmup Iteration   3: 9259.292 ns/op
Iteration   1: 9253.736 ns/op
Iteration   2: 9199.878 ns/op
Iteration   3: 9252.588 ns/op
Iteration   4: 9216.642 ns/op
Iteration   5: 9276.117 ns/op
Iteration   6: 9229.053 ns/op
Iteration   7: 9266.106 ns/op
Iteration   8: 9187.240 ns/op
Iteration   9: 9234.833 ns/op
Iteration  10: 9235.322 ns/op

# Run progress: 40.61% complete, ETA 00:42:43
# Fork: 2 of 2
# Warmup Iteration   1: 14242.215 ns/op
# Warmup Iteration   2: 10291.303 ns/op
# Warmup Iteration   3: 8845.107 ns/op
Iteration   1: 8870.113 ns/op
Iteration   2: 8819.106 ns/op
Iteration   3: 8837.260 ns/op
Iteration   4: 8820.359 ns/op
Iteration   5: 8821.033 ns/op
Iteration   6: 8856.314 ns/op
Iteration   7: 8816.438 ns/op
Iteration   8: 8815.176 ns/op
Iteration   9: 8856.290 ns/op
Iteration  10: 8871.928 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9036.777 ±(99.9%) 178.077 ns/op [Average]
  (min, avg, max) = (8815.176, 9036.777, 9276.117), stdev = 205.074
  CI (99.9%): [8858.699, 9214.854] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 40.67% complete, ETA 00:42:40
# Fork: 1 of 2
# Warmup Iteration   1: 38.053 ns/op
# Warmup Iteration   2: 66.119 ns/op
# Warmup Iteration   3: 35.680 ns/op
Iteration   1: 35.732 ns/op
Iteration   2: 35.634 ns/op
Iteration   3: 35.690 ns/op
Iteration   4: 35.648 ns/op
Iteration   5: 35.692 ns/op
Iteration   6: 36.106 ns/op
Iteration   7: 35.678 ns/op
Iteration   8: 34.506 ns/op
Iteration   9: 35.668 ns/op
Iteration  10: 35.604 ns/op

# Run progress: 40.72% complete, ETA 00:42:38
# Fork: 2 of 2
# Warmup Iteration   1: 37.848 ns/op
# Warmup Iteration   2: 73.444 ns/op
# Warmup Iteration   3: 35.660 ns/op
Iteration   1: 35.749 ns/op
Iteration   2: 35.684 ns/op
Iteration   3: 35.785 ns/op
Iteration   4: 35.658 ns/op
Iteration   5: 35.619 ns/op
Iteration   6: 36.161 ns/op
Iteration   7: 35.652 ns/op
Iteration   8: 34.438 ns/op
Iteration   9: 35.635 ns/op
Iteration  10: 35.621 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.598 ±(99.9%) 0.359 ns/op [Average]
  (min, avg, max) = (34.438, 35.598, 36.161), stdev = 0.413
  CI (99.9%): [35.240, 35.957] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 40.78% complete, ETA 00:42:35
# Fork: 1 of 2
# Warmup Iteration   1: 8102.830 ns/op
# Warmup Iteration   2: 6945.228 ns/op
# Warmup Iteration   3: 5892.454 ns/op
Iteration   1: 5907.216 ns/op
Iteration   2: 5907.051 ns/op
Iteration   3: 5899.207 ns/op
Iteration   4: 5877.202 ns/op
Iteration   5: 5889.741 ns/op
Iteration   6: 5904.666 ns/op
Iteration   7: 5889.491 ns/op
Iteration   8: 5956.420 ns/op
Iteration   9: 5899.720 ns/op
Iteration  10: 5978.039 ns/op

# Run progress: 40.83% complete, ETA 00:42:33
# Fork: 2 of 2
# Warmup Iteration   1: 7528.112 ns/op
# Warmup Iteration   2: 6869.396 ns/op
# Warmup Iteration   3: 5872.726 ns/op
Iteration   1: 5872.741 ns/op
Iteration   2: 5871.383 ns/op
Iteration   3: 5883.337 ns/op
Iteration   4: 5863.089 ns/op
Iteration   5: 5867.328 ns/op
Iteration   6: 5857.965 ns/op
Iteration   7: 5875.290 ns/op
Iteration   8: 5862.538 ns/op
Iteration   9: 5861.341 ns/op
Iteration  10: 5865.066 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5889.442 ±(99.9%) 27.219 ns/op [Average]
  (min, avg, max) = (5857.965, 5889.442, 5978.039), stdev = 31.346
  CI (99.9%): [5862.222, 5916.661] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 40.89% complete, ETA 00:42:30
# Fork: 1 of 2
# Warmup Iteration   1: 14494.939 ns/op
# Warmup Iteration   2: 4745.035 ns/op
# Warmup Iteration   3: 4233.728 ns/op
Iteration   1: 4278.617 ns/op
Iteration   2: 4236.992 ns/op
Iteration   3: 4229.018 ns/op
Iteration   4: 4237.700 ns/op
Iteration   5: 4234.700 ns/op
Iteration   6: 4224.881 ns/op
Iteration   7: 4233.249 ns/op
Iteration   8: 4211.107 ns/op
Iteration   9: 4236.930 ns/op
Iteration  10: 4245.230 ns/op

# Run progress: 40.94% complete, ETA 00:42:28
# Fork: 2 of 2
# Warmup Iteration   1: 16565.568 ns/op
# Warmup Iteration   2: 4938.399 ns/op
# Warmup Iteration   3: 4311.483 ns/op
Iteration   1: 4347.342 ns/op
Iteration   2: 4289.205 ns/op
Iteration   3: 4281.108 ns/op
Iteration   4: 4280.306 ns/op
Iteration   5: 4307.448 ns/op
Iteration   6: 4296.364 ns/op
Iteration   7: 4270.790 ns/op
Iteration   8: 4284.574 ns/op
Iteration   9: 4301.101 ns/op
Iteration  10: 4306.528 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4266.660 ±(99.9%) 31.286 ns/op [Average]
  (min, avg, max) = (4211.107, 4266.660, 4347.342), stdev = 36.029
  CI (99.9%): [4235.374, 4297.946] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 41.00% complete, ETA 00:42:26
# Fork: 1 of 2
# Warmup Iteration   1: 16464.883 ns/op
# Warmup Iteration   2: 4842.767 ns/op
# Warmup Iteration   3: 4290.701 ns/op
Iteration   1: 4324.653 ns/op
Iteration   2: 4274.448 ns/op
Iteration   3: 4285.796 ns/op
Iteration   4: 4282.379 ns/op
Iteration   5: 4283.961 ns/op
Iteration   6: 4303.505 ns/op
Iteration   7: 4299.081 ns/op
Iteration   8: 4303.162 ns/op
Iteration   9: 4277.026 ns/op
Iteration  10: 4327.794 ns/op

# Run progress: 41.06% complete, ETA 00:42:23
# Fork: 2 of 2
# Warmup Iteration   1: 14742.476 ns/op
# Warmup Iteration   2: 5136.693 ns/op
# Warmup Iteration   3: 4309.472 ns/op
Iteration   1: 4329.606 ns/op
Iteration   2: 4298.619 ns/op
Iteration   3: 4313.372 ns/op
Iteration   4: 4313.184 ns/op
Iteration   5: 4306.330 ns/op
Iteration   6: 4304.383 ns/op
Iteration   7: 4309.440 ns/op
Iteration   8: 4293.674 ns/op
Iteration   9: 4306.395 ns/op
Iteration  10: 4325.241 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4303.102 ±(99.9%) 14.446 ns/op [Average]
  (min, avg, max) = (4274.448, 4303.102, 4329.606), stdev = 16.636
  CI (99.9%): [4288.656, 4317.549] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 41.11% complete, ETA 00:42:21
# Fork: 1 of 2
# Warmup Iteration   1: 9399.478 ns/op
# Warmup Iteration   2: 4710.163 ns/op
# Warmup Iteration   3: 4147.351 ns/op
Iteration   1: 4143.069 ns/op
Iteration   2: 4164.720 ns/op
Iteration   3: 4157.794 ns/op
Iteration   4: 4157.116 ns/op
Iteration   5: 4139.865 ns/op
Iteration   6: 4148.556 ns/op
Iteration   7: 4177.579 ns/op
Iteration   8: 4155.065 ns/op
Iteration   9: 4141.982 ns/op
Iteration  10: 4161.245 ns/op

# Run progress: 41.17% complete, ETA 00:42:18
# Fork: 2 of 2
# Warmup Iteration   1: 7295.525 ns/op
# Warmup Iteration   2: 4773.295 ns/op
# Warmup Iteration   3: 4184.650 ns/op
Iteration   1: 4178.659 ns/op
Iteration   2: 4180.082 ns/op
Iteration   3: 4180.390 ns/op
Iteration   4: 4229.896 ns/op
Iteration   5: 4180.669 ns/op
Iteration   6: 4168.733 ns/op
Iteration   7: 4165.489 ns/op
Iteration   8: 4191.275 ns/op
Iteration   9: 4216.306 ns/op
Iteration  10: 4220.303 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4172.940 ±(99.9%) 22.309 ns/op [Average]
  (min, avg, max) = (4139.865, 4172.940, 4229.896), stdev = 25.691
  CI (99.9%): [4150.631, 4195.249] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 41.22% complete, ETA 00:42:16
# Fork: 1 of 2
# Warmup Iteration   1: 13174.755 ns/op
# Warmup Iteration   2: 9302.616 ns/op
# Warmup Iteration   3: 7976.011 ns/op
Iteration   1: 7944.853 ns/op
Iteration   2: 7945.742 ns/op
Iteration   3: 7965.667 ns/op
Iteration   4: 7955.699 ns/op
Iteration   5: 7968.804 ns/op
Iteration   6: 7939.672 ns/op
Iteration   7: 7964.258 ns/op
Iteration   8: 7962.178 ns/op
Iteration   9: 7966.309 ns/op
Iteration  10: 7970.519 ns/op

# Run progress: 41.28% complete, ETA 00:42:14
# Fork: 2 of 2
# Warmup Iteration   1: 14292.858 ns/op
# Warmup Iteration   2: 9404.866 ns/op
# Warmup Iteration   3: 7999.673 ns/op
Iteration   1: 7976.972 ns/op
Iteration   2: 7953.994 ns/op
Iteration   3: 7973.408 ns/op
Iteration   4: 7964.013 ns/op
Iteration   5: 7980.397 ns/op
Iteration   6: 7968.410 ns/op
Iteration   7: 7979.298 ns/op
Iteration   8: 7967.804 ns/op
Iteration   9: 7975.555 ns/op
Iteration  10: 7989.874 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7965.671 ±(99.9%) 11.054 ns/op [Average]
  (min, avg, max) = (7939.672, 7965.671, 7989.874), stdev = 12.729
  CI (99.9%): [7954.618, 7976.725] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 41.33% complete, ETA 00:42:11
# Fork: 1 of 2
# Warmup Iteration   1: 39.187 ns/op
# Warmup Iteration   2: 65.667 ns/op
# Warmup Iteration   3: 35.701 ns/op
Iteration   1: 35.682 ns/op
Iteration   2: 35.656 ns/op
Iteration   3: 35.697 ns/op
Iteration   4: 35.684 ns/op
Iteration   5: 35.658 ns/op
Iteration   6: 36.203 ns/op
Iteration   7: 35.625 ns/op
Iteration   8: 34.442 ns/op
Iteration   9: 35.676 ns/op
Iteration  10: 35.684 ns/op

# Run progress: 41.39% complete, ETA 00:42:09
# Fork: 2 of 2
# Warmup Iteration   1: 38.427 ns/op
# Warmup Iteration   2: 66.473 ns/op
# Warmup Iteration   3: 35.722 ns/op
Iteration   1: 35.715 ns/op
Iteration   2: 35.723 ns/op
Iteration   3: 35.704 ns/op
Iteration   4: 35.656 ns/op
Iteration   5: 35.653 ns/op
Iteration   6: 36.160 ns/op
Iteration   7: 35.705 ns/op
Iteration   8: 34.503 ns/op
Iteration   9: 35.702 ns/op
Iteration  10: 35.704 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.612 ±(99.9%) 0.364 ns/op [Average]
  (min, avg, max) = (34.442, 35.612, 36.203), stdev = 0.419
  CI (99.9%): [35.248, 35.976] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 41.44% complete, ETA 00:42:06
# Fork: 1 of 2
# Warmup Iteration   1: 4741.092 ns/op
# Warmup Iteration   2: 6052.104 ns/op
# Warmup Iteration   3: 3110.497 ns/op
Iteration   1: 7071.363 ns/op
Iteration   2: 3201.603 ns/op
Iteration   3: 8222.775 ns/op
Iteration   4: 8240.656 ns/op
Iteration   5: 3665.656 ns/op
Iteration   6: 3059.406 ns/op
Iteration   7: 3472.602 ns/op
Iteration   8: 2877.058 ns/op
Iteration   9: 3220.986 ns/op
Iteration  10: 3255.220 ns/op

# Run progress: 41.50% complete, ETA 00:42:04
# Fork: 2 of 2
# Warmup Iteration   1: 4468.272 ns/op
# Warmup Iteration   2: 6476.333 ns/op
# Warmup Iteration   3: 3656.630 ns/op
Iteration   1: 7903.966 ns/op
Iteration   2: 3163.139 ns/op
Iteration   3: 6112.469 ns/op
Iteration   4: 8365.647 ns/op
Iteration   5: 3889.278 ns/op
Iteration   6: 3188.954 ns/op
Iteration   7: 3669.863 ns/op
Iteration   8: 2959.798 ns/op
Iteration   9: 3413.536 ns/op
Iteration  10: 3398.160 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4617.607 ±(99.9%) 1825.658 ns/op [Average]
  (min, avg, max) = (2877.058, 4617.607, 8365.647), stdev = 2102.430
  CI (99.9%): [2791.949, 6443.265] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 41.56% complete, ETA 00:42:02
# Fork: 1 of 2
# Warmup Iteration   1: 10654.505 ns/op
# Warmup Iteration   2: 11048.625 ns/op
# Warmup Iteration   3: 5979.922 ns/op
Iteration   1: 13757.191 ns/op
Iteration   2: 6498.270 ns/op
Iteration   3: 3162.018 ns/op
Iteration   4: 4490.929 ns/op
Iteration   5: 4316.693 ns/op
Iteration   6: 3824.396 ns/op
Iteration   7: 3156.924 ns/op
Iteration   8: 4583.490 ns/op
Iteration   9: 4035.461 ns/op
Iteration  10: 3952.748 ns/op

# Run progress: 41.61% complete, ETA 00:41:59
# Fork: 2 of 2
# Warmup Iteration   1: 13387.277 ns/op
# Warmup Iteration   2: 4739.417 ns/op
# Warmup Iteration   3: 4892.868 ns/op
Iteration   1: 5924.691 ns/op
Iteration   2: 6433.750 ns/op
Iteration   3: 3370.217 ns/op
Iteration   4: 4301.925 ns/op
Iteration   5: 5291.692 ns/op
Iteration   6: 4374.976 ns/op
Iteration   7: 3065.386 ns/op
Iteration   8: 4672.790 ns/op
Iteration   9: 4197.346 ns/op
Iteration  10: 4933.873 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4917.238 ±(99.9%) 2001.172 ns/op [Average]
  (min, avg, max) = (3065.386, 4917.238, 13757.191), stdev = 2304.553
  CI (99.9%): [2916.066, 6918.411] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 41.67% complete, ETA 00:41:57
# Fork: 1 of 2
# Warmup Iteration   1: 15602.869 ns/op
# Warmup Iteration   2: 4715.324 ns/op
# Warmup Iteration   3: 4812.637 ns/op
Iteration   1: 5968.863 ns/op
Iteration   2: 6364.672 ns/op
Iteration   3: 3337.247 ns/op
Iteration   4: 4317.084 ns/op
Iteration   5: 5110.099 ns/op
Iteration   6: 4344.090 ns/op
Iteration   7: 3001.802 ns/op
Iteration   8: 4257.467 ns/op
Iteration   9: 4183.135 ns/op
Iteration  10: 4753.980 ns/op

# Run progress: 41.72% complete, ETA 00:41:54
# Fork: 2 of 2
# Warmup Iteration   1: 11332.529 ns/op
# Warmup Iteration   2: 6589.959 ns/op
# Warmup Iteration   3: 6570.074 ns/op
Iteration   1: 9686.731 ns/op
Iteration   2: 7263.534 ns/op
Iteration   3: 3150.725 ns/op
Iteration   4: 4322.818 ns/op
Iteration   5: 4479.941 ns/op
Iteration   6: 3759.722 ns/op
Iteration   7: 3016.803 ns/op
Iteration   8: 4260.442 ns/op
Iteration   9: 3926.243 ns/op
Iteration  10: 3950.210 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4672.780 ±(99.9%) 1396.154 ns/op [Average]
  (min, avg, max) = (3001.802, 4672.780, 9686.731), stdev = 1607.813
  CI (99.9%): [3276.627, 6068.934] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 41.78% complete, ETA 00:41:52
# Fork: 1 of 2
# Warmup Iteration   1: 8070.260 ns/op
# Warmup Iteration   2: 4685.824 ns/op
# Warmup Iteration   3: 4548.927 ns/op
Iteration   1: 5617.374 ns/op
Iteration   2: 6222.162 ns/op
Iteration   3: 3925.514 ns/op
Iteration   4: 4334.497 ns/op
Iteration   5: 4935.656 ns/op
Iteration   6: 4163.576 ns/op
Iteration   7: 3454.968 ns/op
Iteration   8: 3850.248 ns/op
Iteration   9: 4140.154 ns/op
Iteration  10: 4563.199 ns/op

# Run progress: 41.83% complete, ETA 00:41:50
# Fork: 2 of 2
# Warmup Iteration   1: 8129.588 ns/op
# Warmup Iteration   2: 4749.233 ns/op
# Warmup Iteration   3: 4496.516 ns/op
Iteration   1: 5591.943 ns/op
Iteration   2: 6007.399 ns/op
Iteration   3: 4004.360 ns/op
Iteration   4: 4432.715 ns/op
Iteration   5: 4880.894 ns/op
Iteration   6: 4155.433 ns/op
Iteration   7: 3553.516 ns/op
Iteration   8: 3905.030 ns/op
Iteration   9: 4168.775 ns/op
Iteration  10: 4520.950 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4521.418 ±(99.9%) 685.828 ns/op [Average]
  (min, avg, max) = (3454.968, 4521.418, 6222.162), stdev = 789.800
  CI (99.9%): [3835.591, 5207.246] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 41.89% complete, ETA 00:41:47
# Fork: 1 of 2
# Warmup Iteration   1: 13841.784 ns/op
# Warmup Iteration   2: 9318.842 ns/op
# Warmup Iteration   3: 7965.239 ns/op
Iteration   1: 7979.630 ns/op
Iteration   2: 7959.236 ns/op
Iteration   3: 8011.251 ns/op
Iteration   4: 7975.096 ns/op
Iteration   5: 7988.794 ns/op
Iteration   6: 7963.493 ns/op
Iteration   7: 7981.683 ns/op
Iteration   8: 7974.258 ns/op
Iteration   9: 7982.047 ns/op
Iteration  10: 7967.992 ns/op

# Run progress: 41.94% complete, ETA 00:41:45
# Fork: 2 of 2
# Warmup Iteration   1: 13091.017 ns/op
# Warmup Iteration   2: 8923.543 ns/op
# Warmup Iteration   3: 7894.376 ns/op
Iteration   1: 7757.397 ns/op
Iteration   2: 7707.947 ns/op
Iteration   3: 7721.410 ns/op
Iteration   4: 7684.937 ns/op
Iteration   5: 7686.359 ns/op
Iteration   6: 7682.866 ns/op
Iteration   7: 7700.501 ns/op
Iteration   8: 7688.446 ns/op
Iteration   9: 7728.370 ns/op
Iteration  10: 7854.163 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7849.794 ±(99.9%) 119.059 ns/op [Average]
  (min, avg, max) = (7682.866, 7849.794, 8011.251), stdev = 137.109
  CI (99.9%): [7730.734, 7968.853] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 42.00% complete, ETA 00:41:42
# Fork: 1 of 2
# Warmup Iteration   1: 38.458 ns/op
# Warmup Iteration   2: 66.660 ns/op
# Warmup Iteration   3: 35.655 ns/op
Iteration   1: 35.596 ns/op
Iteration   2: 35.685 ns/op
Iteration   3: 35.618 ns/op
Iteration   4: 35.671 ns/op
Iteration   5: 35.644 ns/op
Iteration   6: 36.101 ns/op
Iteration   7: 35.741 ns/op
Iteration   8: 34.445 ns/op
Iteration   9: 35.668 ns/op
Iteration  10: 35.618 ns/op

# Run progress: 42.06% complete, ETA 00:41:40
# Fork: 2 of 2
# Warmup Iteration   1: 38.468 ns/op
# Warmup Iteration   2: 67.679 ns/op
# Warmup Iteration   3: 35.659 ns/op
Iteration   1: 35.665 ns/op
Iteration   2: 35.685 ns/op
Iteration   3: 35.679 ns/op
Iteration   4: 35.693 ns/op
Iteration   5: 35.699 ns/op
Iteration   6: 36.196 ns/op
Iteration   7: 35.646 ns/op
Iteration   8: 34.540 ns/op
Iteration   9: 35.717 ns/op
Iteration  10: 35.689 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.600 ±(99.9%) 0.354 ns/op [Average]
  (min, avg, max) = (34.445, 35.600, 36.196), stdev = 0.408
  CI (99.9%): [35.245, 35.954] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 42.11% complete, ETA 00:41:38
# Fork: 1 of 2
# Warmup Iteration   1: 298.725 ns/op
# Warmup Iteration   2: 281.535 ns/op
# Warmup Iteration   3: 238.192 ns/op
Iteration   1: 238.367 ns/op
Iteration   2: 238.431 ns/op
Iteration   3: 237.905 ns/op
Iteration   4: 235.788 ns/op
Iteration   5: 235.627 ns/op
Iteration   6: 236.128 ns/op
Iteration   7: 235.918 ns/op
Iteration   8: 235.826 ns/op
Iteration   9: 235.172 ns/op
Iteration  10: 235.309 ns/op

# Run progress: 42.17% complete, ETA 00:41:35
# Fork: 2 of 2
# Warmup Iteration   1: 301.763 ns/op
# Warmup Iteration   2: 289.430 ns/op
# Warmup Iteration   3: 237.919 ns/op
Iteration   1: 238.283 ns/op
Iteration   2: 238.201 ns/op
Iteration   3: 238.059 ns/op
Iteration   4: 235.900 ns/op
Iteration   5: 235.027 ns/op
Iteration   6: 235.199 ns/op
Iteration   7: 235.820 ns/op
Iteration   8: 236.116 ns/op
Iteration   9: 235.885 ns/op
Iteration  10: 235.624 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  236.429 ±(99.9%) 1.072 ns/op [Average]
  (min, avg, max) = (235.027, 236.429, 238.431), stdev = 1.234
  CI (99.9%): [235.357, 237.501] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 42.22% complete, ETA 00:41:33
# Fork: 1 of 2
# Warmup Iteration   1: 929.626 ns/op
# Warmup Iteration   2: 521.926 ns/op
# Warmup Iteration   3: 457.751 ns/op
Iteration   1: 457.750 ns/op
Iteration   2: 458.724 ns/op
Iteration   3: 456.975 ns/op
Iteration   4: 458.249 ns/op
Iteration   5: 458.442 ns/op
Iteration   6: 460.075 ns/op
Iteration   7: 458.185 ns/op
Iteration   8: 461.015 ns/op
Iteration   9: 458.105 ns/op
Iteration  10: 457.128 ns/op

# Run progress: 42.28% complete, ETA 00:41:30
# Fork: 2 of 2
# Warmup Iteration   1: 589.108 ns/op
# Warmup Iteration   2: 537.534 ns/op
# Warmup Iteration   3: 447.439 ns/op
Iteration   1: 447.988 ns/op
Iteration   2: 447.614 ns/op
Iteration   3: 448.288 ns/op
Iteration   4: 466.894 ns/op
Iteration   5: 447.901 ns/op
Iteration   6: 449.913 ns/op
Iteration   7: 469.257 ns/op
Iteration   8: 451.594 ns/op
Iteration   9: 447.416 ns/op
Iteration  10: 449.443 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  455.548 ±(99.9%) 5.627 ns/op [Average]
  (min, avg, max) = (447.416, 455.548, 469.257), stdev = 6.480
  CI (99.9%): [449.921, 461.175] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 42.33% complete, ETA 00:41:28
# Fork: 1 of 2
# Warmup Iteration   1: 782.270 ns/op
# Warmup Iteration   2: 545.283 ns/op
# Warmup Iteration   3: 457.951 ns/op
Iteration   1: 458.078 ns/op
Iteration   2: 457.988 ns/op
Iteration   3: 457.948 ns/op
Iteration   4: 458.277 ns/op
Iteration   5: 458.137 ns/op
Iteration   6: 461.161 ns/op
Iteration   7: 458.028 ns/op
Iteration   8: 461.000 ns/op
Iteration   9: 458.174 ns/op
Iteration  10: 458.132 ns/op

# Run progress: 42.39% complete, ETA 00:41:26
# Fork: 2 of 2
# Warmup Iteration   1: 897.934 ns/op
# Warmup Iteration   2: 500.657 ns/op
# Warmup Iteration   3: 442.010 ns/op
Iteration   1: 442.416 ns/op
Iteration   2: 442.178 ns/op
Iteration   3: 442.239 ns/op
Iteration   4: 442.179 ns/op
Iteration   5: 442.489 ns/op
Iteration   6: 445.551 ns/op
Iteration   7: 442.419 ns/op
Iteration   8: 444.486 ns/op
Iteration   9: 442.366 ns/op
Iteration  10: 442.209 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  450.773 ±(99.9%) 7.130 ns/op [Average]
  (min, avg, max) = (442.178, 450.773, 461.161), stdev = 8.211
  CI (99.9%): [443.642, 457.903] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 42.44% complete, ETA 00:41:23
# Fork: 1 of 2
# Warmup Iteration   1: 577.524 ns/op
# Warmup Iteration   2: 512.718 ns/op
# Warmup Iteration   3: 445.795 ns/op
Iteration   1: 444.930 ns/op
Iteration   2: 445.907 ns/op
Iteration   3: 445.774 ns/op
Iteration   4: 444.809 ns/op
Iteration   5: 444.787 ns/op
Iteration   6: 446.993 ns/op
Iteration   7: 445.549 ns/op
Iteration   8: 467.348 ns/op
Iteration   9: 445.240 ns/op
Iteration  10: 445.782 ns/op

# Run progress: 42.50% complete, ETA 00:41:21
# Fork: 2 of 2
# Warmup Iteration   1: 683.405 ns/op
# Warmup Iteration   2: 529.215 ns/op
# Warmup Iteration   3: 463.148 ns/op
Iteration   1: 462.831 ns/op
Iteration   2: 462.422 ns/op
Iteration   3: 463.891 ns/op
Iteration   4: 463.083 ns/op
Iteration   5: 462.316 ns/op
Iteration   6: 461.872 ns/op
Iteration   7: 463.581 ns/op
Iteration   8: 466.971 ns/op
Iteration   9: 462.997 ns/op
Iteration  10: 463.021 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  455.505 ±(99.9%) 8.129 ns/op [Average]
  (min, avg, max) = (444.787, 455.505, 467.348), stdev = 9.362
  CI (99.9%): [447.376, 463.634] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 42.56% complete, ETA 00:41:18
# Fork: 1 of 2
# Warmup Iteration   1: 370.552 ns/op
# Warmup Iteration   2: 359.182 ns/op
# Warmup Iteration   3: 322.477 ns/op
Iteration   1: 323.026 ns/op
Iteration   2: 323.492 ns/op
Iteration   3: 323.082 ns/op
Iteration   4: 327.191 ns/op
Iteration   5: 326.617 ns/op
Iteration   6: 327.073 ns/op
Iteration   7: 326.886 ns/op
Iteration   8: 327.082 ns/op
Iteration   9: 326.762 ns/op
Iteration  10: 326.663 ns/op

# Run progress: 42.61% complete, ETA 00:41:16
# Fork: 2 of 2
# Warmup Iteration   1: 360.279 ns/op
# Warmup Iteration   2: 363.425 ns/op
# Warmup Iteration   3: 322.154 ns/op
Iteration   1: 322.718 ns/op
Iteration   2: 322.597 ns/op
Iteration   3: 322.593 ns/op
Iteration   4: 326.603 ns/op
Iteration   5: 326.717 ns/op
Iteration   6: 326.561 ns/op
Iteration   7: 326.838 ns/op
Iteration   8: 326.908 ns/op
Iteration   9: 326.329 ns/op
Iteration  10: 326.443 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  325.609 ±(99.9%) 1.587 ns/op [Average]
  (min, avg, max) = (322.593, 325.609, 327.191), stdev = 1.828
  CI (99.9%): [324.022, 327.197] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 42.67% complete, ETA 00:41:14
# Fork: 1 of 2
# Warmup Iteration   1: 38.182 ns/op
# Warmup Iteration   2: 67.050 ns/op
# Warmup Iteration   3: 35.689 ns/op
Iteration   1: 35.719 ns/op
Iteration   2: 35.615 ns/op
Iteration   3: 35.654 ns/op
Iteration   4: 35.637 ns/op
Iteration   5: 35.689 ns/op
Iteration   6: 36.162 ns/op
Iteration   7: 35.696 ns/op
Iteration   8: 34.429 ns/op
Iteration   9: 35.671 ns/op
Iteration  10: 35.698 ns/op

# Run progress: 42.72% complete, ETA 00:41:11
# Fork: 2 of 2
# Warmup Iteration   1: 37.832 ns/op
# Warmup Iteration   2: 74.116 ns/op
# Warmup Iteration   3: 35.631 ns/op
Iteration   1: 35.668 ns/op
Iteration   2: 35.673 ns/op
Iteration   3: 35.633 ns/op
Iteration   4: 35.734 ns/op
Iteration   5: 35.793 ns/op
Iteration   6: 36.178 ns/op
Iteration   7: 35.740 ns/op
Iteration   8: 34.501 ns/op
Iteration   9: 35.755 ns/op
Iteration  10: 35.700 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.617 ±(99.9%) 0.367 ns/op [Average]
  (min, avg, max) = (34.429, 35.617, 36.178), stdev = 0.423
  CI (99.9%): [35.250, 35.984] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 42.78% complete, ETA 00:41:09
# Fork: 1 of 2
# Warmup Iteration   1: 8520.006 ns/op
# Warmup Iteration   2: 8322.379 ns/op
# Warmup Iteration   3: 5895.606 ns/op
Iteration   1: 5713.008 ns/op
Iteration   2: 6901.379 ns/op
Iteration   3: 5751.782 ns/op
Iteration   4: 5900.655 ns/op
Iteration   5: 5786.039 ns/op
Iteration   6: 6788.482 ns/op
Iteration   7: 6927.136 ns/op
Iteration   8: 5885.479 ns/op
Iteration   9: 7122.544 ns/op
Iteration  10: 5899.557 ns/op

# Run progress: 42.83% complete, ETA 00:41:06
# Fork: 2 of 2
# Warmup Iteration   1: 6988.572 ns/op
# Warmup Iteration   2: 17427.911 ns/op
# Warmup Iteration   3: 6032.581 ns/op
Iteration   1: 5877.275 ns/op
Iteration   2: 7049.324 ns/op
Iteration   3: 5885.777 ns/op
Iteration   4: 5896.992 ns/op
Iteration   5: 5977.331 ns/op
Iteration   6: 6909.267 ns/op
Iteration   7: 7044.058 ns/op
Iteration   8: 5978.153 ns/op
Iteration   9: 7188.771 ns/op
Iteration  10: 6036.288 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6325.965 ±(99.9%) 492.980 ns/op [Average]
  (min, avg, max) = (5713.008, 6325.965, 7188.771), stdev = 567.717
  CI (99.9%): [5832.985, 6818.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 42.89% complete, ETA 00:41:04
# Fork: 1 of 2
# Warmup Iteration   1: 6730.788 ns/op
# Warmup Iteration   2: 5987.022 ns/op
# Warmup Iteration   3: 4008.991 ns/op
Iteration   1: 2788.055 ns/op
Iteration   2: 2827.198 ns/op
Iteration   3: 2659.271 ns/op
Iteration   4: 3295.303 ns/op
Iteration   5: 2477.402 ns/op
Iteration   6: 3036.692 ns/op
Iteration   7: 2858.388 ns/op
Iteration   8: 2705.824 ns/op
Iteration   9: 3180.924 ns/op
Iteration  10: 2768.916 ns/op

# Run progress: 42.94% complete, ETA 00:41:02
# Fork: 2 of 2
# Warmup Iteration   1: 6920.059 ns/op
# Warmup Iteration   2: 7595.272 ns/op
# Warmup Iteration   3: 3632.161 ns/op
Iteration   1: 3008.520 ns/op
Iteration   2: 3019.663 ns/op
Iteration   3: 2851.041 ns/op
Iteration   4: 3482.597 ns/op
Iteration   5: 2664.681 ns/op
Iteration   6: 3340.435 ns/op
Iteration   7: 3058.271 ns/op
Iteration   8: 2938.297 ns/op
Iteration   9: 3370.086 ns/op
Iteration  10: 3005.306 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2966.844 ±(99.9%) 231.582 ns/op [Average]
  (min, avg, max) = (2477.402, 2966.844, 3482.597), stdev = 266.690
  CI (99.9%): [2735.261, 3198.426] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 43.00% complete, ETA 00:40:59
# Fork: 1 of 2
# Warmup Iteration   1: 6848.972 ns/op
# Warmup Iteration   2: 8684.818 ns/op
# Warmup Iteration   3: 5324.179 ns/op
Iteration   1: 3462.611 ns/op
Iteration   2: 3328.740 ns/op
Iteration   3: 3221.574 ns/op
Iteration   4: 3278.490 ns/op
Iteration   5: 2949.460 ns/op
Iteration   6: 3954.006 ns/op
Iteration   7: 3263.944 ns/op
Iteration   8: 3292.499 ns/op
Iteration   9: 3668.618 ns/op
Iteration  10: 3529.767 ns/op

# Run progress: 43.06% complete, ETA 00:40:57
# Fork: 2 of 2
# Warmup Iteration   1: 6541.847 ns/op
# Warmup Iteration   2: 7470.336 ns/op
# Warmup Iteration   3: 3957.499 ns/op
Iteration   1: 3411.580 ns/op
Iteration   2: 3272.821 ns/op
Iteration   3: 3200.396 ns/op
Iteration   4: 3233.669 ns/op
Iteration   5: 2934.083 ns/op
Iteration   6: 3932.335 ns/op
Iteration   7: 3221.964 ns/op
Iteration   8: 3295.002 ns/op
Iteration   9: 3649.398 ns/op
Iteration  10: 3479.188 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3379.007 ±(99.9%) 233.279 ns/op [Average]
  (min, avg, max) = (2934.083, 3379.007, 3954.006), stdev = 268.644
  CI (99.9%): [3145.729, 3612.286] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 43.11% complete, ETA 00:40:54
# Fork: 1 of 2
# Warmup Iteration   1: 4652.176 ns/op
# Warmup Iteration   2: 5806.148 ns/op
# Warmup Iteration   3: 3119.221 ns/op
Iteration   1: 3003.231 ns/op
Iteration   2: 3061.020 ns/op
Iteration   3: 3034.645 ns/op
Iteration   4: 2848.085 ns/op
Iteration   5: 2792.888 ns/op
Iteration   6: 3247.454 ns/op
Iteration   7: 3146.304 ns/op
Iteration   8: 2892.426 ns/op
Iteration   9: 3438.899 ns/op
Iteration  10: 3102.765 ns/op

# Run progress: 43.17% complete, ETA 00:40:52
# Fork: 2 of 2
# Warmup Iteration   1: 5165.034 ns/op
# Warmup Iteration   2: 5181.227 ns/op
# Warmup Iteration   3: 3117.337 ns/op
Iteration   1: 3210.586 ns/op
Iteration   2: 3148.603 ns/op
Iteration   3: 3125.594 ns/op
Iteration   4: 2867.587 ns/op
Iteration   5: 2844.836 ns/op
Iteration   6: 3233.943 ns/op
Iteration   7: 3189.809 ns/op
Iteration   8: 2955.411 ns/op
Iteration   9: 3383.310 ns/op
Iteration  10: 3103.587 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3081.549 ±(99.9%) 155.530 ns/op [Average]
  (min, avg, max) = (2792.888, 3081.549, 3438.899), stdev = 179.109
  CI (99.9%): [2926.019, 3237.080] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 43.22% complete, ETA 00:40:50
# Fork: 1 of 2
# Warmup Iteration   1: 17418.898 ns/op
# Warmup Iteration   2: 19959.583 ns/op
# Warmup Iteration   3: 10881.034 ns/op
Iteration   1: 10771.229 ns/op
Iteration   2: 11039.264 ns/op
Iteration   3: 10714.653 ns/op
Iteration   4: 10667.164 ns/op
Iteration   5: 10849.910 ns/op
Iteration   6: 10553.089 ns/op
Iteration   7: 10511.347 ns/op
Iteration   8: 10410.101 ns/op
Iteration   9: 10514.049 ns/op
Iteration  10: 10822.924 ns/op

# Run progress: 43.28% complete, ETA 00:40:47
# Fork: 2 of 2
# Warmup Iteration   1: 17823.235 ns/op
# Warmup Iteration   2: 16588.233 ns/op
# Warmup Iteration   3: 10838.590 ns/op
Iteration   1: 10644.196 ns/op
Iteration   2: 11080.257 ns/op
Iteration   3: 10715.115 ns/op
Iteration   4: 10692.305 ns/op
Iteration   5: 10855.402 ns/op
Iteration   6: 10584.800 ns/op
Iteration   7: 10541.489 ns/op
Iteration   8: 10237.839 ns/op
Iteration   9: 10378.836 ns/op
Iteration  10: 10802.324 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10669.315 ±(99.9%) 184.073 ns/op [Average]
  (min, avg, max) = (10237.839, 10669.315, 11080.257), stdev = 211.979
  CI (99.9%): [10485.242, 10853.388] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 43.33% complete, ETA 00:40:45
# Fork: 1 of 2
# Warmup Iteration   1: 38.246 ns/op
# Warmup Iteration   2: 64.349 ns/op
# Warmup Iteration   3: 35.669 ns/op
Iteration   1: 35.668 ns/op
Iteration   2: 35.734 ns/op
Iteration   3: 35.674 ns/op
Iteration   4: 35.655 ns/op
Iteration   5: 35.690 ns/op
Iteration   6: 36.211 ns/op
Iteration   7: 35.703 ns/op
Iteration   8: 34.512 ns/op
Iteration   9: 35.688 ns/op
Iteration  10: 35.665 ns/op

# Run progress: 43.39% complete, ETA 00:40:42
# Fork: 2 of 2
# Warmup Iteration   1: 38.164 ns/op
# Warmup Iteration   2: 66.620 ns/op
# Warmup Iteration   3: 35.658 ns/op
Iteration   1: 35.668 ns/op
Iteration   2: 35.673 ns/op
Iteration   3: 35.737 ns/op
Iteration   4: 35.702 ns/op
Iteration   5: 35.699 ns/op
Iteration   6: 36.176 ns/op
Iteration   7: 35.686 ns/op
Iteration   8: 34.429 ns/op
Iteration   9: 35.705 ns/op
Iteration  10: 35.743 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.621 ±(99.9%) 0.367 ns/op [Average]
  (min, avg, max) = (34.429, 35.621, 36.211), stdev = 0.423
  CI (99.9%): [35.254, 35.988] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 43.44% complete, ETA 00:40:40
# Fork: 1 of 2
# Warmup Iteration   1: 9515.930 ns/op
# Warmup Iteration   2: 6920.184 ns/op
# Warmup Iteration   3: 6231.141 ns/op
Iteration   1: 6252.221 ns/op
Iteration   2: 6229.134 ns/op
Iteration   3: 6248.271 ns/op
Iteration   4: 6140.019 ns/op
Iteration   5: 6136.674 ns/op
Iteration   6: 6377.462 ns/op
Iteration   7: 6133.999 ns/op
Iteration   8: 6143.325 ns/op
Iteration   9: 6137.746 ns/op
Iteration  10: 6143.419 ns/op

# Run progress: 43.50% complete, ETA 00:40:38
# Fork: 2 of 2
# Warmup Iteration   1: 10753.640 ns/op
# Warmup Iteration   2: 7095.827 ns/op
# Warmup Iteration   3: 6138.451 ns/op
Iteration   1: 6160.251 ns/op
Iteration   2: 6157.413 ns/op
Iteration   3: 6165.850 ns/op
Iteration   4: 6142.711 ns/op
Iteration   5: 6146.049 ns/op
Iteration   6: 6133.379 ns/op
Iteration   7: 6140.072 ns/op
Iteration   8: 6154.397 ns/op
Iteration   9: 6126.377 ns/op
Iteration  10: 6140.084 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6170.443 ±(99.9%) 53.474 ns/op [Average]
  (min, avg, max) = (6126.377, 6170.443, 6377.462), stdev = 61.581
  CI (99.9%): [6116.969, 6223.917] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 43.56% complete, ETA 00:40:35
# Fork: 1 of 2
# Warmup Iteration   1: 14848.014 ns/op
# Warmup Iteration   2: 7201.547 ns/op
# Warmup Iteration   3: 6432.629 ns/op
Iteration   1: 6477.783 ns/op
Iteration   2: 6414.440 ns/op
Iteration   3: 6452.686 ns/op
Iteration   4: 6477.523 ns/op
Iteration   5: 6468.762 ns/op
Iteration   6: 6442.292 ns/op
Iteration   7: 6438.120 ns/op
Iteration   8: 6421.024 ns/op
Iteration   9: 6438.992 ns/op
Iteration  10: 6448.534 ns/op

# Run progress: 43.61% complete, ETA 00:40:33
# Fork: 2 of 2
# Warmup Iteration   1: 15359.766 ns/op
# Warmup Iteration   2: 7409.821 ns/op
# Warmup Iteration   3: 6436.860 ns/op
Iteration   1: 6477.946 ns/op
Iteration   2: 6430.262 ns/op
Iteration   3: 6438.327 ns/op
Iteration   4: 6449.313 ns/op
Iteration   5: 6428.190 ns/op
Iteration   6: 6399.708 ns/op
Iteration   7: 6442.448 ns/op
Iteration   8: 6423.517 ns/op
Iteration   9: 6446.871 ns/op
Iteration  10: 6493.520 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6445.513 ±(99.9%) 20.788 ns/op [Average]
  (min, avg, max) = (6399.708, 6445.513, 6493.520), stdev = 23.939
  CI (99.9%): [6424.725, 6466.301] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 43.67% complete, ETA 00:40:30
# Fork: 1 of 2
# Warmup Iteration   1: 15037.134 ns/op
# Warmup Iteration   2: 7264.730 ns/op
# Warmup Iteration   3: 6463.952 ns/op
Iteration   1: 6466.218 ns/op
Iteration   2: 6455.951 ns/op
Iteration   3: 6497.783 ns/op
Iteration   4: 6451.279 ns/op
Iteration   5: 6452.091 ns/op
Iteration   6: 6493.662 ns/op
Iteration   7: 6448.379 ns/op
Iteration   8: 6410.184 ns/op
Iteration   9: 6429.906 ns/op
Iteration  10: 6518.805 ns/op

# Run progress: 43.72% complete, ETA 00:40:28
# Fork: 2 of 2
# Warmup Iteration   1: 14927.254 ns/op
# Warmup Iteration   2: 7257.740 ns/op
# Warmup Iteration   3: 6396.183 ns/op
Iteration   1: 6427.568 ns/op
Iteration   2: 6398.672 ns/op
Iteration   3: 6419.888 ns/op
Iteration   4: 6414.552 ns/op
Iteration   5: 6406.991 ns/op
Iteration   6: 6405.684 ns/op
Iteration   7: 6401.658 ns/op
Iteration   8: 6391.924 ns/op
Iteration   9: 6379.949 ns/op
Iteration  10: 6380.062 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6432.560 ±(99.9%) 34.367 ns/op [Average]
  (min, avg, max) = (6379.949, 6432.560, 6518.805), stdev = 39.577
  CI (99.9%): [6398.194, 6466.927] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 43.78% complete, ETA 00:40:26
# Fork: 1 of 2
# Warmup Iteration   1: 14224.700 ns/op
# Warmup Iteration   2: 8086.165 ns/op
# Warmup Iteration   3: 6695.841 ns/op
Iteration   1: 6678.914 ns/op
Iteration   2: 6673.387 ns/op
Iteration   3: 6706.668 ns/op
Iteration   4: 6698.352 ns/op
Iteration   5: 6679.493 ns/op
Iteration   6: 6688.109 ns/op
Iteration   7: 6718.693 ns/op
Iteration   8: 6676.399 ns/op
Iteration   9: 6697.352 ns/op
Iteration  10: 6699.342 ns/op

# Run progress: 43.83% complete, ETA 00:40:23
# Fork: 2 of 2
# Warmup Iteration   1: 11067.450 ns/op
# Warmup Iteration   2: 7568.242 ns/op
# Warmup Iteration   3: 6696.342 ns/op
Iteration   1: 6701.336 ns/op
Iteration   2: 6692.177 ns/op
Iteration   3: 6675.126 ns/op
Iteration   4: 6710.088 ns/op
Iteration   5: 6703.485 ns/op
Iteration   6: 6695.583 ns/op
Iteration   7: 6691.882 ns/op
Iteration   8: 6693.271 ns/op
Iteration   9: 6685.871 ns/op
Iteration  10: 6702.416 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6693.397 ±(99.9%) 10.794 ns/op [Average]
  (min, avg, max) = (6673.387, 6693.397, 6718.693), stdev = 12.430
  CI (99.9%): [6682.603, 6704.191] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 43.89% complete, ETA 00:40:21
# Fork: 1 of 2
# Warmup Iteration   1: 16242.765 ns/op
# Warmup Iteration   2: 10985.445 ns/op
# Warmup Iteration   3: 9783.664 ns/op
Iteration   1: 9803.128 ns/op
Iteration   2: 9806.080 ns/op
Iteration   3: 9896.952 ns/op
Iteration   4: 9938.158 ns/op
Iteration   5: 9924.000 ns/op
Iteration   6: 9894.284 ns/op
Iteration   7: 9935.793 ns/op
Iteration   8: 9938.105 ns/op
Iteration   9: 9913.236 ns/op
Iteration  10: 9925.199 ns/op

# Run progress: 43.94% complete, ETA 00:40:18
# Fork: 2 of 2
# Warmup Iteration   1: 16064.559 ns/op
# Warmup Iteration   2: 10914.027 ns/op
# Warmup Iteration   3: 9855.649 ns/op
Iteration   1: 9725.101 ns/op
Iteration   2: 9724.800 ns/op
Iteration   3: 9742.274 ns/op
Iteration   4: 9844.364 ns/op
Iteration   5: 9879.547 ns/op
Iteration   6: 9898.945 ns/op
Iteration   7: 9860.780 ns/op
Iteration   8: 9863.710 ns/op
Iteration   9: 9861.406 ns/op
Iteration  10: 10007.016 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9869.144 ±(99.9%) 66.148 ns/op [Average]
  (min, avg, max) = (9724.800, 9869.144, 10007.016), stdev = 76.177
  CI (99.9%): [9802.996, 9935.292] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 44.00% complete, ETA 00:40:16
# Fork: 1 of 2
# Warmup Iteration   1: 38.811 ns/op
# Warmup Iteration   2: 66.722 ns/op
# Warmup Iteration   3: 35.602 ns/op
Iteration   1: 35.666 ns/op
Iteration   2: 35.685 ns/op
Iteration   3: 35.671 ns/op
Iteration   4: 35.684 ns/op
Iteration   5: 35.647 ns/op
Iteration   6: 36.151 ns/op
Iteration   7: 35.673 ns/op
Iteration   8: 34.524 ns/op
Iteration   9: 35.706 ns/op
Iteration  10: 35.723 ns/op

# Run progress: 44.06% complete, ETA 00:40:14
# Fork: 2 of 2
# Warmup Iteration   1: 51.490 ns/op
# Warmup Iteration   2: 63.254 ns/op
# Warmup Iteration   3: 35.678 ns/op
Iteration   1: 35.717 ns/op
Iteration   2: 35.665 ns/op
Iteration   3: 35.627 ns/op
Iteration   4: 35.671 ns/op
Iteration   5: 35.660 ns/op
Iteration   6: 36.164 ns/op
Iteration   7: 35.625 ns/op
Iteration   8: 34.546 ns/op
Iteration   9: 35.596 ns/op
Iteration  10: 35.683 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.604 ±(99.9%) 0.344 ns/op [Average]
  (min, avg, max) = (34.524, 35.604, 36.164), stdev = 0.396
  CI (99.9%): [35.260, 35.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 44.11% complete, ETA 00:40:11
# Fork: 1 of 2
# Warmup Iteration   1: 9545.924 ns/op
# Warmup Iteration   2: 8142.552 ns/op
# Warmup Iteration   3: 6940.185 ns/op
Iteration   1: 6978.149 ns/op
Iteration   2: 6957.144 ns/op
Iteration   3: 7008.435 ns/op
Iteration   4: 6960.856 ns/op
Iteration   5: 6983.054 ns/op
Iteration   6: 6954.815 ns/op
Iteration   7: 6940.375 ns/op
Iteration   8: 6913.900 ns/op
Iteration   9: 6933.488 ns/op
Iteration  10: 6953.750 ns/op

# Run progress: 44.17% complete, ETA 00:40:09
# Fork: 2 of 2
# Warmup Iteration   1: 11247.460 ns/op
# Warmup Iteration   2: 7547.133 ns/op
# Warmup Iteration   3: 6499.896 ns/op
Iteration   1: 6514.227 ns/op
Iteration   2: 6501.886 ns/op
Iteration   3: 6506.923 ns/op
Iteration   4: 6506.413 ns/op
Iteration   5: 6500.510 ns/op
Iteration   6: 6495.421 ns/op
Iteration   7: 6499.047 ns/op
Iteration   8: 6495.857 ns/op
Iteration   9: 6487.875 ns/op
Iteration  10: 6511.743 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6730.194 ±(99.9%) 203.996 ns/op [Average]
  (min, avg, max) = (6487.875, 6730.194, 7008.435), stdev = 234.922
  CI (99.9%): [6526.197, 6934.190] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 44.22% complete, ETA 00:40:06
# Fork: 1 of 2
# Warmup Iteration   1: 10449.869 ns/op
# Warmup Iteration   2: 5387.749 ns/op
# Warmup Iteration   3: 4650.592 ns/op
Iteration   1: 4672.540 ns/op
Iteration   2: 4656.178 ns/op
Iteration   3: 4664.774 ns/op
Iteration   4: 4666.609 ns/op
Iteration   5: 4676.229 ns/op
Iteration   6: 4645.950 ns/op
Iteration   7: 4647.232 ns/op
Iteration   8: 4664.477 ns/op
Iteration   9: 4648.090 ns/op
Iteration  10: 4680.830 ns/op

# Run progress: 44.28% complete, ETA 00:40:04
# Fork: 2 of 2
# Warmup Iteration   1: 11068.261 ns/op
# Warmup Iteration   2: 5624.845 ns/op
# Warmup Iteration   3: 4995.260 ns/op
Iteration   1: 4988.180 ns/op
Iteration   2: 4989.347 ns/op
Iteration   3: 5009.711 ns/op
Iteration   4: 4973.467 ns/op
Iteration   5: 4971.466 ns/op
Iteration   6: 4964.611 ns/op
Iteration   7: 4977.114 ns/op
Iteration   8: 4980.776 ns/op
Iteration   9: 4998.150 ns/op
Iteration  10: 4980.250 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4822.799 ±(99.9%) 143.418 ns/op [Average]
  (min, avg, max) = (4645.950, 4822.799, 5009.711), stdev = 165.160
  CI (99.9%): [4679.381, 4966.217] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 44.33% complete, ETA 00:40:02
# Fork: 1 of 2
# Warmup Iteration   1: 11559.196 ns/op
# Warmup Iteration   2: 5267.834 ns/op
# Warmup Iteration   3: 4644.683 ns/op
Iteration   1: 4647.120 ns/op
Iteration   2: 4635.077 ns/op
Iteration   3: 4636.696 ns/op
Iteration   4: 4649.219 ns/op
Iteration   5: 4630.786 ns/op
Iteration   6: 4632.421 ns/op
Iteration   7: 4648.751 ns/op
Iteration   8: 4649.222 ns/op
Iteration   9: 4643.594 ns/op
Iteration  10: 4644.963 ns/op

# Run progress: 44.39% complete, ETA 00:39:59
# Fork: 2 of 2
# Warmup Iteration   1: 12721.368 ns/op
# Warmup Iteration   2: 5362.490 ns/op
# Warmup Iteration   3: 4671.349 ns/op
Iteration   1: 4736.479 ns/op
Iteration   2: 4734.825 ns/op
Iteration   3: 4679.050 ns/op
Iteration   4: 4675.487 ns/op
Iteration   5: 4676.840 ns/op
Iteration   6: 4665.976 ns/op
Iteration   7: 4665.108 ns/op
Iteration   8: 4695.083 ns/op
Iteration   9: 4674.272 ns/op
Iteration  10: 4677.627 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4664.930 ±(99.9%) 26.319 ns/op [Average]
  (min, avg, max) = (4630.786, 4664.930, 4736.479), stdev = 30.309
  CI (99.9%): [4638.611, 4691.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 44.44% complete, ETA 00:39:57
# Fork: 1 of 2
# Warmup Iteration   1: 8298.207 ns/op
# Warmup Iteration   2: 5361.586 ns/op
# Warmup Iteration   3: 4742.062 ns/op
Iteration   1: 4723.931 ns/op
Iteration   2: 4713.677 ns/op
Iteration   3: 4751.216 ns/op
Iteration   4: 4723.504 ns/op
Iteration   5: 4741.312 ns/op
Iteration   6: 4729.905 ns/op
Iteration   7: 4754.014 ns/op
Iteration   8: 4726.792 ns/op
Iteration   9: 4748.549 ns/op
Iteration  10: 4756.254 ns/op

# Run progress: 44.50% complete, ETA 00:39:55
# Fork: 2 of 2
# Warmup Iteration   1: 8515.076 ns/op
# Warmup Iteration   2: 5303.666 ns/op
# Warmup Iteration   3: 4704.286 ns/op
Iteration   1: 4714.007 ns/op
Iteration   2: 4697.147 ns/op
Iteration   3: 4698.934 ns/op
Iteration   4: 4713.002 ns/op
Iteration   5: 4705.916 ns/op
Iteration   6: 4714.620 ns/op
Iteration   7: 4714.598 ns/op
Iteration   8: 4719.405 ns/op
Iteration   9: 4705.457 ns/op
Iteration  10: 4713.775 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4723.301 ±(99.9%) 15.771 ns/op [Average]
  (min, avg, max) = (4697.147, 4723.301, 4756.254), stdev = 18.162
  CI (99.9%): [4707.530, 4739.071] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 44.56% complete, ETA 00:39:52
# Fork: 1 of 2
# Warmup Iteration   1: 14409.984 ns/op
# Warmup Iteration   2: 9661.992 ns/op
# Warmup Iteration   3: 8294.512 ns/op
Iteration   1: 8292.710 ns/op
Iteration   2: 8281.319 ns/op
Iteration   3: 8297.780 ns/op
Iteration   4: 8224.026 ns/op
Iteration   5: 8232.145 ns/op
Iteration   6: 8215.141 ns/op
Iteration   7: 8237.381 ns/op
Iteration   8: 8228.082 ns/op
Iteration   9: 8263.436 ns/op
Iteration  10: 8235.602 ns/op

# Run progress: 44.61% complete, ETA 00:39:50
# Fork: 2 of 2
# Warmup Iteration   1: 14516.433 ns/op
# Warmup Iteration   2: 9661.471 ns/op
# Warmup Iteration   3: 8251.049 ns/op
Iteration   1: 8237.106 ns/op
Iteration   2: 8275.916 ns/op
Iteration   3: 8259.480 ns/op
Iteration   4: 8233.774 ns/op
Iteration   5: 8273.014 ns/op
Iteration   6: 8228.620 ns/op
Iteration   7: 8271.966 ns/op
Iteration   8: 8247.661 ns/op
Iteration   9: 8257.745 ns/op
Iteration  10: 8259.302 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8252.610 ±(99.9%) 20.894 ns/op [Average]
  (min, avg, max) = (8215.141, 8252.610, 8297.780), stdev = 24.061
  CI (99.9%): [8231.717, 8273.504] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 44.67% complete, ETA 00:39:47
# Fork: 1 of 2
# Warmup Iteration   1: 37.653 ns/op
# Warmup Iteration   2: 67.082 ns/op
# Warmup Iteration   3: 35.731 ns/op
Iteration   1: 35.713 ns/op
Iteration   2: 35.671 ns/op
Iteration   3: 35.676 ns/op
Iteration   4: 35.722 ns/op
Iteration   5: 35.752 ns/op
Iteration   6: 36.252 ns/op
Iteration   7: 35.701 ns/op
Iteration   8: 34.521 ns/op
Iteration   9: 35.767 ns/op
Iteration  10: 35.725 ns/op

# Run progress: 44.72% complete, ETA 00:39:45
# Fork: 2 of 2
# Warmup Iteration   1: 56.679 ns/op
# Warmup Iteration   2: 65.503 ns/op
# Warmup Iteration   3: 49.956 ns/op
Iteration   1: 50.012 ns/op
Iteration   2: 49.991 ns/op
Iteration   3: 49.971 ns/op
Iteration   4: 49.964 ns/op
Iteration   5: 50.004 ns/op
Iteration   6: 49.974 ns/op
Iteration   7: 49.987 ns/op
Iteration   8: 34.511 ns/op
Iteration   9: 50.019 ns/op
Iteration  10: 50.012 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.047 ±(99.9%) 6.412 ns/op [Average]
  (min, avg, max) = (34.511, 42.047, 50.019), stdev = 7.384
  CI (99.9%): [35.636, 48.459] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 44.78% complete, ETA 00:39:43
# Fork: 1 of 2
# Warmup Iteration   1: 6944.336 ns/op
# Warmup Iteration   2: 5831.365 ns/op
# Warmup Iteration   3: 4443.642 ns/op
Iteration   1: 5930.610 ns/op
Iteration   2: 7485.932 ns/op
Iteration   3: 3281.199 ns/op
Iteration   4: 3469.629 ns/op
Iteration   5: 10102.021 ns/op
Iteration   6: 11202.142 ns/op
Iteration   7: 3164.701 ns/op
Iteration   8: 3177.060 ns/op
Iteration   9: 3584.807 ns/op
Iteration  10: 3037.896 ns/op

# Run progress: 44.83% complete, ETA 00:39:40
# Fork: 2 of 2
# Warmup Iteration   1: 4725.427 ns/op
# Warmup Iteration   2: 6234.001 ns/op
# Warmup Iteration   3: 4182.130 ns/op
Iteration   1: 6295.883 ns/op
Iteration   2: 7418.614 ns/op
Iteration   3: 3375.572 ns/op
Iteration   4: 3497.600 ns/op
Iteration   5: 10299.780 ns/op
Iteration   6: 15961.663 ns/op
Iteration   7: 3264.703 ns/op
Iteration   8: 3229.208 ns/op
Iteration   9: 3551.907 ns/op
Iteration  10: 3058.985 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5719.495 ±(99.9%) 3160.626 ns/op [Average]
  (min, avg, max) = (3037.896, 5719.495, 15961.663), stdev = 3639.781
  CI (99.9%): [2558.870, 8880.121] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 44.89% complete, ETA 00:39:38
# Fork: 1 of 2
# Warmup Iteration   1: 8837.080 ns/op
# Warmup Iteration   2: 171523.197 ns/op
# Warmup Iteration   3: 7654.049 ns/op
Iteration   1: 8882.439 ns/op
Iteration   2: 9992.626 ns/op
Iteration   3: 4942.807 ns/op
Iteration   4: 17173.675 ns/op
Iteration   5: 14892.585 ns/op
Iteration   6: 3865.629 ns/op
Iteration   7: 4009.650 ns/op
Iteration   8: 4097.289 ns/op
Iteration   9: 4153.710 ns/op
Iteration  10: 4896.641 ns/op

# Run progress: 44.94% complete, ETA 00:39:35
# Fork: 2 of 2
# Warmup Iteration   1: 10209.792 ns/op
# Warmup Iteration   2: 209094.180 ns/op
# Warmup Iteration   3: 8902.789 ns/op
Iteration   1: 22457.043 ns/op
Iteration   2: 18833.408 ns/op
Iteration   3: 4273.287 ns/op
Iteration   4: 7625.245 ns/op
Iteration   5: 11625.127 ns/op
Iteration   6: 3910.191 ns/op
Iteration   7: 3942.786 ns/op
Iteration   8: 3974.195 ns/op
Iteration   9: 4126.735 ns/op
Iteration  10: 4892.310 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8128.369 ±(99.9%) 5062.149 ns/op [Average]
  (min, avg, max) = (3865.629, 8128.369, 22457.043), stdev = 5829.579
  CI (99.9%): [3066.220, 13190.518] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 45.00% complete, ETA 00:39:33
# Fork: 1 of 2
# Warmup Iteration   1: 9257.624 ns/op
# Warmup Iteration   2: 227458.274 ns/op
# Warmup Iteration   3: 6944.436 ns/op
Iteration   1: 3914.349 ns/op
Iteration   2: 6084.623 ns/op
Iteration   3: 3853.485 ns/op
Iteration   4: 7424.366 ns/op
Iteration   5: 11255.871 ns/op
Iteration   6: 3785.982 ns/op
Iteration   7: 3816.335 ns/op
Iteration   8: 3897.520 ns/op
Iteration   9: 3598.416 ns/op
Iteration  10: 4780.291 ns/op

# Run progress: 45.06% complete, ETA 00:39:31
# Fork: 2 of 2
# Warmup Iteration   1: 8757.557 ns/op
# Warmup Iteration   2: 87555.378 ns/op
# Warmup Iteration   3: 6818.800 ns/op
Iteration   1: 3919.804 ns/op
Iteration   2: 7137.532 ns/op
Iteration   3: 4056.395 ns/op
Iteration   4: 11976.034 ns/op
Iteration   5: 10568.708 ns/op
Iteration   6: 3648.345 ns/op
Iteration   7: 3738.157 ns/op
Iteration   8: 3873.498 ns/op
Iteration   9: 3535.486 ns/op
Iteration  10: 4741.147 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5480.317 ±(99.9%) 2385.371 ns/op [Average]
  (min, avg, max) = (3535.486, 5480.317, 11976.034), stdev = 2746.997
  CI (99.9%): [3094.946, 7865.688] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 45.11% complete, ETA 00:39:28
# Fork: 1 of 2
# Warmup Iteration   1: 7703.432 ns/op
# Warmup Iteration   2: 10589.814 ns/op
# Warmup Iteration   3: 5949.831 ns/op
Iteration   1: 8255.490 ns/op
Iteration   2: 5034.084 ns/op
Iteration   3: 4010.493 ns/op
Iteration   4: 5275.307 ns/op
Iteration   5: 9106.857 ns/op
Iteration   6: 4185.262 ns/op
Iteration   7: 3120.587 ns/op
Iteration   8: 3982.006 ns/op
Iteration   9: 3100.841 ns/op
Iteration  10: 4775.013 ns/op

# Run progress: 45.17% complete, ETA 00:39:26
# Fork: 2 of 2
# Warmup Iteration   1: 7593.515 ns/op
# Warmup Iteration   2: 17287.651 ns/op
# Warmup Iteration   3: 5819.283 ns/op
Iteration   1: 5996.559 ns/op
Iteration   2: 5040.418 ns/op
Iteration   3: 4016.849 ns/op
Iteration   4: 5134.781 ns/op
Iteration   5: 8864.090 ns/op
Iteration   6: 4559.618 ns/op
Iteration   7: 3368.792 ns/op
Iteration   8: 4647.294 ns/op
Iteration   9: 3132.617 ns/op
Iteration  10: 5724.746 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5066.585 ±(99.9%) 1558.768 ns/op [Average]
  (min, avg, max) = (3100.841, 5066.585, 9106.857), stdev = 1795.079
  CI (99.9%): [3507.817, 6625.353] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 45.22% complete, ETA 00:39:23
# Fork: 1 of 2
# Warmup Iteration   1: 14234.240 ns/op
# Warmup Iteration   2: 10066.948 ns/op
# Warmup Iteration   3: 8011.083 ns/op
Iteration   1: 8042.573 ns/op
Iteration   2: 8010.352 ns/op
Iteration   3: 8036.475 ns/op
Iteration   4: 8075.530 ns/op
Iteration   5: 8000.863 ns/op
Iteration   6: 8041.336 ns/op
Iteration   7: 8057.929 ns/op
Iteration   8: 7988.246 ns/op
Iteration   9: 8071.975 ns/op
Iteration  10: 8009.717 ns/op

# Run progress: 45.28% complete, ETA 00:39:21
# Fork: 2 of 2
# Warmup Iteration   1: 12962.025 ns/op
# Warmup Iteration   2: 10769.686 ns/op
# Warmup Iteration   3: 8050.738 ns/op
Iteration   1: 7903.806 ns/op
Iteration   2: 7872.193 ns/op
Iteration   3: 7906.754 ns/op
Iteration   4: 7912.358 ns/op
Iteration   5: 7882.624 ns/op
Iteration   6: 7915.247 ns/op
Iteration   7: 7931.270 ns/op
Iteration   8: 7873.649 ns/op
Iteration   9: 7931.836 ns/op
Iteration  10: 8044.100 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7975.442 ±(99.9%) 62.228 ns/op [Average]
  (min, avg, max) = (7872.193, 7975.442, 8075.530), stdev = 71.662
  CI (99.9%): [7913.213, 8037.670] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 45.33% complete, ETA 00:39:18
# Fork: 1 of 2
# Warmup Iteration   1: 38.850 ns/op
# Warmup Iteration   2: 65.228 ns/op
# Warmup Iteration   3: 35.661 ns/op
Iteration   1: 35.664 ns/op
Iteration   2: 35.767 ns/op
Iteration   3: 35.686 ns/op
Iteration   4: 35.705 ns/op
Iteration   5: 35.671 ns/op
Iteration   6: 36.178 ns/op
Iteration   7: 35.673 ns/op
Iteration   8: 34.537 ns/op
Iteration   9: 35.661 ns/op
Iteration  10: 35.649 ns/op

# Run progress: 45.39% complete, ETA 00:39:16
# Fork: 2 of 2
# Warmup Iteration   1: 39.024 ns/op
# Warmup Iteration   2: 66.280 ns/op
# Warmup Iteration   3: 35.653 ns/op
Iteration   1: 35.702 ns/op
Iteration   2: 35.669 ns/op
Iteration   3: 35.733 ns/op
Iteration   4: 35.737 ns/op
Iteration   5: 35.714 ns/op
Iteration   6: 36.112 ns/op
Iteration   7: 35.667 ns/op
Iteration   8: 34.417 ns/op
Iteration   9: 35.701 ns/op
Iteration  10: 35.698 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.617 ±(99.9%) 0.360 ns/op [Average]
  (min, avg, max) = (34.417, 35.617, 36.178), stdev = 0.415
  CI (99.9%): [35.257, 35.977] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 45.44% complete, ETA 00:39:14
# Fork: 1 of 2
# Warmup Iteration   1: 686.359 ns/op
# Warmup Iteration   2: 572.559 ns/op
# Warmup Iteration   3: 490.244 ns/op
Iteration   1: 490.177 ns/op
Iteration   2: 490.085 ns/op
Iteration   3: 490.192 ns/op
Iteration   4: 488.487 ns/op
Iteration   5: 488.300 ns/op
Iteration   6: 487.579 ns/op
Iteration   7: 487.740 ns/op
Iteration   8: 489.865 ns/op
Iteration   9: 487.520 ns/op
Iteration  10: 487.751 ns/op

# Run progress: 45.50% complete, ETA 00:39:11
# Fork: 2 of 2
# Warmup Iteration   1: 664.878 ns/op
# Warmup Iteration   2: 564.914 ns/op
# Warmup Iteration   3: 497.021 ns/op
Iteration   1: 496.822 ns/op
Iteration   2: 496.826 ns/op
Iteration   3: 497.233 ns/op
Iteration   4: 494.518 ns/op
Iteration   5: 494.119 ns/op
Iteration   6: 494.489 ns/op
Iteration   7: 493.925 ns/op
Iteration   8: 494.745 ns/op
Iteration   9: 494.761 ns/op
Iteration  10: 494.581 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  491.986 ±(99.9%) 3.042 ns/op [Average]
  (min, avg, max) = (487.520, 491.986, 497.233), stdev = 3.503
  CI (99.9%): [488.944, 495.028] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 45.56% complete, ETA 00:39:09
# Fork: 1 of 2
# Warmup Iteration   1: 671.477 ns/op
# Warmup Iteration   2: 572.218 ns/op
# Warmup Iteration   3: 481.508 ns/op
Iteration   1: 481.864 ns/op
Iteration   2: 481.961 ns/op
Iteration   3: 481.736 ns/op
Iteration   4: 481.483 ns/op
Iteration   5: 481.746 ns/op
Iteration   6: 482.525 ns/op
Iteration   7: 481.724 ns/op
Iteration   8: 484.149 ns/op
Iteration   9: 481.599 ns/op
Iteration  10: 481.650 ns/op

# Run progress: 45.61% complete, ETA 00:39:06
# Fork: 2 of 2
# Warmup Iteration   1: 1354.593 ns/op
# Warmup Iteration   2: 536.472 ns/op
# Warmup Iteration   3: 473.785 ns/op
Iteration   1: 474.299 ns/op
Iteration   2: 473.936 ns/op
Iteration   3: 474.388 ns/op
Iteration   4: 473.711 ns/op
Iteration   5: 474.629 ns/op
Iteration   6: 478.404 ns/op
Iteration   7: 474.469 ns/op
Iteration   8: 477.265 ns/op
Iteration   9: 474.187 ns/op
Iteration  10: 473.941 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  478.483 ±(99.9%) 3.344 ns/op [Average]
  (min, avg, max) = (473.711, 478.483, 484.149), stdev = 3.850
  CI (99.9%): [475.140, 481.827] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 45.67% complete, ETA 00:39:04
# Fork: 1 of 2
# Warmup Iteration   1: 891.204 ns/op
# Warmup Iteration   2: 531.961 ns/op
# Warmup Iteration   3: 466.390 ns/op
Iteration   1: 466.908 ns/op
Iteration   2: 466.677 ns/op
Iteration   3: 466.954 ns/op
Iteration   4: 466.618 ns/op
Iteration   5: 466.059 ns/op
Iteration   6: 469.245 ns/op
Iteration   7: 466.558 ns/op
Iteration   8: 468.741 ns/op
Iteration   9: 466.690 ns/op
Iteration  10: 466.469 ns/op

# Run progress: 45.72% complete, ETA 00:39:02
# Fork: 2 of 2
# Warmup Iteration   1: 807.689 ns/op
# Warmup Iteration   2: 567.434 ns/op
# Warmup Iteration   3: 466.354 ns/op
Iteration   1: 466.847 ns/op
Iteration   2: 466.930 ns/op
Iteration   3: 466.952 ns/op
Iteration   4: 466.810 ns/op
Iteration   5: 467.307 ns/op
Iteration   6: 469.752 ns/op
Iteration   7: 466.938 ns/op
Iteration   8: 468.858 ns/op
Iteration   9: 467.484 ns/op
Iteration  10: 466.775 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  467.279 ±(99.9%) 0.885 ns/op [Average]
  (min, avg, max) = (466.059, 467.279, 469.752), stdev = 1.019
  CI (99.9%): [466.394, 468.163] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 45.78% complete, ETA 00:38:59
# Fork: 1 of 2
# Warmup Iteration   1: 635.360 ns/op
# Warmup Iteration   2: 560.227 ns/op
# Warmup Iteration   3: 479.998 ns/op
Iteration   1: 480.344 ns/op
Iteration   2: 480.039 ns/op
Iteration   3: 480.204 ns/op
Iteration   4: 481.019 ns/op
Iteration   5: 483.166 ns/op
Iteration   6: 482.677 ns/op
Iteration   7: 480.145 ns/op
Iteration   8: 482.665 ns/op
Iteration   9: 480.898 ns/op
Iteration  10: 479.966 ns/op

# Run progress: 45.83% complete, ETA 00:38:57
# Fork: 2 of 2
# Warmup Iteration   1: 620.933 ns/op
# Warmup Iteration   2: 545.121 ns/op
# Warmup Iteration   3: 479.828 ns/op
Iteration   1: 480.248 ns/op
Iteration   2: 479.914 ns/op
Iteration   3: 480.454 ns/op
Iteration   4: 479.987 ns/op
Iteration   5: 481.332 ns/op
Iteration   6: 483.491 ns/op
Iteration   7: 480.024 ns/op
Iteration   8: 482.689 ns/op
Iteration   9: 481.077 ns/op
Iteration  10: 479.984 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  481.016 ±(99.9%) 1.060 ns/op [Average]
  (min, avg, max) = (479.914, 481.016, 483.491), stdev = 1.220
  CI (99.9%): [479.957, 482.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 45.89% complete, ETA 00:38:54
# Fork: 1 of 2
# Warmup Iteration   1: 546.182 ns/op
# Warmup Iteration   2: 476.657 ns/op
# Warmup Iteration   3: 422.789 ns/op
Iteration   1: 422.583 ns/op
Iteration   2: 422.765 ns/op
Iteration   3: 422.506 ns/op
Iteration   4: 426.086 ns/op
Iteration   5: 426.090 ns/op
Iteration   6: 426.479 ns/op
Iteration   7: 426.483 ns/op
Iteration   8: 426.647 ns/op
Iteration   9: 426.155 ns/op
Iteration  10: 426.099 ns/op

# Run progress: 45.94% complete, ETA 00:38:52
# Fork: 2 of 2
# Warmup Iteration   1: 530.112 ns/op
# Warmup Iteration   2: 467.175 ns/op
# Warmup Iteration   3: 423.535 ns/op
Iteration   1: 423.608 ns/op
Iteration   2: 423.645 ns/op
Iteration   3: 423.643 ns/op
Iteration   4: 427.540 ns/op
Iteration   5: 427.676 ns/op
Iteration   6: 427.651 ns/op
Iteration   7: 427.589 ns/op
Iteration   8: 427.613 ns/op
Iteration   9: 427.687 ns/op
Iteration  10: 427.580 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  425.806 ±(99.9%) 1.663 ns/op [Average]
  (min, avg, max) = (422.506, 425.806, 427.687), stdev = 1.916
  CI (99.9%): [424.143, 427.470] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 46.00% complete, ETA 00:38:50
# Fork: 1 of 2
# Warmup Iteration   1: 51.603 ns/op
# Warmup Iteration   2: 66.696 ns/op
# Warmup Iteration   3: 35.636 ns/op
Iteration   1: 35.665 ns/op
Iteration   2: 35.641 ns/op
Iteration   3: 35.658 ns/op
Iteration   4: 35.629 ns/op
Iteration   5: 35.647 ns/op
Iteration   6: 36.161 ns/op
Iteration   7: 35.626 ns/op
Iteration   8: 34.700 ns/op
Iteration   9: 35.687 ns/op
Iteration  10: 35.694 ns/op

# Run progress: 46.06% complete, ETA 00:38:47
# Fork: 2 of 2
# Warmup Iteration   1: 37.903 ns/op
# Warmup Iteration   2: 66.694 ns/op
# Warmup Iteration   3: 35.668 ns/op
Iteration   1: 35.691 ns/op
Iteration   2: 35.682 ns/op
Iteration   3: 35.630 ns/op
Iteration   4: 35.616 ns/op
Iteration   5: 35.660 ns/op
Iteration   6: 36.164 ns/op
Iteration   7: 35.649 ns/op
Iteration   8: 34.422 ns/op
Iteration   9: 35.656 ns/op
Iteration  10: 35.761 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.602 ±(99.9%) 0.340 ns/op [Average]
  (min, avg, max) = (34.422, 35.602, 36.164), stdev = 0.391
  CI (99.9%): [35.262, 35.942] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 46.11% complete, ETA 00:38:45
# Fork: 1 of 2
# Warmup Iteration   1: 9520.114 ns/op
# Warmup Iteration   2: 8458.547 ns/op
# Warmup Iteration   3: 6204.798 ns/op
Iteration   1: 6183.336 ns/op
Iteration   2: 7184.581 ns/op
Iteration   3: 6088.068 ns/op
Iteration   4: 6104.926 ns/op
Iteration   5: 6071.935 ns/op
Iteration   6: 7085.055 ns/op
Iteration   7: 7140.532 ns/op
Iteration   8: 5920.881 ns/op
Iteration   9: 7180.926 ns/op
Iteration  10: 6189.414 ns/op

# Run progress: 46.17% complete, ETA 00:38:42
# Fork: 2 of 2
# Warmup Iteration   1: 8926.442 ns/op
# Warmup Iteration   2: 7976.269 ns/op
# Warmup Iteration   3: 6074.413 ns/op
Iteration   1: 5849.344 ns/op
Iteration   2: 7030.820 ns/op
Iteration   3: 5988.783 ns/op
Iteration   4: 5926.226 ns/op
Iteration   5: 5948.343 ns/op
Iteration   6: 6912.656 ns/op
Iteration   7: 6968.479 ns/op
Iteration   8: 5731.089 ns/op
Iteration   9: 6917.404 ns/op
Iteration  10: 5976.919 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6419.986 ±(99.9%) 472.554 ns/op [Average]
  (min, avg, max) = (5731.089, 6419.986, 7184.581), stdev = 544.194
  CI (99.9%): [5947.432, 6892.540] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 46.22% complete, ETA 00:38:40
# Fork: 1 of 2
# Warmup Iteration   1: 12126.466 ns/op
# Warmup Iteration   2: 5332.068 ns/op
# Warmup Iteration   3: 9144.843 ns/op
Iteration   1: 4195.543 ns/op
Iteration   2: 3432.239 ns/op
Iteration   3: 3390.848 ns/op
Iteration   4: 3275.776 ns/op
Iteration   5: 7298.951 ns/op
Iteration   6: 4313.968 ns/op
Iteration   7: 4266.195 ns/op
Iteration   8: 4122.359 ns/op
Iteration   9: 4229.584 ns/op
Iteration  10: 7111.174 ns/op

# Run progress: 46.28% complete, ETA 00:38:38
# Fork: 2 of 2
# Warmup Iteration   1: 9497.144 ns/op
# Warmup Iteration   2: 5283.712 ns/op
# Warmup Iteration   3: 9854.830 ns/op
Iteration   1: 4242.384 ns/op
Iteration   2: 3488.083 ns/op
Iteration   3: 3430.761 ns/op
Iteration   4: 3351.629 ns/op
Iteration   5: 7592.025 ns/op
Iteration   6: 4370.990 ns/op
Iteration   7: 4326.621 ns/op
Iteration   8: 4180.070 ns/op
Iteration   9: 4300.333 ns/op
Iteration  10: 7165.255 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4604.239 ±(99.9%) 1245.804 ns/op [Average]
  (min, avg, max) = (3275.776, 4604.239, 7592.025), stdev = 1434.670
  CI (99.9%): [3358.435, 5850.044] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 46.33% complete, ETA 00:38:35
# Fork: 1 of 2
# Warmup Iteration   1: 9899.286 ns/op
# Warmup Iteration   2: 5602.027 ns/op
# Warmup Iteration   3: 8544.739 ns/op
Iteration   1: 4114.563 ns/op
Iteration   2: 3437.090 ns/op
Iteration   3: 3315.611 ns/op
Iteration   4: 3291.220 ns/op
Iteration   5: 6785.567 ns/op
Iteration   6: 4306.633 ns/op
Iteration   7: 4275.633 ns/op
Iteration   8: 4102.012 ns/op
Iteration   9: 4440.129 ns/op
Iteration  10: 6455.928 ns/op

# Run progress: 46.39% complete, ETA 00:38:33
# Fork: 2 of 2
# Warmup Iteration   1: 11703.948 ns/op
# Warmup Iteration   2: 5682.972 ns/op
# Warmup Iteration   3: 9055.139 ns/op
Iteration   1: 4033.622 ns/op
Iteration   2: 3348.092 ns/op
Iteration   3: 3227.406 ns/op
Iteration   4: 3187.902 ns/op
Iteration   5: 7308.107 ns/op
Iteration   6: 4219.544 ns/op
Iteration   7: 4227.727 ns/op
Iteration   8: 4027.115 ns/op
Iteration   9: 4368.373 ns/op
Iteration  10: 6843.847 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4465.806 ±(99.9%) 1128.272 ns/op [Average]
  (min, avg, max) = (3187.902, 4465.806, 7308.107), stdev = 1299.319
  CI (99.9%): [3337.534, 5594.078] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 46.44% complete, ETA 00:38:31
# Fork: 1 of 2
# Warmup Iteration   1: 4970.705 ns/op
# Warmup Iteration   2: 4296.357 ns/op
# Warmup Iteration   3: 6716.824 ns/op
Iteration   1: 7424.716 ns/op
Iteration   2: 3277.862 ns/op
Iteration   3: 3328.254 ns/op
Iteration   4: 3112.543 ns/op
Iteration   5: 9700.066 ns/op
Iteration   6: 3709.807 ns/op
Iteration   7: 3689.861 ns/op
Iteration   8: 3090.001 ns/op
Iteration   9: 3527.291 ns/op
Iteration  10: 5766.220 ns/op

# Run progress: 46.50% complete, ETA 00:38:28
# Fork: 2 of 2
# Warmup Iteration   1: 6703.053 ns/op
# Warmup Iteration   2: 5553.811 ns/op
# Warmup Iteration   3: 6551.079 ns/op
Iteration   1: 4679.975 ns/op
Iteration   2: 3283.030 ns/op
Iteration   3: 3265.453 ns/op
Iteration   4: 3060.399 ns/op
Iteration   5: 11725.575 ns/op
Iteration   6: 3619.361 ns/op
Iteration   7: 3601.376 ns/op
Iteration   8: 3113.596 ns/op
Iteration   9: 3518.517 ns/op
Iteration  10: 5646.393 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4607.015 ±(99.9%) 2080.596 ns/op [Average]
  (min, avg, max) = (3060.399, 4607.015, 11725.575), stdev = 2396.018
  CI (99.9%): [2526.418, 6687.611] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 46.56% complete, ETA 00:38:26
# Fork: 1 of 2
# Warmup Iteration   1: 18919.659 ns/op
# Warmup Iteration   2: 24609.396 ns/op
# Warmup Iteration   3: 11386.556 ns/op
Iteration   1: 11287.222 ns/op
Iteration   2: 12023.769 ns/op
Iteration   3: 11151.895 ns/op
Iteration   4: 11167.519 ns/op
Iteration   5: 12336.434 ns/op
Iteration   6: 11244.295 ns/op
Iteration   7: 11177.967 ns/op
Iteration   8: 10349.754 ns/op
Iteration   9: 12005.136 ns/op
Iteration  10: 11402.298 ns/op

# Run progress: 46.61% complete, ETA 00:38:23
# Fork: 2 of 2
# Warmup Iteration   1: 18678.739 ns/op
# Warmup Iteration   2: 21957.991 ns/op
# Warmup Iteration   3: 11482.370 ns/op
Iteration   1: 11456.118 ns/op
Iteration   2: 12203.289 ns/op
Iteration   3: 11267.587 ns/op
Iteration   4: 11241.875 ns/op
Iteration   5: 12370.230 ns/op
Iteration   6: 11308.050 ns/op
Iteration   7: 11251.281 ns/op
Iteration   8: 10348.386 ns/op
Iteration   9: 12219.998 ns/op
Iteration  10: 11543.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11467.853 ±(99.9%) 500.298 ns/op [Average]
  (min, avg, max) = (10348.386, 11467.853, 12370.230), stdev = 576.143
  CI (99.9%): [10967.556, 11968.151] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 46.67% complete, ETA 00:38:21
# Fork: 1 of 2
# Warmup Iteration   1: 39.442 ns/op
# Warmup Iteration   2: 64.862 ns/op
# Warmup Iteration   3: 35.670 ns/op
Iteration   1: 35.749 ns/op
Iteration   2: 35.692 ns/op
Iteration   3: 35.789 ns/op
Iteration   4: 35.667 ns/op
Iteration   5: 35.715 ns/op
Iteration   6: 36.164 ns/op
Iteration   7: 35.677 ns/op
Iteration   8: 34.528 ns/op
Iteration   9: 36.031 ns/op
Iteration  10: 35.744 ns/op

# Run progress: 46.72% complete, ETA 00:38:19
# Fork: 2 of 2
# Warmup Iteration   1: 52.112 ns/op
# Warmup Iteration   2: 66.553 ns/op
# Warmup Iteration   3: 35.687 ns/op
Iteration   1: 35.655 ns/op
Iteration   2: 35.691 ns/op
Iteration   3: 35.734 ns/op
Iteration   4: 35.951 ns/op
Iteration   5: 35.737 ns/op
Iteration   6: 36.217 ns/op
Iteration   7: 35.705 ns/op
Iteration   8: 34.434 ns/op
Iteration   9: 35.721 ns/op
Iteration  10: 35.701 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.665 ±(99.9%) 0.379 ns/op [Average]
  (min, avg, max) = (34.434, 35.665, 36.217), stdev = 0.437
  CI (99.9%): [35.286, 36.045] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 46.78% complete, ETA 00:38:16
# Fork: 1 of 2
# Warmup Iteration   1: 12840.650 ns/op
# Warmup Iteration   2: 8482.075 ns/op
# Warmup Iteration   3: 7319.451 ns/op
Iteration   1: 7335.609 ns/op
Iteration   2: 7308.047 ns/op
Iteration   3: 7350.440 ns/op
Iteration   4: 7334.844 ns/op
Iteration   5: 7335.096 ns/op
Iteration   6: 7303.727 ns/op
Iteration   7: 7320.965 ns/op
Iteration   8: 7313.726 ns/op
Iteration   9: 7298.528 ns/op
Iteration  10: 7340.824 ns/op

# Run progress: 46.83% complete, ETA 00:38:14
# Fork: 2 of 2
# Warmup Iteration   1: 9732.912 ns/op
# Warmup Iteration   2: 6914.719 ns/op
# Warmup Iteration   3: 5877.172 ns/op
Iteration   1: 5897.878 ns/op
Iteration   2: 5887.077 ns/op
Iteration   3: 5892.162 ns/op
Iteration   4: 5875.502 ns/op
Iteration   5: 5880.413 ns/op
Iteration   6: 5875.267 ns/op
Iteration   7: 5879.331 ns/op
Iteration   8: 5875.583 ns/op
Iteration   9: 5863.298 ns/op
Iteration  10: 6063.566 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6611.594 ±(99.9%) 635.907 ns/op [Average]
  (min, avg, max) = (5863.298, 6611.594, 7350.440), stdev = 732.311
  CI (99.9%): [5975.687, 7247.501] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 46.89% complete, ETA 00:38:11
# Fork: 1 of 2
# Warmup Iteration   1: 14413.336 ns/op
# Warmup Iteration   2: 8227.673 ns/op
# Warmup Iteration   3: 7337.965 ns/op
Iteration   1: 7395.240 ns/op
Iteration   2: 7371.288 ns/op
Iteration   3: 7388.709 ns/op
Iteration   4: 7319.687 ns/op
Iteration   5: 7366.099 ns/op
Iteration   6: 7323.365 ns/op
Iteration   7: 7320.299 ns/op
Iteration   8: 7354.171 ns/op
Iteration   9: 7338.783 ns/op
Iteration  10: 7346.469 ns/op

# Run progress: 46.94% complete, ETA 00:38:09
# Fork: 2 of 2
# Warmup Iteration   1: 14496.157 ns/op
# Warmup Iteration   2: 8327.083 ns/op
# Warmup Iteration   3: 7416.855 ns/op
Iteration   1: 7459.324 ns/op
Iteration   2: 7377.729 ns/op
Iteration   3: 7454.586 ns/op
Iteration   4: 7441.235 ns/op
Iteration   5: 7357.706 ns/op
Iteration   6: 7446.030 ns/op
Iteration   7: 7406.643 ns/op
Iteration   8: 7425.831 ns/op
Iteration   9: 7426.876 ns/op
Iteration  10: 7445.115 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7388.259 ±(99.9%) 41.227 ns/op [Average]
  (min, avg, max) = (7319.687, 7388.259, 7459.324), stdev = 47.477
  CI (99.9%): [7347.032, 7429.486] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 47.00% complete, ETA 00:38:06
# Fork: 1 of 2
# Warmup Iteration   1: 18474.201 ns/op
# Warmup Iteration   2: 8336.495 ns/op
# Warmup Iteration   3: 7367.913 ns/op
Iteration   1: 7451.312 ns/op
Iteration   2: 7380.798 ns/op
Iteration   3: 7437.164 ns/op
Iteration   4: 7407.862 ns/op
Iteration   5: 7365.283 ns/op
Iteration   6: 7413.049 ns/op
Iteration   7: 7419.818 ns/op
Iteration   8: 7377.382 ns/op
Iteration   9: 7376.129 ns/op
Iteration  10: 7407.433 ns/op

# Run progress: 47.06% complete, ETA 00:38:04
# Fork: 2 of 2
# Warmup Iteration   1: 14535.182 ns/op
# Warmup Iteration   2: 8341.358 ns/op
# Warmup Iteration   3: 7430.496 ns/op
Iteration   1: 7425.800 ns/op
Iteration   2: 7440.421 ns/op
Iteration   3: 7442.146 ns/op
Iteration   4: 7405.026 ns/op
Iteration   5: 7447.178 ns/op
Iteration   6: 7417.281 ns/op
Iteration   7: 7348.382 ns/op
Iteration   8: 7413.898 ns/op
Iteration   9: 7395.395 ns/op
Iteration  10: 7405.348 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7408.855 ±(99.9%) 24.653 ns/op [Average]
  (min, avg, max) = (7348.382, 7408.855, 7451.312), stdev = 28.390
  CI (99.9%): [7384.203, 7433.508] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 47.11% complete, ETA 00:38:02
# Fork: 1 of 2
# Warmup Iteration   1: 9866.564 ns/op
# Warmup Iteration   2: 7578.630 ns/op
# Warmup Iteration   3: 6556.143 ns/op
Iteration   1: 6597.406 ns/op
Iteration   2: 6601.698 ns/op
Iteration   3: 6607.726 ns/op
Iteration   4: 6634.593 ns/op
Iteration   5: 6594.909 ns/op
Iteration   6: 6647.965 ns/op
Iteration   7: 6605.822 ns/op
Iteration   8: 6598.340 ns/op
Iteration   9: 6613.529 ns/op
Iteration  10: 6598.109 ns/op

# Run progress: 47.17% complete, ETA 00:37:59
# Fork: 2 of 2
# Warmup Iteration   1: 10400.733 ns/op
# Warmup Iteration   2: 7517.043 ns/op
# Warmup Iteration   3: 6675.241 ns/op
Iteration   1: 6623.745 ns/op
Iteration   2: 6676.560 ns/op
Iteration   3: 6644.129 ns/op
Iteration   4: 6667.336 ns/op
Iteration   5: 6615.820 ns/op
Iteration   6: 6677.989 ns/op
Iteration   7: 6660.004 ns/op
Iteration   8: 6614.960 ns/op
Iteration   9: 6635.978 ns/op
Iteration  10: 6663.492 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6629.006 ±(99.9%) 24.705 ns/op [Average]
  (min, avg, max) = (6594.909, 6629.006, 6677.989), stdev = 28.450
  CI (99.9%): [6604.301, 6653.710] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 47.22% complete, ETA 00:37:57
# Fork: 1 of 2
# Warmup Iteration   1: 18522.589 ns/op
# Warmup Iteration   2: 11107.313 ns/op
# Warmup Iteration   3: 9485.235 ns/op
Iteration   1: 9483.814 ns/op
Iteration   2: 9497.427 ns/op
Iteration   3: 9530.937 ns/op
Iteration   4: 9652.742 ns/op
Iteration   5: 9637.333 ns/op
Iteration   6: 9621.465 ns/op
Iteration   7: 9657.531 ns/op
Iteration   8: 9622.229 ns/op
Iteration   9: 9674.279 ns/op
Iteration  10: 9647.573 ns/op

# Run progress: 47.28% complete, ETA 00:37:55
# Fork: 2 of 2
# Warmup Iteration   1: 16259.379 ns/op
# Warmup Iteration   2: 11305.266 ns/op
# Warmup Iteration   3: 9503.455 ns/op
Iteration   1: 9489.998 ns/op
Iteration   2: 9476.980 ns/op
Iteration   3: 9545.230 ns/op
Iteration   4: 9621.797 ns/op
Iteration   5: 9626.078 ns/op
Iteration   6: 9657.120 ns/op
Iteration   7: 9629.748 ns/op
Iteration   8: 9651.002 ns/op
Iteration   9: 9629.682 ns/op
Iteration  10: 9620.663 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9598.681 ±(99.9%) 57.883 ns/op [Average]
  (min, avg, max) = (9476.980, 9598.681, 9674.279), stdev = 66.658
  CI (99.9%): [9540.799, 9656.564] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 47.33% complete, ETA 00:37:52
# Fork: 1 of 2
# Warmup Iteration   1: 38.234 ns/op
# Warmup Iteration   2: 66.471 ns/op
# Warmup Iteration   3: 35.641 ns/op
Iteration   1: 35.677 ns/op
Iteration   2: 35.713 ns/op
Iteration   3: 35.730 ns/op
Iteration   4: 35.680 ns/op
Iteration   5: 35.752 ns/op
Iteration   6: 36.149 ns/op
Iteration   7: 35.683 ns/op
Iteration   8: 34.521 ns/op
Iteration   9: 35.682 ns/op
Iteration  10: 35.735 ns/op

# Run progress: 47.39% complete, ETA 00:37:50
# Fork: 2 of 2
# Warmup Iteration   1: 38.072 ns/op
# Warmup Iteration   2: 66.640 ns/op
# Warmup Iteration   3: 35.627 ns/op
Iteration   1: 35.728 ns/op
Iteration   2: 35.624 ns/op
Iteration   3: 35.670 ns/op
Iteration   4: 35.676 ns/op
Iteration   5: 35.651 ns/op
Iteration   6: 36.174 ns/op
Iteration   7: 35.703 ns/op
Iteration   8: 34.510 ns/op
Iteration   9: 35.672 ns/op
Iteration  10: 35.686 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.621 ±(99.9%) 0.352 ns/op [Average]
  (min, avg, max) = (34.510, 35.621, 36.174), stdev = 0.405
  CI (99.9%): [35.269, 35.973] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 47.44% complete, ETA 00:37:47
# Fork: 1 of 2
# Warmup Iteration   1: 13616.529 ns/op
# Warmup Iteration   2: 9656.429 ns/op
# Warmup Iteration   3: 8628.008 ns/op
Iteration   1: 8666.211 ns/op
Iteration   2: 8642.249 ns/op
Iteration   3: 8692.924 ns/op
Iteration   4: 8667.892 ns/op
Iteration   5: 8635.228 ns/op
Iteration   6: 8664.600 ns/op
Iteration   7: 8656.057 ns/op
Iteration   8: 8655.889 ns/op
Iteration   9: 8637.086 ns/op
Iteration  10: 8591.308 ns/op

# Run progress: 47.50% complete, ETA 00:37:45
# Fork: 2 of 2
# Warmup Iteration   1: 11298.727 ns/op
# Warmup Iteration   2: 8599.365 ns/op
# Warmup Iteration   3: 7446.217 ns/op
Iteration   1: 7431.160 ns/op
Iteration   2: 7412.967 ns/op
Iteration   3: 7494.941 ns/op
Iteration   4: 7481.336 ns/op
Iteration   5: 7516.131 ns/op
Iteration   6: 7523.869 ns/op
Iteration   7: 7455.877 ns/op
Iteration   8: 7499.886 ns/op
Iteration   9: 7484.729 ns/op
Iteration  10: 7497.949 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8065.414 ±(99.9%) 522.351 ns/op [Average]
  (min, avg, max) = (7412.967, 8065.414, 8692.924), stdev = 601.540
  CI (99.9%): [7543.064, 8587.765] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 47.56% complete, ETA 00:37:42
# Fork: 1 of 2
# Warmup Iteration   1: 14209.716 ns/op
# Warmup Iteration   2: 4783.730 ns/op
# Warmup Iteration   3: 4043.592 ns/op
Iteration   1: 4069.271 ns/op
Iteration   2: 4086.227 ns/op
Iteration   3: 4070.915 ns/op
Iteration   4: 4081.119 ns/op
Iteration   5: 4089.429 ns/op
Iteration   6: 4055.264 ns/op
Iteration   7: 4051.513 ns/op
Iteration   8: 4047.105 ns/op
Iteration   9: 4061.488 ns/op
Iteration  10: 4039.354 ns/op

# Run progress: 47.61% complete, ETA 00:37:40
# Fork: 2 of 2
# Warmup Iteration   1: 14403.613 ns/op
# Warmup Iteration   2: 4556.673 ns/op
# Warmup Iteration   3: 4026.513 ns/op
Iteration   1: 4027.771 ns/op
Iteration   2: 4024.584 ns/op
Iteration   3: 4034.177 ns/op
Iteration   4: 4026.459 ns/op
Iteration   5: 4022.184 ns/op
Iteration   6: 4032.725 ns/op
Iteration   7: 4028.821 ns/op
Iteration   8: 4027.704 ns/op
Iteration   9: 4032.035 ns/op
Iteration  10: 4036.260 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4047.220 ±(99.9%) 19.157 ns/op [Average]
  (min, avg, max) = (4022.184, 4047.220, 4089.429), stdev = 22.061
  CI (99.9%): [4028.063, 4066.377] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 47.67% complete, ETA 00:37:38
# Fork: 1 of 2
# Warmup Iteration   1: 10906.087 ns/op
# Warmup Iteration   2: 4576.710 ns/op
# Warmup Iteration   3: 4112.200 ns/op
Iteration   1: 4092.377 ns/op
Iteration   2: 4120.800 ns/op
Iteration   3: 4103.799 ns/op
Iteration   4: 4114.088 ns/op
Iteration   5: 4109.555 ns/op
Iteration   6: 4090.974 ns/op
Iteration   7: 4099.485 ns/op
Iteration   8: 4067.820 ns/op
Iteration   9: 4094.484 ns/op
Iteration  10: 4098.957 ns/op

# Run progress: 47.72% complete, ETA 00:37:35
# Fork: 2 of 2
# Warmup Iteration   1: 9671.672 ns/op
# Warmup Iteration   2: 4533.360 ns/op
# Warmup Iteration   3: 3907.485 ns/op
Iteration   1: 3912.383 ns/op
Iteration   2: 3916.919 ns/op
Iteration   3: 3935.661 ns/op
Iteration   4: 3922.351 ns/op
Iteration   5: 3910.400 ns/op
Iteration   6: 3911.092 ns/op
Iteration   7: 3913.783 ns/op
Iteration   8: 3910.961 ns/op
Iteration   9: 3911.848 ns/op
Iteration  10: 3921.671 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4007.970 ±(99.9%) 81.918 ns/op [Average]
  (min, avg, max) = (3910.400, 4007.970, 4120.800), stdev = 94.337
  CI (99.9%): [3926.052, 4089.888] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 47.78% complete, ETA 00:37:33
# Fork: 1 of 2
# Warmup Iteration   1: 6105.592 ns/op
# Warmup Iteration   2: 4498.925 ns/op
# Warmup Iteration   3: 4002.429 ns/op
Iteration   1: 3994.290 ns/op
Iteration   2: 3995.714 ns/op
Iteration   3: 4021.720 ns/op
Iteration   4: 3974.679 ns/op
Iteration   5: 3959.977 ns/op
Iteration   6: 3980.596 ns/op
Iteration   7: 3971.547 ns/op
Iteration   8: 3968.046 ns/op
Iteration   9: 3986.153 ns/op
Iteration  10: 3984.491 ns/op

# Run progress: 47.83% complete, ETA 00:37:30
# Fork: 2 of 2
# Warmup Iteration   1: 6320.190 ns/op
# Warmup Iteration   2: 4573.425 ns/op
# Warmup Iteration   3: 3993.886 ns/op
Iteration   1: 3987.175 ns/op
Iteration   2: 4021.328 ns/op
Iteration   3: 4006.821 ns/op
Iteration   4: 3971.475 ns/op
Iteration   5: 4001.056 ns/op
Iteration   6: 3956.654 ns/op
Iteration   7: 3999.105 ns/op
Iteration   8: 3982.864 ns/op
Iteration   9: 4009.770 ns/op
Iteration  10: 3958.417 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3986.594 ±(99.9%) 17.008 ns/op [Average]
  (min, avg, max) = (3956.654, 3986.594, 4021.720), stdev = 19.587
  CI (99.9%): [3969.586, 4003.602] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 47.89% complete, ETA 00:37:28
# Fork: 1 of 2
# Warmup Iteration   1: 13963.431 ns/op
# Warmup Iteration   2: 9726.325 ns/op
# Warmup Iteration   3: 8269.169 ns/op
Iteration   1: 8267.186 ns/op
Iteration   2: 8253.481 ns/op
Iteration   3: 8278.067 ns/op
Iteration   4: 8264.504 ns/op
Iteration   5: 8260.977 ns/op
Iteration   6: 8253.172 ns/op
Iteration   7: 8270.227 ns/op
Iteration   8: 8259.320 ns/op
Iteration   9: 8274.407 ns/op
Iteration  10: 8274.530 ns/op

# Run progress: 47.94% complete, ETA 00:37:26
# Fork: 2 of 2
# Warmup Iteration   1: 14518.595 ns/op
# Warmup Iteration   2: 9752.562 ns/op
# Warmup Iteration   3: 8285.886 ns/op
Iteration   1: 8273.971 ns/op
Iteration   2: 8272.193 ns/op
Iteration   3: 8310.719 ns/op
Iteration   4: 8257.833 ns/op
Iteration   5: 8275.805 ns/op
Iteration   6: 8264.250 ns/op
Iteration   7: 8281.954 ns/op
Iteration   8: 8274.544 ns/op
Iteration   9: 8290.167 ns/op
Iteration  10: 8288.149 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8272.273 ±(99.9%) 11.927 ns/op [Average]
  (min, avg, max) = (8253.172, 8272.273, 8310.719), stdev = 13.735
  CI (99.9%): [8260.346, 8284.200] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 48.00% complete, ETA 00:37:23
# Fork: 1 of 2
# Warmup Iteration   1: 38.808 ns/op
# Warmup Iteration   2: 65.073 ns/op
# Warmup Iteration   3: 35.671 ns/op
Iteration   1: 35.661 ns/op
Iteration   2: 35.644 ns/op
Iteration   3: 35.675 ns/op
Iteration   4: 35.629 ns/op
Iteration   5: 35.651 ns/op
Iteration   6: 36.145 ns/op
Iteration   7: 35.677 ns/op
Iteration   8: 34.494 ns/op
Iteration   9: 35.666 ns/op
Iteration  10: 35.667 ns/op

# Run progress: 48.06% complete, ETA 00:37:21
# Fork: 2 of 2
# Warmup Iteration   1: 37.753 ns/op
# Warmup Iteration   2: 66.494 ns/op
# Warmup Iteration   3: 35.673 ns/op
Iteration   1: 35.628 ns/op
Iteration   2: 35.734 ns/op
Iteration   3: 35.715 ns/op
Iteration   4: 35.700 ns/op
Iteration   5: 35.722 ns/op
Iteration   6: 36.124 ns/op
Iteration   7: 35.728 ns/op
Iteration   8: 34.426 ns/op
Iteration   9: 35.720 ns/op
Iteration  10: 35.654 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.603 ±(99.9%) 0.361 ns/op [Average]
  (min, avg, max) = (34.426, 35.603, 36.145), stdev = 0.416
  CI (99.9%): [35.241, 35.964] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 48.11% complete, ETA 00:37:18
# Fork: 1 of 2
# Warmup Iteration   1: 7686.068 ns/op
# Warmup Iteration   2: 4563.520 ns/op
# Warmup Iteration   3: 4544.955 ns/op
Iteration   1: 10223.415 ns/op
Iteration   2: 3320.615 ns/op
Iteration   3: 3313.292 ns/op
Iteration   4: 15434.741 ns/op
Iteration   5: 2909.883 ns/op
Iteration   6: 2915.118 ns/op
Iteration   7: 3122.243 ns/op
Iteration   8: 2936.107 ns/op
Iteration   9: 3055.703 ns/op
Iteration  10: 2810.046 ns/op

# Run progress: 48.17% complete, ETA 00:37:16
# Fork: 2 of 2
# Warmup Iteration   1: 6346.535 ns/op
# Warmup Iteration   2: 7896.357 ns/op
# Warmup Iteration   3: 4693.340 ns/op
Iteration   1: 13047.567 ns/op
Iteration   2: 3309.439 ns/op
Iteration   3: 3340.656 ns/op
Iteration   4: 13196.731 ns/op
Iteration   5: 3185.245 ns/op
Iteration   6: 3277.171 ns/op
Iteration   7: 3809.863 ns/op
Iteration   8: 3171.278 ns/op
Iteration   9: 3448.275 ns/op
Iteration  10: 3168.442 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5149.792 ±(99.9%) 3568.150 ns/op [Average]
  (min, avg, max) = (2810.046, 5149.792, 15434.741), stdev = 4109.087
  CI (99.9%): [1581.642, 8717.942] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 48.22% complete, ETA 00:37:14
# Fork: 1 of 2
# Warmup Iteration   1: 12551.129 ns/op
# Warmup Iteration   2: 6684.885 ns/op
# Warmup Iteration   3: 6480.380 ns/op
Iteration   1: 4345.433 ns/op
Iteration   2: 3645.663 ns/op
Iteration   3: 3690.264 ns/op
Iteration   4: 3760.563 ns/op
Iteration   5: 4356.768 ns/op
Iteration   6: 4885.785 ns/op
Iteration   7: 5875.684 ns/op
Iteration   8: 4543.678 ns/op
Iteration   9: 3365.766 ns/op
Iteration  10: 5356.149 ns/op

# Run progress: 48.28% complete, ETA 00:37:11
# Fork: 2 of 2
# Warmup Iteration   1: 12399.428 ns/op
# Warmup Iteration   2: 5474.527 ns/op
# Warmup Iteration   3: 6561.206 ns/op
Iteration   1: 4334.733 ns/op
Iteration   2: 3646.907 ns/op
Iteration   3: 3789.256 ns/op
Iteration   4: 3765.261 ns/op
Iteration   5: 4369.970 ns/op
Iteration   6: 4942.107 ns/op
Iteration   7: 9360.537 ns/op
Iteration   8: 4304.237 ns/op
Iteration   9: 3390.102 ns/op
Iteration  10: 4774.848 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4525.185 ±(99.9%) 1144.570 ns/op [Average]
  (min, avg, max) = (3365.766, 4525.185, 9360.537), stdev = 1318.088
  CI (99.9%): [3380.616, 5669.755] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 48.33% complete, ETA 00:37:09
# Fork: 1 of 2
# Warmup Iteration   1: 11393.925 ns/op
# Warmup Iteration   2: 7399.261 ns/op
# Warmup Iteration   3: 6074.124 ns/op
Iteration   1: 4376.536 ns/op
Iteration   2: 3746.638 ns/op
Iteration   3: 3745.388 ns/op
Iteration   4: 3760.579 ns/op
Iteration   5: 4226.412 ns/op
Iteration   6: 4777.425 ns/op
Iteration   7: 3958.535 ns/op
Iteration   8: 4135.196 ns/op
Iteration   9: 3306.624 ns/op
Iteration  10: 4510.239 ns/op

# Run progress: 48.39% complete, ETA 00:37:06
# Fork: 2 of 2
# Warmup Iteration   1: 10526.242 ns/op
# Warmup Iteration   2: 6994.347 ns/op
# Warmup Iteration   3: 5810.408 ns/op
Iteration   1: 4273.481 ns/op
Iteration   2: 3650.301 ns/op
Iteration   3: 3727.432 ns/op
Iteration   4: 3759.344 ns/op
Iteration   5: 4204.699 ns/op
Iteration   6: 4618.566 ns/op
Iteration   7: 3864.590 ns/op
Iteration   8: 4107.771 ns/op
Iteration   9: 3249.892 ns/op
Iteration  10: 4329.823 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4016.473 ±(99.9%) 356.069 ns/op [Average]
  (min, avg, max) = (3249.892, 4016.473, 4777.425), stdev = 410.049
  CI (99.9%): [3660.405, 4372.542] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 48.44% complete, ETA 00:37:04
# Fork: 1 of 2
# Warmup Iteration   1: 8529.625 ns/op
# Warmup Iteration   2: 5478.237 ns/op
# Warmup Iteration   3: 5086.510 ns/op
Iteration   1: 4172.134 ns/op
Iteration   2: 4414.139 ns/op
Iteration   3: 3717.620 ns/op
Iteration   4: 3553.250 ns/op
Iteration   5: 4085.383 ns/op
Iteration   6: 4469.971 ns/op
Iteration   7: 4073.920 ns/op
Iteration   8: 4118.307 ns/op
Iteration   9: 3203.733 ns/op
Iteration  10: 4311.644 ns/op

# Run progress: 48.50% complete, ETA 00:37:02
# Fork: 2 of 2
# Warmup Iteration   1: 7149.746 ns/op
# Warmup Iteration   2: 6723.615 ns/op
# Warmup Iteration   3: 5363.190 ns/op
Iteration   1: 4174.139 ns/op
Iteration   2: 5044.023 ns/op
Iteration   3: 3766.267 ns/op
Iteration   4: 3659.719 ns/op
Iteration   5: 4235.869 ns/op
Iteration   6: 4563.836 ns/op
Iteration   7: 4215.417 ns/op
Iteration   8: 4021.327 ns/op
Iteration   9: 3302.417 ns/op
Iteration  10: 4336.117 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4071.962 ±(99.9%) 381.454 ns/op [Average]
  (min, avg, max) = (3203.733, 4071.962, 5044.023), stdev = 439.283
  CI (99.9%): [3690.508, 4453.415] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 48.56% complete, ETA 00:36:59
# Fork: 1 of 2
# Warmup Iteration   1: 14823.473 ns/op
# Warmup Iteration   2: 11021.804 ns/op
# Warmup Iteration   3: 8014.675 ns/op
Iteration   1: 8031.787 ns/op
Iteration   2: 7973.239 ns/op
Iteration   3: 8008.050 ns/op
Iteration   4: 8001.723 ns/op
Iteration   5: 8008.759 ns/op
Iteration   6: 7956.593 ns/op
Iteration   7: 7975.141 ns/op
Iteration   8: 7979.360 ns/op
Iteration   9: 7998.989 ns/op
Iteration  10: 8017.384 ns/op

# Run progress: 48.61% complete, ETA 00:36:57
# Fork: 2 of 2
# Warmup Iteration   1: 13276.135 ns/op
# Warmup Iteration   2: 10955.568 ns/op
# Warmup Iteration   3: 7910.320 ns/op
Iteration   1: 7916.682 ns/op
Iteration   2: 7866.470 ns/op
Iteration   3: 7925.666 ns/op
Iteration   4: 7951.134 ns/op
Iteration   5: 7945.563 ns/op
Iteration   6: 7940.585 ns/op
Iteration   7: 7929.210 ns/op
Iteration   8: 7907.430 ns/op
Iteration   9: 7956.287 ns/op
Iteration  10: 7902.265 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7959.616 ±(99.9%) 38.168 ns/op [Average]
  (min, avg, max) = (7866.470, 7959.616, 8031.787), stdev = 43.954
  CI (99.9%): [7921.448, 7997.784] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 48.67% complete, ETA 00:36:54
# Fork: 1 of 2
# Warmup Iteration   1: 38.284 ns/op
# Warmup Iteration   2: 66.265 ns/op
# Warmup Iteration   3: 35.654 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.750 ns/op
Iteration   3: 35.677 ns/op
Iteration   4: 35.679 ns/op
Iteration   5: 35.701 ns/op
Iteration   6: 36.166 ns/op
Iteration   7: 35.685 ns/op
Iteration   8: 34.522 ns/op
Iteration   9: 35.633 ns/op
Iteration  10: 35.746 ns/op

# Run progress: 48.72% complete, ETA 00:36:52
# Fork: 2 of 2
# Warmup Iteration   1: 39.271 ns/op
# Warmup Iteration   2: 65.200 ns/op
# Warmup Iteration   3: 35.602 ns/op
Iteration   1: 35.688 ns/op
Iteration   2: 35.636 ns/op
Iteration   3: 35.688 ns/op
Iteration   4: 35.752 ns/op
Iteration   5: 35.649 ns/op
Iteration   6: 36.143 ns/op
Iteration   7: 35.695 ns/op
Iteration   8: 34.434 ns/op
Iteration   9: 35.759 ns/op
Iteration  10: 35.687 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.619 ±(99.9%) 0.362 ns/op [Average]
  (min, avg, max) = (34.434, 35.619, 36.166), stdev = 0.417
  CI (99.9%): [35.257, 35.981] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 48.78% complete, ETA 00:36:50
# Fork: 1 of 2
# Warmup Iteration   1: 1369.027 ns/op
# Warmup Iteration   2: 1215.395 ns/op
# Warmup Iteration   3: 1045.847 ns/op
Iteration   1: 1046.327 ns/op
Iteration   2: 1046.044 ns/op
Iteration   3: 1047.379 ns/op
Iteration   4: 1034.577 ns/op
Iteration   5: 1050.520 ns/op
Iteration   6: 1040.183 ns/op
Iteration   7: 1050.135 ns/op
Iteration   8: 1035.545 ns/op
Iteration   9: 1035.129 ns/op
Iteration  10: 1035.634 ns/op

# Run progress: 48.83% complete, ETA 00:36:47
# Fork: 2 of 2
# Warmup Iteration   1: 1453.544 ns/op
# Warmup Iteration   2: 1212.805 ns/op
# Warmup Iteration   3: 1045.784 ns/op
Iteration   1: 1046.370 ns/op
Iteration   2: 1046.203 ns/op
Iteration   3: 1047.437 ns/op
Iteration   4: 1034.759 ns/op
Iteration   5: 1050.647 ns/op
Iteration   6: 1040.151 ns/op
Iteration   7: 1050.393 ns/op
Iteration   8: 1035.288 ns/op
Iteration   9: 1035.173 ns/op
Iteration  10: 1035.986 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1042.194 ±(99.9%) 5.582 ns/op [Average]
  (min, avg, max) = (1034.577, 1042.194, 1050.647), stdev = 6.428
  CI (99.9%): [1036.612, 1047.776] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 48.89% complete, ETA 00:36:45
# Fork: 1 of 2
# Warmup Iteration   1: 599.323 ns/op
# Warmup Iteration   2: 574.890 ns/op
# Warmup Iteration   3: 487.808 ns/op
Iteration   1: 461.225 ns/op
Iteration   2: 461.869 ns/op
Iteration   3: 461.367 ns/op
Iteration   4: 486.295 ns/op
Iteration   5: 461.128 ns/op
Iteration   6: 462.449 ns/op
Iteration   7: 460.894 ns/op
Iteration   8: 464.572 ns/op
Iteration   9: 461.820 ns/op
Iteration  10: 462.920 ns/op

# Run progress: 48.94% complete, ETA 00:36:42
# Fork: 2 of 2
# Warmup Iteration   1: 1075.174 ns/op
# Warmup Iteration   2: 561.784 ns/op
# Warmup Iteration   3: 480.677 ns/op
Iteration   1: 480.854 ns/op
Iteration   2: 480.814 ns/op
Iteration   3: 480.440 ns/op
Iteration   4: 480.610 ns/op
Iteration   5: 480.943 ns/op
Iteration   6: 482.865 ns/op
Iteration   7: 481.210 ns/op
Iteration   8: 483.108 ns/op
Iteration   9: 480.892 ns/op
Iteration  10: 481.001 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  472.864 ±(99.9%) 8.826 ns/op [Average]
  (min, avg, max) = (460.894, 472.864, 486.295), stdev = 10.164
  CI (99.9%): [464.037, 481.690] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 49.00% complete, ETA 00:36:40
# Fork: 1 of 2
# Warmup Iteration   1: 852.120 ns/op
# Warmup Iteration   2: 546.013 ns/op
# Warmup Iteration   3: 477.297 ns/op
Iteration   1: 479.217 ns/op
Iteration   2: 477.808 ns/op
Iteration   3: 477.227 ns/op
Iteration   4: 479.052 ns/op
Iteration   5: 503.210 ns/op
Iteration   6: 485.682 ns/op
Iteration   7: 482.481 ns/op
Iteration   8: 484.710 ns/op
Iteration   9: 482.375 ns/op
Iteration  10: 478.569 ns/op

# Run progress: 49.06% complete, ETA 00:36:38
# Fork: 2 of 2
# Warmup Iteration   1: 1541.614 ns/op
# Warmup Iteration   2: 537.940 ns/op
# Warmup Iteration   3: 460.505 ns/op
Iteration   1: 461.233 ns/op
Iteration   2: 460.570 ns/op
Iteration   3: 460.578 ns/op
Iteration   4: 469.302 ns/op
Iteration   5: 465.506 ns/op
Iteration   6: 471.877 ns/op
Iteration   7: 461.636 ns/op
Iteration   8: 469.290 ns/op
Iteration   9: 464.222 ns/op
Iteration  10: 461.535 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  473.804 ±(99.9%) 9.744 ns/op [Average]
  (min, avg, max) = (460.570, 473.804, 503.210), stdev = 11.221
  CI (99.9%): [464.060, 483.548] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 49.11% complete, ETA 00:36:35
# Fork: 1 of 2
# Warmup Iteration   1: 719.736 ns/op
# Warmup Iteration   2: 552.802 ns/op
# Warmup Iteration   3: 482.910 ns/op
Iteration   1: 483.267 ns/op
Iteration   2: 484.056 ns/op
Iteration   3: 483.524 ns/op
Iteration   4: 482.851 ns/op
Iteration   5: 483.021 ns/op
Iteration   6: 483.559 ns/op
Iteration   7: 482.935 ns/op
Iteration   8: 486.220 ns/op
Iteration   9: 483.506 ns/op
Iteration  10: 482.977 ns/op

# Run progress: 49.17% complete, ETA 00:36:33
# Fork: 2 of 2
# Warmup Iteration   1: 724.568 ns/op
# Warmup Iteration   2: 549.555 ns/op
# Warmup Iteration   3: 482.666 ns/op
Iteration   1: 483.256 ns/op
Iteration   2: 483.968 ns/op
Iteration   3: 483.592 ns/op
Iteration   4: 483.328 ns/op
Iteration   5: 483.564 ns/op
Iteration   6: 483.006 ns/op
Iteration   7: 483.331 ns/op
Iteration   8: 485.422 ns/op
Iteration   9: 483.003 ns/op
Iteration  10: 483.150 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  483.577 ±(99.9%) 0.733 ns/op [Average]
  (min, avg, max) = (482.851, 483.577, 486.220), stdev = 0.844
  CI (99.9%): [482.844, 484.310] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 49.22% complete, ETA 00:36:30
# Fork: 1 of 2
# Warmup Iteration   1: 374.200 ns/op
# Warmup Iteration   2: 356.672 ns/op
# Warmup Iteration   3: 328.041 ns/op
Iteration   1: 328.063 ns/op
Iteration   2: 328.037 ns/op
Iteration   3: 327.998 ns/op
Iteration   4: 332.745 ns/op
Iteration   5: 332.642 ns/op
Iteration   6: 332.508 ns/op
Iteration   7: 332.573 ns/op
Iteration   8: 326.786 ns/op
Iteration   9: 332.453 ns/op
Iteration  10: 332.738 ns/op

# Run progress: 49.28% complete, ETA 00:36:28
# Fork: 2 of 2
# Warmup Iteration   1: 374.368 ns/op
# Warmup Iteration   2: 345.916 ns/op
# Warmup Iteration   3: 322.409 ns/op
Iteration   1: 322.313 ns/op
Iteration   2: 322.315 ns/op
Iteration   3: 322.427 ns/op
Iteration   4: 326.469 ns/op
Iteration   5: 326.501 ns/op
Iteration   6: 326.870 ns/op
Iteration   7: 326.506 ns/op
Iteration   8: 326.616 ns/op
Iteration   9: 326.784 ns/op
Iteration  10: 326.785 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  328.006 ±(99.9%) 3.072 ns/op [Average]
  (min, avg, max) = (322.313, 328.006, 332.745), stdev = 3.537
  CI (99.9%): [324.935, 331.078] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 49.33% complete, ETA 00:36:26
# Fork: 1 of 2
# Warmup Iteration   1: 37.798 ns/op
# Warmup Iteration   2: 66.361 ns/op
# Warmup Iteration   3: 35.680 ns/op
Iteration   1: 35.715 ns/op
Iteration   2: 35.669 ns/op
Iteration   3: 35.686 ns/op
Iteration   4: 35.631 ns/op
Iteration   5: 35.689 ns/op
Iteration   6: 36.153 ns/op
Iteration   7: 35.712 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.696 ns/op
Iteration  10: 35.605 ns/op

# Run progress: 49.39% complete, ETA 00:36:23
# Fork: 2 of 2
# Warmup Iteration   1: 38.638 ns/op
# Warmup Iteration   2: 66.755 ns/op
# Warmup Iteration   3: 35.745 ns/op
Iteration   1: 35.666 ns/op
Iteration   2: 35.789 ns/op
Iteration   3: 35.677 ns/op
Iteration   4: 35.671 ns/op
Iteration   5: 35.778 ns/op
Iteration   6: 36.191 ns/op
Iteration   7: 35.724 ns/op
Iteration   8: 34.422 ns/op
Iteration   9: 35.660 ns/op
Iteration  10: 35.683 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.616 ±(99.9%) 0.366 ns/op [Average]
  (min, avg, max) = (34.422, 35.616, 36.191), stdev = 0.422
  CI (99.9%): [35.250, 35.983] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 49.44% complete, ETA 00:36:21
# Fork: 1 of 2
# Warmup Iteration   1: 11629.876 ns/op
# Warmup Iteration   2: 9612.133 ns/op
# Warmup Iteration   3: 7054.208 ns/op
Iteration   1: 6952.318 ns/op
Iteration   2: 7978.195 ns/op
Iteration   3: 7003.383 ns/op
Iteration   4: 7092.303 ns/op
Iteration   5: 6596.135 ns/op
Iteration   6: 8063.285 ns/op
Iteration   7: 8284.176 ns/op
Iteration   8: 7123.245 ns/op
Iteration   9: 8267.824 ns/op
Iteration  10: 7035.628 ns/op

# Run progress: 49.50% complete, ETA 00:36:18
# Fork: 2 of 2
# Warmup Iteration   1: 8830.339 ns/op
# Warmup Iteration   2: 19982.184 ns/op
# Warmup Iteration   3: 7000.812 ns/op
Iteration   1: 6967.343 ns/op
Iteration   2: 7824.048 ns/op
Iteration   3: 7012.478 ns/op
Iteration   4: 6990.862 ns/op
Iteration   5: 6569.142 ns/op
Iteration   6: 7843.203 ns/op
Iteration   7: 8142.537 ns/op
Iteration   8: 7130.462 ns/op
Iteration   9: 8164.023 ns/op
Iteration  10: 6973.914 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7400.725 ±(99.9%) 510.927 ns/op [Average]
  (min, avg, max) = (6569.142, 7400.725, 8284.176), stdev = 588.384
  CI (99.9%): [6889.798, 7911.652] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 49.56% complete, ETA 00:36:16
# Fork: 1 of 2
# Warmup Iteration   1: 9987.984 ns/op
# Warmup Iteration   2: 5104.680 ns/op
# Warmup Iteration   3: 4240.993 ns/op
Iteration   1: 15873.279 ns/op
Iteration   2: 3828.469 ns/op
Iteration   3: 3857.252 ns/op
Iteration   4: 3801.456 ns/op
Iteration   5: 3402.891 ns/op
Iteration   6: 8024.434 ns/op
Iteration   7: 3984.454 ns/op
Iteration   8: 3802.575 ns/op
Iteration   9: 3960.002 ns/op
Iteration  10: 3882.690 ns/op

# Run progress: 49.61% complete, ETA 00:36:14
# Fork: 2 of 2
# Warmup Iteration   1: 10150.319 ns/op
# Warmup Iteration   2: 4986.468 ns/op
# Warmup Iteration   3: 5848.182 ns/op
Iteration   1: 8556.855 ns/op
Iteration   2: 3793.336 ns/op
Iteration   3: 3876.800 ns/op
Iteration   4: 3818.576 ns/op
Iteration   5: 3428.030 ns/op
Iteration   6: 14195.025 ns/op
Iteration   7: 4115.669 ns/op
Iteration   8: 3917.499 ns/op
Iteration   9: 4074.821 ns/op
Iteration  10: 3998.792 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5409.645 ±(99.9%) 3105.935 ns/op [Average]
  (min, avg, max) = (3402.891, 5409.645, 15873.279), stdev = 3576.799
  CI (99.9%): [2303.710, 8515.580] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 49.67% complete, ETA 00:36:11
# Fork: 1 of 2
# Warmup Iteration   1: 9116.129 ns/op
# Warmup Iteration   2: 5134.694 ns/op
# Warmup Iteration   3: 5461.763 ns/op
Iteration   1: 10779.593 ns/op
Iteration   2: 9944.770 ns/op
Iteration   3: 4050.454 ns/op
Iteration   4: 4025.183 ns/op
Iteration   5: 3548.289 ns/op
Iteration   6: 19090.179 ns/op
Iteration   7: 3548.605 ns/op
Iteration   8: 3469.493 ns/op
Iteration   9: 3734.019 ns/op
Iteration  10: 3561.820 ns/op

# Run progress: 49.72% complete, ETA 00:36:09
# Fork: 2 of 2
# Warmup Iteration   1: 9345.273 ns/op
# Warmup Iteration   2: 4879.568 ns/op
# Warmup Iteration   3: 4192.864 ns/op
Iteration   1: 14140.469 ns/op
Iteration   2: 12179.436 ns/op
Iteration   3: 4069.687 ns/op
Iteration   4: 4021.681 ns/op
Iteration   5: 3537.628 ns/op
Iteration   6: 10915.566 ns/op
Iteration   7: 3549.829 ns/op
Iteration   8: 3411.730 ns/op
Iteration   9: 3614.514 ns/op
Iteration  10: 3600.715 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6439.683 ±(99.9%) 4031.641 ns/op [Average]
  (min, avg, max) = (3411.730, 6439.683, 19090.179), stdev = 4642.844
  CI (99.9%): [2408.042, 10471.324] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 49.78% complete, ETA 00:36:06
# Fork: 1 of 2
# Warmup Iteration   1: 5812.094 ns/op
# Warmup Iteration   2: 15449.143 ns/op
# Warmup Iteration   3: 4549.135 ns/op
Iteration   1: 10457.227 ns/op
Iteration   2: 209000.597 ns/op
Iteration   3: 5092.470 ns/op
Iteration   4: 3651.664 ns/op
Iteration   5: 3611.655 ns/op
Iteration   6: 6555.530 ns/op
Iteration   7: 3655.978 ns/op
Iteration   8: 3498.086 ns/op
Iteration   9: 3701.533 ns/op
Iteration  10: 3641.544 ns/op

# Run progress: 49.83% complete, ETA 00:36:04
# Fork: 2 of 2
# Warmup Iteration   1: 6306.591 ns/op
# Warmup Iteration   2: 14208.532 ns/op
# Warmup Iteration   3: 4718.478 ns/op
Iteration   1: 73026.405 ns/op
Iteration   2: 5687.388 ns/op
Iteration   3: 3744.757 ns/op
Iteration   4: 3638.178 ns/op
Iteration   5: 3595.284 ns/op
Iteration   6: 5325.786 ns/op
Iteration   7: 3682.451 ns/op
Iteration   8: 3582.373 ns/op
Iteration   9: 3694.083 ns/op
Iteration  10: 3703.895 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18127.344 ±(99.9%) 41239.789 ns/op [Average]
  (min, avg, max) = (3498.086, 18127.344, 209000.597), stdev = 47491.802
  CI (99.9%): [≈ 0, 59367.133] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 49.89% complete, ETA 00:36:02
# Fork: 1 of 2
# Warmup Iteration   1: 17321.825 ns/op
# Warmup Iteration   2: 25075.986 ns/op
# Warmup Iteration   3: 11202.255 ns/op
Iteration   1: 10983.017 ns/op
Iteration   2: 11406.083 ns/op
Iteration   3: 11126.074 ns/op
Iteration   4: 11150.828 ns/op
Iteration   5: 11264.168 ns/op
Iteration   6: 11047.856 ns/op
Iteration   7: 11057.027 ns/op
Iteration   8: 10421.387 ns/op
Iteration   9: 11397.430 ns/op
Iteration  10: 11198.011 ns/op

# Run progress: 49.94% complete, ETA 00:35:59
# Fork: 2 of 2
# Warmup Iteration   1: 18094.506 ns/op
# Warmup Iteration   2: 20116.610 ns/op
# Warmup Iteration   3: 11373.109 ns/op
Iteration   1: 11119.731 ns/op
Iteration   2: 11530.538 ns/op
Iteration   3: 11282.161 ns/op
Iteration   4: 11236.549 ns/op
Iteration   5: 11489.513 ns/op
Iteration   6: 11185.988 ns/op
Iteration   7: 11068.086 ns/op
Iteration   8: 10533.684 ns/op
Iteration   9: 11398.358 ns/op
Iteration  10: 11340.485 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11161.849 ±(99.9%) 243.132 ns/op [Average]
  (min, avg, max) = (10421.387, 11161.849, 11530.538), stdev = 279.992
  CI (99.9%): [10918.716, 11404.981] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 50.00% complete, ETA 00:35:57
# Fork: 1 of 2
# Warmup Iteration   1: 38.040 ns/op
# Warmup Iteration   2: 64.189 ns/op
# Warmup Iteration   3: 35.666 ns/op
Iteration   1: 35.607 ns/op
Iteration   2: 35.640 ns/op
Iteration   3: 35.728 ns/op
Iteration   4: 35.641 ns/op
Iteration   5: 35.669 ns/op
Iteration   6: 36.162 ns/op
Iteration   7: 35.681 ns/op
Iteration   8: 34.520 ns/op
Iteration   9: 35.659 ns/op
Iteration  10: 35.693 ns/op

# Run progress: 50.06% complete, ETA 00:35:54
# Fork: 2 of 2
# Warmup Iteration   1: 38.092 ns/op
# Warmup Iteration   2: 67.744 ns/op
# Warmup Iteration   3: 35.688 ns/op
Iteration   1: 35.666 ns/op
Iteration   2: 35.699 ns/op
Iteration   3: 35.673 ns/op
Iteration   4: 35.708 ns/op
Iteration   5: 35.671 ns/op
Iteration   6: 36.179 ns/op
Iteration   7: 35.669 ns/op
Iteration   8: 34.542 ns/op
Iteration   9: 35.669 ns/op
Iteration  10: 35.722 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.610 ±(99.9%) 0.347 ns/op [Average]
  (min, avg, max) = (34.520, 35.610, 36.179), stdev = 0.400
  CI (99.9%): [35.263, 35.957] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 50.11% complete, ETA 00:35:52
# Fork: 1 of 2
# Warmup Iteration   1: 9865.887 ns/op
# Warmup Iteration   2: 6978.215 ns/op
# Warmup Iteration   3: 5949.665 ns/op
Iteration   1: 5954.163 ns/op
Iteration   2: 5956.438 ns/op
Iteration   3: 5979.939 ns/op
Iteration   4: 5948.427 ns/op
Iteration   5: 5959.741 ns/op
Iteration   6: 5945.227 ns/op
Iteration   7: 5955.483 ns/op
Iteration   8: 5945.999 ns/op
Iteration   9: 5940.768 ns/op
Iteration  10: 5961.807 ns/op

# Run progress: 50.17% complete, ETA 00:35:50
# Fork: 2 of 2
# Warmup Iteration   1: 9400.531 ns/op
# Warmup Iteration   2: 6868.952 ns/op
# Warmup Iteration   3: 5908.971 ns/op
Iteration   1: 5940.228 ns/op
Iteration   2: 5925.470 ns/op
Iteration   3: 5948.833 ns/op
Iteration   4: 5907.249 ns/op
Iteration   5: 5934.431 ns/op
Iteration   6: 5933.699 ns/op
Iteration   7: 5907.662 ns/op
Iteration   8: 5910.940 ns/op
Iteration   9: 5891.328 ns/op
Iteration  10: 5899.949 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5937.389 ±(99.9%) 20.380 ns/op [Average]
  (min, avg, max) = (5891.328, 5937.389, 5979.939), stdev = 23.469
  CI (99.9%): [5917.009, 5957.769] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 50.22% complete, ETA 00:35:47
# Fork: 1 of 2
# Warmup Iteration   1: 15415.391 ns/op
# Warmup Iteration   2: 7631.306 ns/op
# Warmup Iteration   3: 6695.613 ns/op
Iteration   1: 6754.725 ns/op
Iteration   2: 6729.833 ns/op
Iteration   3: 6727.443 ns/op
Iteration   4: 6755.915 ns/op
Iteration   5: 6698.105 ns/op
Iteration   6: 6716.067 ns/op
Iteration   7: 6728.160 ns/op
Iteration   8: 6738.533 ns/op
Iteration   9: 6721.284 ns/op
Iteration  10: 6729.396 ns/op

# Run progress: 50.28% complete, ETA 00:35:45
# Fork: 2 of 2
# Warmup Iteration   1: 17295.790 ns/op
# Warmup Iteration   2: 7548.803 ns/op
# Warmup Iteration   3: 6657.579 ns/op
Iteration   1: 6672.220 ns/op
Iteration   2: 6648.689 ns/op
Iteration   3: 6666.508 ns/op
Iteration   4: 6680.426 ns/op
Iteration   5: 6660.273 ns/op
Iteration   6: 6679.889 ns/op
Iteration   7: 6679.451 ns/op
Iteration   8: 6684.686 ns/op
Iteration   9: 6700.472 ns/op
Iteration  10: 6663.475 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6701.778 ±(99.9%) 28.482 ns/op [Average]
  (min, avg, max) = (6648.689, 6701.778, 6755.915), stdev = 32.800
  CI (99.9%): [6673.295, 6730.260] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 50.33% complete, ETA 00:35:42
# Fork: 1 of 2
# Warmup Iteration   1: 14614.642 ns/op
# Warmup Iteration   2: 8098.300 ns/op
# Warmup Iteration   3: 6671.040 ns/op
Iteration   1: 6678.428 ns/op
Iteration   2: 6673.274 ns/op
Iteration   3: 6634.658 ns/op
Iteration   4: 6646.214 ns/op
Iteration   5: 6637.059 ns/op
Iteration   6: 6644.306 ns/op
Iteration   7: 6667.327 ns/op
Iteration   8: 6644.926 ns/op
Iteration   9: 6657.673 ns/op
Iteration  10: 6646.639 ns/op

# Run progress: 50.39% complete, ETA 00:35:40
# Fork: 2 of 2
# Warmup Iteration   1: 22099.339 ns/op
# Warmup Iteration   2: 7444.228 ns/op
# Warmup Iteration   3: 6996.435 ns/op
Iteration   1: 6675.471 ns/op
Iteration   2: 6639.830 ns/op
Iteration   3: 6663.111 ns/op
Iteration   4: 6645.991 ns/op
Iteration   5: 6673.755 ns/op
Iteration   6: 6673.728 ns/op
Iteration   7: 6662.729 ns/op
Iteration   8: 6667.039 ns/op
Iteration   9: 6697.677 ns/op
Iteration  10: 6648.457 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6658.915 ±(99.9%) 14.641 ns/op [Average]
  (min, avg, max) = (6634.658, 6658.915, 6697.677), stdev = 16.861
  CI (99.9%): [6644.273, 6673.556] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 50.44% complete, ETA 00:35:38
# Fork: 1 of 2
# Warmup Iteration   1: 8965.092 ns/op
# Warmup Iteration   2: 6744.383 ns/op
# Warmup Iteration   3: 5700.440 ns/op
Iteration   1: 5664.260 ns/op
Iteration   2: 5686.660 ns/op
Iteration   3: 5675.443 ns/op
Iteration   4: 5706.798 ns/op
Iteration   5: 5692.696 ns/op
Iteration   6: 5643.776 ns/op
Iteration   7: 5668.817 ns/op
Iteration   8: 5651.249 ns/op
Iteration   9: 5611.418 ns/op
Iteration  10: 5662.338 ns/op

# Run progress: 50.50% complete, ETA 00:35:35
# Fork: 2 of 2
# Warmup Iteration   1: 9148.171 ns/op
# Warmup Iteration   2: 6358.905 ns/op
# Warmup Iteration   3: 5558.502 ns/op
Iteration   1: 5541.874 ns/op
Iteration   2: 5537.338 ns/op
Iteration   3: 5564.640 ns/op
Iteration   4: 5561.081 ns/op
Iteration   5: 5559.762 ns/op
Iteration   6: 5591.769 ns/op
Iteration   7: 5540.388 ns/op
Iteration   8: 5551.094 ns/op
Iteration   9: 5518.980 ns/op
Iteration  10: 5562.002 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5609.619 ±(99.9%) 54.369 ns/op [Average]
  (min, avg, max) = (5518.980, 5609.619, 5706.798), stdev = 62.612
  CI (99.9%): [5555.250, 5663.988] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 50.56% complete, ETA 00:35:33
# Fork: 1 of 2
# Warmup Iteration   1: 15858.285 ns/op
# Warmup Iteration   2: 10814.722 ns/op
# Warmup Iteration   3: 9460.234 ns/op
Iteration   1: 9396.102 ns/op
Iteration   2: 9390.408 ns/op
Iteration   3: 9404.624 ns/op
Iteration   4: 9546.744 ns/op
Iteration   5: 9562.549 ns/op
Iteration   6: 9583.248 ns/op
Iteration   7: 9585.287 ns/op
Iteration   8: 9542.737 ns/op
Iteration   9: 9571.725 ns/op
Iteration  10: 9602.815 ns/op

# Run progress: 50.61% complete, ETA 00:35:30
# Fork: 2 of 2
# Warmup Iteration   1: 16433.514 ns/op
# Warmup Iteration   2: 10632.488 ns/op
# Warmup Iteration   3: 9176.713 ns/op
Iteration   1: 9159.082 ns/op
Iteration   2: 9156.389 ns/op
Iteration   3: 9168.096 ns/op
Iteration   4: 9085.282 ns/op
Iteration   5: 9080.817 ns/op
Iteration   6: 9129.856 ns/op
Iteration   7: 9082.442 ns/op
Iteration   8: 9080.505 ns/op
Iteration   9: 9073.957 ns/op
Iteration  10: 9117.731 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9316.020 ±(99.9%) 188.982 ns/op [Average]
  (min, avg, max) = (9073.957, 9316.020, 9602.815), stdev = 217.632
  CI (99.9%): [9127.038, 9505.002] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 50.67% complete, ETA 00:35:28
# Fork: 1 of 2
# Warmup Iteration   1: 38.303 ns/op
# Warmup Iteration   2: 64.468 ns/op
# Warmup Iteration   3: 35.686 ns/op
Iteration   1: 35.710 ns/op
Iteration   2: 35.657 ns/op
Iteration   3: 35.731 ns/op
Iteration   4: 35.619 ns/op
Iteration   5: 35.614 ns/op
Iteration   6: 36.117 ns/op
Iteration   7: 35.670 ns/op
Iteration   8: 34.530 ns/op
Iteration   9: 35.635 ns/op
Iteration  10: 35.606 ns/op

# Run progress: 50.72% complete, ETA 00:35:26
# Fork: 2 of 2
# Warmup Iteration   1: 38.422 ns/op
# Warmup Iteration   2: 66.414 ns/op
# Warmup Iteration   3: 35.680 ns/op
Iteration   1: 35.698 ns/op
Iteration   2: 35.650 ns/op
Iteration   3: 35.648 ns/op
Iteration   4: 35.681 ns/op
Iteration   5: 35.631 ns/op
Iteration   6: 36.139 ns/op
Iteration   7: 35.633 ns/op
Iteration   8: 50.694 ns/op
Iteration   9: 35.630 ns/op
Iteration  10: 35.667 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  36.398 ±(99.9%) 2.934 ns/op [Average]
  (min, avg, max) = (34.530, 36.398, 50.694), stdev = 3.378
  CI (99.9%): [33.464, 39.332] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 50.78% complete, ETA 00:35:23
# Fork: 1 of 2
# Warmup Iteration   1: 12057.544 ns/op
# Warmup Iteration   2: 9217.578 ns/op
# Warmup Iteration   3: 8013.364 ns/op
Iteration   1: 8012.507 ns/op
Iteration   2: 7963.258 ns/op
Iteration   3: 8026.911 ns/op
Iteration   4: 8000.652 ns/op
Iteration   5: 8062.615 ns/op
Iteration   6: 8019.677 ns/op
Iteration   7: 8042.236 ns/op
Iteration   8: 7972.425 ns/op
Iteration   9: 8021.663 ns/op
Iteration  10: 8008.602 ns/op

# Run progress: 50.83% complete, ETA 00:35:21
# Fork: 2 of 2
# Warmup Iteration   1: 14025.647 ns/op
# Warmup Iteration   2: 10700.789 ns/op
# Warmup Iteration   3: 9474.614 ns/op
Iteration   1: 9529.184 ns/op
Iteration   2: 9464.992 ns/op
Iteration   3: 9522.492 ns/op
Iteration   4: 9465.582 ns/op
Iteration   5: 9347.700 ns/op
Iteration   6: 9606.282 ns/op
Iteration   7: 9446.171 ns/op
Iteration   8: 9451.202 ns/op
Iteration   9: 9404.591 ns/op
Iteration  10: 9416.002 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8739.237 ±(99.9%) 648.671 ns/op [Average]
  (min, avg, max) = (7963.258, 8739.237, 9606.282), stdev = 747.011
  CI (99.9%): [8090.566, 9387.909] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 50.89% complete, ETA 00:35:18
# Fork: 1 of 2
# Warmup Iteration   1: 16406.313 ns/op
# Warmup Iteration   2: 5824.670 ns/op
# Warmup Iteration   3: 5150.272 ns/op
Iteration   1: 5202.322 ns/op
Iteration   2: 5152.905 ns/op
Iteration   3: 5193.995 ns/op
Iteration   4: 5161.271 ns/op
Iteration   5: 5163.345 ns/op
Iteration   6: 5166.877 ns/op
Iteration   7: 5162.843 ns/op
Iteration   8: 5173.219 ns/op
Iteration   9: 5172.548 ns/op
Iteration  10: 5170.400 ns/op

# Run progress: 50.94% complete, ETA 00:35:16
# Fork: 2 of 2
# Warmup Iteration   1: 13046.415 ns/op
# Warmup Iteration   2: 5986.332 ns/op
# Warmup Iteration   3: 5167.621 ns/op
Iteration   1: 5219.376 ns/op
Iteration   2: 5169.719 ns/op
Iteration   3: 5170.777 ns/op
Iteration   4: 5166.227 ns/op
Iteration   5: 5196.635 ns/op
Iteration   6: 5173.941 ns/op
Iteration   7: 5179.228 ns/op
Iteration   8: 5165.866 ns/op
Iteration   9: 5177.204 ns/op
Iteration  10: 5174.365 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5175.653 ±(99.9%) 13.835 ns/op [Average]
  (min, avg, max) = (5152.905, 5175.653, 5219.376), stdev = 15.933
  CI (99.9%): [5161.818, 5189.488] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 51.00% complete, ETA 00:35:14
# Fork: 1 of 2
# Warmup Iteration   1: 11411.983 ns/op
# Warmup Iteration   2: 5355.696 ns/op
# Warmup Iteration   3: 4734.554 ns/op
Iteration   1: 4773.146 ns/op
Iteration   2: 4759.604 ns/op
Iteration   3: 4768.691 ns/op
Iteration   4: 4732.973 ns/op
Iteration   5: 4760.343 ns/op
Iteration   6: 4731.116 ns/op
Iteration   7: 4728.700 ns/op
Iteration   8: 4733.796 ns/op
Iteration   9: 4734.580 ns/op
Iteration  10: 4768.421 ns/op

# Run progress: 51.06% complete, ETA 00:35:11
# Fork: 2 of 2
# Warmup Iteration   1: 14454.553 ns/op
# Warmup Iteration   2: 5836.960 ns/op
# Warmup Iteration   3: 4865.623 ns/op
Iteration   1: 4908.405 ns/op
Iteration   2: 4864.171 ns/op
Iteration   3: 4906.781 ns/op
Iteration   4: 4887.472 ns/op
Iteration   5: 4858.313 ns/op
Iteration   6: 4886.411 ns/op
Iteration   7: 4865.167 ns/op
Iteration   8: 4866.843 ns/op
Iteration   9: 4866.845 ns/op
Iteration  10: 4861.590 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4813.168 ±(99.9%) 59.159 ns/op [Average]
  (min, avg, max) = (4728.700, 4813.168, 4908.405), stdev = 68.127
  CI (99.9%): [4754.009, 4872.327] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 51.11% complete, ETA 00:35:09
# Fork: 1 of 2
# Warmup Iteration   1: 8494.261 ns/op
# Warmup Iteration   2: 5390.931 ns/op
# Warmup Iteration   3: 4702.590 ns/op
Iteration   1: 4694.220 ns/op
Iteration   2: 4722.061 ns/op
Iteration   3: 4738.947 ns/op
Iteration   4: 4748.586 ns/op
Iteration   5: 4715.134 ns/op
Iteration   6: 4741.544 ns/op
Iteration   7: 4716.581 ns/op
Iteration   8: 4734.153 ns/op
Iteration   9: 4747.818 ns/op
Iteration  10: 4762.149 ns/op

# Run progress: 51.17% complete, ETA 00:35:06
# Fork: 2 of 2
# Warmup Iteration   1: 12720.581 ns/op
# Warmup Iteration   2: 5838.032 ns/op
# Warmup Iteration   3: 5134.302 ns/op
Iteration   1: 5123.286 ns/op
Iteration   2: 5150.889 ns/op
Iteration   3: 5137.469 ns/op
Iteration   4: 5146.618 ns/op
Iteration   5: 5106.758 ns/op
Iteration   6: 5108.282 ns/op
Iteration   7: 5138.232 ns/op
Iteration   8: 5118.722 ns/op
Iteration   9: 5133.360 ns/op
Iteration  10: 5142.792 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4931.380 ±(99.9%) 178.173 ns/op [Average]
  (min, avg, max) = (4694.220, 4931.380, 5150.889), stdev = 205.185
  CI (99.9%): [4753.207, 5109.553] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 51.22% complete, ETA 00:35:04
# Fork: 1 of 2
# Warmup Iteration   1: 14016.384 ns/op
# Warmup Iteration   2: 9529.823 ns/op
# Warmup Iteration   3: 8029.035 ns/op
Iteration   1: 7953.056 ns/op
Iteration   2: 7941.514 ns/op
Iteration   3: 7959.912 ns/op
Iteration   4: 7944.895 ns/op
Iteration   5: 7960.040 ns/op
Iteration   6: 7937.938 ns/op
Iteration   7: 7950.724 ns/op
Iteration   8: 7967.981 ns/op
Iteration   9: 7967.070 ns/op
Iteration  10: 8041.735 ns/op

# Run progress: 51.28% complete, ETA 00:35:02
# Fork: 2 of 2
# Warmup Iteration   1: 13929.464 ns/op
# Warmup Iteration   2: 9393.668 ns/op
# Warmup Iteration   3: 7960.637 ns/op
Iteration   1: 7948.313 ns/op
Iteration   2: 7931.819 ns/op
Iteration   3: 7970.704 ns/op
Iteration   4: 7963.574 ns/op
Iteration   5: 7963.619 ns/op
Iteration   6: 7939.259 ns/op
Iteration   7: 7963.191 ns/op
Iteration   8: 7952.441 ns/op
Iteration   9: 7963.753 ns/op
Iteration  10: 7967.734 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7959.464 ±(99.9%) 19.541 ns/op [Average]
  (min, avg, max) = (7931.819, 7959.464, 8041.735), stdev = 22.504
  CI (99.9%): [7939.922, 7979.005] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 51.33% complete, ETA 00:34:59
# Fork: 1 of 2
# Warmup Iteration   1: 38.932 ns/op
# Warmup Iteration   2: 63.630 ns/op
# Warmup Iteration   3: 35.707 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.668 ns/op
Iteration   3: 35.671 ns/op
Iteration   4: 35.606 ns/op
Iteration   5: 35.674 ns/op
Iteration   6: 36.127 ns/op
Iteration   7: 35.691 ns/op
Iteration   8: 34.457 ns/op
Iteration   9: 35.670 ns/op
Iteration  10: 35.672 ns/op

# Run progress: 51.39% complete, ETA 00:34:57
# Fork: 2 of 2
# Warmup Iteration   1: 51.718 ns/op
# Warmup Iteration   2: 66.858 ns/op
# Warmup Iteration   3: 35.613 ns/op
Iteration   1: 35.629 ns/op
Iteration   2: 35.633 ns/op
Iteration   3: 35.675 ns/op
Iteration   4: 35.628 ns/op
Iteration   5: 35.610 ns/op
Iteration   6: 36.105 ns/op
Iteration   7: 35.667 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.676 ns/op
Iteration  10: 35.638 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.585 ±(99.9%) 0.349 ns/op [Average]
  (min, avg, max) = (34.457, 35.585, 36.127), stdev = 0.402
  CI (99.9%): [35.236, 35.935] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 51.44% complete, ETA 00:34:54
# Fork: 1 of 2
# Warmup Iteration   1: 6208.019 ns/op
# Warmup Iteration   2: 5585.964 ns/op
# Warmup Iteration   3: 6162.085 ns/op
Iteration   1: 6727.819 ns/op
Iteration   2: 3564.689 ns/op
Iteration   3: 3451.990 ns/op
Iteration   4: 9597.169 ns/op
Iteration   5: 3143.149 ns/op
Iteration   6: 3484.941 ns/op
Iteration   7: 2995.742 ns/op
Iteration   8: 2938.316 ns/op
Iteration   9: 3127.178 ns/op
Iteration  10: 3962.146 ns/op

# Run progress: 51.50% complete, ETA 00:34:52
# Fork: 2 of 2
# Warmup Iteration   1: 3866.179 ns/op
# Warmup Iteration   2: 5996.887 ns/op
# Warmup Iteration   3: 4973.156 ns/op
Iteration   1: 10876.836 ns/op
Iteration   2: 4114.362 ns/op
Iteration   3: 3679.353 ns/op
Iteration   4: 11163.701 ns/op
Iteration   5: 3022.226 ns/op
Iteration   6: 3335.551 ns/op
Iteration   7: 2863.248 ns/op
Iteration   8: 2856.678 ns/op
Iteration   9: 2975.068 ns/op
Iteration  10: 3797.060 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4583.861 ±(99.9%) 2358.431 ns/op [Average]
  (min, avg, max) = (2856.678, 4583.861, 11163.701), stdev = 2715.973
  CI (99.9%): [2225.430, 6942.292] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 51.56% complete, ETA 00:34:50
# Fork: 1 of 2
# Warmup Iteration   1: 14782.699 ns/op
# Warmup Iteration   2: 6017.412 ns/op
# Warmup Iteration   3: 6217.439 ns/op
Iteration   1: 4668.571 ns/op
Iteration   2: 3655.194 ns/op
Iteration   3: 4701.535 ns/op
Iteration   4: 4097.733 ns/op
Iteration   5: 8722.669 ns/op
Iteration   6: 3712.145 ns/op
Iteration   7: 5203.358 ns/op
Iteration   8: 4500.739 ns/op
Iteration   9: 4559.714 ns/op
Iteration  10: 5107.698 ns/op

# Run progress: 51.61% complete, ETA 00:34:47
# Fork: 2 of 2
# Warmup Iteration   1: 10694.517 ns/op
# Warmup Iteration   2: 7292.161 ns/op
# Warmup Iteration   3: 5998.925 ns/op
Iteration   1: 4454.458 ns/op
Iteration   2: 3562.887 ns/op
Iteration   3: 6999.320 ns/op
Iteration   4: 4008.756 ns/op
Iteration   5: 6495.273 ns/op
Iteration   6: 3694.865 ns/op
Iteration   7: 4200.749 ns/op
Iteration   8: 4298.321 ns/op
Iteration   9: 3980.931 ns/op
Iteration  10: 4694.182 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4765.955 ±(99.9%) 1114.249 ns/op [Average]
  (min, avg, max) = (3562.887, 4765.955, 8722.669), stdev = 1283.171
  CI (99.9%): [3651.706, 5880.204] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 51.67% complete, ETA 00:34:45
# Fork: 1 of 2
# Warmup Iteration   1: 12684.870 ns/op
# Warmup Iteration   2: 8083.460 ns/op
# Warmup Iteration   3: 7288.008 ns/op
Iteration   1: 4357.279 ns/op
Iteration   2: 3613.171 ns/op
Iteration   3: 4406.987 ns/op
Iteration   4: 3895.247 ns/op
Iteration   5: 8071.462 ns/op
Iteration   6: 3515.702 ns/op
Iteration   7: 3933.233 ns/op
Iteration   8: 4028.028 ns/op
Iteration   9: 3973.052 ns/op
Iteration  10: 4445.316 ns/op

# Run progress: 51.72% complete, ETA 00:34:42
# Fork: 2 of 2
# Warmup Iteration   1: 9100.098 ns/op
# Warmup Iteration   2: 8717.311 ns/op
# Warmup Iteration   3: 5996.627 ns/op
Iteration   1: 4374.695 ns/op
Iteration   2: 3518.633 ns/op
Iteration   3: 4293.899 ns/op
Iteration   4: 3817.313 ns/op
Iteration   5: 8321.309 ns/op
Iteration   6: 3702.210 ns/op
Iteration   7: 4184.934 ns/op
Iteration   8: 4119.378 ns/op
Iteration   9: 4106.132 ns/op
Iteration  10: 4495.703 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4458.684 ±(99.9%) 1141.299 ns/op [Average]
  (min, avg, max) = (3515.702, 4458.684, 8321.309), stdev = 1314.322
  CI (99.9%): [3317.385, 5599.983] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 51.78% complete, ETA 00:34:40
# Fork: 1 of 2
# Warmup Iteration   1: 7497.534 ns/op
# Warmup Iteration   2: 6838.937 ns/op
# Warmup Iteration   3: 6111.439 ns/op
Iteration   1: 4278.023 ns/op
Iteration   2: 3744.617 ns/op
Iteration   3: 4322.931 ns/op
Iteration   4: 4288.784 ns/op
Iteration   5: 6052.631 ns/op
Iteration   6: 3744.452 ns/op
Iteration   7: 3924.793 ns/op
Iteration   8: 4237.307 ns/op
Iteration   9: 3872.068 ns/op
Iteration  10: 4455.186 ns/op

# Run progress: 51.83% complete, ETA 00:34:38
# Fork: 2 of 2
# Warmup Iteration   1: 7572.877 ns/op
# Warmup Iteration   2: 6609.060 ns/op
# Warmup Iteration   3: 6421.506 ns/op
Iteration   1: 4234.233 ns/op
Iteration   2: 3717.788 ns/op
Iteration   3: 4218.157 ns/op
Iteration   4: 4285.621 ns/op
Iteration   5: 7003.668 ns/op
Iteration   6: 3798.337 ns/op
Iteration   7: 3981.799 ns/op
Iteration   8: 4212.254 ns/op
Iteration   9: 3868.332 ns/op
Iteration  10: 4445.817 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4334.340 ±(99.9%) 697.151 ns/op [Average]
  (min, avg, max) = (3717.788, 4334.340, 7003.668), stdev = 802.841
  CI (99.9%): [3637.188, 5031.491] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 51.89% complete, ETA 00:34:35
# Fork: 1 of 2
# Warmup Iteration   1: 13427.156 ns/op
# Warmup Iteration   2: 9043.515 ns/op
# Warmup Iteration   3: 7755.669 ns/op
Iteration   1: 7738.066 ns/op
Iteration   2: 7723.168 ns/op
Iteration   3: 7734.894 ns/op
Iteration   4: 7733.363 ns/op
Iteration   5: 7736.897 ns/op
Iteration   6: 7728.008 ns/op
Iteration   7: 7731.592 ns/op
Iteration   8: 7756.132 ns/op
Iteration   9: 7759.810 ns/op
Iteration  10: 7749.684 ns/op

# Run progress: 51.94% complete, ETA 00:34:33
# Fork: 2 of 2
# Warmup Iteration   1: 13575.008 ns/op
# Warmup Iteration   2: 9498.405 ns/op
# Warmup Iteration   3: 8026.362 ns/op
Iteration   1: 7933.511 ns/op
Iteration   2: 7904.824 ns/op
Iteration   3: 7936.336 ns/op
Iteration   4: 7947.066 ns/op
Iteration   5: 7942.710 ns/op
Iteration   6: 7923.968 ns/op
Iteration   7: 7957.715 ns/op
Iteration   8: 7930.128 ns/op
Iteration   9: 7936.768 ns/op
Iteration  10: 8010.900 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7840.777 ±(99.9%) 92.336 ns/op [Average]
  (min, avg, max) = (7723.168, 7840.777, 8010.900), stdev = 106.334
  CI (99.9%): [7748.441, 7933.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 52.00% complete, ETA 00:34:30
# Fork: 1 of 2
# Warmup Iteration   1: 38.082 ns/op
# Warmup Iteration   2: 67.459 ns/op
# Warmup Iteration   3: 35.672 ns/op
Iteration   1: 35.694 ns/op
Iteration   2: 35.682 ns/op
Iteration   3: 35.730 ns/op
Iteration   4: 35.684 ns/op
Iteration   5: 35.724 ns/op
Iteration   6: 36.154 ns/op
Iteration   7: 35.746 ns/op
Iteration   8: 34.551 ns/op
Iteration   9: 35.658 ns/op
Iteration  10: 35.694 ns/op

# Run progress: 52.06% complete, ETA 00:34:28
# Fork: 2 of 2
# Warmup Iteration   1: 37.902 ns/op
# Warmup Iteration   2: 66.865 ns/op
# Warmup Iteration   3: 35.692 ns/op
Iteration   1: 35.659 ns/op
Iteration   2: 35.681 ns/op
Iteration   3: 35.700 ns/op
Iteration   4: 35.692 ns/op
Iteration   5: 35.701 ns/op
Iteration   6: 36.122 ns/op
Iteration   7: 35.744 ns/op
Iteration   8: 34.527 ns/op
Iteration   9: 35.735 ns/op
Iteration  10: 35.723 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.630 ±(99.9%) 0.345 ns/op [Average]
  (min, avg, max) = (34.527, 35.630, 36.154), stdev = 0.397
  CI (99.9%): [35.285, 35.975] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 52.11% complete, ETA 00:34:26
# Fork: 1 of 2
# Warmup Iteration   1: 283.840 ns/op
# Warmup Iteration   2: 281.106 ns/op
# Warmup Iteration   3: 238.008 ns/op
Iteration   1: 237.836 ns/op
Iteration   2: 238.407 ns/op
Iteration   3: 238.128 ns/op
Iteration   4: 235.640 ns/op
Iteration   5: 235.292 ns/op
Iteration   6: 235.133 ns/op
Iteration   7: 235.426 ns/op
Iteration   8: 236.253 ns/op
Iteration   9: 235.349 ns/op
Iteration  10: 235.259 ns/op

# Run progress: 52.17% complete, ETA 00:34:23
# Fork: 2 of 2
# Warmup Iteration   1: 284.930 ns/op
# Warmup Iteration   2: 274.587 ns/op
# Warmup Iteration   3: 237.872 ns/op
Iteration   1: 238.392 ns/op
Iteration   2: 238.370 ns/op
Iteration   3: 237.950 ns/op
Iteration   4: 235.469 ns/op
Iteration   5: 235.214 ns/op
Iteration   6: 235.836 ns/op
Iteration   7: 235.205 ns/op
Iteration   8: 237.043 ns/op
Iteration   9: 235.308 ns/op
Iteration  10: 235.323 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  236.342 ±(99.9%) 1.142 ns/op [Average]
  (min, avg, max) = (235.133, 236.342, 238.407), stdev = 1.315
  CI (99.9%): [235.200, 237.483] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 52.22% complete, ETA 00:34:21
# Fork: 1 of 2
# Warmup Iteration   1: 948.783 ns/op
# Warmup Iteration   2: 520.318 ns/op
# Warmup Iteration   3: 459.030 ns/op
Iteration   1: 459.391 ns/op
Iteration   2: 459.087 ns/op
Iteration   3: 459.046 ns/op
Iteration   4: 458.965 ns/op
Iteration   5: 459.402 ns/op
Iteration   6: 461.627 ns/op
Iteration   7: 460.514 ns/op
Iteration   8: 476.924 ns/op
Iteration   9: 459.069 ns/op
Iteration  10: 459.025 ns/op

# Run progress: 52.28% complete, ETA 00:34:18
# Fork: 2 of 2
# Warmup Iteration   1: 1225.559 ns/op
# Warmup Iteration   2: 515.042 ns/op
# Warmup Iteration   3: 440.916 ns/op
Iteration   1: 441.122 ns/op
Iteration   2: 441.192 ns/op
Iteration   3: 442.253 ns/op
Iteration   4: 440.969 ns/op
Iteration   5: 441.030 ns/op
Iteration   6: 443.918 ns/op
Iteration   7: 440.942 ns/op
Iteration   8: 443.478 ns/op
Iteration   9: 441.087 ns/op
Iteration  10: 441.071 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  451.505 ±(99.9%) 9.364 ns/op [Average]
  (min, avg, max) = (440.942, 451.505, 476.924), stdev = 10.784
  CI (99.9%): [442.141, 460.870] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 52.33% complete, ETA 00:34:16
# Fork: 1 of 2
# Warmup Iteration   1: 905.186 ns/op
# Warmup Iteration   2: 470.300 ns/op
# Warmup Iteration   3: 443.895 ns/op
Iteration   1: 444.037 ns/op
Iteration   2: 443.927 ns/op
Iteration   3: 443.930 ns/op
Iteration   4: 445.145 ns/op
Iteration   5: 440.644 ns/op
Iteration   6: 446.542 ns/op
Iteration   7: 443.754 ns/op
Iteration   8: 446.494 ns/op
Iteration   9: 444.940 ns/op
Iteration  10: 444.283 ns/op

# Run progress: 52.39% complete, ETA 00:34:14
# Fork: 2 of 2
# Warmup Iteration   1: 907.966 ns/op
# Warmup Iteration   2: 534.987 ns/op
# Warmup Iteration   3: 442.095 ns/op
Iteration   1: 442.120 ns/op
Iteration   2: 442.162 ns/op
Iteration   3: 442.290 ns/op
Iteration   4: 442.246 ns/op
Iteration   5: 442.307 ns/op
Iteration   6: 446.599 ns/op
Iteration   7: 442.195 ns/op
Iteration   8: 444.438 ns/op
Iteration   9: 442.188 ns/op
Iteration  10: 442.065 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  443.615 ±(99.9%) 1.495 ns/op [Average]
  (min, avg, max) = (440.644, 443.615, 446.599), stdev = 1.722
  CI (99.9%): [442.120, 445.111] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 52.44% complete, ETA 00:34:11
# Fork: 1 of 2
# Warmup Iteration   1: 588.665 ns/op
# Warmup Iteration   2: 504.967 ns/op
# Warmup Iteration   3: 445.029 ns/op
Iteration   1: 446.234 ns/op
Iteration   2: 445.574 ns/op
Iteration   3: 445.441 ns/op
Iteration   4: 446.018 ns/op
Iteration   5: 444.936 ns/op
Iteration   6: 447.705 ns/op
Iteration   7: 445.154 ns/op
Iteration   8: 448.979 ns/op
Iteration   9: 446.043 ns/op
Iteration  10: 445.509 ns/op

# Run progress: 52.50% complete, ETA 00:34:09
# Fork: 2 of 2
# Warmup Iteration   1: 692.893 ns/op
# Warmup Iteration   2: 554.125 ns/op
# Warmup Iteration   3: 463.127 ns/op
Iteration   1: 462.961 ns/op
Iteration   2: 462.995 ns/op
Iteration   3: 463.447 ns/op
Iteration   4: 463.028 ns/op
Iteration   5: 462.291 ns/op
Iteration   6: 462.284 ns/op
Iteration   7: 463.135 ns/op
Iteration   8: 465.925 ns/op
Iteration   9: 463.350 ns/op
Iteration  10: 463.796 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  454.740 ±(99.9%) 7.706 ns/op [Average]
  (min, avg, max) = (444.936, 454.740, 465.925), stdev = 8.874
  CI (99.9%): [447.034, 462.447] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 52.56% complete, ETA 00:34:06
# Fork: 1 of 2
# Warmup Iteration   1: 367.010 ns/op
# Warmup Iteration   2: 347.973 ns/op
# Warmup Iteration   3: 323.129 ns/op
Iteration   1: 323.555 ns/op
Iteration   2: 323.526 ns/op
Iteration   3: 324.115 ns/op
Iteration   4: 326.787 ns/op
Iteration   5: 326.985 ns/op
Iteration   6: 327.531 ns/op
Iteration   7: 327.533 ns/op
Iteration   8: 327.310 ns/op
Iteration   9: 326.677 ns/op
Iteration  10: 326.851 ns/op

# Run progress: 52.61% complete, ETA 00:34:04
# Fork: 2 of 2
# Warmup Iteration   1: 488.783 ns/op
# Warmup Iteration   2: 472.940 ns/op
# Warmup Iteration   3: 416.292 ns/op
Iteration   1: 416.148 ns/op
Iteration   2: 416.221 ns/op
Iteration   3: 416.036 ns/op
Iteration   4: 420.445 ns/op
Iteration   5: 420.395 ns/op
Iteration   6: 420.964 ns/op
Iteration   7: 420.642 ns/op
Iteration   8: 427.103 ns/op
Iteration   9: 420.441 ns/op
Iteration  10: 420.843 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  373.005 ±(99.9%) 41.858 ns/op [Average]
  (min, avg, max) = (323.526, 373.005, 427.103), stdev = 48.204
  CI (99.9%): [331.147, 414.864] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 52.67% complete, ETA 00:34:02
# Fork: 1 of 2
# Warmup Iteration   1: 38.531 ns/op
# Warmup Iteration   2: 66.765 ns/op
# Warmup Iteration   3: 35.716 ns/op
Iteration   1: 35.828 ns/op
Iteration   2: 35.734 ns/op
Iteration   3: 35.744 ns/op
Iteration   4: 35.673 ns/op
Iteration   5: 35.690 ns/op
Iteration   6: 36.165 ns/op
Iteration   7: 35.675 ns/op
Iteration   8: 34.527 ns/op
Iteration   9: 35.676 ns/op
Iteration  10: 35.761 ns/op

# Run progress: 52.72% complete, ETA 00:33:59
# Fork: 2 of 2
# Warmup Iteration   1: 38.882 ns/op
# Warmup Iteration   2: 66.763 ns/op
# Warmup Iteration   3: 35.685 ns/op
Iteration   1: 35.745 ns/op
Iteration   2: 35.695 ns/op
Iteration   3: 35.649 ns/op
Iteration   4: 35.664 ns/op
Iteration   5: 35.770 ns/op
Iteration   6: 36.163 ns/op
Iteration   7: 35.702 ns/op
Iteration   8: 34.415 ns/op
Iteration   9: 35.694 ns/op
Iteration  10: 35.701 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.634 ±(99.9%) 0.368 ns/op [Average]
  (min, avg, max) = (34.415, 35.634, 36.165), stdev = 0.423
  CI (99.9%): [35.266, 36.001] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 52.78% complete, ETA 00:33:57
# Fork: 1 of 2
# Warmup Iteration   1: 8432.660 ns/op
# Warmup Iteration   2: 20549.791 ns/op
# Warmup Iteration   3: 7008.424 ns/op
Iteration   1: 6947.794 ns/op
Iteration   2: 8032.886 ns/op
Iteration   3: 7100.232 ns/op
Iteration   4: 7069.749 ns/op
Iteration   5: 6901.877 ns/op
Iteration   6: 7986.522 ns/op
Iteration   7: 8166.051 ns/op
Iteration   8: 7000.373 ns/op
Iteration   9: 7972.759 ns/op
Iteration  10: 6997.308 ns/op

# Run progress: 52.83% complete, ETA 00:33:54
# Fork: 2 of 2
# Warmup Iteration   1: 9630.517 ns/op
# Warmup Iteration   2: 19775.160 ns/op
# Warmup Iteration   3: 7086.742 ns/op
Iteration   1: 6926.743 ns/op
Iteration   2: 8071.256 ns/op
Iteration   3: 7098.881 ns/op
Iteration   4: 6997.509 ns/op
Iteration   5: 7000.574 ns/op
Iteration   6: 7992.800 ns/op
Iteration   7: 8238.680 ns/op
Iteration   8: 7015.546 ns/op
Iteration   9: 7995.977 ns/op
Iteration  10: 7067.765 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7429.064 ±(99.9%) 461.683 ns/op [Average]
  (min, avg, max) = (6901.877, 7429.064, 8238.680), stdev = 531.675
  CI (99.9%): [6967.381, 7890.747] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 52.89% complete, ETA 00:33:52
# Fork: 1 of 2
# Warmup Iteration   1: 13994.121 ns/op
# Warmup Iteration   2: 11998.302 ns/op
# Warmup Iteration   3: 4461.755 ns/op
Iteration   1: 4438.402 ns/op
Iteration   2: 5356.846 ns/op
Iteration   3: 4019.141 ns/op
Iteration   4: 4947.608 ns/op
Iteration   5: 3567.912 ns/op
Iteration   6: 5674.712 ns/op
Iteration   7: 5662.392 ns/op
Iteration   8: 3984.841 ns/op
Iteration   9: 5642.497 ns/op
Iteration  10: 4479.984 ns/op

# Run progress: 52.94% complete, ETA 00:33:50
# Fork: 2 of 2
# Warmup Iteration   1: 14260.604 ns/op
# Warmup Iteration   2: 10783.473 ns/op
# Warmup Iteration   3: 4456.598 ns/op
Iteration   1: 4392.692 ns/op
Iteration   2: 5386.087 ns/op
Iteration   3: 4003.779 ns/op
Iteration   4: 4914.603 ns/op
Iteration   5: 3547.828 ns/op
Iteration   6: 5604.512 ns/op
Iteration   7: 5630.543 ns/op
Iteration   8: 3884.809 ns/op
Iteration   9: 5601.323 ns/op
Iteration  10: 4458.005 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4759.926 ±(99.9%) 666.757 ns/op [Average]
  (min, avg, max) = (3547.828, 4759.926, 5674.712), stdev = 767.839
  CI (99.9%): [4093.169, 5426.683] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 53.00% complete, ETA 00:33:47
# Fork: 1 of 2
# Warmup Iteration   1: 18133.424 ns/op
# Warmup Iteration   2: 10522.092 ns/op
# Warmup Iteration   3: 5332.308 ns/op
Iteration   1: 5308.352 ns/op
Iteration   2: 6405.538 ns/op
Iteration   3: 4608.035 ns/op
Iteration   4: 4970.853 ns/op
Iteration   5: 4024.824 ns/op
Iteration   6: 6451.805 ns/op
Iteration   7: 6440.141 ns/op
Iteration   8: 4545.710 ns/op
Iteration   9: 6193.656 ns/op
Iteration  10: 5342.198 ns/op

# Run progress: 53.06% complete, ETA 00:33:45
# Fork: 2 of 2
# Warmup Iteration   1: 16664.148 ns/op
# Warmup Iteration   2: 10231.006 ns/op
# Warmup Iteration   3: 5065.969 ns/op
Iteration   1: 5005.672 ns/op
Iteration   2: 6065.859 ns/op
Iteration   3: 4388.414 ns/op
Iteration   4: 4817.521 ns/op
Iteration   5: 3894.903 ns/op
Iteration   6: 6245.080 ns/op
Iteration   7: 6259.739 ns/op
Iteration   8: 4398.576 ns/op
Iteration   9: 5934.460 ns/op
Iteration  10: 5098.198 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5319.977 ±(99.9%) 750.825 ns/op [Average]
  (min, avg, max) = (3894.903, 5319.977, 6451.805), stdev = 864.651
  CI (99.9%): [4569.152, 6070.802] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 53.11% complete, ETA 00:33:43
# Fork: 1 of 2
# Warmup Iteration   1: 5918.058 ns/op
# Warmup Iteration   2: 18724.924 ns/op
# Warmup Iteration   3: 4377.535 ns/op
Iteration   1: 4084.999 ns/op
Iteration   2: 4692.643 ns/op
Iteration   3: 3808.237 ns/op
Iteration   4: 3926.497 ns/op
Iteration   5: 3390.542 ns/op
Iteration   6: 4670.269 ns/op
Iteration   7: 4559.190 ns/op
Iteration   8: 3808.998 ns/op
Iteration   9: 4484.163 ns/op
Iteration  10: 4418.773 ns/op

# Run progress: 53.17% complete, ETA 00:33:40
# Fork: 2 of 2
# Warmup Iteration   1: 6597.224 ns/op
# Warmup Iteration   2: 12525.660 ns/op
# Warmup Iteration   3: 4608.222 ns/op
Iteration   1: 4299.774 ns/op
Iteration   2: 4925.194 ns/op
Iteration   3: 4043.348 ns/op
Iteration   4: 4125.083 ns/op
Iteration   5: 3587.043 ns/op
Iteration   6: 4911.135 ns/op
Iteration   7: 4734.365 ns/op
Iteration   8: 3849.075 ns/op
Iteration   9: 4629.751 ns/op
Iteration  10: 4555.736 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4275.241 ±(99.9%) 389.628 ns/op [Average]
  (min, avg, max) = (3390.542, 4275.241, 4925.194), stdev = 448.696
  CI (99.9%): [3885.613, 4664.869] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 53.22% complete, ETA 00:33:38
# Fork: 1 of 2
# Warmup Iteration   1: 17327.286 ns/op
# Warmup Iteration   2: 26865.119 ns/op
# Warmup Iteration   3: 11305.203 ns/op
Iteration   1: 11208.107 ns/op
Iteration   2: 12632.623 ns/op
Iteration   3: 11476.337 ns/op
Iteration   4: 11257.630 ns/op
Iteration   5: 13079.524 ns/op
Iteration   6: 11248.547 ns/op
Iteration   7: 11003.366 ns/op
Iteration   8: 10682.045 ns/op
Iteration   9: 11896.998 ns/op
Iteration  10: 11315.519 ns/op

# Run progress: 53.28% complete, ETA 00:33:35
# Fork: 2 of 2
# Warmup Iteration   1: 16444.184 ns/op
# Warmup Iteration   2: 21784.400 ns/op
# Warmup Iteration   3: 10907.125 ns/op
Iteration   1: 10830.662 ns/op
Iteration   2: 12375.476 ns/op
Iteration   3: 11109.638 ns/op
Iteration   4: 10887.450 ns/op
Iteration   5: 12846.533 ns/op
Iteration   6: 10876.625 ns/op
Iteration   7: 10613.336 ns/op
Iteration   8: 10378.554 ns/op
Iteration   9: 11656.595 ns/op
Iteration  10: 10926.259 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11415.091 ±(99.9%) 669.371 ns/op [Average]
  (min, avg, max) = (10378.554, 11415.091, 13079.524), stdev = 770.849
  CI (99.9%): [10745.720, 12084.462] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 53.33% complete, ETA 00:33:33
# Fork: 1 of 2
# Warmup Iteration   1: 38.403 ns/op
# Warmup Iteration   2: 62.554 ns/op
# Warmup Iteration   3: 38.146 ns/op
Iteration   1: 38.363 ns/op
Iteration   2: 38.026 ns/op
Iteration   3: 38.118 ns/op
Iteration   4: 38.459 ns/op
Iteration   5: 38.200 ns/op
Iteration   6: 38.202 ns/op
Iteration   7: 38.158 ns/op
Iteration   8: 37.139 ns/op
Iteration   9: 38.413 ns/op
Iteration  10: 38.134 ns/op

# Run progress: 53.39% complete, ETA 00:33:31
# Fork: 2 of 2
# Warmup Iteration   1: 38.262 ns/op
# Warmup Iteration   2: 62.031 ns/op
# Warmup Iteration   3: 37.879 ns/op
Iteration   1: 37.990 ns/op
Iteration   2: 37.871 ns/op
Iteration   3: 38.035 ns/op
Iteration   4: 37.853 ns/op
Iteration   5: 38.355 ns/op
Iteration   6: 38.078 ns/op
Iteration   7: 37.986 ns/op
Iteration   8: 37.091 ns/op
Iteration   9: 38.037 ns/op
Iteration  10: 37.929 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.022 ±(99.9%) 0.308 ns/op [Average]
  (min, avg, max) = (37.091, 38.022, 38.459), stdev = 0.355
  CI (99.9%): [37.714, 38.330] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 53.44% complete, ETA 00:33:28
# Fork: 1 of 2
# Warmup Iteration   1: 280.506 ns/op
# Warmup Iteration   2: 280.096 ns/op
# Warmup Iteration   3: 241.500 ns/op
Iteration   1: 241.953 ns/op
Iteration   2: 242.712 ns/op
Iteration   3: 242.289 ns/op
Iteration   4: 242.082 ns/op
Iteration   5: 240.446 ns/op
Iteration   6: 239.800 ns/op
Iteration   7: 241.007 ns/op
Iteration   8: 238.702 ns/op
Iteration   9: 241.470 ns/op
Iteration  10: 242.032 ns/op

# Run progress: 53.50% complete, ETA 00:33:26
# Fork: 2 of 2
# Warmup Iteration   1: 301.544 ns/op
# Warmup Iteration   2: 280.217 ns/op
# Warmup Iteration   3: 238.773 ns/op
Iteration   1: 238.828 ns/op
Iteration   2: 238.260 ns/op
Iteration   3: 238.289 ns/op
Iteration   4: 238.311 ns/op
Iteration   5: 238.307 ns/op
Iteration   6: 239.143 ns/op
Iteration   7: 238.673 ns/op
Iteration   8: 236.180 ns/op
Iteration   9: 238.937 ns/op
Iteration  10: 238.669 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  239.805 ±(99.9%) 1.572 ns/op [Average]
  (min, avg, max) = (236.180, 239.805, 242.712), stdev = 1.810
  CI (99.9%): [238.233, 241.376] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 53.56% complete, ETA 00:33:23
# Fork: 1 of 2
# Warmup Iteration   1: 1449.793 ns/op
# Warmup Iteration   2: 1166.358 ns/op
# Warmup Iteration   3: 974.182 ns/op
Iteration   1: 977.838 ns/op
Iteration   2: 973.592 ns/op
Iteration   3: 975.117 ns/op
Iteration   4: 977.221 ns/op
Iteration   5: 977.932 ns/op
Iteration   6: 974.262 ns/op
Iteration   7: 975.885 ns/op
Iteration   8: 974.300 ns/op
Iteration   9: 974.586 ns/op
Iteration  10: 976.418 ns/op

# Run progress: 53.61% complete, ETA 00:33:21
# Fork: 2 of 2
# Warmup Iteration   1: 1424.814 ns/op
# Warmup Iteration   2: 1109.592 ns/op
# Warmup Iteration   3: 974.119 ns/op
Iteration   1: 975.959 ns/op
Iteration   2: 974.585 ns/op
Iteration   3: 975.927 ns/op
Iteration   4: 973.841 ns/op
Iteration   5: 977.197 ns/op
Iteration   6: 974.135 ns/op
Iteration   7: 974.800 ns/op
Iteration   8: 974.380 ns/op
Iteration   9: 980.870 ns/op
Iteration  10: 980.653 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  975.975 ±(99.9%) 1.829 ns/op [Average]
  (min, avg, max) = (973.592, 975.975, 980.870), stdev = 2.106
  CI (99.9%): [974.146, 977.804] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 53.67% complete, ETA 00:33:19
# Fork: 1 of 2
# Warmup Iteration   1: 1433.841 ns/op
# Warmup Iteration   2: 1164.528 ns/op
# Warmup Iteration   3: 985.102 ns/op
Iteration   1: 983.287 ns/op
Iteration   2: 986.990 ns/op
Iteration   3: 985.187 ns/op
Iteration   4: 984.811 ns/op
Iteration   5: 986.806 ns/op
Iteration   6: 985.733 ns/op
Iteration   7: 986.474 ns/op
Iteration   8: 987.520 ns/op
Iteration   9: 984.963 ns/op
Iteration  10: 983.121 ns/op

# Run progress: 53.72% complete, ETA 00:33:16
# Fork: 2 of 2
# Warmup Iteration   1: 1478.347 ns/op
# Warmup Iteration   2: 1179.364 ns/op
# Warmup Iteration   3: 989.149 ns/op
Iteration   1: 993.132 ns/op
Iteration   2: 988.949 ns/op
Iteration   3: 990.764 ns/op
Iteration   4: 987.951 ns/op
Iteration   5: 990.618 ns/op
Iteration   6: 988.651 ns/op
Iteration   7: 989.756 ns/op
Iteration   8: 988.856 ns/op
Iteration   9: 991.479 ns/op
Iteration  10: 991.053 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  987.805 ±(99.9%) 2.441 ns/op [Average]
  (min, avg, max) = (983.121, 987.805, 993.132), stdev = 2.811
  CI (99.9%): [985.364, 990.246] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 53.78% complete, ETA 00:33:14
# Fork: 1 of 2
# Warmup Iteration   1: 2133.305 ns/op
# Warmup Iteration   2: 1558.042 ns/op
# Warmup Iteration   3: 1334.429 ns/op
Iteration   1: 1335.773 ns/op
Iteration   2: 1334.515 ns/op
Iteration   3: 1334.334 ns/op
Iteration   4: 1335.176 ns/op
Iteration   5: 1337.531 ns/op
Iteration   6: 1335.291 ns/op
Iteration   7: 1333.774 ns/op
Iteration   8: 1335.086 ns/op
Iteration   9: 1334.854 ns/op
Iteration  10: 1336.309 ns/op

# Run progress: 53.83% complete, ETA 00:33:11
# Fork: 2 of 2
# Warmup Iteration   1: 1774.620 ns/op
# Warmup Iteration   2: 1549.969 ns/op
# Warmup Iteration   3: 1334.278 ns/op
Iteration   1: 1335.276 ns/op
Iteration   2: 1334.733 ns/op
Iteration   3: 1334.609 ns/op
Iteration   4: 1334.683 ns/op
Iteration   5: 1337.560 ns/op
Iteration   6: 1334.922 ns/op
Iteration   7: 1333.964 ns/op
Iteration   8: 1347.754 ns/op
Iteration   9: 1334.994 ns/op
Iteration  10: 1336.281 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1335.871 ±(99.9%) 2.584 ns/op [Average]
  (min, avg, max) = (1333.774, 1335.871, 1347.754), stdev = 2.975
  CI (99.9%): [1333.287, 1338.455] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 53.89% complete, ETA 00:33:09
# Fork: 1 of 2
# Warmup Iteration   1: 357.607 ns/op
# Warmup Iteration   2: 392.779 ns/op
# Warmup Iteration   3: 326.108 ns/op
Iteration   1: 326.176 ns/op
Iteration   2: 325.887 ns/op
Iteration   3: 325.412 ns/op
Iteration   4: 327.441 ns/op
Iteration   5: 327.812 ns/op
Iteration   6: 328.376 ns/op
Iteration   7: 328.125 ns/op
Iteration   8: 325.063 ns/op
Iteration   9: 327.294 ns/op
Iteration  10: 328.342 ns/op

# Run progress: 53.94% complete, ETA 00:33:07
# Fork: 2 of 2
# Warmup Iteration   1: 361.598 ns/op
# Warmup Iteration   2: 387.239 ns/op
# Warmup Iteration   3: 325.544 ns/op
Iteration   1: 325.966 ns/op
Iteration   2: 325.988 ns/op
Iteration   3: 326.398 ns/op
Iteration   4: 327.752 ns/op
Iteration   5: 327.403 ns/op
Iteration   6: 327.796 ns/op
Iteration   7: 327.389 ns/op
Iteration   8: 325.052 ns/op
Iteration   9: 328.223 ns/op
Iteration  10: 328.299 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  327.010 ±(99.9%) 0.997 ns/op [Average]
  (min, avg, max) = (325.052, 327.010, 328.376), stdev = 1.148
  CI (99.9%): [326.013, 328.007] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 54.00% complete, ETA 00:33:04
# Fork: 1 of 2
# Warmup Iteration   1: 38.513 ns/op
# Warmup Iteration   2: 62.621 ns/op
# Warmup Iteration   3: 38.248 ns/op
Iteration   1: 38.384 ns/op
Iteration   2: 38.080 ns/op
Iteration   3: 38.187 ns/op
Iteration   4: 38.039 ns/op
Iteration   5: 38.160 ns/op
Iteration   6: 38.064 ns/op
Iteration   7: 38.086 ns/op
Iteration   8: 37.061 ns/op
Iteration   9: 38.124 ns/op
Iteration  10: 38.140 ns/op

# Run progress: 54.06% complete, ETA 00:33:02
# Fork: 2 of 2
# Warmup Iteration   1: 38.477 ns/op
# Warmup Iteration   2: 62.690 ns/op
# Warmup Iteration   3: 38.031 ns/op
Iteration   1: 38.114 ns/op
Iteration   2: 38.012 ns/op
Iteration   3: 38.154 ns/op
Iteration   4: 38.372 ns/op
Iteration   5: 38.129 ns/op
Iteration   6: 38.219 ns/op
Iteration   7: 38.130 ns/op
Iteration   8: 37.138 ns/op
Iteration   9: 38.401 ns/op
Iteration  10: 38.000 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.050 ±(99.9%) 0.299 ns/op [Average]
  (min, avg, max) = (37.061, 38.050, 38.401), stdev = 0.344
  CI (99.9%): [37.751, 38.349] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 54.11% complete, ETA 00:33:00
# Fork: 1 of 2
# Warmup Iteration   1: 296.642 ns/op
# Warmup Iteration   2: 282.154 ns/op
# Warmup Iteration   3: 242.827 ns/op
Iteration   1: 242.940 ns/op
Iteration   2: 242.649 ns/op
Iteration   3: 244.735 ns/op
Iteration   4: 243.840 ns/op
Iteration   5: 243.181 ns/op
Iteration   6: 243.735 ns/op
Iteration   7: 243.284 ns/op
Iteration   8: 241.374 ns/op
Iteration   9: 243.876 ns/op
Iteration  10: 243.327 ns/op

# Run progress: 54.17% complete, ETA 00:32:57
# Fork: 2 of 2
# Warmup Iteration   1: 294.471 ns/op
# Warmup Iteration   2: 285.329 ns/op
# Warmup Iteration   3: 243.507 ns/op
Iteration   1: 243.346 ns/op
Iteration   2: 243.418 ns/op
Iteration   3: 244.281 ns/op
Iteration   4: 244.547 ns/op
Iteration   5: 243.439 ns/op
Iteration   6: 243.595 ns/op
Iteration   7: 243.423 ns/op
Iteration   8: 241.354 ns/op
Iteration   9: 243.384 ns/op
Iteration  10: 243.100 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  243.342 ±(99.9%) 0.735 ns/op [Average]
  (min, avg, max) = (241.354, 243.342, 244.735), stdev = 0.846
  CI (99.9%): [242.607, 244.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 54.22% complete, ETA 00:32:55
# Fork: 1 of 2
# Warmup Iteration   1: 2802.293 ns/op
# Warmup Iteration   2: 1472.173 ns/op
# Warmup Iteration   3: 1273.223 ns/op
Iteration   1: 1271.127 ns/op
Iteration   2: 1274.313 ns/op
Iteration   3: 1273.798 ns/op
Iteration   4: 1274.112 ns/op
Iteration   5: 1270.772 ns/op
Iteration   6: 1271.745 ns/op
Iteration   7: 1269.961 ns/op
Iteration   8: 1272.989 ns/op
Iteration   9: 1270.937 ns/op
Iteration  10: 1270.358 ns/op

# Run progress: 54.28% complete, ETA 00:32:52
# Fork: 2 of 2
# Warmup Iteration   1: 2201.195 ns/op
# Warmup Iteration   2: 1482.806 ns/op
# Warmup Iteration   3: 1265.950 ns/op
Iteration   1: 1264.230 ns/op
Iteration   2: 1264.248 ns/op
Iteration   3: 1274.462 ns/op
Iteration   4: 1265.414 ns/op
Iteration   5: 1281.776 ns/op
Iteration   6: 1267.746 ns/op
Iteration   7: 1264.280 ns/op
Iteration   8: 1274.363 ns/op
Iteration   9: 1267.587 ns/op
Iteration  10: 1267.038 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1270.563 ±(99.9%) 3.862 ns/op [Average]
  (min, avg, max) = (1264.230, 1270.563, 1281.776), stdev = 4.448
  CI (99.9%): [1266.701, 1274.425] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 54.33% complete, ETA 00:32:50
# Fork: 1 of 2
# Warmup Iteration   1: 2066.066 ns/op
# Warmup Iteration   2: 1447.720 ns/op
# Warmup Iteration   3: 1273.106 ns/op
Iteration   1: 1273.273 ns/op
Iteration   2: 1274.497 ns/op
Iteration   3: 1274.033 ns/op
Iteration   4: 1273.491 ns/op
Iteration   5: 1273.656 ns/op
Iteration   6: 1273.259 ns/op
Iteration   7: 1275.281 ns/op
Iteration   8: 1273.249 ns/op
Iteration   9: 1273.609 ns/op
Iteration  10: 1273.857 ns/op

# Run progress: 54.39% complete, ETA 00:32:48
# Fork: 2 of 2
# Warmup Iteration   1: 1940.103 ns/op
# Warmup Iteration   2: 1519.731 ns/op
# Warmup Iteration   3: 1275.552 ns/op
Iteration   1: 1276.765 ns/op
Iteration   2: 1276.535 ns/op
Iteration   3: 1276.818 ns/op
Iteration   4: 1277.009 ns/op
Iteration   5: 1276.043 ns/op
Iteration   6: 1277.529 ns/op
Iteration   7: 1276.981 ns/op
Iteration   8: 1289.282 ns/op
Iteration   9: 1276.929 ns/op
Iteration  10: 1275.533 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1275.881 ±(99.9%) 3.050 ns/op [Average]
  (min, avg, max) = (1273.249, 1275.881, 1289.282), stdev = 3.512
  CI (99.9%): [1272.832, 1278.931] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 54.44% complete, ETA 00:32:45
# Fork: 1 of 2
# Warmup Iteration   1: 1594.156 ns/op
# Warmup Iteration   2: 1258.470 ns/op
# Warmup Iteration   3: 1052.415 ns/op
Iteration   1: 1048.690 ns/op
Iteration   2: 1055.257 ns/op
Iteration   3: 1050.783 ns/op
Iteration   4: 1047.910 ns/op
Iteration   5: 1048.747 ns/op
Iteration   6: 1050.264 ns/op
Iteration   7: 1048.298 ns/op
Iteration   8: 1049.662 ns/op
Iteration   9: 1048.375 ns/op
Iteration  10: 1050.076 ns/op

# Run progress: 54.50% complete, ETA 00:32:43
# Fork: 2 of 2
# Warmup Iteration   1: 1564.668 ns/op
# Warmup Iteration   2: 1205.993 ns/op
# Warmup Iteration   3: 1052.753 ns/op
Iteration   1: 1051.479 ns/op
Iteration   2: 1050.830 ns/op
Iteration   3: 1052.450 ns/op
Iteration   4: 1049.650 ns/op
Iteration   5: 1054.030 ns/op
Iteration   6: 1049.860 ns/op
Iteration   7: 1050.309 ns/op
Iteration   8: 1055.012 ns/op
Iteration   9: 1056.066 ns/op
Iteration  10: 1051.494 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1050.962 ±(99.9%) 2.114 ns/op [Average]
  (min, avg, max) = (1047.910, 1050.962, 1056.066), stdev = 2.435
  CI (99.9%): [1048.848, 1053.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 54.56% complete, ETA 00:32:40
# Fork: 1 of 2
# Warmup Iteration   1: 544.282 ns/op
# Warmup Iteration   2: 547.951 ns/op
# Warmup Iteration   3: 458.752 ns/op
Iteration   1: 458.902 ns/op
Iteration   2: 458.780 ns/op
Iteration   3: 458.382 ns/op
Iteration   4: 459.520 ns/op
Iteration   5: 459.744 ns/op
Iteration   6: 459.692 ns/op
Iteration   7: 459.867 ns/op
Iteration   8: 456.695 ns/op
Iteration   9: 460.077 ns/op
Iteration  10: 459.606 ns/op

# Run progress: 54.61% complete, ETA 00:32:38
# Fork: 2 of 2
# Warmup Iteration   1: 518.088 ns/op
# Warmup Iteration   2: 543.081 ns/op
# Warmup Iteration   3: 458.924 ns/op
Iteration   1: 458.563 ns/op
Iteration   2: 458.068 ns/op
Iteration   3: 458.236 ns/op
Iteration   4: 459.459 ns/op
Iteration   5: 459.816 ns/op
Iteration   6: 460.259 ns/op
Iteration   7: 459.283 ns/op
Iteration   8: 456.528 ns/op
Iteration   9: 459.667 ns/op
Iteration  10: 459.400 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  459.027 ±(99.9%) 0.896 ns/op [Average]
  (min, avg, max) = (456.528, 459.027, 460.259), stdev = 1.032
  CI (99.9%): [458.131, 459.923] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 54.67% complete, ETA 00:32:36
# Fork: 1 of 2
# Warmup Iteration   1: 38.354 ns/op
# Warmup Iteration   2: 60.607 ns/op
# Warmup Iteration   3: 38.022 ns/op
Iteration   1: 38.214 ns/op
Iteration   2: 38.162 ns/op
Iteration   3: 37.944 ns/op
Iteration   4: 38.207 ns/op
Iteration   5: 38.255 ns/op
Iteration   6: 38.181 ns/op
Iteration   7: 37.988 ns/op
Iteration   8: 37.178 ns/op
Iteration   9: 38.075 ns/op
Iteration  10: 38.083 ns/op

# Run progress: 54.72% complete, ETA 00:32:33
# Fork: 2 of 2
# Warmup Iteration   1: 38.953 ns/op
# Warmup Iteration   2: 61.135 ns/op
# Warmup Iteration   3: 37.948 ns/op
Iteration   1: 37.917 ns/op
Iteration   2: 38.097 ns/op
Iteration   3: 38.011 ns/op
Iteration   4: 38.275 ns/op
Iteration   5: 37.976 ns/op
Iteration   6: 38.070 ns/op
Iteration   7: 38.042 ns/op
Iteration   8: 37.190 ns/op
Iteration   9: 38.335 ns/op
Iteration  10: 38.085 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.014 ±(99.9%) 0.265 ns/op [Average]
  (min, avg, max) = (37.178, 38.014, 38.335), stdev = 0.306
  CI (99.9%): [37.749, 38.280] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 54.78% complete, ETA 00:32:31
# Fork: 1 of 2
# Warmup Iteration   1: 301.675 ns/op
# Warmup Iteration   2: 282.167 ns/op
# Warmup Iteration   3: 242.165 ns/op
Iteration   1: 242.583 ns/op
Iteration   2: 241.719 ns/op
Iteration   3: 242.293 ns/op
Iteration   4: 243.347 ns/op
Iteration   5: 243.327 ns/op
Iteration   6: 242.235 ns/op
Iteration   7: 242.168 ns/op
Iteration   8: 240.524 ns/op
Iteration   9: 243.873 ns/op
Iteration  10: 241.947 ns/op

# Run progress: 54.83% complete, ETA 00:32:29
# Fork: 2 of 2
# Warmup Iteration   1: 302.463 ns/op
# Warmup Iteration   2: 273.455 ns/op
# Warmup Iteration   3: 240.549 ns/op
Iteration   1: 240.594 ns/op
Iteration   2: 241.191 ns/op
Iteration   3: 242.792 ns/op
Iteration   4: 242.644 ns/op
Iteration   5: 241.841 ns/op
Iteration   6: 243.277 ns/op
Iteration   7: 241.398 ns/op
Iteration   8: 238.280 ns/op
Iteration   9: 241.972 ns/op
Iteration  10: 240.859 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  241.943 ±(99.9%) 1.103 ns/op [Average]
  (min, avg, max) = (238.280, 241.943, 243.873), stdev = 1.270
  CI (99.9%): [240.841, 243.046] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 54.89% complete, ETA 00:32:26
# Fork: 1 of 2
# Warmup Iteration   1: 1929.625 ns/op
# Warmup Iteration   2: 1152.619 ns/op
# Warmup Iteration   3: 1082.703 ns/op
Iteration   1: 1106.220 ns/op
Iteration   2: 1131.474 ns/op
Iteration   3: 15330.573 ns/op
Iteration   4: 1434.561 ns/op
Iteration   5: 1160.898 ns/op
Iteration   6: 1158.885 ns/op
Iteration   7: 48841.913 ns/op
Iteration   8: 1082.272 ns/op
Iteration   9: 1000.246 ns/op
Iteration  10: 1088.310 ns/op

# Run progress: 54.94% complete, ETA 00:32:24
# Fork: 2 of 2
# Warmup Iteration   1: 1750.353 ns/op
# Warmup Iteration   2: 1248.731 ns/op
# Warmup Iteration   3: 1077.226 ns/op
Iteration   1: 1096.164 ns/op
Iteration   2: 1123.747 ns/op
Iteration   3: 10545.896 ns/op
Iteration   4: 1383.144 ns/op
Iteration   5: 1130.128 ns/op
Iteration   6: 1142.750 ns/op
Iteration   7: 48800.610 ns/op
Iteration   8: 1077.416 ns/op
Iteration   9: 999.268 ns/op
Iteration  10: 1084.082 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7085.928 ±(99.9%) 12802.491 ns/op [Average]
  (min, avg, max) = (999.268, 7085.928, 48841.913), stdev = 14743.368
  CI (99.9%): [≈ 0, 19888.419] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 55.00% complete, ETA 00:32:21
# Fork: 1 of 2
# Warmup Iteration   1: 1850.038 ns/op
# Warmup Iteration   2: 1247.568 ns/op
# Warmup Iteration   3: 4354.155 ns/op
Iteration   1: 1164.477 ns/op
Iteration   2: 1162.017 ns/op
Iteration   3: 1315.851 ns/op
Iteration   4: 1338.586 ns/op
Iteration   5: 1148.136 ns/op
Iteration   6: 1162.472 ns/op
Iteration   7: 16329.563 ns/op
Iteration   8: 1149.123 ns/op
Iteration   9: 1081.336 ns/op
Iteration  10: 1139.806 ns/op

# Run progress: 55.06% complete, ETA 00:32:19
# Fork: 2 of 2
# Warmup Iteration   1: 1835.963 ns/op
# Warmup Iteration   2: 1253.168 ns/op
# Warmup Iteration   3: 2879.698 ns/op
Iteration   1: 1161.916 ns/op
Iteration   2: 1180.172 ns/op
Iteration   3: 1322.073 ns/op
Iteration   4: 1337.619 ns/op
Iteration   5: 1173.433 ns/op
Iteration   6: 1181.804 ns/op
Iteration   7: 13203.162 ns/op
Iteration   8: 1225.307 ns/op
Iteration   9: 1159.808 ns/op
Iteration  10: 1215.378 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2557.602 ±(99.9%) 3652.841 ns/op [Average]
  (min, avg, max) = (1081.336, 2557.602, 16329.563), stdev = 4206.617
  CI (99.9%): [≈ 0, 6210.443] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 55.11% complete, ETA 00:32:17
# Fork: 1 of 2
# Warmup Iteration   1: 1754.621 ns/op
# Warmup Iteration   2: 1262.759 ns/op
# Warmup Iteration   3: 1128.526 ns/op
Iteration   1: 1146.393 ns/op
Iteration   2: 1111.662 ns/op
Iteration   3: 4975.485 ns/op
Iteration   4: 1346.035 ns/op
Iteration   5: 1112.465 ns/op
Iteration   6: 1119.972 ns/op
Iteration   7: 3246.204 ns/op
Iteration   8: 1062.072 ns/op
Iteration   9: 975.613 ns/op
Iteration  10: 1058.852 ns/op

# Run progress: 55.17% complete, ETA 00:32:14
# Fork: 2 of 2
# Warmup Iteration   1: 1750.077 ns/op
# Warmup Iteration   2: 1223.373 ns/op
# Warmup Iteration   3: 1126.701 ns/op
Iteration   1: 1118.344 ns/op
Iteration   2: 1126.757 ns/op
Iteration   3: 5003.115 ns/op
Iteration   4: 1203.126 ns/op
Iteration   5: 1080.527 ns/op
Iteration   6: 1114.056 ns/op
Iteration   7: 2781.076 ns/op
Iteration   8: 1060.449 ns/op
Iteration   9: 974.640 ns/op
Iteration  10: 1054.128 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1683.549 ±(99.9%) 1108.982 ns/op [Average]
  (min, avg, max) = (974.640, 1683.549, 5003.115), stdev = 1277.105
  CI (99.9%): [574.567, 2792.530] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 55.22% complete, ETA 00:32:12
# Fork: 1 of 2
# Warmup Iteration   1: 497.101 ns/op
# Warmup Iteration   2: 483.968 ns/op
# Warmup Iteration   3: 423.142 ns/op
Iteration   1: 423.048 ns/op
Iteration   2: 421.235 ns/op
Iteration   3: 422.134 ns/op
Iteration   4: 423.753 ns/op
Iteration   5: 424.992 ns/op
Iteration   6: 423.870 ns/op
Iteration   7: 423.811 ns/op
Iteration   8: 420.819 ns/op
Iteration   9: 423.497 ns/op
Iteration  10: 423.803 ns/op

# Run progress: 55.28% complete, ETA 00:32:10
# Fork: 2 of 2
# Warmup Iteration   1: 528.021 ns/op
# Warmup Iteration   2: 542.211 ns/op
# Warmup Iteration   3: 453.880 ns/op
Iteration   1: 454.038 ns/op
Iteration   2: 458.251 ns/op
Iteration   3: 455.330 ns/op
Iteration   4: 456.684 ns/op
Iteration   5: 460.613 ns/op
Iteration   6: 453.058 ns/op
Iteration   7: 459.159 ns/op
Iteration   8: 452.081 ns/op
Iteration   9: 454.848 ns/op
Iteration  10: 455.936 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  439.548 ±(99.9%) 14.767 ns/op [Average]
  (min, avg, max) = (420.819, 439.548, 460.613), stdev = 17.006
  CI (99.9%): [424.781, 454.315] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 55.33% complete, ETA 00:32:07
# Fork: 1 of 2
# Warmup Iteration   1: 38.206 ns/op
# Warmup Iteration   2: 63.294 ns/op
# Warmup Iteration   3: 38.134 ns/op
Iteration   1: 38.046 ns/op
Iteration   2: 38.091 ns/op
Iteration   3: 38.157 ns/op
Iteration   4: 38.390 ns/op
Iteration   5: 38.179 ns/op
Iteration   6: 38.153 ns/op
Iteration   7: 38.145 ns/op
Iteration   8: 37.187 ns/op
Iteration   9: 38.125 ns/op
Iteration  10: 38.206 ns/op

# Run progress: 55.39% complete, ETA 00:32:05
# Fork: 2 of 2
# Warmup Iteration   1: 38.338 ns/op
# Warmup Iteration   2: 62.548 ns/op
# Warmup Iteration   3: 38.452 ns/op
Iteration   1: 38.016 ns/op
Iteration   2: 38.072 ns/op
Iteration   3: 38.037 ns/op
Iteration   4: 38.340 ns/op
Iteration   5: 38.420 ns/op
Iteration   6: 38.144 ns/op
Iteration   7: 38.047 ns/op
Iteration   8: 37.259 ns/op
Iteration   9: 38.227 ns/op
Iteration  10: 38.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.065 ±(99.9%) 0.269 ns/op [Average]
  (min, avg, max) = (37.187, 38.065, 38.420), stdev = 0.310
  CI (99.9%): [37.796, 38.334] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 55.44% complete, ETA 00:32:02
# Fork: 1 of 2
# Warmup Iteration   1: 298.716 ns/op
# Warmup Iteration   2: 282.432 ns/op
# Warmup Iteration   3: 239.186 ns/op
Iteration   1: 238.734 ns/op
Iteration   2: 238.533 ns/op
Iteration   3: 239.228 ns/op
Iteration   4: 238.235 ns/op
Iteration   5: 238.604 ns/op
Iteration   6: 238.984 ns/op
Iteration   7: 238.659 ns/op
Iteration   8: 236.588 ns/op
Iteration   9: 238.748 ns/op
Iteration  10: 238.731 ns/op

# Run progress: 55.50% complete, ETA 00:32:00
# Fork: 2 of 2
# Warmup Iteration   1: 282.846 ns/op
# Warmup Iteration   2: 284.132 ns/op
# Warmup Iteration   3: 238.584 ns/op
Iteration   1: 238.889 ns/op
Iteration   2: 239.318 ns/op
Iteration   3: 239.116 ns/op
Iteration   4: 238.791 ns/op
Iteration   5: 238.282 ns/op
Iteration   6: 239.055 ns/op
Iteration   7: 238.740 ns/op
Iteration   8: 236.863 ns/op
Iteration   9: 238.808 ns/op
Iteration  10: 239.460 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  238.618 ±(99.9%) 0.624 ns/op [Average]
  (min, avg, max) = (236.588, 238.618, 239.460), stdev = 0.719
  CI (99.9%): [237.994, 239.242] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 55.56% complete, ETA 00:31:58
# Fork: 1 of 2
# Warmup Iteration   1: 918.574 ns/op
# Warmup Iteration   2: 560.503 ns/op
# Warmup Iteration   3: 462.002 ns/op
Iteration   1: 461.602 ns/op
Iteration   2: 461.584 ns/op
Iteration   3: 461.870 ns/op
Iteration   4: 461.608 ns/op
Iteration   5: 461.799 ns/op
Iteration   6: 464.150 ns/op
Iteration   7: 461.848 ns/op
Iteration   8: 461.787 ns/op
Iteration   9: 461.955 ns/op
Iteration  10: 461.827 ns/op

# Run progress: 55.61% complete, ETA 00:31:55
# Fork: 2 of 2
# Warmup Iteration   1: 790.117 ns/op
# Warmup Iteration   2: 507.333 ns/op
# Warmup Iteration   3: 444.441 ns/op
Iteration   1: 444.476 ns/op
Iteration   2: 443.831 ns/op
Iteration   3: 444.206 ns/op
Iteration   4: 444.030 ns/op
Iteration   5: 444.251 ns/op
Iteration   6: 447.522 ns/op
Iteration   7: 446.500 ns/op
Iteration   8: 445.561 ns/op
Iteration   9: 443.947 ns/op
Iteration  10: 444.247 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  453.430 ±(99.9%) 7.688 ns/op [Average]
  (min, avg, max) = (443.831, 453.430, 464.150), stdev = 8.854
  CI (99.9%): [445.742, 461.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 55.67% complete, ETA 00:31:53
# Fork: 1 of 2
# Warmup Iteration   1: 917.903 ns/op
# Warmup Iteration   2: 511.438 ns/op
# Warmup Iteration   3: 446.442 ns/op
Iteration   1: 447.735 ns/op
Iteration   2: 447.782 ns/op
Iteration   3: 447.793 ns/op
Iteration   4: 447.971 ns/op
Iteration   5: 447.680 ns/op
Iteration   6: 451.605 ns/op
Iteration   7: 446.564 ns/op
Iteration   8: 446.603 ns/op
Iteration   9: 447.239 ns/op
Iteration  10: 447.773 ns/op

# Run progress: 55.72% complete, ETA 00:31:50
# Fork: 2 of 2
# Warmup Iteration   1: 858.347 ns/op
# Warmup Iteration   2: 519.107 ns/op
# Warmup Iteration   3: 448.466 ns/op
Iteration   1: 448.605 ns/op
Iteration   2: 448.697 ns/op
Iteration   3: 448.667 ns/op
Iteration   4: 448.880 ns/op
Iteration   5: 448.449 ns/op
Iteration   6: 452.585 ns/op
Iteration   7: 448.698 ns/op
Iteration   8: 450.273 ns/op
Iteration   9: 450.353 ns/op
Iteration  10: 449.357 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  448.665 ±(99.9%) 1.342 ns/op [Average]
  (min, avg, max) = (446.564, 448.665, 452.585), stdev = 1.545
  CI (99.9%): [447.323, 450.007] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 55.78% complete, ETA 00:31:48
# Fork: 1 of 2
# Warmup Iteration   1: 683.433 ns/op
# Warmup Iteration   2: 528.040 ns/op
# Warmup Iteration   3: 466.063 ns/op
Iteration   1: 466.620 ns/op
Iteration   2: 465.618 ns/op
Iteration   3: 465.657 ns/op
Iteration   4: 466.890 ns/op
Iteration   5: 465.827 ns/op
Iteration   6: 466.964 ns/op
Iteration   7: 465.513 ns/op
Iteration   8: 464.976 ns/op
Iteration   9: 464.881 ns/op
Iteration  10: 465.990 ns/op

# Run progress: 55.83% complete, ETA 00:31:46
# Fork: 2 of 2
# Warmup Iteration   1: 746.642 ns/op
# Warmup Iteration   2: 533.676 ns/op
# Warmup Iteration   3: 465.527 ns/op
Iteration   1: 466.781 ns/op
Iteration   2: 465.389 ns/op
Iteration   3: 465.641 ns/op
Iteration   4: 465.214 ns/op
Iteration   5: 467.162 ns/op
Iteration   6: 466.769 ns/op
Iteration   7: 465.644 ns/op
Iteration   8: 465.064 ns/op
Iteration   9: 466.883 ns/op
Iteration  10: 467.009 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  466.025 ±(99.9%) 0.673 ns/op [Average]
  (min, avg, max) = (464.881, 466.025, 467.162), stdev = 0.775
  CI (99.9%): [465.352, 466.697] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 55.89% complete, ETA 00:31:43
# Fork: 1 of 2
# Warmup Iteration   1: 481.342 ns/op
# Warmup Iteration   2: 498.886 ns/op
# Warmup Iteration   3: 426.731 ns/op
Iteration   1: 426.706 ns/op
Iteration   2: 426.625 ns/op
Iteration   3: 426.697 ns/op
Iteration   4: 427.049 ns/op
Iteration   5: 426.799 ns/op
Iteration   6: 427.017 ns/op
Iteration   7: 427.139 ns/op
Iteration   8: 423.762 ns/op
Iteration   9: 427.327 ns/op
Iteration  10: 427.334 ns/op

# Run progress: 55.94% complete, ETA 00:31:41
# Fork: 2 of 2
# Warmup Iteration   1: 357.345 ns/op
# Warmup Iteration   2: 376.244 ns/op
# Warmup Iteration   3: 326.210 ns/op
Iteration   1: 327.065 ns/op
Iteration   2: 326.828 ns/op
Iteration   3: 326.129 ns/op
Iteration   4: 328.548 ns/op
Iteration   5: 328.371 ns/op
Iteration   6: 328.192 ns/op
Iteration   7: 328.686 ns/op
Iteration   8: 325.233 ns/op
Iteration   9: 328.417 ns/op
Iteration  10: 328.193 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  377.106 ±(99.9%) 44.146 ns/op [Average]
  (min, avg, max) = (325.233, 377.106, 427.334), stdev = 50.838
  CI (99.9%): [332.960, 421.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 56.00% complete, ETA 00:31:38
# Fork: 1 of 2
# Warmup Iteration   1: 37.881 ns/op
# Warmup Iteration   2: 62.838 ns/op
# Warmup Iteration   3: 38.091 ns/op
Iteration   1: 38.136 ns/op
Iteration   2: 38.153 ns/op
Iteration   3: 38.265 ns/op
Iteration   4: 38.000 ns/op
Iteration   5: 38.004 ns/op
Iteration   6: 38.201 ns/op
Iteration   7: 38.207 ns/op
Iteration   8: 37.065 ns/op
Iteration   9: 38.310 ns/op
Iteration  10: 38.066 ns/op

# Run progress: 56.06% complete, ETA 00:31:36
# Fork: 2 of 2
# Warmup Iteration   1: 38.365 ns/op
# Warmup Iteration   2: 62.857 ns/op
# Warmup Iteration   3: 38.137 ns/op
Iteration   1: 38.378 ns/op
Iteration   2: 38.046 ns/op
Iteration   3: 38.156 ns/op
Iteration   4: 37.966 ns/op
Iteration   5: 38.004 ns/op
Iteration   6: 38.125 ns/op
Iteration   7: 38.049 ns/op
Iteration   8: 37.238 ns/op
Iteration   9: 38.080 ns/op
Iteration  10: 38.163 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.031 ±(99.9%) 0.279 ns/op [Average]
  (min, avg, max) = (37.065, 38.031, 38.378), stdev = 0.321
  CI (99.9%): [37.752, 38.309] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 56.11% complete, ETA 00:31:34
# Fork: 1 of 2
# Warmup Iteration   1: 300.947 ns/op
# Warmup Iteration   2: 280.163 ns/op
# Warmup Iteration   3: 238.938 ns/op
Iteration   1: 239.647 ns/op
Iteration   2: 238.472 ns/op
Iteration   3: 238.539 ns/op
Iteration   4: 239.172 ns/op
Iteration   5: 238.282 ns/op
Iteration   6: 239.177 ns/op
Iteration   7: 239.378 ns/op
Iteration   8: 235.888 ns/op
Iteration   9: 238.683 ns/op
Iteration  10: 239.003 ns/op

# Run progress: 56.17% complete, ETA 00:31:31
# Fork: 2 of 2
# Warmup Iteration   1: 297.871 ns/op
# Warmup Iteration   2: 282.307 ns/op
# Warmup Iteration   3: 239.208 ns/op
Iteration   1: 238.672 ns/op
Iteration   2: 238.319 ns/op
Iteration   3: 239.121 ns/op
Iteration   4: 239.088 ns/op
Iteration   5: 239.270 ns/op
Iteration   6: 238.732 ns/op
Iteration   7: 239.253 ns/op
Iteration   8: 235.848 ns/op
Iteration   9: 239.258 ns/op
Iteration  10: 238.725 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  238.626 ±(99.9%) 0.880 ns/op [Average]
  (min, avg, max) = (235.848, 238.626, 239.647), stdev = 1.013
  CI (99.9%): [237.747, 239.506] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 56.22% complete, ETA 00:31:29
# Fork: 1 of 2
# Warmup Iteration   1: 1485.786 ns/op
# Warmup Iteration   2: 1114.357 ns/op
# Warmup Iteration   3: 977.316 ns/op
Iteration   1: 972.623 ns/op
Iteration   2: 977.067 ns/op
Iteration   3: 975.340 ns/op
Iteration   4: 975.972 ns/op
Iteration   5: 974.358 ns/op
Iteration   6: 973.970 ns/op
Iteration   7: 974.273 ns/op
Iteration   8: 976.865 ns/op
Iteration   9: 977.910 ns/op
Iteration  10: 978.728 ns/op

# Run progress: 56.28% complete, ETA 00:31:27
# Fork: 2 of 2
# Warmup Iteration   1: 1507.556 ns/op
# Warmup Iteration   2: 1169.664 ns/op
# Warmup Iteration   3: 981.674 ns/op
Iteration   1: 983.270 ns/op
Iteration   2: 980.813 ns/op
Iteration   3: 980.744 ns/op
Iteration   4: 984.533 ns/op
Iteration   5: 979.384 ns/op
Iteration   6: 981.158 ns/op
Iteration   7: 981.443 ns/op
Iteration   8: 982.460 ns/op
Iteration   9: 983.374 ns/op
Iteration  10: 983.434 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  978.886 ±(99.9%) 3.202 ns/op [Average]
  (min, avg, max) = (972.623, 978.886, 984.533), stdev = 3.688
  CI (99.9%): [975.683, 982.088] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 56.33% complete, ETA 00:31:24
# Fork: 1 of 2
# Warmup Iteration   1: 1503.688 ns/op
# Warmup Iteration   2: 1179.398 ns/op
# Warmup Iteration   3: 987.188 ns/op
Iteration   1: 986.793 ns/op
Iteration   2: 986.374 ns/op
Iteration   3: 986.723 ns/op
Iteration   4: 990.019 ns/op
Iteration   5: 986.160 ns/op
Iteration   6: 986.199 ns/op
Iteration   7: 987.637 ns/op
Iteration   8: 985.455 ns/op
Iteration   9: 985.979 ns/op
Iteration  10: 985.130 ns/op

# Run progress: 56.39% complete, ETA 00:31:22
# Fork: 2 of 2
# Warmup Iteration   1: 1437.023 ns/op
# Warmup Iteration   2: 1130.729 ns/op
# Warmup Iteration   3: 984.928 ns/op
Iteration   1: 984.319 ns/op
Iteration   2: 986.856 ns/op
Iteration   3: 985.682 ns/op
Iteration   4: 983.782 ns/op
Iteration   5: 984.433 ns/op
Iteration   6: 982.969 ns/op
Iteration   7: 982.192 ns/op
Iteration   8: 988.491 ns/op
Iteration   9: 981.974 ns/op
Iteration  10: 985.717 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  985.644 ±(99.9%) 1.736 ns/op [Average]
  (min, avg, max) = (981.974, 985.644, 990.019), stdev = 1.999
  CI (99.9%): [983.909, 987.380] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 56.44% complete, ETA 00:31:19
# Fork: 1 of 2
# Warmup Iteration   1: 1777.625 ns/op
# Warmup Iteration   2: 1549.835 ns/op
# Warmup Iteration   3: 1334.923 ns/op
Iteration   1: 1337.394 ns/op
Iteration   2: 1334.356 ns/op
Iteration   3: 1336.347 ns/op
Iteration   4: 1335.095 ns/op
Iteration   5: 1337.691 ns/op
Iteration   6: 1336.183 ns/op
Iteration   7: 1335.700 ns/op
Iteration   8: 1335.797 ns/op
Iteration   9: 1334.450 ns/op
Iteration  10: 1334.691 ns/op

# Run progress: 56.50% complete, ETA 00:31:17
# Fork: 2 of 2
# Warmup Iteration   1: 1780.248 ns/op
# Warmup Iteration   2: 1559.287 ns/op
# Warmup Iteration   3: 1334.151 ns/op
Iteration   1: 1337.372 ns/op
Iteration   2: 1334.616 ns/op
Iteration   3: 1336.296 ns/op
Iteration   4: 1335.068 ns/op
Iteration   5: 1337.557 ns/op
Iteration   6: 1336.301 ns/op
Iteration   7: 1335.630 ns/op
Iteration   8: 1335.289 ns/op
Iteration   9: 1334.539 ns/op
Iteration  10: 1334.636 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1335.750 ±(99.9%) 0.963 ns/op [Average]
  (min, avg, max) = (1334.356, 1335.750, 1337.691), stdev = 1.109
  CI (99.9%): [1334.787, 1336.714] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 56.56% complete, ETA 00:31:15
# Fork: 1 of 2
# Warmup Iteration   1: 467.380 ns/op
# Warmup Iteration   2: 493.715 ns/op
# Warmup Iteration   3: 420.854 ns/op
Iteration   1: 421.813 ns/op
Iteration   2: 420.828 ns/op
Iteration   3: 420.658 ns/op
Iteration   4: 420.762 ns/op
Iteration   5: 421.375 ns/op
Iteration   6: 421.224 ns/op
Iteration   7: 421.294 ns/op
Iteration   8: 418.282 ns/op
Iteration   9: 421.539 ns/op
Iteration  10: 421.316 ns/op

# Run progress: 56.61% complete, ETA 00:31:12
# Fork: 2 of 2
# Warmup Iteration   1: 357.845 ns/op
# Warmup Iteration   2: 401.439 ns/op
# Warmup Iteration   3: 326.415 ns/op
Iteration   1: 326.368 ns/op
Iteration   2: 326.219 ns/op
Iteration   3: 325.956 ns/op
Iteration   4: 328.552 ns/op
Iteration   5: 328.370 ns/op
Iteration   6: 328.333 ns/op
Iteration   7: 328.496 ns/op
Iteration   8: 325.043 ns/op
Iteration   9: 328.120 ns/op
Iteration  10: 328.809 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  374.168 ±(99.9%) 41.655 ns/op [Average]
  (min, avg, max) = (325.043, 374.168, 421.813), stdev = 47.970
  CI (99.9%): [332.513, 415.823] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 56.67% complete, ETA 00:31:10
# Fork: 1 of 2
# Warmup Iteration   1: 37.973 ns/op
# Warmup Iteration   2: 68.103 ns/op
# Warmup Iteration   3: 35.651 ns/op
Iteration   1: 35.641 ns/op
Iteration   2: 35.691 ns/op
Iteration   3: 35.686 ns/op
Iteration   4: 35.596 ns/op
Iteration   5: 35.704 ns/op
Iteration   6: 36.100 ns/op
Iteration   7: 35.695 ns/op
Iteration   8: 34.515 ns/op
Iteration   9: 35.699 ns/op
Iteration  10: 35.624 ns/op

# Run progress: 56.72% complete, ETA 00:31:07
# Fork: 2 of 2
# Warmup Iteration   1: 37.824 ns/op
# Warmup Iteration   2: 64.704 ns/op
# Warmup Iteration   3: 35.688 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.761 ns/op
Iteration   3: 35.679 ns/op
Iteration   4: 35.682 ns/op
Iteration   5: 35.758 ns/op
Iteration   6: 36.162 ns/op
Iteration   7: 35.733 ns/op
Iteration   8: 34.552 ns/op
Iteration   9: 35.699 ns/op
Iteration  10: 35.629 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.615 ±(99.9%) 0.344 ns/op [Average]
  (min, avg, max) = (34.515, 35.615, 36.162), stdev = 0.396
  CI (99.9%): [35.271, 35.959] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 56.78% complete, ETA 00:31:05
# Fork: 1 of 2
# Warmup Iteration   1: 11118.291 ns/op
# Warmup Iteration   2: 8749.241 ns/op
# Warmup Iteration   3: 7545.242 ns/op
Iteration   1: 7552.753 ns/op
Iteration   2: 7545.451 ns/op
Iteration   3: 7560.980 ns/op
Iteration   4: 7558.239 ns/op
Iteration   5: 7583.545 ns/op
Iteration   6: 7555.493 ns/op
Iteration   7: 7551.735 ns/op
Iteration   8: 7553.982 ns/op
Iteration   9: 7524.102 ns/op
Iteration  10: 7556.915 ns/op

# Run progress: 56.83% complete, ETA 00:31:03
# Fork: 2 of 2
# Warmup Iteration   1: 8013.301 ns/op
# Warmup Iteration   2: 6595.027 ns/op
# Warmup Iteration   3: 5595.230 ns/op
Iteration   1: 5608.290 ns/op
Iteration   2: 5606.933 ns/op
Iteration   3: 5603.433 ns/op
Iteration   4: 5581.624 ns/op
Iteration   5: 5602.842 ns/op
Iteration   6: 5598.391 ns/op
Iteration   7: 5595.518 ns/op
Iteration   8: 5585.816 ns/op
Iteration   9: 5582.585 ns/op
Iteration  10: 5581.855 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6574.524 ±(99.9%) 872.982 ns/op [Average]
  (min, avg, max) = (5581.624, 6574.524, 7583.545), stdev = 1005.327
  CI (99.9%): [5701.543, 7447.506] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 56.89% complete, ETA 00:31:00
# Fork: 1 of 2
# Warmup Iteration   1: 17685.014 ns/op
# Warmup Iteration   2: 7874.316 ns/op
# Warmup Iteration   3: 6937.582 ns/op
Iteration   1: 6967.392 ns/op
Iteration   2: 6936.084 ns/op
Iteration   3: 6936.684 ns/op
Iteration   4: 6991.036 ns/op
Iteration   5: 6933.304 ns/op
Iteration   6: 6928.152 ns/op
Iteration   7: 6942.104 ns/op
Iteration   8: 6964.070 ns/op
Iteration   9: 6957.784 ns/op
Iteration  10: 6955.096 ns/op

# Run progress: 56.94% complete, ETA 00:30:58
# Fork: 2 of 2
# Warmup Iteration   1: 17104.691 ns/op
# Warmup Iteration   2: 7831.555 ns/op
# Warmup Iteration   3: 6944.481 ns/op
Iteration   1: 6980.969 ns/op
Iteration   2: 6948.451 ns/op
Iteration   3: 6978.304 ns/op
Iteration   4: 6992.354 ns/op
Iteration   5: 6970.823 ns/op
Iteration   6: 6988.814 ns/op
Iteration   7: 6952.128 ns/op
Iteration   8: 7000.002 ns/op
Iteration   9: 6938.487 ns/op
Iteration  10: 6978.187 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6962.011 ±(99.9%) 19.420 ns/op [Average]
  (min, avg, max) = (6928.152, 6962.011, 7000.002), stdev = 22.365
  CI (99.9%): [6942.591, 6981.432] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 57.00% complete, ETA 00:30:55
# Fork: 1 of 2
# Warmup Iteration   1: 16088.443 ns/op
# Warmup Iteration   2: 7811.362 ns/op
# Warmup Iteration   3: 6948.084 ns/op
Iteration   1: 6947.854 ns/op
Iteration   2: 6947.013 ns/op
Iteration   3: 6981.232 ns/op
Iteration   4: 6959.555 ns/op
Iteration   5: 6926.635 ns/op
Iteration   6: 6946.841 ns/op
Iteration   7: 6949.508 ns/op
Iteration   8: 6939.727 ns/op
Iteration   9: 6916.697 ns/op
Iteration  10: 6926.132 ns/op

# Run progress: 57.06% complete, ETA 00:30:53
# Fork: 2 of 2
# Warmup Iteration   1: 15394.912 ns/op
# Warmup Iteration   2: 7795.571 ns/op
# Warmup Iteration   3: 6962.671 ns/op
Iteration   1: 6951.245 ns/op
Iteration   2: 6903.745 ns/op
Iteration   3: 6964.364 ns/op
Iteration   4: 6935.997 ns/op
Iteration   5: 6924.531 ns/op
Iteration   6: 6967.894 ns/op
Iteration   7: 6925.882 ns/op
Iteration   8: 6976.934 ns/op
Iteration   9: 6948.687 ns/op
Iteration  10: 6945.827 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6944.315 ±(99.9%) 17.382 ns/op [Average]
  (min, avg, max) = (6903.745, 6944.315, 6981.232), stdev = 20.017
  CI (99.9%): [6926.933, 6961.697] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 57.11% complete, ETA 00:30:51
# Fork: 1 of 2
# Warmup Iteration   1: 8845.853 ns/op
# Warmup Iteration   2: 6252.336 ns/op
# Warmup Iteration   3: 5369.776 ns/op
Iteration   1: 5367.004 ns/op
Iteration   2: 5395.179 ns/op
Iteration   3: 5395.611 ns/op
Iteration   4: 5315.598 ns/op
Iteration   5: 5316.398 ns/op
Iteration   6: 5318.090 ns/op
Iteration   7: 5344.030 ns/op
Iteration   8: 5344.288 ns/op
Iteration   9: 5306.849 ns/op
Iteration  10: 5362.550 ns/op

# Run progress: 57.17% complete, ETA 00:30:48
# Fork: 2 of 2
# Warmup Iteration   1: 9119.119 ns/op
# Warmup Iteration   2: 6071.213 ns/op
# Warmup Iteration   3: 5351.946 ns/op
Iteration   1: 5352.990 ns/op
Iteration   2: 5382.251 ns/op
Iteration   3: 5381.004 ns/op
Iteration   4: 5413.564 ns/op
Iteration   5: 5359.455 ns/op
Iteration   6: 5371.835 ns/op
Iteration   7: 5358.732 ns/op
Iteration   8: 5418.495 ns/op
Iteration   9: 5368.175 ns/op
Iteration  10: 5366.356 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5361.923 ±(99.9%) 27.437 ns/op [Average]
  (min, avg, max) = (5306.849, 5361.923, 5418.495), stdev = 31.597
  CI (99.9%): [5334.485, 5389.360] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 57.22% complete, ETA 00:30:46
# Fork: 1 of 2
# Warmup Iteration   1: 14752.288 ns/op
# Warmup Iteration   2: 10757.387 ns/op
# Warmup Iteration   3: 9239.822 ns/op
Iteration   1: 9228.437 ns/op
Iteration   2: 9213.199 ns/op
Iteration   3: 9334.523 ns/op
Iteration   4: 9255.794 ns/op
Iteration   5: 9257.090 ns/op
Iteration   6: 9188.892 ns/op
Iteration   7: 9245.396 ns/op
Iteration   8: 9181.046 ns/op
Iteration   9: 9239.316 ns/op
Iteration  10: 9277.107 ns/op

# Run progress: 57.28% complete, ETA 00:30:43
# Fork: 2 of 2
# Warmup Iteration   1: 14799.842 ns/op
# Warmup Iteration   2: 10674.731 ns/op
# Warmup Iteration   3: 9149.754 ns/op
Iteration   1: 9153.935 ns/op
Iteration   2: 9127.047 ns/op
Iteration   3: 9148.657 ns/op
Iteration   4: 9130.475 ns/op
Iteration   5: 9198.441 ns/op
Iteration   6: 9140.416 ns/op
Iteration   7: 9191.889 ns/op
Iteration   8: 9129.194 ns/op
Iteration   9: 9157.136 ns/op
Iteration  10: 9168.812 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9198.340 ±(99.9%) 49.519 ns/op [Average]
  (min, avg, max) = (9127.047, 9198.340, 9334.523), stdev = 57.026
  CI (99.9%): [9148.821, 9247.859] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 57.33% complete, ETA 00:30:41
# Fork: 1 of 2
# Warmup Iteration   1: 38.613 ns/op
# Warmup Iteration   2: 64.144 ns/op
# Warmup Iteration   3: 35.712 ns/op
Iteration   1: 35.657 ns/op
Iteration   2: 35.675 ns/op
Iteration   3: 35.712 ns/op
Iteration   4: 35.715 ns/op
Iteration   5: 35.687 ns/op
Iteration   6: 36.210 ns/op
Iteration   7: 35.644 ns/op
Iteration   8: 34.429 ns/op
Iteration   9: 35.682 ns/op
Iteration  10: 35.671 ns/op

# Run progress: 57.39% complete, ETA 00:30:39
# Fork: 2 of 2
# Warmup Iteration   1: 56.206 ns/op
# Warmup Iteration   2: 66.391 ns/op
# Warmup Iteration   3: 49.998 ns/op
Iteration   1: 50.069 ns/op
Iteration   2: 49.936 ns/op
Iteration   3: 50.015 ns/op
Iteration   4: 49.987 ns/op
Iteration   5: 50.032 ns/op
Iteration   6: 50.050 ns/op
Iteration   7: 49.988 ns/op
Iteration   8: 34.507 ns/op
Iteration   9: 50.041 ns/op
Iteration  10: 50.003 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.035 ±(99.9%) 6.438 ns/op [Average]
  (min, avg, max) = (34.429, 42.035, 50.069), stdev = 7.414
  CI (99.9%): [35.597, 48.474] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 57.44% complete, ETA 00:30:36
# Fork: 1 of 2
# Warmup Iteration   1: 5961.997 ns/op
# Warmup Iteration   2: 4215.152 ns/op
# Warmup Iteration   3: 3599.067 ns/op
Iteration   1: 3606.340 ns/op
Iteration   2: 3612.855 ns/op
Iteration   3: 3605.724 ns/op
Iteration   4: 3622.400 ns/op
Iteration   5: 3609.222 ns/op
Iteration   6: 3628.605 ns/op
Iteration   7: 3603.356 ns/op
Iteration   8: 3623.210 ns/op
Iteration   9: 3613.018 ns/op
Iteration  10: 3628.489 ns/op

# Run progress: 57.50% complete, ETA 00:30:34
# Fork: 2 of 2
# Warmup Iteration   1: 5880.612 ns/op
# Warmup Iteration   2: 3995.151 ns/op
# Warmup Iteration   3: 3476.506 ns/op
Iteration   1: 3435.045 ns/op
Iteration   2: 3465.340 ns/op
Iteration   3: 3465.175 ns/op
Iteration   4: 3472.297 ns/op
Iteration   5: 3483.465 ns/op
Iteration   6: 3474.452 ns/op
Iteration   7: 3437.362 ns/op
Iteration   8: 3449.105 ns/op
Iteration   9: 3479.867 ns/op
Iteration  10: 3454.439 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3538.488 ±(99.9%) 69.444 ns/op [Average]
  (min, avg, max) = (3435.045, 3538.488, 3628.605), stdev = 79.971
  CI (99.9%): [3469.045, 3607.932] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 57.56% complete, ETA 00:30:31
# Fork: 1 of 2
# Warmup Iteration   1: 17027.344 ns/op
# Warmup Iteration   2: 5962.926 ns/op
# Warmup Iteration   3: 5259.333 ns/op
Iteration   1: 5282.084 ns/op
Iteration   2: 5292.378 ns/op
Iteration   3: 5298.844 ns/op
Iteration   4: 5265.577 ns/op
Iteration   5: 5247.065 ns/op
Iteration   6: 5232.436 ns/op
Iteration   7: 5246.347 ns/op
Iteration   8: 5309.839 ns/op
Iteration   9: 5323.478 ns/op
Iteration  10: 5298.455 ns/op

# Run progress: 57.61% complete, ETA 00:30:29
# Fork: 2 of 2
# Warmup Iteration   1: 15172.673 ns/op
# Warmup Iteration   2: 6299.864 ns/op
# Warmup Iteration   3: 5321.391 ns/op
Iteration   1: 5327.205 ns/op
Iteration   2: 5340.201 ns/op
Iteration   3: 5322.429 ns/op
Iteration   4: 5339.303 ns/op
Iteration   5: 5315.497 ns/op
Iteration   6: 5339.679 ns/op
Iteration   7: 5350.231 ns/op
Iteration   8: 5303.376 ns/op
Iteration   9: 5375.660 ns/op
Iteration  10: 5348.269 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5307.918 ±(99.9%) 33.344 ns/op [Average]
  (min, avg, max) = (5232.436, 5307.918, 5375.660), stdev = 38.399
  CI (99.9%): [5274.574, 5341.262] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 57.67% complete, ETA 00:30:27
# Fork: 1 of 2
# Warmup Iteration   1: 14999.105 ns/op
# Warmup Iteration   2: 5861.892 ns/op
# Warmup Iteration   3: 5077.629 ns/op
Iteration   1: 5078.425 ns/op
Iteration   2: 5064.517 ns/op
Iteration   3: 5060.750 ns/op
Iteration   4: 5067.891 ns/op
Iteration   5: 5062.871 ns/op
Iteration   6: 5088.630 ns/op
Iteration   7: 5081.238 ns/op
Iteration   8: 5065.724 ns/op
Iteration   9: 5076.184 ns/op
Iteration  10: 5072.466 ns/op

# Run progress: 57.72% complete, ETA 00:30:24
# Fork: 2 of 2
# Warmup Iteration   1: 16053.904 ns/op
# Warmup Iteration   2: 5807.636 ns/op
# Warmup Iteration   3: 5083.559 ns/op
Iteration   1: 5077.626 ns/op
Iteration   2: 5073.611 ns/op
Iteration   3: 5075.198 ns/op
Iteration   4: 5078.179 ns/op
Iteration   5: 5073.298 ns/op
Iteration   6: 5073.079 ns/op
Iteration   7: 5075.673 ns/op
Iteration   8: 5063.879 ns/op
Iteration   9: 5070.351 ns/op
Iteration  10: 5081.862 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5073.073 ±(99.9%) 6.252 ns/op [Average]
  (min, avg, max) = (5060.750, 5073.073, 5088.630), stdev = 7.200
  CI (99.9%): [5066.820, 5079.325] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 57.78% complete, ETA 00:30:22
# Fork: 1 of 2
# Warmup Iteration   1: 7787.631 ns/op
# Warmup Iteration   2: 5233.649 ns/op
# Warmup Iteration   3: 4384.981 ns/op
Iteration   1: 4405.366 ns/op
Iteration   2: 4417.212 ns/op
Iteration   3: 4435.342 ns/op
Iteration   4: 4387.940 ns/op
Iteration   5: 4416.204 ns/op
Iteration   6: 4404.904 ns/op
Iteration   7: 4419.230 ns/op
Iteration   8: 4425.083 ns/op
Iteration   9: 4413.827 ns/op
Iteration  10: 4413.430 ns/op

# Run progress: 57.83% complete, ETA 00:30:19
# Fork: 2 of 2
# Warmup Iteration   1: 7836.074 ns/op
# Warmup Iteration   2: 4941.965 ns/op
# Warmup Iteration   3: 4436.010 ns/op
Iteration   1: 4435.553 ns/op
Iteration   2: 4411.014 ns/op
Iteration   3: 4405.801 ns/op
Iteration   4: 4446.417 ns/op
Iteration   5: 4438.560 ns/op
Iteration   6: 4405.805 ns/op
Iteration   7: 4438.716 ns/op
Iteration   8: 4409.342 ns/op
Iteration   9: 4402.094 ns/op
Iteration  10: 4444.629 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4418.824 ±(99.9%) 14.039 ns/op [Average]
  (min, avg, max) = (4387.940, 4418.824, 4446.417), stdev = 16.168
  CI (99.9%): [4404.784, 4432.863] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 57.89% complete, ETA 00:30:17
# Fork: 1 of 2
# Warmup Iteration   1: 13773.526 ns/op
# Warmup Iteration   2: 9301.127 ns/op
# Warmup Iteration   3: 7971.438 ns/op
Iteration   1: 7964.110 ns/op
Iteration   2: 7954.576 ns/op
Iteration   3: 7973.946 ns/op
Iteration   4: 7967.874 ns/op
Iteration   5: 7972.782 ns/op
Iteration   6: 7976.892 ns/op
Iteration   7: 7963.732 ns/op
Iteration   8: 7983.824 ns/op
Iteration   9: 7972.046 ns/op
Iteration  10: 7973.454 ns/op

# Run progress: 57.94% complete, ETA 00:30:15
# Fork: 2 of 2
# Warmup Iteration   1: 12981.104 ns/op
# Warmup Iteration   2: 8805.886 ns/op
# Warmup Iteration   3: 7744.239 ns/op
Iteration   1: 7763.697 ns/op
Iteration   2: 7747.409 ns/op
Iteration   3: 7764.201 ns/op
Iteration   4: 7748.878 ns/op
Iteration   5: 7748.884 ns/op
Iteration   6: 7734.852 ns/op
Iteration   7: 7760.205 ns/op
Iteration   8: 7749.947 ns/op
Iteration   9: 7781.472 ns/op
Iteration  10: 7740.600 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7862.169 ±(99.9%) 96.817 ns/op [Average]
  (min, avg, max) = (7734.852, 7862.169, 7983.824), stdev = 111.495
  CI (99.9%): [7765.352, 7958.986] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 58.00% complete, ETA 00:30:12
# Fork: 1 of 2
# Warmup Iteration   1: 38.226 ns/op
# Warmup Iteration   2: 66.750 ns/op
# Warmup Iteration   3: 35.717 ns/op
Iteration   1: 35.661 ns/op
Iteration   2: 35.695 ns/op
Iteration   3: 35.710 ns/op
Iteration   4: 35.644 ns/op
Iteration   5: 35.710 ns/op
Iteration   6: 36.179 ns/op
Iteration   7: 35.684 ns/op
Iteration   8: 34.504 ns/op
Iteration   9: 35.675 ns/op
Iteration  10: 35.757 ns/op

# Run progress: 58.06% complete, ETA 00:30:10
# Fork: 2 of 2
# Warmup Iteration   1: 38.883 ns/op
# Warmup Iteration   2: 73.028 ns/op
# Warmup Iteration   3: 35.749 ns/op
Iteration   1: 35.699 ns/op
Iteration   2: 35.682 ns/op
Iteration   3: 35.717 ns/op
Iteration   4: 35.693 ns/op
Iteration   5: 35.720 ns/op
Iteration   6: 36.217 ns/op
Iteration   7: 35.696 ns/op
Iteration   8: 34.508 ns/op
Iteration   9: 35.720 ns/op
Iteration  10: 35.722 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.630 ±(99.9%) 0.360 ns/op [Average]
  (min, avg, max) = (34.504, 35.630, 36.217), stdev = 0.414
  CI (99.9%): [35.270, 35.989] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 58.11% complete, ETA 00:30:07
# Fork: 1 of 2
# Warmup Iteration   1: 5824.408 ns/op
# Warmup Iteration   2: 6157.930 ns/op
# Warmup Iteration   3: 5402.478 ns/op
Iteration   1: 11961.196 ns/op
Iteration   2: 3670.314 ns/op
Iteration   3: 9069.289 ns/op
Iteration   4: 3537.481 ns/op
Iteration   5: 4238.167 ns/op
Iteration   6: 3573.541 ns/op
Iteration   7: 3751.867 ns/op
Iteration   8: 3331.915 ns/op
Iteration   9: 3142.473 ns/op
Iteration  10: 3060.591 ns/op

# Run progress: 58.17% complete, ETA 00:30:05
# Fork: 2 of 2
# Warmup Iteration   1: 5514.569 ns/op
# Warmup Iteration   2: 6840.373 ns/op
# Warmup Iteration   3: 5404.748 ns/op
Iteration   1: 10345.332 ns/op
Iteration   2: 4090.031 ns/op
Iteration   3: 13350.922 ns/op
Iteration   4: 3579.286 ns/op
Iteration   5: 4353.793 ns/op
Iteration   6: 3646.359 ns/op
Iteration   7: 3901.021 ns/op
Iteration   8: 3286.759 ns/op
Iteration   9: 3242.660 ns/op
Iteration  10: 3209.465 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5117.123 ±(99.9%) 2793.705 ns/op [Average]
  (min, avg, max) = (3060.591, 5117.123, 13350.922), stdev = 3217.234
  CI (99.9%): [2323.419, 7910.828] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 58.22% complete, ETA 00:30:03
# Fork: 1 of 2
# Warmup Iteration   1: 7992.398 ns/op
# Warmup Iteration   2: 8104.600 ns/op
# Warmup Iteration   3: 6192.883 ns/op
Iteration   1: 5181.431 ns/op
Iteration   2: 3998.275 ns/op
Iteration   3: 4594.447 ns/op
Iteration   4: 3470.686 ns/op
Iteration   5: 4728.534 ns/op
Iteration   6: 7259.855 ns/op
Iteration   7: 4630.370 ns/op
Iteration   8: 4032.717 ns/op
Iteration   9: 4542.534 ns/op
Iteration  10: 4981.009 ns/op

# Run progress: 58.28% complete, ETA 00:30:00
# Fork: 2 of 2
# Warmup Iteration   1: 9134.193 ns/op
# Warmup Iteration   2: 6507.663 ns/op
# Warmup Iteration   3: 6246.138 ns/op
Iteration   1: 5136.025 ns/op
Iteration   2: 4035.758 ns/op
Iteration   3: 4708.633 ns/op
Iteration   4: 3511.805 ns/op
Iteration   5: 4791.765 ns/op
Iteration   6: 5723.909 ns/op
Iteration   7: 4505.787 ns/op
Iteration   8: 4275.867 ns/op
Iteration   9: 4652.058 ns/op
Iteration  10: 4852.995 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4680.723 ±(99.9%) 709.663 ns/op [Average]
  (min, avg, max) = (3470.686, 4680.723, 7259.855), stdev = 817.249
  CI (99.9%): [3971.060, 5390.386] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 58.33% complete, ETA 00:29:58
# Fork: 1 of 2
# Warmup Iteration   1: 6904.794 ns/op
# Warmup Iteration   2: 8260.454 ns/op
# Warmup Iteration   3: 5562.032 ns/op
Iteration   1: 5155.229 ns/op
Iteration   2: 3981.844 ns/op
Iteration   3: 4773.731 ns/op
Iteration   4: 3159.661 ns/op
Iteration   5: 4929.385 ns/op
Iteration   6: 6448.810 ns/op
Iteration   7: 4735.073 ns/op
Iteration   8: 3977.414 ns/op
Iteration   9: 4346.104 ns/op
Iteration  10: 4846.837 ns/op

# Run progress: 58.39% complete, ETA 00:29:55
# Fork: 2 of 2
# Warmup Iteration   1: 8093.706 ns/op
# Warmup Iteration   2: 6958.815 ns/op
# Warmup Iteration   3: 6053.421 ns/op
Iteration   1: 4989.008 ns/op
Iteration   2: 4066.934 ns/op
Iteration   3: 7596.788 ns/op
Iteration   4: 3289.886 ns/op
Iteration   5: 4863.264 ns/op
Iteration   6: 6370.191 ns/op
Iteration   7: 4603.453 ns/op
Iteration   8: 3918.552 ns/op
Iteration   9: 4289.986 ns/op
Iteration  10: 4566.825 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4745.449 ±(99.9%) 919.996 ns/op [Average]
  (min, avg, max) = (3159.661, 4745.449, 7596.788), stdev = 1059.468
  CI (99.9%): [3825.453, 5665.444] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 58.44% complete, ETA 00:29:53
# Fork: 1 of 2
# Warmup Iteration   1: 6801.549 ns/op
# Warmup Iteration   2: 6523.280 ns/op
# Warmup Iteration   3: 5209.916 ns/op
Iteration   1: 6473.568 ns/op
Iteration   2: 3888.317 ns/op
Iteration   3: 4006.995 ns/op
Iteration   4: 3631.337 ns/op
Iteration   5: 4623.538 ns/op
Iteration   6: 7289.244 ns/op
Iteration   7: 4263.806 ns/op
Iteration   8: 4140.028 ns/op
Iteration   9: 4381.874 ns/op
Iteration  10: 4448.426 ns/op

# Run progress: 58.50% complete, ETA 00:29:51
# Fork: 2 of 2
# Warmup Iteration   1: 5926.873 ns/op
# Warmup Iteration   2: 6636.393 ns/op
# Warmup Iteration   3: 5618.156 ns/op
Iteration   1: 11318.182 ns/op
Iteration   2: 4003.986 ns/op
Iteration   3: 4070.629 ns/op
Iteration   4: 3678.933 ns/op
Iteration   5: 4827.990 ns/op
Iteration   6: 7146.617 ns/op
Iteration   7: 4172.574 ns/op
Iteration   8: 3896.858 ns/op
Iteration   9: 4263.530 ns/op
Iteration  10: 4360.528 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4944.348 ±(99.9%) 1600.743 ns/op [Average]
  (min, avg, max) = (3631.337, 4944.348, 11318.182), stdev = 1843.418
  CI (99.9%): [3343.605, 6545.091] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 58.56% complete, ETA 00:29:48
# Fork: 1 of 2
# Warmup Iteration   1: 13852.730 ns/op
# Warmup Iteration   2: 9392.632 ns/op
# Warmup Iteration   3: 8124.194 ns/op
Iteration   1: 8002.600 ns/op
Iteration   2: 8011.366 ns/op
Iteration   3: 8015.498 ns/op
Iteration   4: 8014.837 ns/op
Iteration   5: 8043.537 ns/op
Iteration   6: 8007.470 ns/op
Iteration   7: 8083.792 ns/op
Iteration   8: 8005.535 ns/op
Iteration   9: 8045.252 ns/op
Iteration  10: 8140.586 ns/op

# Run progress: 58.61% complete, ETA 00:29:46
# Fork: 2 of 2
# Warmup Iteration   1: 13670.906 ns/op
# Warmup Iteration   2: 9277.703 ns/op
# Warmup Iteration   3: 7894.418 ns/op
Iteration   1: 7913.494 ns/op
Iteration   2: 7894.675 ns/op
Iteration   3: 7905.493 ns/op
Iteration   4: 7891.531 ns/op
Iteration   5: 7893.510 ns/op
Iteration   6: 7892.944 ns/op
Iteration   7: 7933.025 ns/op
Iteration   8: 7899.197 ns/op
Iteration   9: 7908.056 ns/op
Iteration  10: 7895.667 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7969.903 ±(99.9%) 65.878 ns/op [Average]
  (min, avg, max) = (7891.531, 7969.903, 8140.586), stdev = 75.866
  CI (99.9%): [7904.025, 8035.782] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 58.67% complete, ETA 00:29:43
# Fork: 1 of 2
# Warmup Iteration   1: 37.801 ns/op
# Warmup Iteration   2: 64.461 ns/op
# Warmup Iteration   3: 46.158 ns/op
Iteration   1: 46.140 ns/op
Iteration   2: 46.223 ns/op
Iteration   3: 46.206 ns/op
Iteration   4: 47.823 ns/op
Iteration   5: 46.112 ns/op
Iteration   6: 46.222 ns/op
Iteration   7: 46.200 ns/op
Iteration   8: 34.553 ns/op
Iteration   9: 46.171 ns/op
Iteration  10: 46.173 ns/op

# Run progress: 58.72% complete, ETA 00:29:41
# Fork: 2 of 2
# Warmup Iteration   1: 38.453 ns/op
# Warmup Iteration   2: 66.143 ns/op
# Warmup Iteration   3: 35.671 ns/op
Iteration   1: 35.677 ns/op
Iteration   2: 35.660 ns/op
Iteration   3: 35.685 ns/op
Iteration   4: 35.732 ns/op
Iteration   5: 35.667 ns/op
Iteration   6: 36.169 ns/op
Iteration   7: 35.698 ns/op
Iteration   8: 34.425 ns/op
Iteration   9: 35.714 ns/op
Iteration  10: 35.645 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  40.395 ±(99.9%) 4.831 ns/op [Average]
  (min, avg, max) = (34.425, 40.395, 47.823), stdev = 5.564
  CI (99.9%): [35.563, 45.226] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 58.78% complete, ETA 00:29:39
# Fork: 1 of 2
# Warmup Iteration   1: 3533.724 ns/op
# Warmup Iteration   2: 3223.459 ns/op
# Warmup Iteration   3: 2721.910 ns/op
Iteration   1: 2725.688 ns/op
Iteration   2: 2717.780 ns/op
Iteration   3: 2731.415 ns/op
Iteration   4: 2729.059 ns/op
Iteration   5: 2719.770 ns/op
Iteration   6: 2722.156 ns/op
Iteration   7: 2728.490 ns/op
Iteration   8: 2716.473 ns/op
Iteration   9: 2720.918 ns/op
Iteration  10: 2723.617 ns/op

# Run progress: 58.83% complete, ETA 00:29:36
# Fork: 2 of 2
# Warmup Iteration   1: 3413.500 ns/op
# Warmup Iteration   2: 3080.388 ns/op
# Warmup Iteration   3: 2721.898 ns/op
Iteration   1: 2725.227 ns/op
Iteration   2: 2723.402 ns/op
Iteration   3: 2713.178 ns/op
Iteration   4: 2716.734 ns/op
Iteration   5: 2734.880 ns/op
Iteration   6: 2724.113 ns/op
Iteration   7: 2737.232 ns/op
Iteration   8: 2716.714 ns/op
Iteration   9: 2723.769 ns/op
Iteration  10: 2708.116 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2722.936 ±(99.9%) 6.230 ns/op [Average]
  (min, avg, max) = (2708.116, 2722.936, 2737.232), stdev = 7.174
  CI (99.9%): [2716.707, 2729.166] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 58.89% complete, ETA 00:29:34
# Fork: 1 of 2
# Warmup Iteration   1: 3279.150 ns/op
# Warmup Iteration   2: 2074.465 ns/op
# Warmup Iteration   3: 1847.245 ns/op
Iteration   1: 1844.149 ns/op
Iteration   2: 1838.943 ns/op
Iteration   3: 1844.054 ns/op
Iteration   4: 1815.504 ns/op
Iteration   5: 1842.313 ns/op
Iteration   6: 1831.286 ns/op
Iteration   7: 1812.078 ns/op
Iteration   8: 1823.614 ns/op
Iteration   9: 1811.210 ns/op
Iteration  10: 1834.663 ns/op

# Run progress: 58.94% complete, ETA 00:29:31
# Fork: 2 of 2
# Warmup Iteration   1: 3239.583 ns/op
# Warmup Iteration   2: 2246.630 ns/op
# Warmup Iteration   3: 2003.010 ns/op
Iteration   1: 1903.510 ns/op
Iteration   2: 1899.622 ns/op
Iteration   3: 1947.421 ns/op
Iteration   4: 2003.450 ns/op
Iteration   5: 2005.678 ns/op
Iteration   6: 1928.808 ns/op
Iteration   7: 1899.833 ns/op
Iteration   8: 1989.239 ns/op
Iteration   9: 2004.192 ns/op
Iteration  10: 2002.133 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1894.085 ±(99.9%) 64.367 ns/op [Average]
  (min, avg, max) = (1811.210, 1894.085, 2005.678), stdev = 74.125
  CI (99.9%): [1829.718, 1958.452] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 59.00% complete, ETA 00:29:29
# Fork: 1 of 2
# Warmup Iteration   1: 3194.114 ns/op
# Warmup Iteration   2: 2296.481 ns/op
# Warmup Iteration   3: 1933.827 ns/op
Iteration   1: 1901.731 ns/op
Iteration   2: 2003.846 ns/op
Iteration   3: 1903.589 ns/op
Iteration   4: 2003.817 ns/op
Iteration   5: 1896.907 ns/op
Iteration   6: 1976.889 ns/op
Iteration   7: 1943.427 ns/op
Iteration   8: 1952.633 ns/op
Iteration   9: 1954.002 ns/op
Iteration  10: 1902.220 ns/op

# Run progress: 59.06% complete, ETA 00:29:27
# Fork: 2 of 2
# Warmup Iteration   1: 3140.028 ns/op
# Warmup Iteration   2: 2035.838 ns/op
# Warmup Iteration   3: 1806.070 ns/op
Iteration   1: 1824.692 ns/op
Iteration   2: 1800.760 ns/op
Iteration   3: 1816.048 ns/op
Iteration   4: 1810.594 ns/op
Iteration   5: 1796.685 ns/op
Iteration   6: 1810.036 ns/op
Iteration   7: 1800.795 ns/op
Iteration   8: 1809.517 ns/op
Iteration   9: 1807.217 ns/op
Iteration  10: 1805.623 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1876.051 ±(99.9%) 65.614 ns/op [Average]
  (min, avg, max) = (1796.685, 1876.051, 2003.846), stdev = 75.561
  CI (99.9%): [1810.438, 1941.665] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 59.11% complete, ETA 00:29:24
# Fork: 1 of 2
# Warmup Iteration   1: 3489.391 ns/op
# Warmup Iteration   2: 2516.895 ns/op
# Warmup Iteration   3: 2238.783 ns/op
Iteration   1: 2256.741 ns/op
Iteration   2: 2221.465 ns/op
Iteration   3: 2261.206 ns/op
Iteration   4: 2239.216 ns/op
Iteration   5: 2234.146 ns/op
Iteration   6: 2231.803 ns/op
Iteration   7: 2220.671 ns/op
Iteration   8: 2242.042 ns/op
Iteration   9: 2240.886 ns/op
Iteration  10: 2232.000 ns/op

# Run progress: 59.17% complete, ETA 00:29:22
# Fork: 2 of 2
# Warmup Iteration   1: 3192.395 ns/op
# Warmup Iteration   2: 2566.554 ns/op
# Warmup Iteration   3: 2225.055 ns/op
Iteration   1: 2239.613 ns/op
Iteration   2: 2225.347 ns/op
Iteration   3: 2236.635 ns/op
Iteration   4: 2229.316 ns/op
Iteration   5: 2224.951 ns/op
Iteration   6: 2234.684 ns/op
Iteration   7: 2224.865 ns/op
Iteration   8: 2235.017 ns/op
Iteration   9: 2224.440 ns/op
Iteration  10: 2233.137 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2234.409 ±(99.9%) 9.197 ns/op [Average]
  (min, avg, max) = (2220.671, 2234.409, 2261.206), stdev = 10.591
  CI (99.9%): [2225.212, 2243.606] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 59.22% complete, ETA 00:29:19
# Fork: 1 of 2
# Warmup Iteration   1: 13497.499 ns/op
# Warmup Iteration   2: 9020.132 ns/op
# Warmup Iteration   3: 7895.053 ns/op
Iteration   1: 7888.605 ns/op
Iteration   2: 7878.784 ns/op
Iteration   3: 7896.757 ns/op
Iteration   4: 7883.154 ns/op
Iteration   5: 7889.616 ns/op
Iteration   6: 7868.827 ns/op
Iteration   7: 7889.619 ns/op
Iteration   8: 7885.013 ns/op
Iteration   9: 7911.190 ns/op
Iteration  10: 7890.956 ns/op

# Run progress: 59.28% complete, ETA 00:29:17
# Fork: 2 of 2
# Warmup Iteration   1: 13385.203 ns/op
# Warmup Iteration   2: 9282.798 ns/op
# Warmup Iteration   3: 7989.161 ns/op
Iteration   1: 7978.784 ns/op
Iteration   2: 7971.616 ns/op
Iteration   3: 7988.258 ns/op
Iteration   4: 7930.183 ns/op
Iteration   5: 7942.096 ns/op
Iteration   6: 7921.958 ns/op
Iteration   7: 7943.010 ns/op
Iteration   8: 7925.159 ns/op
Iteration   9: 7940.534 ns/op
Iteration  10: 7950.401 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7918.726 ±(99.9%) 31.142 ns/op [Average]
  (min, avg, max) = (7868.827, 7918.726, 7988.258), stdev = 35.863
  CI (99.9%): [7887.584, 7949.868] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 59.33% complete, ETA 00:29:15
# Fork: 1 of 2
# Warmup Iteration   1: 38.514 ns/op
# Warmup Iteration   2: 66.112 ns/op
# Warmup Iteration   3: 35.683 ns/op
Iteration   1: 35.700 ns/op
Iteration   2: 35.648 ns/op
Iteration   3: 35.720 ns/op
Iteration   4: 35.655 ns/op
Iteration   5: 35.688 ns/op
Iteration   6: 36.182 ns/op
Iteration   7: 35.668 ns/op
Iteration   8: 34.439 ns/op
Iteration   9: 35.765 ns/op
Iteration  10: 35.695 ns/op

# Run progress: 59.39% complete, ETA 00:29:12
# Fork: 2 of 2
# Warmup Iteration   1: 38.767 ns/op
# Warmup Iteration   2: 65.193 ns/op
# Warmup Iteration   3: 35.672 ns/op
Iteration   1: 35.709 ns/op
Iteration   2: 35.633 ns/op
Iteration   3: 35.640 ns/op
Iteration   4: 35.727 ns/op
Iteration   5: 35.697 ns/op
Iteration   6: 36.127 ns/op
Iteration   7: 35.666 ns/op
Iteration   8: 34.425 ns/op
Iteration   9: 35.659 ns/op
Iteration  10: 35.646 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.604 ±(99.9%) 0.371 ns/op [Average]
  (min, avg, max) = (34.425, 35.604, 36.182), stdev = 0.428
  CI (99.9%): [35.233, 35.976] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 59.44% complete, ETA 00:29:10
# Fork: 1 of 2
# Warmup Iteration   1: 8086.679 ns/op
# Warmup Iteration   2: 11073.498 ns/op
# Warmup Iteration   3: 5811.278 ns/op
Iteration   1: 3729.045 ns/op
Iteration   2: 3964.474 ns/op
Iteration   3: 4103.236 ns/op
Iteration   4: 3913.806 ns/op
Iteration   5: 3781.193 ns/op
Iteration   6: 4000.011 ns/op
Iteration   7: 14159.857 ns/op
Iteration   8: 3971.279 ns/op
Iteration   9: 4207.531 ns/op
Iteration  10: 3734.387 ns/op

# Run progress: 59.50% complete, ETA 00:29:07
# Fork: 2 of 2
# Warmup Iteration   1: 7957.492 ns/op
# Warmup Iteration   2: 11151.301 ns/op
# Warmup Iteration   3: 6577.515 ns/op
Iteration   1: 3883.403 ns/op
Iteration   2: 4059.858 ns/op
Iteration   3: 4247.178 ns/op
Iteration   4: 3984.780 ns/op
Iteration   5: 3844.899 ns/op
Iteration   6: 4072.149 ns/op
Iteration   7: 10595.065 ns/op
Iteration   8: 4180.463 ns/op
Iteration   9: 4296.301 ns/op
Iteration  10: 3845.437 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4828.718 ±(99.9%) 2301.675 ns/op [Average]
  (min, avg, max) = (3729.045, 4828.718, 14159.857), stdev = 2650.613
  CI (99.9%): [2527.042, 7130.393] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 59.56% complete, ETA 00:29:05
# Fork: 1 of 2
# Warmup Iteration   1: 10511.086 ns/op
# Warmup Iteration   2: 9526.528 ns/op
# Warmup Iteration   3: 4134.811 ns/op
Iteration   1: 3199.780 ns/op
Iteration   2: 5969.346 ns/op
Iteration   3: 3813.330 ns/op
Iteration   4: 3128.172 ns/op
Iteration   5: 2984.558 ns/op
Iteration   6: 3504.495 ns/op
Iteration   7: 3233.050 ns/op
Iteration   8: 3132.865 ns/op
Iteration   9: 3556.218 ns/op
Iteration  10: 3408.467 ns/op

# Run progress: 59.61% complete, ETA 00:29:03
# Fork: 2 of 2
# Warmup Iteration   1: 9427.239 ns/op
# Warmup Iteration   2: 10239.148 ns/op
# Warmup Iteration   3: 5157.839 ns/op
Iteration   1: 3095.417 ns/op
Iteration   2: 7049.044 ns/op
Iteration   3: 3661.203 ns/op
Iteration   4: 2998.459 ns/op
Iteration   5: 2859.733 ns/op
Iteration   6: 3345.246 ns/op
Iteration   7: 3068.123 ns/op
Iteration   8: 3054.933 ns/op
Iteration   9: 3466.819 ns/op
Iteration  10: 3170.149 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3584.970 ±(99.9%) 906.994 ns/op [Average]
  (min, avg, max) = (2859.733, 3584.970, 7049.044), stdev = 1044.495
  CI (99.9%): [2677.976, 4491.964] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 59.67% complete, ETA 00:29:00
# Fork: 1 of 2
# Warmup Iteration   1: 9300.943 ns/op
# Warmup Iteration   2: 6687.358 ns/op
# Warmup Iteration   3: 5669.191 ns/op
Iteration   1: 3708.583 ns/op
Iteration   2: 5780.006 ns/op
Iteration   3: 3356.375 ns/op
Iteration   4: 3477.509 ns/op
Iteration   5: 3369.797 ns/op
Iteration   6: 4355.261 ns/op
Iteration   7: 3477.402 ns/op
Iteration   8: 3503.298 ns/op
Iteration   9: 3880.362 ns/op
Iteration  10: 3926.609 ns/op

# Run progress: 59.72% complete, ETA 00:28:58
# Fork: 2 of 2
# Warmup Iteration   1: 8251.285 ns/op
# Warmup Iteration   2: 8052.650 ns/op
# Warmup Iteration   3: 5660.821 ns/op
Iteration   1: 3775.008 ns/op
Iteration   2: 5516.774 ns/op
Iteration   3: 3301.692 ns/op
Iteration   4: 3329.255 ns/op
Iteration   5: 3283.892 ns/op
Iteration   6: 4207.398 ns/op
Iteration   7: 3465.586 ns/op
Iteration   8: 3385.492 ns/op
Iteration   9: 3771.566 ns/op
Iteration  10: 3822.268 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3834.707 ±(99.9%) 599.256 ns/op [Average]
  (min, avg, max) = (3283.892, 3834.707, 5780.006), stdev = 690.104
  CI (99.9%): [3235.451, 4433.962] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 59.78% complete, ETA 00:28:55
# Fork: 1 of 2
# Warmup Iteration   1: 4651.957 ns/op
# Warmup Iteration   2: 6987.069 ns/op
# Warmup Iteration   3: 3701.183 ns/op
Iteration   1: 3377.316 ns/op
Iteration   2: 3373.159 ns/op
Iteration   3: 3285.005 ns/op
Iteration   4: 3292.233 ns/op
Iteration   5: 5373.741 ns/op
Iteration   6: 3595.007 ns/op
Iteration   7: 3346.960 ns/op
Iteration   8: 3156.960 ns/op
Iteration   9: 3653.255 ns/op
Iteration  10: 3595.452 ns/op

# Run progress: 59.83% complete, ETA 00:28:53
# Fork: 2 of 2
# Warmup Iteration   1: 4993.127 ns/op
# Warmup Iteration   2: 6266.181 ns/op
# Warmup Iteration   3: 3566.000 ns/op
Iteration   1: 3329.551 ns/op
Iteration   2: 3329.726 ns/op
Iteration   3: 3323.945 ns/op
Iteration   4: 3177.141 ns/op
Iteration   5: 4501.277 ns/op
Iteration   6: 3614.594 ns/op
Iteration   7: 3309.776 ns/op
Iteration   8: 3133.748 ns/op
Iteration   9: 3624.074 ns/op
Iteration  10: 3688.748 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3554.083 ±(99.9%) 453.666 ns/op [Average]
  (min, avg, max) = (3133.748, 3554.083, 5373.741), stdev = 522.442
  CI (99.9%): [3100.418, 4007.749] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 59.89% complete, ETA 00:28:51
# Fork: 1 of 2
# Warmup Iteration   1: 16725.332 ns/op
# Warmup Iteration   2: 17858.666 ns/op
# Warmup Iteration   3: 10335.744 ns/op
Iteration   1: 10091.866 ns/op
Iteration   2: 13290.131 ns/op
Iteration   3: 10173.701 ns/op
Iteration   4: 10148.482 ns/op
Iteration   5: 10569.907 ns/op
Iteration   6: 10123.046 ns/op
Iteration   7: 10027.400 ns/op
Iteration   8: 9736.645 ns/op
Iteration   9: 10012.045 ns/op
Iteration  10: 10370.263 ns/op

# Run progress: 59.94% complete, ETA 00:28:48
# Fork: 2 of 2
# Warmup Iteration   1: 16012.284 ns/op
# Warmup Iteration   2: 18366.485 ns/op
# Warmup Iteration   3: 10593.206 ns/op
Iteration   1: 10586.703 ns/op
Iteration   2: 13910.190 ns/op
Iteration   3: 10650.785 ns/op
Iteration   4: 10678.219 ns/op
Iteration   5: 10962.216 ns/op
Iteration   6: 10596.777 ns/op
Iteration   7: 10517.559 ns/op
Iteration   8: 10282.405 ns/op
Iteration   9: 10453.463 ns/op
Iteration  10: 10648.441 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10691.512 ±(99.9%) 905.104 ns/op [Average]
  (min, avg, max) = (9736.645, 10691.512, 13910.190), stdev = 1042.319
  CI (99.9%): [9786.408, 11596.616] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 60.00% complete, ETA 00:28:46
# Fork: 1 of 2
# Warmup Iteration   1: 37.854 ns/op
# Warmup Iteration   2: 66.591 ns/op
# Warmup Iteration   3: 35.677 ns/op
Iteration   1: 35.668 ns/op
Iteration   2: 35.640 ns/op
Iteration   3: 35.684 ns/op
Iteration   4: 35.678 ns/op
Iteration   5: 35.665 ns/op
Iteration   6: 36.162 ns/op
Iteration   7: 35.685 ns/op
Iteration   8: 34.536 ns/op
Iteration   9: 35.659 ns/op
Iteration  10: 35.722 ns/op

# Run progress: 60.06% complete, ETA 00:28:43
# Fork: 2 of 2
# Warmup Iteration   1: 37.834 ns/op
# Warmup Iteration   2: 72.403 ns/op
# Warmup Iteration   3: 35.652 ns/op
Iteration   1: 35.695 ns/op
Iteration   2: 35.668 ns/op
Iteration   3: 35.677 ns/op
Iteration   4: 35.674 ns/op
Iteration   5: 35.711 ns/op
Iteration   6: 36.159 ns/op
Iteration   7: 35.644 ns/op
Iteration   8: 34.511 ns/op
Iteration   9: 35.662 ns/op
Iteration  10: 35.682 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.609 ±(99.9%) 0.348 ns/op [Average]
  (min, avg, max) = (34.511, 35.609, 36.162), stdev = 0.400
  CI (99.9%): [35.261, 35.957] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 60.11% complete, ETA 00:28:41
# Fork: 1 of 2
# Warmup Iteration   1: 14848.409 ns/op
# Warmup Iteration   2: 12682.396 ns/op
# Warmup Iteration   3: 11078.308 ns/op
Iteration   1: 11076.233 ns/op
Iteration   2: 11082.401 ns/op
Iteration   3: 11084.384 ns/op
Iteration   4: 11015.141 ns/op
Iteration   5: 11087.509 ns/op
Iteration   6: 11037.212 ns/op
Iteration   7: 11086.765 ns/op
Iteration   8: 11033.876 ns/op
Iteration   9: 11028.120 ns/op
Iteration  10: 11116.755 ns/op

# Run progress: 60.17% complete, ETA 00:28:39
# Fork: 2 of 2
# Warmup Iteration   1: 16458.725 ns/op
# Warmup Iteration   2: 12779.671 ns/op
# Warmup Iteration   3: 11041.101 ns/op
Iteration   1: 11046.753 ns/op
Iteration   2: 11069.830 ns/op
Iteration   3: 11097.921 ns/op
Iteration   4: 11038.840 ns/op
Iteration   5: 11120.542 ns/op
Iteration   6: 11045.672 ns/op
Iteration   7: 11060.045 ns/op
Iteration   8: 11073.867 ns/op
Iteration   9: 11034.797 ns/op
Iteration  10: 11072.206 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11065.444 ±(99.9%) 25.742 ns/op [Average]
  (min, avg, max) = (11015.141, 11065.444, 11120.542), stdev = 29.644
  CI (99.9%): [11039.702, 11091.185] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 60.22% complete, ETA 00:28:36
# Fork: 1 of 2
# Warmup Iteration   1: 22652.603 ns/op
# Warmup Iteration   2: 6988.007 ns/op
# Warmup Iteration   3: 6418.017 ns/op
Iteration   1: 6164.782 ns/op
Iteration   2: 6175.615 ns/op
Iteration   3: 6132.102 ns/op
Iteration   4: 6138.569 ns/op
Iteration   5: 6157.149 ns/op
Iteration   6: 6149.195 ns/op
Iteration   7: 6164.060 ns/op
Iteration   8: 6164.455 ns/op
Iteration   9: 6174.285 ns/op
Iteration  10: 6136.528 ns/op

# Run progress: 60.28% complete, ETA 00:28:34
# Fork: 2 of 2
# Warmup Iteration   1: 19985.029 ns/op
# Warmup Iteration   2: 7066.292 ns/op
# Warmup Iteration   3: 6294.542 ns/op
Iteration   1: 6248.942 ns/op
Iteration   2: 6299.788 ns/op
Iteration   3: 6275.530 ns/op
Iteration   4: 6309.887 ns/op
Iteration   5: 6272.278 ns/op
Iteration   6: 6294.993 ns/op
Iteration   7: 6311.501 ns/op
Iteration   8: 6321.535 ns/op
Iteration   9: 6242.917 ns/op
Iteration  10: 6289.969 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6221.204 ±(99.9%) 61.211 ns/op [Average]
  (min, avg, max) = (6132.102, 6221.204, 6321.535), stdev = 70.490
  CI (99.9%): [6159.993, 6282.415] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 60.33% complete, ETA 00:28:31
# Fork: 1 of 2
# Warmup Iteration   1: 16137.064 ns/op
# Warmup Iteration   2: 7209.145 ns/op
# Warmup Iteration   3: 6281.990 ns/op
Iteration   1: 6282.320 ns/op
Iteration   2: 6285.067 ns/op
Iteration   3: 6280.743 ns/op
Iteration   4: 6285.170 ns/op
Iteration   5: 6262.001 ns/op
Iteration   6: 6285.680 ns/op
Iteration   7: 6257.054 ns/op
Iteration   8: 6261.539 ns/op
Iteration   9: 6263.355 ns/op
Iteration  10: 6293.665 ns/op

# Run progress: 60.39% complete, ETA 00:28:29
# Fork: 2 of 2
# Warmup Iteration   1: 15662.589 ns/op
# Warmup Iteration   2: 7045.515 ns/op
# Warmup Iteration   3: 6327.822 ns/op
Iteration   1: 6316.428 ns/op
Iteration   2: 6344.097 ns/op
Iteration   3: 6340.597 ns/op
Iteration   4: 6314.896 ns/op
Iteration   5: 6324.269 ns/op
Iteration   6: 6337.304 ns/op
Iteration   7: 6315.098 ns/op
Iteration   8: 6335.804 ns/op
Iteration   9: 6332.121 ns/op
Iteration  10: 6314.590 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6301.590 ±(99.9%) 25.396 ns/op [Average]
  (min, avg, max) = (6257.054, 6301.590, 6344.097), stdev = 29.246
  CI (99.9%): [6276.194, 6326.985] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 60.44% complete, ETA 00:28:27
# Fork: 1 of 2
# Warmup Iteration   1: 10631.882 ns/op
# Warmup Iteration   2: 6194.094 ns/op
# Warmup Iteration   3: 5636.659 ns/op
Iteration   1: 5677.914 ns/op
Iteration   2: 5662.199 ns/op
Iteration   3: 5679.877 ns/op
Iteration   4: 5666.267 ns/op
Iteration   5: 5703.290 ns/op
Iteration   6: 5695.358 ns/op
Iteration   7: 5674.050 ns/op
Iteration   8: 5656.260 ns/op
Iteration   9: 5642.799 ns/op
Iteration  10: 5667.814 ns/op

# Run progress: 60.50% complete, ETA 00:28:24
# Fork: 2 of 2
# Warmup Iteration   1: 9661.525 ns/op
# Warmup Iteration   2: 6430.828 ns/op
# Warmup Iteration   3: 5546.137 ns/op
Iteration   1: 5552.520 ns/op
Iteration   2: 5584.302 ns/op
Iteration   3: 5571.412 ns/op
Iteration   4: 5595.176 ns/op
Iteration   5: 5571.446 ns/op
Iteration   6: 5566.291 ns/op
Iteration   7: 5582.909 ns/op
Iteration   8: 5579.786 ns/op
Iteration   9: 5594.391 ns/op
Iteration  10: 5536.353 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5623.021 ±(99.9%) 46.732 ns/op [Average]
  (min, avg, max) = (5536.353, 5623.021, 5703.290), stdev = 53.817
  CI (99.9%): [5576.288, 5669.753] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 60.56% complete, ETA 00:28:22
# Fork: 1 of 2
# Warmup Iteration   1: 13658.030 ns/op
# Warmup Iteration   2: 9613.946 ns/op
# Warmup Iteration   3: 8273.301 ns/op
Iteration   1: 8288.952 ns/op
Iteration   2: 8258.682 ns/op
Iteration   3: 8267.913 ns/op
Iteration   4: 8256.330 ns/op
Iteration   5: 8283.160 ns/op
Iteration   6: 8262.192 ns/op
Iteration   7: 8274.051 ns/op
Iteration   8: 8295.510 ns/op
Iteration   9: 8296.723 ns/op
Iteration  10: 8269.626 ns/op

# Run progress: 60.61% complete, ETA 00:28:19
# Fork: 2 of 2
# Warmup Iteration   1: 14178.718 ns/op
# Warmup Iteration   2: 10147.996 ns/op
# Warmup Iteration   3: 8531.365 ns/op
Iteration   1: 8548.910 ns/op
Iteration   2: 8545.726 ns/op
Iteration   3: 8556.849 ns/op
Iteration   4: 8518.156 ns/op
Iteration   5: 8563.829 ns/op
Iteration   6: 8520.590 ns/op
Iteration   7: 8540.165 ns/op
Iteration   8: 8523.354 ns/op
Iteration   9: 8548.370 ns/op
Iteration  10: 8517.217 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8406.815 ±(99.9%) 117.944 ns/op [Average]
  (min, avg, max) = (8256.330, 8406.815, 8563.829), stdev = 135.825
  CI (99.9%): [8288.871, 8524.760] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 60.67% complete, ETA 00:28:17
# Fork: 1 of 2
# Warmup Iteration   1: 38.466 ns/op
# Warmup Iteration   2: 66.323 ns/op
# Warmup Iteration   3: 35.770 ns/op
Iteration   1: 35.784 ns/op
Iteration   2: 35.698 ns/op
Iteration   3: 35.688 ns/op
Iteration   4: 35.708 ns/op
Iteration   5: 35.667 ns/op
Iteration   6: 36.142 ns/op
Iteration   7: 35.759 ns/op
Iteration   8: 34.426 ns/op
Iteration   9: 35.745 ns/op
Iteration  10: 35.745 ns/op

# Run progress: 60.72% complete, ETA 00:28:15
# Fork: 2 of 2
# Warmup Iteration   1: 38.518 ns/op
# Warmup Iteration   2: 66.819 ns/op
# Warmup Iteration   3: 35.708 ns/op
Iteration   1: 35.709 ns/op
Iteration   2: 35.736 ns/op
Iteration   3: 35.685 ns/op
Iteration   4: 35.697 ns/op
Iteration   5: 35.737 ns/op
Iteration   6: 36.204 ns/op
Iteration   7: 35.778 ns/op
Iteration   8: 34.534 ns/op
Iteration   9: 35.660 ns/op
Iteration  10: 35.681 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.639 ±(99.9%) 0.366 ns/op [Average]
  (min, avg, max) = (34.426, 35.639, 36.204), stdev = 0.422
  CI (99.9%): [35.273, 36.006] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 60.78% complete, ETA 00:28:12
# Fork: 1 of 2
# Warmup Iteration   1: 4649.860 ns/op
# Warmup Iteration   2: 4228.067 ns/op
# Warmup Iteration   3: 3571.360 ns/op
Iteration   1: 3574.818 ns/op
Iteration   2: 3572.832 ns/op
Iteration   3: 3574.692 ns/op
Iteration   4: 3553.680 ns/op
Iteration   5: 3571.584 ns/op
Iteration   6: 3559.620 ns/op
Iteration   7: 3571.458 ns/op
Iteration   8: 3554.773 ns/op
Iteration   9: 3562.076 ns/op
Iteration  10: 3569.176 ns/op

# Run progress: 60.83% complete, ETA 00:28:10
# Fork: 2 of 2
# Warmup Iteration   1: 4432.977 ns/op
# Warmup Iteration   2: 4114.843 ns/op
# Warmup Iteration   3: 3567.744 ns/op
Iteration   1: 3557.842 ns/op
Iteration   2: 3557.221 ns/op
Iteration   3: 3559.212 ns/op
Iteration   4: 3545.644 ns/op
Iteration   5: 3557.345 ns/op
Iteration   6: 3549.997 ns/op
Iteration   7: 3557.311 ns/op
Iteration   8: 3544.289 ns/op
Iteration   9: 3544.657 ns/op
Iteration  10: 3544.160 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3559.119 ±(99.9%) 9.069 ns/op [Average]
  (min, avg, max) = (3544.160, 3559.119, 3574.818), stdev = 10.444
  CI (99.9%): [3550.050, 3568.189] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 60.89% complete, ETA 00:28:07
# Fork: 1 of 2
# Warmup Iteration   1: 15364.513 ns/op
# Warmup Iteration   2: 7751.507 ns/op
# Warmup Iteration   3: 6826.894 ns/op
Iteration   1: 6867.919 ns/op
Iteration   2: 6863.376 ns/op
Iteration   3: 6843.456 ns/op
Iteration   4: 6836.806 ns/op
Iteration   5: 6807.936 ns/op
Iteration   6: 6836.426 ns/op
Iteration   7: 6830.496 ns/op
Iteration   8: 6859.914 ns/op
Iteration   9: 6831.474 ns/op
Iteration  10: 6823.645 ns/op

# Run progress: 60.94% complete, ETA 00:28:05
# Fork: 2 of 2
# Warmup Iteration   1: 20525.769 ns/op
# Warmup Iteration   2: 8111.489 ns/op
# Warmup Iteration   3: 6831.484 ns/op
Iteration   1: 6837.048 ns/op
Iteration   2: 6814.034 ns/op
Iteration   3: 6836.531 ns/op
Iteration   4: 6851.013 ns/op
Iteration   5: 6824.951 ns/op
Iteration   6: 6821.074 ns/op
Iteration   7: 6820.655 ns/op
Iteration   8: 6844.688 ns/op
Iteration   9: 6841.238 ns/op
Iteration  10: 6869.430 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6838.106 ±(99.9%) 15.184 ns/op [Average]
  (min, avg, max) = (6807.936, 6838.106, 6869.430), stdev = 17.485
  CI (99.9%): [6822.922, 6853.289] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 61.00% complete, ETA 00:28:03
# Fork: 1 of 2
# Warmup Iteration   1: 15402.364 ns/op
# Warmup Iteration   2: 7730.621 ns/op
# Warmup Iteration   3: 6817.653 ns/op
Iteration   1: 6840.669 ns/op
Iteration   2: 6837.011 ns/op
Iteration   3: 6846.821 ns/op
Iteration   4: 6858.353 ns/op
Iteration   5: 6804.816 ns/op
Iteration   6: 6824.516 ns/op
Iteration   7: 6802.639 ns/op
Iteration   8: 6842.379 ns/op
Iteration   9: 6872.753 ns/op
Iteration  10: 6874.195 ns/op

# Run progress: 61.06% complete, ETA 00:28:00
# Fork: 2 of 2
# Warmup Iteration   1: 17324.817 ns/op
# Warmup Iteration   2: 7710.165 ns/op
# Warmup Iteration   3: 6764.889 ns/op
Iteration   1: 6785.167 ns/op
Iteration   2: 6786.826 ns/op
Iteration   3: 6769.005 ns/op
Iteration   4: 6793.730 ns/op
Iteration   5: 6761.556 ns/op
Iteration   6: 6812.202 ns/op
Iteration   7: 6777.905 ns/op
Iteration   8: 6821.461 ns/op
Iteration   9: 6759.565 ns/op
Iteration  10: 6773.991 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6812.278 ±(99.9%) 31.569 ns/op [Average]
  (min, avg, max) = (6759.565, 6812.278, 6874.195), stdev = 36.355
  CI (99.9%): [6780.709, 6843.847] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 61.11% complete, ETA 00:27:58
# Fork: 1 of 2
# Warmup Iteration   1: 9671.968 ns/op
# Warmup Iteration   2: 6293.270 ns/op
# Warmup Iteration   3: 5383.417 ns/op
Iteration   1: 5357.032 ns/op
Iteration   2: 5360.373 ns/op
Iteration   3: 5362.425 ns/op
Iteration   4: 5360.482 ns/op
Iteration   5: 5428.112 ns/op
Iteration   6: 5402.939 ns/op
Iteration   7: 5375.778 ns/op
Iteration   8: 5383.640 ns/op
Iteration   9: 5409.966 ns/op
Iteration  10: 5371.125 ns/op

# Run progress: 61.17% complete, ETA 00:27:55
# Fork: 2 of 2
# Warmup Iteration   1: 9527.868 ns/op
# Warmup Iteration   2: 6498.778 ns/op
# Warmup Iteration   3: 5412.056 ns/op
Iteration   1: 5418.179 ns/op
Iteration   2: 5411.190 ns/op
Iteration   3: 5372.763 ns/op
Iteration   4: 5410.520 ns/op
Iteration   5: 5409.936 ns/op
Iteration   6: 5416.305 ns/op
Iteration   7: 5437.097 ns/op
Iteration   8: 5497.357 ns/op
Iteration   9: 5408.847 ns/op
Iteration  10: 5469.554 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5403.181 ±(99.9%) 32.256 ns/op [Average]
  (min, avg, max) = (5357.032, 5403.181, 5497.357), stdev = 37.147
  CI (99.9%): [5370.925, 5435.437] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 61.22% complete, ETA 00:27:53
# Fork: 1 of 2
# Warmup Iteration   1: 4543.212 ns/op
# Warmup Iteration   2: 4072.624 ns/op
# Warmup Iteration   3: 3646.540 ns/op
Iteration   1: 3657.274 ns/op
Iteration   2: 3647.863 ns/op
Iteration   3: 3657.522 ns/op
Iteration   4: 3678.352 ns/op
Iteration   5: 3639.828 ns/op
Iteration   6: 3652.282 ns/op
Iteration   7: 3659.446 ns/op
Iteration   8: 3651.443 ns/op
Iteration   9: 3642.143 ns/op
Iteration  10: 3650.123 ns/op

# Run progress: 61.28% complete, ETA 00:27:51
# Fork: 2 of 2
# Warmup Iteration   1: 4738.518 ns/op
# Warmup Iteration   2: 4218.943 ns/op
# Warmup Iteration   3: 3656.171 ns/op
Iteration   1: 3644.166 ns/op
Iteration   2: 3668.474 ns/op
Iteration   3: 3669.641 ns/op
Iteration   4: 3639.803 ns/op
Iteration   5: 3651.856 ns/op
Iteration   6: 3642.514 ns/op
Iteration   7: 3678.534 ns/op
Iteration   8: 3638.626 ns/op
Iteration   9: 3662.957 ns/op
Iteration  10: 3652.386 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3654.262 ±(99.9%) 10.650 ns/op [Average]
  (min, avg, max) = (3638.626, 3654.262, 3678.534), stdev = 12.265
  CI (99.9%): [3643.611, 3664.912] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 61.33% complete, ETA 00:27:48
# Fork: 1 of 2
# Warmup Iteration   1: 38.158 ns/op
# Warmup Iteration   2: 66.729 ns/op
# Warmup Iteration   3: 35.691 ns/op
Iteration   1: 35.704 ns/op
Iteration   2: 35.664 ns/op
Iteration   3: 35.754 ns/op
Iteration   4: 35.727 ns/op
Iteration   5: 35.762 ns/op
Iteration   6: 36.195 ns/op
Iteration   7: 35.780 ns/op
Iteration   8: 34.518 ns/op
Iteration   9: 35.631 ns/op
Iteration  10: 35.664 ns/op

# Run progress: 61.39% complete, ETA 00:27:46
# Fork: 2 of 2
# Warmup Iteration   1: 38.083 ns/op
# Warmup Iteration   2: 66.803 ns/op
# Warmup Iteration   3: 35.632 ns/op
Iteration   1: 35.702 ns/op
Iteration   2: 35.741 ns/op
Iteration   3: 35.707 ns/op
Iteration   4: 35.656 ns/op
Iteration   5: 35.728 ns/op
Iteration   6: 36.166 ns/op
Iteration   7: 35.723 ns/op
Iteration   8: 34.573 ns/op
Iteration   9: 35.764 ns/op
Iteration  10: 35.685 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.642 ±(99.9%) 0.350 ns/op [Average]
  (min, avg, max) = (34.518, 35.642, 36.195), stdev = 0.403
  CI (99.9%): [35.292, 35.992] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 61.44% complete, ETA 00:27:43
# Fork: 1 of 2
# Warmup Iteration   1: 9872.611 ns/op
# Warmup Iteration   2: 12276.952 ns/op
# Warmup Iteration   3: 11208.633 ns/op
Iteration   1: 5005.345 ns/op
Iteration   2: 5259.664 ns/op
Iteration   3: 5197.909 ns/op
Iteration   4: 5459.891 ns/op
Iteration   5: 5241.720 ns/op
Iteration   6: 5420.478 ns/op
Iteration   7: 5130.270 ns/op
Iteration   8: 4873.794 ns/op
Iteration   9: 5119.057 ns/op
Iteration  10: 5276.437 ns/op

# Run progress: 61.50% complete, ETA 00:27:41
# Fork: 2 of 2
# Warmup Iteration   1: 8697.896 ns/op
# Warmup Iteration   2: 16201.864 ns/op
# Warmup Iteration   3: 10695.632 ns/op
Iteration   1: 5002.606 ns/op
Iteration   2: 5190.020 ns/op
Iteration   3: 5151.173 ns/op
Iteration   4: 5448.921 ns/op
Iteration   5: 5232.739 ns/op
Iteration   6: 5340.924 ns/op
Iteration   7: 5135.891 ns/op
Iteration   8: 4922.047 ns/op
Iteration   9: 5180.154 ns/op
Iteration  10: 5225.274 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5190.716 ±(99.9%) 139.170 ns/op [Average]
  (min, avg, max) = (4873.794, 5190.716, 5459.891), stdev = 160.269
  CI (99.9%): [5051.546, 5329.886] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 61.56% complete, ETA 00:27:39
# Fork: 1 of 2
# Warmup Iteration   1: 21485.026 ns/op
# Warmup Iteration   2: 18164.173 ns/op
# Warmup Iteration   3: 11814.638 ns/op
Iteration   1: 18139.009 ns/op
Iteration   2: 24155.284 ns/op
Iteration   3: 11895.305 ns/op
Iteration   4: 6729.422 ns/op
Iteration   5: 6255.098 ns/op
Iteration   6: 5923.330 ns/op
Iteration   7: 6447.438 ns/op
Iteration   8: 6169.574 ns/op
Iteration   9: 5938.344 ns/op
Iteration  10: 6184.644 ns/op

# Run progress: 61.61% complete, ETA 00:27:36
# Fork: 2 of 2
# Warmup Iteration   1: 19298.302 ns/op
# Warmup Iteration   2: 15111.221 ns/op
# Warmup Iteration   3: 9832.037 ns/op
Iteration   1: 9355.135 ns/op
Iteration   2: 25640.552 ns/op
Iteration   3: 12156.502 ns/op
Iteration   4: 6522.113 ns/op
Iteration   5: 6078.596 ns/op
Iteration   6: 5839.394 ns/op
Iteration   7: 6278.031 ns/op
Iteration   8: 6116.522 ns/op
Iteration   9: 5860.983 ns/op
Iteration  10: 6082.266 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9388.377 ±(99.9%) 5339.189 ns/op [Average]
  (min, avg, max) = (5839.394, 9388.377, 25640.552), stdev = 6148.618
  CI (99.9%): [4049.188, 14727.567] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 61.67% complete, ETA 00:27:34
# Fork: 1 of 2
# Warmup Iteration   1: 16996.551 ns/op
# Warmup Iteration   2: 15768.665 ns/op
# Warmup Iteration   3: 10313.302 ns/op
Iteration   1: 15651.404 ns/op
Iteration   2: 21156.038 ns/op
Iteration   3: 9565.699 ns/op
Iteration   4: 6810.705 ns/op
Iteration   5: 6277.842 ns/op
Iteration   6: 5886.996 ns/op
Iteration   7: 6400.930 ns/op
Iteration   8: 6195.040 ns/op
Iteration   9: 5898.005 ns/op
Iteration  10: 6092.901 ns/op

# Run progress: 61.72% complete, ETA 00:27:31
# Fork: 2 of 2
# Warmup Iteration   1: 17047.913 ns/op
# Warmup Iteration   2: 13049.713 ns/op
# Warmup Iteration   3: 10091.062 ns/op
Iteration   1: 28020.700 ns/op
Iteration   2: 20401.648 ns/op
Iteration   3: 20612.579 ns/op
Iteration   4: 6620.114 ns/op
Iteration   5: 6040.833 ns/op
Iteration   6: 5823.337 ns/op
Iteration   7: 6365.417 ns/op
Iteration   8: 6080.139 ns/op
Iteration   9: 5897.943 ns/op
Iteration  10: 6203.922 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10100.110 ±(99.9%) 5998.878 ns/op [Average]
  (min, avg, max) = (5823.337, 10100.110, 28020.700), stdev = 6908.316
  CI (99.9%): [4101.232, 16098.987] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 61.78% complete, ETA 00:27:29
# Fork: 1 of 2
# Warmup Iteration   1: 9734.971 ns/op
# Warmup Iteration   2: 22336.917 ns/op
# Warmup Iteration   3: 9796.895 ns/op
Iteration   1: 6936.189 ns/op
Iteration   2: 22570.136 ns/op
Iteration   3: 6629.384 ns/op
Iteration   4: 6458.849 ns/op
Iteration   5: 5789.863 ns/op
Iteration   6: 6333.088 ns/op
Iteration   7: 7255.287 ns/op
Iteration   8: 7078.746 ns/op
Iteration   9: 5717.306 ns/op
Iteration  10: 6703.921 ns/op

# Run progress: 61.83% complete, ETA 00:27:27
# Fork: 2 of 2
# Warmup Iteration   1: 9137.575 ns/op
# Warmup Iteration   2: 20061.037 ns/op
# Warmup Iteration   3: 8461.177 ns/op
Iteration   1: 6913.143 ns/op
Iteration   2: 10255.793 ns/op
Iteration   3: 6494.861 ns/op
Iteration   4: 6397.893 ns/op
Iteration   5: 5809.516 ns/op
Iteration   6: 6272.483 ns/op
Iteration   7: 7180.404 ns/op
Iteration   8: 7101.673 ns/op
Iteration   9: 5660.052 ns/op
Iteration  10: 6686.142 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7512.236 ±(99.9%) 3190.158 ns/op [Average]
  (min, avg, max) = (5660.052, 7512.236, 22570.136), stdev = 3673.791
  CI (99.9%): [4322.078, 10702.394] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 61.89% complete, ETA 00:27:24
# Fork: 1 of 2
# Warmup Iteration   1: 14255.047 ns/op
# Warmup Iteration   2: 10700.549 ns/op
# Warmup Iteration   3: 8106.506 ns/op
Iteration   1: 7800.932 ns/op
Iteration   2: 7789.818 ns/op
Iteration   3: 7781.220 ns/op
Iteration   4: 7802.156 ns/op
Iteration   5: 7832.761 ns/op
Iteration   6: 7793.579 ns/op
Iteration   7: 7792.156 ns/op
Iteration   8: 7806.216 ns/op
Iteration   9: 7840.978 ns/op
Iteration  10: 8104.885 ns/op

# Run progress: 61.94% complete, ETA 00:27:22
# Fork: 2 of 2
# Warmup Iteration   1: 12736.892 ns/op
# Warmup Iteration   2: 10934.190 ns/op
# Warmup Iteration   3: 8230.069 ns/op
Iteration   1: 7944.423 ns/op
Iteration   2: 7938.259 ns/op
Iteration   3: 7959.873 ns/op
Iteration   4: 7936.438 ns/op
Iteration   5: 7961.562 ns/op
Iteration   6: 7957.468 ns/op
Iteration   7: 7987.528 ns/op
Iteration   8: 7932.702 ns/op
Iteration   9: 7960.299 ns/op
Iteration  10: 8237.053 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7908.015 ±(99.9%) 103.034 ns/op [Average]
  (min, avg, max) = (7781.220, 7908.015, 8237.053), stdev = 118.654
  CI (99.9%): [7804.981, 8011.050] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 62.00% complete, ETA 00:27:19
# Fork: 1 of 2
# Warmup Iteration   1: 38.416 ns/op
# Warmup Iteration   2: 66.774 ns/op
# Warmup Iteration   3: 35.612 ns/op
Iteration   1: 35.702 ns/op
Iteration   2: 35.623 ns/op
Iteration   3: 35.635 ns/op
Iteration   4: 35.775 ns/op
Iteration   5: 35.734 ns/op
Iteration   6: 36.181 ns/op
Iteration   7: 35.656 ns/op
Iteration   8: 34.540 ns/op
Iteration   9: 35.646 ns/op
Iteration  10: 35.633 ns/op

# Run progress: 62.06% complete, ETA 00:27:17
# Fork: 2 of 2
# Warmup Iteration   1: 37.862 ns/op
# Warmup Iteration   2: 67.688 ns/op
# Warmup Iteration   3: 35.695 ns/op
Iteration   1: 35.726 ns/op
Iteration   2: 35.744 ns/op
Iteration   3: 35.710 ns/op
Iteration   4: 35.675 ns/op
Iteration   5: 35.712 ns/op
Iteration   6: 36.170 ns/op
Iteration   7: 35.664 ns/op
Iteration   8: 34.419 ns/op
Iteration   9: 35.749 ns/op
Iteration  10: 35.666 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.618 ±(99.9%) 0.364 ns/op [Average]
  (min, avg, max) = (34.419, 35.618, 36.181), stdev = 0.419
  CI (99.9%): [35.254, 35.982] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 62.11% complete, ETA 00:27:15
# Fork: 1 of 2
# Warmup Iteration   1: 305.555 ns/op
# Warmup Iteration   2: 284.112 ns/op
# Warmup Iteration   3: 238.885 ns/op
Iteration   1: 238.819 ns/op
Iteration   2: 238.946 ns/op
Iteration   3: 239.360 ns/op
Iteration   4: 235.282 ns/op
Iteration   5: 235.818 ns/op
Iteration   6: 235.648 ns/op
Iteration   7: 236.465 ns/op
Iteration   8: 235.997 ns/op
Iteration   9: 235.302 ns/op
Iteration  10: 235.645 ns/op

# Run progress: 62.17% complete, ETA 00:27:12
# Fork: 2 of 2
# Warmup Iteration   1: 299.283 ns/op
# Warmup Iteration   2: 280.648 ns/op
# Warmup Iteration   3: 237.949 ns/op
Iteration   1: 239.964 ns/op
Iteration   2: 238.060 ns/op
Iteration   3: 237.883 ns/op
Iteration   4: 235.389 ns/op
Iteration   5: 235.382 ns/op
Iteration   6: 235.643 ns/op
Iteration   7: 237.336 ns/op
Iteration   8: 236.527 ns/op
Iteration   9: 235.612 ns/op
Iteration  10: 235.388 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  236.723 ±(99.9%) 1.350 ns/op [Average]
  (min, avg, max) = (235.282, 236.723, 239.964), stdev = 1.555
  CI (99.9%): [235.373, 238.073] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 62.22% complete, ETA 00:27:10
# Fork: 1 of 2
# Warmup Iteration   1: 829.570 ns/op
# Warmup Iteration   2: 550.306 ns/op
# Warmup Iteration   3: 458.678 ns/op
Iteration   1: 460.298 ns/op
Iteration   2: 461.692 ns/op
Iteration   3: 458.535 ns/op
Iteration   4: 457.893 ns/op
Iteration   5: 458.195 ns/op
Iteration   6: 458.412 ns/op
Iteration   7: 457.525 ns/op
Iteration   8: 461.004 ns/op
Iteration   9: 458.856 ns/op
Iteration  10: 458.469 ns/op

# Run progress: 62.28% complete, ETA 00:27:07
# Fork: 2 of 2
# Warmup Iteration   1: 804.602 ns/op
# Warmup Iteration   2: 514.149 ns/op
# Warmup Iteration   3: 449.798 ns/op
Iteration   1: 450.096 ns/op
Iteration   2: 449.874 ns/op
Iteration   3: 449.851 ns/op
Iteration   4: 449.952 ns/op
Iteration   5: 449.852 ns/op
Iteration   6: 450.905 ns/op
Iteration   7: 450.391 ns/op
Iteration   8: 452.355 ns/op
Iteration   9: 449.839 ns/op
Iteration  10: 449.874 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  454.694 ±(99.9%) 4.033 ns/op [Average]
  (min, avg, max) = (449.839, 454.694, 461.692), stdev = 4.644
  CI (99.9%): [450.661, 458.726] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 62.33% complete, ETA 00:27:05
# Fork: 1 of 2
# Warmup Iteration   1: 806.611 ns/op
# Warmup Iteration   2: 596.245 ns/op
# Warmup Iteration   3: 515.245 ns/op
Iteration   1: 515.160 ns/op
Iteration   2: 515.215 ns/op
Iteration   3: 515.693 ns/op
Iteration   4: 519.730 ns/op
Iteration   5: 515.455 ns/op
Iteration   6: 515.749 ns/op
Iteration   7: 515.834 ns/op
Iteration   8: 518.228 ns/op
Iteration   9: 517.693 ns/op
Iteration  10: 515.199 ns/op

# Run progress: 62.39% complete, ETA 00:27:03
# Fork: 2 of 2
# Warmup Iteration   1: 784.732 ns/op
# Warmup Iteration   2: 583.426 ns/op
# Warmup Iteration   3: 510.621 ns/op
Iteration   1: 510.744 ns/op
Iteration   2: 510.852 ns/op
Iteration   3: 510.960 ns/op
Iteration   4: 510.831 ns/op
Iteration   5: 510.733 ns/op
Iteration   6: 511.479 ns/op
Iteration   7: 510.626 ns/op
Iteration   8: 513.252 ns/op
Iteration   9: 510.707 ns/op
Iteration  10: 510.890 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  513.752 ±(99.9%) 2.583 ns/op [Average]
  (min, avg, max) = (510.626, 513.752, 519.730), stdev = 2.974
  CI (99.9%): [511.169, 516.334] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 62.44% complete, ETA 00:27:00
# Fork: 1 of 2
# Warmup Iteration   1: 600.676 ns/op
# Warmup Iteration   2: 513.541 ns/op
# Warmup Iteration   3: 448.835 ns/op
Iteration   1: 450.011 ns/op
Iteration   2: 448.668 ns/op
Iteration   3: 448.640 ns/op
Iteration   4: 448.920 ns/op
Iteration   5: 448.673 ns/op
Iteration   6: 449.151 ns/op
Iteration   7: 448.836 ns/op
Iteration   8: 452.695 ns/op
Iteration   9: 448.981 ns/op
Iteration  10: 450.445 ns/op

# Run progress: 62.50% complete, ETA 00:26:58
# Fork: 2 of 2
# Warmup Iteration   1: 602.476 ns/op
# Warmup Iteration   2: 514.344 ns/op
# Warmup Iteration   3: 449.012 ns/op
Iteration   1: 449.326 ns/op
Iteration   2: 449.031 ns/op
Iteration   3: 448.984 ns/op
Iteration   4: 448.970 ns/op
Iteration   5: 448.959 ns/op
Iteration   6: 449.791 ns/op
Iteration   7: 448.878 ns/op
Iteration   8: 452.670 ns/op
Iteration   9: 449.382 ns/op
Iteration  10: 449.185 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  449.510 ±(99.9%) 1.023 ns/op [Average]
  (min, avg, max) = (448.640, 449.510, 452.695), stdev = 1.178
  CI (99.9%): [448.487, 450.533] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 62.56% complete, ETA 00:26:55
# Fork: 1 of 2
# Warmup Iteration   1: 358.510 ns/op
# Warmup Iteration   2: 345.945 ns/op
# Warmup Iteration   3: 322.919 ns/op
Iteration   1: 322.882 ns/op
Iteration   2: 322.588 ns/op
Iteration   3: 322.616 ns/op
Iteration   4: 326.899 ns/op
Iteration   5: 326.473 ns/op
Iteration   6: 326.760 ns/op
Iteration   7: 326.372 ns/op
Iteration   8: 327.184 ns/op
Iteration   9: 326.546 ns/op
Iteration  10: 326.400 ns/op

# Run progress: 62.61% complete, ETA 00:26:53
# Fork: 2 of 2
# Warmup Iteration   1: 488.566 ns/op
# Warmup Iteration   2: 467.903 ns/op
# Warmup Iteration   3: 416.425 ns/op
Iteration   1: 416.282 ns/op
Iteration   2: 416.269 ns/op
Iteration   3: 416.482 ns/op
Iteration   4: 420.756 ns/op
Iteration   5: 420.692 ns/op
Iteration   6: 421.272 ns/op
Iteration   7: 420.807 ns/op
Iteration   8: 422.226 ns/op
Iteration   9: 420.786 ns/op
Iteration  10: 420.891 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  372.559 ±(99.9%) 41.989 ns/op [Average]
  (min, avg, max) = (322.588, 372.559, 422.226), stdev = 48.355
  CI (99.9%): [330.570, 414.549] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 62.67% complete, ETA 00:26:51
# Fork: 1 of 2
# Warmup Iteration   1: 37.978 ns/op
# Warmup Iteration   2: 66.897 ns/op
# Warmup Iteration   3: 35.646 ns/op
Iteration   1: 35.651 ns/op
Iteration   2: 35.668 ns/op
Iteration   3: 35.707 ns/op
Iteration   4: 35.670 ns/op
Iteration   5: 35.680 ns/op
Iteration   6: 36.181 ns/op
Iteration   7: 35.679 ns/op
Iteration   8: 34.454 ns/op
Iteration   9: 35.719 ns/op
Iteration  10: 35.656 ns/op

# Run progress: 62.72% complete, ETA 00:26:48
# Fork: 2 of 2
# Warmup Iteration   1: 53.513 ns/op
# Warmup Iteration   2: 67.388 ns/op
# Warmup Iteration   3: 35.699 ns/op
Iteration   1: 35.699 ns/op
Iteration   2: 35.746 ns/op
Iteration   3: 35.709 ns/op
Iteration   4: 35.704 ns/op
Iteration   5: 35.678 ns/op
Iteration   6: 36.150 ns/op
Iteration   7: 35.708 ns/op
Iteration   8: 34.431 ns/op
Iteration   9: 35.778 ns/op
Iteration  10: 35.709 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.619 ±(99.9%) 0.372 ns/op [Average]
  (min, avg, max) = (34.431, 35.619, 36.181), stdev = 0.428
  CI (99.9%): [35.247, 35.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 62.78% complete, ETA 00:26:46
# Fork: 1 of 2
# Warmup Iteration   1: 7525.267 ns/op
# Warmup Iteration   2: 5529.438 ns/op
# Warmup Iteration   3: 3193.217 ns/op
Iteration   1: 3435.232 ns/op
Iteration   2: 4745.338 ns/op
Iteration   3: 3822.709 ns/op
Iteration   4: 2168.542 ns/op
Iteration   5: 3587.515 ns/op
Iteration   6: 4752.354 ns/op
Iteration   7: 4589.622 ns/op
Iteration   8: 4710.210 ns/op
Iteration   9: 4786.898 ns/op
Iteration  10: 3183.035 ns/op

# Run progress: 62.83% complete, ETA 00:26:43
# Fork: 2 of 2
# Warmup Iteration   1: 7094.179 ns/op
# Warmup Iteration   2: 5418.135 ns/op
# Warmup Iteration   3: 4615.269 ns/op
Iteration   1: 3453.233 ns/op
Iteration   2: 4736.333 ns/op
Iteration   3: 3845.001 ns/op
Iteration   4: 2234.763 ns/op
Iteration   5: 3625.713 ns/op
Iteration   6: 4863.276 ns/op
Iteration   7: 4636.779 ns/op
Iteration   8: 4818.077 ns/op
Iteration   9: 4838.564 ns/op
Iteration  10: 3219.424 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4002.631 ±(99.9%) 755.669 ns/op [Average]
  (min, avg, max) = (2168.542, 4002.631, 4863.276), stdev = 870.229
  CI (99.9%): [3246.962, 4758.300] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 62.89% complete, ETA 00:26:41
# Fork: 1 of 2
# Warmup Iteration   1: 6160.476 ns/op
# Warmup Iteration   2: 2629.760 ns/op
# Warmup Iteration   3: 3849.912 ns/op
Iteration   1: 2297.304 ns/op
Iteration   2: 2542.999 ns/op
Iteration   3: 2474.497 ns/op
Iteration   4: 2474.475 ns/op
Iteration   5: 2351.527 ns/op
Iteration   6: 2688.126 ns/op
Iteration   7: 2628.550 ns/op
Iteration   8: 2548.596 ns/op
Iteration   9: 2586.194 ns/op
Iteration  10: 2969.383 ns/op

# Run progress: 62.94% complete, ETA 00:26:39
# Fork: 2 of 2
# Warmup Iteration   1: 5497.326 ns/op
# Warmup Iteration   2: 2804.670 ns/op
# Warmup Iteration   3: 4247.351 ns/op
Iteration   1: 2279.651 ns/op
Iteration   2: 2534.038 ns/op
Iteration   3: 2476.530 ns/op
Iteration   4: 3030.957 ns/op
Iteration   5: 2411.023 ns/op
Iteration   6: 2735.881 ns/op
Iteration   7: 2627.645 ns/op
Iteration   8: 2567.698 ns/op
Iteration   9: 2628.338 ns/op
Iteration  10: 3015.876 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2593.464 ±(99.9%) 186.114 ns/op [Average]
  (min, avg, max) = (2279.651, 2593.464, 3030.957), stdev = 214.330
  CI (99.9%): [2407.350, 2779.579] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 63.00% complete, ETA 00:26:36
# Fork: 1 of 2
# Warmup Iteration   1: 9033.555 ns/op
# Warmup Iteration   2: 3399.656 ns/op
# Warmup Iteration   3: 3646.632 ns/op
Iteration   1: 2339.713 ns/op
Iteration   2: 8310.197 ns/op
Iteration   3: 2469.037 ns/op
Iteration   4: 2242.874 ns/op
Iteration   5: 1875.171 ns/op
Iteration   6: 2238.036 ns/op
Iteration   7: 2186.894 ns/op
Iteration   8: 2276.171 ns/op
Iteration   9: 2360.622 ns/op
Iteration  10: 2279.916 ns/op

# Run progress: 63.06% complete, ETA 00:26:34
# Fork: 2 of 2
# Warmup Iteration   1: 6462.134 ns/op
# Warmup Iteration   2: 3350.081 ns/op
# Warmup Iteration   3: 4555.519 ns/op
Iteration   1: 2343.131 ns/op
Iteration   2: 4024.784 ns/op
Iteration   3: 2341.669 ns/op
Iteration   4: 11235.639 ns/op
Iteration   5: 1889.714 ns/op
Iteration   6: 2221.680 ns/op
Iteration   7: 2125.637 ns/op
Iteration   8: 2362.116 ns/op
Iteration   9: 2519.913 ns/op
Iteration  10: 2195.585 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3091.925 ±(99.9%) 2059.794 ns/op [Average]
  (min, avg, max) = (1875.171, 3091.925, 11235.639), stdev = 2372.062
  CI (99.9%): [1032.131, 5151.719] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 63.11% complete, ETA 00:26:31
# Fork: 1 of 2
# Warmup Iteration   1: 3828.925 ns/op
# Warmup Iteration   2: 2625.637 ns/op
# Warmup Iteration   3: 3780.761 ns/op
Iteration   1: 2895.927 ns/op
Iteration   2: 2275.140 ns/op
Iteration   3: 2227.794 ns/op
Iteration   4: 3728.030 ns/op
Iteration   5: 2078.136 ns/op
Iteration   6: 2589.550 ns/op
Iteration   7: 2294.171 ns/op
Iteration   8: 2337.107 ns/op
Iteration   9: 2284.202 ns/op
Iteration  10: 2405.594 ns/op

# Run progress: 63.17% complete, ETA 00:26:29
# Fork: 2 of 2
# Warmup Iteration   1: 4492.302 ns/op
# Warmup Iteration   2: 2569.025 ns/op
# Warmup Iteration   3: 3238.041 ns/op
Iteration   1: 2897.063 ns/op
Iteration   2: 2282.223 ns/op
Iteration   3: 2222.193 ns/op
Iteration   4: 2915.856 ns/op
Iteration   5: 2054.671 ns/op
Iteration   6: 2566.369 ns/op
Iteration   7: 2247.831 ns/op
Iteration   8: 2293.418 ns/op
Iteration   9: 2242.379 ns/op
Iteration  10: 2394.960 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2461.631 ±(99.9%) 339.951 ns/op [Average]
  (min, avg, max) = (2054.671, 2461.631, 3728.030), stdev = 391.488
  CI (99.9%): [2121.680, 2801.581] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 63.22% complete, ETA 00:26:27
# Fork: 1 of 2
# Warmup Iteration   1: 6160.345 ns/op
# Warmup Iteration   2: 5532.838 ns/op
# Warmup Iteration   3: 3159.037 ns/op
Iteration   1: 3419.901 ns/op
Iteration   2: 4659.755 ns/op
Iteration   3: 3843.468 ns/op
Iteration   4: 2165.875 ns/op
Iteration   5: 3610.645 ns/op
Iteration   6: 4717.868 ns/op
Iteration   7: 4546.903 ns/op
Iteration   8: 4664.319 ns/op
Iteration   9: 4758.441 ns/op
Iteration  10: 3157.400 ns/op

# Run progress: 63.28% complete, ETA 00:26:24
# Fork: 2 of 2
# Warmup Iteration   1: 6737.797 ns/op
# Warmup Iteration   2: 6530.072 ns/op
# Warmup Iteration   3: 4669.947 ns/op
Iteration   1: 3599.720 ns/op
Iteration   2: 4817.575 ns/op
Iteration   3: 3973.541 ns/op
Iteration   4: 2264.075 ns/op
Iteration   5: 3738.222 ns/op
Iteration   6: 4858.665 ns/op
Iteration   7: 4704.234 ns/op
Iteration   8: 4815.698 ns/op
Iteration   9: 4886.223 ns/op
Iteration  10: 3296.220 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4024.937 ±(99.9%) 743.555 ns/op [Average]
  (min, avg, max) = (2165.875, 4024.937, 4886.223), stdev = 856.279
  CI (99.9%): [3281.383, 4768.492] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 63.33% complete, ETA 00:26:22
# Fork: 1 of 2
# Warmup Iteration   1: 38.891 ns/op
# Warmup Iteration   2: 65.252 ns/op
# Warmup Iteration   3: 35.712 ns/op
Iteration   1: 35.710 ns/op
Iteration   2: 35.701 ns/op
Iteration   3: 35.671 ns/op
Iteration   4: 35.682 ns/op
Iteration   5: 35.720 ns/op
Iteration   6: 36.147 ns/op
Iteration   7: 35.734 ns/op
Iteration   8: 34.458 ns/op
Iteration   9: 35.637 ns/op
Iteration  10: 35.692 ns/op

# Run progress: 63.39% complete, ETA 00:26:19
# Fork: 2 of 2
# Warmup Iteration   1: 39.243 ns/op
# Warmup Iteration   2: 66.841 ns/op
# Warmup Iteration   3: 35.685 ns/op
Iteration   1: 35.719 ns/op
Iteration   2: 35.660 ns/op
Iteration   3: 35.672 ns/op
Iteration   4: 35.680 ns/op
Iteration   5: 35.720 ns/op
Iteration   6: 36.151 ns/op
Iteration   7: 35.630 ns/op
Iteration   8: 34.525 ns/op
Iteration   9: 35.711 ns/op
Iteration  10: 35.736 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.618 ±(99.9%) 0.357 ns/op [Average]
  (min, avg, max) = (34.458, 35.618, 36.151), stdev = 0.411
  CI (99.9%): [35.261, 35.975] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 63.44% complete, ETA 00:26:17
# Fork: 1 of 2
# Warmup Iteration   1: 14398.150 ns/op
# Warmup Iteration   2: 10463.476 ns/op
# Warmup Iteration   3: 9014.880 ns/op
Iteration   1: 8992.918 ns/op
Iteration   2: 9012.985 ns/op
Iteration   3: 9036.065 ns/op
Iteration   4: 9004.600 ns/op
Iteration   5: 9014.327 ns/op
Iteration   6: 9033.255 ns/op
Iteration   7: 9001.041 ns/op
Iteration   8: 9005.457 ns/op
Iteration   9: 8979.401 ns/op
Iteration  10: 9002.479 ns/op

# Run progress: 63.50% complete, ETA 00:26:15
# Fork: 2 of 2
# Warmup Iteration   1: 13807.724 ns/op
# Warmup Iteration   2: 10317.967 ns/op
# Warmup Iteration   3: 9031.578 ns/op
Iteration   1: 9100.593 ns/op
Iteration   2: 9042.507 ns/op
Iteration   3: 9134.974 ns/op
Iteration   4: 8996.223 ns/op
Iteration   5: 9075.329 ns/op
Iteration   6: 9025.049 ns/op
Iteration   7: 9107.883 ns/op
Iteration   8: 8992.816 ns/op
Iteration   9: 9049.589 ns/op
Iteration  10: 9017.068 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9031.228 ±(99.9%) 37.115 ns/op [Average]
  (min, avg, max) = (8979.401, 9031.228, 9134.974), stdev = 42.742
  CI (99.9%): [8994.113, 9068.343] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 63.56% complete, ETA 00:26:12
# Fork: 1 of 2
# Warmup Iteration   1: 16752.749 ns/op
# Warmup Iteration   2: 8187.140 ns/op
# Warmup Iteration   3: 7014.348 ns/op
Iteration   1: 7032.695 ns/op
Iteration   2: 7012.369 ns/op
Iteration   3: 7039.400 ns/op
Iteration   4: 7021.147 ns/op
Iteration   5: 7026.644 ns/op
Iteration   6: 7036.848 ns/op
Iteration   7: 7069.552 ns/op
Iteration   8: 7031.282 ns/op
Iteration   9: 7002.492 ns/op
Iteration  10: 7055.128 ns/op

# Run progress: 63.61% complete, ETA 00:26:10
# Fork: 2 of 2
# Warmup Iteration   1: 19087.484 ns/op
# Warmup Iteration   2: 7955.681 ns/op
# Warmup Iteration   3: 6998.157 ns/op
Iteration   1: 7020.273 ns/op
Iteration   2: 7035.926 ns/op
Iteration   3: 7013.585 ns/op
Iteration   4: 7028.852 ns/op
Iteration   5: 7019.429 ns/op
Iteration   6: 7050.124 ns/op
Iteration   7: 7013.495 ns/op
Iteration   8: 7037.918 ns/op
Iteration   9: 6985.344 ns/op
Iteration  10: 7008.427 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7027.047 ±(99.9%) 16.709 ns/op [Average]
  (min, avg, max) = (6985.344, 7027.047, 7069.552), stdev = 19.242
  CI (99.9%): [7010.338, 7043.755] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 63.67% complete, ETA 00:26:07
# Fork: 1 of 2
# Warmup Iteration   1: 16143.765 ns/op
# Warmup Iteration   2: 8027.083 ns/op
# Warmup Iteration   3: 7155.339 ns/op
Iteration   1: 7168.768 ns/op
Iteration   2: 7126.412 ns/op
Iteration   3: 7114.036 ns/op
Iteration   4: 7114.550 ns/op
Iteration   5: 7167.276 ns/op
Iteration   6: 7164.437 ns/op
Iteration   7: 7132.221 ns/op
Iteration   8: 7079.525 ns/op
Iteration   9: 7154.159 ns/op
Iteration  10: 7117.464 ns/op

# Run progress: 63.72% complete, ETA 00:26:05
# Fork: 2 of 2
# Warmup Iteration   1: 20634.276 ns/op
# Warmup Iteration   2: 8128.582 ns/op
# Warmup Iteration   3: 7137.558 ns/op
Iteration   1: 7197.237 ns/op
Iteration   2: 7188.880 ns/op
Iteration   3: 7171.959 ns/op
Iteration   4: 7195.126 ns/op
Iteration   5: 7203.622 ns/op
Iteration   6: 7225.677 ns/op
Iteration   7: 7177.856 ns/op
Iteration   8: 7188.435 ns/op
Iteration   9: 7168.916 ns/op
Iteration  10: 7159.066 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7160.781 ±(99.9%) 31.847 ns/op [Average]
  (min, avg, max) = (7079.525, 7160.781, 7225.677), stdev = 36.676
  CI (99.9%): [7128.934, 7192.629] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 63.78% complete, ETA 00:26:03
# Fork: 1 of 2
# Warmup Iteration   1: 12456.431 ns/op
# Warmup Iteration   2: 7999.949 ns/op
# Warmup Iteration   3: 7136.728 ns/op
Iteration   1: 7112.080 ns/op
Iteration   2: 7139.070 ns/op
Iteration   3: 7090.640 ns/op
Iteration   4: 7098.658 ns/op
Iteration   5: 7127.691 ns/op
Iteration   6: 7168.805 ns/op
Iteration   7: 7135.269 ns/op
Iteration   8: 7159.826 ns/op
Iteration   9: 7106.068 ns/op
Iteration  10: 7155.121 ns/op

# Run progress: 63.83% complete, ETA 00:26:00
# Fork: 2 of 2
# Warmup Iteration   1: 12376.856 ns/op
# Warmup Iteration   2: 8038.561 ns/op
# Warmup Iteration   3: 7069.776 ns/op
Iteration   1: 7079.484 ns/op
Iteration   2: 7055.283 ns/op
Iteration   3: 7104.953 ns/op
Iteration   4: 7042.116 ns/op
Iteration   5: 7031.528 ns/op
Iteration   6: 7163.482 ns/op
Iteration   7: 7058.299 ns/op
Iteration   8: 7052.263 ns/op
Iteration   9: 7048.431 ns/op
Iteration  10: 7087.620 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7100.834 ±(99.9%) 38.055 ns/op [Average]
  (min, avg, max) = (7031.528, 7100.834, 7168.805), stdev = 43.825
  CI (99.9%): [7062.779, 7138.890] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 63.89% complete, ETA 00:25:58
# Fork: 1 of 2
# Warmup Iteration   1: 14556.576 ns/op
# Warmup Iteration   2: 9957.104 ns/op
# Warmup Iteration   3: 8477.156 ns/op
Iteration   1: 8493.555 ns/op
Iteration   2: 8476.286 ns/op
Iteration   3: 8481.187 ns/op
Iteration   4: 8467.146 ns/op
Iteration   5: 8494.539 ns/op
Iteration   6: 8474.340 ns/op
Iteration   7: 8483.777 ns/op
Iteration   8: 8469.388 ns/op
Iteration   9: 8504.276 ns/op
Iteration  10: 8481.309 ns/op

# Run progress: 63.94% complete, ETA 00:25:55
# Fork: 2 of 2
# Warmup Iteration   1: 15439.073 ns/op
# Warmup Iteration   2: 10202.933 ns/op
# Warmup Iteration   3: 8696.573 ns/op
Iteration   1: 8698.505 ns/op
Iteration   2: 8688.704 ns/op
Iteration   3: 8710.135 ns/op
Iteration   4: 8892.493 ns/op
Iteration   5: 8920.360 ns/op
Iteration   6: 8915.400 ns/op
Iteration   7: 8905.007 ns/op
Iteration   8: 8902.575 ns/op
Iteration   9: 8911.273 ns/op
Iteration  10: 8896.128 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8663.319 ±(99.9%) 172.003 ns/op [Average]
  (min, avg, max) = (8467.146, 8663.319, 8920.360), stdev = 198.079
  CI (99.9%): [8491.316, 8835.322] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 64.00% complete, ETA 00:25:53
# Fork: 1 of 2
# Warmup Iteration   1: 38.392 ns/op
# Warmup Iteration   2: 71.735 ns/op
# Warmup Iteration   3: 35.725 ns/op
Iteration   1: 35.668 ns/op
Iteration   2: 35.646 ns/op
Iteration   3: 35.649 ns/op
Iteration   4: 35.720 ns/op
Iteration   5: 35.710 ns/op
Iteration   6: 36.131 ns/op
Iteration   7: 35.710 ns/op
Iteration   8: 34.518 ns/op
Iteration   9: 35.639 ns/op
Iteration  10: 35.680 ns/op

# Run progress: 64.06% complete, ETA 00:25:51
# Fork: 2 of 2
# Warmup Iteration   1: 38.411 ns/op
# Warmup Iteration   2: 66.752 ns/op
# Warmup Iteration   3: 35.702 ns/op
Iteration   1: 35.719 ns/op
Iteration   2: 35.707 ns/op
Iteration   3: 35.692 ns/op
Iteration   4: 35.759 ns/op
Iteration   5: 35.682 ns/op
Iteration   6: 36.178 ns/op
Iteration   7: 35.690 ns/op
Iteration   8: 34.520 ns/op
Iteration   9: 35.696 ns/op
Iteration  10: 35.689 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.620 ±(99.9%) 0.350 ns/op [Average]
  (min, avg, max) = (34.518, 35.620, 36.178), stdev = 0.403
  CI (99.9%): [35.270, 35.970] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 64.11% complete, ETA 00:25:48
# Fork: 1 of 2
# Warmup Iteration   1: 5945.575 ns/op
# Warmup Iteration   2: 4741.495 ns/op
# Warmup Iteration   3: 4119.102 ns/op
Iteration   1: 4236.115 ns/op
Iteration   2: 4112.634 ns/op
Iteration   3: 4126.589 ns/op
Iteration   4: 4115.922 ns/op
Iteration   5: 4132.442 ns/op
Iteration   6: 4130.932 ns/op
Iteration   7: 4134.006 ns/op
Iteration   8: 4129.870 ns/op
Iteration   9: 4101.280 ns/op
Iteration  10: 4108.244 ns/op

# Run progress: 64.17% complete, ETA 00:25:46
# Fork: 2 of 2
# Warmup Iteration   1: 5808.713 ns/op
# Warmup Iteration   2: 4890.183 ns/op
# Warmup Iteration   3: 4134.500 ns/op
Iteration   1: 4118.490 ns/op
Iteration   2: 4112.193 ns/op
Iteration   3: 4117.325 ns/op
Iteration   4: 4114.919 ns/op
Iteration   5: 4120.481 ns/op
Iteration   6: 4109.413 ns/op
Iteration   7: 4116.003 ns/op
Iteration   8: 4109.458 ns/op
Iteration   9: 4102.116 ns/op
Iteration  10: 4129.812 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4123.912 ±(99.9%) 24.479 ns/op [Average]
  (min, avg, max) = (4101.280, 4123.912, 4236.115), stdev = 28.190
  CI (99.9%): [4099.433, 4148.391] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 64.22% complete, ETA 00:25:43
# Fork: 1 of 2
# Warmup Iteration   1: 11615.988 ns/op
# Warmup Iteration   2: 6710.983 ns/op
# Warmup Iteration   3: 5968.646 ns/op
Iteration   1: 5951.958 ns/op
Iteration   2: 5951.484 ns/op
Iteration   3: 5957.076 ns/op
Iteration   4: 5963.491 ns/op
Iteration   5: 5965.371 ns/op
Iteration   6: 5958.899 ns/op
Iteration   7: 5955.544 ns/op
Iteration   8: 5999.399 ns/op
Iteration   9: 5954.171 ns/op
Iteration  10: 5964.625 ns/op

# Run progress: 64.28% complete, ETA 00:25:41
# Fork: 2 of 2
# Warmup Iteration   1: 12327.692 ns/op
# Warmup Iteration   2: 7050.053 ns/op
# Warmup Iteration   3: 5961.431 ns/op
Iteration   1: 5973.657 ns/op
Iteration   2: 5994.687 ns/op
Iteration   3: 5975.245 ns/op
Iteration   4: 5967.953 ns/op
Iteration   5: 5979.705 ns/op
Iteration   6: 5981.081 ns/op
Iteration   7: 5971.968 ns/op
Iteration   8: 6005.447 ns/op
Iteration   9: 5964.935 ns/op
Iteration  10: 5989.031 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5971.286 ±(99.9%) 13.891 ns/op [Average]
  (min, avg, max) = (5951.484, 5971.286, 6005.447), stdev = 15.996
  CI (99.9%): [5957.396, 5985.177] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 64.33% complete, ETA 00:25:39
# Fork: 1 of 2
# Warmup Iteration   1: 14023.854 ns/op
# Warmup Iteration   2: 7242.919 ns/op
# Warmup Iteration   3: 6155.917 ns/op
Iteration   1: 6193.028 ns/op
Iteration   2: 6179.830 ns/op
Iteration   3: 6190.710 ns/op
Iteration   4: 6186.009 ns/op
Iteration   5: 6158.227 ns/op
Iteration   6: 6191.299 ns/op
Iteration   7: 6173.499 ns/op
Iteration   8: 6200.185 ns/op
Iteration   9: 6175.274 ns/op
Iteration  10: 6209.921 ns/op

# Run progress: 64.39% complete, ETA 00:25:36
# Fork: 2 of 2
# Warmup Iteration   1: 12873.565 ns/op
# Warmup Iteration   2: 6757.116 ns/op
# Warmup Iteration   3: 5932.538 ns/op
Iteration   1: 5940.819 ns/op
Iteration   2: 5948.063 ns/op
Iteration   3: 5951.330 ns/op
Iteration   4: 5940.695 ns/op
Iteration   5: 5965.902 ns/op
Iteration   6: 5949.582 ns/op
Iteration   7: 5946.909 ns/op
Iteration   8: 5962.561 ns/op
Iteration   9: 5948.434 ns/op
Iteration  10: 5938.977 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6067.563 ±(99.9%) 105.839 ns/op [Average]
  (min, avg, max) = (5938.977, 6067.563, 6209.921), stdev = 121.885
  CI (99.9%): [5961.723, 6173.402] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 64.44% complete, ETA 00:25:34
# Fork: 1 of 2
# Warmup Iteration   1: 10251.728 ns/op
# Warmup Iteration   2: 5726.628 ns/op
# Warmup Iteration   3: 5045.237 ns/op
Iteration   1: 5111.686 ns/op
Iteration   2: 5094.772 ns/op
Iteration   3: 5083.465 ns/op
Iteration   4: 5090.249 ns/op
Iteration   5: 5089.582 ns/op
Iteration   6: 5099.563 ns/op
Iteration   7: 5075.311 ns/op
Iteration   8: 5059.187 ns/op
Iteration   9: 5066.242 ns/op
Iteration  10: 5077.259 ns/op

# Run progress: 64.50% complete, ETA 00:25:31
# Fork: 2 of 2
# Warmup Iteration   1: 8734.578 ns/op
# Warmup Iteration   2: 5574.110 ns/op
# Warmup Iteration   3: 4881.207 ns/op
Iteration   1: 4917.894 ns/op
Iteration   2: 4919.188 ns/op
Iteration   3: 4878.487 ns/op
Iteration   4: 4892.917 ns/op
Iteration   5: 4908.877 ns/op
Iteration   6: 4886.344 ns/op
Iteration   7: 4889.834 ns/op
Iteration   8: 4920.984 ns/op
Iteration   9: 4891.418 ns/op
Iteration  10: 4901.359 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4992.731 ±(99.9%) 83.005 ns/op [Average]
  (min, avg, max) = (4878.487, 4992.731, 5111.686), stdev = 95.588
  CI (99.9%): [4909.726, 5075.736] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 64.56% complete, ETA 00:25:29
# Fork: 1 of 2
# Warmup Iteration   1: 5672.369 ns/op
# Warmup Iteration   2: 4694.306 ns/op
# Warmup Iteration   3: 4055.879 ns/op
Iteration   1: 4055.329 ns/op
Iteration   2: 4056.563 ns/op
Iteration   3: 4084.854 ns/op
Iteration   4: 4056.053 ns/op
Iteration   5: 4058.305 ns/op
Iteration   6: 4083.417 ns/op
Iteration   7: 4052.335 ns/op
Iteration   8: 4046.813 ns/op
Iteration   9: 4055.649 ns/op
Iteration  10: 4055.521 ns/op

# Run progress: 64.61% complete, ETA 00:25:27
# Fork: 2 of 2
# Warmup Iteration   1: 5632.883 ns/op
# Warmup Iteration   2: 4580.876 ns/op
# Warmup Iteration   3: 4054.845 ns/op
Iteration   1: 4056.266 ns/op
Iteration   2: 4055.991 ns/op
Iteration   3: 4055.985 ns/op
Iteration   4: 4059.311 ns/op
Iteration   5: 4060.829 ns/op
Iteration   6: 4061.840 ns/op
Iteration   7: 4056.959 ns/op
Iteration   8: 4052.096 ns/op
Iteration   9: 4059.627 ns/op
Iteration  10: 4058.559 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4059.115 ±(99.9%) 7.966 ns/op [Average]
  (min, avg, max) = (4046.813, 4059.115, 4084.854), stdev = 9.173
  CI (99.9%): [4051.150, 4067.081] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 64.67% complete, ETA 00:25:24
# Fork: 1 of 2
# Warmup Iteration   1: 37.975 ns/op
# Warmup Iteration   2: 66.439 ns/op
# Warmup Iteration   3: 35.707 ns/op
Iteration   1: 35.692 ns/op
Iteration   2: 35.715 ns/op
Iteration   3: 35.661 ns/op
Iteration   4: 35.712 ns/op
Iteration   5: 35.613 ns/op
Iteration   6: 36.211 ns/op
Iteration   7: 35.722 ns/op
Iteration   8: 34.497 ns/op
Iteration   9: 35.659 ns/op
Iteration  10: 35.667 ns/op

# Run progress: 64.72% complete, ETA 00:25:22
# Fork: 2 of 2
# Warmup Iteration   1: 51.358 ns/op
# Warmup Iteration   2: 66.542 ns/op
# Warmup Iteration   3: 35.609 ns/op
Iteration   1: 35.646 ns/op
Iteration   2: 35.629 ns/op
Iteration   3: 35.640 ns/op
Iteration   4: 35.749 ns/op
Iteration   5: 35.658 ns/op
Iteration   6: 36.159 ns/op
Iteration   7: 35.653 ns/op
Iteration   8: 34.594 ns/op
Iteration   9: 35.622 ns/op
Iteration  10: 35.597 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.605 ±(99.9%) 0.346 ns/op [Average]
  (min, avg, max) = (34.497, 35.605, 36.211), stdev = 0.398
  CI (99.9%): [35.259, 35.950] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 64.78% complete, ETA 00:25:19
# Fork: 1 of 2
# Warmup Iteration   1: 9574.398 ns/op
# Warmup Iteration   2: 14998.407 ns/op
# Warmup Iteration   3: 7875.969 ns/op
Iteration   1: 5192.795 ns/op
Iteration   2: 4915.658 ns/op
Iteration   3: 4748.807 ns/op
Iteration   4: 110279.184 ns/op
Iteration   5: 84594.526 ns/op
Iteration   6: 5511.063 ns/op
Iteration   7: 5590.549 ns/op
Iteration   8: 5216.504 ns/op
Iteration   9: 5810.639 ns/op
Iteration  10: 5221.406 ns/op

# Run progress: 64.83% complete, ETA 00:25:17
# Fork: 2 of 2
# Warmup Iteration   1: 9613.908 ns/op
# Warmup Iteration   2: 14967.289 ns/op
# Warmup Iteration   3: 8969.000 ns/op
Iteration   1: 5182.172 ns/op
Iteration   2: 4974.322 ns/op
Iteration   3: 4808.478 ns/op
Iteration   4: 34377.894 ns/op
Iteration   5: 126567.732 ns/op
Iteration   6: 5543.754 ns/op
Iteration   7: 5616.690 ns/op
Iteration   8: 5207.517 ns/op
Iteration   9: 5731.723 ns/op
Iteration  10: 5195.915 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  22014.366 ±(99.9%) 32899.860 ns/op [Average]
  (min, avg, max) = (4748.807, 22014.366, 126567.732), stdev = 37887.527
  CI (99.9%): [≈ 0, 54914.226] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 64.89% complete, ETA 00:25:15
# Fork: 1 of 2
# Warmup Iteration   1: 14555.677 ns/op
# Warmup Iteration   2: 16205.839 ns/op
# Warmup Iteration   3: 9211.004 ns/op
Iteration   1: 44787.816 ns/op
Iteration   2: 6258.350 ns/op
Iteration   3: 5494.361 ns/op
Iteration   4: 6111.709 ns/op
Iteration   5: 6528.680 ns/op
Iteration   6: 5869.333 ns/op
Iteration   7: 6182.776 ns/op
Iteration   8: 5856.878 ns/op
Iteration   9: 6142.464 ns/op
Iteration  10: 6438.338 ns/op

# Run progress: 64.94% complete, ETA 00:25:12
# Fork: 2 of 2
# Warmup Iteration   1: 19980.072 ns/op
# Warmup Iteration   2: 14041.080 ns/op
# Warmup Iteration   3: 11166.802 ns/op
Iteration   1: 13900.094 ns/op
Iteration   2: 6169.948 ns/op
Iteration   3: 5250.348 ns/op
Iteration   4: 5904.495 ns/op
Iteration   5: 6241.839 ns/op
Iteration   6: 5784.092 ns/op
Iteration   7: 6082.279 ns/op
Iteration   8: 5501.052 ns/op
Iteration   9: 6056.098 ns/op
Iteration  10: 6214.632 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8338.779 ±(99.9%) 7610.454 ns/op [Average]
  (min, avg, max) = (5250.348, 8338.779, 44787.816), stdev = 8764.210
  CI (99.9%): [728.325, 15949.233] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 65.00% complete, ETA 00:25:10
# Fork: 1 of 2
# Warmup Iteration   1: 15502.414 ns/op
# Warmup Iteration   2: 8344.415 ns/op
# Warmup Iteration   3: 10025.848 ns/op
Iteration   1: 39527.443 ns/op
Iteration   2: 10189.325 ns/op
Iteration   3: 5237.727 ns/op
Iteration   4: 5839.740 ns/op
Iteration   5: 6233.468 ns/op
Iteration   6: 5703.201 ns/op
Iteration   7: 6123.920 ns/op
Iteration   8: 5467.653 ns/op
Iteration   9: 6029.161 ns/op
Iteration  10: 6160.471 ns/op

# Run progress: 65.06% complete, ETA 00:25:07
# Fork: 2 of 2
# Warmup Iteration   1: 21949.572 ns/op
# Warmup Iteration   2: 7873.315 ns/op
# Warmup Iteration   3: 10064.638 ns/op
Iteration   1: 27376.139 ns/op
Iteration   2: 19166.208 ns/op
Iteration   3: 5306.743 ns/op
Iteration   4: 5821.137 ns/op
Iteration   5: 6282.661 ns/op
Iteration   6: 5727.074 ns/op
Iteration   7: 6056.277 ns/op
Iteration   8: 5469.387 ns/op
Iteration   9: 6009.141 ns/op
Iteration  10: 6099.716 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9491.330 ±(99.9%) 7792.769 ns/op [Average]
  (min, avg, max) = (5237.727, 9491.330, 39527.443), stdev = 8974.165
  CI (99.9%): [1698.560, 17284.099] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 65.11% complete, ETA 00:25:05
# Fork: 1 of 2
# Warmup Iteration   1: 13554.021 ns/op
# Warmup Iteration   2: 8404.729 ns/op
# Warmup Iteration   3: 8041.197 ns/op
Iteration   1: 14313.903 ns/op
Iteration   2: 5954.988 ns/op
Iteration   3: 9934.091 ns/op
Iteration   4: 5933.349 ns/op
Iteration   5: 6905.091 ns/op
Iteration   6: 6251.660 ns/op
Iteration   7: 5666.296 ns/op
Iteration   8: 6353.407 ns/op
Iteration   9: 5879.138 ns/op
Iteration  10: 7034.239 ns/op

# Run progress: 65.17% complete, ETA 00:25:03
# Fork: 2 of 2
# Warmup Iteration   1: 10642.723 ns/op
# Warmup Iteration   2: 9135.945 ns/op
# Warmup Iteration   3: 8948.888 ns/op
Iteration   1: 10172.624 ns/op
Iteration   2: 6009.690 ns/op
Iteration   3: 9618.218 ns/op
Iteration   4: 5840.373 ns/op
Iteration   5: 6902.065 ns/op
Iteration   6: 6191.829 ns/op
Iteration   7: 5596.372 ns/op
Iteration   8: 6350.688 ns/op
Iteration   9: 5922.072 ns/op
Iteration  10: 7103.466 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7196.678 ±(99.9%) 1900.957 ns/op [Average]
  (min, avg, max) = (5596.372, 7196.678, 14313.903), stdev = 2189.145
  CI (99.9%): [5295.721, 9097.635] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 65.22% complete, ETA 00:25:00
# Fork: 1 of 2
# Warmup Iteration   1: 13106.595 ns/op
# Warmup Iteration   2: 9374.333 ns/op
# Warmup Iteration   3: 8110.519 ns/op
Iteration   1: 9909.789 ns/op
Iteration   2: 7987.459 ns/op
Iteration   3: 7997.496 ns/op
Iteration   4: 7997.647 ns/op
Iteration   5: 7969.755 ns/op
Iteration   6: 7989.133 ns/op
Iteration   7: 8036.577 ns/op
Iteration   8: 7967.783 ns/op
Iteration   9: 8021.521 ns/op
Iteration  10: 8121.923 ns/op

# Run progress: 65.28% complete, ETA 00:24:58
# Fork: 2 of 2
# Warmup Iteration   1: 13032.923 ns/op
# Warmup Iteration   2: 9345.520 ns/op
# Warmup Iteration   3: 7979.928 ns/op
Iteration   1: 10051.837 ns/op
Iteration   2: 7967.768 ns/op
Iteration   3: 7984.984 ns/op
Iteration   4: 7985.619 ns/op
Iteration   5: 7958.131 ns/op
Iteration   6: 7968.553 ns/op
Iteration   7: 7997.019 ns/op
Iteration   8: 7944.939 ns/op
Iteration   9: 8014.217 ns/op
Iteration  10: 7966.106 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8191.913 ±(99.9%) 532.623 ns/op [Average]
  (min, avg, max) = (7944.939, 8191.913, 10051.837), stdev = 613.370
  CI (99.9%): [7659.289, 8724.536] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 65.33% complete, ETA 00:24:55
# Fork: 1 of 2
# Warmup Iteration   1: 38.530 ns/op
# Warmup Iteration   2: 66.306 ns/op
# Warmup Iteration   3: 35.732 ns/op
Iteration   1: 35.720 ns/op
Iteration   2: 35.733 ns/op
Iteration   3: 35.652 ns/op
Iteration   4: 35.660 ns/op
Iteration   5: 35.715 ns/op
Iteration   6: 36.263 ns/op
Iteration   7: 35.687 ns/op
Iteration   8: 34.425 ns/op
Iteration   9: 35.757 ns/op
Iteration  10: 35.716 ns/op

# Run progress: 65.39% complete, ETA 00:24:53
# Fork: 2 of 2
# Warmup Iteration   1: 37.969 ns/op
# Warmup Iteration   2: 66.959 ns/op
# Warmup Iteration   3: 35.748 ns/op
Iteration   1: 35.606 ns/op
Iteration   2: 35.619 ns/op
Iteration   3: 35.675 ns/op
Iteration   4: 35.623 ns/op
Iteration   5: 35.671 ns/op
Iteration   6: 36.184 ns/op
Iteration   7: 35.649 ns/op
Iteration   8: 34.427 ns/op
Iteration   9: 35.649 ns/op
Iteration  10: 35.705 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.607 ±(99.9%) 0.381 ns/op [Average]
  (min, avg, max) = (34.425, 35.607, 36.263), stdev = 0.439
  CI (99.9%): [35.225, 35.988] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 65.44% complete, ETA 00:24:51
# Fork: 1 of 2
# Warmup Iteration   1: 585.188 ns/op
# Warmup Iteration   2: 554.684 ns/op
# Warmup Iteration   3: 487.044 ns/op
Iteration   1: 487.083 ns/op
Iteration   2: 486.995 ns/op
Iteration   3: 487.554 ns/op
Iteration   4: 486.282 ns/op
Iteration   5: 486.314 ns/op
Iteration   6: 485.648 ns/op
Iteration   7: 485.442 ns/op
Iteration   8: 486.689 ns/op
Iteration   9: 485.058 ns/op
Iteration  10: 485.076 ns/op

# Run progress: 65.50% complete, ETA 00:24:48
# Fork: 2 of 2
# Warmup Iteration   1: 590.451 ns/op
# Warmup Iteration   2: 567.464 ns/op
# Warmup Iteration   3: 487.034 ns/op
Iteration   1: 487.047 ns/op
Iteration   2: 487.053 ns/op
Iteration   3: 487.122 ns/op
Iteration   4: 485.883 ns/op
Iteration   5: 484.993 ns/op
Iteration   6: 484.902 ns/op
Iteration   7: 484.999 ns/op
Iteration   8: 486.122 ns/op
Iteration   9: 484.661 ns/op
Iteration  10: 484.714 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  485.982 ±(99.9%) 0.835 ns/op [Average]
  (min, avg, max) = (484.661, 485.982, 487.554), stdev = 0.961
  CI (99.9%): [485.147, 486.817] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 65.56% complete, ETA 00:24:46
# Fork: 1 of 2
# Warmup Iteration   1: 1693.440 ns/op
# Warmup Iteration   2: 707.614 ns/op
# Warmup Iteration   3: 623.525 ns/op
Iteration   1: 624.283 ns/op
Iteration   2: 623.754 ns/op
Iteration   3: 624.244 ns/op
Iteration   4: 624.008 ns/op
Iteration   5: 624.617 ns/op
Iteration   6: 624.522 ns/op
Iteration   7: 624.155 ns/op
Iteration   8: 627.219 ns/op
Iteration   9: 623.660 ns/op
Iteration  10: 623.822 ns/op

# Run progress: 65.61% complete, ETA 00:24:43
# Fork: 2 of 2
# Warmup Iteration   1: 790.032 ns/op
# Warmup Iteration   2: 719.136 ns/op
# Warmup Iteration   3: 572.856 ns/op
Iteration   1: 573.884 ns/op
Iteration   2: 572.387 ns/op
Iteration   3: 573.139 ns/op
Iteration   4: 572.851 ns/op
Iteration   5: 573.031 ns/op
Iteration   6: 572.345 ns/op
Iteration   7: 572.416 ns/op
Iteration   8: 581.343 ns/op
Iteration   9: 572.031 ns/op
Iteration  10: 572.352 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  599.003 ±(99.9%) 22.721 ns/op [Average]
  (min, avg, max) = (572.031, 599.003, 627.219), stdev = 26.166
  CI (99.9%): [576.282, 621.724] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 65.67% complete, ETA 00:24:41
# Fork: 1 of 2
# Warmup Iteration   1: 1266.925 ns/op
# Warmup Iteration   2: 714.023 ns/op
# Warmup Iteration   3: 627.842 ns/op
Iteration   1: 628.321 ns/op
Iteration   2: 627.562 ns/op
Iteration   3: 628.126 ns/op
Iteration   4: 628.285 ns/op
Iteration   5: 627.704 ns/op
Iteration   6: 628.327 ns/op
Iteration   7: 628.050 ns/op
Iteration   8: 631.307 ns/op
Iteration   9: 627.906 ns/op
Iteration  10: 627.808 ns/op

# Run progress: 65.72% complete, ETA 00:24:39
# Fork: 2 of 2
# Warmup Iteration   1: 1561.361 ns/op
# Warmup Iteration   2: 716.402 ns/op
# Warmup Iteration   3: 628.030 ns/op
Iteration   1: 628.754 ns/op
Iteration   2: 627.999 ns/op
Iteration   3: 628.502 ns/op
Iteration   4: 628.041 ns/op
Iteration   5: 627.884 ns/op
Iteration   6: 628.259 ns/op
Iteration   7: 627.517 ns/op
Iteration   8: 630.975 ns/op
Iteration   9: 628.114 ns/op
Iteration  10: 627.959 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  628.370 ±(99.9%) 0.865 ns/op [Average]
  (min, avg, max) = (627.517, 628.370, 631.307), stdev = 0.996
  CI (99.9%): [627.505, 629.235] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 65.78% complete, ETA 00:24:36
# Fork: 1 of 2
# Warmup Iteration   1: 836.266 ns/op
# Warmup Iteration   2: 693.704 ns/op
# Warmup Iteration   3: 600.847 ns/op
Iteration   1: 601.094 ns/op
Iteration   2: 601.255 ns/op
Iteration   3: 600.972 ns/op
Iteration   4: 601.551 ns/op
Iteration   5: 601.518 ns/op
Iteration   6: 601.585 ns/op
Iteration   7: 600.939 ns/op
Iteration   8: 603.426 ns/op
Iteration   9: 601.241 ns/op
Iteration  10: 601.192 ns/op

# Run progress: 65.83% complete, ETA 00:24:34
# Fork: 2 of 2
# Warmup Iteration   1: 896.503 ns/op
# Warmup Iteration   2: 683.576 ns/op
# Warmup Iteration   3: 600.297 ns/op
Iteration   1: 600.970 ns/op
Iteration   2: 600.456 ns/op
Iteration   3: 601.248 ns/op
Iteration   4: 600.540 ns/op
Iteration   5: 601.180 ns/op
Iteration   6: 601.123 ns/op
Iteration   7: 600.490 ns/op
Iteration   8: 603.784 ns/op
Iteration   9: 600.376 ns/op
Iteration  10: 600.551 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  601.275 ±(99.9%) 0.763 ns/op [Average]
  (min, avg, max) = (600.376, 601.275, 603.784), stdev = 0.879
  CI (99.9%): [600.511, 602.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 65.89% complete, ETA 00:24:31
# Fork: 1 of 2
# Warmup Iteration   1: 661.732 ns/op
# Warmup Iteration   2: 587.967 ns/op
# Warmup Iteration   3: 486.458 ns/op
Iteration   1: 486.553 ns/op
Iteration   2: 486.741 ns/op
Iteration   3: 486.586 ns/op
Iteration   4: 490.266 ns/op
Iteration   5: 490.244 ns/op
Iteration   6: 490.473 ns/op
Iteration   7: 490.273 ns/op
Iteration   8: 489.834 ns/op
Iteration   9: 489.959 ns/op
Iteration  10: 490.381 ns/op

# Run progress: 65.94% complete, ETA 00:24:29
# Fork: 2 of 2
# Warmup Iteration   1: 589.109 ns/op
# Warmup Iteration   2: 552.006 ns/op
# Warmup Iteration   3: 486.500 ns/op
Iteration   1: 486.483 ns/op
Iteration   2: 486.551 ns/op
Iteration   3: 486.707 ns/op
Iteration   4: 490.538 ns/op
Iteration   5: 490.203 ns/op
Iteration   6: 490.423 ns/op
Iteration   7: 490.333 ns/op
Iteration   8: 489.699 ns/op
Iteration   9: 489.997 ns/op
Iteration  10: 490.213 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  489.123 ±(99.9%) 1.481 ns/op [Average]
  (min, avg, max) = (486.483, 489.123, 490.538), stdev = 1.705
  CI (99.9%): [487.642, 490.603] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 66.00% complete, ETA 00:24:27
# Fork: 1 of 2
# Warmup Iteration   1: 37.853 ns/op
# Warmup Iteration   2: 65.535 ns/op
# Warmup Iteration   3: 50.009 ns/op
Iteration   1: 50.007 ns/op
Iteration   2: 50.075 ns/op
Iteration   3: 50.041 ns/op
Iteration   4: 50.048 ns/op
Iteration   5: 49.977 ns/op
Iteration   6: 50.036 ns/op
Iteration   7: 49.984 ns/op
Iteration   8: 34.511 ns/op
Iteration   9: 50.012 ns/op
Iteration  10: 50.049 ns/op

# Run progress: 66.06% complete, ETA 00:24:24
# Fork: 2 of 2
# Warmup Iteration   1: 38.235 ns/op
# Warmup Iteration   2: 66.400 ns/op
# Warmup Iteration   3: 35.671 ns/op
Iteration   1: 35.661 ns/op
Iteration   2: 35.698 ns/op
Iteration   3: 35.667 ns/op
Iteration   4: 35.672 ns/op
Iteration   5: 35.693 ns/op
Iteration   6: 36.166 ns/op
Iteration   7: 35.696 ns/op
Iteration   8: 34.430 ns/op
Iteration   9: 35.753 ns/op
Iteration  10: 35.712 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.044 ±(99.9%) 6.440 ns/op [Average]
  (min, avg, max) = (34.430, 42.044, 50.075), stdev = 7.417
  CI (99.9%): [35.604, 48.485] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 66.11% complete, ETA 00:24:22
# Fork: 1 of 2
# Warmup Iteration   1: 6340.890 ns/op
# Warmup Iteration   2: 4814.760 ns/op
# Warmup Iteration   3: 5536.106 ns/op
Iteration   1: 3684.392 ns/op
Iteration   2: 4823.305 ns/op
Iteration   3: 3998.922 ns/op
Iteration   4: 2364.106 ns/op
Iteration   5: 3685.787 ns/op
Iteration   6: 4704.243 ns/op
Iteration   7: 4675.039 ns/op
Iteration   8: 4598.850 ns/op
Iteration   9: 4497.634 ns/op
Iteration  10: 3389.413 ns/op

# Run progress: 66.17% complete, ETA 00:24:19
# Fork: 2 of 2
# Warmup Iteration   1: 6627.355 ns/op
# Warmup Iteration   2: 4830.011 ns/op
# Warmup Iteration   3: 5691.319 ns/op
Iteration   1: 3763.413 ns/op
Iteration   2: 4969.763 ns/op
Iteration   3: 4113.205 ns/op
Iteration   4: 2380.016 ns/op
Iteration   5: 3748.477 ns/op
Iteration   6: 4782.822 ns/op
Iteration   7: 4734.447 ns/op
Iteration   8: 4644.249 ns/op
Iteration   9: 4576.046 ns/op
Iteration  10: 3454.333 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4079.423 ±(99.9%) 668.203 ns/op [Average]
  (min, avg, max) = (2364.106, 4079.423, 4969.763), stdev = 769.503
  CI (99.9%): [3411.220, 4747.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 66.22% complete, ETA 00:24:17
# Fork: 1 of 2
# Warmup Iteration   1: 7567.925 ns/op
# Warmup Iteration   2: 3379.528 ns/op
# Warmup Iteration   3: 9764.901 ns/op
Iteration   1: 2803.833 ns/op
Iteration   2: 2755.122 ns/op
Iteration   3: 3782.534 ns/op
Iteration   4: 2406.494 ns/op
Iteration   5: 13635.346 ns/op
Iteration   6: 2994.827 ns/op
Iteration   7: 2968.004 ns/op
Iteration   8: 2931.385 ns/op
Iteration   9: 2875.847 ns/op
Iteration  10: 8483.235 ns/op

# Run progress: 66.28% complete, ETA 00:24:15
# Fork: 2 of 2
# Warmup Iteration   1: 6832.139 ns/op
# Warmup Iteration   2: 3387.001 ns/op
# Warmup Iteration   3: 9678.226 ns/op
Iteration   1: 2791.673 ns/op
Iteration   2: 2746.002 ns/op
Iteration   3: 5427.229 ns/op
Iteration   4: 2401.272 ns/op
Iteration   5: 14903.548 ns/op
Iteration   6: 2998.043 ns/op
Iteration   7: 3015.806 ns/op
Iteration   8: 2931.152 ns/op
Iteration   9: 2939.969 ns/op
Iteration  10: 8369.044 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4708.018 ±(99.9%) 3229.498 ns/op [Average]
  (min, avg, max) = (2401.272, 4708.018, 14903.548), stdev = 3719.095
  CI (99.9%): [1478.520, 7937.516] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 66.33% complete, ETA 00:24:12
# Fork: 1 of 2
# Warmup Iteration   1: 7804.049 ns/op
# Warmup Iteration   2: 3786.096 ns/op
# Warmup Iteration   3: 9301.768 ns/op
Iteration   1: 2783.905 ns/op
Iteration   2: 11940.918 ns/op
Iteration   3: 4300.591 ns/op
Iteration   4: 2366.599 ns/op
Iteration   5: 8138.692 ns/op
Iteration   6: 3147.192 ns/op
Iteration   7: 3045.834 ns/op
Iteration   8: 2949.211 ns/op
Iteration   9: 2988.724 ns/op
Iteration  10: 8231.988 ns/op

# Run progress: 66.39% complete, ETA 00:24:10
# Fork: 2 of 2
# Warmup Iteration   1: 7908.202 ns/op
# Warmup Iteration   2: 3926.355 ns/op
# Warmup Iteration   3: 10072.729 ns/op
Iteration   1: 2839.475 ns/op
Iteration   2: 4229.265 ns/op
Iteration   3: 5617.620 ns/op
Iteration   4: 2360.456 ns/op
Iteration   5: 8201.947 ns/op
Iteration   6: 3174.824 ns/op
Iteration   7: 3059.271 ns/op
Iteration   8: 2959.803 ns/op
Iteration   9: 2996.387 ns/op
Iteration  10: 8202.510 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4676.761 ±(99.9%) 2379.051 ns/op [Average]
  (min, avg, max) = (2360.456, 4676.761, 11940.918), stdev = 2739.719
  CI (99.9%): [2297.709, 7055.812] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 66.44% complete, ETA 00:24:07
# Fork: 1 of 2
# Warmup Iteration   1: 4874.717 ns/op
# Warmup Iteration   2: 15002.247 ns/op
# Warmup Iteration   3: 8152.571 ns/op
Iteration   1: 2726.293 ns/op
Iteration   2: 2661.780 ns/op
Iteration   3: 4302.425 ns/op
Iteration   4: 3896.914 ns/op
Iteration   5: 8772.193 ns/op
Iteration   6: 2912.060 ns/op
Iteration   7: 2848.553 ns/op
Iteration   8: 2853.569 ns/op
Iteration   9: 2703.704 ns/op
Iteration  10: 6230.115 ns/op

# Run progress: 66.50% complete, ETA 00:24:05
# Fork: 2 of 2
# Warmup Iteration   1: 5033.730 ns/op
# Warmup Iteration   2: 11181.907 ns/op
# Warmup Iteration   3: 8510.031 ns/op
Iteration   1: 2682.460 ns/op
Iteration   2: 2622.694 ns/op
Iteration   3: 4324.176 ns/op
Iteration   4: 4538.272 ns/op
Iteration   5: 9518.008 ns/op
Iteration   6: 2941.819 ns/op
Iteration   7: 2868.111 ns/op
Iteration   8: 2906.202 ns/op
Iteration   9: 2726.164 ns/op
Iteration  10: 6430.018 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4073.277 ±(99.9%) 1806.825 ns/op [Average]
  (min, avg, max) = (2622.694, 4073.277, 9518.008), stdev = 2080.743
  CI (99.9%): [2266.451, 5880.102] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 66.56% complete, ETA 00:24:03
# Fork: 1 of 2
# Warmup Iteration   1: 7504.947 ns/op
# Warmup Iteration   2: 5488.072 ns/op
# Warmup Iteration   3: 3733.129 ns/op
Iteration   1: 3969.318 ns/op
Iteration   2: 5043.285 ns/op
Iteration   3: 4192.577 ns/op
Iteration   4: 2638.768 ns/op
Iteration   5: 3949.446 ns/op
Iteration   6: 4998.919 ns/op
Iteration   7: 4916.918 ns/op
Iteration   8: 4847.280 ns/op
Iteration   9: 4742.455 ns/op
Iteration  10: 3740.688 ns/op

# Run progress: 66.61% complete, ETA 00:24:00
# Fork: 2 of 2
# Warmup Iteration   1: 7637.828 ns/op
# Warmup Iteration   2: 5887.028 ns/op
# Warmup Iteration   3: 7721.484 ns/op
Iteration   1: 3781.487 ns/op
Iteration   2: 4840.317 ns/op
Iteration   3: 4045.664 ns/op
Iteration   4: 2498.930 ns/op
Iteration   5: 3775.880 ns/op
Iteration   6: 4715.981 ns/op
Iteration   7: 4648.805 ns/op
Iteration   8: 4568.461 ns/op
Iteration   9: 4477.473 ns/op
Iteration  10: 3518.339 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4195.549 ±(99.9%) 635.249 ns/op [Average]
  (min, avg, max) = (2498.930, 4195.549, 5043.285), stdev = 731.554
  CI (99.9%): [3560.301, 4830.798] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 66.67% complete, ETA 00:23:58
# Fork: 1 of 2
# Warmup Iteration   1: 37.676 ns/op
# Warmup Iteration   2: 66.939 ns/op
# Warmup Iteration   3: 35.676 ns/op
Iteration   1: 35.650 ns/op
Iteration   2: 35.665 ns/op
Iteration   3: 35.612 ns/op
Iteration   4: 35.668 ns/op
Iteration   5: 35.725 ns/op
Iteration   6: 36.168 ns/op
Iteration   7: 35.722 ns/op
Iteration   8: 34.519 ns/op
Iteration   9: 35.720 ns/op
Iteration  10: 35.627 ns/op

# Run progress: 66.72% complete, ETA 00:23:55
# Fork: 2 of 2
# Warmup Iteration   1: 38.366 ns/op
# Warmup Iteration   2: 67.170 ns/op
# Warmup Iteration   3: 35.673 ns/op
Iteration   1: 35.726 ns/op
Iteration   2: 35.686 ns/op
Iteration   3: 35.719 ns/op
Iteration   4: 35.790 ns/op
Iteration   5: 35.640 ns/op
Iteration   6: 36.159 ns/op
Iteration   7: 35.664 ns/op
Iteration   8: 34.515 ns/op
Iteration   9: 35.701 ns/op
Iteration  10: 35.774 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.623 ±(99.9%) 0.354 ns/op [Average]
  (min, avg, max) = (34.515, 35.623, 36.168), stdev = 0.407
  CI (99.9%): [35.269, 35.976] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 66.78% complete, ETA 00:23:53
# Fork: 1 of 2
# Warmup Iteration   1: 16839.040 ns/op
# Warmup Iteration   2: 12246.824 ns/op
# Warmup Iteration   3: 10886.844 ns/op
Iteration   1: 10893.581 ns/op
Iteration   2: 10924.994 ns/op
Iteration   3: 10895.705 ns/op
Iteration   4: 10942.340 ns/op
Iteration   5: 10838.069 ns/op
Iteration   6: 10866.116 ns/op
Iteration   7: 10870.697 ns/op
Iteration   8: 10893.291 ns/op
Iteration   9: 10857.580 ns/op
Iteration  10: 10891.241 ns/op

# Run progress: 66.83% complete, ETA 00:23:51
# Fork: 2 of 2
# Warmup Iteration   1: 17271.121 ns/op
# Warmup Iteration   2: 12863.629 ns/op
# Warmup Iteration   3: 10994.371 ns/op
Iteration   1: 11000.090 ns/op
Iteration   2: 10950.755 ns/op
Iteration   3: 11002.454 ns/op
Iteration   4: 10957.098 ns/op
Iteration   5: 10983.740 ns/op
Iteration   6: 10985.297 ns/op
Iteration   7: 10944.087 ns/op
Iteration   8: 10951.261 ns/op
Iteration   9: 10903.920 ns/op
Iteration  10: 10913.305 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10923.281 ±(99.9%) 42.167 ns/op [Average]
  (min, avg, max) = (10838.069, 10923.281, 11002.454), stdev = 48.560
  CI (99.9%): [10881.114, 10965.448] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 66.89% complete, ETA 00:23:48
# Fork: 1 of 2
# Warmup Iteration   1: 14002.297 ns/op
# Warmup Iteration   2: 7643.631 ns/op
# Warmup Iteration   3: 6759.685 ns/op
Iteration   1: 6747.013 ns/op
Iteration   2: 6759.244 ns/op
Iteration   3: 6743.636 ns/op
Iteration   4: 6759.783 ns/op
Iteration   5: 6774.042 ns/op
Iteration   6: 6752.023 ns/op
Iteration   7: 6796.702 ns/op
Iteration   8: 6771.313 ns/op
Iteration   9: 6759.432 ns/op
Iteration  10: 6773.299 ns/op

# Run progress: 66.94% complete, ETA 00:23:46
# Fork: 2 of 2
# Warmup Iteration   1: 13532.708 ns/op
# Warmup Iteration   2: 8314.621 ns/op
# Warmup Iteration   3: 7208.429 ns/op
Iteration   1: 7194.086 ns/op
Iteration   2: 7194.061 ns/op
Iteration   3: 7154.735 ns/op
Iteration   4: 7180.360 ns/op
Iteration   5: 7217.351 ns/op
Iteration   6: 7209.677 ns/op
Iteration   7: 7158.742 ns/op
Iteration   8: 7226.262 ns/op
Iteration   9: 7145.094 ns/op
Iteration  10: 7169.279 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6974.307 ±(99.9%) 188.649 ns/op [Average]
  (min, avg, max) = (6743.636, 6974.307, 7226.262), stdev = 217.248
  CI (99.9%): [6785.658, 7162.956] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 67.00% complete, ETA 00:23:43
# Fork: 1 of 2
# Warmup Iteration   1: 14495.647 ns/op
# Warmup Iteration   2: 8338.799 ns/op
# Warmup Iteration   3: 7074.578 ns/op
Iteration   1: 7170.395 ns/op
Iteration   2: 7096.596 ns/op
Iteration   3: 7179.288 ns/op
Iteration   4: 7118.297 ns/op
Iteration   5: 7113.158 ns/op
Iteration   6: 7227.344 ns/op
Iteration   7: 7177.424 ns/op
Iteration   8: 7191.453 ns/op
Iteration   9: 7192.755 ns/op
Iteration  10: 7164.837 ns/op

# Run progress: 67.06% complete, ETA 00:23:41
# Fork: 2 of 2
# Warmup Iteration   1: 14503.582 ns/op
# Warmup Iteration   2: 8026.313 ns/op
# Warmup Iteration   3: 7029.601 ns/op
Iteration   1: 7064.021 ns/op
Iteration   2: 7068.903 ns/op
Iteration   3: 7000.560 ns/op
Iteration   4: 7062.251 ns/op
Iteration   5: 7028.223 ns/op
Iteration   6: 7037.425 ns/op
Iteration   7: 6993.167 ns/op
Iteration   8: 7080.429 ns/op
Iteration   9: 7034.869 ns/op
Iteration  10: 7012.992 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7100.719 ±(99.9%) 63.432 ns/op [Average]
  (min, avg, max) = (6993.167, 7100.719, 7227.344), stdev = 73.048
  CI (99.9%): [7037.288, 7164.151] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 67.11% complete, ETA 00:23:39
# Fork: 1 of 2
# Warmup Iteration   1: 12214.538 ns/op
# Warmup Iteration   2: 8047.205 ns/op
# Warmup Iteration   3: 7011.832 ns/op
Iteration   1: 7003.108 ns/op
Iteration   2: 7026.962 ns/op
Iteration   3: 7013.861 ns/op
Iteration   4: 7038.911 ns/op
Iteration   5: 6976.104 ns/op
Iteration   6: 6994.294 ns/op
Iteration   7: 7030.739 ns/op
Iteration   8: 7025.158 ns/op
Iteration   9: 7060.274 ns/op
Iteration  10: 7009.700 ns/op

# Run progress: 67.17% complete, ETA 00:23:36
# Fork: 2 of 2
# Warmup Iteration   1: 13241.254 ns/op
# Warmup Iteration   2: 8126.704 ns/op
# Warmup Iteration   3: 7004.736 ns/op
Iteration   1: 7055.382 ns/op
Iteration   2: 7031.433 ns/op
Iteration   3: 7024.879 ns/op
Iteration   4: 7002.038 ns/op
Iteration   5: 7020.319 ns/op
Iteration   6: 7005.359 ns/op
Iteration   7: 7019.284 ns/op
Iteration   8: 6995.452 ns/op
Iteration   9: 7023.871 ns/op
Iteration  10: 7014.998 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7018.606 ±(99.9%) 17.520 ns/op [Average]
  (min, avg, max) = (6976.104, 7018.606, 7060.274), stdev = 20.176
  CI (99.9%): [7001.086, 7036.126] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 67.22% complete, ETA 00:23:34
# Fork: 1 of 2
# Warmup Iteration   1: 15225.954 ns/op
# Warmup Iteration   2: 10380.818 ns/op
# Warmup Iteration   3: 8964.898 ns/op
Iteration   1: 8783.698 ns/op
Iteration   2: 8777.806 ns/op
Iteration   3: 8799.464 ns/op
Iteration   4: 8968.504 ns/op
Iteration   5: 9016.912 ns/op
Iteration   6: 8957.982 ns/op
Iteration   7: 8996.774 ns/op
Iteration   8: 8968.603 ns/op
Iteration   9: 8982.988 ns/op
Iteration  10: 9180.257 ns/op

# Run progress: 67.28% complete, ETA 00:23:32
# Fork: 2 of 2
# Warmup Iteration   1: 14866.442 ns/op
# Warmup Iteration   2: 10055.572 ns/op
# Warmup Iteration   3: 8924.901 ns/op
Iteration   1: 8761.744 ns/op
Iteration   2: 8760.580 ns/op
Iteration   3: 8760.039 ns/op
Iteration   4: 8968.937 ns/op
Iteration   5: 8993.309 ns/op
Iteration   6: 8999.017 ns/op
Iteration   7: 8980.250 ns/op
Iteration   8: 8967.339 ns/op
Iteration   9: 8943.155 ns/op
Iteration  10: 9130.434 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8934.890 ±(99.9%) 105.938 ns/op [Average]
  (min, avg, max) = (8760.039, 8934.890, 9180.257), stdev = 121.998
  CI (99.9%): [8828.952, 9040.827] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 67.33% complete, ETA 00:23:29
# Fork: 1 of 2
# Warmup Iteration   1: 38.104 ns/op
# Warmup Iteration   2: 63.715 ns/op
# Warmup Iteration   3: 35.651 ns/op
Iteration   1: 35.759 ns/op
Iteration   2: 35.668 ns/op
Iteration   3: 35.653 ns/op
Iteration   4: 35.686 ns/op
Iteration   5: 35.659 ns/op
Iteration   6: 36.191 ns/op
Iteration   7: 35.720 ns/op
Iteration   8: 34.501 ns/op
Iteration   9: 35.642 ns/op
Iteration  10: 35.687 ns/op

# Run progress: 67.39% complete, ETA 00:23:27
# Fork: 2 of 2
# Warmup Iteration   1: 52.027 ns/op
# Warmup Iteration   2: 67.239 ns/op
# Warmup Iteration   3: 35.678 ns/op
Iteration   1: 35.774 ns/op
Iteration   2: 35.647 ns/op
Iteration   3: 35.685 ns/op
Iteration   4: 35.749 ns/op
Iteration   5: 35.723 ns/op
Iteration   6: 36.168 ns/op
Iteration   7: 35.667 ns/op
Iteration   8: 34.438 ns/op
Iteration   9: 35.669 ns/op
Iteration  10: 35.703 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.619 ±(99.9%) 0.367 ns/op [Average]
  (min, avg, max) = (34.438, 35.619, 36.191), stdev = 0.422
  CI (99.9%): [35.253, 35.986] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 67.44% complete, ETA 00:23:24
# Fork: 1 of 2
# Warmup Iteration   1: 7548.664 ns/op
# Warmup Iteration   2: 5572.559 ns/op
# Warmup Iteration   3: 4808.138 ns/op
Iteration   1: 4821.765 ns/op
Iteration   2: 4805.669 ns/op
Iteration   3: 4872.111 ns/op
Iteration   4: 4800.694 ns/op
Iteration   5: 4819.818 ns/op
Iteration   6: 4803.235 ns/op
Iteration   7: 4822.212 ns/op
Iteration   8: 4829.954 ns/op
Iteration   9: 4818.845 ns/op
Iteration  10: 4803.098 ns/op

# Run progress: 67.50% complete, ETA 00:23:22
# Fork: 2 of 2
# Warmup Iteration   1: 7106.828 ns/op
# Warmup Iteration   2: 5579.839 ns/op
# Warmup Iteration   3: 4799.112 ns/op
Iteration   1: 4820.222 ns/op
Iteration   2: 4810.684 ns/op
Iteration   3: 4861.916 ns/op
Iteration   4: 4806.119 ns/op
Iteration   5: 4813.290 ns/op
Iteration   6: 4813.176 ns/op
Iteration   7: 4800.630 ns/op
Iteration   8: 4820.846 ns/op
Iteration   9: 4816.649 ns/op
Iteration  10: 4807.591 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4818.426 ±(99.9%) 16.170 ns/op [Average]
  (min, avg, max) = (4800.630, 4818.426, 4872.111), stdev = 18.622
  CI (99.9%): [4802.256, 4834.596] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 67.56% complete, ETA 00:23:20
# Fork: 1 of 2
# Warmup Iteration   1: 11182.776 ns/op
# Warmup Iteration   2: 6863.289 ns/op
# Warmup Iteration   3: 6116.134 ns/op
Iteration   1: 6137.723 ns/op
Iteration   2: 6111.101 ns/op
Iteration   3: 6147.448 ns/op
Iteration   4: 6107.598 ns/op
Iteration   5: 6121.405 ns/op
Iteration   6: 6133.177 ns/op
Iteration   7: 6115.643 ns/op
Iteration   8: 6107.686 ns/op
Iteration   9: 6118.869 ns/op
Iteration  10: 6088.073 ns/op

# Run progress: 67.61% complete, ETA 00:23:17
# Fork: 2 of 2
# Warmup Iteration   1: 14410.268 ns/op
# Warmup Iteration   2: 7740.820 ns/op
# Warmup Iteration   3: 6470.418 ns/op
Iteration   1: 6442.549 ns/op
Iteration   2: 6455.562 ns/op
Iteration   3: 6472.781 ns/op
Iteration   4: 6455.005 ns/op
Iteration   5: 6463.010 ns/op
Iteration   6: 6455.723 ns/op
Iteration   7: 6449.981 ns/op
Iteration   8: 6474.655 ns/op
Iteration   9: 6444.410 ns/op
Iteration  10: 6477.693 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6289.005 ±(99.9%) 152.104 ns/op [Average]
  (min, avg, max) = (6088.073, 6289.005, 6477.693), stdev = 175.163
  CI (99.9%): [6136.901, 6441.108] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 67.67% complete, ETA 00:23:15
# Fork: 1 of 2
# Warmup Iteration   1: 12564.044 ns/op
# Warmup Iteration   2: 6897.596 ns/op
# Warmup Iteration   3: 6097.782 ns/op
Iteration   1: 6083.214 ns/op
Iteration   2: 6111.293 ns/op
Iteration   3: 6083.863 ns/op
Iteration   4: 6111.172 ns/op
Iteration   5: 6119.123 ns/op
Iteration   6: 6129.699 ns/op
Iteration   7: 6110.059 ns/op
Iteration   8: 6078.574 ns/op
Iteration   9: 6085.555 ns/op
Iteration  10: 6081.830 ns/op

# Run progress: 67.72% complete, ETA 00:23:12
# Fork: 2 of 2
# Warmup Iteration   1: 11744.382 ns/op
# Warmup Iteration   2: 7413.154 ns/op
# Warmup Iteration   3: 6363.631 ns/op
Iteration   1: 6324.058 ns/op
Iteration   2: 6330.772 ns/op
Iteration   3: 6316.175 ns/op
Iteration   4: 6321.264 ns/op
Iteration   5: 6346.027 ns/op
Iteration   6: 6350.036 ns/op
Iteration   7: 6337.667 ns/op
Iteration   8: 6324.054 ns/op
Iteration   9: 6332.648 ns/op
Iteration  10: 6330.544 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6215.381 ±(99.9%) 104.096 ns/op [Average]
  (min, avg, max) = (6078.574, 6215.381, 6350.036), stdev = 119.877
  CI (99.9%): [6111.285, 6319.477] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 67.78% complete, ETA 00:23:10
# Fork: 1 of 2
# Warmup Iteration   1: 10617.756 ns/op
# Warmup Iteration   2: 7169.772 ns/op
# Warmup Iteration   3: 6290.592 ns/op
Iteration   1: 6359.257 ns/op
Iteration   2: 6366.579 ns/op
Iteration   3: 6376.578 ns/op
Iteration   4: 6318.881 ns/op
Iteration   5: 6351.947 ns/op
Iteration   6: 6281.816 ns/op
Iteration   7: 6331.802 ns/op
Iteration   8: 6314.757 ns/op
Iteration   9: 6337.491 ns/op
Iteration  10: 6305.440 ns/op

# Run progress: 67.83% complete, ETA 00:23:08
# Fork: 2 of 2
# Warmup Iteration   1: 9614.162 ns/op
# Warmup Iteration   2: 7203.945 ns/op
# Warmup Iteration   3: 6360.153 ns/op
Iteration   1: 6391.060 ns/op
Iteration   2: 6347.786 ns/op
Iteration   3: 6330.543 ns/op
Iteration   4: 6308.729 ns/op
Iteration   5: 6301.083 ns/op
Iteration   6: 6320.279 ns/op
Iteration   7: 6316.219 ns/op
Iteration   8: 6359.367 ns/op
Iteration   9: 6319.462 ns/op
Iteration  10: 6309.247 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6332.416 ±(99.9%) 24.472 ns/op [Average]
  (min, avg, max) = (6281.816, 6332.416, 6391.060), stdev = 28.182
  CI (99.9%): [6307.944, 6356.889] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 67.89% complete, ETA 00:23:05
# Fork: 1 of 2
# Warmup Iteration   1: 9077.014 ns/op
# Warmup Iteration   2: 7429.541 ns/op
# Warmup Iteration   3: 6551.053 ns/op
Iteration   1: 6572.365 ns/op
Iteration   2: 6547.510 ns/op
Iteration   3: 6578.808 ns/op
Iteration   4: 6533.920 ns/op
Iteration   5: 6537.181 ns/op
Iteration   6: 6527.405 ns/op
Iteration   7: 6527.778 ns/op
Iteration   8: 6565.536 ns/op
Iteration   9: 6526.955 ns/op
Iteration  10: 6550.128 ns/op

# Run progress: 67.94% complete, ETA 00:23:03
# Fork: 2 of 2
# Warmup Iteration   1: 8984.028 ns/op
# Warmup Iteration   2: 7486.963 ns/op
# Warmup Iteration   3: 6553.144 ns/op
Iteration   1: 6557.743 ns/op
Iteration   2: 6548.422 ns/op
Iteration   3: 6549.793 ns/op
Iteration   4: 6616.491 ns/op
Iteration   5: 6528.221 ns/op
Iteration   6: 6526.479 ns/op
Iteration   7: 6531.069 ns/op
Iteration   8: 6542.778 ns/op
Iteration   9: 6526.985 ns/op
Iteration  10: 6535.912 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6546.574 ±(99.9%) 19.873 ns/op [Average]
  (min, avg, max) = (6526.479, 6546.574, 6616.491), stdev = 22.885
  CI (99.9%): [6526.701, 6566.447] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 68.00% complete, ETA 00:23:00
# Fork: 1 of 2
# Warmup Iteration   1: 37.844 ns/op
# Warmup Iteration   2: 66.209 ns/op
# Warmup Iteration   3: 35.635 ns/op
Iteration   1: 35.760 ns/op
Iteration   2: 35.701 ns/op
Iteration   3: 35.711 ns/op
Iteration   4: 35.692 ns/op
Iteration   5: 35.704 ns/op
Iteration   6: 36.139 ns/op
Iteration   7: 35.639 ns/op
Iteration   8: 34.517 ns/op
Iteration   9: 35.727 ns/op
Iteration  10: 35.748 ns/op

# Run progress: 68.06% complete, ETA 00:22:58
# Fork: 2 of 2
# Warmup Iteration   1: 38.268 ns/op
# Warmup Iteration   2: 67.013 ns/op
# Warmup Iteration   3: 35.682 ns/op
Iteration   1: 35.642 ns/op
Iteration   2: 35.746 ns/op
Iteration   3: 35.703 ns/op
Iteration   4: 35.753 ns/op
Iteration   5: 35.634 ns/op
Iteration   6: 36.159 ns/op
Iteration   7: 35.714 ns/op
Iteration   8: 34.529 ns/op
Iteration   9: 35.775 ns/op
Iteration  10: 35.648 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.632 ±(99.9%) 0.352 ns/op [Average]
  (min, avg, max) = (34.517, 35.632, 36.159), stdev = 0.405
  CI (99.9%): [35.281, 35.984] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 68.11% complete, ETA 00:22:56
# Fork: 1 of 2
# Warmup Iteration   1: 9786.896 ns/op
# Warmup Iteration   2: 13044.512 ns/op
# Warmup Iteration   3: 9155.706 ns/op
Iteration   1: 4876.591 ns/op
Iteration   2: 5226.128 ns/op
Iteration   3: 5044.261 ns/op
Iteration   4: 4937.932 ns/op
Iteration   5: 4855.837 ns/op
Iteration   6: 5191.608 ns/op
Iteration   7: 5280.681 ns/op
Iteration   8: 4894.842 ns/op
Iteration   9: 4832.622 ns/op
Iteration  10: 5310.500 ns/op

# Run progress: 68.17% complete, ETA 00:22:53
# Fork: 2 of 2
# Warmup Iteration   1: 9222.880 ns/op
# Warmup Iteration   2: 13879.338 ns/op
# Warmup Iteration   3: 8887.207 ns/op
Iteration   1: 5000.160 ns/op
Iteration   2: 5193.124 ns/op
Iteration   3: 5168.584 ns/op
Iteration   4: 5054.721 ns/op
Iteration   5: 4818.184 ns/op
Iteration   6: 5171.077 ns/op
Iteration   7: 5391.845 ns/op
Iteration   8: 4946.493 ns/op
Iteration   9: 4739.430 ns/op
Iteration  10: 5332.455 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5063.354 ±(99.9%) 170.154 ns/op [Average]
  (min, avg, max) = (4739.430, 5063.354, 5391.845), stdev = 195.950
  CI (99.9%): [4893.200, 5233.508] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 68.22% complete, ETA 00:22:51
# Fork: 1 of 2
# Warmup Iteration   1: 18542.389 ns/op
# Warmup Iteration   2: 323247.185 ns/op
# Warmup Iteration   3: 9967.341 ns/op
Iteration   1: 5555.163 ns/op
Iteration   2: 31806.704 ns/op
Iteration   3: 25792.741 ns/op
Iteration   4: 5779.287 ns/op
Iteration   5: 5734.996 ns/op
Iteration   6: 5911.670 ns/op
Iteration   7: 5790.610 ns/op
Iteration   8: 5881.180 ns/op
Iteration   9: 5854.275 ns/op
Iteration  10: 6149.067 ns/op

# Run progress: 68.28% complete, ETA 00:22:48
# Fork: 2 of 2
# Warmup Iteration   1: 14871.721 ns/op
# Warmup Iteration   2: 303800.424 ns/op
# Warmup Iteration   3: 11993.429 ns/op
Iteration   1: 5907.694 ns/op
Iteration   2: 123789.056 ns/op
Iteration   3: 17210.534 ns/op
Iteration   4: 6003.344 ns/op
Iteration   5: 5935.764 ns/op
Iteration   6: 5997.320 ns/op
Iteration   7: 5865.114 ns/op
Iteration   8: 6147.499 ns/op
Iteration   9: 6014.166 ns/op
Iteration  10: 6197.903 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  14666.204 ±(99.9%) 23194.707 ns/op [Average]
  (min, avg, max) = (5555.163, 14666.204, 123789.056), stdev = 26711.059
  CI (99.9%): [≈ 0, 37860.911] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 68.33% complete, ETA 00:22:46
# Fork: 1 of 2
# Warmup Iteration   1: 16422.530 ns/op
# Warmup Iteration   2: 233486.557 ns/op
# Warmup Iteration   3: 10602.859 ns/op
Iteration   1: 5478.011 ns/op
Iteration   2: 110705.962 ns/op
Iteration   3: 45808.007 ns/op
Iteration   4: 5936.673 ns/op
Iteration   5: 5867.914 ns/op
Iteration   6: 6236.199 ns/op
Iteration   7: 5824.712 ns/op
Iteration   8: 5955.939 ns/op
Iteration   9: 6102.098 ns/op
Iteration  10: 6442.941 ns/op

# Run progress: 68.39% complete, ETA 00:22:44
# Fork: 2 of 2
# Warmup Iteration   1: 16558.946 ns/op
# Warmup Iteration   2: 271121.890 ns/op
# Warmup Iteration   3: 10605.018 ns/op
Iteration   1: 5527.576 ns/op
Iteration   2: 29742.170 ns/op
Iteration   3: 78747.047 ns/op
Iteration   4: 6016.610 ns/op
Iteration   5: 5845.134 ns/op
Iteration   6: 6027.254 ns/op
Iteration   7: 5848.943 ns/op
Iteration   8: 5935.142 ns/op
Iteration   9: 6046.191 ns/op
Iteration  10: 6178.917 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18013.672 ±(99.9%) 24816.541 ns/op [Average]
  (min, avg, max) = (5478.011, 18013.672, 110705.962), stdev = 28578.766
  CI (99.9%): [≈ 0, 42830.214] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 68.44% complete, ETA 00:22:41
# Fork: 1 of 2
# Warmup Iteration   1: 9255.748 ns/op
# Warmup Iteration   2: 34405.098 ns/op
# Warmup Iteration   3: 6603.604 ns/op
Iteration   1: 6258.599 ns/op
Iteration   2: 9556.282 ns/op
Iteration   3: 10729.365 ns/op
Iteration   4: 5441.917 ns/op
Iteration   5: 5452.091 ns/op
Iteration   6: 5507.600 ns/op
Iteration   7: 5533.566 ns/op
Iteration   8: 5299.412 ns/op
Iteration   9: 5301.257 ns/op
Iteration  10: 5568.150 ns/op

# Run progress: 68.50% complete, ETA 00:22:39
# Fork: 2 of 2
# Warmup Iteration   1: 9527.231 ns/op
# Warmup Iteration   2: 28297.347 ns/op
# Warmup Iteration   3: 6576.531 ns/op
Iteration   1: 6342.679 ns/op
Iteration   2: 9180.537 ns/op
Iteration   3: 9374.924 ns/op
Iteration   4: 5539.824 ns/op
Iteration   5: 5494.311 ns/op
Iteration   6: 5563.316 ns/op
Iteration   7: 5554.258 ns/op
Iteration   8: 5331.201 ns/op
Iteration   9: 5379.186 ns/op
Iteration  10: 5565.493 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6398.698 ±(99.9%) 1512.465 ns/op [Average]
  (min, avg, max) = (5299.412, 6398.698, 10729.365), stdev = 1741.757
  CI (99.9%): [4886.233, 7911.164] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 68.56% complete, ETA 00:22:36
# Fork: 1 of 2
# Warmup Iteration   1: 12543.753 ns/op
# Warmup Iteration   2: 9884.605 ns/op
# Warmup Iteration   3: 7873.035 ns/op
Iteration   1: 7849.069 ns/op
Iteration   2: 7828.835 ns/op
Iteration   3: 7852.231 ns/op
Iteration   4: 7798.373 ns/op
Iteration   5: 7784.986 ns/op
Iteration   6: 7788.733 ns/op
Iteration   7: 7787.902 ns/op
Iteration   8: 7783.351 ns/op
Iteration   9: 7789.167 ns/op
Iteration  10: 7817.241 ns/op

# Run progress: 68.61% complete, ETA 00:22:34
# Fork: 2 of 2
# Warmup Iteration   1: 12792.299 ns/op
# Warmup Iteration   2: 10063.434 ns/op
# Warmup Iteration   3: 7973.025 ns/op
Iteration   1: 7982.327 ns/op
Iteration   2: 7955.916 ns/op
Iteration   3: 7991.224 ns/op
Iteration   4: 8006.178 ns/op
Iteration   5: 7977.408 ns/op
Iteration   6: 7960.213 ns/op
Iteration   7: 8014.014 ns/op
Iteration   8: 7982.094 ns/op
Iteration   9: 7992.697 ns/op
Iteration  10: 7978.447 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7896.020 ±(99.9%) 80.791 ns/op [Average]
  (min, avg, max) = (7783.351, 7896.020, 8014.014), stdev = 93.039
  CI (99.9%): [7815.229, 7976.811] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 68.67% complete, ETA 00:22:32
# Fork: 1 of 2
# Warmup Iteration   1: 38.398 ns/op
# Warmup Iteration   2: 67.165 ns/op
# Warmup Iteration   3: 35.698 ns/op
Iteration   1: 35.634 ns/op
Iteration   2: 35.647 ns/op
Iteration   3: 35.686 ns/op
Iteration   4: 35.721 ns/op
Iteration   5: 35.707 ns/op
Iteration   6: 36.193 ns/op
Iteration   7: 35.673 ns/op
Iteration   8: 34.464 ns/op
Iteration   9: 35.752 ns/op
Iteration  10: 35.645 ns/op

# Run progress: 68.72% complete, ETA 00:22:29
# Fork: 2 of 2
# Warmup Iteration   1: 38.869 ns/op
# Warmup Iteration   2: 66.751 ns/op
# Warmup Iteration   3: 35.756 ns/op
Iteration   1: 35.704 ns/op
Iteration   2: 35.710 ns/op
Iteration   3: 35.711 ns/op
Iteration   4: 35.746 ns/op
Iteration   5: 35.674 ns/op
Iteration   6: 36.095 ns/op
Iteration   7: 35.683 ns/op
Iteration   8: 34.431 ns/op
Iteration   9: 35.669 ns/op
Iteration  10: 35.682 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.611 ±(99.9%) 0.367 ns/op [Average]
  (min, avg, max) = (34.431, 35.611, 36.193), stdev = 0.423
  CI (99.9%): [35.244, 35.979] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 68.78% complete, ETA 00:22:27
# Fork: 1 of 2
# Warmup Iteration   1: 1434.720 ns/op
# Warmup Iteration   2: 1226.154 ns/op
# Warmup Iteration   3: 1047.145 ns/op
Iteration   1: 1048.432 ns/op
Iteration   2: 1047.309 ns/op
Iteration   3: 1049.536 ns/op
Iteration   4: 1036.223 ns/op
Iteration   5: 1049.716 ns/op
Iteration   6: 1040.597 ns/op
Iteration   7: 1051.485 ns/op
Iteration   8: 1036.072 ns/op
Iteration   9: 1035.220 ns/op
Iteration  10: 1035.206 ns/op

# Run progress: 68.83% complete, ETA 00:22:24
# Fork: 2 of 2
# Warmup Iteration   1: 1628.148 ns/op
# Warmup Iteration   2: 1231.195 ns/op
# Warmup Iteration   3: 1056.060 ns/op
Iteration   1: 1056.408 ns/op
Iteration   2: 1056.740 ns/op
Iteration   3: 1057.208 ns/op
Iteration   4: 1044.968 ns/op
Iteration   5: 1061.542 ns/op
Iteration   6: 1050.580 ns/op
Iteration   7: 1063.589 ns/op
Iteration   8: 1046.043 ns/op
Iteration   9: 1045.167 ns/op
Iteration  10: 1044.993 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1047.852 ±(99.9%) 7.388 ns/op [Average]
  (min, avg, max) = (1035.206, 1047.852, 1063.589), stdev = 8.508
  CI (99.9%): [1040.463, 1055.240] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 68.89% complete, ETA 00:22:22
# Fork: 1 of 2
# Warmup Iteration   1: 2111.534 ns/op
# Warmup Iteration   2: 1286.601 ns/op
# Warmup Iteration   3: 1135.458 ns/op
Iteration   1: 1139.484 ns/op
Iteration   2: 1140.655 ns/op
Iteration   3: 1133.879 ns/op
Iteration   4: 1128.275 ns/op
Iteration   5: 1140.755 ns/op
Iteration   6: 1136.360 ns/op
Iteration   7: 1133.750 ns/op
Iteration   8: 1139.912 ns/op
Iteration   9: 1144.599 ns/op
Iteration  10: 1151.249 ns/op

# Run progress: 68.94% complete, ETA 00:22:20
# Fork: 2 of 2
# Warmup Iteration   1: 2396.167 ns/op
# Warmup Iteration   2: 1283.181 ns/op
# Warmup Iteration   3: 1141.028 ns/op
Iteration   1: 1135.784 ns/op
Iteration   2: 1140.279 ns/op
Iteration   3: 1130.666 ns/op
Iteration   4: 1138.282 ns/op
Iteration   5: 1137.279 ns/op
Iteration   6: 1132.793 ns/op
Iteration   7: 1133.536 ns/op
Iteration   8: 1134.786 ns/op
Iteration   9: 1137.503 ns/op
Iteration  10: 1131.987 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1137.090 ±(99.9%) 4.515 ns/op [Average]
  (min, avg, max) = (1128.275, 1137.090, 1151.249), stdev = 5.199
  CI (99.9%): [1132.576, 1141.605] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 69.00% complete, ETA 00:22:17
# Fork: 1 of 2
# Warmup Iteration   1: 2761.958 ns/op
# Warmup Iteration   2: 1426.912 ns/op
# Warmup Iteration   3: 1231.208 ns/op
Iteration   1: 1232.193 ns/op
Iteration   2: 1231.505 ns/op
Iteration   3: 1231.453 ns/op
Iteration   4: 1230.953 ns/op
Iteration   5: 1232.113 ns/op
Iteration   6: 1233.405 ns/op
Iteration   7: 1232.948 ns/op
Iteration   8: 1234.897 ns/op
Iteration   9: 1231.942 ns/op
Iteration  10: 1231.071 ns/op

# Run progress: 69.06% complete, ETA 00:22:15
# Fork: 2 of 2
# Warmup Iteration   1: 2003.811 ns/op
# Warmup Iteration   2: 1408.728 ns/op
# Warmup Iteration   3: 1241.331 ns/op
Iteration   1: 1242.466 ns/op
Iteration   2: 1241.369 ns/op
Iteration   3: 1239.293 ns/op
Iteration   4: 1234.469 ns/op
Iteration   5: 1238.538 ns/op
Iteration   6: 1238.999 ns/op
Iteration   7: 1242.917 ns/op
Iteration   8: 1254.496 ns/op
Iteration   9: 1241.209 ns/op
Iteration  10: 1235.016 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1236.562 ±(99.9%) 5.137 ns/op [Average]
  (min, avg, max) = (1230.953, 1236.562, 1254.496), stdev = 5.916
  CI (99.9%): [1231.425, 1241.700] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 69.11% complete, ETA 00:22:12
# Fork: 1 of 2
# Warmup Iteration   1: 1618.226 ns/op
# Warmup Iteration   2: 1354.712 ns/op
# Warmup Iteration   3: 1194.654 ns/op
Iteration   1: 1193.909 ns/op
Iteration   2: 1195.050 ns/op
Iteration   3: 1194.847 ns/op
Iteration   4: 1194.989 ns/op
Iteration   5: 1194.780 ns/op
Iteration   6: 1194.317 ns/op
Iteration   7: 1194.200 ns/op
Iteration   8: 1196.705 ns/op
Iteration   9: 1195.149 ns/op
Iteration  10: 1193.832 ns/op

# Run progress: 69.17% complete, ETA 00:22:10
# Fork: 2 of 2
# Warmup Iteration   1: 1522.089 ns/op
# Warmup Iteration   2: 1366.152 ns/op
# Warmup Iteration   3: 1139.669 ns/op
Iteration   1: 1147.887 ns/op
Iteration   2: 1164.558 ns/op
Iteration   3: 1144.293 ns/op
Iteration   4: 1150.713 ns/op
Iteration   5: 1144.610 ns/op
Iteration   6: 1156.505 ns/op
Iteration   7: 1161.236 ns/op
Iteration   8: 1160.362 ns/op
Iteration   9: 1147.040 ns/op
Iteration  10: 1141.006 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1173.299 ±(99.9%) 19.765 ns/op [Average]
  (min, avg, max) = (1141.006, 1173.299, 1196.705), stdev = 22.761
  CI (99.9%): [1153.534, 1193.064] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 69.22% complete, ETA 00:22:08
# Fork: 1 of 2
# Warmup Iteration   1: 503.520 ns/op
# Warmup Iteration   2: 433.326 ns/op
# Warmup Iteration   3: 395.651 ns/op
Iteration   1: 396.001 ns/op
Iteration   2: 395.977 ns/op
Iteration   3: 396.091 ns/op
Iteration   4: 400.538 ns/op
Iteration   5: 401.442 ns/op
Iteration   6: 400.510 ns/op
Iteration   7: 401.177 ns/op
Iteration   8: 401.193 ns/op
Iteration   9: 401.505 ns/op
Iteration  10: 401.252 ns/op

# Run progress: 69.28% complete, ETA 00:22:05
# Fork: 2 of 2
# Warmup Iteration   1: 475.305 ns/op
# Warmup Iteration   2: 458.583 ns/op
# Warmup Iteration   3: 396.948 ns/op
Iteration   1: 395.811 ns/op
Iteration   2: 396.191 ns/op
Iteration   3: 396.036 ns/op
Iteration   4: 401.253 ns/op
Iteration   5: 401.189 ns/op
Iteration   6: 401.038 ns/op
Iteration   7: 401.149 ns/op
Iteration   8: 400.217 ns/op
Iteration   9: 401.465 ns/op
Iteration  10: 400.772 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  399.540 ±(99.9%) 2.075 ns/op [Average]
  (min, avg, max) = (395.811, 399.540, 401.505), stdev = 2.389
  CI (99.9%): [397.466, 401.615] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 69.33% complete, ETA 00:22:03
# Fork: 1 of 2
# Warmup Iteration   1: 38.295 ns/op
# Warmup Iteration   2: 67.042 ns/op
# Warmup Iteration   3: 35.662 ns/op
Iteration   1: 35.740 ns/op
Iteration   2: 35.814 ns/op
Iteration   3: 35.737 ns/op
Iteration   4: 35.833 ns/op
Iteration   5: 35.764 ns/op
Iteration   6: 36.145 ns/op
Iteration   7: 35.680 ns/op
Iteration   8: 34.434 ns/op
Iteration   9: 35.746 ns/op
Iteration  10: 35.792 ns/op

# Run progress: 69.39% complete, ETA 00:22:00
# Fork: 2 of 2
# Warmup Iteration   1: 39.201 ns/op
# Warmup Iteration   2: 71.711 ns/op
# Warmup Iteration   3: 49.940 ns/op
Iteration   1: 49.999 ns/op
Iteration   2: 50.033 ns/op
Iteration   3: 49.982 ns/op
Iteration   4: 49.971 ns/op
Iteration   5: 50.012 ns/op
Iteration   6: 50.014 ns/op
Iteration   7: 50.075 ns/op
Iteration   8: 34.517 ns/op
Iteration   9: 49.981 ns/op
Iteration  10: 49.975 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.062 ±(99.9%) 6.410 ns/op [Average]
  (min, avg, max) = (34.434, 42.062, 50.075), stdev = 7.382
  CI (99.9%): [35.652, 48.472] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 69.44% complete, ETA 00:21:58
# Fork: 1 of 2
# Warmup Iteration   1: 7573.539 ns/op
# Warmup Iteration   2: 5815.270 ns/op
# Warmup Iteration   3: 6726.242 ns/op
Iteration   1: 4289.808 ns/op
Iteration   2: 5904.903 ns/op
Iteration   3: 4675.897 ns/op
Iteration   4: 2855.226 ns/op
Iteration   5: 4306.605 ns/op
Iteration   6: 5767.824 ns/op
Iteration   7: 5551.554 ns/op
Iteration   8: 5676.124 ns/op
Iteration   9: 5886.866 ns/op
Iteration  10: 3790.348 ns/op

# Run progress: 69.50% complete, ETA 00:21:56
# Fork: 2 of 2
# Warmup Iteration   1: 7088.624 ns/op
# Warmup Iteration   2: 5900.988 ns/op
# Warmup Iteration   3: 5448.475 ns/op
Iteration   1: 4014.222 ns/op
Iteration   2: 5563.627 ns/op
Iteration   3: 4411.998 ns/op
Iteration   4: 2716.708 ns/op
Iteration   5: 4077.252 ns/op
Iteration   6: 5516.450 ns/op
Iteration   7: 5314.334 ns/op
Iteration   8: 5384.127 ns/op
Iteration   9: 5562.111 ns/op
Iteration  10: 3648.411 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4745.720 ±(99.9%) 872.290 ns/op [Average]
  (min, avg, max) = (2716.708, 4745.720, 5904.903), stdev = 1004.531
  CI (99.9%): [3873.429, 5618.010] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 69.56% complete, ETA 00:21:53
# Fork: 1 of 2
# Warmup Iteration   1: 8637.838 ns/op
# Warmup Iteration   2: 8574.506 ns/op
# Warmup Iteration   3: 4932.244 ns/op
Iteration   1: 4057.967 ns/op
Iteration   2: 4358.386 ns/op
Iteration   3: 4143.132 ns/op
Iteration   4: 3775.446 ns/op
Iteration   5: 4205.224 ns/op
Iteration   6: 7132.515 ns/op
Iteration   7: 4306.186 ns/op
Iteration   8: 4076.311 ns/op
Iteration   9: 4353.983 ns/op
Iteration  10: 3843.985 ns/op

# Run progress: 69.61% complete, ETA 00:21:51
# Fork: 2 of 2
# Warmup Iteration   1: 11032.123 ns/op
# Warmup Iteration   2: 9608.880 ns/op
# Warmup Iteration   3: 5142.814 ns/op
Iteration   1: 4056.720 ns/op
Iteration   2: 4330.431 ns/op
Iteration   3: 4166.069 ns/op
Iteration   4: 3755.091 ns/op
Iteration   5: 4229.196 ns/op
Iteration   6: 5847.272 ns/op
Iteration   7: 4304.809 ns/op
Iteration   8: 4070.281 ns/op
Iteration   9: 4379.291 ns/op
Iteration  10: 3835.128 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4361.371 ±(99.9%) 679.340 ns/op [Average]
  (min, avg, max) = (3755.091, 4361.371, 7132.515), stdev = 782.328
  CI (99.9%): [3682.031, 5040.711] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 69.67% complete, ETA 00:21:48
# Fork: 1 of 2
# Warmup Iteration   1: 9047.536 ns/op
# Warmup Iteration   2: 10350.555 ns/op
# Warmup Iteration   3: 4978.745 ns/op
Iteration   1: 4105.930 ns/op
Iteration   2: 4345.864 ns/op
Iteration   3: 4169.703 ns/op
Iteration   4: 3809.579 ns/op
Iteration   5: 4226.555 ns/op
Iteration   6: 9320.369 ns/op
Iteration   7: 4302.139 ns/op
Iteration   8: 4041.046 ns/op
Iteration   9: 4386.123 ns/op
Iteration  10: 3850.096 ns/op

# Run progress: 69.72% complete, ETA 00:21:46
# Fork: 2 of 2
# Warmup Iteration   1: 8954.611 ns/op
# Warmup Iteration   2: 8168.672 ns/op
# Warmup Iteration   3: 6590.546 ns/op
Iteration   1: 4101.089 ns/op
Iteration   2: 4335.091 ns/op
Iteration   3: 4170.900 ns/op
Iteration   4: 3828.707 ns/op
Iteration   5: 4267.291 ns/op
Iteration   6: 6311.076 ns/op
Iteration   7: 4332.502 ns/op
Iteration   8: 4028.033 ns/op
Iteration   9: 4400.436 ns/op
Iteration  10: 3849.361 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4509.094 ±(99.9%) 1082.424 ns/op [Average]
  (min, avg, max) = (3809.579, 4509.094, 9320.369), stdev = 1246.522
  CI (99.9%): [3426.670, 5591.519] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 69.78% complete, ETA 00:21:44
# Fork: 1 of 2
# Warmup Iteration   1: 6555.750 ns/op
# Warmup Iteration   2: 12373.039 ns/op
# Warmup Iteration   3: 4484.988 ns/op
Iteration   1: 3624.506 ns/op
Iteration   2: 3830.602 ns/op
Iteration   3: 3775.028 ns/op
Iteration   4: 3429.077 ns/op
Iteration   5: 3706.498 ns/op
Iteration   6: 6841.130 ns/op
Iteration   7: 3835.927 ns/op
Iteration   8: 3636.719 ns/op
Iteration   9: 3865.373 ns/op
Iteration  10: 3496.790 ns/op

# Run progress: 69.83% complete, ETA 00:21:41
# Fork: 2 of 2
# Warmup Iteration   1: 6004.820 ns/op
# Warmup Iteration   2: 12214.753 ns/op
# Warmup Iteration   3: 4753.906 ns/op
Iteration   1: 3591.731 ns/op
Iteration   2: 3830.932 ns/op
Iteration   3: 3717.237 ns/op
Iteration   4: 3404.895 ns/op
Iteration   5: 3681.996 ns/op
Iteration   6: 5028.872 ns/op
Iteration   7: 3790.908 ns/op
Iteration   8: 3526.954 ns/op
Iteration   9: 3809.903 ns/op
Iteration  10: 3422.888 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3892.398 ±(99.9%) 670.524 ns/op [Average]
  (min, avg, max) = (3404.895, 3892.398, 6841.130), stdev = 772.176
  CI (99.9%): [3221.875, 4562.922] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 69.89% complete, ETA 00:21:39
# Fork: 1 of 2
# Warmup Iteration   1: 9279.746 ns/op
# Warmup Iteration   2: 7505.084 ns/op
# Warmup Iteration   3: 7535.103 ns/op
Iteration   1: 4126.796 ns/op
Iteration   2: 5113.910 ns/op
Iteration   3: 5293.726 ns/op
Iteration   4: 3073.972 ns/op
Iteration   5: 4040.103 ns/op
Iteration   6: 228331.587 ns/op
Iteration   7: 5454.186 ns/op
Iteration   8: 5954.763 ns/op
Iteration   9: 5838.032 ns/op
Iteration  10: 4186.278 ns/op

# Run progress: 69.94% complete, ETA 00:21:36
# Fork: 2 of 2
# Warmup Iteration   1: 9750.155 ns/op
# Warmup Iteration   2: 7514.541 ns/op
# Warmup Iteration   3: 9622.747 ns/op
Iteration   1: 4395.299 ns/op
Iteration   2: 5442.280 ns/op
Iteration   3: 5659.578 ns/op
Iteration   4: 3149.043 ns/op
Iteration   5: 4283.656 ns/op
Iteration   6: 116883.913 ns/op
Iteration   7: 5748.687 ns/op
Iteration   8: 6268.300 ns/op
Iteration   9: 6319.692 ns/op
Iteration  10: 4301.648 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  21693.272 ±(99.9%) 47494.600 ns/op [Average]
  (min, avg, max) = (3073.972, 21693.272, 228331.587), stdev = 54694.852
  CI (99.9%): [≈ 0, 69187.872] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 70.00% complete, ETA 00:21:34
# Fork: 1 of 2
# Warmup Iteration   1: 37.663 ns/op
# Warmup Iteration   2: 64.834 ns/op
# Warmup Iteration   3: 35.711 ns/op
Iteration   1: 35.729 ns/op
Iteration   2: 35.680 ns/op
Iteration   3: 35.679 ns/op
Iteration   4: 35.741 ns/op
Iteration   5: 35.716 ns/op
Iteration   6: 36.163 ns/op
Iteration   7: 35.663 ns/op
Iteration   8: 34.439 ns/op
Iteration   9: 35.703 ns/op
Iteration  10: 35.682 ns/op

# Run progress: 70.06% complete, ETA 00:21:32
# Fork: 2 of 2
# Warmup Iteration   1: 38.026 ns/op
# Warmup Iteration   2: 66.682 ns/op
# Warmup Iteration   3: 35.671 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.706 ns/op
Iteration   3: 35.748 ns/op
Iteration   4: 35.698 ns/op
Iteration   5: 35.712 ns/op
Iteration   6: 36.151 ns/op
Iteration   7: 35.755 ns/op
Iteration   8: 34.510 ns/op
Iteration   9: 35.725 ns/op
Iteration  10: 35.694 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.629 ±(99.9%) 0.364 ns/op [Average]
  (min, avg, max) = (34.439, 35.629, 36.163), stdev = 0.419
  CI (99.9%): [35.266, 35.993] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 70.11% complete, ETA 00:21:29
# Fork: 1 of 2
# Warmup Iteration   1: 16334.070 ns/op
# Warmup Iteration   2: 12214.235 ns/op
# Warmup Iteration   3: 10705.914 ns/op
Iteration   1: 10673.615 ns/op
Iteration   2: 10698.493 ns/op
Iteration   3: 10654.806 ns/op
Iteration   4: 10633.046 ns/op
Iteration   5: 10630.553 ns/op
Iteration   6: 10687.308 ns/op
Iteration   7: 10644.741 ns/op
Iteration   8: 10620.815 ns/op
Iteration   9: 10676.509 ns/op
Iteration  10: 10734.746 ns/op

# Run progress: 70.17% complete, ETA 00:21:27
# Fork: 2 of 2
# Warmup Iteration   1: 14225.093 ns/op
# Warmup Iteration   2: 10102.039 ns/op
# Warmup Iteration   3: 8754.853 ns/op
Iteration   1: 8760.361 ns/op
Iteration   2: 8792.019 ns/op
Iteration   3: 8807.630 ns/op
Iteration   4: 8784.193 ns/op
Iteration   5: 8784.456 ns/op
Iteration   6: 8780.404 ns/op
Iteration   7: 8746.336 ns/op
Iteration   8: 8760.739 ns/op
Iteration   9: 8713.683 ns/op
Iteration  10: 8729.342 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9715.690 ±(99.9%) 846.616 ns/op [Average]
  (min, avg, max) = (8713.683, 9715.690, 10734.746), stdev = 974.965
  CI (99.9%): [8869.073, 10562.306] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 70.22% complete, ETA 00:21:24
# Fork: 1 of 2
# Warmup Iteration   1: 18031.657 ns/op
# Warmup Iteration   2: 8507.970 ns/op
# Warmup Iteration   3: 7450.782 ns/op
Iteration   1: 7450.885 ns/op
Iteration   2: 7419.474 ns/op
Iteration   3: 7573.385 ns/op
Iteration   4: 7465.285 ns/op
Iteration   5: 7450.682 ns/op
Iteration   6: 7440.919 ns/op
Iteration   7: 7451.241 ns/op
Iteration   8: 7476.034 ns/op
Iteration   9: 7481.974 ns/op
Iteration  10: 7481.863 ns/op

# Run progress: 70.28% complete, ETA 00:21:22
# Fork: 2 of 2
# Warmup Iteration   1: 21124.636 ns/op
# Warmup Iteration   2: 8421.559 ns/op
# Warmup Iteration   3: 7417.798 ns/op
Iteration   1: 7465.024 ns/op
Iteration   2: 7415.533 ns/op
Iteration   3: 7426.961 ns/op
Iteration   4: 7424.867 ns/op
Iteration   5: 7443.900 ns/op
Iteration   6: 7424.256 ns/op
Iteration   7: 7411.865 ns/op
Iteration   8: 7399.966 ns/op
Iteration   9: 7434.114 ns/op
Iteration  10: 7400.276 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7446.925 ±(99.9%) 33.901 ns/op [Average]
  (min, avg, max) = (7399.966, 7446.925, 7573.385), stdev = 39.041
  CI (99.9%): [7413.024, 7480.827] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 70.33% complete, ETA 00:21:20
# Fork: 1 of 2
# Warmup Iteration   1: 15178.657 ns/op
# Warmup Iteration   2: 8723.084 ns/op
# Warmup Iteration   3: 7533.102 ns/op
Iteration   1: 7521.688 ns/op
Iteration   2: 7509.667 ns/op
Iteration   3: 7553.024 ns/op
Iteration   4: 7555.111 ns/op
Iteration   5: 7539.170 ns/op
Iteration   6: 7534.427 ns/op
Iteration   7: 7555.594 ns/op
Iteration   8: 7515.473 ns/op
Iteration   9: 7537.629 ns/op
Iteration  10: 7605.872 ns/op

# Run progress: 70.39% complete, ETA 00:21:17
# Fork: 2 of 2
# Warmup Iteration   1: 16051.498 ns/op
# Warmup Iteration   2: 8435.578 ns/op
# Warmup Iteration   3: 7470.262 ns/op
Iteration   1: 7460.890 ns/op
Iteration   2: 7446.672 ns/op
Iteration   3: 7440.023 ns/op
Iteration   4: 7433.121 ns/op
Iteration   5: 7429.614 ns/op
Iteration   6: 7443.952 ns/op
Iteration   7: 7470.851 ns/op
Iteration   8: 7464.011 ns/op
Iteration   9: 7474.518 ns/op
Iteration  10: 7491.636 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7499.147 ±(99.9%) 43.861 ns/op [Average]
  (min, avg, max) = (7429.614, 7499.147, 7605.872), stdev = 50.511
  CI (99.9%): [7455.286, 7543.009] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 70.44% complete, ETA 00:21:15
# Fork: 1 of 2
# Warmup Iteration   1: 14313.629 ns/op
# Warmup Iteration   2: 8832.023 ns/op
# Warmup Iteration   3: 7494.507 ns/op
Iteration   1: 7532.911 ns/op
Iteration   2: 7535.250 ns/op
Iteration   3: 7500.440 ns/op
Iteration   4: 7504.674 ns/op
Iteration   5: 7520.076 ns/op
Iteration   6: 7508.484 ns/op
Iteration   7: 7498.069 ns/op
Iteration   8: 7528.415 ns/op
Iteration   9: 7496.080 ns/op
Iteration  10: 7487.584 ns/op

# Run progress: 70.50% complete, ETA 00:21:12
# Fork: 2 of 2
# Warmup Iteration   1: 12470.106 ns/op
# Warmup Iteration   2: 8462.759 ns/op
# Warmup Iteration   3: 7502.079 ns/op
Iteration   1: 7522.967 ns/op
Iteration   2: 7470.670 ns/op
Iteration   3: 7523.285 ns/op
Iteration   4: 7514.533 ns/op
Iteration   5: 7510.932 ns/op
Iteration   6: 7506.898 ns/op
Iteration   7: 7506.946 ns/op
Iteration   8: 7493.984 ns/op
Iteration   9: 7481.586 ns/op
Iteration  10: 7513.372 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7507.858 ±(99.9%) 14.746 ns/op [Average]
  (min, avg, max) = (7470.670, 7507.858, 7535.250), stdev = 16.982
  CI (99.9%): [7493.112, 7522.604] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 70.56% complete, ETA 00:21:10
# Fork: 1 of 2
# Warmup Iteration   1: 14557.789 ns/op
# Warmup Iteration   2: 10079.047 ns/op
# Warmup Iteration   3: 8676.343 ns/op
Iteration   1: 8598.820 ns/op
Iteration   2: 8578.508 ns/op
Iteration   3: 8627.664 ns/op
Iteration   4: 8608.924 ns/op
Iteration   5: 8645.183 ns/op
Iteration   6: 8637.074 ns/op
Iteration   7: 8622.627 ns/op
Iteration   8: 8611.566 ns/op
Iteration   9: 8638.330 ns/op
Iteration  10: 8681.572 ns/op

# Run progress: 70.61% complete, ETA 00:21:08
# Fork: 2 of 2
# Warmup Iteration   1: 14602.097 ns/op
# Warmup Iteration   2: 9832.293 ns/op
# Warmup Iteration   3: 8675.807 ns/op
Iteration   1: 8630.899 ns/op
Iteration   2: 8640.149 ns/op
Iteration   3: 8657.777 ns/op
Iteration   4: 8817.911 ns/op
Iteration   5: 8837.168 ns/op
Iteration   6: 8820.761 ns/op
Iteration   7: 8825.188 ns/op
Iteration   8: 8835.686 ns/op
Iteration   9: 8841.705 ns/op
Iteration  10: 8871.978 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8701.475 ±(99.9%) 90.105 ns/op [Average]
  (min, avg, max) = (8578.508, 8701.475, 8871.978), stdev = 103.765
  CI (99.9%): [8611.369, 8791.580] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 70.67% complete, ETA 00:21:05
# Fork: 1 of 2
# Warmup Iteration   1: 37.991 ns/op
# Warmup Iteration   2: 67.558 ns/op
# Warmup Iteration   3: 35.679 ns/op
Iteration   1: 35.682 ns/op
Iteration   2: 35.688 ns/op
Iteration   3: 35.629 ns/op
Iteration   4: 35.711 ns/op
Iteration   5: 35.648 ns/op
Iteration   6: 36.147 ns/op
Iteration   7: 35.702 ns/op
Iteration   8: 34.468 ns/op
Iteration   9: 35.716 ns/op
Iteration  10: 35.718 ns/op

# Run progress: 70.72% complete, ETA 00:21:03
# Fork: 2 of 2
# Warmup Iteration   1: 38.572 ns/op
# Warmup Iteration   2: 66.614 ns/op
# Warmup Iteration   3: 35.725 ns/op
Iteration   1: 35.723 ns/op
Iteration   2: 35.664 ns/op
Iteration   3: 35.726 ns/op
Iteration   4: 35.682 ns/op
Iteration   5: 35.671 ns/op
Iteration   6: 36.161 ns/op
Iteration   7: 35.712 ns/op
Iteration   8: 34.441 ns/op
Iteration   9: 35.666 ns/op
Iteration  10: 35.668 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.611 ±(99.9%) 0.366 ns/op [Average]
  (min, avg, max) = (34.441, 35.611, 36.161), stdev = 0.421
  CI (99.9%): [35.245, 35.977] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 70.78% complete, ETA 00:21:00
# Fork: 1 of 2
# Warmup Iteration   1: 7889.003 ns/op
# Warmup Iteration   2: 6057.801 ns/op
# Warmup Iteration   3: 5268.416 ns/op
Iteration   1: 5252.732 ns/op
Iteration   2: 5252.798 ns/op
Iteration   3: 5273.117 ns/op
Iteration   4: 5253.541 ns/op
Iteration   5: 5273.578 ns/op
Iteration   6: 5251.558 ns/op
Iteration   7: 5256.510 ns/op
Iteration   8: 5253.310 ns/op
Iteration   9: 5251.804 ns/op
Iteration  10: 5264.804 ns/op

# Run progress: 70.83% complete, ETA 00:20:58
# Fork: 2 of 2
# Warmup Iteration   1: 8320.170 ns/op
# Warmup Iteration   2: 5787.230 ns/op
# Warmup Iteration   3: 5114.851 ns/op
Iteration   1: 5125.459 ns/op
Iteration   2: 5116.016 ns/op
Iteration   3: 5176.071 ns/op
Iteration   4: 5120.664 ns/op
Iteration   5: 5133.928 ns/op
Iteration   6: 5112.658 ns/op
Iteration   7: 5136.423 ns/op
Iteration   8: 5125.366 ns/op
Iteration   9: 5126.577 ns/op
Iteration  10: 5118.338 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5193.763 ±(99.9%) 58.806 ns/op [Average]
  (min, avg, max) = (5112.658, 5193.763, 5273.578), stdev = 67.721
  CI (99.9%): [5134.957, 5252.568] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 70.89% complete, ETA 00:20:56
# Fork: 1 of 2
# Warmup Iteration   1: 35905.377 ns/op
# Warmup Iteration   2: 8432.985 ns/op
# Warmup Iteration   3: 7603.051 ns/op
Iteration   1: 7272.256 ns/op
Iteration   2: 7285.507 ns/op
Iteration   3: 7268.221 ns/op
Iteration   4: 7259.791 ns/op
Iteration   5: 7258.621 ns/op
Iteration   6: 7280.247 ns/op
Iteration   7: 7258.544 ns/op
Iteration   8: 7280.639 ns/op
Iteration   9: 7255.049 ns/op
Iteration  10: 7267.988 ns/op

# Run progress: 70.94% complete, ETA 00:20:53
# Fork: 2 of 2
# Warmup Iteration   1: 20683.271 ns/op
# Warmup Iteration   2: 8257.207 ns/op
# Warmup Iteration   3: 7235.031 ns/op
Iteration   1: 7240.568 ns/op
Iteration   2: 7217.899 ns/op
Iteration   3: 7276.277 ns/op
Iteration   4: 7277.183 ns/op
Iteration   5: 7241.885 ns/op
Iteration   6: 7215.512 ns/op
Iteration   7: 7250.829 ns/op
Iteration   8: 7292.438 ns/op
Iteration   9: 7214.826 ns/op
Iteration  10: 7243.444 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7257.886 ±(99.9%) 20.096 ns/op [Average]
  (min, avg, max) = (7214.826, 7257.886, 7292.438), stdev = 23.143
  CI (99.9%): [7237.790, 7277.982] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 71.00% complete, ETA 00:20:51
# Fork: 1 of 2
# Warmup Iteration   1: 19185.400 ns/op
# Warmup Iteration   2: 8181.164 ns/op
# Warmup Iteration   3: 7070.597 ns/op
Iteration   1: 7105.930 ns/op
Iteration   2: 7095.419 ns/op
Iteration   3: 7080.491 ns/op
Iteration   4: 7069.081 ns/op
Iteration   5: 7113.317 ns/op
Iteration   6: 7110.087 ns/op
Iteration   7: 7080.089 ns/op
Iteration   8: 7079.308 ns/op
Iteration   9: 7059.162 ns/op
Iteration  10: 7068.472 ns/op

# Run progress: 71.06% complete, ETA 00:20:48
# Fork: 2 of 2
# Warmup Iteration   1: 25345.900 ns/op
# Warmup Iteration   2: 8058.927 ns/op
# Warmup Iteration   3: 7466.011 ns/op
Iteration   1: 7135.205 ns/op
Iteration   2: 7124.740 ns/op
Iteration   3: 7152.198 ns/op
Iteration   4: 7126.456 ns/op
Iteration   5: 7112.755 ns/op
Iteration   6: 7177.315 ns/op
Iteration   7: 7121.121 ns/op
Iteration   8: 7101.175 ns/op
Iteration   9: 7130.366 ns/op
Iteration  10: 7097.043 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7106.987 ±(99.9%) 25.957 ns/op [Average]
  (min, avg, max) = (7059.162, 7106.987, 7177.315), stdev = 29.892
  CI (99.9%): [7081.030, 7132.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 71.11% complete, ETA 00:20:46
# Fork: 1 of 2
# Warmup Iteration   1: 11662.848 ns/op
# Warmup Iteration   2: 6345.370 ns/op
# Warmup Iteration   3: 5713.622 ns/op
Iteration   1: 5667.765 ns/op
Iteration   2: 5641.426 ns/op
Iteration   3: 5604.858 ns/op
Iteration   4: 5670.668 ns/op
Iteration   5: 5600.849 ns/op
Iteration   6: 5643.458 ns/op
Iteration   7: 5590.872 ns/op
Iteration   8: 5698.395 ns/op
Iteration   9: 5612.830 ns/op
Iteration  10: 5619.738 ns/op

# Run progress: 71.17% complete, ETA 00:20:44
# Fork: 2 of 2
# Warmup Iteration   1: 9318.596 ns/op
# Warmup Iteration   2: 6318.380 ns/op
# Warmup Iteration   3: 5629.340 ns/op
Iteration   1: 5589.739 ns/op
Iteration   2: 5597.355 ns/op
Iteration   3: 5614.189 ns/op
Iteration   4: 5574.844 ns/op
Iteration   5: 5595.175 ns/op
Iteration   6: 5621.578 ns/op
Iteration   7: 5590.861 ns/op
Iteration   8: 5585.510 ns/op
Iteration   9: 5638.758 ns/op
Iteration  10: 5620.712 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5618.979 ±(99.9%) 28.166 ns/op [Average]
  (min, avg, max) = (5574.844, 5618.979, 5698.395), stdev = 32.436
  CI (99.9%): [5590.813, 5647.145] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 71.22% complete, ETA 00:20:41
# Fork: 1 of 2
# Warmup Iteration   1: 10693.476 ns/op
# Warmup Iteration   2: 7901.774 ns/op
# Warmup Iteration   3: 6756.653 ns/op
Iteration   1: 6765.995 ns/op
Iteration   2: 6759.292 ns/op
Iteration   3: 6786.447 ns/op
Iteration   4: 6773.500 ns/op
Iteration   5: 6785.851 ns/op
Iteration   6: 6780.361 ns/op
Iteration   7: 6769.528 ns/op
Iteration   8: 6791.538 ns/op
Iteration   9: 6771.139 ns/op
Iteration  10: 6771.166 ns/op

# Run progress: 71.28% complete, ETA 00:20:39
# Fork: 2 of 2
# Warmup Iteration   1: 10029.422 ns/op
# Warmup Iteration   2: 7695.962 ns/op
# Warmup Iteration   3: 6789.348 ns/op
Iteration   1: 6775.387 ns/op
Iteration   2: 6773.337 ns/op
Iteration   3: 6785.930 ns/op
Iteration   4: 6781.594 ns/op
Iteration   5: 6777.789 ns/op
Iteration   6: 6781.157 ns/op
Iteration   7: 6782.339 ns/op
Iteration   8: 6780.658 ns/op
Iteration   9: 6784.042 ns/op
Iteration  10: 6770.110 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6777.358 ±(99.9%) 6.994 ns/op [Average]
  (min, avg, max) = (6759.292, 6777.358, 6791.538), stdev = 8.054
  CI (99.9%): [6770.364, 6784.352] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 71.33% complete, ETA 00:20:36
# Fork: 1 of 2
# Warmup Iteration   1: 38.358 ns/op
# Warmup Iteration   2: 66.589 ns/op
# Warmup Iteration   3: 35.607 ns/op
Iteration   1: 35.662 ns/op
Iteration   2: 35.652 ns/op
Iteration   3: 35.679 ns/op
Iteration   4: 35.656 ns/op
Iteration   5: 35.712 ns/op
Iteration   6: 36.160 ns/op
Iteration   7: 35.706 ns/op
Iteration   8: 34.479 ns/op
Iteration   9: 35.706 ns/op
Iteration  10: 35.654 ns/op

# Run progress: 71.39% complete, ETA 00:20:34
# Fork: 2 of 2
# Warmup Iteration   1: 37.923 ns/op
# Warmup Iteration   2: 66.637 ns/op
# Warmup Iteration   3: 35.669 ns/op
Iteration   1: 35.747 ns/op
Iteration   2: 35.703 ns/op
Iteration   3: 35.689 ns/op
Iteration   4: 35.680 ns/op
Iteration   5: 35.707 ns/op
Iteration   6: 36.129 ns/op
Iteration   7: 35.662 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.639 ns/op
Iteration  10: 35.713 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.613 ±(99.9%) 0.354 ns/op [Average]
  (min, avg, max) = (34.479, 35.613, 36.160), stdev = 0.408
  CI (99.9%): [35.259, 35.967] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 71.44% complete, ETA 00:20:32
# Fork: 1 of 2
# Warmup Iteration   1: 9932.981 ns/op
# Warmup Iteration   2: 17870.066 ns/op
# Warmup Iteration   3: 5410.936 ns/op
Iteration   1: 5125.161 ns/op
Iteration   2: 5594.761 ns/op
Iteration   3: 295612.418 ns/op
Iteration   4: 5174.633 ns/op
Iteration   5: 4840.698 ns/op
Iteration   6: 5483.536 ns/op
Iteration   7: 5124.790 ns/op
Iteration   8: 5255.869 ns/op
Iteration   9: 4849.888 ns/op
Iteration  10: 5490.751 ns/op

# Run progress: 71.50% complete, ETA 00:20:29
# Fork: 2 of 2
# Warmup Iteration   1: 10137.423 ns/op
# Warmup Iteration   2: 12936.434 ns/op
# Warmup Iteration   3: 5550.622 ns/op
Iteration   1: 5178.011 ns/op
Iteration   2: 5907.923 ns/op
Iteration   3: 27481.305 ns/op
Iteration   4: 5122.701 ns/op
Iteration   5: 4882.926 ns/op
Iteration   6: 5458.762 ns/op
Iteration   7: 5067.964 ns/op
Iteration   8: 5368.959 ns/op
Iteration   9: 4808.738 ns/op
Iteration  10: 5492.709 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  20866.125 ±(99.9%) 56321.304 ns/op [Average]
  (min, avg, max) = (4808.738, 20866.125, 295612.418), stdev = 64859.697
  CI (99.9%): [≈ 0, 77187.429] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 71.56% complete, ETA 00:20:27
# Fork: 1 of 2
# Warmup Iteration   1: 15961.416 ns/op
# Warmup Iteration   2: 16308.837 ns/op
# Warmup Iteration   3: 10828.666 ns/op
Iteration   1: 6138.773 ns/op
Iteration   2: 9015.388 ns/op
Iteration   3: 6012.752 ns/op
Iteration   4: 6291.556 ns/op
Iteration   5: 6692.973 ns/op
Iteration   6: 6086.470 ns/op
Iteration   7: 6062.770 ns/op
Iteration   8: 6108.535 ns/op
Iteration   9: 5960.329 ns/op
Iteration  10: 6408.875 ns/op

# Run progress: 71.61% complete, ETA 00:20:24
# Fork: 2 of 2
# Warmup Iteration   1: 16457.405 ns/op
# Warmup Iteration   2: 21320.935 ns/op
# Warmup Iteration   3: 11280.680 ns/op
Iteration   1: 6240.308 ns/op
Iteration   2: 14154.051 ns/op
Iteration   3: 6044.800 ns/op
Iteration   4: 6366.614 ns/op
Iteration   5: 6695.243 ns/op
Iteration   6: 6039.629 ns/op
Iteration   7: 6064.685 ns/op
Iteration   8: 6104.445 ns/op
Iteration   9: 5931.778 ns/op
Iteration  10: 6346.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6738.302 ±(99.9%) 1621.789 ns/op [Average]
  (min, avg, max) = (5931.778, 6738.302, 14154.051), stdev = 1867.654
  CI (99.9%): [5116.513, 8360.090] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 71.67% complete, ETA 00:20:22
# Fork: 1 of 2
# Warmup Iteration   1: 17395.027 ns/op
# Warmup Iteration   2: 21056.375 ns/op
# Warmup Iteration   3: 7559.329 ns/op
Iteration   1: 6123.992 ns/op
Iteration   2: 5541.440 ns/op
Iteration   3: 5811.718 ns/op
Iteration   4: 6338.176 ns/op
Iteration   5: 6580.099 ns/op
Iteration   6: 5585.385 ns/op
Iteration   7: 5876.849 ns/op
Iteration   8: 5845.371 ns/op
Iteration   9: 5638.433 ns/op
Iteration  10: 6183.160 ns/op

# Run progress: 71.72% complete, ETA 00:20:20
# Fork: 2 of 2
# Warmup Iteration   1: 15774.958 ns/op
# Warmup Iteration   2: 14532.998 ns/op
# Warmup Iteration   3: 7910.654 ns/op
Iteration   1: 6218.053 ns/op
Iteration   2: 5572.078 ns/op
Iteration   3: 5861.833 ns/op
Iteration   4: 6366.961 ns/op
Iteration   5: 6482.549 ns/op
Iteration   6: 5765.938 ns/op
Iteration   7: 5920.297 ns/op
Iteration   8: 5853.643 ns/op
Iteration   9: 5691.793 ns/op
Iteration  10: 6153.390 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5970.558 ±(99.9%) 273.748 ns/op [Average]
  (min, avg, max) = (5541.440, 5970.558, 6580.099), stdev = 315.248
  CI (99.9%): [5696.810, 6244.306] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 71.78% complete, ETA 00:20:17
# Fork: 1 of 2
# Warmup Iteration   1: 9499.934 ns/op
# Warmup Iteration   2: 26082.643 ns/op
# Warmup Iteration   3: 8242.832 ns/op
Iteration   1: 6887.150 ns/op
Iteration   2: 11864.450 ns/op
Iteration   3: 6851.373 ns/op
Iteration   4: 6918.859 ns/op
Iteration   5: 7583.221 ns/op
Iteration   6: 7173.020 ns/op
Iteration   7: 6238.110 ns/op
Iteration   8: 6834.840 ns/op
Iteration   9: 6636.433 ns/op
Iteration  10: 6410.381 ns/op

# Run progress: 71.83% complete, ETA 00:20:15
# Fork: 2 of 2
# Warmup Iteration   1: 9783.861 ns/op
# Warmup Iteration   2: 23149.979 ns/op
# Warmup Iteration   3: 8160.108 ns/op
Iteration   1: 6896.788 ns/op
Iteration   2: 15423.721 ns/op
Iteration   3: 6923.933 ns/op
Iteration   4: 6881.168 ns/op
Iteration   5: 7575.349 ns/op
Iteration   6: 7202.716 ns/op
Iteration   7: 6153.637 ns/op
Iteration   8: 6748.878 ns/op
Iteration   9: 6735.741 ns/op
Iteration  10: 6418.433 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7517.910 ±(99.9%) 1914.394 ns/op [Average]
  (min, avg, max) = (6153.637, 7517.910, 15423.721), stdev = 2204.619
  CI (99.9%): [5603.516, 9432.304] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 71.89% complete, ETA 00:20:12
# Fork: 1 of 2
# Warmup Iteration   1: 14415.161 ns/op
# Warmup Iteration   2: 11469.625 ns/op
# Warmup Iteration   3: 8012.347 ns/op
Iteration   1: 8022.978 ns/op
Iteration   2: 8019.029 ns/op
Iteration   3: 8025.404 ns/op
Iteration   4: 8037.282 ns/op
Iteration   5: 8025.487 ns/op
Iteration   6: 8032.543 ns/op
Iteration   7: 8039.445 ns/op
Iteration   8: 8028.110 ns/op
Iteration   9: 8029.663 ns/op
Iteration  10: 8011.774 ns/op

# Run progress: 71.94% complete, ETA 00:20:10
# Fork: 2 of 2
# Warmup Iteration   1: 11986.173 ns/op
# Warmup Iteration   2: 10289.604 ns/op
# Warmup Iteration   3: 7773.480 ns/op
Iteration   1: 7728.082 ns/op
Iteration   2: 7729.491 ns/op
Iteration   3: 7763.847 ns/op
Iteration   4: 7722.156 ns/op
Iteration   5: 7779.414 ns/op
Iteration   6: 7730.680 ns/op
Iteration   7: 7784.957 ns/op
Iteration   8: 7737.861 ns/op
Iteration   9: 7763.437 ns/op
Iteration  10: 7738.338 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7887.499 ±(99.9%) 125.288 ns/op [Average]
  (min, avg, max) = (7722.156, 7887.499, 8039.445), stdev = 144.282
  CI (99.9%): [7762.211, 8012.787] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 72.00% complete, ETA 00:20:08
# Fork: 1 of 2
# Warmup Iteration   1: 37.955 ns/op
# Warmup Iteration   2: 66.534 ns/op
# Warmup Iteration   3: 35.711 ns/op
Iteration   1: 35.676 ns/op
Iteration   2: 35.685 ns/op
Iteration   3: 35.649 ns/op
Iteration   4: 35.619 ns/op
Iteration   5: 35.637 ns/op
Iteration   6: 36.150 ns/op
Iteration   7: 35.771 ns/op
Iteration   8: 34.536 ns/op
Iteration   9: 35.643 ns/op
Iteration  10: 35.676 ns/op

# Run progress: 72.06% complete, ETA 00:20:05
# Fork: 2 of 2
# Warmup Iteration   1: 38.769 ns/op
# Warmup Iteration   2: 66.841 ns/op
# Warmup Iteration   3: 35.648 ns/op
Iteration   1: 35.598 ns/op
Iteration   2: 35.633 ns/op
Iteration   3: 35.673 ns/op
Iteration   4: 35.637 ns/op
Iteration   5: 35.674 ns/op
Iteration   6: 36.165 ns/op
Iteration   7: 35.667 ns/op
Iteration   8: 34.516 ns/op
Iteration   9: 35.682 ns/op
Iteration  10: 35.699 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.599 ±(99.9%) 0.346 ns/op [Average]
  (min, avg, max) = (34.516, 35.599, 36.165), stdev = 0.398
  CI (99.9%): [35.253, 35.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 72.11% complete, ETA 00:20:03
# Fork: 1 of 2
# Warmup Iteration   1: 310.073 ns/op
# Warmup Iteration   2: 281.165 ns/op
# Warmup Iteration   3: 237.858 ns/op
Iteration   1: 238.064 ns/op
Iteration   2: 237.958 ns/op
Iteration   3: 237.770 ns/op
Iteration   4: 235.563 ns/op
Iteration   5: 235.179 ns/op
Iteration   6: 235.468 ns/op
Iteration   7: 235.240 ns/op
Iteration   8: 236.984 ns/op
Iteration   9: 235.213 ns/op
Iteration  10: 235.276 ns/op

# Run progress: 72.17% complete, ETA 00:20:00
# Fork: 2 of 2
# Warmup Iteration   1: 291.405 ns/op
# Warmup Iteration   2: 284.250 ns/op
# Warmup Iteration   3: 239.099 ns/op
Iteration   1: 239.266 ns/op
Iteration   2: 239.232 ns/op
Iteration   3: 239.783 ns/op
Iteration   4: 234.867 ns/op
Iteration   5: 235.774 ns/op
Iteration   6: 235.141 ns/op
Iteration   7: 236.249 ns/op
Iteration   8: 236.137 ns/op
Iteration   9: 235.390 ns/op
Iteration  10: 235.277 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  236.492 ±(99.9%) 1.390 ns/op [Average]
  (min, avg, max) = (234.867, 236.492, 239.783), stdev = 1.601
  CI (99.9%): [235.101, 237.882] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 72.22% complete, ETA 00:19:58
# Fork: 1 of 2
# Warmup Iteration   1: 552.547 ns/op
# Warmup Iteration   2: 492.914 ns/op
# Warmup Iteration   3: 423.861 ns/op
Iteration   1: 424.274 ns/op
Iteration   2: 423.951 ns/op
Iteration   3: 424.709 ns/op
Iteration   4: 423.290 ns/op
Iteration   5: 426.837 ns/op
Iteration   6: 423.743 ns/op
Iteration   7: 424.094 ns/op
Iteration   8: 426.228 ns/op
Iteration   9: 423.073 ns/op
Iteration  10: 423.195 ns/op

# Run progress: 72.28% complete, ETA 00:19:56
# Fork: 2 of 2
# Warmup Iteration   1: 799.158 ns/op
# Warmup Iteration   2: 513.503 ns/op
# Warmup Iteration   3: 449.804 ns/op
Iteration   1: 450.054 ns/op
Iteration   2: 449.853 ns/op
Iteration   3: 450.227 ns/op
Iteration   4: 449.789 ns/op
Iteration   5: 449.965 ns/op
Iteration   6: 450.783 ns/op
Iteration   7: 450.329 ns/op
Iteration   8: 452.395 ns/op
Iteration   9: 449.928 ns/op
Iteration  10: 449.813 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  437.326 ±(99.9%) 11.605 ns/op [Average]
  (min, avg, max) = (423.073, 437.326, 452.395), stdev = 13.364
  CI (99.9%): [425.721, 448.932] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 72.33% complete, ETA 00:19:53
# Fork: 1 of 2
# Warmup Iteration   1: 814.849 ns/op
# Warmup Iteration   2: 591.914 ns/op
# Warmup Iteration   3: 510.527 ns/op
Iteration   1: 510.566 ns/op
Iteration   2: 510.542 ns/op
Iteration   3: 510.364 ns/op
Iteration   4: 510.461 ns/op
Iteration   5: 510.328 ns/op
Iteration   6: 511.213 ns/op
Iteration   7: 510.458 ns/op
Iteration   8: 513.009 ns/op
Iteration   9: 510.642 ns/op
Iteration  10: 510.460 ns/op

# Run progress: 72.39% complete, ETA 00:19:51
# Fork: 2 of 2
# Warmup Iteration   1: 928.552 ns/op
# Warmup Iteration   2: 584.753 ns/op
# Warmup Iteration   3: 514.244 ns/op
Iteration   1: 514.486 ns/op
Iteration   2: 514.558 ns/op
Iteration   3: 514.440 ns/op
Iteration   4: 514.351 ns/op
Iteration   5: 514.554 ns/op
Iteration   6: 515.044 ns/op
Iteration   7: 514.283 ns/op
Iteration   8: 517.341 ns/op
Iteration   9: 514.342 ns/op
Iteration  10: 514.595 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  512.802 ±(99.9%) 1.925 ns/op [Average]
  (min, avg, max) = (510.328, 512.802, 517.341), stdev = 2.216
  CI (99.9%): [510.877, 514.726] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 72.44% complete, ETA 00:19:48
# Fork: 1 of 2
# Warmup Iteration   1: 618.019 ns/op
# Warmup Iteration   2: 523.410 ns/op
# Warmup Iteration   3: 449.048 ns/op
Iteration   1: 449.270 ns/op
Iteration   2: 449.589 ns/op
Iteration   3: 449.389 ns/op
Iteration   4: 449.487 ns/op
Iteration   5: 449.155 ns/op
Iteration   6: 449.504 ns/op
Iteration   7: 448.981 ns/op
Iteration   8: 451.519 ns/op
Iteration   9: 448.979 ns/op
Iteration  10: 449.330 ns/op

# Run progress: 72.50% complete, ETA 00:19:46
# Fork: 2 of 2
# Warmup Iteration   1: 633.697 ns/op
# Warmup Iteration   2: 538.898 ns/op
# Warmup Iteration   3: 448.968 ns/op
Iteration   1: 449.580 ns/op
Iteration   2: 449.056 ns/op
Iteration   3: 448.775 ns/op
Iteration   4: 449.069 ns/op
Iteration   5: 448.789 ns/op
Iteration   6: 449.481 ns/op
Iteration   7: 449.038 ns/op
Iteration   8: 452.297 ns/op
Iteration   9: 449.178 ns/op
Iteration  10: 449.149 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  449.481 ±(99.9%) 0.759 ns/op [Average]
  (min, avg, max) = (448.775, 449.481, 452.297), stdev = 0.874
  CI (99.9%): [448.722, 450.240] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 72.56% complete, ETA 00:19:44
# Fork: 1 of 2
# Warmup Iteration   1: 480.554 ns/op
# Warmup Iteration   2: 453.769 ns/op
# Warmup Iteration   3: 416.067 ns/op
Iteration   1: 416.080 ns/op
Iteration   2: 416.002 ns/op
Iteration   3: 415.959 ns/op
Iteration   4: 420.318 ns/op
Iteration   5: 420.552 ns/op
Iteration   6: 420.690 ns/op
Iteration   7: 420.299 ns/op
Iteration   8: 421.005 ns/op
Iteration   9: 420.500 ns/op
Iteration  10: 420.244 ns/op

# Run progress: 72.61% complete, ETA 00:19:41
# Fork: 2 of 2
# Warmup Iteration   1: 358.143 ns/op
# Warmup Iteration   2: 345.421 ns/op
# Warmup Iteration   3: 323.098 ns/op
Iteration   1: 324.138 ns/op
Iteration   2: 323.178 ns/op
Iteration   3: 323.257 ns/op
Iteration   4: 327.144 ns/op
Iteration   5: 326.746 ns/op
Iteration   6: 327.440 ns/op
Iteration   7: 326.704 ns/op
Iteration   8: 326.966 ns/op
Iteration   9: 327.278 ns/op
Iteration  10: 326.853 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  372.568 ±(99.9%) 41.547 ns/op [Average]
  (min, avg, max) = (323.178, 372.568, 421.005), stdev = 47.846
  CI (99.9%): [331.020, 414.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 72.67% complete, ETA 00:19:39
# Fork: 1 of 2
# Warmup Iteration   1: 38.509 ns/op
# Warmup Iteration   2: 66.872 ns/op
# Warmup Iteration   3: 35.654 ns/op
Iteration   1: 35.665 ns/op
Iteration   2: 35.625 ns/op
Iteration   3: 35.634 ns/op
Iteration   4: 35.680 ns/op
Iteration   5: 35.693 ns/op
Iteration   6: 36.179 ns/op
Iteration   7: 35.666 ns/op
Iteration   8: 34.505 ns/op
Iteration   9: 35.674 ns/op
Iteration  10: 35.722 ns/op

# Run progress: 72.72% complete, ETA 00:19:36
# Fork: 2 of 2
# Warmup Iteration   1: 38.800 ns/op
# Warmup Iteration   2: 73.357 ns/op
# Warmup Iteration   3: 35.681 ns/op
Iteration   1: 35.698 ns/op
Iteration   2: 35.662 ns/op
Iteration   3: 35.675 ns/op
Iteration   4: 35.635 ns/op
Iteration   5: 35.679 ns/op
Iteration   6: 36.112 ns/op
Iteration   7: 35.713 ns/op
Iteration   8: 34.432 ns/op
Iteration   9: 35.674 ns/op
Iteration  10: 35.649 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.599 ±(99.9%) 0.359 ns/op [Average]
  (min, avg, max) = (34.432, 35.599, 36.179), stdev = 0.414
  CI (99.9%): [35.239, 35.958] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 72.78% complete, ETA 00:19:34
# Fork: 1 of 2
# Warmup Iteration   1: 8057.856 ns/op
# Warmup Iteration   2: 6124.552 ns/op
# Warmup Iteration   3: 4142.467 ns/op
Iteration   1: 4264.678 ns/op
Iteration   2: 5190.957 ns/op
Iteration   3: 5220.669 ns/op
Iteration   4: 3417.269 ns/op
Iteration   5: 4105.852 ns/op
Iteration   6: 5503.568 ns/op
Iteration   7: 5177.235 ns/op
Iteration   8: 5278.803 ns/op
Iteration   9: 5401.909 ns/op
Iteration  10: 4145.599 ns/op

# Run progress: 72.83% complete, ETA 00:19:32
# Fork: 2 of 2
# Warmup Iteration   1: 6782.272 ns/op
# Warmup Iteration   2: 5654.921 ns/op
# Warmup Iteration   3: 5557.924 ns/op
Iteration   1: 4501.914 ns/op
Iteration   2: 5341.851 ns/op
Iteration   3: 5522.746 ns/op
Iteration   4: 3325.262 ns/op
Iteration   5: 4222.150 ns/op
Iteration   6: 5748.880 ns/op
Iteration   7: 5306.072 ns/op
Iteration   8: 5456.207 ns/op
Iteration   9: 5641.337 ns/op
Iteration  10: 4215.061 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4849.401 ±(99.9%) 650.707 ns/op [Average]
  (min, avg, max) = (3325.262, 4849.401, 5748.880), stdev = 749.355
  CI (99.9%): [4198.694, 5500.108] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 72.89% complete, ETA 00:19:29
# Fork: 1 of 2
# Warmup Iteration   1: 10451.960 ns/op
# Warmup Iteration   2: 6805.178 ns/op
# Warmup Iteration   3: 4522.672 ns/op
Iteration   1: 3674.592 ns/op
Iteration   2: 3617.203 ns/op
Iteration   3: 5408.480 ns/op
Iteration   4: 3491.605 ns/op
Iteration   5: 3306.867 ns/op
Iteration   6: 3846.095 ns/op
Iteration   7: 3300.201 ns/op
Iteration   8: 4269.341 ns/op
Iteration   9: 3691.903 ns/op
Iteration  10: 3569.938 ns/op

# Run progress: 72.94% complete, ETA 00:19:27
# Fork: 2 of 2
# Warmup Iteration   1: 10023.506 ns/op
# Warmup Iteration   2: 7958.350 ns/op
# Warmup Iteration   3: 4260.921 ns/op
Iteration   1: 3722.191 ns/op
Iteration   2: 3624.761 ns/op
Iteration   3: 5347.666 ns/op
Iteration   4: 3527.309 ns/op
Iteration   5: 3321.934 ns/op
Iteration   6: 3868.778 ns/op
Iteration   7: 3342.498 ns/op
Iteration   8: 4293.680 ns/op
Iteration   9: 3689.894 ns/op
Iteration  10: 3577.977 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3824.646 ±(99.9%) 517.706 ns/op [Average]
  (min, avg, max) = (3300.201, 3824.646, 5408.480), stdev = 596.191
  CI (99.9%): [3306.940, 4342.351] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 73.00% complete, ETA 00:19:25
# Fork: 1 of 2
# Warmup Iteration   1: 9987.810 ns/op
# Warmup Iteration   2: 8071.643 ns/op
# Warmup Iteration   3: 5155.989 ns/op
Iteration   1: 3335.355 ns/op
Iteration   2: 3443.604 ns/op
Iteration   3: 4703.425 ns/op
Iteration   4: 2999.702 ns/op
Iteration   5: 2894.452 ns/op
Iteration   6: 3342.160 ns/op
Iteration   7: 2976.332 ns/op
Iteration   8: 3757.701 ns/op
Iteration   9: 3442.922 ns/op
Iteration  10: 3318.823 ns/op

# Run progress: 73.06% complete, ETA 00:19:22
# Fork: 2 of 2
# Warmup Iteration   1: 11348.420 ns/op
# Warmup Iteration   2: 6944.030 ns/op
# Warmup Iteration   3: 5967.896 ns/op
Iteration   1: 3376.657 ns/op
Iteration   2: 3531.760 ns/op
Iteration   3: 4811.730 ns/op
Iteration   4: 3064.868 ns/op
Iteration   5: 2942.458 ns/op
Iteration   6: 3395.685 ns/op
Iteration   7: 2987.977 ns/op
Iteration   8: 3756.231 ns/op
Iteration   9: 3482.791 ns/op
Iteration  10: 3344.839 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3445.473 ±(99.9%) 447.138 ns/op [Average]
  (min, avg, max) = (2894.452, 3445.473, 4811.730), stdev = 514.925
  CI (99.9%): [2998.335, 3892.612] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 73.11% complete, ETA 00:19:20
# Fork: 1 of 2
# Warmup Iteration   1: 7606.630 ns/op
# Warmup Iteration   2: 5427.825 ns/op
# Warmup Iteration   3: 3523.718 ns/op
Iteration   1: 4500.785 ns/op
Iteration   2: 2845.388 ns/op
Iteration   3: 4183.312 ns/op
Iteration   4: 2802.402 ns/op
Iteration   5: 2688.289 ns/op
Iteration   6: 3378.170 ns/op
Iteration   7: 2686.219 ns/op
Iteration   8: 3445.187 ns/op
Iteration   9: 2874.048 ns/op
Iteration  10: 2676.620 ns/op

# Run progress: 73.17% complete, ETA 00:19:17
# Fork: 2 of 2
# Warmup Iteration   1: 5577.229 ns/op
# Warmup Iteration   2: 5806.967 ns/op
# Warmup Iteration   3: 3315.007 ns/op
Iteration   1: 4538.846 ns/op
Iteration   2: 2853.993 ns/op
Iteration   3: 3994.274 ns/op
Iteration   4: 2699.931 ns/op
Iteration   5: 2668.442 ns/op
Iteration   6: 3224.995 ns/op
Iteration   7: 2689.430 ns/op
Iteration   8: 3334.001 ns/op
Iteration   9: 2848.712 ns/op
Iteration  10: 2712.305 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3182.268 ±(99.9%) 551.021 ns/op [Average]
  (min, avg, max) = (2668.442, 3182.268, 4538.846), stdev = 634.557
  CI (99.9%): [2631.247, 3733.288] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 73.22% complete, ETA 00:19:15
# Fork: 1 of 2
# Warmup Iteration   1: 8693.710 ns/op
# Warmup Iteration   2: 7357.589 ns/op
# Warmup Iteration   3: 5795.656 ns/op
Iteration   1: 4566.940 ns/op
Iteration   2: 5495.027 ns/op
Iteration   3: 5615.846 ns/op
Iteration   4: 3594.525 ns/op
Iteration   5: 4366.281 ns/op
Iteration   6: 113082.234 ns/op
Iteration   7: 9050.443 ns/op
Iteration   8: 7046.848 ns/op
Iteration   9: 5537.631 ns/op
Iteration  10: 4249.127 ns/op

# Run progress: 73.28% complete, ETA 00:19:13
# Fork: 2 of 2
# Warmup Iteration   1: 8847.307 ns/op
# Warmup Iteration   2: 7353.815 ns/op
# Warmup Iteration   3: 7439.707 ns/op
Iteration   1: 4410.392 ns/op
Iteration   2: 5248.453 ns/op
Iteration   3: 5322.689 ns/op
Iteration   4: 3506.075 ns/op
Iteration   5: 4181.700 ns/op
Iteration   6: 188437.260 ns/op
Iteration   7: 9244.585 ns/op
Iteration   8: 7118.695 ns/op
Iteration   9: 5572.721 ns/op
Iteration  10: 4322.089 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  19998.478 ±(99.9%) 40280.395 ns/op [Average]
  (min, avg, max) = (3506.075, 19998.478, 188437.260), stdev = 46386.963
  CI (99.9%): [≈ 0, 60278.873] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 73.33% complete, ETA 00:19:10
# Fork: 1 of 2
# Warmup Iteration   1: 37.801 ns/op
# Warmup Iteration   2: 69.821 ns/op
# Warmup Iteration   3: 38.064 ns/op
Iteration   1: 37.959 ns/op
Iteration   2: 38.129 ns/op
Iteration   3: 37.881 ns/op
Iteration   4: 37.997 ns/op
Iteration   5: 38.154 ns/op
Iteration   6: 38.191 ns/op
Iteration   7: 38.055 ns/op
Iteration   8: 37.071 ns/op
Iteration   9: 38.061 ns/op
Iteration  10: 37.977 ns/op

# Run progress: 73.39% complete, ETA 00:19:08
# Fork: 2 of 2
# Warmup Iteration   1: 38.102 ns/op
# Warmup Iteration   2: 62.200 ns/op
# Warmup Iteration   3: 38.196 ns/op
Iteration   1: 38.214 ns/op
Iteration   2: 38.008 ns/op
Iteration   3: 38.186 ns/op
Iteration   4: 38.209 ns/op
Iteration   5: 38.147 ns/op
Iteration   6: 38.211 ns/op
Iteration   7: 38.221 ns/op
Iteration   8: 37.226 ns/op
Iteration   9: 38.100 ns/op
Iteration  10: 38.262 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.013 ±(99.9%) 0.273 ns/op [Average]
  (min, avg, max) = (37.071, 38.013, 38.262), stdev = 0.314
  CI (99.9%): [37.740, 38.286] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 73.44% complete, ETA 00:19:05
# Fork: 1 of 2
# Warmup Iteration   1: 284.083 ns/op
# Warmup Iteration   2: 273.032 ns/op
# Warmup Iteration   3: 240.729 ns/op
Iteration   1: 240.689 ns/op
Iteration   2: 241.102 ns/op
Iteration   3: 240.423 ns/op
Iteration   4: 241.191 ns/op
Iteration   5: 242.133 ns/op
Iteration   6: 240.825 ns/op
Iteration   7: 241.209 ns/op
Iteration   8: 254.773 ns/op
Iteration   9: 241.165 ns/op
Iteration  10: 241.535 ns/op

# Run progress: 73.50% complete, ETA 00:19:03
# Fork: 2 of 2
# Warmup Iteration   1: 286.551 ns/op
# Warmup Iteration   2: 285.537 ns/op
# Warmup Iteration   3: 241.302 ns/op
Iteration   1: 241.313 ns/op
Iteration   2: 241.841 ns/op
Iteration   3: 242.160 ns/op
Iteration   4: 241.582 ns/op
Iteration   5: 242.307 ns/op
Iteration   6: 241.838 ns/op
Iteration   7: 242.314 ns/op
Iteration   8: 251.213 ns/op
Iteration   9: 242.073 ns/op
Iteration  10: 242.251 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  242.697 ±(99.9%) 3.137 ns/op [Average]
  (min, avg, max) = (240.423, 242.697, 254.773), stdev = 3.612
  CI (99.9%): [239.560, 245.833] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 73.56% complete, ETA 00:19:01
# Fork: 1 of 2
# Warmup Iteration   1: 2062.205 ns/op
# Warmup Iteration   2: 1253.991 ns/op
# Warmup Iteration   3: 1053.413 ns/op
Iteration   1: 1048.831 ns/op
Iteration   2: 1051.880 ns/op
Iteration   3: 1049.338 ns/op
Iteration   4: 1051.086 ns/op
Iteration   5: 1047.978 ns/op
Iteration   6: 1050.716 ns/op
Iteration   7: 1055.558 ns/op
Iteration   8: 1051.161 ns/op
Iteration   9: 1048.470 ns/op
Iteration  10: 1047.404 ns/op

# Run progress: 73.61% complete, ETA 00:18:58
# Fork: 2 of 2
# Warmup Iteration   1: 1646.881 ns/op
# Warmup Iteration   2: 1241.152 ns/op
# Warmup Iteration   3: 1033.369 ns/op
Iteration   1: 1032.873 ns/op
Iteration   2: 1035.582 ns/op
Iteration   3: 1034.212 ns/op
Iteration   4: 1034.580 ns/op
Iteration   5: 1036.411 ns/op
Iteration   6: 1036.399 ns/op
Iteration   7: 1034.561 ns/op
Iteration   8: 1035.419 ns/op
Iteration   9: 1037.948 ns/op
Iteration  10: 1033.335 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1042.687 ±(99.9%) 6.943 ns/op [Average]
  (min, avg, max) = (1032.873, 1042.687, 1055.558), stdev = 7.996
  CI (99.9%): [1035.744, 1049.630] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 73.67% complete, ETA 00:18:56
# Fork: 1 of 2
# Warmup Iteration   1: 1598.043 ns/op
# Warmup Iteration   2: 1251.815 ns/op
# Warmup Iteration   3: 1053.344 ns/op
Iteration   1: 1055.830 ns/op
Iteration   2: 1053.209 ns/op
Iteration   3: 1052.828 ns/op
Iteration   4: 1054.242 ns/op
Iteration   5: 1056.677 ns/op
Iteration   6: 1054.226 ns/op
Iteration   7: 1053.287 ns/op
Iteration   8: 1056.146 ns/op
Iteration   9: 1057.789 ns/op
Iteration  10: 1054.203 ns/op

# Run progress: 73.72% complete, ETA 00:18:53
# Fork: 2 of 2
# Warmup Iteration   1: 1626.070 ns/op
# Warmup Iteration   2: 1251.148 ns/op
# Warmup Iteration   3: 1043.171 ns/op
Iteration   1: 1046.056 ns/op
Iteration   2: 1045.945 ns/op
Iteration   3: 1050.959 ns/op
Iteration   4: 1045.380 ns/op
Iteration   5: 1046.665 ns/op
Iteration   6: 1043.666 ns/op
Iteration   7: 1049.082 ns/op
Iteration   8: 1047.101 ns/op
Iteration   9: 1044.200 ns/op
Iteration  10: 1047.777 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1050.763 ±(99.9%) 3.991 ns/op [Average]
  (min, avg, max) = (1043.666, 1050.763, 1057.789), stdev = 4.596
  CI (99.9%): [1046.773, 1054.754] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 73.78% complete, ETA 00:18:51
# Fork: 1 of 2
# Warmup Iteration   1: 1563.064 ns/op
# Warmup Iteration   2: 1158.579 ns/op
# Warmup Iteration   3: 1010.374 ns/op
Iteration   1: 1011.589 ns/op
Iteration   2: 1011.111 ns/op
Iteration   3: 1010.691 ns/op
Iteration   4: 1011.364 ns/op
Iteration   5: 1011.310 ns/op
Iteration   6: 1011.549 ns/op
Iteration   7: 1010.646 ns/op
Iteration   8: 1010.910 ns/op
Iteration   9: 1010.628 ns/op
Iteration  10: 1011.301 ns/op

# Run progress: 73.83% complete, ETA 00:18:49
# Fork: 2 of 2
# Warmup Iteration   1: 1465.486 ns/op
# Warmup Iteration   2: 1163.118 ns/op
# Warmup Iteration   3: 1010.700 ns/op
Iteration   1: 1011.503 ns/op
Iteration   2: 1011.105 ns/op
Iteration   3: 1011.563 ns/op
Iteration   4: 1011.592 ns/op
Iteration   5: 1011.170 ns/op
Iteration   6: 1011.623 ns/op
Iteration   7: 1010.785 ns/op
Iteration   8: 1020.611 ns/op
Iteration   9: 1010.720 ns/op
Iteration  10: 1011.065 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1011.642 ±(99.9%) 1.858 ns/op [Average]
  (min, avg, max) = (1010.628, 1011.642, 1020.611), stdev = 2.139
  CI (99.9%): [1009.784, 1013.499] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 73.89% complete, ETA 00:18:46
# Fork: 1 of 2
# Warmup Iteration   1: 510.263 ns/op
# Warmup Iteration   2: 499.799 ns/op
# Warmup Iteration   3: 422.544 ns/op
Iteration   1: 422.005 ns/op
Iteration   2: 422.775 ns/op
Iteration   3: 422.268 ns/op
Iteration   4: 423.802 ns/op
Iteration   5: 422.965 ns/op
Iteration   6: 423.899 ns/op
Iteration   7: 423.610 ns/op
Iteration   8: 420.917 ns/op
Iteration   9: 423.852 ns/op
Iteration  10: 423.761 ns/op

# Run progress: 73.94% complete, ETA 00:18:44
# Fork: 2 of 2
# Warmup Iteration   1: 483.500 ns/op
# Warmup Iteration   2: 497.099 ns/op
# Warmup Iteration   3: 422.435 ns/op
Iteration   1: 422.823 ns/op
Iteration   2: 422.680 ns/op
Iteration   3: 422.693 ns/op
Iteration   4: 423.666 ns/op
Iteration   5: 423.685 ns/op
Iteration   6: 424.884 ns/op
Iteration   7: 423.428 ns/op
Iteration   8: 420.860 ns/op
Iteration   9: 423.648 ns/op
Iteration  10: 423.384 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  423.080 ±(99.9%) 0.867 ns/op [Average]
  (min, avg, max) = (420.860, 423.080, 424.884), stdev = 0.998
  CI (99.9%): [422.214, 423.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 74.00% complete, ETA 00:18:41
# Fork: 1 of 2
# Warmup Iteration   1: 37.826 ns/op
# Warmup Iteration   2: 62.615 ns/op
# Warmup Iteration   3: 37.961 ns/op
Iteration   1: 38.010 ns/op
Iteration   2: 38.076 ns/op
Iteration   3: 38.384 ns/op
Iteration   4: 38.151 ns/op
Iteration   5: 38.388 ns/op
Iteration   6: 38.034 ns/op
Iteration   7: 38.167 ns/op
Iteration   8: 37.050 ns/op
Iteration   9: 37.958 ns/op
Iteration  10: 38.010 ns/op

# Run progress: 74.06% complete, ETA 00:18:39
# Fork: 2 of 2
# Warmup Iteration   1: 37.759 ns/op
# Warmup Iteration   2: 62.712 ns/op
# Warmup Iteration   3: 38.200 ns/op
Iteration   1: 38.009 ns/op
Iteration   2: 38.163 ns/op
Iteration   3: 38.089 ns/op
Iteration   4: 37.995 ns/op
Iteration   5: 38.127 ns/op
Iteration   6: 38.076 ns/op
Iteration   7: 38.074 ns/op
Iteration   8: 37.157 ns/op
Iteration   9: 38.103 ns/op
Iteration  10: 38.258 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.014 ±(99.9%) 0.289 ns/op [Average]
  (min, avg, max) = (37.050, 38.014, 38.388), stdev = 0.333
  CI (99.9%): [37.725, 38.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 74.11% complete, ETA 00:18:37
# Fork: 1 of 2
# Warmup Iteration   1: 298.953 ns/op
# Warmup Iteration   2: 285.351 ns/op
# Warmup Iteration   3: 242.999 ns/op
Iteration   1: 243.078 ns/op
Iteration   2: 243.159 ns/op
Iteration   3: 243.080 ns/op
Iteration   4: 243.032 ns/op
Iteration   5: 242.334 ns/op
Iteration   6: 241.602 ns/op
Iteration   7: 242.227 ns/op
Iteration   8: 239.763 ns/op
Iteration   9: 243.372 ns/op
Iteration  10: 242.720 ns/op

# Run progress: 74.17% complete, ETA 00:18:34
# Fork: 2 of 2
# Warmup Iteration   1: 293.517 ns/op
# Warmup Iteration   2: 288.846 ns/op
# Warmup Iteration   3: 242.164 ns/op
Iteration   1: 242.697 ns/op
Iteration   2: 242.195 ns/op
Iteration   3: 242.956 ns/op
Iteration   4: 241.931 ns/op
Iteration   5: 241.901 ns/op
Iteration   6: 242.601 ns/op
Iteration   7: 242.618 ns/op
Iteration   8: 240.057 ns/op
Iteration   9: 241.932 ns/op
Iteration  10: 242.624 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  242.294 ±(99.9%) 0.824 ns/op [Average]
  (min, avg, max) = (239.763, 242.294, 243.372), stdev = 0.949
  CI (99.9%): [241.470, 243.118] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 74.22% complete, ETA 00:18:32
# Fork: 1 of 2
# Warmup Iteration   1: 1568.918 ns/op
# Warmup Iteration   2: 1250.269 ns/op
# Warmup Iteration   3: 1045.270 ns/op
Iteration   1: 1045.648 ns/op
Iteration   2: 1045.672 ns/op
Iteration   3: 1045.293 ns/op
Iteration   4: 1045.666 ns/op
Iteration   5: 1045.530 ns/op
Iteration   6: 1045.862 ns/op
Iteration   7: 1045.800 ns/op
Iteration   8: 1046.100 ns/op
Iteration   9: 1045.835 ns/op
Iteration  10: 1045.895 ns/op

# Run progress: 74.28% complete, ETA 00:18:29
# Fork: 2 of 2
# Warmup Iteration   1: 1597.595 ns/op
# Warmup Iteration   2: 1265.364 ns/op
# Warmup Iteration   3: 1046.276 ns/op
Iteration   1: 1046.691 ns/op
Iteration   2: 1046.532 ns/op
Iteration   3: 1046.560 ns/op
Iteration   4: 1046.817 ns/op
Iteration   5: 1046.738 ns/op
Iteration   6: 1046.721 ns/op
Iteration   7: 1046.655 ns/op
Iteration   8: 1047.562 ns/op
Iteration   9: 1047.422 ns/op
Iteration  10: 1046.807 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1046.290 ±(99.9%) 0.558 ns/op [Average]
  (min, avg, max) = (1045.293, 1046.290, 1047.562), stdev = 0.642
  CI (99.9%): [1045.733, 1046.848] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 74.33% complete, ETA 00:18:27
# Fork: 1 of 2
# Warmup Iteration   1: 1663.569 ns/op
# Warmup Iteration   2: 1218.033 ns/op
# Warmup Iteration   3: 1065.660 ns/op
Iteration   1: 1067.752 ns/op
Iteration   2: 1066.707 ns/op
Iteration   3: 1067.411 ns/op
Iteration   4: 1065.992 ns/op
Iteration   5: 1065.487 ns/op
Iteration   6: 1066.564 ns/op
Iteration   7: 1066.487 ns/op
Iteration   8: 1066.131 ns/op
Iteration   9: 1065.937 ns/op
Iteration  10: 1066.019 ns/op

# Run progress: 74.39% complete, ETA 00:18:25
# Fork: 2 of 2
# Warmup Iteration   1: 1700.154 ns/op
# Warmup Iteration   2: 1262.662 ns/op
# Warmup Iteration   3: 1066.789 ns/op
Iteration   1: 1069.296 ns/op
Iteration   2: 1066.273 ns/op
Iteration   3: 1068.287 ns/op
Iteration   4: 1068.358 ns/op
Iteration   5: 1066.169 ns/op
Iteration   6: 1066.644 ns/op
Iteration   7: 1068.136 ns/op
Iteration   8: 1066.141 ns/op
Iteration   9: 1069.056 ns/op
Iteration  10: 1069.092 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1067.097 ±(99.9%) 1.054 ns/op [Average]
  (min, avg, max) = (1065.487, 1067.097, 1069.296), stdev = 1.214
  CI (99.9%): [1066.043, 1068.151] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 74.44% complete, ETA 00:18:22
# Fork: 1 of 2
# Warmup Iteration   1: 1635.228 ns/op
# Warmup Iteration   2: 1194.194 ns/op
# Warmup Iteration   3: 1051.391 ns/op
Iteration   1: 1205.785 ns/op
Iteration   2: 1051.185 ns/op
Iteration   3: 1059.887 ns/op
Iteration   4: 1057.190 ns/op
Iteration   5: 1053.085 ns/op
Iteration   6: 1052.501 ns/op
Iteration   7: 1051.710 ns/op
Iteration   8: 1051.003 ns/op
Iteration   9: 1051.388 ns/op
Iteration  10: 1052.196 ns/op

# Run progress: 74.50% complete, ETA 00:18:20
# Fork: 2 of 2
# Warmup Iteration   1: 1877.082 ns/op
# Warmup Iteration   2: 1199.007 ns/op
# Warmup Iteration   3: 1052.345 ns/op
Iteration   1: 1073.308 ns/op
Iteration   2: 1052.219 ns/op
Iteration   3: 1060.192 ns/op
Iteration   4: 1065.652 ns/op
Iteration   5: 1052.714 ns/op
Iteration   6: 1067.580 ns/op
Iteration   7: 1065.195 ns/op
Iteration   8: 1055.328 ns/op
Iteration   9: 1064.551 ns/op
Iteration  10: 1054.453 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1064.856 ±(99.9%) 29.371 ns/op [Average]
  (min, avg, max) = (1051.003, 1064.856, 1205.785), stdev = 33.823
  CI (99.9%): [1035.485, 1094.227] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 74.56% complete, ETA 00:18:17
# Fork: 1 of 2
# Warmup Iteration   1: 522.153 ns/op
# Warmup Iteration   2: 535.529 ns/op
# Warmup Iteration   3: 454.225 ns/op
Iteration   1: 454.072 ns/op
Iteration   2: 453.878 ns/op
Iteration   3: 453.874 ns/op
Iteration   4: 455.340 ns/op
Iteration   5: 455.045 ns/op
Iteration   6: 455.551 ns/op
Iteration   7: 455.079 ns/op
Iteration   8: 452.384 ns/op
Iteration   9: 455.144 ns/op
Iteration  10: 455.223 ns/op

# Run progress: 74.61% complete, ETA 00:18:15
# Fork: 2 of 2
# Warmup Iteration   1: 550.708 ns/op
# Warmup Iteration   2: 521.723 ns/op
# Warmup Iteration   3: 454.473 ns/op
Iteration   1: 454.239 ns/op
Iteration   2: 454.660 ns/op
Iteration   3: 454.292 ns/op
Iteration   4: 455.017 ns/op
Iteration   5: 455.471 ns/op
Iteration   6: 455.607 ns/op
Iteration   7: 455.444 ns/op
Iteration   8: 452.610 ns/op
Iteration   9: 455.589 ns/op
Iteration  10: 455.497 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  454.701 ±(99.9%) 0.827 ns/op [Average]
  (min, avg, max) = (452.384, 454.701, 455.607), stdev = 0.952
  CI (99.9%): [453.874, 455.528] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 74.67% complete, ETA 00:18:13
# Fork: 1 of 2
# Warmup Iteration   1: 38.357 ns/op
# Warmup Iteration   2: 60.796 ns/op
# Warmup Iteration   3: 38.102 ns/op
Iteration   1: 38.040 ns/op
Iteration   2: 38.013 ns/op
Iteration   3: 38.123 ns/op
Iteration   4: 38.363 ns/op
Iteration   5: 38.288 ns/op
Iteration   6: 38.059 ns/op
Iteration   7: 38.054 ns/op
Iteration   8: 37.109 ns/op
Iteration   9: 37.922 ns/op
Iteration  10: 38.044 ns/op

# Run progress: 74.72% complete, ETA 00:18:10
# Fork: 2 of 2
# Warmup Iteration   1: 51.869 ns/op
# Warmup Iteration   2: 62.442 ns/op
# Warmup Iteration   3: 38.001 ns/op
Iteration   1: 37.995 ns/op
Iteration   2: 38.129 ns/op
Iteration   3: 38.166 ns/op
Iteration   4: 38.040 ns/op
Iteration   5: 38.053 ns/op
Iteration   6: 38.290 ns/op
Iteration   7: 38.123 ns/op
Iteration   8: 37.213 ns/op
Iteration   9: 38.141 ns/op
Iteration  10: 38.017 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.009 ±(99.9%) 0.269 ns/op [Average]
  (min, avg, max) = (37.109, 38.009, 38.363), stdev = 0.310
  CI (99.9%): [37.740, 38.278] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 74.78% complete, ETA 00:18:08
# Fork: 1 of 2
# Warmup Iteration   1: 288.079 ns/op
# Warmup Iteration   2: 278.543 ns/op
# Warmup Iteration   3: 241.289 ns/op
Iteration   1: 242.678 ns/op
Iteration   2: 241.085 ns/op
Iteration   3: 241.552 ns/op
Iteration   4: 242.171 ns/op
Iteration   5: 241.229 ns/op
Iteration   6: 241.943 ns/op
Iteration   7: 241.743 ns/op
Iteration   8: 238.795 ns/op
Iteration   9: 241.006 ns/op
Iteration  10: 241.431 ns/op

# Run progress: 74.83% complete, ETA 00:18:06
# Fork: 2 of 2
# Warmup Iteration   1: 302.769 ns/op
# Warmup Iteration   2: 283.379 ns/op
# Warmup Iteration   3: 241.241 ns/op
Iteration   1: 242.787 ns/op
Iteration   2: 241.285 ns/op
Iteration   3: 241.413 ns/op
Iteration   4: 241.659 ns/op
Iteration   5: 242.095 ns/op
Iteration   6: 241.760 ns/op
Iteration   7: 241.254 ns/op
Iteration   8: 238.548 ns/op
Iteration   9: 241.484 ns/op
Iteration  10: 241.677 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  241.380 ±(99.9%) 0.904 ns/op [Average]
  (min, avg, max) = (238.548, 241.380, 242.787), stdev = 1.041
  CI (99.9%): [240.476, 242.283] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 74.89% complete, ETA 00:18:03
# Fork: 1 of 2
# Warmup Iteration   1: 1490.491 ns/op
# Warmup Iteration   2: 1151.581 ns/op
# Warmup Iteration   3: 2982.918 ns/op
Iteration   1: 10108.706 ns/op
Iteration   2: 1127.604 ns/op
Iteration   3: 1102.461 ns/op
Iteration   4: 1856.237 ns/op
Iteration   5: 1001.435 ns/op
Iteration   6: 1006.691 ns/op
Iteration   7: 1092.541 ns/op
Iteration   8: 996.224 ns/op
Iteration   9: 1002.283 ns/op
Iteration  10: 1004.312 ns/op

# Run progress: 74.94% complete, ETA 00:18:01
# Fork: 2 of 2
# Warmup Iteration   1: 1610.037 ns/op
# Warmup Iteration   2: 1194.865 ns/op
# Warmup Iteration   3: 2935.720 ns/op
Iteration   1: 42340.551 ns/op
Iteration   2: 1068.214 ns/op
Iteration   3: 1076.010 ns/op
Iteration   4: 10848.849 ns/op
Iteration   5: 1010.332 ns/op
Iteration   6: 1025.716 ns/op
Iteration   7: 1115.800 ns/op
Iteration   8: 1011.266 ns/op
Iteration   9: 1005.692 ns/op
Iteration  10: 1015.094 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4090.801 ±(99.9%) 8210.785 ns/op [Average]
  (min, avg, max) = (996.224, 4090.801, 42340.551), stdev = 9455.553
  CI (99.9%): [≈ 0, 12301.586] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 75.00% complete, ETA 00:17:58
# Fork: 1 of 2
# Warmup Iteration   1: 1575.671 ns/op
# Warmup Iteration   2: 1182.839 ns/op
# Warmup Iteration   3: 2546.977 ns/op
Iteration   1: 1044.841 ns/op
Iteration   2: 1061.992 ns/op
Iteration   3: 1049.267 ns/op
Iteration   4: 64065.071 ns/op
Iteration   5: 1070.251 ns/op
Iteration   6: 1087.447 ns/op
Iteration   7: 1136.737 ns/op
Iteration   8: 1043.442 ns/op
Iteration   9: 1051.539 ns/op
Iteration  10: 1116.452 ns/op

# Run progress: 75.06% complete, ETA 00:17:56
# Fork: 2 of 2
# Warmup Iteration   1: 2108.460 ns/op
# Warmup Iteration   2: 1197.840 ns/op
# Warmup Iteration   3: 2925.037 ns/op
Iteration   1: 1085.630 ns/op
Iteration   2: 1082.107 ns/op
Iteration   3: 1087.849 ns/op
Iteration   4: 65027.320 ns/op
Iteration   5: 1034.982 ns/op
Iteration   6: 1043.364 ns/op
Iteration   7: 1094.716 ns/op
Iteration   8: 1019.009 ns/op
Iteration   9: 1028.521 ns/op
Iteration  10: 1037.407 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7413.397 ±(99.9%) 16967.373 ns/op [Average]
  (min, avg, max) = (1019.009, 7413.397, 65027.320), stdev = 19539.652
  CI (99.9%): [≈ 0, 24380.770] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 75.11% complete, ETA 00:17:54
# Fork: 1 of 2
# Warmup Iteration   1: 1427.229 ns/op
# Warmup Iteration   2: 1164.252 ns/op
# Warmup Iteration   3: 1792.501 ns/op
Iteration   1: 3159.813 ns/op
Iteration   2: 1034.727 ns/op
Iteration   3: 1099.158 ns/op
Iteration   4: 3309.292 ns/op
Iteration   5: 1065.045 ns/op
Iteration   6: 1085.181 ns/op
Iteration   7: 1077.623 ns/op
Iteration   8: 1050.879 ns/op
Iteration   9: 1035.426 ns/op
Iteration  10: 1077.730 ns/op

# Run progress: 75.17% complete, ETA 00:17:51
# Fork: 2 of 2
# Warmup Iteration   1: 1463.004 ns/op
# Warmup Iteration   2: 1170.108 ns/op
# Warmup Iteration   3: 1637.332 ns/op
Iteration   1: 2938.509 ns/op
Iteration   2: 1066.173 ns/op
Iteration   3: 1096.532 ns/op
Iteration   4: 2015.396 ns/op
Iteration   5: 1092.389 ns/op
Iteration   6: 1103.211 ns/op
Iteration   7: 1089.730 ns/op
Iteration   8: 1055.256 ns/op
Iteration   9: 1040.238 ns/op
Iteration  10: 1087.843 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1429.008 ±(99.9%) 666.618 ns/op [Average]
  (min, avg, max) = (1034.727, 1429.008, 3309.292), stdev = 767.679
  CI (99.9%): [762.389, 2095.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 75.22% complete, ETA 00:17:49
# Fork: 1 of 2
# Warmup Iteration   1: 564.717 ns/op
# Warmup Iteration   2: 548.509 ns/op
# Warmup Iteration   3: 454.807 ns/op
Iteration   1: 462.255 ns/op
Iteration   2: 453.335 ns/op
Iteration   3: 455.080 ns/op
Iteration   4: 456.758 ns/op
Iteration   5: 463.939 ns/op
Iteration   6: 456.976 ns/op
Iteration   7: 461.320 ns/op
Iteration   8: 464.473 ns/op
Iteration   9: 461.092 ns/op
Iteration  10: 456.824 ns/op

# Run progress: 75.28% complete, ETA 00:17:46
# Fork: 2 of 2
# Warmup Iteration   1: 536.721 ns/op
# Warmup Iteration   2: 518.891 ns/op
# Warmup Iteration   3: 454.904 ns/op
Iteration   1: 456.656 ns/op
Iteration   2: 453.345 ns/op
Iteration   3: 454.958 ns/op
Iteration   4: 456.965 ns/op
Iteration   5: 457.937 ns/op
Iteration   6: 457.057 ns/op
Iteration   7: 461.094 ns/op
Iteration   8: 458.423 ns/op
Iteration   9: 461.276 ns/op
Iteration  10: 456.925 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  458.334 ±(99.9%) 2.847 ns/op [Average]
  (min, avg, max) = (453.335, 458.334, 464.473), stdev = 3.278
  CI (99.9%): [455.487, 461.181] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 75.33% complete, ETA 00:17:44
# Fork: 1 of 2
# Warmup Iteration   1: 38.555 ns/op
# Warmup Iteration   2: 61.515 ns/op
# Warmup Iteration   3: 38.108 ns/op
Iteration   1: 38.100 ns/op
Iteration   2: 38.046 ns/op
Iteration   3: 37.993 ns/op
Iteration   4: 38.027 ns/op
Iteration   5: 38.070 ns/op
Iteration   6: 38.123 ns/op
Iteration   7: 38.126 ns/op
Iteration   8: 37.248 ns/op
Iteration   9: 37.978 ns/op
Iteration  10: 38.073 ns/op

# Run progress: 75.39% complete, ETA 00:17:42
# Fork: 2 of 2
# Warmup Iteration   1: 37.884 ns/op
# Warmup Iteration   2: 69.997 ns/op
# Warmup Iteration   3: 38.163 ns/op
Iteration   1: 38.313 ns/op
Iteration   2: 38.320 ns/op
Iteration   3: 38.048 ns/op
Iteration   4: 38.040 ns/op
Iteration   5: 38.210 ns/op
Iteration   6: 38.142 ns/op
Iteration   7: 38.034 ns/op
Iteration   8: 37.049 ns/op
Iteration   9: 38.151 ns/op
Iteration  10: 38.019 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.006 ±(99.9%) 0.268 ns/op [Average]
  (min, avg, max) = (37.049, 38.006, 38.320), stdev = 0.309
  CI (99.9%): [37.737, 38.274] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 75.44% complete, ETA 00:17:39
# Fork: 1 of 2
# Warmup Iteration   1: 282.944 ns/op
# Warmup Iteration   2: 289.343 ns/op
# Warmup Iteration   3: 239.608 ns/op
Iteration   1: 239.194 ns/op
Iteration   2: 238.902 ns/op
Iteration   3: 238.580 ns/op
Iteration   4: 239.716 ns/op
Iteration   5: 238.980 ns/op
Iteration   6: 239.575 ns/op
Iteration   7: 238.592 ns/op
Iteration   8: 236.246 ns/op
Iteration   9: 239.001 ns/op
Iteration  10: 239.215 ns/op

# Run progress: 75.50% complete, ETA 00:17:37
# Fork: 2 of 2
# Warmup Iteration   1: 284.175 ns/op
# Warmup Iteration   2: 280.007 ns/op
# Warmup Iteration   3: 238.537 ns/op
Iteration   1: 238.848 ns/op
Iteration   2: 238.913 ns/op
Iteration   3: 238.760 ns/op
Iteration   4: 239.289 ns/op
Iteration   5: 238.173 ns/op
Iteration   6: 238.585 ns/op
Iteration   7: 238.796 ns/op
Iteration   8: 236.265 ns/op
Iteration   9: 238.403 ns/op
Iteration  10: 238.721 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  238.638 ±(99.9%) 0.777 ns/op [Average]
  (min, avg, max) = (236.246, 238.638, 239.716), stdev = 0.895
  CI (99.9%): [237.861, 239.415] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 75.56% complete, ETA 00:17:34
# Fork: 1 of 2
# Warmup Iteration   1: 812.545 ns/op
# Warmup Iteration   2: 512.388 ns/op
# Warmup Iteration   3: 451.995 ns/op
Iteration   1: 452.304 ns/op
Iteration   2: 452.393 ns/op
Iteration   3: 452.799 ns/op
Iteration   4: 452.148 ns/op
Iteration   5: 452.443 ns/op
Iteration   6: 452.408 ns/op
Iteration   7: 452.265 ns/op
Iteration   8: 452.591 ns/op
Iteration   9: 452.095 ns/op
Iteration  10: 452.039 ns/op

# Run progress: 75.61% complete, ETA 00:17:32
# Fork: 2 of 2
# Warmup Iteration   1: 799.993 ns/op
# Warmup Iteration   2: 519.064 ns/op
# Warmup Iteration   3: 453.499 ns/op
Iteration   1: 453.483 ns/op
Iteration   2: 453.565 ns/op
Iteration   3: 453.462 ns/op
Iteration   4: 454.037 ns/op
Iteration   5: 453.989 ns/op
Iteration   6: 453.610 ns/op
Iteration   7: 453.816 ns/op
Iteration   8: 453.308 ns/op
Iteration   9: 453.649 ns/op
Iteration  10: 453.692 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  453.005 ±(99.9%) 0.617 ns/op [Average]
  (min, avg, max) = (452.039, 453.005, 454.037), stdev = 0.710
  CI (99.9%): [452.388, 453.621] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 75.67% complete, ETA 00:17:30
# Fork: 1 of 2
# Warmup Iteration   1: 760.445 ns/op
# Warmup Iteration   2: 596.599 ns/op
# Warmup Iteration   3: 513.523 ns/op
Iteration   1: 514.242 ns/op
Iteration   2: 514.097 ns/op
Iteration   3: 513.674 ns/op
Iteration   4: 513.927 ns/op
Iteration   5: 514.092 ns/op
Iteration   6: 513.607 ns/op
Iteration   7: 514.359 ns/op
Iteration   8: 513.968 ns/op
Iteration   9: 513.872 ns/op
Iteration  10: 513.949 ns/op

# Run progress: 75.72% complete, ETA 00:17:27
# Fork: 2 of 2
# Warmup Iteration   1: 780.806 ns/op
# Warmup Iteration   2: 596.154 ns/op
# Warmup Iteration   3: 513.683 ns/op
Iteration   1: 513.967 ns/op
Iteration   2: 513.496 ns/op
Iteration   3: 513.960 ns/op
Iteration   4: 513.580 ns/op
Iteration   5: 513.798 ns/op
Iteration   6: 513.618 ns/op
Iteration   7: 513.692 ns/op
Iteration   8: 513.809 ns/op
Iteration   9: 513.416 ns/op
Iteration  10: 513.674 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  513.840 ±(99.9%) 0.216 ns/op [Average]
  (min, avg, max) = (513.416, 513.840, 514.359), stdev = 0.249
  CI (99.9%): [513.624, 514.056] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 75.78% complete, ETA 00:17:25
# Fork: 1 of 2
# Warmup Iteration   1: 637.540 ns/op
# Warmup Iteration   2: 537.399 ns/op
# Warmup Iteration   3: 451.694 ns/op
Iteration   1: 451.986 ns/op
Iteration   2: 451.927 ns/op
Iteration   3: 451.967 ns/op
Iteration   4: 452.171 ns/op
Iteration   5: 451.590 ns/op
Iteration   6: 451.932 ns/op
Iteration   7: 451.621 ns/op
Iteration   8: 452.049 ns/op
Iteration   9: 451.987 ns/op
Iteration  10: 452.049 ns/op

# Run progress: 75.83% complete, ETA 00:17:23
# Fork: 2 of 2
# Warmup Iteration   1: 599.652 ns/op
# Warmup Iteration   2: 511.495 ns/op
# Warmup Iteration   3: 452.047 ns/op
Iteration   1: 451.790 ns/op
Iteration   2: 451.640 ns/op
Iteration   3: 451.514 ns/op
Iteration   4: 451.436 ns/op
Iteration   5: 451.634 ns/op
Iteration   6: 451.838 ns/op
Iteration   7: 451.695 ns/op
Iteration   8: 451.724 ns/op
Iteration   9: 451.654 ns/op
Iteration  10: 451.531 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  451.787 ±(99.9%) 0.183 ns/op [Average]
  (min, avg, max) = (451.436, 451.787, 452.171), stdev = 0.211
  CI (99.9%): [451.604, 451.970] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 75.89% complete, ETA 00:17:20
# Fork: 1 of 2
# Warmup Iteration   1: 466.880 ns/op
# Warmup Iteration   2: 496.938 ns/op
# Warmup Iteration   3: 420.491 ns/op
Iteration   1: 420.792 ns/op
Iteration   2: 420.840 ns/op
Iteration   3: 420.765 ns/op
Iteration   4: 421.507 ns/op
Iteration   5: 421.591 ns/op
Iteration   6: 421.821 ns/op
Iteration   7: 421.903 ns/op
Iteration   8: 418.918 ns/op
Iteration   9: 421.825 ns/op
Iteration  10: 421.693 ns/op

# Run progress: 75.94% complete, ETA 00:17:18
# Fork: 2 of 2
# Warmup Iteration   1: 368.546 ns/op
# Warmup Iteration   2: 388.529 ns/op
# Warmup Iteration   3: 326.723 ns/op
Iteration   1: 326.166 ns/op
Iteration   2: 326.383 ns/op
Iteration   3: 326.285 ns/op
Iteration   4: 328.229 ns/op
Iteration   5: 328.703 ns/op
Iteration   6: 328.410 ns/op
Iteration   7: 328.232 ns/op
Iteration   8: 325.841 ns/op
Iteration   9: 327.881 ns/op
Iteration  10: 328.341 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  374.306 ±(99.9%) 41.756 ns/op [Average]
  (min, avg, max) = (325.841, 374.306, 421.903), stdev = 48.087
  CI (99.9%): [332.550, 416.063] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 76.00% complete, ETA 00:17:15
# Fork: 1 of 2
# Warmup Iteration   1: 38.514 ns/op
# Warmup Iteration   2: 62.798 ns/op
# Warmup Iteration   3: 38.208 ns/op
Iteration   1: 37.997 ns/op
Iteration   2: 38.072 ns/op
Iteration   3: 38.066 ns/op
Iteration   4: 38.118 ns/op
Iteration   5: 38.104 ns/op
Iteration   6: 38.051 ns/op
Iteration   7: 38.425 ns/op
Iteration   8: 37.144 ns/op
Iteration   9: 38.219 ns/op
Iteration  10: 38.226 ns/op

# Run progress: 76.06% complete, ETA 00:17:13
# Fork: 2 of 2
# Warmup Iteration   1: 38.414 ns/op
# Warmup Iteration   2: 61.686 ns/op
# Warmup Iteration   3: 37.963 ns/op
Iteration   1: 38.055 ns/op
Iteration   2: 38.067 ns/op
Iteration   3: 38.223 ns/op
Iteration   4: 38.012 ns/op
Iteration   5: 38.396 ns/op
Iteration   6: 38.118 ns/op
Iteration   7: 38.064 ns/op
Iteration   8: 37.066 ns/op
Iteration   9: 38.076 ns/op
Iteration  10: 38.162 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.033 ±(99.9%) 0.293 ns/op [Average]
  (min, avg, max) = (37.066, 38.033, 38.425), stdev = 0.338
  CI (99.9%): [37.740, 38.326] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 76.11% complete, ETA 00:17:11
# Fork: 1 of 2
# Warmup Iteration   1: 279.546 ns/op
# Warmup Iteration   2: 277.904 ns/op
# Warmup Iteration   3: 241.096 ns/op
Iteration   1: 241.991 ns/op
Iteration   2: 242.331 ns/op
Iteration   3: 241.734 ns/op
Iteration   4: 242.190 ns/op
Iteration   5: 240.759 ns/op
Iteration   6: 239.548 ns/op
Iteration   7: 242.029 ns/op
Iteration   8: 239.595 ns/op
Iteration   9: 241.471 ns/op
Iteration  10: 240.765 ns/op

# Run progress: 76.17% complete, ETA 00:17:08
# Fork: 2 of 2
# Warmup Iteration   1: 296.062 ns/op
# Warmup Iteration   2: 277.317 ns/op
# Warmup Iteration   3: 241.793 ns/op
Iteration   1: 241.691 ns/op
Iteration   2: 242.729 ns/op
Iteration   3: 241.738 ns/op
Iteration   4: 241.363 ns/op
Iteration   5: 241.150 ns/op
Iteration   6: 239.427 ns/op
Iteration   7: 243.056 ns/op
Iteration   8: 238.815 ns/op
Iteration   9: 241.613 ns/op
Iteration  10: 242.183 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  241.309 ±(99.9%) 1.010 ns/op [Average]
  (min, avg, max) = (238.815, 241.309, 243.056), stdev = 1.163
  CI (99.9%): [240.299, 242.319] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 76.22% complete, ETA 00:17:06
# Fork: 1 of 2
# Warmup Iteration   1: 1425.605 ns/op
# Warmup Iteration   2: 1199.793 ns/op
# Warmup Iteration   3: 978.553 ns/op
Iteration   1: 975.589 ns/op
Iteration   2: 973.570 ns/op
Iteration   3: 974.579 ns/op
Iteration   4: 975.574 ns/op
Iteration   5: 974.538 ns/op
Iteration   6: 976.878 ns/op
Iteration   7: 976.987 ns/op
Iteration   8: 975.890 ns/op
Iteration   9: 974.351 ns/op
Iteration  10: 973.631 ns/op

# Run progress: 76.28% complete, ETA 00:17:03
# Fork: 2 of 2
# Warmup Iteration   1: 1513.703 ns/op
# Warmup Iteration   2: 1137.378 ns/op
# Warmup Iteration   3: 974.574 ns/op
Iteration   1: 974.280 ns/op
Iteration   2: 975.014 ns/op
Iteration   3: 979.002 ns/op
Iteration   4: 973.574 ns/op
Iteration   5: 975.506 ns/op
Iteration   6: 973.904 ns/op
Iteration   7: 972.015 ns/op
Iteration   8: 984.794 ns/op
Iteration   9: 973.840 ns/op
Iteration  10: 973.310 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  975.341 ±(99.9%) 2.361 ns/op [Average]
  (min, avg, max) = (972.015, 975.341, 984.794), stdev = 2.718
  CI (99.9%): [972.981, 977.702] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 76.33% complete, ETA 00:17:01
# Fork: 1 of 2
# Warmup Iteration   1: 1387.774 ns/op
# Warmup Iteration   2: 1133.010 ns/op
# Warmup Iteration   3: 984.148 ns/op
Iteration   1: 987.030 ns/op
Iteration   2: 982.359 ns/op
Iteration   3: 986.323 ns/op
Iteration   4: 983.379 ns/op
Iteration   5: 985.161 ns/op
Iteration   6: 986.974 ns/op
Iteration   7: 984.318 ns/op
Iteration   8: 986.317 ns/op
Iteration   9: 986.644 ns/op
Iteration  10: 989.076 ns/op

# Run progress: 76.39% complete, ETA 00:16:59
# Fork: 2 of 2
# Warmup Iteration   1: 1768.277 ns/op
# Warmup Iteration   2: 1168.415 ns/op
# Warmup Iteration   3: 988.794 ns/op
Iteration   1: 982.698 ns/op
Iteration   2: 983.629 ns/op
Iteration   3: 985.100 ns/op
Iteration   4: 984.764 ns/op
Iteration   5: 984.059 ns/op
Iteration   6: 984.405 ns/op
Iteration   7: 985.036 ns/op
Iteration   8: 984.398 ns/op
Iteration   9: 987.195 ns/op
Iteration  10: 986.694 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  985.278 ±(99.9%) 1.490 ns/op [Average]
  (min, avg, max) = (982.359, 985.278, 989.076), stdev = 1.715
  CI (99.9%): [983.788, 986.768] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 76.44% complete, ETA 00:16:56
# Fork: 1 of 2
# Warmup Iteration   1: 2062.498 ns/op
# Warmup Iteration   2: 1603.316 ns/op
# Warmup Iteration   3: 1346.229 ns/op
Iteration   1: 1349.413 ns/op
Iteration   2: 1346.941 ns/op
Iteration   3: 1348.437 ns/op
Iteration   4: 1346.812 ns/op
Iteration   5: 1349.303 ns/op
Iteration   6: 1348.757 ns/op
Iteration   7: 1346.766 ns/op
Iteration   8: 1347.142 ns/op
Iteration   9: 1346.642 ns/op
Iteration  10: 1347.083 ns/op

# Run progress: 76.50% complete, ETA 00:16:54
# Fork: 2 of 2
# Warmup Iteration   1: 1765.227 ns/op
# Warmup Iteration   2: 1515.409 ns/op
# Warmup Iteration   3: 1335.655 ns/op
Iteration   1: 1336.564 ns/op
Iteration   2: 1336.195 ns/op
Iteration   3: 1336.682 ns/op
Iteration   4: 1335.766 ns/op
Iteration   5: 1337.857 ns/op
Iteration   6: 1335.820 ns/op
Iteration   7: 1335.457 ns/op
Iteration   8: 1336.512 ns/op
Iteration   9: 1336.391 ns/op
Iteration  10: 1336.679 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1342.061 ±(99.9%) 5.110 ns/op [Average]
  (min, avg, max) = (1335.457, 1342.061, 1349.413), stdev = 5.884
  CI (99.9%): [1336.951, 1347.170] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 76.56% complete, ETA 00:16:51
# Fork: 1 of 2
# Warmup Iteration   1: 497.009 ns/op
# Warmup Iteration   2: 488.617 ns/op
# Warmup Iteration   3: 420.990 ns/op
Iteration   1: 420.904 ns/op
Iteration   2: 421.173 ns/op
Iteration   3: 421.407 ns/op
Iteration   4: 422.338 ns/op
Iteration   5: 421.921 ns/op
Iteration   6: 421.638 ns/op
Iteration   7: 422.094 ns/op
Iteration   8: 418.788 ns/op
Iteration   9: 422.111 ns/op
Iteration  10: 422.104 ns/op

# Run progress: 76.61% complete, ETA 00:16:49
# Fork: 2 of 2
# Warmup Iteration   1: 368.703 ns/op
# Warmup Iteration   2: 386.649 ns/op
# Warmup Iteration   3: 327.430 ns/op
Iteration   1: 326.791 ns/op
Iteration   2: 327.385 ns/op
Iteration   3: 327.215 ns/op
Iteration   4: 328.251 ns/op
Iteration   5: 328.502 ns/op
Iteration   6: 328.475 ns/op
Iteration   7: 328.450 ns/op
Iteration   8: 325.777 ns/op
Iteration   9: 328.893 ns/op
Iteration  10: 328.084 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  374.615 ±(99.9%) 41.733 ns/op [Average]
  (min, avg, max) = (325.777, 374.615, 422.338), stdev = 48.059
  CI (99.9%): [332.882, 416.348] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 76.67% complete, ETA 00:16:47
# Fork: 1 of 2
# Warmup Iteration   1: 37.856 ns/op
# Warmup Iteration   2: 66.317 ns/op
# Warmup Iteration   3: 35.779 ns/op
Iteration   1: 35.619 ns/op
Iteration   2: 35.641 ns/op
Iteration   3: 35.663 ns/op
Iteration   4: 35.751 ns/op
Iteration   5: 35.703 ns/op
Iteration   6: 36.122 ns/op
Iteration   7: 35.628 ns/op
Iteration   8: 34.511 ns/op
Iteration   9: 35.681 ns/op
Iteration  10: 35.696 ns/op

# Run progress: 76.72% complete, ETA 00:16:44
# Fork: 2 of 2
# Warmup Iteration   1: 38.354 ns/op
# Warmup Iteration   2: 66.823 ns/op
# Warmup Iteration   3: 35.688 ns/op
Iteration   1: 35.665 ns/op
Iteration   2: 35.741 ns/op
Iteration   3: 35.738 ns/op
Iteration   4: 35.684 ns/op
Iteration   5: 35.656 ns/op
Iteration   6: 36.098 ns/op
Iteration   7: 35.689 ns/op
Iteration   8: 34.542 ns/op
Iteration   9: 35.666 ns/op
Iteration  10: 35.752 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.612 ±(99.9%) 0.343 ns/op [Average]
  (min, avg, max) = (34.511, 35.612, 36.122), stdev = 0.395
  CI (99.9%): [35.269, 35.955] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 76.78% complete, ETA 00:16:42
# Fork: 1 of 2
# Warmup Iteration   1: 15127.050 ns/op
# Warmup Iteration   2: 12988.539 ns/op
# Warmup Iteration   3: 11123.752 ns/op
Iteration   1: 11090.287 ns/op
Iteration   2: 11107.621 ns/op
Iteration   3: 11126.232 ns/op
Iteration   4: 11051.418 ns/op
Iteration   5: 11139.232 ns/op
Iteration   6: 11074.695 ns/op
Iteration   7: 11086.875 ns/op
Iteration   8: 11030.489 ns/op
Iteration   9: 11110.326 ns/op
Iteration  10: 11099.151 ns/op

# Run progress: 76.83% complete, ETA 00:16:39
# Fork: 2 of 2
# Warmup Iteration   1: 14822.876 ns/op
# Warmup Iteration   2: 12484.081 ns/op
# Warmup Iteration   3: 11106.875 ns/op
Iteration   1: 11108.113 ns/op
Iteration   2: 11088.973 ns/op
Iteration   3: 11074.738 ns/op
Iteration   4: 11072.515 ns/op
Iteration   5: 11104.802 ns/op
Iteration   6: 11044.978 ns/op
Iteration   7: 11062.726 ns/op
Iteration   8: 11046.334 ns/op
Iteration   9: 11061.565 ns/op
Iteration  10: 11066.149 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11082.361 ±(99.9%) 25.035 ns/op [Average]
  (min, avg, max) = (11030.489, 11082.361, 11139.232), stdev = 28.831
  CI (99.9%): [11057.326, 11107.396] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 76.89% complete, ETA 00:16:37
# Fork: 1 of 2
# Warmup Iteration   1: 16785.516 ns/op
# Warmup Iteration   2: 7227.616 ns/op
# Warmup Iteration   3: 6280.972 ns/op
Iteration   1: 6278.433 ns/op
Iteration   2: 6303.533 ns/op
Iteration   3: 6290.516 ns/op
Iteration   4: 6281.222 ns/op
Iteration   5: 6287.273 ns/op
Iteration   6: 6272.169 ns/op
Iteration   7: 6281.550 ns/op
Iteration   8: 6258.528 ns/op
Iteration   9: 6249.016 ns/op
Iteration  10: 6311.723 ns/op

# Run progress: 76.94% complete, ETA 00:16:35
# Fork: 2 of 2
# Warmup Iteration   1: 15690.373 ns/op
# Warmup Iteration   2: 7285.806 ns/op
# Warmup Iteration   3: 6170.576 ns/op
Iteration   1: 6193.135 ns/op
Iteration   2: 6164.591 ns/op
Iteration   3: 6188.243 ns/op
Iteration   4: 6180.784 ns/op
Iteration   5: 6158.336 ns/op
Iteration   6: 6186.288 ns/op
Iteration   7: 6188.633 ns/op
Iteration   8: 6226.312 ns/op
Iteration   9: 6226.844 ns/op
Iteration  10: 6166.592 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6234.686 ±(99.9%) 45.329 ns/op [Average]
  (min, avg, max) = (6158.336, 6234.686, 6311.723), stdev = 52.201
  CI (99.9%): [6189.357, 6280.015] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 77.00% complete, ETA 00:16:32
# Fork: 1 of 2
# Warmup Iteration   1: 16624.094 ns/op
# Warmup Iteration   2: 7275.815 ns/op
# Warmup Iteration   3: 6422.082 ns/op
Iteration   1: 6452.093 ns/op
Iteration   2: 6439.935 ns/op
Iteration   3: 6415.569 ns/op
Iteration   4: 6414.752 ns/op
Iteration   5: 6459.997 ns/op
Iteration   6: 6435.413 ns/op
Iteration   7: 6452.767 ns/op
Iteration   8: 6461.900 ns/op
Iteration   9: 6442.330 ns/op
Iteration  10: 6422.005 ns/op

# Run progress: 77.06% complete, ETA 00:16:30
# Fork: 2 of 2
# Warmup Iteration   1: 15188.991 ns/op
# Warmup Iteration   2: 7069.945 ns/op
# Warmup Iteration   3: 6259.218 ns/op
Iteration   1: 6281.398 ns/op
Iteration   2: 6255.055 ns/op
Iteration   3: 6288.945 ns/op
Iteration   4: 6283.468 ns/op
Iteration   5: 6260.959 ns/op
Iteration   6: 6255.162 ns/op
Iteration   7: 6261.775 ns/op
Iteration   8: 6290.308 ns/op
Iteration   9: 6291.464 ns/op
Iteration  10: 6249.992 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6355.764 ±(99.9%) 76.145 ns/op [Average]
  (min, avg, max) = (6249.992, 6355.764, 6461.900), stdev = 87.689
  CI (99.9%): [6279.619, 6431.910] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 77.11% complete, ETA 00:16:27
# Fork: 1 of 2
# Warmup Iteration   1: 10418.701 ns/op
# Warmup Iteration   2: 6523.829 ns/op
# Warmup Iteration   3: 5657.876 ns/op
Iteration   1: 5614.989 ns/op
Iteration   2: 5621.493 ns/op
Iteration   3: 5645.120 ns/op
Iteration   4: 5643.580 ns/op
Iteration   5: 5644.355 ns/op
Iteration   6: 5645.771 ns/op
Iteration   7: 5595.184 ns/op
Iteration   8: 5671.329 ns/op
Iteration   9: 5651.053 ns/op
Iteration  10: 5623.689 ns/op

# Run progress: 77.17% complete, ETA 00:16:25
# Fork: 2 of 2
# Warmup Iteration   1: 10051.729 ns/op
# Warmup Iteration   2: 6212.767 ns/op
# Warmup Iteration   3: 5492.668 ns/op
Iteration   1: 5502.181 ns/op
Iteration   2: 5494.234 ns/op
Iteration   3: 5494.991 ns/op
Iteration   4: 5466.411 ns/op
Iteration   5: 5472.407 ns/op
Iteration   6: 5467.897 ns/op
Iteration   7: 5492.438 ns/op
Iteration   8: 5491.326 ns/op
Iteration   9: 5494.088 ns/op
Iteration  10: 5470.585 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5560.156 ±(99.9%) 68.986 ns/op [Average]
  (min, avg, max) = (5466.411, 5560.156, 5671.329), stdev = 79.444
  CI (99.9%): [5491.170, 5629.142] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 77.22% complete, ETA 00:16:23
# Fork: 1 of 2
# Warmup Iteration   1: 14608.085 ns/op
# Warmup Iteration   2: 9874.492 ns/op
# Warmup Iteration   3: 8466.676 ns/op
Iteration   1: 8471.300 ns/op
Iteration   2: 8503.209 ns/op
Iteration   3: 8496.532 ns/op
Iteration   4: 8482.080 ns/op
Iteration   5: 8526.959 ns/op
Iteration   6: 8518.105 ns/op
Iteration   7: 8510.040 ns/op
Iteration   8: 8507.694 ns/op
Iteration   9: 8497.069 ns/op
Iteration  10: 8487.730 ns/op

# Run progress: 77.28% complete, ETA 00:16:20
# Fork: 2 of 2
# Warmup Iteration   1: 13276.036 ns/op
# Warmup Iteration   2: 10190.583 ns/op
# Warmup Iteration   3: 8541.831 ns/op
Iteration   1: 8531.250 ns/op
Iteration   2: 8515.586 ns/op
Iteration   3: 8591.902 ns/op
Iteration   4: 8719.338 ns/op
Iteration   5: 8722.111 ns/op
Iteration   6: 8722.006 ns/op
Iteration   7: 8723.508 ns/op
Iteration   8: 8708.052 ns/op
Iteration   9: 8729.498 ns/op
Iteration  10: 8727.389 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8584.568 ±(99.9%) 92.053 ns/op [Average]
  (min, avg, max) = (8471.300, 8584.568, 8729.498), stdev = 106.008
  CI (99.9%): [8492.515, 8676.621] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 77.33% complete, ETA 00:16:18
# Fork: 1 of 2
# Warmup Iteration   1: 37.838 ns/op
# Warmup Iteration   2: 63.279 ns/op
# Warmup Iteration   3: 35.618 ns/op
Iteration   1: 35.684 ns/op
Iteration   2: 35.624 ns/op
Iteration   3: 35.749 ns/op
Iteration   4: 35.624 ns/op
Iteration   5: 35.719 ns/op
Iteration   6: 36.181 ns/op
Iteration   7: 35.688 ns/op
Iteration   8: 34.554 ns/op
Iteration   9: 35.710 ns/op
Iteration  10: 35.760 ns/op

# Run progress: 77.39% complete, ETA 00:16:15
# Fork: 2 of 2
# Warmup Iteration   1: 37.988 ns/op
# Warmup Iteration   2: 64.242 ns/op
# Warmup Iteration   3: 35.666 ns/op
Iteration   1: 35.655 ns/op
Iteration   2: 35.696 ns/op
Iteration   3: 35.696 ns/op
Iteration   4: 35.619 ns/op
Iteration   5: 35.681 ns/op
Iteration   6: 36.160 ns/op
Iteration   7: 35.686 ns/op
Iteration   8: 34.449 ns/op
Iteration   9: 35.687 ns/op
Iteration  10: 35.693 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.616 ±(99.9%) 0.357 ns/op [Average]
  (min, avg, max) = (34.449, 35.616, 36.181), stdev = 0.411
  CI (99.9%): [35.259, 35.973] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 77.44% complete, ETA 00:16:13
# Fork: 1 of 2
# Warmup Iteration   1: 14647.756 ns/op
# Warmup Iteration   2: 7487.309 ns/op
# Warmup Iteration   3: 6350.585 ns/op
Iteration   1: 6375.482 ns/op
Iteration   2: 6315.477 ns/op
Iteration   3: 6415.070 ns/op
Iteration   4: 6314.848 ns/op
Iteration   5: 6365.762 ns/op
Iteration   6: 6375.336 ns/op
Iteration   7: 6349.244 ns/op
Iteration   8: 6362.878 ns/op
Iteration   9: 6331.224 ns/op
Iteration  10: 6415.052 ns/op

# Run progress: 77.50% complete, ETA 00:16:11
# Fork: 2 of 2
# Warmup Iteration   1: 11839.209 ns/op
# Warmup Iteration   2: 6301.431 ns/op
# Warmup Iteration   3: 5558.329 ns/op
Iteration   1: 5529.043 ns/op
Iteration   2: 5553.483 ns/op
Iteration   3: 5519.250 ns/op
Iteration   4: 5537.286 ns/op
Iteration   5: 5521.693 ns/op
Iteration   6: 5520.916 ns/op
Iteration   7: 5578.911 ns/op
Iteration   8: 5570.821 ns/op
Iteration   9: 5534.803 ns/op
Iteration  10: 7672.110 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6057.934 ±(99.9%) 486.086 ns/op [Average]
  (min, avg, max) = (5519.250, 6057.934, 7672.110), stdev = 559.777
  CI (99.9%): [5571.849, 6544.020] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 77.56% complete, ETA 00:16:08
# Fork: 1 of 2
# Warmup Iteration   1: 18779.711 ns/op
# Warmup Iteration   2: 7461.741 ns/op
# Warmup Iteration   3: 6425.597 ns/op
Iteration   1: 6485.150 ns/op
Iteration   2: 6429.743 ns/op
Iteration   3: 6436.994 ns/op
Iteration   4: 6470.625 ns/op
Iteration   5: 6429.317 ns/op
Iteration   6: 6445.675 ns/op
Iteration   7: 6448.876 ns/op
Iteration   8: 6470.630 ns/op
Iteration   9: 6426.844 ns/op
Iteration  10: 6460.291 ns/op

# Run progress: 77.61% complete, ETA 00:16:06
# Fork: 2 of 2
# Warmup Iteration   1: 19373.340 ns/op
# Warmup Iteration   2: 7498.449 ns/op
# Warmup Iteration   3: 6452.244 ns/op
Iteration   1: 6423.768 ns/op
Iteration   2: 6420.625 ns/op
Iteration   3: 6430.516 ns/op
Iteration   4: 6465.702 ns/op
Iteration   5: 6459.828 ns/op
Iteration   6: 6428.522 ns/op
Iteration   7: 6440.889 ns/op
Iteration   8: 6468.914 ns/op
Iteration   9: 6428.978 ns/op
Iteration  10: 6433.753 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6445.282 ±(99.9%) 16.895 ns/op [Average]
  (min, avg, max) = (6420.625, 6445.282, 6485.150), stdev = 19.456
  CI (99.9%): [6428.387, 6462.177] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 77.67% complete, ETA 00:16:03
# Fork: 1 of 2
# Warmup Iteration   1: 22501.999 ns/op
# Warmup Iteration   2: 7444.208 ns/op
# Warmup Iteration   3: 6689.636 ns/op
Iteration   1: 6478.185 ns/op
Iteration   2: 6417.842 ns/op
Iteration   3: 6456.661 ns/op
Iteration   4: 6415.124 ns/op
Iteration   5: 6427.447 ns/op
Iteration   6: 6406.879 ns/op
Iteration   7: 6412.469 ns/op
Iteration   8: 6403.418 ns/op
Iteration   9: 6405.757 ns/op
Iteration  10: 6430.073 ns/op

# Run progress: 77.72% complete, ETA 00:16:01
# Fork: 2 of 2
# Warmup Iteration   1: 26183.997 ns/op
# Warmup Iteration   2: 7147.292 ns/op
# Warmup Iteration   3: 6686.422 ns/op
Iteration   1: 6424.316 ns/op
Iteration   2: 6417.104 ns/op
Iteration   3: 6422.824 ns/op
Iteration   4: 6406.381 ns/op
Iteration   5: 6392.924 ns/op
Iteration   6: 6420.101 ns/op
Iteration   7: 6404.451 ns/op
Iteration   8: 6415.890 ns/op
Iteration   9: 6415.407 ns/op
Iteration  10: 6435.975 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6420.461 ±(99.9%) 16.793 ns/op [Average]
  (min, avg, max) = (6392.924, 6420.461, 6478.185), stdev = 19.339
  CI (99.9%): [6403.668, 6437.254] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 77.78% complete, ETA 00:15:59
# Fork: 1 of 2
# Warmup Iteration   1: 9901.915 ns/op
# Warmup Iteration   2: 6238.762 ns/op
# Warmup Iteration   3: 5274.896 ns/op
Iteration   1: 5260.438 ns/op
Iteration   2: 5249.056 ns/op
Iteration   3: 5267.975 ns/op
Iteration   4: 5290.755 ns/op
Iteration   5: 5242.414 ns/op
Iteration   6: 5285.354 ns/op
Iteration   7: 5286.124 ns/op
Iteration   8: 5332.074 ns/op
Iteration   9: 5274.418 ns/op
Iteration  10: 5295.801 ns/op

# Run progress: 77.83% complete, ETA 00:15:56
# Fork: 2 of 2
# Warmup Iteration   1: 9857.682 ns/op
# Warmup Iteration   2: 5950.038 ns/op
# Warmup Iteration   3: 5262.710 ns/op
Iteration   1: 5290.248 ns/op
Iteration   2: 5267.253 ns/op
Iteration   3: 5285.939 ns/op
Iteration   4: 5259.818 ns/op
Iteration   5: 5252.675 ns/op
Iteration   6: 5268.256 ns/op
Iteration   7: 5277.160 ns/op
Iteration   8: 5302.546 ns/op
Iteration   9: 5278.304 ns/op
Iteration  10: 5254.065 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5276.034 ±(99.9%) 18.414 ns/op [Average]
  (min, avg, max) = (5242.414, 5276.034, 5332.074), stdev = 21.206
  CI (99.9%): [5257.620, 5294.448] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 77.89% complete, ETA 00:15:54
# Fork: 1 of 2
# Warmup Iteration   1: 14496.059 ns/op
# Warmup Iteration   2: 9631.141 ns/op
# Warmup Iteration   3: 8092.710 ns/op
Iteration   1: 8091.462 ns/op
Iteration   2: 8096.896 ns/op
Iteration   3: 8117.290 ns/op
Iteration   4: 8079.370 ns/op
Iteration   5: 8092.232 ns/op
Iteration   6: 8067.087 ns/op
Iteration   7: 8093.661 ns/op
Iteration   8: 8075.093 ns/op
Iteration   9: 8099.724 ns/op
Iteration  10: 8111.353 ns/op

# Run progress: 77.94% complete, ETA 00:15:51
# Fork: 2 of 2
# Warmup Iteration   1: 13672.394 ns/op
# Warmup Iteration   2: 9436.513 ns/op
# Warmup Iteration   3: 8099.338 ns/op
Iteration   1: 8064.869 ns/op
Iteration   2: 8071.202 ns/op
Iteration   3: 8089.289 ns/op
Iteration   4: 8089.745 ns/op
Iteration   5: 8058.157 ns/op
Iteration   6: 8038.619 ns/op
Iteration   7: 8108.509 ns/op
Iteration   8: 8053.869 ns/op
Iteration   9: 8088.334 ns/op
Iteration  10: 8071.874 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8082.932 ±(99.9%) 17.643 ns/op [Average]
  (min, avg, max) = (8038.619, 8082.932, 8117.290), stdev = 20.318
  CI (99.9%): [8065.289, 8100.575] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 78.00% complete, ETA 00:15:49
# Fork: 1 of 2
# Warmup Iteration   1: 38.424 ns/op
# Warmup Iteration   2: 66.555 ns/op
# Warmup Iteration   3: 35.691 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.714 ns/op
Iteration   3: 35.708 ns/op
Iteration   4: 35.730 ns/op
Iteration   5: 35.694 ns/op
Iteration   6: 36.155 ns/op
Iteration   7: 35.695 ns/op
Iteration   8: 34.526 ns/op
Iteration   9: 35.674 ns/op
Iteration  10: 35.633 ns/op

# Run progress: 78.06% complete, ETA 00:15:47
# Fork: 2 of 2
# Warmup Iteration   1: 38.106 ns/op
# Warmup Iteration   2: 66.641 ns/op
# Warmup Iteration   3: 35.649 ns/op
Iteration   1: 35.625 ns/op
Iteration   2: 35.674 ns/op
Iteration   3: 35.630 ns/op
Iteration   4: 35.709 ns/op
Iteration   5: 35.689 ns/op
Iteration   6: 36.145 ns/op
Iteration   7: 35.873 ns/op
Iteration   8: 34.508 ns/op
Iteration   9: 35.648 ns/op
Iteration  10: 35.747 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.624 ±(99.9%) 0.353 ns/op [Average]
  (min, avg, max) = (34.508, 35.624, 36.155), stdev = 0.406
  CI (99.9%): [35.271, 35.976] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 78.11% complete, ETA 00:15:44
# Fork: 1 of 2
# Warmup Iteration   1: 12801.772 ns/op
# Warmup Iteration   2: 6975.130 ns/op
# Warmup Iteration   3: 6019.772 ns/op
Iteration   1: 5883.858 ns/op
Iteration   2: 5950.672 ns/op
Iteration   3: 5842.243 ns/op
Iteration   4: 6098.866 ns/op
Iteration   5: 5792.120 ns/op
Iteration   6: 5902.272 ns/op
Iteration   7: 5950.424 ns/op
Iteration   8: 5446.718 ns/op
Iteration   9: 6059.858 ns/op
Iteration  10: 6003.579 ns/op

# Run progress: 78.17% complete, ETA 00:15:42
# Fork: 2 of 2
# Warmup Iteration   1: 14515.463 ns/op
# Warmup Iteration   2: 6780.690 ns/op
# Warmup Iteration   3: 6038.293 ns/op
Iteration   1: 5876.223 ns/op
Iteration   2: 5987.899 ns/op
Iteration   3: 5939.000 ns/op
Iteration   4: 6059.834 ns/op
Iteration   5: 5861.962 ns/op
Iteration   6: 5948.396 ns/op
Iteration   7: 5872.782 ns/op
Iteration   8: 5446.551 ns/op
Iteration   9: 6008.289 ns/op
Iteration  10: 6067.059 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5899.930 ±(99.9%) 152.602 ns/op [Average]
  (min, avg, max) = (5446.551, 5899.930, 6098.866), stdev = 175.737
  CI (99.9%): [5747.328, 6052.532] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 78.22% complete, ETA 00:15:39
# Fork: 1 of 2
# Warmup Iteration   1: 28829.897 ns/op
# Warmup Iteration   2: 11407.471 ns/op
# Warmup Iteration   3: 8503.209 ns/op
Iteration   1: 16451.644 ns/op
Iteration   2: 23509.898 ns/op
Iteration   3: 5394.656 ns/op
Iteration   4: 6468.224 ns/op
Iteration   5: 5998.071 ns/op
Iteration   6: 6118.173 ns/op
Iteration   7: 6263.315 ns/op
Iteration   8: 6814.462 ns/op
Iteration   9: 5701.406 ns/op
Iteration  10: 6403.804 ns/op

# Run progress: 78.28% complete, ETA 00:15:37
# Fork: 2 of 2
# Warmup Iteration   1: 28051.698 ns/op
# Warmup Iteration   2: 9693.993 ns/op
# Warmup Iteration   3: 8700.117 ns/op
Iteration   1: 8215.165 ns/op
Iteration   2: 16225.740 ns/op
Iteration   3: 5504.878 ns/op
Iteration   4: 6773.675 ns/op
Iteration   5: 6217.961 ns/op
Iteration   6: 6195.476 ns/op
Iteration   7: 6310.582 ns/op
Iteration   8: 7088.671 ns/op
Iteration   9: 5706.091 ns/op
Iteration  10: 6459.128 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8191.051 ±(99.9%) 4147.227 ns/op [Average]
  (min, avg, max) = (5394.656, 8191.051, 23509.898), stdev = 4775.953
  CI (99.9%): [4043.824, 12338.278] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 78.33% complete, ETA 00:15:35
# Fork: 1 of 2
# Warmup Iteration   1: 22894.138 ns/op
# Warmup Iteration   2: 10194.642 ns/op
# Warmup Iteration   3: 8025.276 ns/op
Iteration   1: 19017.275 ns/op
Iteration   2: 5951.359 ns/op
Iteration   3: 5273.315 ns/op
Iteration   4: 6356.425 ns/op
Iteration   5: 6028.812 ns/op
Iteration   6: 5884.413 ns/op
Iteration   7: 6317.089 ns/op
Iteration   8: 6745.383 ns/op
Iteration   9: 5475.317 ns/op
Iteration  10: 6377.307 ns/op

# Run progress: 78.39% complete, ETA 00:15:32
# Fork: 2 of 2
# Warmup Iteration   1: 20131.083 ns/op
# Warmup Iteration   2: 13173.387 ns/op
# Warmup Iteration   3: 8484.700 ns/op
Iteration   1: 13163.488 ns/op
Iteration   2: 5880.726 ns/op
Iteration   3: 5228.634 ns/op
Iteration   4: 6297.875 ns/op
Iteration   5: 5994.529 ns/op
Iteration   6: 5867.538 ns/op
Iteration   7: 6214.903 ns/op
Iteration   8: 6598.040 ns/op
Iteration   9: 5472.021 ns/op
Iteration  10: 6218.360 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7018.140 ±(99.9%) 2839.936 ns/op [Average]
  (min, avg, max) = (5228.634, 7018.140, 19017.275), stdev = 3270.475
  CI (99.9%): [4178.204, 9858.077] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 78.44% complete, ETA 00:15:30
# Fork: 1 of 2
# Warmup Iteration   1: 14612.711 ns/op
# Warmup Iteration   2: 11513.187 ns/op
# Warmup Iteration   3: 8377.255 ns/op
Iteration   1: 16120.638 ns/op
Iteration   2: 10809.292 ns/op
Iteration   3: 6013.498 ns/op
Iteration   4: 8294.503 ns/op
Iteration   5: 6999.305 ns/op
Iteration   6: 6769.385 ns/op
Iteration   7: 6480.174 ns/op
Iteration   8: 7597.472 ns/op
Iteration   9: 6456.326 ns/op
Iteration  10: 7331.463 ns/op

# Run progress: 78.50% complete, ETA 00:15:27
# Fork: 2 of 2
# Warmup Iteration   1: 15939.953 ns/op
# Warmup Iteration   2: 8997.386 ns/op
# Warmup Iteration   3: 8840.478 ns/op
Iteration   1: 16917.800 ns/op
Iteration   2: 11348.620 ns/op
Iteration   3: 5988.472 ns/op
Iteration   4: 8195.908 ns/op
Iteration   5: 7010.891 ns/op
Iteration   6: 6824.928 ns/op
Iteration   7: 6492.993 ns/op
Iteration   8: 7555.044 ns/op
Iteration   9: 6444.424 ns/op
Iteration  10: 7277.210 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8346.417 ±(99.9%) 2716.067 ns/op [Average]
  (min, avg, max) = (5988.472, 8346.417, 16917.800), stdev = 3127.827
  CI (99.9%): [5630.350, 11062.485] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 78.56% complete, ETA 00:15:25
# Fork: 1 of 2
# Warmup Iteration   1: 14313.813 ns/op
# Warmup Iteration   2: 9115.799 ns/op
# Warmup Iteration   3: 7755.816 ns/op
Iteration   1: 7777.526 ns/op
Iteration   2: 7739.520 ns/op
Iteration   3: 7784.425 ns/op
Iteration   4: 7748.987 ns/op
Iteration   5: 7766.452 ns/op
Iteration   6: 7755.042 ns/op
Iteration   7: 7806.742 ns/op
Iteration   8: 7752.412 ns/op
Iteration   9: 7806.410 ns/op
Iteration  10: 7753.786 ns/op

# Run progress: 78.61% complete, ETA 00:15:23
# Fork: 2 of 2
# Warmup Iteration   1: 14278.062 ns/op
# Warmup Iteration   2: 9426.902 ns/op
# Warmup Iteration   3: 7986.884 ns/op
Iteration   1: 8025.660 ns/op
Iteration   2: 7985.145 ns/op
Iteration   3: 8005.531 ns/op
Iteration   4: 7995.399 ns/op
Iteration   5: 7994.409 ns/op
Iteration   6: 7995.516 ns/op
Iteration   7: 8008.800 ns/op
Iteration   8: 8005.685 ns/op
Iteration   9: 8057.322 ns/op
Iteration  10: 7991.127 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7887.795 ±(99.9%) 107.424 ns/op [Average]
  (min, avg, max) = (7739.520, 7887.795, 8057.322), stdev = 123.710
  CI (99.9%): [7780.371, 7995.219] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 78.67% complete, ETA 00:15:20
# Fork: 1 of 2
# Warmup Iteration   1: 38.053 ns/op
# Warmup Iteration   2: 66.490 ns/op
# Warmup Iteration   3: 35.695 ns/op
Iteration   1: 35.762 ns/op
Iteration   2: 35.694 ns/op
Iteration   3: 35.785 ns/op
Iteration   4: 35.743 ns/op
Iteration   5: 35.739 ns/op
Iteration   6: 36.141 ns/op
Iteration   7: 35.740 ns/op
Iteration   8: 34.443 ns/op
Iteration   9: 35.651 ns/op
Iteration  10: 35.669 ns/op

# Run progress: 78.72% complete, ETA 00:15:18
# Fork: 2 of 2
# Warmup Iteration   1: 38.617 ns/op
# Warmup Iteration   2: 64.349 ns/op
# Warmup Iteration   3: 35.692 ns/op
Iteration   1: 35.666 ns/op
Iteration   2: 35.662 ns/op
Iteration   3: 35.693 ns/op
Iteration   4: 35.715 ns/op
Iteration   5: 35.682 ns/op
Iteration   6: 36.161 ns/op
Iteration   7: 35.686 ns/op
Iteration   8: 34.552 ns/op
Iteration   9: 35.677 ns/op
Iteration  10: 35.656 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.626 ±(99.9%) 0.358 ns/op [Average]
  (min, avg, max) = (34.443, 35.626, 36.161), stdev = 0.412
  CI (99.9%): [35.268, 35.983] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 78.78% complete, ETA 00:15:15
# Fork: 1 of 2
# Warmup Iteration   1: 5495.752 ns/op
# Warmup Iteration   2: 3323.384 ns/op
# Warmup Iteration   3: 2889.435 ns/op
Iteration   1: 2874.445 ns/op
Iteration   2: 2873.124 ns/op
Iteration   3: 2867.923 ns/op
Iteration   4: 2873.580 ns/op
Iteration   5: 2874.174 ns/op
Iteration   6: 2886.948 ns/op
Iteration   7: 2867.437 ns/op
Iteration   8: 2882.473 ns/op
Iteration   9: 2884.058 ns/op
Iteration  10: 2910.819 ns/op

# Run progress: 78.83% complete, ETA 00:15:13
# Fork: 2 of 2
# Warmup Iteration   1: 5639.553 ns/op
# Warmup Iteration   2: 3350.479 ns/op
# Warmup Iteration   3: 2830.806 ns/op
Iteration   1: 2853.522 ns/op
Iteration   2: 2893.769 ns/op
Iteration   3: 2838.564 ns/op
Iteration   4: 2872.739 ns/op
Iteration   5: 2868.846 ns/op
Iteration   6: 2882.235 ns/op
Iteration   7: 2849.704 ns/op
Iteration   8: 2879.014 ns/op
Iteration   9: 2903.988 ns/op
Iteration  10: 2875.141 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2875.625 ±(99.9%) 14.643 ns/op [Average]
  (min, avg, max) = (2838.564, 2875.625, 2910.819), stdev = 16.862
  CI (99.9%): [2860.983, 2890.268] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 78.89% complete, ETA 00:15:11
# Fork: 1 of 2
# Warmup Iteration   1: 2920.126 ns/op
# Warmup Iteration   2: 2286.952 ns/op
# Warmup Iteration   3: 2019.162 ns/op
Iteration   1: 2020.370 ns/op
Iteration   2: 2013.428 ns/op
Iteration   3: 2016.925 ns/op
Iteration   4: 2011.833 ns/op
Iteration   5: 2015.474 ns/op
Iteration   6: 2019.441 ns/op
Iteration   7: 2012.281 ns/op
Iteration   8: 2016.640 ns/op
Iteration   9: 2014.959 ns/op
Iteration  10: 2012.707 ns/op

# Run progress: 78.94% complete, ETA 00:15:08
# Fork: 2 of 2
# Warmup Iteration   1: 3650.814 ns/op
# Warmup Iteration   2: 2367.165 ns/op
# Warmup Iteration   3: 2028.382 ns/op
Iteration   1: 2025.847 ns/op
Iteration   2: 2036.181 ns/op
Iteration   3: 2031.205 ns/op
Iteration   4: 2026.877 ns/op
Iteration   5: 2030.872 ns/op
Iteration   6: 2025.394 ns/op
Iteration   7: 2024.594 ns/op
Iteration   8: 2043.126 ns/op
Iteration   9: 2035.650 ns/op
Iteration  10: 2029.998 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2023.190 ±(99.9%) 7.977 ns/op [Average]
  (min, avg, max) = (2011.833, 2023.190, 2043.126), stdev = 9.186
  CI (99.9%): [2015.214, 2031.167] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 79.00% complete, ETA 00:15:06
# Fork: 1 of 2
# Warmup Iteration   1: 4013.551 ns/op
# Warmup Iteration   2: 2678.050 ns/op
# Warmup Iteration   3: 2239.087 ns/op
Iteration   1: 2242.102 ns/op
Iteration   2: 2250.404 ns/op
Iteration   3: 2244.366 ns/op
Iteration   4: 2241.491 ns/op
Iteration   5: 2241.827 ns/op
Iteration   6: 2238.310 ns/op
Iteration   7: 2241.139 ns/op
Iteration   8: 2247.778 ns/op
Iteration   9: 2234.546 ns/op
Iteration  10: 2234.507 ns/op

# Run progress: 79.06% complete, ETA 00:15:03
# Fork: 2 of 2
# Warmup Iteration   1: 4728.368 ns/op
# Warmup Iteration   2: 2480.064 ns/op
# Warmup Iteration   3: 2146.640 ns/op
Iteration   1: 2151.287 ns/op
Iteration   2: 2143.635 ns/op
Iteration   3: 2132.270 ns/op
Iteration   4: 2134.813 ns/op
Iteration   5: 2140.956 ns/op
Iteration   6: 2151.005 ns/op
Iteration   7: 2151.447 ns/op
Iteration   8: 2157.847 ns/op
Iteration   9: 2148.188 ns/op
Iteration  10: 2142.061 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2193.499 ±(99.9%) 43.273 ns/op [Average]
  (min, avg, max) = (2132.270, 2193.499, 2250.404), stdev = 49.833
  CI (99.9%): [2150.226, 2236.772] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 79.11% complete, ETA 00:15:01
# Fork: 1 of 2
# Warmup Iteration   1: 2675.348 ns/op
# Warmup Iteration   2: 2274.008 ns/op
# Warmup Iteration   3: 2008.464 ns/op
Iteration   1: 2006.040 ns/op
Iteration   2: 2007.119 ns/op
Iteration   3: 2019.219 ns/op
Iteration   4: 2007.326 ns/op
Iteration   5: 2007.089 ns/op
Iteration   6: 2009.036 ns/op
Iteration   7: 2009.380 ns/op
Iteration   8: 2012.864 ns/op
Iteration   9: 2007.752 ns/op
Iteration  10: 2006.520 ns/op

# Run progress: 79.17% complete, ETA 00:14:59
# Fork: 2 of 2
# Warmup Iteration   1: 3067.808 ns/op
# Warmup Iteration   2: 2394.439 ns/op
# Warmup Iteration   3: 2003.486 ns/op
Iteration   1: 2004.623 ns/op
Iteration   2: 2004.261 ns/op
Iteration   3: 2004.091 ns/op
Iteration   4: 1999.809 ns/op
Iteration   5: 2006.148 ns/op
Iteration   6: 1986.935 ns/op
Iteration   7: 2004.166 ns/op
Iteration   8: 2008.101 ns/op
Iteration   9: 2004.036 ns/op
Iteration  10: 2000.802 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2005.766 ±(99.9%) 5.263 ns/op [Average]
  (min, avg, max) = (1986.935, 2005.766, 2019.219), stdev = 6.061
  CI (99.9%): [2000.503, 2011.029] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 79.22% complete, ETA 00:14:56
# Fork: 1 of 2
# Warmup Iteration   1: 13808.640 ns/op
# Warmup Iteration   2: 9196.213 ns/op
# Warmup Iteration   3: 8112.424 ns/op
Iteration   1: 8100.276 ns/op
Iteration   2: 8081.030 ns/op
Iteration   3: 8089.771 ns/op
Iteration   4: 8072.950 ns/op
Iteration   5: 8111.997 ns/op
Iteration   6: 8058.469 ns/op
Iteration   7: 8102.790 ns/op
Iteration   8: 8087.867 ns/op
Iteration   9: 8101.665 ns/op
Iteration  10: 8105.041 ns/op

# Run progress: 79.28% complete, ETA 00:14:54
# Fork: 2 of 2
# Warmup Iteration   1: 12647.164 ns/op
# Warmup Iteration   2: 9625.733 ns/op
# Warmup Iteration   3: 8043.370 ns/op
Iteration   1: 8034.144 ns/op
Iteration   2: 8035.315 ns/op
Iteration   3: 8062.830 ns/op
Iteration   4: 8038.480 ns/op
Iteration   5: 8036.039 ns/op
Iteration   6: 8014.683 ns/op
Iteration   7: 8052.728 ns/op
Iteration   8: 8029.284 ns/op
Iteration   9: 8068.576 ns/op
Iteration  10: 8050.124 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8066.703 ±(99.9%) 25.854 ns/op [Average]
  (min, avg, max) = (8014.683, 8066.703, 8111.997), stdev = 29.773
  CI (99.9%): [8040.849, 8092.557] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 79.33% complete, ETA 00:14:51
# Fork: 1 of 2
# Warmup Iteration   1: 37.580 ns/op
# Warmup Iteration   2: 66.415 ns/op
# Warmup Iteration   3: 35.694 ns/op
Iteration   1: 35.735 ns/op
Iteration   2: 35.699 ns/op
Iteration   3: 35.725 ns/op
Iteration   4: 35.746 ns/op
Iteration   5: 35.651 ns/op
Iteration   6: 36.159 ns/op
Iteration   7: 35.686 ns/op
Iteration   8: 34.537 ns/op
Iteration   9: 35.703 ns/op
Iteration  10: 35.646 ns/op

# Run progress: 79.39% complete, ETA 00:14:49
# Fork: 2 of 2
# Warmup Iteration   1: 55.870 ns/op
# Warmup Iteration   2: 66.411 ns/op
# Warmup Iteration   3: 35.643 ns/op
Iteration   1: 35.722 ns/op
Iteration   2: 35.671 ns/op
Iteration   3: 35.659 ns/op
Iteration   4: 35.658 ns/op
Iteration   5: 35.653 ns/op
Iteration   6: 36.133 ns/op
Iteration   7: 35.731 ns/op
Iteration   8: 34.529 ns/op
Iteration   9: 35.668 ns/op
Iteration  10: 35.729 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.622 ±(99.9%) 0.346 ns/op [Average]
  (min, avg, max) = (34.529, 35.622, 36.159), stdev = 0.399
  CI (99.9%): [35.276, 35.968] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 79.44% complete, ETA 00:14:47
# Fork: 1 of 2
# Warmup Iteration   1: 7069.486 ns/op
# Warmup Iteration   2: 7825.394 ns/op
# Warmup Iteration   3: 4960.332 ns/op
Iteration   1: 3518.060 ns/op
Iteration   2: 3805.111 ns/op
Iteration   3: 3732.049 ns/op
Iteration   4: 2788.800 ns/op
Iteration   5: 7850.507 ns/op
Iteration   6: 11080.625 ns/op
Iteration   7: 3913.081 ns/op
Iteration   8: 3883.784 ns/op
Iteration   9: 4005.185 ns/op
Iteration  10: 3437.199 ns/op

# Run progress: 79.50% complete, ETA 00:14:44
# Fork: 2 of 2
# Warmup Iteration   1: 6787.846 ns/op
# Warmup Iteration   2: 8270.166 ns/op
# Warmup Iteration   3: 4659.432 ns/op
Iteration   1: 3445.694 ns/op
Iteration   2: 3824.606 ns/op
Iteration   3: 3691.366 ns/op
Iteration   4: 2780.720 ns/op
Iteration   5: 9395.829 ns/op
Iteration   6: 33991.077 ns/op
Iteration   7: 3895.203 ns/op
Iteration   8: 3863.580 ns/op
Iteration   9: 3974.774 ns/op
Iteration  10: 3445.571 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6016.141 ±(99.9%) 6031.462 ns/op [Average]
  (min, avg, max) = (2780.720, 6016.141, 33991.077), stdev = 6945.840
  CI (99.9%): [≈ 0, 12047.603] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 79.56% complete, ETA 00:14:42
# Fork: 1 of 2
# Warmup Iteration   1: 7058.213 ns/op
# Warmup Iteration   2: 3769.106 ns/op
# Warmup Iteration   3: 3788.937 ns/op
Iteration   1: 2562.242 ns/op
Iteration   2: 2889.978 ns/op
Iteration   3: 2710.241 ns/op
Iteration   4: 2073.815 ns/op
Iteration   5: 2691.789 ns/op
Iteration   6: 2992.668 ns/op
Iteration   7: 2888.168 ns/op
Iteration   8: 2974.164 ns/op
Iteration   9: 2876.815 ns/op
Iteration  10: 3122.696 ns/op

# Run progress: 79.61% complete, ETA 00:14:39
# Fork: 2 of 2
# Warmup Iteration   1: 6686.984 ns/op
# Warmup Iteration   2: 3848.143 ns/op
# Warmup Iteration   3: 4522.044 ns/op
Iteration   1: 2556.902 ns/op
Iteration   2: 2891.229 ns/op
Iteration   3: 2686.105 ns/op
Iteration   4: 2187.867 ns/op
Iteration   5: 2720.645 ns/op
Iteration   6: 3002.272 ns/op
Iteration   7: 2852.059 ns/op
Iteration   8: 2995.221 ns/op
Iteration   9: 2903.279 ns/op
Iteration  10: 3224.814 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2790.148 ±(99.9%) 246.360 ns/op [Average]
  (min, avg, max) = (2073.815, 2790.148, 3224.814), stdev = 283.708
  CI (99.9%): [2543.789, 3036.508] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 79.67% complete, ETA 00:14:37
# Fork: 1 of 2
# Warmup Iteration   1: 8125.206 ns/op
# Warmup Iteration   2: 3886.821 ns/op
# Warmup Iteration   3: 3780.981 ns/op
Iteration   1: 2609.287 ns/op
Iteration   2: 9489.402 ns/op
Iteration   3: 2433.308 ns/op
Iteration   4: 1702.251 ns/op
Iteration   5: 2398.507 ns/op
Iteration   6: 2870.647 ns/op
Iteration   7: 2596.954 ns/op
Iteration   8: 2527.447 ns/op
Iteration   9: 2616.943 ns/op
Iteration  10: 2377.938 ns/op

# Run progress: 79.72% complete, ETA 00:14:35
# Fork: 2 of 2
# Warmup Iteration   1: 6625.147 ns/op
# Warmup Iteration   2: 3720.743 ns/op
# Warmup Iteration   3: 4128.949 ns/op
Iteration   1: 2570.518 ns/op
Iteration   2: 8156.165 ns/op
Iteration   3: 2422.851 ns/op
Iteration   4: 1704.673 ns/op
Iteration   5: 2414.945 ns/op
Iteration   6: 2833.548 ns/op
Iteration   7: 2594.541 ns/op
Iteration   8: 2540.162 ns/op
Iteration   9: 2669.561 ns/op
Iteration  10: 2362.318 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3094.598 ±(99.9%) 1730.215 ns/op [Average]
  (min, avg, max) = (1702.251, 3094.598, 9489.402), stdev = 1992.518
  CI (99.9%): [1364.384, 4824.813] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 79.78% complete, ETA 00:14:32
# Fork: 1 of 2
# Warmup Iteration   1: 4397.217 ns/op
# Warmup Iteration   2: 3177.052 ns/op
# Warmup Iteration   3: 3731.419 ns/op
Iteration   1: 2315.624 ns/op
Iteration   2: 2768.171 ns/op
Iteration   3: 2511.499 ns/op
Iteration   4: 3149.038 ns/op
Iteration   5: 2409.238 ns/op
Iteration   6: 2657.930 ns/op
Iteration   7: 2554.380 ns/op
Iteration   8: 2734.566 ns/op
Iteration   9: 2667.045 ns/op
Iteration  10: 2825.560 ns/op

# Run progress: 79.83% complete, ETA 00:14:30
# Fork: 2 of 2
# Warmup Iteration   1: 4671.012 ns/op
# Warmup Iteration   2: 3354.815 ns/op
# Warmup Iteration   3: 3383.818 ns/op
Iteration   1: 2299.178 ns/op
Iteration   2: 2685.636 ns/op
Iteration   3: 2441.560 ns/op
Iteration   4: 4619.324 ns/op
Iteration   5: 2397.360 ns/op
Iteration   6: 2649.120 ns/op
Iteration   7: 2547.000 ns/op
Iteration   8: 2681.721 ns/op
Iteration   9: 2633.302 ns/op
Iteration  10: 2748.558 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2714.791 ±(99.9%) 424.796 ns/op [Average]
  (min, avg, max) = (2299.178, 2714.791, 4619.324), stdev = 489.196
  CI (99.9%): [2289.994, 3139.587] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 79.89% complete, ETA 00:14:27
# Fork: 1 of 2
# Warmup Iteration   1: 16123.886 ns/op
# Warmup Iteration   2: 26951.005 ns/op
# Warmup Iteration   3: 10272.187 ns/op
Iteration   1: 10607.064 ns/op
Iteration   2: 10853.831 ns/op
Iteration   3: 10785.595 ns/op
Iteration   4: 9467.464 ns/op
Iteration   5: 10902.666 ns/op
Iteration   6: 10840.674 ns/op
Iteration   7: 13599.110 ns/op
Iteration   8: 10431.666 ns/op
Iteration   9: 11044.610 ns/op
Iteration  10: 10279.215 ns/op

# Run progress: 79.94% complete, ETA 00:14:25
# Fork: 2 of 2
# Warmup Iteration   1: 16750.007 ns/op
# Warmup Iteration   2: 22758.466 ns/op
# Warmup Iteration   3: 10462.342 ns/op
Iteration   1: 10763.023 ns/op
Iteration   2: 11002.465 ns/op
Iteration   3: 10906.041 ns/op
Iteration   4: 9745.142 ns/op
Iteration   5: 10961.628 ns/op
Iteration   6: 10948.000 ns/op
Iteration   7: 13757.560 ns/op
Iteration   8: 10528.742 ns/op
Iteration   9: 11054.440 ns/op
Iteration  10: 10526.730 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10950.283 ±(99.9%) 887.628 ns/op [Average]
  (min, avg, max) = (9467.464, 10950.283, 13757.560), stdev = 1022.194
  CI (99.9%): [10062.655, 11837.912] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 80.00% complete, ETA 00:14:23
# Fork: 1 of 2
# Warmup Iteration   1: 38.081 ns/op
# Warmup Iteration   2: 66.734 ns/op
# Warmup Iteration   3: 35.665 ns/op
Iteration   1: 35.631 ns/op
Iteration   2: 35.604 ns/op
Iteration   3: 35.734 ns/op
Iteration   4: 35.742 ns/op
Iteration   5: 35.687 ns/op
Iteration   6: 36.185 ns/op
Iteration   7: 35.745 ns/op
Iteration   8: 34.535 ns/op
Iteration   9: 35.673 ns/op
Iteration  10: 35.675 ns/op

# Run progress: 80.06% complete, ETA 00:14:20
# Fork: 2 of 2
# Warmup Iteration   1: 38.617 ns/op
# Warmup Iteration   2: 66.611 ns/op
# Warmup Iteration   3: 35.627 ns/op
Iteration   1: 35.682 ns/op
Iteration   2: 35.725 ns/op
Iteration   3: 35.624 ns/op
Iteration   4: 35.619 ns/op
Iteration   5: 35.683 ns/op
Iteration   6: 36.135 ns/op
Iteration   7: 35.673 ns/op
Iteration   8: 34.440 ns/op
Iteration   9: 35.670 ns/op
Iteration  10: 35.711 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.609 ±(99.9%) 0.359 ns/op [Average]
  (min, avg, max) = (34.440, 35.609, 36.185), stdev = 0.413
  CI (99.9%): [35.250, 35.967] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 80.11% complete, ETA 00:14:18
# Fork: 1 of 2
# Warmup Iteration   1: 16057.974 ns/op
# Warmup Iteration   2: 9105.659 ns/op
# Warmup Iteration   3: 7692.584 ns/op
Iteration   1: 7718.108 ns/op
Iteration   2: 7705.219 ns/op
Iteration   3: 7744.168 ns/op
Iteration   4: 7744.630 ns/op
Iteration   5: 7698.599 ns/op
Iteration   6: 7755.060 ns/op
Iteration   7: 7729.873 ns/op
Iteration   8: 7725.204 ns/op
Iteration   9: 7688.317 ns/op
Iteration  10: 7761.451 ns/op

# Run progress: 80.17% complete, ETA 00:14:15
# Fork: 2 of 2
# Warmup Iteration   1: 16743.986 ns/op
# Warmup Iteration   2: 8907.896 ns/op
# Warmup Iteration   3: 7751.061 ns/op
Iteration   1: 8202.919 ns/op
Iteration   2: 7773.464 ns/op
Iteration   3: 7768.538 ns/op
Iteration   4: 7809.876 ns/op
Iteration   5: 7772.437 ns/op
Iteration   6: 7757.266 ns/op
Iteration   7: 7766.635 ns/op
Iteration   8: 7808.572 ns/op
Iteration   9: 7802.880 ns/op
Iteration  10: 7827.679 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7778.045 ±(99.9%) 92.948 ns/op [Average]
  (min, avg, max) = (7688.317, 7778.045, 8202.919), stdev = 107.039
  CI (99.9%): [7685.097, 7870.992] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 80.22% complete, ETA 00:14:13
# Fork: 1 of 2
# Warmup Iteration   1: 14416.038 ns/op
# Warmup Iteration   2: 7623.533 ns/op
# Warmup Iteration   3: 6557.796 ns/op
Iteration   1: 6569.650 ns/op
Iteration   2: 6612.209 ns/op
Iteration   3: 6592.787 ns/op
Iteration   4: 6543.774 ns/op
Iteration   5: 6559.202 ns/op
Iteration   6: 6578.396 ns/op
Iteration   7: 6549.351 ns/op
Iteration   8: 6568.128 ns/op
Iteration   9: 6601.442 ns/op
Iteration  10: 6570.085 ns/op

# Run progress: 80.28% complete, ETA 00:14:11
# Fork: 2 of 2
# Warmup Iteration   1: 14556.629 ns/op
# Warmup Iteration   2: 7657.212 ns/op
# Warmup Iteration   3: 6625.917 ns/op
Iteration   1: 6609.373 ns/op
Iteration   2: 6606.346 ns/op
Iteration   3: 6607.612 ns/op
Iteration   4: 6619.283 ns/op
Iteration   5: 6631.245 ns/op
Iteration   6: 6627.103 ns/op
Iteration   7: 6612.342 ns/op
Iteration   8: 6634.010 ns/op
Iteration   9: 6609.183 ns/op
Iteration  10: 6597.415 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6594.947 ±(99.9%) 23.614 ns/op [Average]
  (min, avg, max) = (6543.774, 6594.947, 6634.010), stdev = 27.194
  CI (99.9%): [6571.333, 6618.561] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 80.33% complete, ETA 00:14:08
# Fork: 1 of 2
# Warmup Iteration   1: 12581.307 ns/op
# Warmup Iteration   2: 7494.811 ns/op
# Warmup Iteration   3: 6537.572 ns/op
Iteration   1: 6551.025 ns/op
Iteration   2: 9095.104 ns/op
Iteration   3: 6588.360 ns/op
Iteration   4: 6566.014 ns/op
Iteration   5: 6585.612 ns/op
Iteration   6: 6559.057 ns/op
Iteration   7: 6537.457 ns/op
Iteration   8: 6544.502 ns/op
Iteration   9: 6543.929 ns/op
Iteration  10: 8588.476 ns/op

# Run progress: 80.39% complete, ETA 00:14:06
# Fork: 2 of 2
# Warmup Iteration   1: 14346.761 ns/op
# Warmup Iteration   2: 8199.485 ns/op
# Warmup Iteration   3: 6536.424 ns/op
Iteration   1: 6530.861 ns/op
Iteration   2: 6585.928 ns/op
Iteration   3: 6583.946 ns/op
Iteration   4: 6566.674 ns/op
Iteration   5: 6569.474 ns/op
Iteration   6: 6508.927 ns/op
Iteration   7: 6567.144 ns/op
Iteration   8: 6568.180 ns/op
Iteration   9: 6584.482 ns/op
Iteration  10: 6583.740 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6790.445 ±(99.9%) 613.635 ns/op [Average]
  (min, avg, max) = (6508.927, 6790.445, 9095.104), stdev = 706.663
  CI (99.9%): [6176.810, 7404.079] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 80.44% complete, ETA 00:14:03
# Fork: 1 of 2
# Warmup Iteration   1: 11386.846 ns/op
# Warmup Iteration   2: 7363.136 ns/op
# Warmup Iteration   3: 6505.011 ns/op
Iteration   1: 6495.909 ns/op
Iteration   2: 6532.384 ns/op
Iteration   3: 6579.251 ns/op
Iteration   4: 6564.648 ns/op
Iteration   5: 6503.700 ns/op
Iteration   6: 6506.355 ns/op
Iteration   7: 6483.458 ns/op
Iteration   8: 6557.541 ns/op
Iteration   9: 6515.394 ns/op
Iteration  10: 6479.915 ns/op

# Run progress: 80.50% complete, ETA 00:14:01
# Fork: 2 of 2
# Warmup Iteration   1: 10358.206 ns/op
# Warmup Iteration   2: 7577.023 ns/op
# Warmup Iteration   3: 6621.828 ns/op
Iteration   1: 6685.173 ns/op
Iteration   2: 6683.768 ns/op
Iteration   3: 6652.061 ns/op
Iteration   4: 6694.959 ns/op
Iteration   5: 6666.243 ns/op
Iteration   6: 6667.937 ns/op
Iteration   7: 6702.190 ns/op
Iteration   8: 6700.736 ns/op
Iteration   9: 6688.141 ns/op
Iteration  10: 6721.870 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6604.082 ±(99.9%) 77.149 ns/op [Average]
  (min, avg, max) = (6479.915, 6604.082, 6721.870), stdev = 88.845
  CI (99.9%): [6526.933, 6681.231] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 80.56% complete, ETA 00:13:59
# Fork: 1 of 2
# Warmup Iteration   1: 15534.156 ns/op
# Warmup Iteration   2: 10047.563 ns/op
# Warmup Iteration   3: 8961.628 ns/op
Iteration   1: 8880.409 ns/op
Iteration   2: 8857.587 ns/op
Iteration   3: 8884.092 ns/op
Iteration   4: 8879.375 ns/op
Iteration   5: 8893.270 ns/op
Iteration   6: 8858.275 ns/op
Iteration   7: 8904.225 ns/op
Iteration   8: 8861.583 ns/op
Iteration   9: 8890.248 ns/op
Iteration  10: 8977.002 ns/op

# Run progress: 80.61% complete, ETA 00:13:56
# Fork: 2 of 2
# Warmup Iteration   1: 14215.535 ns/op
# Warmup Iteration   2: 9925.196 ns/op
# Warmup Iteration   3: 8601.901 ns/op
Iteration   1: 8552.234 ns/op
Iteration   2: 8506.360 ns/op
Iteration   3: 8510.703 ns/op
Iteration   4: 8528.195 ns/op
Iteration   5: 8514.685 ns/op
Iteration   6: 8570.559 ns/op
Iteration   7: 8523.583 ns/op
Iteration   8: 8531.942 ns/op
Iteration   9: 8568.146 ns/op
Iteration  10: 8625.461 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8715.897 ±(99.9%) 156.814 ns/op [Average]
  (min, avg, max) = (8506.360, 8715.897, 8977.002), stdev = 180.587
  CI (99.9%): [8559.083, 8872.711] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 80.67% complete, ETA 00:13:54
# Fork: 1 of 2
# Warmup Iteration   1: 38.709 ns/op
# Warmup Iteration   2: 67.336 ns/op
# Warmup Iteration   3: 35.652 ns/op
Iteration   1: 35.661 ns/op
Iteration   2: 35.659 ns/op
Iteration   3: 35.729 ns/op
Iteration   4: 35.735 ns/op
Iteration   5: 35.674 ns/op
Iteration   6: 36.154 ns/op
Iteration   7: 35.666 ns/op
Iteration   8: 34.532 ns/op
Iteration   9: 35.667 ns/op
Iteration  10: 35.638 ns/op

# Run progress: 80.72% complete, ETA 00:13:51
# Fork: 2 of 2
# Warmup Iteration   1: 37.767 ns/op
# Warmup Iteration   2: 64.840 ns/op
# Warmup Iteration   3: 35.676 ns/op
Iteration   1: 35.762 ns/op
Iteration   2: 35.668 ns/op
Iteration   3: 35.705 ns/op
Iteration   4: 35.606 ns/op
Iteration   5: 35.720 ns/op
Iteration   6: 36.150 ns/op
Iteration   7: 35.715 ns/op
Iteration   8: 34.512 ns/op
Iteration   9: 35.716 ns/op
Iteration  10: 35.726 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.620 ±(99.9%) 0.350 ns/op [Average]
  (min, avg, max) = (34.512, 35.620, 36.154), stdev = 0.403
  CI (99.9%): [35.270, 35.970] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 80.78% complete, ETA 00:13:49
# Fork: 1 of 2
# Warmup Iteration   1: 1793.433 ns/op
# Warmup Iteration   2: 1562.405 ns/op
# Warmup Iteration   3: 1343.400 ns/op
Iteration   1: 1344.500 ns/op
Iteration   2: 1344.961 ns/op
Iteration   3: 1349.972 ns/op
Iteration   4: 1332.806 ns/op
Iteration   5: 1345.625 ns/op
Iteration   6: 1333.556 ns/op
Iteration   7: 1345.213 ns/op
Iteration   8: 1339.638 ns/op
Iteration   9: 1332.012 ns/op
Iteration  10: 1331.511 ns/op

# Run progress: 80.83% complete, ETA 00:13:47
# Fork: 2 of 2
# Warmup Iteration   1: 2016.580 ns/op
# Warmup Iteration   2: 1540.749 ns/op
# Warmup Iteration   3: 1356.470 ns/op
Iteration   1: 1357.113 ns/op
Iteration   2: 1356.771 ns/op
Iteration   3: 1358.086 ns/op
Iteration   4: 1381.079 ns/op
Iteration   5: 1361.236 ns/op
Iteration   6: 1348.127 ns/op
Iteration   7: 1360.187 ns/op
Iteration   8: 1333.291 ns/op
Iteration   9: 1346.858 ns/op
Iteration  10: 1346.908 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1347.472 ±(99.9%) 10.854 ns/op [Average]
  (min, avg, max) = (1331.511, 1347.472, 1381.079), stdev = 12.500
  CI (99.9%): [1336.618, 1358.327] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 80.89% complete, ETA 00:13:44
# Fork: 1 of 2
# Warmup Iteration   1: 21319.009 ns/op
# Warmup Iteration   2: 10483.878 ns/op
# Warmup Iteration   3: 9576.357 ns/op
Iteration   1: 9236.107 ns/op
Iteration   2: 9223.651 ns/op
Iteration   3: 9227.675 ns/op
Iteration   4: 9254.937 ns/op
Iteration   5: 9220.810 ns/op
Iteration   6: 9197.984 ns/op
Iteration   7: 9183.276 ns/op
Iteration   8: 9187.206 ns/op
Iteration   9: 9263.291 ns/op
Iteration  10: 9218.287 ns/op

# Run progress: 80.94% complete, ETA 00:13:42
# Fork: 2 of 2
# Warmup Iteration   1: 25298.673 ns/op
# Warmup Iteration   2: 10295.426 ns/op
# Warmup Iteration   3: 9622.753 ns/op
Iteration   1: 9215.480 ns/op
Iteration   2: 9202.041 ns/op
Iteration   3: 9220.249 ns/op
Iteration   4: 9198.985 ns/op
Iteration   5: 9164.855 ns/op
Iteration   6: 9236.645 ns/op
Iteration   7: 9180.991 ns/op
Iteration   8: 9218.853 ns/op
Iteration   9: 9206.837 ns/op
Iteration  10: 9210.021 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9213.409 ±(99.9%) 21.241 ns/op [Average]
  (min, avg, max) = (9164.855, 9213.409, 9263.291), stdev = 24.461
  CI (99.9%): [9192.168, 9234.650] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 81.00% complete, ETA 00:13:39
# Fork: 1 of 2
# Warmup Iteration   1: 42157.445 ns/op
# Warmup Iteration   2: 9839.339 ns/op
# Warmup Iteration   3: 9032.816 ns/op
Iteration   1: 8687.698 ns/op
Iteration   2: 8656.570 ns/op
Iteration   3: 8666.566 ns/op
Iteration   4: 8681.630 ns/op
Iteration   5: 8676.818 ns/op
Iteration   6: 8674.888 ns/op
Iteration   7: 8620.156 ns/op
Iteration   8: 8654.191 ns/op
Iteration   9: 8673.329 ns/op
Iteration  10: 8671.382 ns/op

# Run progress: 81.06% complete, ETA 00:13:37
# Fork: 2 of 2
# Warmup Iteration   1: 20340.559 ns/op
# Warmup Iteration   2: 9865.747 ns/op
# Warmup Iteration   3: 8694.818 ns/op
Iteration   1: 8679.167 ns/op
Iteration   2: 8689.490 ns/op
Iteration   3: 8692.451 ns/op
Iteration   4: 8719.699 ns/op
Iteration   5: 8699.784 ns/op
Iteration   6: 8696.766 ns/op
Iteration   7: 8722.660 ns/op
Iteration   8: 8698.422 ns/op
Iteration   9: 8705.611 ns/op
Iteration  10: 8673.278 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8682.028 ±(99.9%) 20.380 ns/op [Average]
  (min, avg, max) = (8620.156, 8682.028, 8722.660), stdev = 23.470
  CI (99.9%): [8661.647, 8702.408] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 81.11% complete, ETA 00:13:35
# Fork: 1 of 2
# Warmup Iteration   1: 11064.547 ns/op
# Warmup Iteration   2: 7337.887 ns/op
# Warmup Iteration   3: 6544.624 ns/op
Iteration   1: 6513.540 ns/op
Iteration   2: 6480.580 ns/op
Iteration   3: 6538.553 ns/op
Iteration   4: 6509.142 ns/op
Iteration   5: 6550.174 ns/op
Iteration   6: 6422.698 ns/op
Iteration   7: 6517.650 ns/op
Iteration   8: 6544.436 ns/op
Iteration   9: 6535.904 ns/op
Iteration  10: 6502.230 ns/op

# Run progress: 81.17% complete, ETA 00:13:32
# Fork: 2 of 2
# Warmup Iteration   1: 10977.604 ns/op
# Warmup Iteration   2: 7345.642 ns/op
# Warmup Iteration   3: 6449.960 ns/op
Iteration   1: 6508.747 ns/op
Iteration   2: 6465.856 ns/op
Iteration   3: 6449.865 ns/op
Iteration   4: 6484.382 ns/op
Iteration   5: 6450.269 ns/op
Iteration   6: 6470.069 ns/op
Iteration   7: 6458.368 ns/op
Iteration   8: 6475.596 ns/op
Iteration   9: 6444.355 ns/op
Iteration  10: 6510.860 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6491.664 ±(99.9%) 31.952 ns/op [Average]
  (min, avg, max) = (6422.698, 6491.664, 6550.174), stdev = 36.796
  CI (99.9%): [6459.711, 6523.616] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 81.22% complete, ETA 00:13:30
# Fork: 1 of 2
# Warmup Iteration   1: 1701.501 ns/op
# Warmup Iteration   2: 1562.017 ns/op
# Warmup Iteration   3: 1393.879 ns/op
Iteration   1: 1391.561 ns/op
Iteration   2: 1391.290 ns/op
Iteration   3: 1391.625 ns/op
Iteration   4: 1387.222 ns/op
Iteration   5: 1386.099 ns/op
Iteration   6: 1390.719 ns/op
Iteration   7: 1386.870 ns/op
Iteration   8: 1387.404 ns/op
Iteration   9: 1387.124 ns/op
Iteration  10: 1386.623 ns/op

# Run progress: 81.28% complete, ETA 00:13:28
# Fork: 2 of 2
# Warmup Iteration   1: 1709.728 ns/op
# Warmup Iteration   2: 1540.500 ns/op
# Warmup Iteration   3: 1391.827 ns/op
Iteration   1: 1390.706 ns/op
Iteration   2: 1389.827 ns/op
Iteration   3: 1391.120 ns/op
Iteration   4: 1386.751 ns/op
Iteration   5: 1387.374 ns/op
Iteration   6: 1389.535 ns/op
Iteration   7: 1386.118 ns/op
Iteration   8: 1386.784 ns/op
Iteration   9: 1385.756 ns/op
Iteration  10: 1388.080 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1388.429 ±(99.9%) 1.822 ns/op [Average]
  (min, avg, max) = (1385.756, 1388.429, 1391.625), stdev = 2.098
  CI (99.9%): [1386.607, 1390.251] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 81.33% complete, ETA 00:13:25
# Fork: 1 of 2
# Warmup Iteration   1: 38.651 ns/op
# Warmup Iteration   2: 65.434 ns/op
# Warmup Iteration   3: 35.702 ns/op
Iteration   1: 35.708 ns/op
Iteration   2: 35.697 ns/op
Iteration   3: 35.746 ns/op
Iteration   4: 35.762 ns/op
Iteration   5: 35.666 ns/op
Iteration   6: 36.148 ns/op
Iteration   7: 35.691 ns/op
Iteration   8: 34.472 ns/op
Iteration   9: 35.678 ns/op
Iteration  10: 35.730 ns/op

# Run progress: 81.39% complete, ETA 00:13:23
# Fork: 2 of 2
# Warmup Iteration   1: 37.880 ns/op
# Warmup Iteration   2: 66.911 ns/op
# Warmup Iteration   3: 35.683 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.659 ns/op
Iteration   3: 35.691 ns/op
Iteration   4: 35.667 ns/op
Iteration   5: 35.749 ns/op
Iteration   6: 36.178 ns/op
Iteration   7: 35.609 ns/op
Iteration   8: 34.515 ns/op
Iteration   9: 35.612 ns/op
Iteration  10: 35.746 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.621 ±(99.9%) 0.359 ns/op [Average]
  (min, avg, max) = (34.472, 35.621, 36.178), stdev = 0.413
  CI (99.9%): [35.262, 35.980] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 81.44% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 13267.115 ns/op
# Warmup Iteration   2: 27056.857 ns/op
# Warmup Iteration   3: 9923.375 ns/op
Iteration   1: 21078.829 ns/op
Iteration   2: 5219.394 ns/op
Iteration   3: 29703.814 ns/op
Iteration   4: 6341.324 ns/op
Iteration   5: 5804.738 ns/op
Iteration   6: 5479.866 ns/op
Iteration   7: 5607.889 ns/op
Iteration   8: 5620.815 ns/op
Iteration   9: 5709.023 ns/op
Iteration  10: 5493.490 ns/op

# Run progress: 81.50% complete, ETA 00:13:18
# Fork: 2 of 2
# Warmup Iteration   1: 11522.517 ns/op
# Warmup Iteration   2: 19296.414 ns/op
# Warmup Iteration   3: 10272.409 ns/op
Iteration   1: 29050.042 ns/op
Iteration   2: 5189.223 ns/op
Iteration   3: 61714.314 ns/op
Iteration   4: 6426.060 ns/op
Iteration   5: 5861.513 ns/op
Iteration   6: 5578.775 ns/op
Iteration   7: 5646.240 ns/op
Iteration   8: 5716.878 ns/op
Iteration   9: 5870.779 ns/op
Iteration  10: 5650.786 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11638.190 ±(99.9%) 12267.313 ns/op [Average]
  (min, avg, max) = (5189.223, 11638.190, 61714.314), stdev = 14127.055
  CI (99.9%): [≈ 0, 23905.502] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 81.56% complete, ETA 00:13:16
# Fork: 1 of 2
# Warmup Iteration   1: 18141.285 ns/op
# Warmup Iteration   2: 86796.835 ns/op
# Warmup Iteration   3: 9455.178 ns/op
Iteration   1: 6296.833 ns/op
Iteration   2: 6261.552 ns/op
Iteration   3: 7027.242 ns/op
Iteration   4: 6242.407 ns/op
Iteration   5: 19555.695 ns/op
Iteration   6: 5755.505 ns/op
Iteration   7: 5980.368 ns/op
Iteration   8: 7040.372 ns/op
Iteration   9: 5548.514 ns/op
Iteration  10: 6642.347 ns/op

# Run progress: 81.61% complete, ETA 00:13:13
# Fork: 2 of 2
# Warmup Iteration   1: 15124.159 ns/op
# Warmup Iteration   2: 217953.173 ns/op
# Warmup Iteration   3: 8950.890 ns/op
Iteration   1: 6132.611 ns/op
Iteration   2: 6008.407 ns/op
Iteration   3: 6795.147 ns/op
Iteration   4: 6103.319 ns/op
Iteration   5: 21769.668 ns/op
Iteration   6: 6017.043 ns/op
Iteration   7: 6229.310 ns/op
Iteration   8: 7369.408 ns/op
Iteration   9: 5896.602 ns/op
Iteration  10: 6985.973 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7782.916 ±(99.9%) 3860.161 ns/op [Average]
  (min, avg, max) = (5548.514, 7782.916, 21769.668), stdev = 4445.368
  CI (99.9%): [3922.755, 11643.078] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 81.67% complete, ETA 00:13:11
# Fork: 1 of 2
# Warmup Iteration   1: 18972.850 ns/op
# Warmup Iteration   2: 473932.747 ns/op
# Warmup Iteration   3: 8054.439 ns/op
Iteration   1: 5787.323 ns/op
Iteration   2: 5839.427 ns/op
Iteration   3: 6543.757 ns/op
Iteration   4: 5975.901 ns/op
Iteration   5: 17947.727 ns/op
Iteration   6: 5675.020 ns/op
Iteration   7: 6055.696 ns/op
Iteration   8: 7106.723 ns/op
Iteration   9: 5594.891 ns/op
Iteration  10: 6811.558 ns/op

# Run progress: 81.72% complete, ETA 00:13:08
# Fork: 2 of 2
# Warmup Iteration   1: 23168.678 ns/op
# Warmup Iteration   2: 208240.768 ns/op
# Warmup Iteration   3: 9416.070 ns/op
Iteration   1: 6518.490 ns/op
Iteration   2: 6061.763 ns/op
Iteration   3: 6662.956 ns/op
Iteration   4: 6133.163 ns/op
Iteration   5: 22774.024 ns/op
Iteration   6: 5995.424 ns/op
Iteration   7: 6257.774 ns/op
Iteration   8: 7301.219 ns/op
Iteration   9: 5749.766 ns/op
Iteration  10: 6890.972 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7684.179 ±(99.9%) 3848.794 ns/op [Average]
  (min, avg, max) = (5594.891, 7684.179, 22774.024), stdev = 4432.277
  CI (99.9%): [3835.385, 11532.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 81.78% complete, ETA 00:13:06
# Fork: 1 of 2
# Warmup Iteration   1: 14734.256 ns/op
# Warmup Iteration   2: 23566.612 ns/op
# Warmup Iteration   3: 8947.513 ns/op
Iteration   1: 6840.394 ns/op
Iteration   2: 9594.700 ns/op
Iteration   3: 7057.350 ns/op
Iteration   4: 6732.357 ns/op
Iteration   5: 10617.317 ns/op
Iteration   6: 6513.252 ns/op
Iteration   7: 6306.384 ns/op
Iteration   8: 7818.714 ns/op
Iteration   9: 6376.452 ns/op
Iteration  10: 7864.200 ns/op

# Run progress: 81.83% complete, ETA 00:13:04
# Fork: 2 of 2
# Warmup Iteration   1: 17112.060 ns/op
# Warmup Iteration   2: 21003.875 ns/op
# Warmup Iteration   3: 9421.591 ns/op
Iteration   1: 6937.481 ns/op
Iteration   2: 15539.007 ns/op
Iteration   3: 7126.788 ns/op
Iteration   4: 6677.238 ns/op
Iteration   5: 12416.879 ns/op
Iteration   6: 6580.859 ns/op
Iteration   7: 6351.955 ns/op
Iteration   8: 7827.552 ns/op
Iteration   9: 6356.833 ns/op
Iteration  10: 7889.029 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7971.237 ±(99.9%) 2074.527 ns/op [Average]
  (min, avg, max) = (6306.384, 7971.237, 15539.007), stdev = 2389.029
  CI (99.9%): [5896.710, 10045.764] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 81.89% complete, ETA 00:13:01
# Fork: 1 of 2
# Warmup Iteration   1: 14419.931 ns/op
# Warmup Iteration   2: 9919.603 ns/op
# Warmup Iteration   3: 8525.087 ns/op
Iteration   1: 8412.276 ns/op
Iteration   2: 8371.250 ns/op
Iteration   3: 8405.347 ns/op
Iteration   4: 10218.766 ns/op
Iteration   5: 8423.334 ns/op
Iteration   6: 8399.863 ns/op
Iteration   7: 8416.004 ns/op
Iteration   8: 8377.468 ns/op
Iteration   9: 8375.068 ns/op
Iteration  10: 8505.424 ns/op

# Run progress: 81.94% complete, ETA 00:12:59
# Fork: 2 of 2
# Warmup Iteration   1: 13540.947 ns/op
# Warmup Iteration   2: 9650.362 ns/op
# Warmup Iteration   3: 8277.061 ns/op
Iteration   1: 8333.838 ns/op
Iteration   2: 8300.444 ns/op
Iteration   3: 8226.640 ns/op
Iteration   4: 10708.565 ns/op
Iteration   5: 8299.035 ns/op
Iteration   6: 8312.179 ns/op
Iteration   7: 8314.146 ns/op
Iteration   8: 8287.739 ns/op
Iteration   9: 8282.441 ns/op
Iteration  10: 8325.839 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8564.783 ±(99.9%) 570.808 ns/op [Average]
  (min, avg, max) = (8226.640, 8564.783, 10708.565), stdev = 657.343
  CI (99.9%): [7993.975, 9135.591] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 82.00% complete, ETA 00:12:56
# Fork: 1 of 2
# Warmup Iteration   1: 38.015 ns/op
# Warmup Iteration   2: 64.044 ns/op
# Warmup Iteration   3: 35.674 ns/op
Iteration   1: 35.679 ns/op
Iteration   2: 35.722 ns/op
Iteration   3: 35.709 ns/op
Iteration   4: 35.704 ns/op
Iteration   5: 35.705 ns/op
Iteration   6: 36.107 ns/op
Iteration   7: 35.646 ns/op
Iteration   8: 34.517 ns/op
Iteration   9: 35.637 ns/op
Iteration  10: 35.663 ns/op

# Run progress: 82.06% complete, ETA 00:12:54
# Fork: 2 of 2
# Warmup Iteration   1: 53.187 ns/op
# Warmup Iteration   2: 67.048 ns/op
# Warmup Iteration   3: 35.672 ns/op
Iteration   1: 35.665 ns/op
Iteration   2: 35.760 ns/op
Iteration   3: 35.705 ns/op
Iteration   4: 35.703 ns/op
Iteration   5: 35.693 ns/op
Iteration   6: 36.166 ns/op
Iteration   7: 35.720 ns/op
Iteration   8: 34.509 ns/op
Iteration   9: 35.738 ns/op
Iteration  10: 35.665 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.621 ±(99.9%) 0.350 ns/op [Average]
  (min, avg, max) = (34.509, 35.621, 36.166), stdev = 0.403
  CI (99.9%): [35.270, 35.971] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 82.11% complete, ETA 00:12:52
# Fork: 1 of 2
# Warmup Iteration   1: 294.615 ns/op
# Warmup Iteration   2: 281.619 ns/op
# Warmup Iteration   3: 237.867 ns/op
Iteration   1: 238.158 ns/op
Iteration   2: 238.015 ns/op
Iteration   3: 237.783 ns/op
Iteration   4: 235.576 ns/op
Iteration   5: 235.275 ns/op
Iteration   6: 235.389 ns/op
Iteration   7: 235.417 ns/op
Iteration   8: 236.068 ns/op
Iteration   9: 235.322 ns/op
Iteration  10: 235.154 ns/op

# Run progress: 82.17% complete, ETA 00:12:49
# Fork: 2 of 2
# Warmup Iteration   1: 280.365 ns/op
# Warmup Iteration   2: 284.418 ns/op
# Warmup Iteration   3: 240.867 ns/op
Iteration   1: 240.988 ns/op
Iteration   2: 241.384 ns/op
Iteration   3: 240.699 ns/op
Iteration   4: 238.361 ns/op
Iteration   5: 237.066 ns/op
Iteration   6: 236.551 ns/op
Iteration   7: 238.296 ns/op
Iteration   8: 238.868 ns/op
Iteration   9: 238.228 ns/op
Iteration  10: 238.289 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  237.544 ±(99.9%) 1.707 ns/op [Average]
  (min, avg, max) = (235.154, 237.544, 241.384), stdev = 1.966
  CI (99.9%): [235.837, 239.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 82.22% complete, ETA 00:12:47
# Fork: 1 of 2
# Warmup Iteration   1: 1585.981 ns/op
# Warmup Iteration   2: 1218.682 ns/op
# Warmup Iteration   3: 1071.411 ns/op
Iteration   1: 1071.659 ns/op
Iteration   2: 1074.239 ns/op
Iteration   3: 1087.464 ns/op
Iteration   4: 1071.331 ns/op
Iteration   5: 1076.933 ns/op
Iteration   6: 1073.460 ns/op
Iteration   7: 1077.680 ns/op
Iteration   8: 1074.247 ns/op
Iteration   9: 1071.728 ns/op
Iteration  10: 1072.987 ns/op

# Run progress: 82.28% complete, ETA 00:12:44
# Fork: 2 of 2
# Warmup Iteration   1: 2132.704 ns/op
# Warmup Iteration   2: 1213.651 ns/op
# Warmup Iteration   3: 1080.971 ns/op
Iteration   1: 1081.561 ns/op
Iteration   2: 1081.339 ns/op
Iteration   3: 1082.258 ns/op
Iteration   4: 1083.183 ns/op
Iteration   5: 1081.355 ns/op
Iteration   6: 1080.942 ns/op
Iteration   7: 1081.498 ns/op
Iteration   8: 1084.153 ns/op
Iteration   9: 1080.720 ns/op
Iteration  10: 1081.434 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1078.509 ±(99.9%) 4.187 ns/op [Average]
  (min, avg, max) = (1071.331, 1078.509, 1087.464), stdev = 4.821
  CI (99.9%): [1074.322, 1082.695] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 82.33% complete, ETA 00:12:42
# Fork: 1 of 2
# Warmup Iteration   1: 1779.243 ns/op
# Warmup Iteration   2: 1331.216 ns/op
# Warmup Iteration   3: 1184.799 ns/op
Iteration   1: 1185.224 ns/op
Iteration   2: 1184.791 ns/op
Iteration   3: 1184.916 ns/op
Iteration   4: 1185.911 ns/op
Iteration   5: 1185.561 ns/op
Iteration   6: 1189.146 ns/op
Iteration   7: 1185.284 ns/op
Iteration   8: 1188.190 ns/op
Iteration   9: 1185.075 ns/op
Iteration  10: 1185.086 ns/op

# Run progress: 82.39% complete, ETA 00:12:40
# Fork: 2 of 2
# Warmup Iteration   1: 1790.244 ns/op
# Warmup Iteration   2: 1332.164 ns/op
# Warmup Iteration   3: 1187.455 ns/op
Iteration   1: 1187.981 ns/op
Iteration   2: 1187.828 ns/op
Iteration   3: 1187.413 ns/op
Iteration   4: 1187.784 ns/op
Iteration   5: 1187.988 ns/op
Iteration   6: 1191.819 ns/op
Iteration   7: 1187.934 ns/op
Iteration   8: 1185.212 ns/op
Iteration   9: 1187.654 ns/op
Iteration  10: 1187.756 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1186.928 ±(99.9%) 1.588 ns/op [Average]
  (min, avg, max) = (1184.791, 1186.928, 1191.819), stdev = 1.829
  CI (99.9%): [1185.339, 1188.516] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 82.44% complete, ETA 00:12:37
# Fork: 1 of 2
# Warmup Iteration   1: 1693.696 ns/op
# Warmup Iteration   2: 1097.389 ns/op
# Warmup Iteration   3: 968.729 ns/op
Iteration   1: 969.131 ns/op
Iteration   2: 968.631 ns/op
Iteration   3: 969.893 ns/op
Iteration   4: 968.801 ns/op
Iteration   5: 969.465 ns/op
Iteration   6: 972.532 ns/op
Iteration   7: 968.826 ns/op
Iteration   8: 973.217 ns/op
Iteration   9: 969.216 ns/op
Iteration  10: 968.982 ns/op

# Run progress: 82.50% complete, ETA 00:12:35
# Fork: 2 of 2
# Warmup Iteration   1: 1543.915 ns/op
# Warmup Iteration   2: 1228.694 ns/op
# Warmup Iteration   3: 1059.229 ns/op
Iteration   1: 1060.914 ns/op
Iteration   2: 1059.149 ns/op
Iteration   3: 1062.608 ns/op
Iteration   4: 1059.074 ns/op
Iteration   5: 1059.806 ns/op
Iteration   6: 1063.050 ns/op
Iteration   7: 1059.800 ns/op
Iteration   8: 1063.135 ns/op
Iteration   9: 1058.962 ns/op
Iteration  10: 1057.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1015.158 ±(99.9%) 40.375 ns/op [Average]
  (min, avg, max) = (968.631, 1015.158, 1063.135), stdev = 46.496
  CI (99.9%): [974.782, 1055.533] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 82.56% complete, ETA 00:12:32
# Fork: 1 of 2
# Warmup Iteration   1: 464.624 ns/op
# Warmup Iteration   2: 465.609 ns/op
# Warmup Iteration   3: 416.316 ns/op
Iteration   1: 416.269 ns/op
Iteration   2: 415.984 ns/op
Iteration   3: 416.228 ns/op
Iteration   4: 420.572 ns/op
Iteration   5: 420.384 ns/op
Iteration   6: 420.989 ns/op
Iteration   7: 420.706 ns/op
Iteration   8: 421.037 ns/op
Iteration   9: 420.511 ns/op
Iteration  10: 420.350 ns/op

# Run progress: 82.61% complete, ETA 00:12:30
# Fork: 2 of 2
# Warmup Iteration   1: 477.977 ns/op
# Warmup Iteration   2: 449.741 ns/op
# Warmup Iteration   3: 417.282 ns/op
Iteration   1: 417.011 ns/op
Iteration   2: 417.064 ns/op
Iteration   3: 417.049 ns/op
Iteration   4: 421.433 ns/op
Iteration   5: 421.509 ns/op
Iteration   6: 422.142 ns/op
Iteration   7: 421.342 ns/op
Iteration   8: 420.782 ns/op
Iteration   9: 421.497 ns/op
Iteration  10: 421.366 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  419.711 ±(99.9%) 1.866 ns/op [Average]
  (min, avg, max) = (415.984, 419.711, 422.142), stdev = 2.149
  CI (99.9%): [417.845, 421.577] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 82.67% complete, ETA 00:12:28
# Fork: 1 of 2
# Warmup Iteration   1: 37.801 ns/op
# Warmup Iteration   2: 67.153 ns/op
# Warmup Iteration   3: 49.993 ns/op
Iteration   1: 50.025 ns/op
Iteration   2: 50.061 ns/op
Iteration   3: 50.047 ns/op
Iteration   4: 50.062 ns/op
Iteration   5: 50.036 ns/op
Iteration   6: 50.030 ns/op
Iteration   7: 50.022 ns/op
Iteration   8: 34.428 ns/op
Iteration   9: 50.059 ns/op
Iteration  10: 50.044 ns/op

# Run progress: 82.72% complete, ETA 00:12:25
# Fork: 2 of 2
# Warmup Iteration   1: 38.010 ns/op
# Warmup Iteration   2: 67.107 ns/op
# Warmup Iteration   3: 35.681 ns/op
Iteration   1: 35.728 ns/op
Iteration   2: 35.717 ns/op
Iteration   3: 35.665 ns/op
Iteration   4: 35.656 ns/op
Iteration   5: 35.632 ns/op
Iteration   6: 36.161 ns/op
Iteration   7: 35.773 ns/op
Iteration   8: 34.501 ns/op
Iteration   9: 35.662 ns/op
Iteration  10: 35.765 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  42.054 ±(99.9%) 6.447 ns/op [Average]
  (min, avg, max) = (34.428, 42.054, 50.062), stdev = 7.425
  CI (99.9%): [35.606, 48.501] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 82.78% complete, ETA 00:12:23
# Fork: 1 of 2
# Warmup Iteration   1: 3320.427 ns/op
# Warmup Iteration   2: 2409.558 ns/op
# Warmup Iteration   3: 1867.404 ns/op
Iteration   1: 2979.940 ns/op
Iteration   2: 3129.363 ns/op
Iteration   3: 1186.701 ns/op
Iteration   4: 1495.635 ns/op
Iteration   5: 1322.317 ns/op
Iteration   6: 2107.298 ns/op
Iteration   7: 2113.715 ns/op
Iteration   8: 2131.348 ns/op
Iteration   9: 1270.085 ns/op
Iteration  10: 1858.121 ns/op

# Run progress: 82.83% complete, ETA 00:12:20
# Fork: 2 of 2
# Warmup Iteration   1: 3168.738 ns/op
# Warmup Iteration   2: 1604.678 ns/op
# Warmup Iteration   3: 2087.429 ns/op
Iteration   1: 3232.873 ns/op
Iteration   2: 3472.980 ns/op
Iteration   3: 1289.254 ns/op
Iteration   4: 1639.898 ns/op
Iteration   5: 1408.365 ns/op
Iteration   6: 2316.362 ns/op
Iteration   7: 2351.695 ns/op
Iteration   8: 2334.111 ns/op
Iteration   9: 1367.552 ns/op
Iteration  10: 2089.580 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2054.860 ±(99.9%) 616.059 ns/op [Average]
  (min, avg, max) = (1186.701, 2054.860, 3472.980), stdev = 709.454
  CI (99.9%): [1438.801, 2670.918] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 82.89% complete, ETA 00:12:18
# Fork: 1 of 2
# Warmup Iteration   1: 4725.234 ns/op
# Warmup Iteration   2: 1578.889 ns/op
# Warmup Iteration   3: 1490.732 ns/op
Iteration   1: 151325.843 ns/op
Iteration   2: 3065.348 ns/op
Iteration   3: 1455.612 ns/op
Iteration   4: 7671.358 ns/op
Iteration   5: 1505.208 ns/op
Iteration   6: 1617.318 ns/op
Iteration   7: 1650.687 ns/op
Iteration   8: 1664.502 ns/op
Iteration   9: 1466.261 ns/op
Iteration  10: 1509.944 ns/op

# Run progress: 82.94% complete, ETA 00:12:16
# Fork: 2 of 2
# Warmup Iteration   1: 3166.612 ns/op
# Warmup Iteration   2: 1586.687 ns/op
# Warmup Iteration   3: 1482.834 ns/op
Iteration   1: 139582.093 ns/op
Iteration   2: 4536.052 ns/op
Iteration   3: 1384.417 ns/op
Iteration   4: 5861.132 ns/op
Iteration   5: 1505.582 ns/op
Iteration   6: 1606.910 ns/op
Iteration   7: 1659.856 ns/op
Iteration   8: 1650.263 ns/op
Iteration   9: 1476.667 ns/op
Iteration  10: 1513.354 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16685.420 ±(99.9%) 38304.876 ns/op [Average]
  (min, avg, max) = (1384.417, 16685.420, 151325.843), stdev = 44111.952
  CI (99.9%): [≈ 0, 54990.296] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 83.00% complete, ETA 00:12:13
# Fork: 1 of 2
# Warmup Iteration   1: 4470.372 ns/op
# Warmup Iteration   2: 1656.233 ns/op
# Warmup Iteration   3: 1486.437 ns/op
Iteration   1: 195958.483 ns/op
Iteration   2: 8350.495 ns/op
Iteration   3: 1458.930 ns/op
Iteration   4: 4573.390 ns/op
Iteration   5: 1559.926 ns/op
Iteration   6: 1651.811 ns/op
Iteration   7: 1774.973 ns/op
Iteration   8: 1694.242 ns/op
Iteration   9: 1521.131 ns/op
Iteration  10: 1577.424 ns/op

# Run progress: 83.06% complete, ETA 00:12:11
# Fork: 2 of 2
# Warmup Iteration   1: 3429.960 ns/op
# Warmup Iteration   2: 1576.468 ns/op
# Warmup Iteration   3: 1505.367 ns/op
Iteration   1: 178462.634 ns/op
Iteration   2: 4201.880 ns/op
Iteration   3: 1379.271 ns/op
Iteration   4: 74713.403 ns/op
Iteration   5: 1538.828 ns/op
Iteration   6: 1640.586 ns/op
Iteration   7: 1760.230 ns/op
Iteration   8: 1676.685 ns/op
Iteration   9: 1507.907 ns/op
Iteration  10: 1568.713 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  24428.547 ±(99.9%) 50413.348 ns/op [Average]
  (min, avg, max) = (1379.271, 24428.547, 195958.483), stdev = 58056.087
  CI (99.9%): [≈ 0, 74841.895] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 83.11% complete, ETA 00:12:08
# Fork: 1 of 2
# Warmup Iteration   1: 2464.431 ns/op
# Warmup Iteration   2: 4223.993 ns/op
# Warmup Iteration   3: 1536.331 ns/op
Iteration   1: 2047.030 ns/op
Iteration   2: 2156.668 ns/op
Iteration   3: 1406.550 ns/op
Iteration   4: 3900.800 ns/op
Iteration   5: 1530.857 ns/op
Iteration   6: 1571.550 ns/op
Iteration   7: 1619.788 ns/op
Iteration   8: 1606.914 ns/op
Iteration   9: 1482.369 ns/op
Iteration  10: 1488.271 ns/op

# Run progress: 83.17% complete, ETA 00:12:06
# Fork: 2 of 2
# Warmup Iteration   1: 2266.086 ns/op
# Warmup Iteration   2: 6254.292 ns/op
# Warmup Iteration   3: 2159.526 ns/op
Iteration   1: 2382.625 ns/op
Iteration   2: 2760.584 ns/op
Iteration   3: 1391.845 ns/op
Iteration   4: 2348.867 ns/op
Iteration   5: 1522.648 ns/op
Iteration   6: 1559.711 ns/op
Iteration   7: 1606.428 ns/op
Iteration   8: 1603.210 ns/op
Iteration   9: 1471.773 ns/op
Iteration  10: 1471.044 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1846.477 ±(99.9%) 536.863 ns/op [Average]
  (min, avg, max) = (1391.845, 1846.477, 3900.800), stdev = 618.252
  CI (99.9%): [1309.614, 2383.339] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 83.22% complete, ETA 00:12:04
# Fork: 1 of 2
# Warmup Iteration   1: 3900.919 ns/op
# Warmup Iteration   2: 2735.587 ns/op
# Warmup Iteration   3: 1984.798 ns/op
Iteration   1: 3205.065 ns/op
Iteration   2: 3402.851 ns/op
Iteration   3: 1269.999 ns/op
Iteration   4: 1573.794 ns/op
Iteration   5: 1428.633 ns/op
Iteration   6: 2224.358 ns/op
Iteration   7: 2266.894 ns/op
Iteration   8: 2253.701 ns/op
Iteration   9: 1385.776 ns/op
Iteration  10: 1990.709 ns/op

# Run progress: 83.28% complete, ETA 00:12:01
# Fork: 2 of 2
# Warmup Iteration   1: 3823.696 ns/op
# Warmup Iteration   2: 3284.080 ns/op
# Warmup Iteration   3: 2182.315 ns/op
Iteration   1: 3394.797 ns/op
Iteration   2: 3648.361 ns/op
Iteration   3: 1461.025 ns/op
Iteration   4: 1780.893 ns/op
Iteration   5: 1581.070 ns/op
Iteration   6: 2424.838 ns/op
Iteration   7: 2464.627 ns/op
Iteration   8: 2462.950 ns/op
Iteration   9: 1544.178 ns/op
Iteration  10: 2183.272 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2197.390 ±(99.9%) 638.539 ns/op [Average]
  (min, avg, max) = (1269.999, 2197.390, 3648.361), stdev = 735.342
  CI (99.9%): [1558.851, 2835.928] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 83.33% complete, ETA 00:11:59
# Fork: 1 of 2
# Warmup Iteration   1: 37.966 ns/op
# Warmup Iteration   2: 65.447 ns/op
# Warmup Iteration   3: 35.657 ns/op
Iteration   1: 35.648 ns/op
Iteration   2: 35.689 ns/op
Iteration   3: 35.664 ns/op
Iteration   4: 35.622 ns/op
Iteration   5: 35.689 ns/op
Iteration   6: 36.133 ns/op
Iteration   7: 35.698 ns/op
Iteration   8: 50.884 ns/op
Iteration   9: 35.680 ns/op
Iteration  10: 35.735 ns/op

# Run progress: 83.39% complete, ETA 00:11:56
# Fork: 2 of 2
# Warmup Iteration   1: 38.276 ns/op
# Warmup Iteration   2: 64.534 ns/op
# Warmup Iteration   3: 35.635 ns/op
Iteration   1: 35.710 ns/op
Iteration   2: 35.693 ns/op
Iteration   3: 35.638 ns/op
Iteration   4: 35.694 ns/op
Iteration   5: 35.700 ns/op
Iteration   6: 36.122 ns/op
Iteration   7: 35.675 ns/op
Iteration   8: 34.481 ns/op
Iteration   9: 35.656 ns/op
Iteration  10: 35.652 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  36.423 ±(99.9%) 2.968 ns/op [Average]
  (min, avg, max) = (34.481, 36.423, 50.884), stdev = 3.418
  CI (99.9%): [33.455, 39.391] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 83.44% complete, ETA 00:11:54
# Fork: 1 of 2
# Warmup Iteration   1: 8614.533 ns/op
# Warmup Iteration   2: 6269.623 ns/op
# Warmup Iteration   3: 5355.358 ns/op
Iteration   1: 5361.443 ns/op
Iteration   2: 5334.718 ns/op
Iteration   3: 5336.974 ns/op
Iteration   4: 5366.203 ns/op
Iteration   5: 5335.378 ns/op
Iteration   6: 5354.559 ns/op
Iteration   7: 5355.441 ns/op
Iteration   8: 5348.332 ns/op
Iteration   9: 5380.080 ns/op
Iteration  10: 5351.313 ns/op

# Run progress: 83.50% complete, ETA 00:11:52
# Fork: 2 of 2
# Warmup Iteration   1: 8839.427 ns/op
# Warmup Iteration   2: 6302.264 ns/op
# Warmup Iteration   3: 5448.240 ns/op
Iteration   1: 5425.644 ns/op
Iteration   2: 5458.058 ns/op
Iteration   3: 5485.130 ns/op
Iteration   4: 5513.405 ns/op
Iteration   5: 5448.730 ns/op
Iteration   6: 5460.142 ns/op
Iteration   7: 5468.471 ns/op
Iteration   8: 5477.380 ns/op
Iteration   9: 5443.361 ns/op
Iteration  10: 5480.088 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5409.242 ±(99.9%) 53.424 ns/op [Average]
  (min, avg, max) = (5334.718, 5409.242, 5513.405), stdev = 61.523
  CI (99.9%): [5355.819, 5462.666] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 83.56% complete, ETA 00:11:49
# Fork: 1 of 2
# Warmup Iteration   1: 16627.344 ns/op
# Warmup Iteration   2: 8599.493 ns/op
# Warmup Iteration   3: 7654.108 ns/op
Iteration   1: 7646.931 ns/op
Iteration   2: 7632.923 ns/op
Iteration   3: 7620.470 ns/op
Iteration   4: 7621.031 ns/op
Iteration   5: 7650.339 ns/op
Iteration   6: 7605.474 ns/op
Iteration   7: 7630.135 ns/op
Iteration   8: 7618.965 ns/op
Iteration   9: 7650.712 ns/op
Iteration  10: 7603.380 ns/op

# Run progress: 83.61% complete, ETA 00:11:47
# Fork: 2 of 2
# Warmup Iteration   1: 17923.974 ns/op
# Warmup Iteration   2: 9335.986 ns/op
# Warmup Iteration   3: 8230.963 ns/op
Iteration   1: 8236.883 ns/op
Iteration   2: 8206.631 ns/op
Iteration   3: 8290.084 ns/op
Iteration   4: 8292.191 ns/op
Iteration   5: 8248.656 ns/op
Iteration   6: 8224.783 ns/op
Iteration   7: 8246.038 ns/op
Iteration   8: 8251.651 ns/op
Iteration   9: 8252.588 ns/op
Iteration  10: 8217.407 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7937.363 ±(99.9%) 276.286 ns/op [Average]
  (min, avg, max) = (7603.380, 7937.363, 8292.191), stdev = 318.172
  CI (99.9%): [7661.077, 8213.650] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 83.67% complete, ETA 00:11:44
# Fork: 1 of 2
# Warmup Iteration   1: 21782.263 ns/op
# Warmup Iteration   2: 8507.550 ns/op
# Warmup Iteration   3: 7931.858 ns/op
Iteration   1: 7649.455 ns/op
Iteration   2: 7645.239 ns/op
Iteration   3: 7665.482 ns/op
Iteration   4: 7627.024 ns/op
Iteration   5: 7665.815 ns/op
Iteration   6: 7671.612 ns/op
Iteration   7: 7639.060 ns/op
Iteration   8: 7608.555 ns/op
Iteration   9: 7633.134 ns/op
Iteration  10: 7654.948 ns/op

# Run progress: 83.72% complete, ETA 00:11:42
# Fork: 2 of 2
# Warmup Iteration   1: 17780.070 ns/op
# Warmup Iteration   2: 9374.119 ns/op
# Warmup Iteration   3: 7892.036 ns/op
Iteration   1: 7974.345 ns/op
Iteration   2: 7875.491 ns/op
Iteration   3: 7920.935 ns/op
Iteration   4: 7857.490 ns/op
Iteration   5: 7906.519 ns/op
Iteration   6: 7897.913 ns/op
Iteration   7: 7883.231 ns/op
Iteration   8: 7903.150 ns/op
Iteration   9: 7845.314 ns/op
Iteration  10: 7898.219 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7771.147 ±(99.9%) 114.116 ns/op [Average]
  (min, avg, max) = (7608.555, 7771.147, 7974.345), stdev = 131.416
  CI (99.9%): [7657.031, 7885.262] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 83.78% complete, ETA 00:11:40
# Fork: 1 of 2
# Warmup Iteration   1: 13910.967 ns/op
# Warmup Iteration   2: 8426.056 ns/op
# Warmup Iteration   3: 7418.063 ns/op
Iteration   1: 7458.492 ns/op
Iteration   2: 7424.219 ns/op
Iteration   3: 7432.624 ns/op
Iteration   4: 7448.054 ns/op
Iteration   5: 7441.302 ns/op
Iteration   6: 7470.798 ns/op
Iteration   7: 7437.804 ns/op
Iteration   8: 7440.183 ns/op
Iteration   9: 7452.906 ns/op
Iteration  10: 7412.704 ns/op

# Run progress: 83.83% complete, ETA 00:11:37
# Fork: 2 of 2
# Warmup Iteration   1: 12194.877 ns/op
# Warmup Iteration   2: 8590.915 ns/op
# Warmup Iteration   3: 7441.688 ns/op
Iteration   1: 7441.081 ns/op
Iteration   2: 7467.125 ns/op
Iteration   3: 7455.020 ns/op
Iteration   4: 7467.157 ns/op
Iteration   5: 7510.693 ns/op
Iteration   6: 7446.341 ns/op
Iteration   7: 7427.675 ns/op
Iteration   8: 7469.562 ns/op
Iteration   9: 7444.119 ns/op
Iteration  10: 7432.502 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7449.018 ±(99.9%) 18.674 ns/op [Average]
  (min, avg, max) = (7412.704, 7449.018, 7510.693), stdev = 21.505
  CI (99.9%): [7430.344, 7467.692] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 83.89% complete, ETA 00:11:35
# Fork: 1 of 2
# Warmup Iteration   1: 14441.864 ns/op
# Warmup Iteration   2: 10518.779 ns/op
# Warmup Iteration   3: 8952.188 ns/op
Iteration   1: 8904.817 ns/op
Iteration   2: 8882.510 ns/op
Iteration   3: 8876.078 ns/op
Iteration   4: 8895.669 ns/op
Iteration   5: 8914.376 ns/op
Iteration   6: 8895.021 ns/op
Iteration   7: 8910.015 ns/op
Iteration   8: 8898.934 ns/op
Iteration   9: 8930.737 ns/op
Iteration  10: 8958.676 ns/op

# Run progress: 83.94% complete, ETA 00:11:32
# Fork: 2 of 2
# Warmup Iteration   1: 14271.761 ns/op
# Warmup Iteration   2: 10111.729 ns/op
# Warmup Iteration   3: 8739.052 ns/op
Iteration   1: 8753.302 ns/op
Iteration   2: 8729.680 ns/op
Iteration   3: 8832.992 ns/op
Iteration   4: 8746.600 ns/op
Iteration   5: 8764.262 ns/op
Iteration   6: 8806.527 ns/op
Iteration   7: 8748.778 ns/op
Iteration   8: 8733.832 ns/op
Iteration   9: 8780.221 ns/op
Iteration  10: 8751.752 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8835.739 ±(99.9%) 67.724 ns/op [Average]
  (min, avg, max) = (8729.680, 8835.739, 8958.676), stdev = 77.991
  CI (99.9%): [8768.015, 8903.462] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 84.00% complete, ETA 00:11:30
# Fork: 1 of 2
# Warmup Iteration   1: 37.934 ns/op
# Warmup Iteration   2: 66.483 ns/op
# Warmup Iteration   3: 35.690 ns/op
Iteration   1: 35.699 ns/op
Iteration   2: 35.632 ns/op
Iteration   3: 35.681 ns/op
Iteration   4: 35.738 ns/op
Iteration   5: 35.724 ns/op
Iteration   6: 36.145 ns/op
Iteration   7: 35.730 ns/op
Iteration   8: 34.415 ns/op
Iteration   9: 35.688 ns/op
Iteration  10: 35.771 ns/op

# Run progress: 84.06% complete, ETA 00:11:28
# Fork: 2 of 2
# Warmup Iteration   1: 37.859 ns/op
# Warmup Iteration   2: 66.689 ns/op
# Warmup Iteration   3: 35.682 ns/op
Iteration   1: 35.685 ns/op
Iteration   2: 35.672 ns/op
Iteration   3: 35.740 ns/op
Iteration   4: 35.714 ns/op
Iteration   5: 35.691 ns/op
Iteration   6: 36.187 ns/op
Iteration   7: 35.674 ns/op
Iteration   8: 34.430 ns/op
Iteration   9: 35.740 ns/op
Iteration  10: 35.674 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.622 ±(99.9%) 0.378 ns/op [Average]
  (min, avg, max) = (34.415, 35.622, 36.187), stdev = 0.435
  CI (99.9%): [35.244, 35.999] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 84.11% complete, ETA 00:11:25
# Fork: 1 of 2
# Warmup Iteration   1: 3208.948 ns/op
# Warmup Iteration   2: 2155.203 ns/op
# Warmup Iteration   3: 1878.352 ns/op
Iteration   1: 1885.608 ns/op
Iteration   2: 1878.819 ns/op
Iteration   3: 1885.929 ns/op
Iteration   4: 1873.408 ns/op
Iteration   5: 1881.880 ns/op
Iteration   6: 1874.748 ns/op
Iteration   7: 1880.222 ns/op
Iteration   8: 1873.223 ns/op
Iteration   9: 1866.861 ns/op
Iteration  10: 1977.617 ns/op

# Run progress: 84.17% complete, ETA 00:11:23
# Fork: 2 of 2
# Warmup Iteration   1: 2658.055 ns/op
# Warmup Iteration   2: 2160.216 ns/op
# Warmup Iteration   3: 1877.930 ns/op
Iteration   1: 1885.295 ns/op
Iteration   2: 1878.273 ns/op
Iteration   3: 1885.540 ns/op
Iteration   4: 1872.151 ns/op
Iteration   5: 1881.697 ns/op
Iteration   6: 1874.259 ns/op
Iteration   7: 1879.312 ns/op
Iteration   8: 1873.360 ns/op
Iteration   9: 1866.440 ns/op
Iteration  10: 1871.858 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1882.325 ±(99.9%) 20.155 ns/op [Average]
  (min, avg, max) = (1866.440, 1882.325, 1977.617), stdev = 23.211
  CI (99.9%): [1862.170, 1902.480] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 84.22% complete, ETA 00:11:20
# Fork: 1 of 2
# Warmup Iteration   1: 22719.486 ns/op
# Warmup Iteration   2: 10463.990 ns/op
# Warmup Iteration   3: 9856.136 ns/op
Iteration   1: 9445.831 ns/op
Iteration   2: 9442.442 ns/op
Iteration   3: 9410.513 ns/op
Iteration   4: 9411.379 ns/op
Iteration   5: 9442.762 ns/op
Iteration   6: 9453.660 ns/op
Iteration   7: 9419.267 ns/op
Iteration   8: 9394.579 ns/op
Iteration   9: 9465.120 ns/op
Iteration  10: 9451.701 ns/op

# Run progress: 84.28% complete, ETA 00:11:18
# Fork: 2 of 2
# Warmup Iteration   1: 22972.310 ns/op
# Warmup Iteration   2: 10452.977 ns/op
# Warmup Iteration   3: 9820.985 ns/op
Iteration   1: 9384.973 ns/op
Iteration   2: 9449.967 ns/op
Iteration   3: 9417.073 ns/op
Iteration   4: 9427.849 ns/op
Iteration   5: 9425.402 ns/op
Iteration   6: 9399.131 ns/op
Iteration   7: 9409.342 ns/op
Iteration   8: 9440.438 ns/op
Iteration   9: 9409.506 ns/op
Iteration  10: 9428.791 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9426.486 ±(99.9%) 19.119 ns/op [Average]
  (min, avg, max) = (9384.973, 9426.486, 9465.120), stdev = 22.018
  CI (99.9%): [9407.367, 9445.606] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 84.33% complete, ETA 00:11:16
# Fork: 1 of 2
# Warmup Iteration   1: 22113.082 ns/op
# Warmup Iteration   2: 10637.293 ns/op
# Warmup Iteration   3: 9729.161 ns/op
Iteration   1: 9323.837 ns/op
Iteration   2: 9319.615 ns/op
Iteration   3: 9280.467 ns/op
Iteration   4: 9309.822 ns/op
Iteration   5: 9323.271 ns/op
Iteration   6: 9300.743 ns/op
Iteration   7: 9339.070 ns/op
Iteration   8: 9342.124 ns/op
Iteration   9: 9297.901 ns/op
Iteration  10: 9308.157 ns/op

# Run progress: 84.39% complete, ETA 00:11:13
# Fork: 2 of 2
# Warmup Iteration   1: 22396.522 ns/op
# Warmup Iteration   2: 10401.661 ns/op
# Warmup Iteration   3: 9739.819 ns/op
Iteration   1: 9322.334 ns/op
Iteration   2: 9314.709 ns/op
Iteration   3: 9303.675 ns/op
Iteration   4: 9338.612 ns/op
Iteration   5: 9352.506 ns/op
Iteration   6: 9358.593 ns/op
Iteration   7: 9310.770 ns/op
Iteration   8: 9285.353 ns/op
Iteration   9: 9350.289 ns/op
Iteration  10: 9296.726 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9318.929 ±(99.9%) 19.375 ns/op [Average]
  (min, avg, max) = (9280.467, 9318.929, 9358.593), stdev = 22.312
  CI (99.9%): [9299.554, 9338.304] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 84.44% complete, ETA 00:11:11
# Fork: 1 of 2
# Warmup Iteration   1: 15552.854 ns/op
# Warmup Iteration   2: 9789.939 ns/op
# Warmup Iteration   3: 8665.092 ns/op
Iteration   1: 8718.037 ns/op
Iteration   2: 8670.517 ns/op
Iteration   3: 8675.353 ns/op
Iteration   4: 8672.331 ns/op
Iteration   5: 8714.066 ns/op
Iteration   6: 8640.896 ns/op
Iteration   7: 8672.847 ns/op
Iteration   8: 8715.794 ns/op
Iteration   9: 8689.530 ns/op
Iteration  10: 8688.431 ns/op

# Run progress: 84.50% complete, ETA 00:11:08
# Fork: 2 of 2
# Warmup Iteration   1: 14718.108 ns/op
# Warmup Iteration   2: 9707.457 ns/op
# Warmup Iteration   3: 8636.672 ns/op
Iteration   1: 8619.382 ns/op
Iteration   2: 8616.252 ns/op
Iteration   3: 8637.762 ns/op
Iteration   4: 8635.342 ns/op
Iteration   5: 8638.937 ns/op
Iteration   6: 8621.400 ns/op
Iteration   7: 8650.183 ns/op
Iteration   8: 8641.802 ns/op
Iteration   9: 8651.098 ns/op
Iteration  10: 8614.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8659.227 ±(99.9%) 29.055 ns/op [Average]
  (min, avg, max) = (8614.577, 8659.227, 8718.037), stdev = 33.459
  CI (99.9%): [8630.172, 8688.281] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 84.56% complete, ETA 00:11:06
# Fork: 1 of 2
# Warmup Iteration   1: 2494.489 ns/op
# Warmup Iteration   2: 2174.941 ns/op
# Warmup Iteration   3: 1858.392 ns/op
Iteration   1: 1858.949 ns/op
Iteration   2: 1859.554 ns/op
Iteration   3: 1858.937 ns/op
Iteration   4: 1853.894 ns/op
Iteration   5: 1854.361 ns/op
Iteration   6: 1871.715 ns/op
Iteration   7: 1853.034 ns/op
Iteration   8: 1847.948 ns/op
Iteration   9: 1853.359 ns/op
Iteration  10: 1855.439 ns/op

# Run progress: 84.61% complete, ETA 00:11:04
# Fork: 2 of 2
# Warmup Iteration   1: 2425.897 ns/op
# Warmup Iteration   2: 2029.424 ns/op
# Warmup Iteration   3: 1813.849 ns/op
Iteration   1: 1814.035 ns/op
Iteration   2: 1814.017 ns/op
Iteration   3: 1827.559 ns/op
Iteration   4: 1810.041 ns/op
Iteration   5: 1810.340 ns/op
Iteration   6: 1808.127 ns/op
Iteration   7: 1810.256 ns/op
Iteration   8: 1803.776 ns/op
Iteration   9: 1810.393 ns/op
Iteration  10: 1810.215 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1834.297 ±(99.9%) 20.667 ns/op [Average]
  (min, avg, max) = (1803.776, 1834.297, 1871.715), stdev = 23.800
  CI (99.9%): [1813.630, 1854.964] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 84.67% complete, ETA 00:11:01
# Fork: 1 of 2
# Warmup Iteration   1: 38.095 ns/op
# Warmup Iteration   2: 66.906 ns/op
# Warmup Iteration   3: 35.723 ns/op
Iteration   1: 35.765 ns/op
Iteration   2: 35.687 ns/op
Iteration   3: 35.721 ns/op
Iteration   4: 35.696 ns/op
Iteration   5: 35.693 ns/op
Iteration   6: 36.162 ns/op
Iteration   7: 35.690 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.685 ns/op
Iteration  10: 35.731 ns/op

# Run progress: 84.72% complete, ETA 00:10:59
# Fork: 2 of 2
# Warmup Iteration   1: 38.431 ns/op
# Warmup Iteration   2: 66.570 ns/op
# Warmup Iteration   3: 35.641 ns/op
Iteration   1: 35.747 ns/op
Iteration   2: 35.740 ns/op
Iteration   3: 35.641 ns/op
Iteration   4: 35.744 ns/op
Iteration   5: 35.675 ns/op
Iteration   6: 36.140 ns/op
Iteration   7: 35.685 ns/op
Iteration   8: 46.585 ns/op
Iteration   9: 35.695 ns/op
Iteration  10: 35.688 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  36.234 ±(99.9%) 2.133 ns/op [Average]
  (min, avg, max) = (34.514, 36.234, 46.585), stdev = 2.456
  CI (99.9%): [34.101, 38.367] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 84.78% complete, ETA 00:10:56
# Fork: 1 of 2
# Warmup Iteration   1: 20625.044 ns/op
# Warmup Iteration   2: 28885.055 ns/op
# Warmup Iteration   3: 5676.774 ns/op
Iteration   1: 6213.824 ns/op
Iteration   2: 180527.975 ns/op
Iteration   3: 5669.968 ns/op
Iteration   4: 5564.842 ns/op
Iteration   5: 304119.338 ns/op
Iteration   6: 5777.184 ns/op
Iteration   7: 5657.362 ns/op
Iteration   8: 5443.875 ns/op
Iteration   9: 5907.709 ns/op
Iteration  10: 5548.164 ns/op

# Run progress: 84.83% complete, ETA 00:10:54
# Fork: 2 of 2
# Warmup Iteration   1: 19578.564 ns/op
# Warmup Iteration   2: 25066.342 ns/op
# Warmup Iteration   3: 5647.773 ns/op
Iteration   1: 6150.336 ns/op
Iteration   2: 305439.888 ns/op
Iteration   3: 5683.558 ns/op
Iteration   4: 5570.166 ns/op
Iteration   5: 301674.332 ns/op
Iteration   6: 5858.286 ns/op
Iteration   7: 5749.592 ns/op
Iteration   8: 5550.696 ns/op
Iteration   9: 5892.423 ns/op
Iteration  10: 5540.640 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  59177.008 ±(99.9%) 97568.078 ns/op [Average]
  (min, avg, max) = (5443.875, 59177.008, 305439.888), stdev = 112359.544
  CI (99.9%): [≈ 0, 156745.086] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 84.89% complete, ETA 00:10:52
# Fork: 1 of 2
# Warmup Iteration   1: 19032.820 ns/op
# Warmup Iteration   2: 228221.100 ns/op
# Warmup Iteration   3: 10010.848 ns/op
Iteration   1: 6709.975 ns/op
Iteration   2: 148592.658 ns/op
Iteration   3: 6471.463 ns/op
Iteration   4: 6328.700 ns/op
Iteration   5: 6914.484 ns/op
Iteration   6: 6608.659 ns/op
Iteration   7: 9993.624 ns/op
Iteration   8: 6568.307 ns/op
Iteration   9: 6621.030 ns/op
Iteration  10: 7756.066 ns/op

# Run progress: 84.94% complete, ETA 00:10:49
# Fork: 2 of 2
# Warmup Iteration   1: 20395.440 ns/op
# Warmup Iteration   2: 47192.506 ns/op
# Warmup Iteration   3: 9678.427 ns/op
Iteration   1: 6716.485 ns/op
Iteration   2: 11674.986 ns/op
Iteration   3: 6449.508 ns/op
Iteration   4: 6225.095 ns/op
Iteration   5: 6925.733 ns/op
Iteration   6: 6556.797 ns/op
Iteration   7: 15943.170 ns/op
Iteration   8: 6613.290 ns/op
Iteration   9: 6747.309 ns/op
Iteration  10: 7862.332 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  14713.983 ±(99.9%) 27440.443 ns/op [Average]
  (min, avg, max) = (6225.095, 14713.983, 148592.658), stdev = 31600.455
  CI (99.9%): [≈ 0, 42154.427] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 85.00% complete, ETA 00:10:47
# Fork: 1 of 2
# Warmup Iteration   1: 15697.170 ns/op
# Warmup Iteration   2: 334675.832 ns/op
# Warmup Iteration   3: 6880.325 ns/op
Iteration   1: 5670.922 ns/op
Iteration   2: 6228.666 ns/op
Iteration   3: 5872.287 ns/op
Iteration   4: 22427.461 ns/op
Iteration   5: 6240.628 ns/op
Iteration   6: 6130.427 ns/op
Iteration   7: 6247.693 ns/op
Iteration   8: 6079.690 ns/op
Iteration   9: 5987.103 ns/op
Iteration  10: 7009.157 ns/op

# Run progress: 85.06% complete, ETA 00:10:44
# Fork: 2 of 2
# Warmup Iteration   1: 15274.126 ns/op
# Warmup Iteration   2: 238920.850 ns/op
# Warmup Iteration   3: 6925.261 ns/op
Iteration   1: 5663.740 ns/op
Iteration   2: 6253.668 ns/op
Iteration   3: 5849.474 ns/op
Iteration   4: 16150.008 ns/op
Iteration   5: 6237.022 ns/op
Iteration   6: 6160.351 ns/op
Iteration   7: 6122.251 ns/op
Iteration   8: 6091.432 ns/op
Iteration   9: 6028.276 ns/op
Iteration  10: 6933.407 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7469.183 ±(99.9%) 3631.116 ns/op [Average]
  (min, avg, max) = (5663.740, 7469.183, 22427.461), stdev = 4181.598
  CI (99.9%): [3838.067, 11100.299] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 85.11% complete, ETA 00:10:42
# Fork: 1 of 2
# Warmup Iteration   1: 13815.572 ns/op
# Warmup Iteration   2: 33832.186 ns/op
# Warmup Iteration   3: 9867.633 ns/op
Iteration   1: 12467.798 ns/op
Iteration   2: 15519.666 ns/op
Iteration   3: 6718.351 ns/op
Iteration   4: 6133.566 ns/op
Iteration   5: 7143.803 ns/op
Iteration   6: 7071.103 ns/op
Iteration   7: 17721.520 ns/op
Iteration   8: 6789.490 ns/op
Iteration   9: 6784.473 ns/op
Iteration  10: 8425.966 ns/op

# Run progress: 85.17% complete, ETA 00:10:40
# Fork: 2 of 2
# Warmup Iteration   1: 14449.813 ns/op
# Warmup Iteration   2: 13904.277 ns/op
# Warmup Iteration   3: 9604.385 ns/op
Iteration   1: 10231.598 ns/op
Iteration   2: 19079.612 ns/op
Iteration   3: 6684.128 ns/op
Iteration   4: 6165.767 ns/op
Iteration   5: 7097.454 ns/op
Iteration   6: 7019.571 ns/op
Iteration   7: 16405.545 ns/op
Iteration   8: 6840.818 ns/op
Iteration   9: 6791.194 ns/op
Iteration  10: 8295.797 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9469.361 ±(99.9%) 3704.724 ns/op [Average]
  (min, avg, max) = (6133.566, 9469.361, 19079.612), stdev = 4266.366
  CI (99.9%): [5764.637, 13174.085] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 85.22% complete, ETA 00:10:37
# Fork: 1 of 2
# Warmup Iteration   1: 14875.917 ns/op
# Warmup Iteration   2: 9788.944 ns/op
# Warmup Iteration   3: 8542.676 ns/op
Iteration   1: 9478.158 ns/op
Iteration   2: 8504.972 ns/op
Iteration   3: 8622.434 ns/op
Iteration   4: 8547.497 ns/op
Iteration   5: 8556.565 ns/op
Iteration   6: 8551.424 ns/op
Iteration   7: 8549.972 ns/op
Iteration   8: 8506.089 ns/op
Iteration   9: 8552.560 ns/op
Iteration  10: 8530.951 ns/op

# Run progress: 85.28% complete, ETA 00:10:35
# Fork: 2 of 2
# Warmup Iteration   1: 13619.096 ns/op
# Warmup Iteration   2: 9950.466 ns/op
# Warmup Iteration   3: 8544.953 ns/op
Iteration   1: 11525.602 ns/op
Iteration   2: 8488.406 ns/op
Iteration   3: 8417.861 ns/op
Iteration   4: 8476.977 ns/op
Iteration   5: 8436.999 ns/op
Iteration   6: 8502.432 ns/op
Iteration   7: 8528.614 ns/op
Iteration   8: 8471.837 ns/op
Iteration   9: 8455.400 ns/op
Iteration  10: 8513.321 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8710.904 ±(99.9%) 606.411 ns/op [Average]
  (min, avg, max) = (8417.861, 8710.904, 11525.602), stdev = 698.344
  CI (99.9%): [8104.493, 9317.314] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 85.33% complete, ETA 00:10:32
# Fork: 1 of 2
# Warmup Iteration   1: 38.106 ns/op
# Warmup Iteration   2: 63.410 ns/op
# Warmup Iteration   3: 35.701 ns/op
Iteration   1: 35.688 ns/op
Iteration   2: 35.693 ns/op
Iteration   3: 35.768 ns/op
Iteration   4: 35.698 ns/op
Iteration   5: 35.666 ns/op
Iteration   6: 36.109 ns/op
Iteration   7: 35.692 ns/op
Iteration   8: 34.421 ns/op
Iteration   9: 35.713 ns/op
Iteration  10: 35.660 ns/op

# Run progress: 85.39% complete, ETA 00:10:30
# Fork: 2 of 2
# Warmup Iteration   1: 37.889 ns/op
# Warmup Iteration   2: 67.961 ns/op
# Warmup Iteration   3: 35.610 ns/op
Iteration   1: 35.662 ns/op
Iteration   2: 35.614 ns/op
Iteration   3: 35.673 ns/op
Iteration   4: 35.703 ns/op
Iteration   5: 35.701 ns/op
Iteration   6: 36.189 ns/op
Iteration   7: 35.671 ns/op
Iteration   8: 34.539 ns/op
Iteration   9: 35.674 ns/op
Iteration  10: 35.726 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.613 ±(99.9%) 0.360 ns/op [Average]
  (min, avg, max) = (34.421, 35.613, 36.189), stdev = 0.414
  CI (99.9%): [35.253, 35.973] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 85.44% complete, ETA 00:10:28
# Fork: 1 of 2
# Warmup Iteration   1: 626.799 ns/op
# Warmup Iteration   2: 553.911 ns/op
# Warmup Iteration   3: 485.706 ns/op
Iteration   1: 485.484 ns/op
Iteration   2: 485.381 ns/op
Iteration   3: 485.911 ns/op
Iteration   4: 485.551 ns/op
Iteration   5: 481.837 ns/op
Iteration   6: 486.382 ns/op
Iteration   7: 483.667 ns/op
Iteration   8: 475.788 ns/op
Iteration   9: 482.736 ns/op
Iteration  10: 484.382 ns/op

# Run progress: 85.50% complete, ETA 00:10:25
# Fork: 2 of 2
# Warmup Iteration   1: 661.563 ns/op
# Warmup Iteration   2: 545.075 ns/op
# Warmup Iteration   3: 473.497 ns/op
Iteration   1: 473.669 ns/op
Iteration   2: 473.664 ns/op
Iteration   3: 471.672 ns/op
Iteration   4: 472.907 ns/op
Iteration   5: 470.574 ns/op
Iteration   6: 468.380 ns/op
Iteration   7: 470.692 ns/op
Iteration   8: 473.862 ns/op
Iteration   9: 471.108 ns/op
Iteration  10: 471.151 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  477.740 ±(99.9%) 5.739 ns/op [Average]
  (min, avg, max) = (468.380, 477.740, 486.382), stdev = 6.609
  CI (99.9%): [472.001, 483.479] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 85.56% complete, ETA 00:10:23
# Fork: 1 of 2
# Warmup Iteration   1: 3480.683 ns/op
# Warmup Iteration   2: 2071.227 ns/op
# Warmup Iteration   3: 1793.828 ns/op
Iteration   1: 1796.206 ns/op
Iteration   2: 1795.027 ns/op
Iteration   3: 1794.495 ns/op
Iteration   4: 1794.918 ns/op
Iteration   5: 1796.247 ns/op
Iteration   6: 1807.600 ns/op
Iteration   7: 1795.227 ns/op
Iteration   8: 1797.788 ns/op
Iteration   9: 1795.145 ns/op
Iteration  10: 1794.537 ns/op

# Run progress: 85.61% complete, ETA 00:10:20
# Fork: 2 of 2
# Warmup Iteration   1: 3756.072 ns/op
# Warmup Iteration   2: 2079.020 ns/op
# Warmup Iteration   3: 1840.404 ns/op
Iteration   1: 1841.135 ns/op
Iteration   2: 1839.388 ns/op
Iteration   3: 1840.845 ns/op
Iteration   4: 1839.083 ns/op
Iteration   5: 1840.421 ns/op
Iteration   6: 1840.082 ns/op
Iteration   7: 1839.270 ns/op
Iteration   8: 1852.798 ns/op
Iteration   9: 1838.870 ns/op
Iteration  10: 1840.788 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1818.994 ±(99.9%) 20.137 ns/op [Average]
  (min, avg, max) = (1794.495, 1818.994, 1852.798), stdev = 23.189
  CI (99.9%): [1798.857, 1839.130] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 85.67% complete, ETA 00:10:18
# Fork: 1 of 2
# Warmup Iteration   1: 4127.440 ns/op
# Warmup Iteration   2: 2080.878 ns/op
# Warmup Iteration   3: 1833.349 ns/op
Iteration   1: 1833.974 ns/op
Iteration   2: 1835.076 ns/op
Iteration   3: 1838.252 ns/op
Iteration   4: 1833.916 ns/op
Iteration   5: 1833.990 ns/op
Iteration   6: 1836.167 ns/op
Iteration   7: 1834.851 ns/op
Iteration   8: 1839.956 ns/op
Iteration   9: 1836.062 ns/op
Iteration  10: 1836.818 ns/op

# Run progress: 85.72% complete, ETA 00:10:16
# Fork: 2 of 2
# Warmup Iteration   1: 4757.674 ns/op
# Warmup Iteration   2: 2078.552 ns/op
# Warmup Iteration   3: 1831.849 ns/op
Iteration   1: 1832.580 ns/op
Iteration   2: 1848.858 ns/op
Iteration   3: 1832.943 ns/op
Iteration   4: 1859.002 ns/op
Iteration   5: 1843.810 ns/op
Iteration   6: 1857.044 ns/op
Iteration   7: 1831.672 ns/op
Iteration   8: 1862.989 ns/op
Iteration   9: 1831.728 ns/op
Iteration  10: 1832.223 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1839.596 ±(99.9%) 8.397 ns/op [Average]
  (min, avg, max) = (1831.672, 1839.596, 1862.989), stdev = 9.670
  CI (99.9%): [1831.199, 1847.992] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 85.78% complete, ETA 00:10:13
# Fork: 1 of 2
# Warmup Iteration   1: 2728.032 ns/op
# Warmup Iteration   2: 2031.600 ns/op
# Warmup Iteration   3: 1786.358 ns/op
Iteration   1: 1786.748 ns/op
Iteration   2: 1786.375 ns/op
Iteration   3: 1787.307 ns/op
Iteration   4: 1787.468 ns/op
Iteration   5: 1785.425 ns/op
Iteration   6: 1785.555 ns/op
Iteration   7: 1786.571 ns/op
Iteration   8: 1791.293 ns/op
Iteration   9: 1787.244 ns/op
Iteration  10: 1785.891 ns/op

# Run progress: 85.83% complete, ETA 00:10:11
# Fork: 2 of 2
# Warmup Iteration   1: 2832.273 ns/op
# Warmup Iteration   2: 2050.631 ns/op
# Warmup Iteration   3: 1770.955 ns/op
Iteration   1: 1771.591 ns/op
Iteration   2: 1771.345 ns/op
Iteration   3: 1770.486 ns/op
Iteration   4: 1770.610 ns/op
Iteration   5: 1771.667 ns/op
Iteration   6: 1772.341 ns/op
Iteration   7: 1770.830 ns/op
Iteration   8: 1776.880 ns/op
Iteration   9: 1770.732 ns/op
Iteration  10: 1770.290 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1779.332 ±(99.9%) 6.990 ns/op [Average]
  (min, avg, max) = (1770.290, 1779.332, 1791.293), stdev = 8.049
  CI (99.9%): [1772.343, 1786.322] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 85.89% complete, ETA 00:10:08
# Fork: 1 of 2
# Warmup Iteration   1: 936.836 ns/op
# Warmup Iteration   2: 886.537 ns/op
# Warmup Iteration   3: 773.585 ns/op
Iteration   1: 780.319 ns/op
Iteration   2: 773.668 ns/op
Iteration   3: 779.575 ns/op
Iteration   4: 782.099 ns/op
Iteration   5: 776.267 ns/op
Iteration   6: 782.851 ns/op
Iteration   7: 775.867 ns/op
Iteration   8: 788.248 ns/op
Iteration   9: 776.112 ns/op
Iteration  10: 781.632 ns/op

# Run progress: 85.94% complete, ETA 00:10:06
# Fork: 2 of 2
# Warmup Iteration   1: 1013.402 ns/op
# Warmup Iteration   2: 891.743 ns/op
# Warmup Iteration   3: 773.852 ns/op
Iteration   1: 779.721 ns/op
Iteration   2: 773.599 ns/op
Iteration   3: 779.721 ns/op
Iteration   4: 782.218 ns/op
Iteration   5: 776.155 ns/op
Iteration   6: 782.826 ns/op
Iteration   7: 776.033 ns/op
Iteration   8: 788.189 ns/op
Iteration   9: 775.868 ns/op
Iteration  10: 781.374 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  779.617 ±(99.9%) 3.659 ns/op [Average]
  (min, avg, max) = (773.599, 779.617, 788.248), stdev = 4.214
  CI (99.9%): [775.958, 783.276] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 86.00% complete, ETA 00:10:04
# Fork: 1 of 2
# Warmup Iteration   1: 37.765 ns/op
# Warmup Iteration   2: 66.412 ns/op
# Warmup Iteration   3: 35.678 ns/op
Iteration   1: 35.603 ns/op
Iteration   2: 35.610 ns/op
Iteration   3: 35.688 ns/op
Iteration   4: 35.672 ns/op
Iteration   5: 35.687 ns/op
Iteration   6: 36.160 ns/op
Iteration   7: 35.681 ns/op
Iteration   8: 34.430 ns/op
Iteration   9: 35.734 ns/op
Iteration  10: 35.745 ns/op

# Run progress: 86.06% complete, ETA 00:10:01
# Fork: 2 of 2
# Warmup Iteration   1: 37.701 ns/op
# Warmup Iteration   2: 71.608 ns/op
# Warmup Iteration   3: 35.662 ns/op
Iteration   1: 35.772 ns/op
Iteration   2: 35.665 ns/op
Iteration   3: 35.683 ns/op
Iteration   4: 35.750 ns/op
Iteration   5: 35.663 ns/op
Iteration   6: 36.208 ns/op
Iteration   7: 35.735 ns/op
Iteration   8: 34.433 ns/op
Iteration   9: 35.646 ns/op
Iteration  10: 35.651 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.611 ±(99.9%) 0.376 ns/op [Average]
  (min, avg, max) = (34.430, 35.611, 36.208), stdev = 0.433
  CI (99.9%): [35.234, 35.987] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 86.11% complete, ETA 00:09:59
# Fork: 1 of 2
# Warmup Iteration   1: 3145.356 ns/op
# Warmup Iteration   2: 4824.232 ns/op
# Warmup Iteration   3: 2262.078 ns/op
Iteration   1: 2835.333 ns/op
Iteration   2: 3529.931 ns/op
Iteration   3: 1528.035 ns/op
Iteration   4: 2215.341 ns/op
Iteration   5: 1683.433 ns/op
Iteration   6: 2407.609 ns/op
Iteration   7: 2569.389 ns/op
Iteration   8: 2341.589 ns/op
Iteration   9: 1630.207 ns/op
Iteration  10: 2259.749 ns/op

# Run progress: 86.17% complete, ETA 00:09:56
# Fork: 2 of 2
# Warmup Iteration   1: 3086.216 ns/op
# Warmup Iteration   2: 4608.616 ns/op
# Warmup Iteration   3: 2268.172 ns/op
Iteration   1: 2830.831 ns/op
Iteration   2: 3534.890 ns/op
Iteration   3: 1538.583 ns/op
Iteration   4: 2227.058 ns/op
Iteration   5: 1687.314 ns/op
Iteration   6: 2403.793 ns/op
Iteration   7: 2558.441 ns/op
Iteration   8: 2352.224 ns/op
Iteration   9: 1640.665 ns/op
Iteration  10: 2264.471 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2301.944 ±(99.9%) 511.872 ns/op [Average]
  (min, avg, max) = (1528.035, 2301.944, 3534.890), stdev = 589.473
  CI (99.9%): [1790.072, 2813.816] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 86.22% complete, ETA 00:09:54
# Fork: 1 of 2
# Warmup Iteration   1: 5751.550 ns/op
# Warmup Iteration   2: 3517.905 ns/op
# Warmup Iteration   3: 8601.563 ns/op
Iteration   1: 2665.024 ns/op
Iteration   2: 5234.812 ns/op
Iteration   3: 2320.242 ns/op
Iteration   4: 2296.829 ns/op
Iteration   5: 2328.904 ns/op
Iteration   6: 2565.262 ns/op
Iteration   7: 2588.356 ns/op
Iteration   8: 2499.903 ns/op
Iteration   9: 2359.023 ns/op
Iteration  10: 6562.739 ns/op

# Run progress: 86.28% complete, ETA 00:09:52
# Fork: 2 of 2
# Warmup Iteration   1: 5702.609 ns/op
# Warmup Iteration   2: 3370.113 ns/op
# Warmup Iteration   3: 9365.363 ns/op
Iteration   1: 2816.226 ns/op
Iteration   2: 4990.429 ns/op
Iteration   3: 2328.904 ns/op
Iteration   4: 2315.170 ns/op
Iteration   5: 2346.539 ns/op
Iteration   6: 2600.367 ns/op
Iteration   7: 2580.790 ns/op
Iteration   8: 2497.804 ns/op
Iteration   9: 2378.250 ns/op
Iteration  10: 6609.094 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3144.233 ±(99.9%) 1246.511 ns/op [Average]
  (min, avg, max) = (2296.829, 3144.233, 6609.094), stdev = 1435.484
  CI (99.9%): [1897.723, 4390.744] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 86.33% complete, ETA 00:09:49
# Fork: 1 of 2
# Warmup Iteration   1: 7392.981 ns/op
# Warmup Iteration   2: 3396.564 ns/op
# Warmup Iteration   3: 8195.591 ns/op
Iteration   1: 2598.479 ns/op
Iteration   2: 6348.390 ns/op
Iteration   3: 2422.805 ns/op
Iteration   4: 2456.143 ns/op
Iteration   5: 2433.143 ns/op
Iteration   6: 2698.299 ns/op
Iteration   7: 10943.154 ns/op
Iteration   8: 2422.751 ns/op
Iteration   9: 2297.512 ns/op
Iteration  10: 5896.589 ns/op

# Run progress: 86.39% complete, ETA 00:09:47
# Fork: 2 of 2
# Warmup Iteration   1: 5979.829 ns/op
# Warmup Iteration   2: 3275.946 ns/op
# Warmup Iteration   3: 8731.345 ns/op
Iteration   1: 2611.824 ns/op
Iteration   2: 9841.455 ns/op
Iteration   3: 2408.426 ns/op
Iteration   4: 2463.196 ns/op
Iteration   5: 2431.407 ns/op
Iteration   6: 2695.167 ns/op
Iteration   7: 9356.247 ns/op
Iteration   8: 2432.230 ns/op
Iteration   9: 2324.115 ns/op
Iteration  10: 5830.287 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4145.581 ±(99.9%) 2485.634 ns/op [Average]
  (min, avg, max) = (2297.512, 4145.581, 10943.154), stdev = 2862.460
  CI (99.9%): [1659.947, 6631.215] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 86.44% complete, ETA 00:09:44
# Fork: 1 of 2
# Warmup Iteration   1: 3946.503 ns/op
# Warmup Iteration   2: 2697.223 ns/op
# Warmup Iteration   3: 6204.841 ns/op
Iteration   1: 2716.008 ns/op
Iteration   2: 44526.246 ns/op
Iteration   3: 2144.333 ns/op
Iteration   4: 2301.240 ns/op
Iteration   5: 2299.624 ns/op
Iteration   6: 4395.793 ns/op
Iteration   7: 2329.810 ns/op
Iteration   8: 2436.550 ns/op
Iteration   9: 2350.014 ns/op
Iteration  10: 4552.245 ns/op

# Run progress: 86.50% complete, ETA 00:09:42
# Fork: 2 of 2
# Warmup Iteration   1: 3832.065 ns/op
# Warmup Iteration   2: 2821.910 ns/op
# Warmup Iteration   3: 6313.681 ns/op
Iteration   1: 3006.866 ns/op
Iteration   2: 7432.146 ns/op
Iteration   3: 2218.090 ns/op
Iteration   4: 2408.506 ns/op
Iteration   5: 2344.991 ns/op
Iteration   6: 4165.017 ns/op
Iteration   7: 2314.842 ns/op
Iteration   8: 2387.928 ns/op
Iteration   9: 2326.487 ns/op
Iteration  10: 4518.894 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5158.782 ±(99.9%) 8127.750 ns/op [Average]
  (min, avg, max) = (2144.333, 5158.782, 44526.246), stdev = 9359.929
  CI (99.9%): [≈ 0, 13286.531] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 86.56% complete, ETA 00:09:40
# Fork: 1 of 2
# Warmup Iteration   1: 3869.802 ns/op
# Warmup Iteration   2: 3118.700 ns/op
# Warmup Iteration   3: 2325.279 ns/op
Iteration   1: 2937.429 ns/op
Iteration   2: 3651.610 ns/op
Iteration   3: 1705.623 ns/op
Iteration   4: 2299.041 ns/op
Iteration   5: 1878.088 ns/op
Iteration   6: 2522.243 ns/op
Iteration   7: 2636.456 ns/op
Iteration   8: 2432.484 ns/op
Iteration   9: 1829.585 ns/op
Iteration  10: 2331.350 ns/op

# Run progress: 86.61% complete, ETA 00:09:37
# Fork: 2 of 2
# Warmup Iteration   1: 3752.669 ns/op
# Warmup Iteration   2: 4290.480 ns/op
# Warmup Iteration   3: 2323.261 ns/op
Iteration   1: 2926.027 ns/op
Iteration   2: 3640.643 ns/op
Iteration   3: 1710.815 ns/op
Iteration   4: 2288.400 ns/op
Iteration   5: 1867.789 ns/op
Iteration   6: 2494.999 ns/op
Iteration   7: 2642.575 ns/op
Iteration   8: 2427.495 ns/op
Iteration   9: 1826.954 ns/op
Iteration  10: 2329.293 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2418.945 ±(99.9%) 488.116 ns/op [Average]
  (min, avg, max) = (1705.623, 2418.945, 3651.610), stdev = 562.115
  CI (99.9%): [1930.829, 2907.061] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 86.67% complete, ETA 00:09:35
# Fork: 1 of 2
# Warmup Iteration   1: 37.911 ns/op
# Warmup Iteration   2: 66.745 ns/op
# Warmup Iteration   3: 35.699 ns/op
Iteration   1: 35.713 ns/op
Iteration   2: 35.699 ns/op
Iteration   3: 35.697 ns/op
Iteration   4: 35.699 ns/op
Iteration   5: 35.738 ns/op
Iteration   6: 36.121 ns/op
Iteration   7: 35.638 ns/op
Iteration   8: 34.428 ns/op
Iteration   9: 35.640 ns/op
Iteration  10: 35.633 ns/op

# Run progress: 86.72% complete, ETA 00:09:32
# Fork: 2 of 2
# Warmup Iteration   1: 37.791 ns/op
# Warmup Iteration   2: 66.256 ns/op
# Warmup Iteration   3: 35.696 ns/op
Iteration   1: 35.733 ns/op
Iteration   2: 35.694 ns/op
Iteration   3: 35.627 ns/op
Iteration   4: 35.696 ns/op
Iteration   5: 35.769 ns/op
Iteration   6: 36.162 ns/op
Iteration   7: 35.743 ns/op
Iteration   8: 34.580 ns/op
Iteration   9: 35.677 ns/op
Iteration  10: 35.756 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.622 ±(99.9%) 0.355 ns/op [Average]
  (min, avg, max) = (34.428, 35.622, 36.162), stdev = 0.409
  CI (99.9%): [35.267, 35.977] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 86.78% complete, ETA 00:09:30
# Fork: 1 of 2
# Warmup Iteration   1: 10653.905 ns/op
# Warmup Iteration   2: 6924.410 ns/op
# Warmup Iteration   3: 6138.813 ns/op
Iteration   1: 6149.137 ns/op
Iteration   2: 6138.643 ns/op
Iteration   3: 6146.243 ns/op
Iteration   4: 6174.596 ns/op
Iteration   5: 6167.966 ns/op
Iteration   6: 6159.348 ns/op
Iteration   7: 6179.874 ns/op
Iteration   8: 6178.593 ns/op
Iteration   9: 6173.089 ns/op
Iteration  10: 6123.199 ns/op

# Run progress: 86.83% complete, ETA 00:09:28
# Fork: 2 of 2
# Warmup Iteration   1: 10147.218 ns/op
# Warmup Iteration   2: 7026.982 ns/op
# Warmup Iteration   3: 6129.381 ns/op
Iteration   1: 6141.202 ns/op
Iteration   2: 6125.638 ns/op
Iteration   3: 6114.557 ns/op
Iteration   4: 6142.803 ns/op
Iteration   5: 6162.851 ns/op
Iteration   6: 6128.052 ns/op
Iteration   7: 6072.887 ns/op
Iteration   8: 6152.445 ns/op
Iteration   9: 6113.109 ns/op
Iteration  10: 6109.015 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6142.662 ±(99.9%) 24.123 ns/op [Average]
  (min, avg, max) = (6072.887, 6142.662, 6179.874), stdev = 27.780
  CI (99.9%): [6118.540, 6166.785] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 86.89% complete, ETA 00:09:25
# Fork: 1 of 2
# Warmup Iteration   1: 15672.383 ns/op
# Warmup Iteration   2: 8731.783 ns/op
# Warmup Iteration   3: 7736.536 ns/op
Iteration   1: 7697.315 ns/op
Iteration   2: 7647.945 ns/op
Iteration   3: 7628.463 ns/op
Iteration   4: 7632.042 ns/op
Iteration   5: 7627.051 ns/op
Iteration   6: 7651.525 ns/op
Iteration   7: 7611.417 ns/op
Iteration   8: 7667.962 ns/op
Iteration   9: 7634.353 ns/op
Iteration  10: 7666.178 ns/op

# Run progress: 86.94% complete, ETA 00:09:23
# Fork: 2 of 2
# Warmup Iteration   1: 19259.880 ns/op
# Warmup Iteration   2: 8702.403 ns/op
# Warmup Iteration   3: 7678.333 ns/op
Iteration   1: 7728.101 ns/op
Iteration   2: 7667.368 ns/op
Iteration   3: 7715.696 ns/op
Iteration   4: 7738.901 ns/op
Iteration   5: 7676.773 ns/op
Iteration   6: 7696.456 ns/op
Iteration   7: 7755.663 ns/op
Iteration   8: 7644.183 ns/op
Iteration   9: 7736.803 ns/op
Iteration  10: 7676.880 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7675.054 ±(99.9%) 36.881 ns/op [Average]
  (min, avg, max) = (7611.417, 7675.054, 7755.663), stdev = 42.472
  CI (99.9%): [7638.173, 7711.935] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 87.00% complete, ETA 00:09:21
# Fork: 1 of 2
# Warmup Iteration   1: 15033.532 ns/op
# Warmup Iteration   2: 9053.225 ns/op
# Warmup Iteration   3: 7665.190 ns/op
Iteration   1: 7717.357 ns/op
Iteration   2: 7695.531 ns/op
Iteration   3: 7715.166 ns/op
Iteration   4: 7702.760 ns/op
Iteration   5: 7647.901 ns/op
Iteration   6: 7695.171 ns/op
Iteration   7: 7616.576 ns/op
Iteration   8: 7707.458 ns/op
Iteration   9: 7762.603 ns/op
Iteration  10: 7708.424 ns/op

# Run progress: 87.06% complete, ETA 00:09:18
# Fork: 2 of 2
# Warmup Iteration   1: 17069.669 ns/op
# Warmup Iteration   2: 8902.552 ns/op
# Warmup Iteration   3: 7878.701 ns/op
Iteration   1: 7751.878 ns/op
Iteration   2: 7873.540 ns/op
Iteration   3: 7887.862 ns/op
Iteration   4: 7869.066 ns/op
Iteration   5: 7828.822 ns/op
Iteration   6: 7856.097 ns/op
Iteration   7: 7808.544 ns/op
Iteration   8: 7922.239 ns/op
Iteration   9: 7815.450 ns/op
Iteration  10: 7852.344 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7771.739 ±(99.9%) 76.308 ns/op [Average]
  (min, avg, max) = (7616.576, 7771.739, 7922.239), stdev = 87.877
  CI (99.9%): [7695.431, 7848.048] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 87.11% complete, ETA 00:09:16
# Fork: 1 of 2
# Warmup Iteration   1: 13439.222 ns/op
# Warmup Iteration   2: 8458.021 ns/op
# Warmup Iteration   3: 7462.754 ns/op
Iteration   1: 7424.474 ns/op
Iteration   2: 7448.153 ns/op
Iteration   3: 7415.759 ns/op
Iteration   4: 7440.048 ns/op
Iteration   5: 7502.570 ns/op
Iteration   6: 7444.860 ns/op
Iteration   7: 7450.635 ns/op
Iteration   8: 7455.648 ns/op
Iteration   9: 7401.813 ns/op
Iteration  10: 7461.529 ns/op

# Run progress: 87.17% complete, ETA 00:09:13
# Fork: 2 of 2
# Warmup Iteration   1: 12471.864 ns/op
# Warmup Iteration   2: 8397.347 ns/op
# Warmup Iteration   3: 7443.553 ns/op
Iteration   1: 7435.998 ns/op
Iteration   2: 7448.522 ns/op
Iteration   3: 7478.795 ns/op
Iteration   4: 7458.773 ns/op
Iteration   5: 7438.285 ns/op
Iteration   6: 7505.601 ns/op
Iteration   7: 7464.208 ns/op
Iteration   8: 7439.923 ns/op
Iteration   9: 7442.851 ns/op
Iteration  10: 7481.516 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7451.998 ±(99.9%) 22.543 ns/op [Average]
  (min, avg, max) = (7401.813, 7451.998, 7505.601), stdev = 25.960
  CI (99.9%): [7429.455, 7474.541] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 87.22% complete, ETA 00:09:11
# Fork: 1 of 2
# Warmup Iteration   1: 15394.686 ns/op
# Warmup Iteration   2: 10592.207 ns/op
# Warmup Iteration   3: 8917.549 ns/op
Iteration   1: 8928.554 ns/op
Iteration   2: 8916.394 ns/op
Iteration   3: 8931.273 ns/op
Iteration   4: 9031.402 ns/op
Iteration   5: 9057.635 ns/op
Iteration   6: 9029.184 ns/op
Iteration   7: 9048.263 ns/op
Iteration   8: 9022.405 ns/op
Iteration   9: 9069.049 ns/op
Iteration  10: 9044.959 ns/op

# Run progress: 87.28% complete, ETA 00:09:09
# Fork: 2 of 2
# Warmup Iteration   1: 14522.991 ns/op
# Warmup Iteration   2: 10193.155 ns/op
# Warmup Iteration   3: 8723.151 ns/op
Iteration   1: 8772.574 ns/op
Iteration   2: 8704.052 ns/op
Iteration   3: 8711.555 ns/op
Iteration   4: 8834.107 ns/op
Iteration   5: 8856.489 ns/op
Iteration   6: 8823.452 ns/op
Iteration   7: 8857.294 ns/op
Iteration   8: 8858.366 ns/op
Iteration   9: 8849.747 ns/op
Iteration  10: 8841.222 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8909.399 ±(99.9%) 101.077 ns/op [Average]
  (min, avg, max) = (8704.052, 8909.399, 9069.049), stdev = 116.400
  CI (99.9%): [8808.322, 9010.476] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 87.33% complete, ETA 00:09:06
# Fork: 1 of 2
# Warmup Iteration   1: 38.152 ns/op
# Warmup Iteration   2: 64.177 ns/op
# Warmup Iteration   3: 35.622 ns/op
Iteration   1: 35.682 ns/op
Iteration   2: 35.668 ns/op
Iteration   3: 35.665 ns/op
Iteration   4: 35.678 ns/op
Iteration   5: 35.685 ns/op
Iteration   6: 36.174 ns/op
Iteration   7: 35.672 ns/op
Iteration   8: 34.427 ns/op
Iteration   9: 35.731 ns/op
Iteration  10: 35.705 ns/op

# Run progress: 87.39% complete, ETA 00:09:04
# Fork: 2 of 2
# Warmup Iteration   1: 38.732 ns/op
# Warmup Iteration   2: 64.299 ns/op
# Warmup Iteration   3: 35.723 ns/op
Iteration   1: 35.688 ns/op
Iteration   2: 35.680 ns/op
Iteration   3: 35.692 ns/op
Iteration   4: 35.688 ns/op
Iteration   5: 35.700 ns/op
Iteration   6: 36.168 ns/op
Iteration   7: 35.751 ns/op
Iteration   8: 34.418 ns/op
Iteration   9: 35.704 ns/op
Iteration  10: 35.778 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.618 ±(99.9%) 0.377 ns/op [Average]
  (min, avg, max) = (34.418, 35.618, 36.174), stdev = 0.434
  CI (99.9%): [35.241, 35.995] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 87.44% complete, ETA 00:09:01
# Fork: 1 of 2
# Warmup Iteration   1: 2253.698 ns/op
# Warmup Iteration   2: 1878.031 ns/op
# Warmup Iteration   3: 1604.776 ns/op
Iteration   1: 1605.253 ns/op
Iteration   2: 1604.978 ns/op
Iteration   3: 1605.739 ns/op
Iteration   4: 1599.014 ns/op
Iteration   5: 1610.871 ns/op
Iteration   6: 1594.333 ns/op
Iteration   7: 1609.547 ns/op
Iteration   8: 1610.213 ns/op
Iteration   9: 1593.595 ns/op
Iteration  10: 1598.606 ns/op

# Run progress: 87.50% complete, ETA 00:08:59
# Fork: 2 of 2
# Warmup Iteration   1: 3003.778 ns/op
# Warmup Iteration   2: 1856.172 ns/op
# Warmup Iteration   3: 1605.506 ns/op
Iteration   1: 1605.866 ns/op
Iteration   2: 1606.084 ns/op
Iteration   3: 1607.865 ns/op
Iteration   4: 1599.558 ns/op
Iteration   5: 1611.235 ns/op
Iteration   6: 1595.310 ns/op
Iteration   7: 1609.868 ns/op
Iteration   8: 1617.535 ns/op
Iteration   9: 1594.215 ns/op
Iteration  10: 1599.610 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1603.965 ±(99.9%) 5.912 ns/op [Average]
  (min, avg, max) = (1593.595, 1603.965, 1617.535), stdev = 6.809
  CI (99.9%): [1598.052, 1609.877] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 87.56% complete, ETA 00:08:57
# Fork: 1 of 2
# Warmup Iteration   1: 17152.176 ns/op
# Warmup Iteration   2: 9033.639 ns/op
# Warmup Iteration   3: 7910.480 ns/op
Iteration   1: 7854.988 ns/op
Iteration   2: 7850.785 ns/op
Iteration   3: 7894.248 ns/op
Iteration   4: 7891.025 ns/op
Iteration   5: 7860.949 ns/op
Iteration   6: 7850.873 ns/op
Iteration   7: 7871.443 ns/op
Iteration   8: 7896.146 ns/op
Iteration   9: 7861.289 ns/op
Iteration  10: 7907.403 ns/op

# Run progress: 87.61% complete, ETA 00:08:54
# Fork: 2 of 2
# Warmup Iteration   1: 18833.552 ns/op
# Warmup Iteration   2: 9228.374 ns/op
# Warmup Iteration   3: 8167.661 ns/op
Iteration   1: 8152.490 ns/op
Iteration   2: 8182.930 ns/op
Iteration   3: 8200.172 ns/op
Iteration   4: 8201.215 ns/op
Iteration   5: 8175.435 ns/op
Iteration   6: 8157.722 ns/op
Iteration   7: 8132.226 ns/op
Iteration   8: 8158.319 ns/op
Iteration   9: 8200.763 ns/op
Iteration  10: 8173.264 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8023.684 ±(99.9%) 134.766 ns/op [Average]
  (min, avg, max) = (7850.785, 8023.684, 8201.215), stdev = 155.197
  CI (99.9%): [7888.918, 8158.451] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 87.67% complete, ETA 00:08:52
# Fork: 1 of 2
# Warmup Iteration   1: 20826.846 ns/op
# Warmup Iteration   2: 9423.769 ns/op
# Warmup Iteration   3: 8110.941 ns/op
Iteration   1: 8130.783 ns/op
Iteration   2: 8125.913 ns/op
Iteration   3: 8143.617 ns/op
Iteration   4: 8165.030 ns/op
Iteration   5: 8123.707 ns/op
Iteration   6: 8166.445 ns/op
Iteration   7: 8127.107 ns/op
Iteration   8: 8164.019 ns/op
Iteration   9: 8152.689 ns/op
Iteration  10: 8164.567 ns/op

# Run progress: 87.72% complete, ETA 00:08:49
# Fork: 2 of 2
# Warmup Iteration   1: 18492.187 ns/op
# Warmup Iteration   2: 9165.500 ns/op
# Warmup Iteration   3: 8124.899 ns/op
Iteration   1: 8162.421 ns/op
Iteration   2: 8120.721 ns/op
Iteration   3: 8144.103 ns/op
Iteration   4: 8170.208 ns/op
Iteration   5: 8160.916 ns/op
Iteration   6: 8151.860 ns/op
Iteration   7: 8176.766 ns/op
Iteration   8: 8169.949 ns/op
Iteration   9: 8124.673 ns/op
Iteration  10: 8134.150 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8148.982 ±(99.9%) 16.284 ns/op [Average]
  (min, avg, max) = (8120.721, 8148.982, 8176.766), stdev = 18.753
  CI (99.9%): [8132.698, 8165.266] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 87.78% complete, ETA 00:08:47
# Fork: 1 of 2
# Warmup Iteration   1: 14207.322 ns/op
# Warmup Iteration   2: 8013.906 ns/op
# Warmup Iteration   3: 6580.413 ns/op
Iteration   1: 6663.714 ns/op
Iteration   2: 6580.543 ns/op
Iteration   3: 6591.859 ns/op
Iteration   4: 6675.624 ns/op
Iteration   5: 6603.578 ns/op
Iteration   6: 6618.855 ns/op
Iteration   7: 6587.324 ns/op
Iteration   8: 6567.411 ns/op
Iteration   9: 6672.749 ns/op
Iteration  10: 6663.580 ns/op

# Run progress: 87.83% complete, ETA 00:08:45
# Fork: 2 of 2
# Warmup Iteration   1: 14205.470 ns/op
# Warmup Iteration   2: 7766.237 ns/op
# Warmup Iteration   3: 6813.821 ns/op
Iteration   1: 6811.354 ns/op
Iteration   2: 6819.541 ns/op
Iteration   3: 6847.571 ns/op
Iteration   4: 6845.781 ns/op
Iteration   5: 6860.585 ns/op
Iteration   6: 6841.017 ns/op
Iteration   7: 6856.078 ns/op
Iteration   8: 6834.523 ns/op
Iteration   9: 6878.152 ns/op
Iteration  10: 7049.480 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6743.466 ±(99.9%) 117.864 ns/op [Average]
  (min, avg, max) = (6567.411, 6743.466, 7049.480), stdev = 135.732
  CI (99.9%): [6625.602, 6861.329] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 87.89% complete, ETA 00:08:42
# Fork: 1 of 2
# Warmup Iteration   1: 4522.198 ns/op
# Warmup Iteration   2: 3568.549 ns/op
# Warmup Iteration   3: 3063.726 ns/op
Iteration   1: 3059.546 ns/op
Iteration   2: 3057.286 ns/op
Iteration   3: 3097.973 ns/op
Iteration   4: 3072.898 ns/op
Iteration   5: 3070.340 ns/op
Iteration   6: 3063.733 ns/op
Iteration   7: 3086.358 ns/op
Iteration   8: 3067.159 ns/op
Iteration   9: 3062.646 ns/op
Iteration  10: 3075.708 ns/op

# Run progress: 87.94% complete, ETA 00:08:40
# Fork: 2 of 2
# Warmup Iteration   1: 4505.587 ns/op
# Warmup Iteration   2: 3567.041 ns/op
# Warmup Iteration   3: 3062.375 ns/op
Iteration   1: 3069.238 ns/op
Iteration   2: 3066.173 ns/op
Iteration   3: 3062.525 ns/op
Iteration   4: 3076.485 ns/op
Iteration   5: 3071.628 ns/op
Iteration   6: 3062.013 ns/op
Iteration   7: 3084.957 ns/op
Iteration   8: 3070.254 ns/op
Iteration   9: 3072.291 ns/op
Iteration  10: 3069.614 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3070.941 ±(99.9%) 8.579 ns/op [Average]
  (min, avg, max) = (3057.286, 3070.941, 3097.973), stdev = 9.880
  CI (99.9%): [3062.362, 3079.520] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 88.00% complete, ETA 00:08:37
# Fork: 1 of 2
# Warmup Iteration   1: 38.146 ns/op
# Warmup Iteration   2: 66.967 ns/op
# Warmup Iteration   3: 35.715 ns/op
Iteration   1: 35.695 ns/op
Iteration   2: 35.682 ns/op
Iteration   3: 35.674 ns/op
Iteration   4: 35.673 ns/op
Iteration   5: 35.744 ns/op
Iteration   6: 36.227 ns/op
Iteration   7: 35.764 ns/op
Iteration   8: 34.445 ns/op
Iteration   9: 35.675 ns/op
Iteration  10: 35.752 ns/op

# Run progress: 88.06% complete, ETA 00:08:35
# Fork: 2 of 2
# Warmup Iteration   1: 38.101 ns/op
# Warmup Iteration   2: 66.841 ns/op
# Warmup Iteration   3: 35.675 ns/op
Iteration   1: 35.702 ns/op
Iteration   2: 35.751 ns/op
Iteration   3: 35.671 ns/op
Iteration   4: 35.748 ns/op
Iteration   5: 35.650 ns/op
Iteration   6: 36.178 ns/op
Iteration   7: 35.641 ns/op
Iteration   8: 34.520 ns/op
Iteration   9: 35.678 ns/op
Iteration  10: 35.683 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.628 ±(99.9%) 0.367 ns/op [Average]
  (min, avg, max) = (34.445, 35.628, 36.227), stdev = 0.423
  CI (99.9%): [35.261, 35.995] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 88.11% complete, ETA 00:08:33
# Fork: 1 of 2
# Warmup Iteration   1: 11085.304 ns/op
# Warmup Iteration   2: 24191.475 ns/op
# Warmup Iteration   3: 5362.965 ns/op
Iteration   1: 14785.671 ns/op
Iteration   2: 5170.711 ns/op
Iteration   3: 5289.575 ns/op
Iteration   4: 5291.388 ns/op
Iteration   5: 20054.139 ns/op
Iteration   6: 5811.541 ns/op
Iteration   7: 37290.279 ns/op
Iteration   8: 5583.172 ns/op
Iteration   9: 5598.334 ns/op
Iteration  10: 5748.933 ns/op

# Run progress: 88.17% complete, ETA 00:08:30
# Fork: 2 of 2
# Warmup Iteration   1: 11599.787 ns/op
# Warmup Iteration   2: 17366.947 ns/op
# Warmup Iteration   3: 5390.495 ns/op
Iteration   1: 20937.330 ns/op
Iteration   2: 5213.351 ns/op
Iteration   3: 5249.978 ns/op
Iteration   4: 5330.462 ns/op
Iteration   5: 19260.804 ns/op
Iteration   6: 5692.148 ns/op
Iteration   7: 54716.124 ns/op
Iteration   8: 5441.198 ns/op
Iteration   9: 5295.515 ns/op
Iteration  10: 5556.318 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  12165.849 ±(99.9%) 11392.782 ns/op [Average]
  (min, avg, max) = (5170.711, 12165.849, 54716.124), stdev = 13119.945
  CI (99.9%): [773.066, 23558.631] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 88.22% complete, ETA 00:08:28
# Fork: 1 of 2
# Warmup Iteration   1: 25342.962 ns/op
# Warmup Iteration   2: 14849.881 ns/op
# Warmup Iteration   3: 9003.656 ns/op
Iteration   1: 7705.632 ns/op
Iteration   2: 5730.113 ns/op
Iteration   3: 6432.704 ns/op
Iteration   4: 5966.402 ns/op
Iteration   5: 6476.393 ns/op
Iteration   6: 6462.583 ns/op
Iteration   7: 5955.695 ns/op
Iteration   8: 6230.114 ns/op
Iteration   9: 6372.867 ns/op
Iteration  10: 6353.038 ns/op

# Run progress: 88.28% complete, ETA 00:08:25
# Fork: 2 of 2
# Warmup Iteration   1: 21070.301 ns/op
# Warmup Iteration   2: 19783.125 ns/op
# Warmup Iteration   3: 9127.875 ns/op
Iteration   1: 7484.263 ns/op
Iteration   2: 5635.017 ns/op
Iteration   3: 6379.337 ns/op
Iteration   4: 5824.661 ns/op
Iteration   5: 6386.446 ns/op
Iteration   6: 6313.587 ns/op
Iteration   7: 5927.276 ns/op
Iteration   8: 6066.270 ns/op
Iteration   9: 6167.514 ns/op
Iteration  10: 6105.285 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6298.760 ±(99.9%) 443.320 ns/op [Average]
  (min, avg, max) = (5635.017, 6298.760, 7705.632), stdev = 510.528
  CI (99.9%): [5855.440, 6742.080] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 88.33% complete, ETA 00:08:23
# Fork: 1 of 2
# Warmup Iteration   1: 15615.060 ns/op
# Warmup Iteration   2: 18764.404 ns/op
# Warmup Iteration   3: 7819.699 ns/op
Iteration   1: 19946.347 ns/op
Iteration   2: 5556.207 ns/op
Iteration   3: 6397.743 ns/op
Iteration   4: 5871.625 ns/op
Iteration   5: 6309.093 ns/op
Iteration   6: 6375.479 ns/op
Iteration   7: 5792.463 ns/op
Iteration   8: 6031.482 ns/op
Iteration   9: 6164.154 ns/op
Iteration  10: 6235.367 ns/op

# Run progress: 88.39% complete, ETA 00:08:21
# Fork: 2 of 2
# Warmup Iteration   1: 16057.282 ns/op
# Warmup Iteration   2: 16171.141 ns/op
# Warmup Iteration   3: 7983.085 ns/op
Iteration   1: 14605.454 ns/op
Iteration   2: 5665.899 ns/op
Iteration   3: 6453.951 ns/op
Iteration   4: 5956.301 ns/op
Iteration   5: 6394.189 ns/op
Iteration   6: 6472.369 ns/op
Iteration   7: 5880.676 ns/op
Iteration   8: 6188.055 ns/op
Iteration   9: 6419.234 ns/op
Iteration  10: 6419.751 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7256.792 ±(99.9%) 3078.481 ns/op [Average]
  (min, avg, max) = (5556.207, 7256.792, 19946.347), stdev = 3545.183
  CI (99.9%): [4178.311, 10335.273] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 88.44% complete, ETA 00:08:18
# Fork: 1 of 2
# Warmup Iteration   1: 13196.357 ns/op
# Warmup Iteration   2: 21509.852 ns/op
# Warmup Iteration   3: 6943.986 ns/op
Iteration   1: 13522.272 ns/op
Iteration   2: 5104.268 ns/op
Iteration   3: 4985.505 ns/op
Iteration   4: 5446.448 ns/op
Iteration   5: 6473.191 ns/op
Iteration   6: 5861.389 ns/op
Iteration   7: 5452.686 ns/op
Iteration   8: 5984.318 ns/op
Iteration   9: 6017.811 ns/op
Iteration  10: 5679.046 ns/op

# Run progress: 88.50% complete, ETA 00:08:16
# Fork: 2 of 2
# Warmup Iteration   1: 11411.569 ns/op
# Warmup Iteration   2: 26520.832 ns/op
# Warmup Iteration   3: 8970.349 ns/op
Iteration   1: 9500.548 ns/op
Iteration   2: 5115.001 ns/op
Iteration   3: 5012.239 ns/op
Iteration   4: 5536.547 ns/op
Iteration   5: 6268.547 ns/op
Iteration   6: 5835.452 ns/op
Iteration   7: 5453.881 ns/op
Iteration   8: 5917.851 ns/op
Iteration   9: 6005.973 ns/op
Iteration  10: 5891.855 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6253.241 ±(99.9%) 1698.934 ns/op [Average]
  (min, avg, max) = (4985.505, 6253.241, 13522.272), stdev = 1956.495
  CI (99.9%): [4554.307, 7952.176] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 88.56% complete, ETA 00:08:13
# Fork: 1 of 2
# Warmup Iteration   1: 14474.244 ns/op
# Warmup Iteration   2: 9986.212 ns/op
# Warmup Iteration   3: 8503.789 ns/op
Iteration   1: 8479.652 ns/op
Iteration   2: 8427.441 ns/op
Iteration   3: 8522.668 ns/op
Iteration   4: 8513.610 ns/op
Iteration   5: 8491.230 ns/op
Iteration   6: 8455.748 ns/op
Iteration   7: 8501.958 ns/op
Iteration   8: 8455.247 ns/op
Iteration   9: 8481.831 ns/op
Iteration  10: 8482.699 ns/op

# Run progress: 88.61% complete, ETA 00:08:11
# Fork: 2 of 2
# Warmup Iteration   1: 13361.272 ns/op
# Warmup Iteration   2: 9262.371 ns/op
# Warmup Iteration   3: 8271.037 ns/op
Iteration   1: 8292.434 ns/op
Iteration   2: 8223.466 ns/op
Iteration   3: 8230.231 ns/op
Iteration   4: 8325.610 ns/op
Iteration   5: 8194.447 ns/op
Iteration   6: 8310.798 ns/op
Iteration   7: 8304.310 ns/op
Iteration   8: 8233.091 ns/op
Iteration   9: 8253.658 ns/op
Iteration  10: 8268.038 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8372.408 ±(99.9%) 101.850 ns/op [Average]
  (min, avg, max) = (8194.447, 8372.408, 8522.668), stdev = 117.290
  CI (99.9%): [8270.558, 8474.258] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 88.67% complete, ETA 00:08:09
# Fork: 1 of 2
# Warmup Iteration   1: 38.014 ns/op
# Warmup Iteration   2: 66.488 ns/op
# Warmup Iteration   3: 35.712 ns/op
Iteration   1: 35.765 ns/op
Iteration   2: 35.752 ns/op
Iteration   3: 35.656 ns/op
Iteration   4: 35.645 ns/op
Iteration   5: 35.719 ns/op
Iteration   6: 36.233 ns/op
Iteration   7: 35.747 ns/op
Iteration   8: 34.539 ns/op
Iteration   9: 35.669 ns/op
Iteration  10: 35.692 ns/op

# Run progress: 88.72% complete, ETA 00:08:06
# Fork: 2 of 2
# Warmup Iteration   1: 37.944 ns/op
# Warmup Iteration   2: 68.194 ns/op
# Warmup Iteration   3: 35.723 ns/op
Iteration   1: 35.696 ns/op
Iteration   2: 35.719 ns/op
Iteration   3: 35.642 ns/op
Iteration   4: 35.870 ns/op
Iteration   5: 35.652 ns/op
Iteration   6: 36.198 ns/op
Iteration   7: 35.726 ns/op
Iteration   8: 34.517 ns/op
Iteration   9: 35.733 ns/op
Iteration  10: 35.682 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.643 ±(99.9%) 0.360 ns/op [Average]
  (min, avg, max) = (34.517, 35.643, 36.233), stdev = 0.415
  CI (99.9%): [35.282, 36.003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 88.78% complete, ETA 00:08:04
# Fork: 1 of 2
# Warmup Iteration   1: 511.012 ns/op
# Warmup Iteration   2: 431.140 ns/op
# Warmup Iteration   3: 368.179 ns/op
Iteration   1: 368.124 ns/op
Iteration   2: 368.228 ns/op
Iteration   3: 368.733 ns/op
Iteration   4: 366.206 ns/op
Iteration   5: 365.950 ns/op
Iteration   6: 366.806 ns/op
Iteration   7: 366.132 ns/op
Iteration   8: 367.118 ns/op
Iteration   9: 365.997 ns/op
Iteration  10: 367.315 ns/op

# Run progress: 88.83% complete, ETA 00:08:01
# Fork: 2 of 2
# Warmup Iteration   1: 448.290 ns/op
# Warmup Iteration   2: 435.422 ns/op
# Warmup Iteration   3: 367.004 ns/op
Iteration   1: 367.199 ns/op
Iteration   2: 367.094 ns/op
Iteration   3: 367.261 ns/op
Iteration   4: 364.551 ns/op
Iteration   5: 365.671 ns/op
Iteration   6: 366.576 ns/op
Iteration   7: 364.423 ns/op
Iteration   8: 364.142 ns/op
Iteration   9: 364.628 ns/op
Iteration  10: 367.529 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  366.484 ±(99.9%) 1.142 ns/op [Average]
  (min, avg, max) = (364.142, 366.484, 368.733), stdev = 1.315
  CI (99.9%): [365.342, 367.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 88.89% complete, ETA 00:07:59
# Fork: 1 of 2
# Warmup Iteration   1: 14563.075 ns/op
# Warmup Iteration   2: 3247.632 ns/op
# Warmup Iteration   3: 2811.535 ns/op
Iteration   1: 2814.391 ns/op
Iteration   2: 2813.633 ns/op
Iteration   3: 2813.837 ns/op
Iteration   4: 2815.877 ns/op
Iteration   5: 2814.795 ns/op
Iteration   6: 2813.958 ns/op
Iteration   7: 2812.591 ns/op
Iteration   8: 2815.406 ns/op
Iteration   9: 2814.690 ns/op
Iteration  10: 2820.593 ns/op

# Run progress: 88.94% complete, ETA 00:07:57
# Fork: 2 of 2
# Warmup Iteration   1: 11322.216 ns/op
# Warmup Iteration   2: 3168.715 ns/op
# Warmup Iteration   3: 2801.052 ns/op
Iteration   1: 2804.399 ns/op
Iteration   2: 2800.443 ns/op
Iteration   3: 2800.202 ns/op
Iteration   4: 2822.564 ns/op
Iteration   5: 2801.849 ns/op
Iteration   6: 2800.196 ns/op
Iteration   7: 2799.347 ns/op
Iteration   8: 2822.099 ns/op
Iteration   9: 2842.483 ns/op
Iteration  10: 2805.941 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2812.465 ±(99.9%) 8.997 ns/op [Average]
  (min, avg, max) = (2799.347, 2812.465, 2842.483), stdev = 10.361
  CI (99.9%): [2803.468, 2821.462] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 89.00% complete, ETA 00:07:54
# Fork: 1 of 2
# Warmup Iteration   1: 12210.197 ns/op
# Warmup Iteration   2: 3321.424 ns/op
# Warmup Iteration   3: 2935.521 ns/op
Iteration   1: 2938.722 ns/op
Iteration   2: 2942.491 ns/op
Iteration   3: 2937.551 ns/op
Iteration   4: 2948.569 ns/op
Iteration   5: 2943.953 ns/op
Iteration   6: 2945.340 ns/op
Iteration   7: 2937.548 ns/op
Iteration   8: 2955.572 ns/op
Iteration   9: 2948.315 ns/op
Iteration  10: 2915.794 ns/op

# Run progress: 89.06% complete, ETA 00:07:52
# Fork: 2 of 2
# Warmup Iteration   1: 8263.363 ns/op
# Warmup Iteration   2: 3447.695 ns/op
# Warmup Iteration   3: 2936.478 ns/op
Iteration   1: 2947.115 ns/op
Iteration   2: 2941.086 ns/op
Iteration   3: 2942.315 ns/op
Iteration   4: 2946.962 ns/op
Iteration   5: 2938.628 ns/op
Iteration   6: 2939.951 ns/op
Iteration   7: 2945.102 ns/op
Iteration   8: 2955.134 ns/op
Iteration   9: 2949.738 ns/op
Iteration  10: 2945.186 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2943.254 ±(99.9%) 7.204 ns/op [Average]
  (min, avg, max) = (2915.794, 2943.254, 2955.572), stdev = 8.296
  CI (99.9%): [2936.050, 2950.457] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 89.11% complete, ETA 00:07:49
# Fork: 1 of 2
# Warmup Iteration   1: 4966.761 ns/op
# Warmup Iteration   2: 3302.798 ns/op
# Warmup Iteration   3: 2945.612 ns/op
Iteration   1: 2948.078 ns/op
Iteration   2: 2944.921 ns/op
Iteration   3: 2960.922 ns/op
Iteration   4: 2949.556 ns/op
Iteration   5: 2930.650 ns/op
Iteration   6: 2943.925 ns/op
Iteration   7: 2944.233 ns/op
Iteration   8: 2926.537 ns/op
Iteration   9: 2946.481 ns/op
Iteration  10: 2956.669 ns/op

# Run progress: 89.17% complete, ETA 00:07:47
# Fork: 2 of 2
# Warmup Iteration   1: 5351.969 ns/op
# Warmup Iteration   2: 3574.901 ns/op
# Warmup Iteration   3: 3014.246 ns/op
Iteration   1: 3021.267 ns/op
Iteration   2: 3015.813 ns/op
Iteration   3: 3029.348 ns/op
Iteration   4: 3018.606 ns/op
Iteration   5: 3018.117 ns/op
Iteration   6: 3013.327 ns/op
Iteration   7: 3016.023 ns/op
Iteration   8: 3015.464 ns/op
Iteration   9: 3020.770 ns/op
Iteration  10: 3025.453 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2982.308 ±(99.9%) 33.769 ns/op [Average]
  (min, avg, max) = (2926.537, 2982.308, 3029.348), stdev = 38.889
  CI (99.9%): [2948.539, 3016.077] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 89.22% complete, ETA 00:07:45
# Fork: 1 of 2
# Warmup Iteration   1: 2115.629 ns/op
# Warmup Iteration   2: 1742.222 ns/op
# Warmup Iteration   3: 1505.063 ns/op
Iteration   1: 1506.082 ns/op
Iteration   2: 1505.690 ns/op
Iteration   3: 1504.973 ns/op
Iteration   4: 1499.816 ns/op
Iteration   5: 1499.124 ns/op
Iteration   6: 1503.921 ns/op
Iteration   7: 1499.481 ns/op
Iteration   8: 1498.161 ns/op
Iteration   9: 1500.589 ns/op
Iteration  10: 1504.500 ns/op

# Run progress: 89.28% complete, ETA 00:07:42
# Fork: 2 of 2
# Warmup Iteration   1: 2121.042 ns/op
# Warmup Iteration   2: 1739.269 ns/op
# Warmup Iteration   3: 1503.449 ns/op
Iteration   1: 1503.073 ns/op
Iteration   2: 1503.616 ns/op
Iteration   3: 1502.946 ns/op
Iteration   4: 1496.265 ns/op
Iteration   5: 1495.517 ns/op
Iteration   6: 1501.229 ns/op
Iteration   7: 1495.952 ns/op
Iteration   8: 1496.811 ns/op
Iteration   9: 1496.804 ns/op
Iteration  10: 1529.244 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1502.190 ±(99.9%) 6.291 ns/op [Average]
  (min, avg, max) = (1495.517, 1502.190, 1529.244), stdev = 7.245
  CI (99.9%): [1495.898, 1508.481] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 89.33% complete, ETA 00:07:40
# Fork: 1 of 2
# Warmup Iteration   1: 38.452 ns/op
# Warmup Iteration   2: 66.437 ns/op
# Warmup Iteration   3: 35.707 ns/op
Iteration   1: 35.691 ns/op
Iteration   2: 35.664 ns/op
Iteration   3: 35.728 ns/op
Iteration   4: 35.639 ns/op
Iteration   5: 35.694 ns/op
Iteration   6: 36.182 ns/op
Iteration   7: 35.690 ns/op
Iteration   8: 34.537 ns/op
Iteration   9: 35.729 ns/op
Iteration  10: 35.706 ns/op

# Run progress: 89.39% complete, ETA 00:07:37
# Fork: 2 of 2
# Warmup Iteration   1: 38.637 ns/op
# Warmup Iteration   2: 66.898 ns/op
# Warmup Iteration   3: 35.693 ns/op
Iteration   1: 35.693 ns/op
Iteration   2: 35.704 ns/op
Iteration   3: 35.657 ns/op
Iteration   4: 35.657 ns/op
Iteration   5: 35.700 ns/op
Iteration   6: 36.141 ns/op
Iteration   7: 35.692 ns/op
Iteration   8: 34.424 ns/op
Iteration   9: 35.710 ns/op
Iteration  10: 35.631 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.613 ±(99.9%) 0.361 ns/op [Average]
  (min, avg, max) = (34.424, 35.613, 36.182), stdev = 0.415
  CI (99.9%): [35.253, 35.974] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 89.44% complete, ETA 00:07:35
# Fork: 1 of 2
# Warmup Iteration   1: 3638.441 ns/op
# Warmup Iteration   2: 4033.215 ns/op
# Warmup Iteration   3: 2317.112 ns/op
Iteration   1: 3376.027 ns/op
Iteration   2: 3762.507 ns/op
Iteration   3: 1546.249 ns/op
Iteration   4: 4780.847 ns/op
Iteration   5: 1625.935 ns/op
Iteration   6: 2603.854 ns/op
Iteration   7: 2676.503 ns/op
Iteration   8: 2622.251 ns/op
Iteration   9: 1592.036 ns/op
Iteration  10: 2380.246 ns/op

# Run progress: 89.50% complete, ETA 00:07:33
# Fork: 2 of 2
# Warmup Iteration   1: 3840.060 ns/op
# Warmup Iteration   2: 4475.795 ns/op
# Warmup Iteration   3: 2293.151 ns/op
Iteration   1: 3365.660 ns/op
Iteration   2: 3739.536 ns/op
Iteration   3: 1518.602 ns/op
Iteration   4: 10008.838 ns/op
Iteration   5: 1626.424 ns/op
Iteration   6: 2608.401 ns/op
Iteration   7: 2676.198 ns/op
Iteration   8: 2619.061 ns/op
Iteration   9: 1590.318 ns/op
Iteration  10: 2348.406 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2953.395 ±(99.9%) 1634.576 ns/op [Average]
  (min, avg, max) = (1518.602, 2953.395, 10008.838), stdev = 1882.380
  CI (99.9%): [1318.819, 4587.971] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 89.56% complete, ETA 00:07:30
# Fork: 1 of 2
# Warmup Iteration   1: 7380.061 ns/op
# Warmup Iteration   2: 5993.465 ns/op
# Warmup Iteration   3: 4256.443 ns/op
Iteration   1: 9739.422 ns/op
Iteration   2: 3380.077 ns/op
Iteration   3: 3183.637 ns/op
Iteration   4: 7495.861 ns/op
Iteration   5: 3203.768 ns/op
Iteration   6: 3216.516 ns/op
Iteration   7: 3182.523 ns/op
Iteration   8: 3071.202 ns/op
Iteration   9: 3171.299 ns/op
Iteration  10: 3096.028 ns/op

# Run progress: 89.61% complete, ETA 00:07:28
# Fork: 2 of 2
# Warmup Iteration   1: 14014.128 ns/op
# Warmup Iteration   2: 6999.040 ns/op
# Warmup Iteration   3: 4468.943 ns/op
Iteration   1: 7792.425 ns/op
Iteration   2: 3513.858 ns/op
Iteration   3: 3327.711 ns/op
Iteration   4: 7359.561 ns/op
Iteration   5: 3222.564 ns/op
Iteration   6: 3205.021 ns/op
Iteration   7: 3189.939 ns/op
Iteration   8: 3053.039 ns/op
Iteration   9: 3166.176 ns/op
Iteration  10: 3082.329 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4182.648 ±(99.9%) 1787.526 ns/op [Average]
  (min, avg, max) = (3053.039, 4182.648, 9739.422), stdev = 2058.518
  CI (99.9%): [2395.122, 5970.174] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 89.67% complete, ETA 00:07:25
# Fork: 1 of 2
# Warmup Iteration   1: 7258.858 ns/op
# Warmup Iteration   2: 5766.265 ns/op
# Warmup Iteration   3: 5263.996 ns/op
Iteration   1: 10918.349 ns/op
Iteration   2: 4084.474 ns/op
Iteration   3: 3837.604 ns/op
Iteration   4: 6665.493 ns/op
Iteration   5: 3504.339 ns/op
Iteration   6: 3544.584 ns/op
Iteration   7: 3526.275 ns/op
Iteration   8: 3430.179 ns/op
Iteration   9: 3459.635 ns/op
Iteration  10: 3361.818 ns/op

# Run progress: 89.72% complete, ETA 00:07:23
# Fork: 2 of 2
# Warmup Iteration   1: 7589.336 ns/op
# Warmup Iteration   2: 8310.449 ns/op
# Warmup Iteration   3: 5995.688 ns/op
Iteration   1: 9856.867 ns/op
Iteration   2: 4161.293 ns/op
Iteration   3: 3941.113 ns/op
Iteration   4: 14233.894 ns/op
Iteration   5: 3523.832 ns/op
Iteration   6: 3530.280 ns/op
Iteration   7: 3556.060 ns/op
Iteration   8: 3392.667 ns/op
Iteration   9: 3456.582 ns/op
Iteration  10: 3344.630 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4966.498 ±(99.9%) 2663.999 ns/op [Average]
  (min, avg, max) = (3344.630, 4966.498, 14233.894), stdev = 3067.865
  CI (99.9%): [2302.500, 7630.497] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 89.78% complete, ETA 00:07:21
# Fork: 1 of 2
# Warmup Iteration   1: 5327.098 ns/op
# Warmup Iteration   2: 5348.185 ns/op
# Warmup Iteration   3: 3324.219 ns/op
Iteration   1: 3503.238 ns/op
Iteration   2: 3680.060 ns/op
Iteration   3: 3455.988 ns/op
Iteration   4: 5238.857 ns/op
Iteration   5: 3458.937 ns/op
Iteration   6: 3539.457 ns/op
Iteration   7: 3463.310 ns/op
Iteration   8: 3348.530 ns/op
Iteration   9: 3417.479 ns/op
Iteration  10: 3333.349 ns/op

# Run progress: 89.83% complete, ETA 00:07:18
# Fork: 2 of 2
# Warmup Iteration   1: 5630.801 ns/op
# Warmup Iteration   2: 7195.044 ns/op
# Warmup Iteration   3: 3324.660 ns/op
Iteration   1: 3506.890 ns/op
Iteration   2: 3626.812 ns/op
Iteration   3: 3461.504 ns/op
Iteration   4: 5478.594 ns/op
Iteration   5: 3526.115 ns/op
Iteration   6: 3516.192 ns/op
Iteration   7: 3509.207 ns/op
Iteration   8: 3436.624 ns/op
Iteration   9: 3477.414 ns/op
Iteration  10: 3422.505 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3670.053 ±(99.9%) 507.342 ns/op [Average]
  (min, avg, max) = (3333.349, 3670.053, 5478.594), stdev = 584.256
  CI (99.9%): [3162.711, 4177.395] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 89.89% complete, ETA 00:07:16
# Fork: 1 of 2
# Warmup Iteration   1: 4353.516 ns/op
# Warmup Iteration   2: 7511.785 ns/op
# Warmup Iteration   3: 3334.831 ns/op
Iteration   1: 7043.065 ns/op
Iteration   2: 3960.441 ns/op
Iteration   3: 2506.520 ns/op
Iteration   4: 2772.656 ns/op
Iteration   5: 2846.342 ns/op
Iteration   6: 2917.905 ns/op
Iteration   7: 3821.963 ns/op
Iteration   8: 2979.833 ns/op
Iteration   9: 2739.477 ns/op
Iteration  10: 2863.947 ns/op

# Run progress: 89.94% complete, ETA 00:07:13
# Fork: 2 of 2
# Warmup Iteration   1: 4356.585 ns/op
# Warmup Iteration   2: 5244.959 ns/op
# Warmup Iteration   3: 2932.501 ns/op
Iteration   1: 37295.290 ns/op
Iteration   2: 4109.777 ns/op
Iteration   3: 2581.361 ns/op
Iteration   4: 2853.602 ns/op
Iteration   5: 2944.162 ns/op
Iteration   6: 3019.099 ns/op
Iteration   7: 3949.163 ns/op
Iteration   8: 3116.229 ns/op
Iteration   9: 2853.746 ns/op
Iteration  10: 2941.932 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5005.825 ±(99.9%) 6656.353 ns/op [Average]
  (min, avg, max) = (2506.520, 5005.825, 37295.290), stdev = 7665.466
  CI (99.9%): [≈ 0, 11662.178] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 90.00% complete, ETA 00:07:11
# Fork: 1 of 2
# Warmup Iteration   1: 56.551 ns/op
# Warmup Iteration   2: 64.133 ns/op
# Warmup Iteration   3: 35.661 ns/op
Iteration   1: 35.710 ns/op
Iteration   2: 35.646 ns/op
Iteration   3: 35.696 ns/op
Iteration   4: 35.686 ns/op
Iteration   5: 35.689 ns/op
Iteration   6: 36.140 ns/op
Iteration   7: 35.683 ns/op
Iteration   8: 34.519 ns/op
Iteration   9: 35.681 ns/op
Iteration  10: 35.685 ns/op

# Run progress: 90.06% complete, ETA 00:07:09
# Fork: 2 of 2
# Warmup Iteration   1: 37.848 ns/op
# Warmup Iteration   2: 67.418 ns/op
# Warmup Iteration   3: 35.692 ns/op
Iteration   1: 35.686 ns/op
Iteration   2: 35.694 ns/op
Iteration   3: 35.692 ns/op
Iteration   4: 35.679 ns/op
Iteration   5: 35.662 ns/op
Iteration   6: 36.134 ns/op
Iteration   7: 35.720 ns/op
Iteration   8: 34.437 ns/op
Iteration   9: 35.678 ns/op
Iteration  10: 35.634 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.607 ±(99.9%) 0.357 ns/op [Average]
  (min, avg, max) = (34.437, 35.607, 36.140), stdev = 0.411
  CI (99.9%): [35.250, 35.965] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 90.11% complete, ETA 00:07:06
# Fork: 1 of 2
# Warmup Iteration   1: 11034.799 ns/op
# Warmup Iteration   2: 6837.614 ns/op
# Warmup Iteration   3: 5993.442 ns/op
Iteration   1: 5971.172 ns/op
Iteration   2: 5955.040 ns/op
Iteration   3: 5955.124 ns/op
Iteration   4: 5986.871 ns/op
Iteration   5: 5984.165 ns/op
Iteration   6: 5969.119 ns/op
Iteration   7: 5990.383 ns/op
Iteration   8: 5950.226 ns/op
Iteration   9: 5926.709 ns/op
Iteration  10: 5946.068 ns/op

# Run progress: 90.17% complete, ETA 00:07:04
# Fork: 2 of 2
# Warmup Iteration   1: 11823.037 ns/op
# Warmup Iteration   2: 6905.954 ns/op
# Warmup Iteration   3: 5976.186 ns/op
Iteration   1: 6068.507 ns/op
Iteration   2: 6008.033 ns/op
Iteration   3: 6016.903 ns/op
Iteration   4: 8183.626 ns/op
Iteration   5: 5991.794 ns/op
Iteration   6: 6033.445 ns/op
Iteration   7: 6066.173 ns/op
Iteration   8: 6011.903 ns/op
Iteration   9: 6001.537 ns/op
Iteration  10: 6023.344 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6102.007 ±(99.9%) 426.733 ns/op [Average]
  (min, avg, max) = (5926.709, 6102.007, 8183.626), stdev = 491.427
  CI (99.9%): [5675.274, 6528.740] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 90.22% complete, ETA 00:07:01
# Fork: 1 of 2
# Warmup Iteration   1: 14533.081 ns/op
# Warmup Iteration   2: 7812.876 ns/op
# Warmup Iteration   3: 6879.333 ns/op
Iteration   1: 6907.072 ns/op
Iteration   2: 6905.274 ns/op
Iteration   3: 6908.344 ns/op
Iteration   4: 6902.623 ns/op
Iteration   5: 6880.172 ns/op
Iteration   6: 6884.242 ns/op
Iteration   7: 6883.230 ns/op
Iteration   8: 6891.596 ns/op
Iteration   9: 6875.955 ns/op
Iteration  10: 6900.788 ns/op

# Run progress: 90.28% complete, ETA 00:06:59
# Fork: 2 of 2
# Warmup Iteration   1: 17248.454 ns/op
# Warmup Iteration   2: 7966.071 ns/op
# Warmup Iteration   3: 6999.379 ns/op
Iteration   1: 6974.532 ns/op
Iteration   2: 6979.930 ns/op
Iteration   3: 7023.121 ns/op
Iteration   4: 6961.119 ns/op
Iteration   5: 6978.161 ns/op
Iteration   6: 6973.047 ns/op
Iteration   7: 7007.210 ns/op
Iteration   8: 6990.124 ns/op
Iteration   9: 6996.979 ns/op
Iteration  10: 7020.866 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6942.219 ±(99.9%) 45.424 ns/op [Average]
  (min, avg, max) = (6875.955, 6942.219, 7023.121), stdev = 52.310
  CI (99.9%): [6896.796, 6987.643] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 90.33% complete, ETA 00:06:57
# Fork: 1 of 2
# Warmup Iteration   1: 14856.403 ns/op
# Warmup Iteration   2: 7982.380 ns/op
# Warmup Iteration   3: 7013.081 ns/op
Iteration   1: 7006.958 ns/op
Iteration   2: 7016.448 ns/op
Iteration   3: 7040.547 ns/op
Iteration   4: 7000.113 ns/op
Iteration   5: 7012.452 ns/op
Iteration   6: 7024.191 ns/op
Iteration   7: 7007.048 ns/op
Iteration   8: 7035.188 ns/op
Iteration   9: 6991.131 ns/op
Iteration  10: 7054.050 ns/op

# Run progress: 90.39% complete, ETA 00:06:54
# Fork: 2 of 2
# Warmup Iteration   1: 14453.687 ns/op
# Warmup Iteration   2: 7776.463 ns/op
# Warmup Iteration   3: 6857.433 ns/op
Iteration   1: 6894.295 ns/op
Iteration   2: 6903.107 ns/op
Iteration   3: 6901.556 ns/op
Iteration   4: 6878.849 ns/op
Iteration   5: 6855.821 ns/op
Iteration   6: 6891.736 ns/op
Iteration   7: 6857.924 ns/op
Iteration   8: 6906.583 ns/op
Iteration   9: 6905.496 ns/op
Iteration  10: 6882.052 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6953.277 ±(99.9%) 60.597 ns/op [Average]
  (min, avg, max) = (6855.821, 6953.277, 7054.050), stdev = 69.784
  CI (99.9%): [6892.680, 7013.874] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 90.44% complete, ETA 00:06:52
# Fork: 1 of 2
# Warmup Iteration   1: 9359.152 ns/op
# Warmup Iteration   2: 7002.982 ns/op
# Warmup Iteration   3: 6146.628 ns/op
Iteration   1: 6133.810 ns/op
Iteration   2: 6151.396 ns/op
Iteration   3: 6140.993 ns/op
Iteration   4: 6137.204 ns/op
Iteration   5: 6150.417 ns/op
Iteration   6: 6161.860 ns/op
Iteration   7: 6139.930 ns/op
Iteration   8: 6161.623 ns/op
Iteration   9: 6132.868 ns/op
Iteration  10: 6154.664 ns/op

# Run progress: 90.50% complete, ETA 00:06:49
# Fork: 2 of 2
# Warmup Iteration   1: 10140.444 ns/op
# Warmup Iteration   2: 7559.072 ns/op
# Warmup Iteration   3: 6717.891 ns/op
Iteration   1: 6736.279 ns/op
Iteration   2: 6689.031 ns/op
Iteration   3: 6705.244 ns/op
Iteration   4: 6706.631 ns/op
Iteration   5: 6697.966 ns/op
Iteration   6: 6679.072 ns/op
Iteration   7: 6694.518 ns/op
Iteration   8: 6721.890 ns/op
Iteration   9: 6697.561 ns/op
Iteration  10: 6745.323 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6426.914 ±(99.9%) 250.247 ns/op [Average]
  (min, avg, max) = (6132.868, 6426.914, 6745.323), stdev = 288.185
  CI (99.9%): [6176.667, 6677.161] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 90.56% complete, ETA 00:06:47
# Fork: 1 of 2
# Warmup Iteration   1: 14702.538 ns/op
# Warmup Iteration   2: 10507.404 ns/op
# Warmup Iteration   3: 8879.513 ns/op
Iteration   1: 8899.308 ns/op
Iteration   2: 8849.942 ns/op
Iteration   3: 9010.778 ns/op
Iteration   4: 8883.480 ns/op
Iteration   5: 8908.674 ns/op
Iteration   6: 8884.438 ns/op
Iteration   7: 8918.552 ns/op
Iteration   8: 8914.635 ns/op
Iteration   9: 8912.785 ns/op
Iteration  10: 8896.542 ns/op

# Run progress: 90.61% complete, ETA 00:06:45
# Fork: 2 of 2
# Warmup Iteration   1: 14114.633 ns/op
# Warmup Iteration   2: 10376.264 ns/op
# Warmup Iteration   3: 8727.979 ns/op
Iteration   1: 8732.709 ns/op
Iteration   2: 8713.457 ns/op
Iteration   3: 8748.732 ns/op
Iteration   4: 8722.651 ns/op
Iteration   5: 8745.721 ns/op
Iteration   6: 8736.303 ns/op
Iteration   7: 8738.565 ns/op
Iteration   8: 8764.989 ns/op
Iteration   9: 8746.652 ns/op
Iteration  10: 8736.658 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8823.278 ±(99.9%) 79.831 ns/op [Average]
  (min, avg, max) = (8713.457, 8823.278, 9010.778), stdev = 91.933
  CI (99.9%): [8743.448, 8903.109] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 90.67% complete, ETA 00:06:42
# Fork: 1 of 2
# Warmup Iteration   1: 38.052 ns/op
# Warmup Iteration   2: 68.100 ns/op
# Warmup Iteration   3: 35.703 ns/op
Iteration   1: 35.717 ns/op
Iteration   2: 35.702 ns/op
Iteration   3: 35.651 ns/op
Iteration   4: 35.657 ns/op
Iteration   5: 35.696 ns/op
Iteration   6: 36.174 ns/op
Iteration   7: 35.753 ns/op
Iteration   8: 34.441 ns/op
Iteration   9: 35.713 ns/op
Iteration  10: 35.755 ns/op

# Run progress: 90.72% complete, ETA 00:06:40
# Fork: 2 of 2
# Warmup Iteration   1: 38.330 ns/op
# Warmup Iteration   2: 64.862 ns/op
# Warmup Iteration   3: 35.685 ns/op
Iteration   1: 35.733 ns/op
Iteration   2: 35.683 ns/op
Iteration   3: 35.659 ns/op
Iteration   4: 35.723 ns/op
Iteration   5: 35.723 ns/op
Iteration   6: 36.196 ns/op
Iteration   7: 35.660 ns/op
Iteration   8: 34.521 ns/op
Iteration   9: 35.675 ns/op
Iteration  10: 35.630 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.623 ±(99.9%) 0.364 ns/op [Average]
  (min, avg, max) = (34.441, 35.623, 36.196), stdev = 0.420
  CI (99.9%): [35.259, 35.987] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 90.78% complete, ETA 00:06:37
# Fork: 1 of 2
# Warmup Iteration   1: 3029.647 ns/op
# Warmup Iteration   2: 2006.719 ns/op
# Warmup Iteration   3: 1712.829 ns/op
Iteration   1: 1720.584 ns/op
Iteration   2: 1713.980 ns/op
Iteration   3: 1721.644 ns/op
Iteration   4: 1702.700 ns/op
Iteration   5: 1716.795 ns/op
Iteration   6: 1709.474 ns/op
Iteration   7: 1716.366 ns/op
Iteration   8: 1702.713 ns/op
Iteration   9: 1701.506 ns/op
Iteration  10: 1702.370 ns/op

# Run progress: 90.83% complete, ETA 00:06:35
# Fork: 2 of 2
# Warmup Iteration   1: 2490.132 ns/op
# Warmup Iteration   2: 2017.377 ns/op
# Warmup Iteration   3: 1713.146 ns/op
Iteration   1: 1719.962 ns/op
Iteration   2: 1713.104 ns/op
Iteration   3: 1719.959 ns/op
Iteration   4: 1702.559 ns/op
Iteration   5: 1716.897 ns/op
Iteration   6: 1709.700 ns/op
Iteration   7: 1715.848 ns/op
Iteration   8: 1702.506 ns/op
Iteration   9: 1700.907 ns/op
Iteration  10: 1702.080 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1710.583 ±(99.9%) 6.688 ns/op [Average]
  (min, avg, max) = (1700.907, 1710.583, 1721.644), stdev = 7.702
  CI (99.9%): [1703.894, 1717.271] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 90.89% complete, ETA 00:06:33
# Fork: 1 of 2
# Warmup Iteration   1: 21150.939 ns/op
# Warmup Iteration   2: 9926.329 ns/op
# Warmup Iteration   3: 9126.614 ns/op
Iteration   1: 8736.583 ns/op
Iteration   2: 8737.368 ns/op
Iteration   3: 8722.504 ns/op
Iteration   4: 8715.380 ns/op
Iteration   5: 8732.826 ns/op
Iteration   6: 8749.935 ns/op
Iteration   7: 8734.664 ns/op
Iteration   8: 8715.309 ns/op
Iteration   9: 8731.694 ns/op
Iteration  10: 8688.377 ns/op

# Run progress: 90.94% complete, ETA 00:06:30
# Fork: 2 of 2
# Warmup Iteration   1: 24290.506 ns/op
# Warmup Iteration   2: 9682.996 ns/op
# Warmup Iteration   3: 8990.593 ns/op
Iteration   1: 8624.954 ns/op
Iteration   2: 8627.127 ns/op
Iteration   3: 8618.233 ns/op
Iteration   4: 8680.926 ns/op
Iteration   5: 8590.994 ns/op
Iteration   6: 8640.544 ns/op
Iteration   7: 8614.493 ns/op
Iteration   8: 8606.977 ns/op
Iteration   9: 8594.586 ns/op
Iteration  10: 8617.593 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8674.053 ±(99.9%) 50.176 ns/op [Average]
  (min, avg, max) = (8590.994, 8674.053, 8749.935), stdev = 57.782
  CI (99.9%): [8623.878, 8724.229] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 91.00% complete, ETA 00:06:28
# Fork: 1 of 2
# Warmup Iteration   1: 18808.963 ns/op
# Warmup Iteration   2: 9602.432 ns/op
# Warmup Iteration   3: 8389.796 ns/op
Iteration   1: 8414.569 ns/op
Iteration   2: 8454.527 ns/op
Iteration   3: 8408.821 ns/op
Iteration   4: 8386.628 ns/op
Iteration   5: 8407.017 ns/op
Iteration   6: 8414.189 ns/op
Iteration   7: 8400.263 ns/op
Iteration   8: 8455.476 ns/op
Iteration   9: 8466.291 ns/op
Iteration  10: 8430.083 ns/op

# Run progress: 91.06% complete, ETA 00:06:25
# Fork: 2 of 2
# Warmup Iteration   1: 19273.107 ns/op
# Warmup Iteration   2: 9540.854 ns/op
# Warmup Iteration   3: 8507.163 ns/op
Iteration   1: 8462.123 ns/op
Iteration   2: 8407.292 ns/op
Iteration   3: 8452.178 ns/op
Iteration   4: 8380.316 ns/op
Iteration   5: 8423.675 ns/op
Iteration   6: 8424.758 ns/op
Iteration   7: 8514.650 ns/op
Iteration   8: 8499.032 ns/op
Iteration   9: 8432.371 ns/op
Iteration  10: 8437.290 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8433.577 ±(99.9%) 30.283 ns/op [Average]
  (min, avg, max) = (8380.316, 8433.577, 8514.650), stdev = 34.874
  CI (99.9%): [8403.295, 8463.860] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 91.11% complete, ETA 00:06:23
# Fork: 1 of 2
# Warmup Iteration   1: 10439.363 ns/op
# Warmup Iteration   2: 6792.815 ns/op
# Warmup Iteration   3: 5888.817 ns/op
Iteration   1: 5881.320 ns/op
Iteration   2: 5900.904 ns/op
Iteration   3: 5868.052 ns/op
Iteration   4: 5896.075 ns/op
Iteration   5: 5878.711 ns/op
Iteration   6: 5896.153 ns/op
Iteration   7: 5882.057 ns/op
Iteration   8: 5895.507 ns/op
Iteration   9: 5856.259 ns/op
Iteration  10: 5891.338 ns/op

# Run progress: 91.17% complete, ETA 00:06:21
# Fork: 2 of 2
# Warmup Iteration   1: 10824.076 ns/op
# Warmup Iteration   2: 6698.448 ns/op
# Warmup Iteration   3: 5893.942 ns/op
Iteration   1: 5909.011 ns/op
Iteration   2: 5898.863 ns/op
Iteration   3: 5920.614 ns/op
Iteration   4: 5909.406 ns/op
Iteration   5: 5907.468 ns/op
Iteration   6: 5937.167 ns/op
Iteration   7: 5942.489 ns/op
Iteration   8: 5913.482 ns/op
Iteration   9: 5926.422 ns/op
Iteration  10: 5903.432 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5900.736 ±(99.9%) 18.798 ns/op [Average]
  (min, avg, max) = (5856.259, 5900.736, 5942.489), stdev = 21.647
  CI (99.9%): [5881.939, 5919.534] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 91.22% complete, ETA 00:06:18
# Fork: 1 of 2
# Warmup Iteration   1: 5386.388 ns/op
# Warmup Iteration   2: 4251.588 ns/op
# Warmup Iteration   3: 3635.234 ns/op
Iteration   1: 3641.327 ns/op
Iteration   2: 3638.570 ns/op
Iteration   3: 3641.244 ns/op
Iteration   4: 3642.134 ns/op
Iteration   5: 3639.020 ns/op
Iteration   6: 3659.698 ns/op
Iteration   7: 3642.859 ns/op
Iteration   8: 3646.313 ns/op
Iteration   9: 3642.357 ns/op
Iteration  10: 3640.771 ns/op

# Run progress: 91.28% complete, ETA 00:06:16
# Fork: 2 of 2
# Warmup Iteration   1: 5532.506 ns/op
# Warmup Iteration   2: 4065.379 ns/op
# Warmup Iteration   3: 3638.711 ns/op
Iteration   1: 3648.087 ns/op
Iteration   2: 3635.893 ns/op
Iteration   3: 3642.762 ns/op
Iteration   4: 3648.188 ns/op
Iteration   5: 3643.305 ns/op
Iteration   6: 3651.806 ns/op
Iteration   7: 3642.396 ns/op
Iteration   8: 3644.201 ns/op
Iteration   9: 3644.072 ns/op
Iteration  10: 3644.487 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3643.975 ±(99.9%) 4.475 ns/op [Average]
  (min, avg, max) = (3635.893, 3643.975, 3659.698), stdev = 5.153
  CI (99.9%): [3639.500, 3648.449] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 91.33% complete, ETA 00:06:13
# Fork: 1 of 2
# Warmup Iteration   1: 37.563 ns/op
# Warmup Iteration   2: 68.016 ns/op
# Warmup Iteration   3: 35.718 ns/op
Iteration   1: 35.699 ns/op
Iteration   2: 35.652 ns/op
Iteration   3: 35.674 ns/op
Iteration   4: 35.687 ns/op
Iteration   5: 35.754 ns/op
Iteration   6: 36.161 ns/op
Iteration   7: 35.712 ns/op
Iteration   8: 34.529 ns/op
Iteration   9: 35.692 ns/op
Iteration  10: 35.702 ns/op

# Run progress: 91.39% complete, ETA 00:06:11
# Fork: 2 of 2
# Warmup Iteration   1: 38.389 ns/op
# Warmup Iteration   2: 66.038 ns/op
# Warmup Iteration   3: 35.746 ns/op
Iteration   1: 35.699 ns/op
Iteration   2: 35.631 ns/op
Iteration   3: 35.674 ns/op
Iteration   4: 35.703 ns/op
Iteration   5: 35.695 ns/op
Iteration   6: 36.127 ns/op
Iteration   7: 35.697 ns/op
Iteration   8: 34.514 ns/op
Iteration   9: 35.715 ns/op
Iteration  10: 35.613 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.617 ±(99.9%) 0.348 ns/op [Average]
  (min, avg, max) = (34.514, 35.617, 36.161), stdev = 0.401
  CI (99.9%): [35.268, 35.965] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 91.44% complete, ETA 00:06:09
# Fork: 1 of 2
# Warmup Iteration   1: 16294.159 ns/op
# Warmup Iteration   2: 16447.351 ns/op
# Warmup Iteration   3: 5251.809 ns/op
Iteration   1: 5553.791 ns/op
Iteration   2: 5325.943 ns/op
Iteration   3: 5863.728 ns/op
Iteration   4: 148904.541 ns/op
Iteration   5: 5591.381 ns/op
Iteration   6: 5455.083 ns/op
Iteration   7: 93530.783 ns/op
Iteration   8: 5765.559 ns/op
Iteration   9: 5478.596 ns/op
Iteration  10: 5200.384 ns/op

# Run progress: 91.50% complete, ETA 00:06:06
# Fork: 2 of 2
# Warmup Iteration   1: 19491.625 ns/op
# Warmup Iteration   2: 16925.974 ns/op
# Warmup Iteration   3: 5255.808 ns/op
Iteration   1: 5495.185 ns/op
Iteration   2: 5282.026 ns/op
Iteration   3: 5947.267 ns/op
Iteration   4: 298791.384 ns/op
Iteration   5: 5792.453 ns/op
Iteration   6: 5580.545 ns/op
Iteration   7: 30921.263 ns/op
Iteration   8: 5805.524 ns/op
Iteration   9: 5499.826 ns/op
Iteration  10: 5317.955 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  33055.161 ±(99.9%) 62932.690 ns/op [Average]
  (min, avg, max) = (5200.384, 33055.161, 298791.384), stdev = 72473.379
  CI (99.9%): [≈ 0, 95987.851] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 91.56% complete, ETA 00:06:04
# Fork: 1 of 2
# Warmup Iteration   1: 24197.827 ns/op
# Warmup Iteration   2: 163149.661 ns/op
# Warmup Iteration   3: 12389.055 ns/op
Iteration   1: 6818.479 ns/op
Iteration   2: 25131.867 ns/op
Iteration   3: 6038.254 ns/op
Iteration   4: 5872.284 ns/op
Iteration   5: 6173.456 ns/op
Iteration   6: 5646.966 ns/op
Iteration   7: 6366.706 ns/op
Iteration   8: 6577.023 ns/op
Iteration   9: 6364.238 ns/op
Iteration  10: 6388.166 ns/op

# Run progress: 91.61% complete, ETA 00:06:01
# Fork: 2 of 2
# Warmup Iteration   1: 22455.625 ns/op
# Warmup Iteration   2: 500196.284 ns/op
# Warmup Iteration   3: 17970.145 ns/op
Iteration   1: 6841.163 ns/op
Iteration   2: 14009.301 ns/op
Iteration   3: 6178.821 ns/op
Iteration   4: 5969.994 ns/op
Iteration   5: 6143.535 ns/op
Iteration   6: 5669.742 ns/op
Iteration   7: 6367.517 ns/op
Iteration   8: 6737.459 ns/op
Iteration   9: 6539.402 ns/op
Iteration  10: 6368.854 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7610.161 ±(99.9%) 3893.072 ns/op [Average]
  (min, avg, max) = (5646.966, 7610.161, 25131.867), stdev = 4483.267
  CI (99.9%): [3717.089, 11503.233] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 91.67% complete, ETA 00:05:59
# Fork: 1 of 2
# Warmup Iteration   1: 25474.357 ns/op
# Warmup Iteration   2: 32308.952 ns/op
# Warmup Iteration   3: 13681.791 ns/op
Iteration   1: 6187.667 ns/op
Iteration   2: 5520.939 ns/op
Iteration   3: 6022.335 ns/op
Iteration   4: 5988.183 ns/op
Iteration   5: 5989.882 ns/op
Iteration   6: 5564.939 ns/op
Iteration   7: 6345.232 ns/op
Iteration   8: 6699.984 ns/op
Iteration   9: 6339.396 ns/op
Iteration  10: 6243.327 ns/op

# Run progress: 91.72% complete, ETA 00:05:57
# Fork: 2 of 2
# Warmup Iteration   1: 18954.493 ns/op
# Warmup Iteration   2: 216832.884 ns/op
# Warmup Iteration   3: 10801.818 ns/op
Iteration   1: 6233.555 ns/op
Iteration   2: 5629.055 ns/op
Iteration   3: 6136.682 ns/op
Iteration   4: 6104.315 ns/op
Iteration   5: 6097.442 ns/op
Iteration   6: 5558.950 ns/op
Iteration   7: 6444.043 ns/op
Iteration   8: 6643.313 ns/op
Iteration   9: 6497.558 ns/op
Iteration  10: 6338.278 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6129.254 ±(99.9%) 302.316 ns/op [Average]
  (min, avg, max) = (5520.939, 6129.254, 6699.984), stdev = 348.147
  CI (99.9%): [5826.938, 6431.569] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 91.78% complete, ETA 00:05:54
# Fork: 1 of 2
# Warmup Iteration   1: 11214.018 ns/op
# Warmup Iteration   2: 38535.463 ns/op
# Warmup Iteration   3: 9710.761 ns/op
Iteration   1: 11272.160 ns/op
Iteration   2: 43837.303 ns/op
Iteration   3: 5681.461 ns/op
Iteration   4: 5807.327 ns/op
Iteration   5: 5673.874 ns/op
Iteration   6: 5516.309 ns/op
Iteration   7: 5963.703 ns/op
Iteration   8: 6469.859 ns/op
Iteration   9: 5812.766 ns/op
Iteration  10: 6003.217 ns/op

# Run progress: 91.83% complete, ETA 00:05:52
# Fork: 2 of 2
# Warmup Iteration   1: 11908.339 ns/op
# Warmup Iteration   2: 75568.239 ns/op
# Warmup Iteration   3: 10674.725 ns/op
Iteration   1: 9650.639 ns/op
Iteration   2: 34585.606 ns/op
Iteration   3: 5837.271 ns/op
Iteration   4: 6009.416 ns/op
Iteration   5: 5872.256 ns/op
Iteration   6: 5586.275 ns/op
Iteration   7: 5971.837 ns/op
Iteration   8: 6540.886 ns/op
Iteration   9: 5905.602 ns/op
Iteration  10: 6211.165 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9710.447 ±(99.9%) 8944.421 ns/op [Average]
  (min, avg, max) = (5516.309, 9710.447, 43837.303), stdev = 10300.409
  CI (99.9%): [766.026, 18654.868] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 91.89% complete, ETA 00:05:50
# Fork: 1 of 2
# Warmup Iteration   1: 14195.310 ns/op
# Warmup Iteration   2: 9740.381 ns/op
# Warmup Iteration   3: 8509.343 ns/op
Iteration   1: 8480.061 ns/op
Iteration   2: 8446.137 ns/op
Iteration   3: 8409.122 ns/op
Iteration   4: 10537.612 ns/op
Iteration   5: 8497.116 ns/op
Iteration   6: 8481.397 ns/op
Iteration   7: 8487.422 ns/op
Iteration   8: 8511.337 ns/op
Iteration   9: 8399.351 ns/op
Iteration  10: 8522.917 ns/op

# Run progress: 91.94% complete, ETA 00:05:47
# Fork: 2 of 2
# Warmup Iteration   1: 14985.648 ns/op
# Warmup Iteration   2: 9782.317 ns/op
# Warmup Iteration   3: 8673.922 ns/op
Iteration   1: 8603.393 ns/op
Iteration   2: 8564.144 ns/op
Iteration   3: 8655.474 ns/op
Iteration   4: 10900.772 ns/op
Iteration   5: 8623.642 ns/op
Iteration   6: 8605.003 ns/op
Iteration   7: 8604.396 ns/op
Iteration   8: 8598.862 ns/op
Iteration   9: 8597.583 ns/op
Iteration  10: 8664.109 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8759.493 ±(99.9%) 588.075 ns/op [Average]
  (min, avg, max) = (8399.351, 8759.493, 10900.772), stdev = 677.228
  CI (99.9%): [8171.418, 9347.567] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 92.00% complete, ETA 00:05:45
# Fork: 1 of 2
# Warmup Iteration   1: 37.762 ns/op
# Warmup Iteration   2: 71.677 ns/op
# Warmup Iteration   3: 35.691 ns/op
Iteration   1: 35.744 ns/op
Iteration   2: 35.684 ns/op
Iteration   3: 35.688 ns/op
Iteration   4: 35.725 ns/op
Iteration   5: 35.698 ns/op
Iteration   6: 36.161 ns/op
Iteration   7: 35.698 ns/op
Iteration   8: 34.505 ns/op
Iteration   9: 35.686 ns/op
Iteration  10: 35.701 ns/op

# Run progress: 92.06% complete, ETA 00:05:42
# Fork: 2 of 2
# Warmup Iteration   1: 51.602 ns/op
# Warmup Iteration   2: 66.920 ns/op
# Warmup Iteration   3: 35.628 ns/op
Iteration   1: 35.602 ns/op
Iteration   2: 35.702 ns/op
Iteration   3: 35.639 ns/op
Iteration   4: 35.650 ns/op
Iteration   5: 35.693 ns/op
Iteration   6: 36.151 ns/op
Iteration   7: 35.626 ns/op
Iteration   8: 34.615 ns/op
Iteration   9: 35.673 ns/op
Iteration  10: 35.670 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.616 ±(99.9%) 0.340 ns/op [Average]
  (min, avg, max) = (34.505, 35.616, 36.161), stdev = 0.391
  CI (99.9%): [35.276, 35.955] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 92.11% complete, ETA 00:05:40
# Fork: 1 of 2
# Warmup Iteration   1: 2046.369 ns/op
# Warmup Iteration   2: 1510.570 ns/op
# Warmup Iteration   3: 1308.163 ns/op
Iteration   1: 1308.334 ns/op
Iteration   2: 1307.846 ns/op
Iteration   3: 1308.984 ns/op
Iteration   4: 1299.706 ns/op
Iteration   5: 1308.484 ns/op
Iteration   6: 1297.011 ns/op
Iteration   7: 1308.822 ns/op
Iteration   8: 1301.029 ns/op
Iteration   9: 1295.124 ns/op
Iteration  10: 1298.655 ns/op

# Run progress: 92.17% complete, ETA 00:05:38
# Fork: 2 of 2
# Warmup Iteration   1: 1899.510 ns/op
# Warmup Iteration   2: 1379.506 ns/op
# Warmup Iteration   3: 1225.481 ns/op
Iteration   1: 1225.255 ns/op
Iteration   2: 1226.415 ns/op
Iteration   3: 1227.214 ns/op
Iteration   4: 1218.209 ns/op
Iteration   5: 1230.712 ns/op
Iteration   6: 1216.455 ns/op
Iteration   7: 1227.979 ns/op
Iteration   8: 1217.884 ns/op
Iteration   9: 1215.033 ns/op
Iteration  10: 1218.161 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1262.866 ±(99.9%) 36.427 ns/op [Average]
  (min, avg, max) = (1215.033, 1262.866, 1308.984), stdev = 41.949
  CI (99.9%): [1226.439, 1299.292] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 92.22% complete, ETA 00:05:35
# Fork: 1 of 2
# Warmup Iteration   1: 2422.231 ns/op
# Warmup Iteration   2: 1517.279 ns/op
# Warmup Iteration   3: 1279.045 ns/op
Iteration   1: 1280.845 ns/op
Iteration   2: 1279.407 ns/op
Iteration   3: 1280.365 ns/op
Iteration   4: 1280.451 ns/op
Iteration   5: 1280.677 ns/op
Iteration   6: 1281.435 ns/op
Iteration   7: 1280.970 ns/op
Iteration   8: 1279.822 ns/op
Iteration   9: 1279.871 ns/op
Iteration  10: 1280.348 ns/op

# Run progress: 92.28% complete, ETA 00:05:33
# Fork: 2 of 2
# Warmup Iteration   1: 1905.325 ns/op
# Warmup Iteration   2: 1456.862 ns/op
# Warmup Iteration   3: 1283.314 ns/op
Iteration   1: 1283.293 ns/op
Iteration   2: 1283.840 ns/op
Iteration   3: 1283.177 ns/op
Iteration   4: 1283.356 ns/op
Iteration   5: 1283.374 ns/op
Iteration   6: 1282.712 ns/op
Iteration   7: 1283.849 ns/op
Iteration   8: 1285.246 ns/op
Iteration   9: 1284.093 ns/op
Iteration  10: 1283.448 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1282.029 ±(99.9%) 1.535 ns/op [Average]
  (min, avg, max) = (1279.407, 1282.029, 1285.246), stdev = 1.768
  CI (99.9%): [1280.494, 1283.564] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 92.33% complete, ETA 00:05:30
# Fork: 1 of 2
# Warmup Iteration   1: 2068.834 ns/op
# Warmup Iteration   2: 1530.001 ns/op
# Warmup Iteration   3: 1356.678 ns/op
Iteration   1: 1352.904 ns/op
Iteration   2: 1351.363 ns/op
Iteration   3: 1355.122 ns/op
Iteration   4: 1356.519 ns/op
Iteration   5: 1353.604 ns/op
Iteration   6: 1366.169 ns/op
Iteration   7: 1355.129 ns/op
Iteration   8: 1354.211 ns/op
Iteration   9: 1354.889 ns/op
Iteration  10: 1365.460 ns/op

# Run progress: 92.39% complete, ETA 00:05:28
# Fork: 2 of 2
# Warmup Iteration   1: 2406.546 ns/op
# Warmup Iteration   2: 1531.826 ns/op
# Warmup Iteration   3: 1347.756 ns/op
Iteration   1: 1341.983 ns/op
Iteration   2: 1343.089 ns/op
Iteration   3: 1348.633 ns/op
Iteration   4: 1346.316 ns/op
Iteration   5: 1346.317 ns/op
Iteration   6: 1344.396 ns/op
Iteration   7: 1359.847 ns/op
Iteration   8: 1345.922 ns/op
Iteration   9: 1342.429 ns/op
Iteration  10: 1351.163 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1351.773 ±(99.9%) 6.115 ns/op [Average]
  (min, avg, max) = (1341.983, 1351.773, 1366.169), stdev = 7.042
  CI (99.9%): [1345.658, 1357.888] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 92.44% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: 2079.255 ns/op
# Warmup Iteration   2: 1688.505 ns/op
# Warmup Iteration   3: 1418.007 ns/op
Iteration   1: 1418.714 ns/op
Iteration   2: 1424.228 ns/op
Iteration   3: 1421.697 ns/op
Iteration   4: 1424.497 ns/op
Iteration   5: 1421.146 ns/op
Iteration   6: 1430.636 ns/op
Iteration   7: 1423.391 ns/op
Iteration   8: 1414.362 ns/op
Iteration   9: 1421.155 ns/op
Iteration  10: 1415.555 ns/op

# Run progress: 92.50% complete, ETA 00:05:23
# Fork: 2 of 2
# Warmup Iteration   1: 2253.328 ns/op
# Warmup Iteration   2: 1598.906 ns/op
# Warmup Iteration   3: 1434.583 ns/op
Iteration   1: 1430.149 ns/op
Iteration   2: 1436.588 ns/op
Iteration   3: 1430.182 ns/op
Iteration   4: 1427.908 ns/op
Iteration   5: 1429.878 ns/op
Iteration   6: 1428.295 ns/op
Iteration   7: 1437.375 ns/op
Iteration   8: 1434.077 ns/op
Iteration   9: 1436.713 ns/op
Iteration  10: 1429.942 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1426.824 ±(99.9%) 5.906 ns/op [Average]
  (min, avg, max) = (1414.362, 1426.824, 1437.375), stdev = 6.801
  CI (99.9%): [1420.918, 1432.730] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 92.56% complete, ETA 00:05:21
# Fork: 1 of 2
# Warmup Iteration   1: 1829.118 ns/op
# Warmup Iteration   2: 1472.714 ns/op
# Warmup Iteration   3: 1281.827 ns/op
Iteration   1: 1282.087 ns/op
Iteration   2: 1281.612 ns/op
Iteration   3: 1281.061 ns/op
Iteration   4: 1277.187 ns/op
Iteration   5: 1277.347 ns/op
Iteration   6: 1281.761 ns/op
Iteration   7: 1278.038 ns/op
Iteration   8: 1276.125 ns/op
Iteration   9: 1276.560 ns/op
Iteration  10: 1277.339 ns/op

# Run progress: 92.61% complete, ETA 00:05:18
# Fork: 2 of 2
# Warmup Iteration   1: 1721.581 ns/op
# Warmup Iteration   2: 1469.678 ns/op
# Warmup Iteration   3: 1281.354 ns/op
Iteration   1: 1283.740 ns/op
Iteration   2: 1281.101 ns/op
Iteration   3: 1281.829 ns/op
Iteration   4: 1279.909 ns/op
Iteration   5: 1278.731 ns/op
Iteration   6: 1281.397 ns/op
Iteration   7: 1278.386 ns/op
Iteration   8: 1277.552 ns/op
Iteration   9: 1277.644 ns/op
Iteration  10: 1279.481 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1279.444 ±(99.9%) 1.934 ns/op [Average]
  (min, avg, max) = (1276.125, 1279.444, 1283.740), stdev = 2.227
  CI (99.9%): [1277.510, 1281.379] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 92.67% complete, ETA 00:05:16
# Fork: 1 of 2
# Warmup Iteration   1: 38.721 ns/op
# Warmup Iteration   2: 66.965 ns/op
# Warmup Iteration   3: 35.672 ns/op
Iteration   1: 35.666 ns/op
Iteration   2: 35.647 ns/op
Iteration   3: 35.652 ns/op
Iteration   4: 35.597 ns/op
Iteration   5: 35.720 ns/op
Iteration   6: 36.101 ns/op
Iteration   7: 35.619 ns/op
Iteration   8: 34.526 ns/op
Iteration   9: 35.643 ns/op
Iteration  10: 35.701 ns/op

# Run progress: 92.72% complete, ETA 00:05:14
# Fork: 2 of 2
# Warmup Iteration   1: 38.405 ns/op
# Warmup Iteration   2: 67.048 ns/op
# Warmup Iteration   3: 35.699 ns/op
Iteration   1: 35.646 ns/op
Iteration   2: 35.628 ns/op
Iteration   3: 35.672 ns/op
Iteration   4: 35.690 ns/op
Iteration   5: 35.678 ns/op
Iteration   6: 36.152 ns/op
Iteration   7: 35.634 ns/op
Iteration   8: 34.432 ns/op
Iteration   9: 35.669 ns/op
Iteration  10: 35.704 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.589 ±(99.9%) 0.353 ns/op [Average]
  (min, avg, max) = (34.432, 35.589, 36.152), stdev = 0.407
  CI (99.9%): [35.236, 35.942] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 92.78% complete, ETA 00:05:11
# Fork: 1 of 2
# Warmup Iteration   1: 3738.309 ns/op
# Warmup Iteration   2: 12119.083 ns/op
# Warmup Iteration   3: 2612.657 ns/op
Iteration   1: 120130.880 ns/op
Iteration   2: 4157.393 ns/op
Iteration   3: 2812.984 ns/op
Iteration   4: 3049.685 ns/op
Iteration   5: 3023.289 ns/op
Iteration   6: 3284.215 ns/op
Iteration   7: 4334.134 ns/op
Iteration   8: 3338.574 ns/op
Iteration   9: 3074.600 ns/op
Iteration  10: 3118.506 ns/op

# Run progress: 92.83% complete, ETA 00:05:09
# Fork: 2 of 2
# Warmup Iteration   1: 3612.076 ns/op
# Warmup Iteration   2: 5814.037 ns/op
# Warmup Iteration   3: 2524.849 ns/op
Iteration   1: 19554.722 ns/op
Iteration   2: 4136.153 ns/op
Iteration   3: 2824.779 ns/op
Iteration   4: 3092.747 ns/op
Iteration   5: 3019.157 ns/op
Iteration   6: 3301.711 ns/op
Iteration   7: 4302.066 ns/op
Iteration   8: 3347.555 ns/op
Iteration   9: 3057.359 ns/op
Iteration  10: 3117.159 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10003.883 ±(99.9%) 22730.753 ns/op [Average]
  (min, avg, max) = (2812.984, 10003.883, 120130.880), stdev = 26176.769
  CI (99.9%): [≈ 0, 32734.636] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 92.89% complete, ETA 00:05:06
# Fork: 1 of 2
# Warmup Iteration   1: 8896.276 ns/op
# Warmup Iteration   2: 6822.224 ns/op
# Warmup Iteration   3: 3248.033 ns/op
Iteration   1: 3360.170 ns/op
Iteration   2: 19215.641 ns/op
Iteration   3: 3084.664 ns/op
Iteration   4: 3312.793 ns/op
Iteration   5: 2824.121 ns/op
Iteration   6: 2941.360 ns/op
Iteration   7: 2982.026 ns/op
Iteration   8: 2945.821 ns/op
Iteration   9: 3196.357 ns/op
Iteration  10: 3282.927 ns/op

# Run progress: 92.94% complete, ETA 00:05:04
# Fork: 2 of 2
# Warmup Iteration   1: 12518.663 ns/op
# Warmup Iteration   2: 10261.192 ns/op
# Warmup Iteration   3: 3261.460 ns/op
Iteration   1: 3414.440 ns/op
Iteration   2: 12915.921 ns/op
Iteration   3: 2926.619 ns/op
Iteration   4: 3090.452 ns/op
Iteration   5: 2657.979 ns/op
Iteration   6: 2730.543 ns/op
Iteration   7: 2800.768 ns/op
Iteration   8: 2739.378 ns/op
Iteration   9: 3027.358 ns/op
Iteration  10: 3087.181 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4326.826 ±(99.9%) 3602.121 ns/op [Average]
  (min, avg, max) = (2657.979, 4326.826, 19215.641), stdev = 4148.208
  CI (99.9%): [724.705, 7928.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 93.00% complete, ETA 00:05:02
# Fork: 1 of 2
# Warmup Iteration   1: 7659.786 ns/op
# Warmup Iteration   2: 7358.644 ns/op
# Warmup Iteration   3: 3676.698 ns/op
Iteration   1: 12483.352 ns/op
Iteration   2: 40494.748 ns/op
Iteration   3: 3135.411 ns/op
Iteration   4: 3324.999 ns/op
Iteration   5: 2832.250 ns/op
Iteration   6: 2954.904 ns/op
Iteration   7: 3067.173 ns/op
Iteration   8: 2949.307 ns/op
Iteration   9: 3200.145 ns/op
Iteration  10: 3305.405 ns/op

# Run progress: 93.06% complete, ETA 00:04:59
# Fork: 2 of 2
# Warmup Iteration   1: 7784.256 ns/op
# Warmup Iteration   2: 8143.836 ns/op
# Warmup Iteration   3: 3731.365 ns/op
Iteration   1: 85943.019 ns/op
Iteration   2: 18365.395 ns/op
Iteration   3: 2984.584 ns/op
Iteration   4: 3175.174 ns/op
Iteration   5: 2694.730 ns/op
Iteration   6: 2809.948 ns/op
Iteration   7: 2987.041 ns/op
Iteration   8: 2846.112 ns/op
Iteration   9: 3121.876 ns/op
Iteration  10: 3189.660 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10293.262 ±(99.9%) 17307.748 ns/op [Average]
  (min, avg, max) = (2694.730, 10293.262, 85943.019), stdev = 19931.628
  CI (99.9%): [≈ 0, 27601.009] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 93.11% complete, ETA 00:04:57
# Fork: 1 of 2
# Warmup Iteration   1: 4273.751 ns/op
# Warmup Iteration   2: 9516.418 ns/op
# Warmup Iteration   3: 3271.001 ns/op
Iteration   1: 4071.137 ns/op
Iteration   2: 22411.238 ns/op
Iteration   3: 2668.828 ns/op
Iteration   4: 2865.928 ns/op
Iteration   5: 2589.988 ns/op
Iteration   6: 2608.233 ns/op
Iteration   7: 2708.182 ns/op
Iteration   8: 2636.274 ns/op
Iteration   9: 2711.430 ns/op
Iteration  10: 2780.524 ns/op

# Run progress: 93.17% complete, ETA 00:04:54
# Fork: 2 of 2
# Warmup Iteration   1: 4539.331 ns/op
# Warmup Iteration   2: 8353.844 ns/op
# Warmup Iteration   3: 4749.226 ns/op
Iteration   1: 4396.367 ns/op
Iteration   2: 172265.225 ns/op
Iteration   3: 2568.424 ns/op
Iteration   4: 2781.678 ns/op
Iteration   5: 2480.306 ns/op
Iteration   6: 2510.845 ns/op
Iteration   7: 2618.251 ns/op
Iteration   8: 2547.636 ns/op
Iteration   9: 2592.450 ns/op
Iteration  10: 2693.797 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  12275.337 ±(99.9%) 32922.948 ns/op [Average]
  (min, avg, max) = (2480.306, 12275.337, 172265.225), stdev = 37914.116
  CI (99.9%): [≈ 0, 45198.285] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 93.22% complete, ETA 00:04:52
# Fork: 1 of 2
# Warmup Iteration   1: 4203.851 ns/op
# Warmup Iteration   2: 6051.973 ns/op
# Warmup Iteration   3: 3413.063 ns/op
Iteration   1: 19009.101 ns/op
Iteration   2: 4115.380 ns/op
Iteration   3: 2815.030 ns/op
Iteration   4: 3064.976 ns/op
Iteration   5: 2982.200 ns/op
Iteration   6: 3262.264 ns/op
Iteration   7: 4283.088 ns/op
Iteration   8: 3313.934 ns/op
Iteration   9: 3027.086 ns/op
Iteration  10: 3085.780 ns/op

# Run progress: 93.28% complete, ETA 00:04:50
# Fork: 2 of 2
# Warmup Iteration   1: 4125.757 ns/op
# Warmup Iteration   2: 7185.764 ns/op
# Warmup Iteration   3: 3452.300 ns/op
Iteration   1: 11380.530 ns/op
Iteration   2: 4123.060 ns/op
Iteration   3: 2802.909 ns/op
Iteration   4: 3008.559 ns/op
Iteration   5: 2924.668 ns/op
Iteration   6: 3185.252 ns/op
Iteration   7: 4203.822 ns/op
Iteration   8: 3224.185 ns/op
Iteration   9: 2974.653 ns/op
Iteration  10: 3034.489 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4491.048 ±(99.9%) 3380.818 ns/op [Average]
  (min, avg, max) = (2802.909, 4491.048, 19009.101), stdev = 3893.355
  CI (99.9%): [1110.230, 7871.867] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 93.33% complete, ETA 00:04:47
# Fork: 1 of 2
# Warmup Iteration   1: 39.255 ns/op
# Warmup Iteration   2: 61.378 ns/op
# Warmup Iteration   3: 38.034 ns/op
Iteration   1: 38.054 ns/op
Iteration   2: 38.363 ns/op
Iteration   3: 38.091 ns/op
Iteration   4: 38.094 ns/op
Iteration   5: 38.124 ns/op
Iteration   6: 38.334 ns/op
Iteration   7: 38.074 ns/op
Iteration   8: 37.125 ns/op
Iteration   9: 38.203 ns/op
Iteration  10: 37.910 ns/op

# Run progress: 93.39% complete, ETA 00:04:45
# Fork: 2 of 2
# Warmup Iteration   1: 37.948 ns/op
# Warmup Iteration   2: 62.151 ns/op
# Warmup Iteration   3: 38.317 ns/op
Iteration   1: 38.119 ns/op
Iteration   2: 38.425 ns/op
Iteration   3: 38.055 ns/op
Iteration   4: 38.086 ns/op
Iteration   5: 38.108 ns/op
Iteration   6: 38.106 ns/op
Iteration   7: 38.140 ns/op
Iteration   8: 37.216 ns/op
Iteration   9: 37.920 ns/op
Iteration  10: 38.268 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.041 ±(99.9%) 0.282 ns/op [Average]
  (min, avg, max) = (37.125, 38.041, 38.425), stdev = 0.325
  CI (99.9%): [37.759, 38.323] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 93.44% complete, ETA 00:04:42
# Fork: 1 of 2
# Warmup Iteration   1: 288.349 ns/op
# Warmup Iteration   2: 277.972 ns/op
# Warmup Iteration   3: 238.549 ns/op
Iteration   1: 238.524 ns/op
Iteration   2: 238.235 ns/op
Iteration   3: 239.021 ns/op
Iteration   4: 239.059 ns/op
Iteration   5: 238.466 ns/op
Iteration   6: 239.269 ns/op
Iteration   7: 238.670 ns/op
Iteration   8: 236.188 ns/op
Iteration   9: 238.723 ns/op
Iteration  10: 238.705 ns/op

# Run progress: 93.50% complete, ETA 00:04:40
# Fork: 2 of 2
# Warmup Iteration   1: 289.392 ns/op
# Warmup Iteration   2: 282.079 ns/op
# Warmup Iteration   3: 242.254 ns/op
Iteration   1: 242.438 ns/op
Iteration   2: 241.923 ns/op
Iteration   3: 242.135 ns/op
Iteration   4: 243.153 ns/op
Iteration   5: 242.142 ns/op
Iteration   6: 240.248 ns/op
Iteration   7: 243.095 ns/op
Iteration   8: 239.153 ns/op
Iteration   9: 240.814 ns/op
Iteration  10: 241.725 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  240.084 ±(99.9%) 1.693 ns/op [Average]
  (min, avg, max) = (236.188, 240.084, 243.153), stdev = 1.950
  CI (99.9%): [238.391, 241.777] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 93.56% complete, ETA 00:04:38
# Fork: 1 of 2
# Warmup Iteration   1: 1512.528 ns/op
# Warmup Iteration   2: 1111.584 ns/op
# Warmup Iteration   3: 975.252 ns/op
Iteration   1: 973.584 ns/op
Iteration   2: 975.924 ns/op
Iteration   3: 973.354 ns/op
Iteration   4: 976.137 ns/op
Iteration   5: 975.722 ns/op
Iteration   6: 975.369 ns/op
Iteration   7: 974.534 ns/op
Iteration   8: 973.666 ns/op
Iteration   9: 973.490 ns/op
Iteration  10: 976.210 ns/op

# Run progress: 93.61% complete, ETA 00:04:35
# Fork: 2 of 2
# Warmup Iteration   1: 1656.707 ns/op
# Warmup Iteration   2: 1116.336 ns/op
# Warmup Iteration   3: 973.816 ns/op
Iteration   1: 974.711 ns/op
Iteration   2: 975.895 ns/op
Iteration   3: 977.107 ns/op
Iteration   4: 974.389 ns/op
Iteration   5: 980.374 ns/op
Iteration   6: 980.248 ns/op
Iteration   7: 974.607 ns/op
Iteration   8: 974.810 ns/op
Iteration   9: 975.311 ns/op
Iteration  10: 973.960 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  975.470 ±(99.9%) 1.694 ns/op [Average]
  (min, avg, max) = (973.354, 975.470, 980.374), stdev = 1.951
  CI (99.9%): [973.776, 977.164] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 93.67% complete, ETA 00:04:33
# Fork: 1 of 2
# Warmup Iteration   1: 1670.694 ns/op
# Warmup Iteration   2: 1112.165 ns/op
# Warmup Iteration   3: 981.722 ns/op
Iteration   1: 981.431 ns/op
Iteration   2: 982.764 ns/op
Iteration   3: 980.521 ns/op
Iteration   4: 983.272 ns/op
Iteration   5: 983.412 ns/op
Iteration   6: 981.563 ns/op
Iteration   7: 982.465 ns/op
Iteration   8: 981.493 ns/op
Iteration   9: 984.510 ns/op
Iteration  10: 981.618 ns/op

# Run progress: 93.72% complete, ETA 00:04:30
# Fork: 2 of 2
# Warmup Iteration   1: 1524.734 ns/op
# Warmup Iteration   2: 1120.623 ns/op
# Warmup Iteration   3: 984.900 ns/op
Iteration   1: 983.924 ns/op
Iteration   2: 985.332 ns/op
Iteration   3: 984.396 ns/op
Iteration   4: 987.001 ns/op
Iteration   5: 987.366 ns/op
Iteration   6: 986.782 ns/op
Iteration   7: 987.848 ns/op
Iteration   8: 987.783 ns/op
Iteration   9: 988.212 ns/op
Iteration  10: 984.241 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  984.297 ±(99.9%) 2.153 ns/op [Average]
  (min, avg, max) = (980.521, 984.297, 988.212), stdev = 2.479
  CI (99.9%): [982.144, 986.450] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 93.78% complete, ETA 00:04:28
# Fork: 1 of 2
# Warmup Iteration   1: 1880.986 ns/op
# Warmup Iteration   2: 1541.738 ns/op
# Warmup Iteration   3: 1355.267 ns/op
Iteration   1: 1354.682 ns/op
Iteration   2: 1355.159 ns/op
Iteration   3: 1355.892 ns/op
Iteration   4: 1355.083 ns/op
Iteration   5: 1357.633 ns/op
Iteration   6: 1354.489 ns/op
Iteration   7: 1355.552 ns/op
Iteration   8: 1353.387 ns/op
Iteration   9: 1355.523 ns/op
Iteration  10: 1356.446 ns/op

# Run progress: 93.83% complete, ETA 00:04:26
# Fork: 2 of 2
# Warmup Iteration   1: 2234.311 ns/op
# Warmup Iteration   2: 1527.122 ns/op
# Warmup Iteration   3: 1334.371 ns/op
Iteration   1: 1335.607 ns/op
Iteration   2: 1334.732 ns/op
Iteration   3: 1334.352 ns/op
Iteration   4: 1335.013 ns/op
Iteration   5: 1337.306 ns/op
Iteration   6: 1334.798 ns/op
Iteration   7: 1333.315 ns/op
Iteration   8: 1335.265 ns/op
Iteration   9: 1335.003 ns/op
Iteration  10: 1336.230 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1345.273 ±(99.9%) 9.057 ns/op [Average]
  (min, avg, max) = (1333.315, 1345.273, 1357.633), stdev = 10.430
  CI (99.9%): [1336.216, 1354.331] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 93.89% complete, ETA 00:04:23
# Fork: 1 of 2
# Warmup Iteration   1: 388.915 ns/op
# Warmup Iteration   2: 388.010 ns/op
# Warmup Iteration   3: 328.562 ns/op
Iteration   1: 328.001 ns/op
Iteration   2: 328.522 ns/op
Iteration   3: 328.207 ns/op
Iteration   4: 327.817 ns/op
Iteration   5: 327.898 ns/op
Iteration   6: 327.904 ns/op
Iteration   7: 327.914 ns/op
Iteration   8: 325.671 ns/op
Iteration   9: 328.300 ns/op
Iteration  10: 326.925 ns/op

# Run progress: 93.94% complete, ETA 00:04:21
# Fork: 2 of 2
# Warmup Iteration   1: 369.016 ns/op
# Warmup Iteration   2: 369.937 ns/op
# Warmup Iteration   3: 326.583 ns/op
Iteration   1: 326.598 ns/op
Iteration   2: 326.609 ns/op
Iteration   3: 326.515 ns/op
Iteration   4: 328.265 ns/op
Iteration   5: 328.052 ns/op
Iteration   6: 327.989 ns/op
Iteration   7: 328.073 ns/op
Iteration   8: 325.064 ns/op
Iteration   9: 328.196 ns/op
Iteration  10: 327.999 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  327.526 ±(99.9%) 0.831 ns/op [Average]
  (min, avg, max) = (325.064, 327.526, 328.522), stdev = 0.957
  CI (99.9%): [326.695, 328.357] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 94.00% complete, ETA 00:04:18
# Fork: 1 of 2
# Warmup Iteration   1: 37.885 ns/op
# Warmup Iteration   2: 66.827 ns/op
# Warmup Iteration   3: 38.318 ns/op
Iteration   1: 38.019 ns/op
Iteration   2: 38.024 ns/op
Iteration   3: 38.183 ns/op
Iteration   4: 38.027 ns/op
Iteration   5: 38.265 ns/op
Iteration   6: 37.998 ns/op
Iteration   7: 38.405 ns/op
Iteration   8: 37.220 ns/op
Iteration   9: 38.336 ns/op
Iteration  10: 38.068 ns/op

# Run progress: 94.06% complete, ETA 00:04:16
# Fork: 2 of 2
# Warmup Iteration   1: 56.108 ns/op
# Warmup Iteration   2: 63.710 ns/op
# Warmup Iteration   3: 38.396 ns/op
Iteration   1: 38.174 ns/op
Iteration   2: 38.423 ns/op
Iteration   3: 38.128 ns/op
Iteration   4: 38.196 ns/op
Iteration   5: 38.326 ns/op
Iteration   6: 38.321 ns/op
Iteration   7: 38.134 ns/op
Iteration   8: 37.149 ns/op
Iteration   9: 38.173 ns/op
Iteration  10: 38.196 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.088 ±(99.9%) 0.290 ns/op [Average]
  (min, avg, max) = (37.149, 38.088, 38.423), stdev = 0.334
  CI (99.9%): [37.798, 38.379] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 94.11% complete, ETA 00:04:14
# Fork: 1 of 2
# Warmup Iteration   1: 301.509 ns/op
# Warmup Iteration   2: 279.932 ns/op
# Warmup Iteration   3: 240.469 ns/op
Iteration   1: 240.481 ns/op
Iteration   2: 240.491 ns/op
Iteration   3: 240.360 ns/op
Iteration   4: 240.973 ns/op
Iteration   5: 241.277 ns/op
Iteration   6: 240.641 ns/op
Iteration   7: 240.530 ns/op
Iteration   8: 237.507 ns/op
Iteration   9: 240.372 ns/op
Iteration  10: 240.426 ns/op

# Run progress: 94.17% complete, ETA 00:04:11
# Fork: 2 of 2
# Warmup Iteration   1: 288.472 ns/op
# Warmup Iteration   2: 279.612 ns/op
# Warmup Iteration   3: 241.353 ns/op
Iteration   1: 241.012 ns/op
Iteration   2: 241.413 ns/op
Iteration   3: 241.780 ns/op
Iteration   4: 242.040 ns/op
Iteration   5: 241.482 ns/op
Iteration   6: 241.668 ns/op
Iteration   7: 241.525 ns/op
Iteration   8: 238.564 ns/op
Iteration   9: 241.643 ns/op
Iteration  10: 241.903 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  240.804 ±(99.9%) 0.966 ns/op [Average]
  (min, avg, max) = (237.507, 240.804, 242.040), stdev = 1.112
  CI (99.9%): [239.839, 241.770] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 94.22% complete, ETA 00:04:09
# Fork: 1 of 2
# Warmup Iteration   1: 1893.384 ns/op
# Warmup Iteration   2: 1178.233 ns/op
# Warmup Iteration   3: 1003.949 ns/op
Iteration   1: 1003.761 ns/op
Iteration   2: 1001.450 ns/op
Iteration   3: 1004.751 ns/op
Iteration   4: 1000.201 ns/op
Iteration   5: 1003.915 ns/op
Iteration   6: 1005.961 ns/op
Iteration   7: 1006.950 ns/op
Iteration   8: 996.695 ns/op
Iteration   9: 1005.887 ns/op
Iteration  10: 1002.531 ns/op

# Run progress: 94.28% complete, ETA 00:04:06
# Fork: 2 of 2
# Warmup Iteration   1: 1880.053 ns/op
# Warmup Iteration   2: 1127.735 ns/op
# Warmup Iteration   3: 1006.733 ns/op
Iteration   1: 1005.643 ns/op
Iteration   2: 1003.027 ns/op
Iteration   3: 1001.763 ns/op
Iteration   4: 1007.068 ns/op
Iteration   5: 1004.280 ns/op
Iteration   6: 1004.145 ns/op
Iteration   7: 1006.116 ns/op
Iteration   8: 994.192 ns/op
Iteration   9: 1003.881 ns/op
Iteration  10: 1002.190 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1003.220 ±(99.9%) 2.839 ns/op [Average]
  (min, avg, max) = (994.192, 1003.220, 1007.068), stdev = 3.270
  CI (99.9%): [1000.381, 1006.060] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 94.33% complete, ETA 00:04:04
# Fork: 1 of 2
# Warmup Iteration   1: 1487.042 ns/op
# Warmup Iteration   2: 1154.547 ns/op
# Warmup Iteration   3: 1002.493 ns/op
Iteration   1: 1001.624 ns/op
Iteration   2: 1004.510 ns/op
Iteration   3: 1001.614 ns/op
Iteration   4: 1002.740 ns/op
Iteration   5: 1006.914 ns/op
Iteration   6: 1005.861 ns/op
Iteration   7: 1001.906 ns/op
Iteration   8: 1003.829 ns/op
Iteration   9: 1002.664 ns/op
Iteration  10: 1001.304 ns/op

# Run progress: 94.39% complete, ETA 00:04:02
# Fork: 2 of 2
# Warmup Iteration   1: 1555.805 ns/op
# Warmup Iteration   2: 1134.500 ns/op
# Warmup Iteration   3: 1003.382 ns/op
Iteration   1: 1001.351 ns/op
Iteration   2: 1002.982 ns/op
Iteration   3: 1004.147 ns/op
Iteration   4: 1001.941 ns/op
Iteration   5: 1001.904 ns/op
Iteration   6: 1002.448 ns/op
Iteration   7: 1004.235 ns/op
Iteration   8: 1002.097 ns/op
Iteration   9: 1007.894 ns/op
Iteration  10: 1002.130 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1003.205 ±(99.9%) 1.636 ns/op [Average]
  (min, avg, max) = (1001.304, 1003.205, 1007.894), stdev = 1.884
  CI (99.9%): [1001.569, 1004.840] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 94.44% complete, ETA 00:03:59
# Fork: 1 of 2
# Warmup Iteration   1: 1462.000 ns/op
# Warmup Iteration   2: 1143.273 ns/op
# Warmup Iteration   3: 1008.244 ns/op
Iteration   1: 1009.398 ns/op
Iteration   2: 1007.985 ns/op
Iteration   3: 1008.444 ns/op
Iteration   4: 1008.494 ns/op
Iteration   5: 1009.425 ns/op
Iteration   6: 1008.810 ns/op
Iteration   7: 1008.074 ns/op
Iteration   8: 1008.616 ns/op
Iteration   9: 1008.393 ns/op
Iteration  10: 1008.326 ns/op

# Run progress: 94.50% complete, ETA 00:03:57
# Fork: 2 of 2
# Warmup Iteration   1: 1459.546 ns/op
# Warmup Iteration   2: 1199.922 ns/op
# Warmup Iteration   3: 1005.914 ns/op
Iteration   1: 1007.864 ns/op
Iteration   2: 1006.118 ns/op
Iteration   3: 1006.006 ns/op
Iteration   4: 1006.488 ns/op
Iteration   5: 1006.792 ns/op
Iteration   6: 1006.867 ns/op
Iteration   7: 1006.097 ns/op
Iteration   8: 1006.224 ns/op
Iteration   9: 1005.907 ns/op
Iteration  10: 1006.326 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1007.533 ±(99.9%) 1.052 ns/op [Average]
  (min, avg, max) = (1005.907, 1007.533, 1009.425), stdev = 1.211
  CI (99.9%): [1006.481, 1008.585] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 94.56% complete, ETA 00:03:54
# Fork: 1 of 2
# Warmup Iteration   1: 527.258 ns/op
# Warmup Iteration   2: 545.295 ns/op
# Warmup Iteration   3: 459.516 ns/op
Iteration   1: 458.932 ns/op
Iteration   2: 459.386 ns/op
Iteration   3: 459.837 ns/op
Iteration   4: 460.989 ns/op
Iteration   5: 460.629 ns/op
Iteration   6: 461.346 ns/op
Iteration   7: 461.530 ns/op
Iteration   8: 458.093 ns/op
Iteration   9: 460.312 ns/op
Iteration  10: 460.960 ns/op

# Run progress: 94.61% complete, ETA 00:03:52
# Fork: 2 of 2
# Warmup Iteration   1: 517.153 ns/op
# Warmup Iteration   2: 553.609 ns/op
# Warmup Iteration   3: 459.722 ns/op
Iteration   1: 459.488 ns/op
Iteration   2: 459.503 ns/op
Iteration   3: 459.814 ns/op
Iteration   4: 461.250 ns/op
Iteration   5: 460.548 ns/op
Iteration   6: 461.628 ns/op
Iteration   7: 461.261 ns/op
Iteration   8: 458.167 ns/op
Iteration   9: 460.601 ns/op
Iteration  10: 460.813 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  460.254 ±(99.9%) 0.923 ns/op [Average]
  (min, avg, max) = (458.093, 460.254, 461.628), stdev = 1.063
  CI (99.9%): [459.332, 461.177] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 94.67% complete, ETA 00:03:50
# Fork: 1 of 2
# Warmup Iteration   1: 39.154 ns/op
# Warmup Iteration   2: 62.370 ns/op
# Warmup Iteration   3: 38.232 ns/op
Iteration   1: 37.952 ns/op
Iteration   2: 38.012 ns/op
Iteration   3: 38.067 ns/op
Iteration   4: 38.349 ns/op
Iteration   5: 38.344 ns/op
Iteration   6: 38.021 ns/op
Iteration   7: 38.261 ns/op
Iteration   8: 37.159 ns/op
Iteration   9: 38.395 ns/op
Iteration  10: 38.082 ns/op

# Run progress: 94.72% complete, ETA 00:03:47
# Fork: 2 of 2
# Warmup Iteration   1: 39.989 ns/op
# Warmup Iteration   2: 63.787 ns/op
# Warmup Iteration   3: 37.996 ns/op
Iteration   1: 38.296 ns/op
Iteration   2: 38.367 ns/op
Iteration   3: 38.136 ns/op
Iteration   4: 38.095 ns/op
Iteration   5: 37.973 ns/op
Iteration   6: 38.076 ns/op
Iteration   7: 38.048 ns/op
Iteration   8: 37.180 ns/op
Iteration   9: 38.180 ns/op
Iteration  10: 38.145 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.057 ±(99.9%) 0.289 ns/op [Average]
  (min, avg, max) = (37.159, 38.057, 38.395), stdev = 0.333
  CI (99.9%): [37.768, 38.346] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 94.78% complete, ETA 00:03:45
# Fork: 1 of 2
# Warmup Iteration   1: 294.873 ns/op
# Warmup Iteration   2: 284.258 ns/op
# Warmup Iteration   3: 240.582 ns/op
Iteration   1: 243.063 ns/op
Iteration   2: 243.266 ns/op
Iteration   3: 239.966 ns/op
Iteration   4: 240.438 ns/op
Iteration   5: 241.071 ns/op
Iteration   6: 240.973 ns/op
Iteration   7: 243.661 ns/op
Iteration   8: 237.852 ns/op
Iteration   9: 240.783 ns/op
Iteration  10: 240.669 ns/op

# Run progress: 94.83% complete, ETA 00:03:42
# Fork: 2 of 2
# Warmup Iteration   1: 289.692 ns/op
# Warmup Iteration   2: 277.150 ns/op
# Warmup Iteration   3: 239.757 ns/op
Iteration   1: 261.555 ns/op
Iteration   2: 261.431 ns/op
Iteration   3: 239.844 ns/op
Iteration   4: 239.768 ns/op
Iteration   5: 240.731 ns/op
Iteration   6: 240.408 ns/op
Iteration   7: 243.258 ns/op
Iteration   8: 237.516 ns/op
Iteration   9: 239.218 ns/op
Iteration  10: 239.919 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  242.769 ±(99.9%) 5.740 ns/op [Average]
  (min, avg, max) = (237.516, 242.769, 261.555), stdev = 6.610
  CI (99.9%): [237.030, 248.509] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 94.89% complete, ETA 00:03:40
# Fork: 1 of 2
# Warmup Iteration   1: 2205.394 ns/op
# Warmup Iteration   2: 1253.212 ns/op
# Warmup Iteration   3: 1091.425 ns/op
Iteration   1: 1101.477 ns/op
Iteration   2: 1089.946 ns/op
Iteration   3: 68267.628 ns/op
Iteration   4: 1100.762 ns/op
Iteration   5: 62815.892 ns/op
Iteration   6: 1105.292 ns/op
Iteration   7: 1074.157 ns/op
Iteration   8: 1071.958 ns/op
Iteration   9: 1073.409 ns/op
Iteration  10: 1080.474 ns/op

# Run progress: 94.94% complete, ETA 00:03:38
# Fork: 2 of 2
# Warmup Iteration   1: 2258.100 ns/op
# Warmup Iteration   2: 1244.008 ns/op
# Warmup Iteration   3: 1095.347 ns/op
Iteration   1: 1092.180 ns/op
Iteration   2: 1132.579 ns/op
Iteration   3: 12756.779 ns/op
Iteration   4: 1057.995 ns/op
Iteration   5: 3263.940 ns/op
Iteration   6: 1090.805 ns/op
Iteration   7: 1067.684 ns/op
Iteration   8: 1061.703 ns/op
Iteration   9: 1060.384 ns/op
Iteration  10: 1063.428 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8221.424 ±(99.9%) 17190.980 ns/op [Average]
  (min, avg, max) = (1057.995, 8221.424, 68267.628), stdev = 19797.159
  CI (99.9%): [≈ 0, 25412.404] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 95.00% complete, ETA 00:03:35
# Fork: 1 of 2
# Warmup Iteration   1: 2221.053 ns/op
# Warmup Iteration   2: 1249.970 ns/op
# Warmup Iteration   3: 1098.297 ns/op
Iteration   1: 1099.615 ns/op
Iteration   2: 1114.763 ns/op
Iteration   3: 10043.622 ns/op
Iteration   4: 1021.460 ns/op
Iteration   5: 1092.582 ns/op
Iteration   6: 1019.130 ns/op
Iteration   7: 1020.807 ns/op
Iteration   8: 1033.978 ns/op
Iteration   9: 1023.719 ns/op
Iteration  10: 1038.146 ns/op

# Run progress: 95.06% complete, ETA 00:03:33
# Fork: 2 of 2
# Warmup Iteration   1: 1669.638 ns/op
# Warmup Iteration   2: 1244.388 ns/op
# Warmup Iteration   3: 1099.785 ns/op
Iteration   1: 1098.673 ns/op
Iteration   2: 1108.351 ns/op
Iteration   3: 22402.320 ns/op
Iteration   4: 1040.486 ns/op
Iteration   5: 1097.065 ns/op
Iteration   6: 1026.943 ns/op
Iteration   7: 1022.444 ns/op
Iteration   8: 1026.268 ns/op
Iteration   9: 1034.750 ns/op
Iteration  10: 1053.780 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2570.945 ±(99.9%) 4412.337 ns/op [Average]
  (min, avg, max) = (1019.130, 2570.945, 22402.320), stdev = 5081.254
  CI (99.9%): [≈ 0, 6983.282] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 95.11% complete, ETA 00:03:30
# Fork: 1 of 2
# Warmup Iteration   1: 1473.559 ns/op
# Warmup Iteration   2: 1676.736 ns/op
# Warmup Iteration   3: 1038.593 ns/op
Iteration   1: 1034.106 ns/op
Iteration   2: 1022.553 ns/op
Iteration   3: 1016.788 ns/op
Iteration   4: 1040.598 ns/op
Iteration   5: 1030.235 ns/op
Iteration   6: 1032.393 ns/op
Iteration   7: 1041.562 ns/op
Iteration   8: 1019.431 ns/op
Iteration   9: 1030.885 ns/op
Iteration  10: 1038.165 ns/op

# Run progress: 95.17% complete, ETA 00:03:28
# Fork: 2 of 2
# Warmup Iteration   1: 1541.427 ns/op
# Warmup Iteration   2: 2006.494 ns/op
# Warmup Iteration   3: 1038.783 ns/op
Iteration   1: 1034.868 ns/op
Iteration   2: 1029.111 ns/op
Iteration   3: 1017.560 ns/op
Iteration   4: 1025.931 ns/op
Iteration   5: 1031.386 ns/op
Iteration   6: 1032.454 ns/op
Iteration   7: 1026.760 ns/op
Iteration   8: 1021.692 ns/op
Iteration   9: 1031.731 ns/op
Iteration  10: 1039.663 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1029.894 ±(99.9%) 6.477 ns/op [Average]
  (min, avg, max) = (1016.788, 1029.894, 1041.562), stdev = 7.459
  CI (99.9%): [1023.416, 1036.371] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 95.22% complete, ETA 00:03:26
# Fork: 1 of 2
# Warmup Iteration   1: 526.444 ns/op
# Warmup Iteration   2: 541.203 ns/op
# Warmup Iteration   3: 454.797 ns/op
Iteration   1: 463.015 ns/op
Iteration   2: 462.216 ns/op
Iteration   3: 456.813 ns/op
Iteration   4: 456.908 ns/op
Iteration   5: 458.451 ns/op
Iteration   6: 456.761 ns/op
Iteration   7: 463.273 ns/op
Iteration   8: 454.033 ns/op
Iteration   9: 458.613 ns/op
Iteration  10: 455.163 ns/op

# Run progress: 95.28% complete, ETA 00:03:23
# Fork: 2 of 2
# Warmup Iteration   1: 522.694 ns/op
# Warmup Iteration   2: 541.978 ns/op
# Warmup Iteration   3: 457.520 ns/op
Iteration   1: 462.913 ns/op
Iteration   2: 463.326 ns/op
Iteration   3: 456.814 ns/op
Iteration   4: 458.444 ns/op
Iteration   5: 459.383 ns/op
Iteration   6: 458.790 ns/op
Iteration   7: 464.113 ns/op
Iteration   8: 455.671 ns/op
Iteration   9: 459.668 ns/op
Iteration  10: 458.306 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  459.134 ±(99.9%) 2.642 ns/op [Average]
  (min, avg, max) = (454.033, 459.134, 464.113), stdev = 3.042
  CI (99.9%): [456.492, 461.775] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 95.33% complete, ETA 00:03:21
# Fork: 1 of 2
# Warmup Iteration   1: 51.621 ns/op
# Warmup Iteration   2: 62.585 ns/op
# Warmup Iteration   3: 37.973 ns/op
Iteration   1: 38.008 ns/op
Iteration   2: 38.128 ns/op
Iteration   3: 38.152 ns/op
Iteration   4: 38.160 ns/op
Iteration   5: 38.088 ns/op
Iteration   6: 38.078 ns/op
Iteration   7: 38.053 ns/op
Iteration   8: 37.114 ns/op
Iteration   9: 38.086 ns/op
Iteration  10: 38.082 ns/op

# Run progress: 95.39% complete, ETA 00:03:19
# Fork: 2 of 2
# Warmup Iteration   1: 37.886 ns/op
# Warmup Iteration   2: 62.551 ns/op
# Warmup Iteration   3: 37.988 ns/op
Iteration   1: 37.922 ns/op
Iteration   2: 38.081 ns/op
Iteration   3: 37.993 ns/op
Iteration   4: 38.385 ns/op
Iteration   5: 38.163 ns/op
Iteration   6: 38.093 ns/op
Iteration   7: 37.921 ns/op
Iteration   8: 37.198 ns/op
Iteration   9: 37.979 ns/op
Iteration  10: 38.008 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  37.985 ±(99.9%) 0.261 ns/op [Average]
  (min, avg, max) = (37.114, 37.985, 38.385), stdev = 0.301
  CI (99.9%): [37.723, 38.246] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 95.44% complete, ETA 00:03:16
# Fork: 1 of 2
# Warmup Iteration   1: 307.913 ns/op
# Warmup Iteration   2: 285.559 ns/op
# Warmup Iteration   3: 238.511 ns/op
Iteration   1: 238.818 ns/op
Iteration   2: 238.689 ns/op
Iteration   3: 238.887 ns/op
Iteration   4: 238.702 ns/op
Iteration   5: 238.330 ns/op
Iteration   6: 239.145 ns/op
Iteration   7: 238.325 ns/op
Iteration   8: 236.099 ns/op
Iteration   9: 239.169 ns/op
Iteration  10: 238.481 ns/op

# Run progress: 95.50% complete, ETA 00:03:14
# Fork: 2 of 2
# Warmup Iteration   1: 299.885 ns/op
# Warmup Iteration   2: 274.862 ns/op
# Warmup Iteration   3: 238.404 ns/op
Iteration   1: 239.348 ns/op
Iteration   2: 239.164 ns/op
Iteration   3: 238.494 ns/op
Iteration   4: 238.480 ns/op
Iteration   5: 238.307 ns/op
Iteration   6: 239.589 ns/op
Iteration   7: 238.406 ns/op
Iteration   8: 235.899 ns/op
Iteration   9: 238.381 ns/op
Iteration  10: 238.494 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  238.460 ±(99.9%) 0.801 ns/op [Average]
  (min, avg, max) = (235.899, 238.460, 239.589), stdev = 0.922
  CI (99.9%): [237.660, 239.261] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 95.56% complete, ETA 00:03:11
# Fork: 1 of 2
# Warmup Iteration   1: 1768.842 ns/op
# Warmup Iteration   2: 1372.501 ns/op
# Warmup Iteration   3: 1139.628 ns/op
Iteration   1: 1139.512 ns/op
Iteration   2: 1140.070 ns/op
Iteration   3: 1139.424 ns/op
Iteration   4: 1138.891 ns/op
Iteration   5: 1139.883 ns/op
Iteration   6: 1141.859 ns/op
Iteration   7: 1139.215 ns/op
Iteration   8: 1140.602 ns/op
Iteration   9: 1138.884 ns/op
Iteration  10: 1140.398 ns/op

# Run progress: 95.61% complete, ETA 00:03:09
# Fork: 2 of 2
# Warmup Iteration   1: 2127.196 ns/op
# Warmup Iteration   2: 1223.798 ns/op
# Warmup Iteration   3: 1073.774 ns/op
Iteration   1: 1073.654 ns/op
Iteration   2: 1073.247 ns/op
Iteration   3: 1074.015 ns/op
Iteration   4: 1073.891 ns/op
Iteration   5: 1074.594 ns/op
Iteration   6: 1073.762 ns/op
Iteration   7: 1075.549 ns/op
Iteration   8: 1075.177 ns/op
Iteration   9: 1072.722 ns/op
Iteration  10: 1075.073 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1107.021 ±(99.9%) 29.279 ns/op [Average]
  (min, avg, max) = (1072.722, 1107.021, 1141.859), stdev = 33.718
  CI (99.9%): [1077.742, 1136.300] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 95.67% complete, ETA 00:03:07
# Fork: 1 of 2
# Warmup Iteration   1: 2319.008 ns/op
# Warmup Iteration   2: 1337.260 ns/op
# Warmup Iteration   3: 1185.170 ns/op
Iteration   1: 1190.315 ns/op
Iteration   2: 1185.391 ns/op
Iteration   3: 1185.465 ns/op
Iteration   4: 1184.988 ns/op
Iteration   5: 1185.560 ns/op
Iteration   6: 1193.243 ns/op
Iteration   7: 1185.838 ns/op
Iteration   8: 1185.198 ns/op
Iteration   9: 1185.331 ns/op
Iteration  10: 1185.187 ns/op

# Run progress: 95.72% complete, ETA 00:03:04
# Fork: 2 of 2
# Warmup Iteration   1: 1790.838 ns/op
# Warmup Iteration   2: 1341.185 ns/op
# Warmup Iteration   3: 1184.596 ns/op
Iteration   1: 1186.096 ns/op
Iteration   2: 1184.865 ns/op
Iteration   3: 1185.004 ns/op
Iteration   4: 1186.336 ns/op
Iteration   5: 1184.891 ns/op
Iteration   6: 1188.827 ns/op
Iteration   7: 1184.924 ns/op
Iteration   8: 1184.889 ns/op
Iteration   9: 1185.027 ns/op
Iteration  10: 1184.982 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1186.118 ±(99.9%) 1.895 ns/op [Average]
  (min, avg, max) = (1184.865, 1186.118, 1193.243), stdev = 2.182
  CI (99.9%): [1184.223, 1188.012] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 95.78% complete, ETA 00:03:02
# Fork: 1 of 2
# Warmup Iteration   1: 1760.304 ns/op
# Warmup Iteration   2: 1342.458 ns/op
# Warmup Iteration   3: 1186.264 ns/op
Iteration   1: 1186.177 ns/op
Iteration   2: 1186.428 ns/op
Iteration   3: 1186.793 ns/op
Iteration   4: 1186.733 ns/op
Iteration   5: 1185.304 ns/op
Iteration   6: 1184.449 ns/op
Iteration   7: 1186.355 ns/op
Iteration   8: 1187.087 ns/op
Iteration   9: 1185.179 ns/op
Iteration  10: 1186.933 ns/op

# Run progress: 95.83% complete, ETA 00:02:59
# Fork: 2 of 2
# Warmup Iteration   1: 1527.702 ns/op
# Warmup Iteration   2: 1263.079 ns/op
# Warmup Iteration   3: 1063.036 ns/op
Iteration   1: 1064.370 ns/op
Iteration   2: 1062.770 ns/op
Iteration   3: 1064.745 ns/op
Iteration   4: 1062.863 ns/op
Iteration   5: 1062.344 ns/op
Iteration   6: 1063.925 ns/op
Iteration   7: 1062.290 ns/op
Iteration   8: 1062.689 ns/op
Iteration   9: 1062.441 ns/op
Iteration  10: 1062.677 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1124.628 ±(99.9%) 54.811 ns/op [Average]
  (min, avg, max) = (1062.290, 1124.628, 1187.087), stdev = 63.120
  CI (99.9%): [1069.817, 1179.438] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 95.89% complete, ETA 00:02:57
# Fork: 1 of 2
# Warmup Iteration   1: 472.479 ns/op
# Warmup Iteration   2: 500.572 ns/op
# Warmup Iteration   3: 422.852 ns/op
Iteration   1: 422.936 ns/op
Iteration   2: 422.615 ns/op
Iteration   3: 422.811 ns/op
Iteration   4: 423.596 ns/op
Iteration   5: 423.351 ns/op
Iteration   6: 423.674 ns/op
Iteration   7: 423.572 ns/op
Iteration   8: 421.247 ns/op
Iteration   9: 423.891 ns/op
Iteration  10: 423.910 ns/op

# Run progress: 95.94% complete, ETA 00:02:55
# Fork: 2 of 2
# Warmup Iteration   1: 488.133 ns/op
# Warmup Iteration   2: 498.226 ns/op
# Warmup Iteration   3: 422.143 ns/op
Iteration   1: 422.268 ns/op
Iteration   2: 422.356 ns/op
Iteration   3: 422.164 ns/op
Iteration   4: 422.650 ns/op
Iteration   5: 422.646 ns/op
Iteration   6: 422.377 ns/op
Iteration   7: 422.637 ns/op
Iteration   8: 418.722 ns/op
Iteration   9: 422.201 ns/op
Iteration  10: 422.172 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  422.590 ±(99.9%) 0.992 ns/op [Average]
  (min, avg, max) = (418.722, 422.590, 423.910), stdev = 1.143
  CI (99.9%): [421.597, 423.582] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 96.00% complete, ETA 00:02:52
# Fork: 1 of 2
# Warmup Iteration   1: 38.652 ns/op
# Warmup Iteration   2: 62.831 ns/op
# Warmup Iteration   3: 38.026 ns/op
Iteration   1: 37.939 ns/op
Iteration   2: 38.460 ns/op
Iteration   3: 38.211 ns/op
Iteration   4: 38.006 ns/op
Iteration   5: 38.039 ns/op
Iteration   6: 38.206 ns/op
Iteration   7: 38.004 ns/op
Iteration   8: 37.146 ns/op
Iteration   9: 38.047 ns/op
Iteration  10: 37.924 ns/op

# Run progress: 96.06% complete, ETA 00:02:50
# Fork: 2 of 2
# Warmup Iteration   1: 38.254 ns/op
# Warmup Iteration   2: 63.719 ns/op
# Warmup Iteration   3: 38.436 ns/op
Iteration   1: 38.070 ns/op
Iteration   2: 38.181 ns/op
Iteration   3: 38.075 ns/op
Iteration   4: 38.367 ns/op
Iteration   5: 38.464 ns/op
Iteration   6: 38.442 ns/op
Iteration   7: 37.958 ns/op
Iteration   8: 37.198 ns/op
Iteration   9: 38.141 ns/op
Iteration  10: 38.035 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  38.046 ±(99.9%) 0.299 ns/op [Average]
  (min, avg, max) = (37.146, 38.046, 38.464), stdev = 0.344
  CI (99.9%): [37.747, 38.345] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 96.11% complete, ETA 00:02:47
# Fork: 1 of 2
# Warmup Iteration   1: 299.685 ns/op
# Warmup Iteration   2: 281.849 ns/op
# Warmup Iteration   3: 238.594 ns/op
Iteration   1: 238.652 ns/op
Iteration   2: 238.353 ns/op
Iteration   3: 239.095 ns/op
Iteration   4: 238.742 ns/op
Iteration   5: 238.331 ns/op
Iteration   6: 238.711 ns/op
Iteration   7: 238.844 ns/op
Iteration   8: 236.019 ns/op
Iteration   9: 239.105 ns/op
Iteration  10: 239.035 ns/op

# Run progress: 96.17% complete, ETA 00:02:45
# Fork: 2 of 2
# Warmup Iteration   1: 297.375 ns/op
# Warmup Iteration   2: 276.853 ns/op
# Warmup Iteration   3: 242.316 ns/op
Iteration   1: 240.883 ns/op
Iteration   2: 242.405 ns/op
Iteration   3: 242.073 ns/op
Iteration   4: 241.539 ns/op
Iteration   5: 240.321 ns/op
Iteration   6: 239.440 ns/op
Iteration   7: 240.279 ns/op
Iteration   8: 239.072 ns/op
Iteration   9: 241.764 ns/op
Iteration  10: 241.757 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  239.721 ±(99.9%) 1.402 ns/op [Average]
  (min, avg, max) = (236.019, 239.721, 242.405), stdev = 1.614
  CI (99.9%): [238.319, 241.123] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 96.22% complete, ETA 00:02:43
# Fork: 1 of 2
# Warmup Iteration   1: 1403.040 ns/op
# Warmup Iteration   2: 1156.590 ns/op
# Warmup Iteration   3: 973.330 ns/op
Iteration   1: 976.730 ns/op
Iteration   2: 976.901 ns/op
Iteration   3: 974.662 ns/op
Iteration   4: 977.478 ns/op
Iteration   5: 976.951 ns/op
Iteration   6: 976.235 ns/op
Iteration   7: 977.865 ns/op
Iteration   8: 975.450 ns/op
Iteration   9: 973.997 ns/op
Iteration  10: 974.576 ns/op

# Run progress: 96.28% complete, ETA 00:02:40
# Fork: 2 of 2
# Warmup Iteration   1: 1490.431 ns/op
# Warmup Iteration   2: 1111.568 ns/op
# Warmup Iteration   3: 975.706 ns/op
Iteration   1: 974.445 ns/op
Iteration   2: 976.070 ns/op
Iteration   3: 975.774 ns/op
Iteration   4: 978.355 ns/op
Iteration   5: 976.567 ns/op
Iteration   6: 977.582 ns/op
Iteration   7: 975.258 ns/op
Iteration   8: 975.872 ns/op
Iteration   9: 974.448 ns/op
Iteration  10: 975.664 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  976.044 ±(99.9%) 1.091 ns/op [Average]
  (min, avg, max) = (973.997, 976.044, 978.355), stdev = 1.256
  CI (99.9%): [974.953, 977.135] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 96.33% complete, ETA 00:02:38
# Fork: 1 of 2
# Warmup Iteration   1: 1438.506 ns/op
# Warmup Iteration   2: 1118.273 ns/op
# Warmup Iteration   3: 983.079 ns/op
Iteration   1: 983.859 ns/op
Iteration   2: 984.273 ns/op
Iteration   3: 983.578 ns/op
Iteration   4: 985.000 ns/op
Iteration   5: 983.275 ns/op
Iteration   6: 983.595 ns/op
Iteration   7: 980.729 ns/op
Iteration   8: 984.138 ns/op
Iteration   9: 982.616 ns/op
Iteration  10: 981.189 ns/op

# Run progress: 96.39% complete, ETA 00:02:35
# Fork: 2 of 2
# Warmup Iteration   1: 1496.633 ns/op
# Warmup Iteration   2: 1116.062 ns/op
# Warmup Iteration   3: 983.380 ns/op
Iteration   1: 985.929 ns/op
Iteration   2: 984.245 ns/op
Iteration   3: 982.780 ns/op
Iteration   4: 987.372 ns/op
Iteration   5: 988.677 ns/op
Iteration   6: 983.116 ns/op
Iteration   7: 985.764 ns/op
Iteration   8: 984.696 ns/op
Iteration   9: 984.007 ns/op
Iteration  10: 986.791 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  984.282 ±(99.9%) 1.686 ns/op [Average]
  (min, avg, max) = (980.729, 984.282, 988.677), stdev = 1.941
  CI (99.9%): [982.596, 985.967] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 96.44% complete, ETA 00:02:33
# Fork: 1 of 2
# Warmup Iteration   1: 2371.643 ns/op
# Warmup Iteration   2: 1601.255 ns/op
# Warmup Iteration   3: 1334.542 ns/op
Iteration   1: 1335.674 ns/op
Iteration   2: 1335.070 ns/op
Iteration   3: 1334.272 ns/op
Iteration   4: 1335.209 ns/op
Iteration   5: 1337.169 ns/op
Iteration   6: 1334.844 ns/op
Iteration   7: 1332.753 ns/op
Iteration   8: 1335.511 ns/op
Iteration   9: 1335.503 ns/op
Iteration  10: 1336.430 ns/op

# Run progress: 96.50% complete, ETA 00:02:31
# Fork: 2 of 2
# Warmup Iteration   1: 1793.628 ns/op
# Warmup Iteration   2: 1556.318 ns/op
# Warmup Iteration   3: 1334.555 ns/op
Iteration   1: 1335.512 ns/op
Iteration   2: 1334.971 ns/op
Iteration   3: 1334.618 ns/op
Iteration   4: 1335.210 ns/op
Iteration   5: 1337.475 ns/op
Iteration   6: 1334.820 ns/op
Iteration   7: 1333.159 ns/op
Iteration   8: 1335.932 ns/op
Iteration   9: 1335.067 ns/op
Iteration  10: 1337.537 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1335.337 ±(99.9%) 1.062 ns/op [Average]
  (min, avg, max) = (1332.753, 1335.337, 1337.537), stdev = 1.223
  CI (99.9%): [1334.275, 1336.399] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 96.56% complete, ETA 00:02:28
# Fork: 1 of 2
# Warmup Iteration   1: 480.678 ns/op
# Warmup Iteration   2: 485.313 ns/op
# Warmup Iteration   3: 419.997 ns/op
Iteration   1: 420.151 ns/op
Iteration   2: 420.060 ns/op
Iteration   3: 420.179 ns/op
Iteration   4: 420.868 ns/op
Iteration   5: 421.176 ns/op
Iteration   6: 421.156 ns/op
Iteration   7: 420.880 ns/op
Iteration   8: 418.667 ns/op
Iteration   9: 420.879 ns/op
Iteration  10: 421.112 ns/op

# Run progress: 96.61% complete, ETA 00:02:26
# Fork: 2 of 2
# Warmup Iteration   1: 353.842 ns/op
# Warmup Iteration   2: 386.784 ns/op
# Warmup Iteration   3: 328.837 ns/op
Iteration   1: 329.267 ns/op
Iteration   2: 329.196 ns/op
Iteration   3: 329.304 ns/op
Iteration   4: 328.174 ns/op
Iteration   5: 328.250 ns/op
Iteration   6: 328.522 ns/op
Iteration   7: 327.970 ns/op
Iteration   8: 325.142 ns/op
Iteration   9: 328.207 ns/op
Iteration  10: 328.346 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  374.375 ±(99.9%) 41.113 ns/op [Average]
  (min, avg, max) = (325.142, 374.375, 421.176), stdev = 47.346
  CI (99.9%): [333.262, 415.489] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 96.67% complete, ETA 00:02:23
# Fork: 1 of 2
# Warmup Iteration   1: 38.200 ns/op
# Warmup Iteration   2: 65.600 ns/op
# Warmup Iteration   3: 35.633 ns/op
Iteration   1: 35.699 ns/op
Iteration   2: 35.681 ns/op
Iteration   3: 35.622 ns/op
Iteration   4: 35.679 ns/op
Iteration   5: 35.709 ns/op
Iteration   6: 36.131 ns/op
Iteration   7: 35.631 ns/op
Iteration   8: 34.568 ns/op
Iteration   9: 35.682 ns/op
Iteration  10: 35.700 ns/op

# Run progress: 96.72% complete, ETA 00:02:21
# Fork: 2 of 2
# Warmup Iteration   1: 38.071 ns/op
# Warmup Iteration   2: 66.418 ns/op
# Warmup Iteration   3: 35.691 ns/op
Iteration   1: 35.738 ns/op
Iteration   2: 35.745 ns/op
Iteration   3: 35.753 ns/op
Iteration   4: 35.734 ns/op
Iteration   5: 35.677 ns/op
Iteration   6: 36.128 ns/op
Iteration   7: 35.738 ns/op
Iteration   8: 34.511 ns/op
Iteration   9: 35.614 ns/op
Iteration  10: 35.713 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.623 ±(99.9%) 0.344 ns/op [Average]
  (min, avg, max) = (34.511, 35.623, 36.131), stdev = 0.396
  CI (99.9%): [35.279, 35.966] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 96.78% complete, ETA 00:02:19
# Fork: 1 of 2
# Warmup Iteration   1: 14369.301 ns/op
# Warmup Iteration   2: 7969.767 ns/op
# Warmup Iteration   3: 6738.675 ns/op
Iteration   1: 6773.861 ns/op
Iteration   2: 6765.539 ns/op
Iteration   3: 6733.308 ns/op
Iteration   4: 6735.788 ns/op
Iteration   5: 6732.929 ns/op
Iteration   6: 6746.350 ns/op
Iteration   7: 6742.463 ns/op
Iteration   8: 6782.865 ns/op
Iteration   9: 6732.992 ns/op
Iteration  10: 6783.704 ns/op

# Run progress: 96.83% complete, ETA 00:02:16
# Fork: 2 of 2
# Warmup Iteration   1: 12757.247 ns/op
# Warmup Iteration   2: 7879.614 ns/op
# Warmup Iteration   3: 6743.438 ns/op
Iteration   1: 6731.203 ns/op
Iteration   2: 6710.374 ns/op
Iteration   3: 6722.714 ns/op
Iteration   4: 6742.151 ns/op
Iteration   5: 6745.562 ns/op
Iteration   6: 6738.585 ns/op
Iteration   7: 6763.022 ns/op
Iteration   8: 6752.253 ns/op
Iteration   9: 6707.026 ns/op
Iteration  10: 6744.179 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6744.343 ±(99.9%) 18.316 ns/op [Average]
  (min, avg, max) = (6707.026, 6744.343, 6783.704), stdev = 21.093
  CI (99.9%): [6726.027, 6762.660] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 96.89% complete, ETA 00:02:14
# Fork: 1 of 2
# Warmup Iteration   1: 12815.917 ns/op
# Warmup Iteration   2: 7483.710 ns/op
# Warmup Iteration   3: 6654.080 ns/op
Iteration   1: 6689.135 ns/op
Iteration   2: 6670.208 ns/op
Iteration   3: 6653.033 ns/op
Iteration   4: 6674.070 ns/op
Iteration   5: 6687.614 ns/op
Iteration   6: 6676.063 ns/op
Iteration   7: 6644.646 ns/op
Iteration   8: 6718.707 ns/op
Iteration   9: 6653.567 ns/op
Iteration  10: 6642.249 ns/op

# Run progress: 96.94% complete, ETA 00:02:11
# Fork: 2 of 2
# Warmup Iteration   1: 12463.712 ns/op
# Warmup Iteration   2: 7676.590 ns/op
# Warmup Iteration   3: 6603.919 ns/op
Iteration   1: 6617.720 ns/op
Iteration   2: 6627.728 ns/op
Iteration   3: 6591.788 ns/op
Iteration   4: 6636.904 ns/op
Iteration   5: 6632.911 ns/op
Iteration   6: 6599.658 ns/op
Iteration   7: 6621.738 ns/op
Iteration   8: 6612.933 ns/op
Iteration   9: 6587.784 ns/op
Iteration  10: 6586.754 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6641.261 ±(99.9%) 32.051 ns/op [Average]
  (min, avg, max) = (6586.754, 6641.261, 6718.707), stdev = 36.910
  CI (99.9%): [6609.209, 6673.312] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 97.00% complete, ETA 00:02:09
# Fork: 1 of 2
# Warmup Iteration   1: 12945.856 ns/op
# Warmup Iteration   2: 7829.153 ns/op
# Warmup Iteration   3: 6387.438 ns/op
Iteration   1: 6412.778 ns/op
Iteration   2: 6390.846 ns/op
Iteration   3: 6459.146 ns/op
Iteration   4: 6390.507 ns/op
Iteration   5: 6381.291 ns/op
Iteration   6: 6382.218 ns/op
Iteration   7: 6397.441 ns/op
Iteration   8: 6432.110 ns/op
Iteration   9: 6370.754 ns/op
Iteration  10: 6362.679 ns/op

# Run progress: 97.06% complete, ETA 00:02:07
# Fork: 2 of 2
# Warmup Iteration   1: 11989.402 ns/op
# Warmup Iteration   2: 7249.971 ns/op
# Warmup Iteration   3: 6411.614 ns/op
Iteration   1: 6422.120 ns/op
Iteration   2: 6410.718 ns/op
Iteration   3: 6424.275 ns/op
Iteration   4: 6458.737 ns/op
Iteration   5: 6391.385 ns/op
Iteration   6: 6417.843 ns/op
Iteration   7: 6416.686 ns/op
Iteration   8: 6427.513 ns/op
Iteration   9: 6425.335 ns/op
Iteration  10: 6409.506 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6409.194 ±(99.9%) 22.627 ns/op [Average]
  (min, avg, max) = (6362.679, 6409.194, 6459.146), stdev = 26.057
  CI (99.9%): [6386.568, 6431.821] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 97.11% complete, ETA 00:02:04
# Fork: 1 of 2
# Warmup Iteration   1: 11250.487 ns/op
# Warmup Iteration   2: 8045.830 ns/op
# Warmup Iteration   3: 6941.153 ns/op
Iteration   1: 6955.241 ns/op
Iteration   2: 6970.671 ns/op
Iteration   3: 6954.533 ns/op
Iteration   4: 7005.068 ns/op
Iteration   5: 6936.770 ns/op
Iteration   6: 6945.682 ns/op
Iteration   7: 6956.171 ns/op
Iteration   8: 6998.204 ns/op
Iteration   9: 6938.472 ns/op
Iteration  10: 7006.154 ns/op

# Run progress: 97.17% complete, ETA 00:02:02
# Fork: 2 of 2
# Warmup Iteration   1: 13984.920 ns/op
# Warmup Iteration   2: 7859.619 ns/op
# Warmup Iteration   3: 6922.197 ns/op
Iteration   1: 6914.476 ns/op
Iteration   2: 6899.262 ns/op
Iteration   3: 6928.311 ns/op
Iteration   4: 6947.596 ns/op
Iteration   5: 6919.273 ns/op
Iteration   6: 6961.009 ns/op
Iteration   7: 6945.914 ns/op
Iteration   8: 6942.491 ns/op
Iteration   9: 6928.997 ns/op
Iteration  10: 6910.315 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6948.231 ±(99.9%) 25.785 ns/op [Average]
  (min, avg, max) = (6899.262, 6948.231, 7006.154), stdev = 29.695
  CI (99.9%): [6922.445, 6974.016] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 97.22% complete, ETA 00:01:59
# Fork: 1 of 2
# Warmup Iteration   1: 14585.711 ns/op
# Warmup Iteration   2: 10258.925 ns/op
# Warmup Iteration   3: 8729.815 ns/op
Iteration   1: 8740.675 ns/op
Iteration   2: 8680.312 ns/op
Iteration   3: 8693.592 ns/op
Iteration   4: 8665.302 ns/op
Iteration   5: 8763.393 ns/op
Iteration   6: 8673.312 ns/op
Iteration   7: 8745.933 ns/op
Iteration   8: 8700.588 ns/op
Iteration   9: 8706.669 ns/op
Iteration  10: 8732.380 ns/op

# Run progress: 97.28% complete, ETA 00:01:57
# Fork: 2 of 2
# Warmup Iteration   1: 14586.096 ns/op
# Warmup Iteration   2: 10146.105 ns/op
# Warmup Iteration   3: 8808.983 ns/op
Iteration   1: 8839.279 ns/op
Iteration   2: 8761.378 ns/op
Iteration   3: 8788.602 ns/op
Iteration   4: 8785.011 ns/op
Iteration   5: 8801.145 ns/op
Iteration   6: 8753.788 ns/op
Iteration   7: 8810.818 ns/op
Iteration   8: 8771.849 ns/op
Iteration   9: 8793.941 ns/op
Iteration  10: 8807.164 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8750.757 ±(99.9%) 44.015 ns/op [Average]
  (min, avg, max) = (8665.302, 8750.757, 8839.279), stdev = 50.687
  CI (99.9%): [8706.742, 8794.771] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 97.33% complete, ETA 00:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 38.990 ns/op
# Warmup Iteration   2: 66.771 ns/op
# Warmup Iteration   3: 35.649 ns/op
Iteration   1: 35.729 ns/op
Iteration   2: 35.663 ns/op
Iteration   3: 35.663 ns/op
Iteration   4: 35.658 ns/op
Iteration   5: 35.746 ns/op
Iteration   6: 36.194 ns/op
Iteration   7: 35.806 ns/op
Iteration   8: 34.533 ns/op
Iteration   9: 35.709 ns/op
Iteration  10: 35.716 ns/op

# Run progress: 97.39% complete, ETA 00:01:52
# Fork: 2 of 2
# Warmup Iteration   1: 38.301 ns/op
# Warmup Iteration   2: 66.848 ns/op
# Warmup Iteration   3: 35.667 ns/op
Iteration   1: 35.681 ns/op
Iteration   2: 35.701 ns/op
Iteration   3: 35.720 ns/op
Iteration   4: 35.685 ns/op
Iteration   5: 35.675 ns/op
Iteration   6: 36.118 ns/op
Iteration   7: 35.652 ns/op
Iteration   8: 34.564 ns/op
Iteration   9: 35.685 ns/op
Iteration  10: 35.678 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.629 ±(99.9%) 0.345 ns/op [Average]
  (min, avg, max) = (34.533, 35.629, 36.194), stdev = 0.397
  CI (99.9%): [35.284, 35.974] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 97.44% complete, ETA 00:01:50
# Fork: 1 of 2
# Warmup Iteration   1: 8917.972 ns/op
# Warmup Iteration   2: 5346.712 ns/op
# Warmup Iteration   3: 4699.907 ns/op
Iteration   1: 4718.288 ns/op
Iteration   2: 4697.865 ns/op
Iteration   3: 4704.406 ns/op
Iteration   4: 4729.566 ns/op
Iteration   5: 4706.006 ns/op
Iteration   6: 4696.193 ns/op
Iteration   7: 4685.734 ns/op
Iteration   8: 4698.739 ns/op
Iteration   9: 4721.511 ns/op
Iteration  10: 4739.374 ns/op

# Run progress: 97.50% complete, ETA 00:01:47
# Fork: 2 of 2
# Warmup Iteration   1: 9607.374 ns/op
# Warmup Iteration   2: 5842.621 ns/op
# Warmup Iteration   3: 4823.743 ns/op
Iteration   1: 4843.027 ns/op
Iteration   2: 4807.387 ns/op
Iteration   3: 4824.937 ns/op
Iteration   4: 4858.509 ns/op
Iteration   5: 4858.812 ns/op
Iteration   6: 4819.629 ns/op
Iteration   7: 4828.729 ns/op
Iteration   8: 4841.539 ns/op
Iteration   9: 4834.313 ns/op
Iteration  10: 4864.310 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4773.944 ±(99.9%) 59.112 ns/op [Average]
  (min, avg, max) = (4685.734, 4773.944, 4864.310), stdev = 68.073
  CI (99.9%): [4714.832, 4833.056] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 97.56% complete, ETA 00:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 27378.572 ns/op
# Warmup Iteration   2: 10420.605 ns/op
# Warmup Iteration   3: 9696.503 ns/op
Iteration   1: 9267.524 ns/op
Iteration   2: 9287.023 ns/op
Iteration   3: 9281.400 ns/op
Iteration   4: 9261.591 ns/op
Iteration   5: 9277.166 ns/op
Iteration   6: 9249.800 ns/op
Iteration   7: 9306.941 ns/op
Iteration   8: 9365.111 ns/op
Iteration   9: 9262.494 ns/op
Iteration  10: 9269.328 ns/op

# Run progress: 97.61% complete, ETA 00:01:43
# Fork: 2 of 2
# Warmup Iteration   1: 22979.672 ns/op
# Warmup Iteration   2: 10287.901 ns/op
# Warmup Iteration   3: 9702.209 ns/op
Iteration   1: 9337.164 ns/op
Iteration   2: 9280.604 ns/op
Iteration   3: 9245.050 ns/op
Iteration   4: 9335.647 ns/op
Iteration   5: 9272.536 ns/op
Iteration   6: 9299.627 ns/op
Iteration   7: 9289.240 ns/op
Iteration   8: 9285.311 ns/op
Iteration   9: 9294.787 ns/op
Iteration  10: 9281.456 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9287.490 ±(99.9%) 26.047 ns/op [Average]
  (min, avg, max) = (9245.050, 9287.490, 9365.111), stdev = 29.996
  CI (99.9%): [9261.443, 9313.537] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 97.67% complete, ETA 00:01:40
# Fork: 1 of 2
# Warmup Iteration   1: 21281.729 ns/op
# Warmup Iteration   2: 10702.677 ns/op
# Warmup Iteration   3: 8846.724 ns/op
Iteration   1: 8845.957 ns/op
Iteration   2: 8844.836 ns/op
Iteration   3: 8869.142 ns/op
Iteration   4: 8883.433 ns/op
Iteration   5: 8861.343 ns/op
Iteration   6: 8902.862 ns/op
Iteration   7: 8878.862 ns/op
Iteration   8: 8882.877 ns/op
Iteration   9: 8904.417 ns/op
Iteration  10: 8898.528 ns/op

# Run progress: 97.72% complete, ETA 00:01:38
# Fork: 2 of 2
# Warmup Iteration   1: 21296.924 ns/op
# Warmup Iteration   2: 10205.663 ns/op
# Warmup Iteration   3: 8850.219 ns/op
Iteration   1: 8836.896 ns/op
Iteration   2: 8863.129 ns/op
Iteration   3: 8867.716 ns/op
Iteration   4: 8878.018 ns/op
Iteration   5: 8893.638 ns/op
Iteration   6: 8855.691 ns/op
Iteration   7: 8843.690 ns/op
Iteration   8: 8909.175 ns/op
Iteration   9: 8838.246 ns/op
Iteration  10: 8851.294 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8870.487 ±(99.9%) 20.264 ns/op [Average]
  (min, avg, max) = (8836.896, 8870.487, 8909.175), stdev = 23.336
  CI (99.9%): [8850.224, 8890.751] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 97.78% complete, ETA 00:01:35
# Fork: 1 of 2
# Warmup Iteration   1: 10997.543 ns/op
# Warmup Iteration   2: 7297.101 ns/op
# Warmup Iteration   3: 6454.300 ns/op
Iteration   1: 6498.727 ns/op
Iteration   2: 6456.877 ns/op
Iteration   3: 6460.266 ns/op
Iteration   4: 6449.556 ns/op
Iteration   5: 6438.073 ns/op
Iteration   6: 6468.610 ns/op
Iteration   7: 6399.746 ns/op
Iteration   8: 6491.831 ns/op
Iteration   9: 6469.809 ns/op
Iteration  10: 6400.638 ns/op

# Run progress: 97.83% complete, ETA 00:01:33
# Fork: 2 of 2
# Warmup Iteration   1: 10116.161 ns/op
# Warmup Iteration   2: 7363.636 ns/op
# Warmup Iteration   3: 6431.372 ns/op
Iteration   1: 6485.644 ns/op
Iteration   2: 6423.097 ns/op
Iteration   3: 6429.604 ns/op
Iteration   4: 6440.245 ns/op
Iteration   5: 6439.645 ns/op
Iteration   6: 6405.464 ns/op
Iteration   7: 6506.109 ns/op
Iteration   8: 6466.512 ns/op
Iteration   9: 6461.364 ns/op
Iteration  10: 6475.771 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6453.379 ±(99.9%) 27.244 ns/op [Average]
  (min, avg, max) = (6399.746, 6453.379, 6506.109), stdev = 31.374
  CI (99.9%): [6426.136, 6480.623] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 97.89% complete, ETA 00:01:31
# Fork: 1 of 2
# Warmup Iteration   1: 15168.862 ns/op
# Warmup Iteration   2: 9892.910 ns/op
# Warmup Iteration   3: 8673.556 ns/op
Iteration   1: 8677.187 ns/op
Iteration   2: 8644.718 ns/op
Iteration   3: 8673.014 ns/op
Iteration   4: 8657.341 ns/op
Iteration   5: 8674.669 ns/op
Iteration   6: 8647.694 ns/op
Iteration   7: 8685.293 ns/op
Iteration   8: 8666.954 ns/op
Iteration   9: 8697.900 ns/op
Iteration  10: 8689.578 ns/op

# Run progress: 97.94% complete, ETA 00:01:28
# Fork: 2 of 2
# Warmup Iteration   1: 13457.648 ns/op
# Warmup Iteration   2: 9757.075 ns/op
# Warmup Iteration   3: 8599.498 ns/op
Iteration   1: 8595.493 ns/op
Iteration   2: 8594.730 ns/op
Iteration   3: 8642.065 ns/op
Iteration   4: 8601.755 ns/op
Iteration   5: 8620.892 ns/op
Iteration   6: 8613.705 ns/op
Iteration   7: 8638.320 ns/op
Iteration   8: 8613.230 ns/op
Iteration   9: 8630.707 ns/op
Iteration  10: 8630.557 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8644.790 ±(99.9%) 27.915 ns/op [Average]
  (min, avg, max) = (8594.730, 8644.790, 8697.900), stdev = 32.147
  CI (99.9%): [8616.875, 8672.705] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 98.00% complete, ETA 00:01:26
# Fork: 1 of 2
# Warmup Iteration   1: 51.725 ns/op
# Warmup Iteration   2: 65.273 ns/op
# Warmup Iteration   3: 35.632 ns/op
Iteration   1: 35.607 ns/op
Iteration   2: 35.608 ns/op
Iteration   3: 35.679 ns/op
Iteration   4: 35.611 ns/op
Iteration   5: 35.645 ns/op
Iteration   6: 36.181 ns/op
Iteration   7: 35.705 ns/op
Iteration   8: 34.537 ns/op
Iteration   9: 35.699 ns/op
Iteration  10: 35.753 ns/op

# Run progress: 98.06% complete, ETA 00:01:23
# Fork: 2 of 2
# Warmup Iteration   1: 38.111 ns/op
# Warmup Iteration   2: 66.858 ns/op
# Warmup Iteration   3: 35.632 ns/op
Iteration   1: 35.703 ns/op
Iteration   2: 35.690 ns/op
Iteration   3: 35.701 ns/op
Iteration   4: 35.734 ns/op
Iteration   5: 35.672 ns/op
Iteration   6: 36.189 ns/op
Iteration   7: 35.747 ns/op
Iteration   8: 34.421 ns/op
Iteration   9: 35.671 ns/op
Iteration  10: 35.670 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.611 ±(99.9%) 0.364 ns/op [Average]
  (min, avg, max) = (34.421, 35.611, 36.189), stdev = 0.419
  CI (99.9%): [35.247, 35.975] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 98.11% complete, ETA 00:01:21
# Fork: 1 of 2
# Warmup Iteration   1: 14044.651 ns/op
# Warmup Iteration   2: 13626.518 ns/op
# Warmup Iteration   3: 11686.644 ns/op
Iteration   1: 5617.656 ns/op
Iteration   2: 5463.311 ns/op
Iteration   3: 5985.879 ns/op
Iteration   4: 6136.633 ns/op
Iteration   5: 5291.519 ns/op
Iteration   6: 5534.885 ns/op
Iteration   7: 5405.073 ns/op
Iteration   8: 5184.978 ns/op
Iteration   9: 5110.170 ns/op
Iteration  10: 5358.642 ns/op

# Run progress: 98.17% complete, ETA 00:01:19
# Fork: 2 of 2
# Warmup Iteration   1: 9842.424 ns/op
# Warmup Iteration   2: 11293.256 ns/op
# Warmup Iteration   3: 11357.900 ns/op
Iteration   1: 5710.989 ns/op
Iteration   2: 5618.921 ns/op
Iteration   3: 6121.636 ns/op
Iteration   4: 7125.291 ns/op
Iteration   5: 5479.157 ns/op
Iteration   6: 5611.360 ns/op
Iteration   7: 5536.628 ns/op
Iteration   8: 5425.531 ns/op
Iteration   9: 5367.199 ns/op
Iteration  10: 5475.108 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5628.028 ±(99.9%) 387.228 ns/op [Average]
  (min, avg, max) = (5110.170, 5628.028, 7125.291), stdev = 445.933
  CI (99.9%): [5240.800, 6015.257] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 98.22% complete, ETA 00:01:16
# Fork: 1 of 2
# Warmup Iteration   1: 25232.545 ns/op
# Warmup Iteration   2: 11173.839 ns/op
# Warmup Iteration   3: 8005.990 ns/op
Iteration   1: 10594.369 ns/op
Iteration   2: 6106.007 ns/op
Iteration   3: 13102.855 ns/op
Iteration   4: 7514.874 ns/op
Iteration   5: 7133.446 ns/op
Iteration   6: 6274.495 ns/op
Iteration   7: 12180.957 ns/op
Iteration   8: 7374.140 ns/op
Iteration   9: 6911.088 ns/op
Iteration  10: 7575.674 ns/op

# Run progress: 98.28% complete, ETA 00:01:14
# Fork: 2 of 2
# Warmup Iteration   1: 18436.975 ns/op
# Warmup Iteration   2: 13794.733 ns/op
# Warmup Iteration   3: 6370.281 ns/op
Iteration   1: 23813.864 ns/op
Iteration   2: 6124.259 ns/op
Iteration   3: 33800.465 ns/op
Iteration   4: 6265.551 ns/op
Iteration   5: 6136.570 ns/op
Iteration   6: 5649.833 ns/op
Iteration   7: 17156.867 ns/op
Iteration   8: 7165.091 ns/op
Iteration   9: 6495.895 ns/op
Iteration  10: 6729.142 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10205.272 ±(99.9%) 6242.702 ns/op [Average]
  (min, avg, max) = (5649.833, 10205.272, 33800.465), stdev = 7189.105
  CI (99.9%): [3962.570, 16447.974] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 98.33% complete, ETA 00:01:11
# Fork: 1 of 2
# Warmup Iteration   1: 28116.491 ns/op
# Warmup Iteration   2: 10494.973 ns/op
# Warmup Iteration   3: 6506.362 ns/op
Iteration   1: 33422.805 ns/op
Iteration   2: 6141.317 ns/op
Iteration   3: 120661.145 ns/op
Iteration   4: 6292.512 ns/op
Iteration   5: 6176.242 ns/op
Iteration   6: 5598.212 ns/op
Iteration   7: 25739.822 ns/op
Iteration   8: 6619.794 ns/op
Iteration   9: 6249.627 ns/op
Iteration  10: 6371.214 ns/op

# Run progress: 98.39% complete, ETA 00:01:09
# Fork: 2 of 2
# Warmup Iteration   1: 13255.366 ns/op
# Warmup Iteration   2: 8148.044 ns/op
# Warmup Iteration   3: 7091.219 ns/op
Iteration   1: 8191.887 ns/op
Iteration   2: 6378.740 ns/op
Iteration   3: 31345.084 ns/op
Iteration   4: 9670.205 ns/op
Iteration   5: 9608.851 ns/op
Iteration   6: 5722.312 ns/op
Iteration   7: 18401.682 ns/op
Iteration   8: 6780.887 ns/op
Iteration   9: 6481.591 ns/op
Iteration  10: 6462.339 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16615.813 ±(99.9%) 22595.327 ns/op [Average]
  (min, avg, max) = (5598.212, 16615.813, 120661.145), stdev = 26020.812
  CI (99.9%): [≈ 0, 39211.141] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 98.44% complete, ETA 00:01:07
# Fork: 1 of 2
# Warmup Iteration   1: 14311.441 ns/op
# Warmup Iteration   2: 13572.344 ns/op
# Warmup Iteration   3: 11807.917 ns/op
Iteration   1: 6371.599 ns/op
Iteration   2: 12133.600 ns/op
Iteration   3: 12068.310 ns/op
Iteration   4: 7211.687 ns/op
Iteration   5: 6600.019 ns/op
Iteration   6: 6101.879 ns/op
Iteration   7: 399907.980 ns/op
Iteration   8: 5624.949 ns/op
Iteration   9: 5933.084 ns/op
Iteration  10: 5907.208 ns/op

# Run progress: 98.50% complete, ETA 00:01:04
# Fork: 2 of 2
# Warmup Iteration   1: 13390.342 ns/op
# Warmup Iteration   2: 12619.644 ns/op
# Warmup Iteration   3: 11780.162 ns/op
Iteration   1: 6439.812 ns/op
Iteration   2: 12080.529 ns/op
Iteration   3: 12295.812 ns/op
Iteration   4: 7153.442 ns/op
Iteration   5: 6633.413 ns/op
Iteration   6: 6167.698 ns/op
Iteration   7: 245119.430 ns/op
Iteration   8: 5854.447 ns/op
Iteration   9: 6204.909 ns/op
Iteration  10: 6258.319 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  39103.406 ±(99.9%) 86968.068 ns/op [Average]
  (min, avg, max) = (5624.949, 39103.406, 399907.980), stdev = 100152.557
  CI (99.9%): [≈ 0, 126071.475] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 98.56% complete, ETA 00:01:02
# Fork: 1 of 2
# Warmup Iteration   1: 14838.804 ns/op
# Warmup Iteration   2: 9948.319 ns/op
# Warmup Iteration   3: 8621.807 ns/op
Iteration   1: 8587.968 ns/op
Iteration   2: 8576.039 ns/op
Iteration   3: 8725.158 ns/op
Iteration   4: 8629.503 ns/op
Iteration   5: 8619.184 ns/op
Iteration   6: 8623.066 ns/op
Iteration   7: 8610.282 ns/op
Iteration   8: 8634.747 ns/op
Iteration   9: 8673.396 ns/op
Iteration  10: 8618.323 ns/op

# Run progress: 98.61% complete, ETA 00:00:59
# Fork: 2 of 2
# Warmup Iteration   1: 15166.533 ns/op
# Warmup Iteration   2: 10351.948 ns/op
# Warmup Iteration   3: 8629.429 ns/op
Iteration   1: 8682.856 ns/op
Iteration   2: 8579.363 ns/op
Iteration   3: 8833.984 ns/op
Iteration   4: 8670.442 ns/op
Iteration   5: 8630.870 ns/op
Iteration   6: 8697.990 ns/op
Iteration   7: 8702.787 ns/op
Iteration   8: 8723.381 ns/op
Iteration   9: 8733.787 ns/op
Iteration  10: 8640.400 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8659.676 ±(99.9%) 55.222 ns/op [Average]
  (min, avg, max) = (8576.039, 8659.676, 8833.984), stdev = 63.594
  CI (99.9%): [8604.454, 8714.899] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 98.67% complete, ETA 00:00:57
# Fork: 1 of 2
# Warmup Iteration   1: 38.328 ns/op
# Warmup Iteration   2: 65.010 ns/op
# Warmup Iteration   3: 35.631 ns/op
Iteration   1: 35.625 ns/op
Iteration   2: 35.681 ns/op
Iteration   3: 35.647 ns/op
Iteration   4: 35.661 ns/op
Iteration   5: 35.710 ns/op
Iteration   6: 36.142 ns/op
Iteration   7: 35.626 ns/op
Iteration   8: 34.539 ns/op
Iteration   9: 35.662 ns/op
Iteration  10: 35.750 ns/op

# Run progress: 98.72% complete, ETA 00:00:55
# Fork: 2 of 2
# Warmup Iteration   1: 37.945 ns/op
# Warmup Iteration   2: 64.185 ns/op
# Warmup Iteration   3: 35.677 ns/op
Iteration   1: 35.700 ns/op
Iteration   2: 35.687 ns/op
Iteration   3: 35.708 ns/op
Iteration   4: 35.662 ns/op
Iteration   5: 35.710 ns/op
Iteration   6: 36.150 ns/op
Iteration   7: 35.729 ns/op
Iteration   8: 34.517 ns/op
Iteration   9: 35.668 ns/op
Iteration  10: 35.667 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.612 ±(99.9%) 0.346 ns/op [Average]
  (min, avg, max) = (34.517, 35.612, 36.150), stdev = 0.398
  CI (99.9%): [35.266, 35.958] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 98.78% complete, ETA 00:00:52
# Fork: 1 of 2
# Warmup Iteration   1: 5611.521 ns/op
# Warmup Iteration   2: 3565.179 ns/op
# Warmup Iteration   3: 3113.569 ns/op
Iteration   1: 3127.739 ns/op
Iteration   2: 3114.608 ns/op
Iteration   3: 3120.635 ns/op
Iteration   4: 3109.244 ns/op
Iteration   5: 3113.466 ns/op
Iteration   6: 3127.178 ns/op
Iteration   7: 3139.697 ns/op
Iteration   8: 3125.366 ns/op
Iteration   9: 3123.625 ns/op
Iteration  10: 3139.149 ns/op

# Run progress: 98.83% complete, ETA 00:00:50
# Fork: 2 of 2
# Warmup Iteration   1: 5898.009 ns/op
# Warmup Iteration   2: 3881.856 ns/op
# Warmup Iteration   3: 3343.572 ns/op
Iteration   1: 3360.060 ns/op
Iteration   2: 3352.859 ns/op
Iteration   3: 3344.990 ns/op
Iteration   4: 3351.154 ns/op
Iteration   5: 3354.530 ns/op
Iteration   6: 3347.608 ns/op
Iteration   7: 3350.305 ns/op
Iteration   8: 3343.048 ns/op
Iteration   9: 3344.161 ns/op
Iteration  10: 3350.226 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3236.982 ±(99.9%) 100.826 ns/op [Average]
  (min, avg, max) = (3109.244, 3236.982, 3360.060), stdev = 116.111
  CI (99.9%): [3136.156, 3337.808] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 98.89% complete, ETA 00:00:47
# Fork: 1 of 2
# Warmup Iteration   1: 7947.986 ns/op
# Warmup Iteration   2: 2846.025 ns/op
# Warmup Iteration   3: 2523.281 ns/op
Iteration   1: 2511.623 ns/op
Iteration   2: 2512.086 ns/op
Iteration   3: 2520.905 ns/op
Iteration   4: 2520.214 ns/op
Iteration   5: 2518.281 ns/op
Iteration   6: 2509.856 ns/op
Iteration   7: 2533.962 ns/op
Iteration   8: 2508.034 ns/op
Iteration   9: 2516.715 ns/op
Iteration  10: 2514.254 ns/op

# Run progress: 98.94% complete, ETA 00:00:45
# Fork: 2 of 2
# Warmup Iteration   1: 8893.720 ns/op
# Warmup Iteration   2: 2980.799 ns/op
# Warmup Iteration   3: 2554.422 ns/op
Iteration   1: 2553.612 ns/op
Iteration   2: 2541.616 ns/op
Iteration   3: 2550.940 ns/op
Iteration   4: 2548.129 ns/op
Iteration   5: 2542.649 ns/op
Iteration   6: 2568.305 ns/op
Iteration   7: 2545.028 ns/op
Iteration   8: 2543.851 ns/op
Iteration   9: 2548.627 ns/op
Iteration  10: 2549.153 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2532.892 ±(99.9%) 15.880 ns/op [Average]
  (min, avg, max) = (2508.034, 2532.892, 2568.305), stdev = 18.287
  CI (99.9%): [2517.012, 2548.772] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 99.00% complete, ETA 00:00:43
# Fork: 1 of 2
# Warmup Iteration   1: 13378.469 ns/op
# Warmup Iteration   2: 2840.516 ns/op
# Warmup Iteration   3: 2507.575 ns/op
Iteration   1: 2509.816 ns/op
Iteration   2: 2510.728 ns/op
Iteration   3: 2506.049 ns/op
Iteration   4: 2511.333 ns/op
Iteration   5: 2517.438 ns/op
Iteration   6: 2506.139 ns/op
Iteration   7: 2505.270 ns/op
Iteration   8: 2519.503 ns/op
Iteration   9: 2505.408 ns/op
Iteration  10: 2509.573 ns/op

# Run progress: 99.06% complete, ETA 00:00:40
# Fork: 2 of 2
# Warmup Iteration   1: 9143.364 ns/op
# Warmup Iteration   2: 2890.969 ns/op
# Warmup Iteration   3: 2511.861 ns/op
Iteration   1: 2501.790 ns/op
Iteration   2: 2498.390 ns/op
Iteration   3: 2496.360 ns/op
Iteration   4: 2495.570 ns/op
Iteration   5: 2502.461 ns/op
Iteration   6: 2522.139 ns/op
Iteration   7: 2496.395 ns/op
Iteration   8: 2500.405 ns/op
Iteration   9: 2497.578 ns/op
Iteration  10: 2502.335 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2505.734 ±(99.9%) 6.753 ns/op [Average]
  (min, avg, max) = (2495.570, 2505.734, 2522.139), stdev = 7.777
  CI (99.9%): [2498.981, 2512.487] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 99.11% complete, ETA 00:00:38
# Fork: 1 of 2
# Warmup Iteration   1: 4365.423 ns/op
# Warmup Iteration   2: 2940.342 ns/op
# Warmup Iteration   3: 2560.556 ns/op
Iteration   1: 2551.826 ns/op
Iteration   2: 2574.274 ns/op
Iteration   3: 2583.575 ns/op
Iteration   4: 2549.336 ns/op
Iteration   5: 2555.488 ns/op
Iteration   6: 2554.575 ns/op
Iteration   7: 2575.465 ns/op
Iteration   8: 2553.417 ns/op
Iteration   9: 2553.834 ns/op
Iteration  10: 2564.383 ns/op

# Run progress: 99.17% complete, ETA 00:00:35
# Fork: 2 of 2
# Warmup Iteration   1: 4335.916 ns/op
# Warmup Iteration   2: 2861.574 ns/op
# Warmup Iteration   3: 2505.177 ns/op
Iteration   1: 2527.916 ns/op
Iteration   2: 2516.602 ns/op
Iteration   3: 2528.235 ns/op
Iteration   4: 2515.583 ns/op
Iteration   5: 2526.663 ns/op
Iteration   6: 2524.055 ns/op
Iteration   7: 2506.190 ns/op
Iteration   8: 2531.884 ns/op
Iteration   9: 2505.398 ns/op
Iteration  10: 2523.191 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2541.094 ±(99.9%) 20.415 ns/op [Average]
  (min, avg, max) = (2505.398, 2541.094, 2583.575), stdev = 23.510
  CI (99.9%): [2520.680, 2561.509] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 99.22% complete, ETA 00:00:33
# Fork: 1 of 2
# Warmup Iteration   1: 14626.990 ns/op
# Warmup Iteration   2: 9528.526 ns/op
# Warmup Iteration   3: 8749.081 ns/op
Iteration   1: 8495.316 ns/op
Iteration   2: 8501.439 ns/op
Iteration   3: 8493.261 ns/op
Iteration   4: 8508.203 ns/op
Iteration   5: 8493.782 ns/op
Iteration   6: 8487.796 ns/op
Iteration   7: 8492.980 ns/op
Iteration   8: 8487.576 ns/op
Iteration   9: 8495.430 ns/op
Iteration  10: 8756.604 ns/op

# Run progress: 99.28% complete, ETA 00:00:31
# Fork: 2 of 2
# Warmup Iteration   1: 13823.713 ns/op
# Warmup Iteration   2: 10090.537 ns/op
# Warmup Iteration   3: 8499.754 ns/op
Iteration   1: 8503.437 ns/op
Iteration   2: 8472.555 ns/op
Iteration   3: 8492.696 ns/op
Iteration   4: 8488.065 ns/op
Iteration   5: 8499.332 ns/op
Iteration   6: 8463.800 ns/op
Iteration   7: 8502.649 ns/op
Iteration   8: 8485.566 ns/op
Iteration   9: 8503.120 ns/op
Iteration  10: 8492.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8505.810 ±(99.9%) 52.052 ns/op [Average]
  (min, avg, max) = (8463.800, 8505.810, 8756.604), stdev = 59.943
  CI (99.9%): [8453.757, 8557.862] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 99.33% complete, ETA 00:00:28
# Fork: 1 of 2
# Warmup Iteration   1: 37.990 ns/op
# Warmup Iteration   2: 67.119 ns/op
# Warmup Iteration   3: 35.666 ns/op
Iteration   1: 35.796 ns/op
Iteration   2: 35.742 ns/op
Iteration   3: 35.668 ns/op
Iteration   4: 35.729 ns/op
Iteration   5: 35.733 ns/op
Iteration   6: 36.137 ns/op
Iteration   7: 35.708 ns/op
Iteration   8: 34.424 ns/op
Iteration   9: 35.695 ns/op
Iteration  10: 35.750 ns/op

# Run progress: 99.39% complete, ETA 00:00:26
# Fork: 2 of 2
# Warmup Iteration   1: 55.827 ns/op
# Warmup Iteration   2: 66.834 ns/op
# Warmup Iteration   3: 35.706 ns/op
Iteration   1: 35.689 ns/op
Iteration   2: 35.704 ns/op
Iteration   3: 35.677 ns/op
Iteration   4: 35.677 ns/op
Iteration   5: 35.665 ns/op
Iteration   6: 36.157 ns/op
Iteration   7: 35.733 ns/op
Iteration   8: 34.511 ns/op
Iteration   9: 35.658 ns/op
Iteration  10: 35.649 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  35.625 ±(99.9%) 0.365 ns/op [Average]
  (min, avg, max) = (34.424, 35.625, 36.157), stdev = 0.420
  CI (99.9%): [35.260, 35.990] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 99.44% complete, ETA 00:00:23
# Fork: 1 of 2
# Warmup Iteration   1: 5142.351 ns/op
# Warmup Iteration   2: 3559.578 ns/op
# Warmup Iteration   3: 4859.934 ns/op
Iteration   1: 3270.083 ns/op
Iteration   2: 3365.039 ns/op
Iteration   3: 2852.269 ns/op
Iteration   4: 2754.634 ns/op
Iteration   5: 2959.228 ns/op
Iteration   6: 57417.444 ns/op
Iteration   7: 3205.520 ns/op
Iteration   8: 3094.341 ns/op
Iteration   9: 2946.751 ns/op
Iteration  10: 2956.461 ns/op

# Run progress: 99.50% complete, ETA 00:00:21
# Fork: 2 of 2
# Warmup Iteration   1: 5473.329 ns/op
# Warmup Iteration   2: 3343.842 ns/op
# Warmup Iteration   3: 4705.853 ns/op
Iteration   1: 3255.055 ns/op
Iteration   2: 3298.770 ns/op
Iteration   3: 2861.055 ns/op
Iteration   4: 2795.785 ns/op
Iteration   5: 2930.760 ns/op
Iteration   6: 16262.474 ns/op
Iteration   7: 3200.596 ns/op
Iteration   8: 3113.886 ns/op
Iteration   9: 2988.882 ns/op
Iteration  10: 2961.620 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6424.533 ±(99.9%) 10733.991 ns/op [Average]
  (min, avg, max) = (2754.634, 6424.533, 57417.444), stdev = 12361.280
  CI (99.9%): [≈ 0, 17158.524] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 99.56% complete, ETA 00:00:19
# Fork: 1 of 2
# Warmup Iteration   1: 4438.193 ns/op
# Warmup Iteration   2: 6075.300 ns/op
# Warmup Iteration   3: 2263.526 ns/op
Iteration   1: 2062.982 ns/op
Iteration   2: 2186.976 ns/op
Iteration   3: 1674.067 ns/op
Iteration   4: 13663.317 ns/op
Iteration   5: 1780.847 ns/op
Iteration   6: 1875.314 ns/op
Iteration   7: 6050.418 ns/op
Iteration   8: 2052.242 ns/op
Iteration   9: 1847.375 ns/op
Iteration  10: 1835.013 ns/op

# Run progress: 99.61% complete, ETA 00:00:16
# Fork: 2 of 2
# Warmup Iteration   1: 4371.525 ns/op
# Warmup Iteration   2: 4706.946 ns/op
# Warmup Iteration   3: 2220.310 ns/op
Iteration   1: 2054.183 ns/op
Iteration   2: 2199.865 ns/op
Iteration   3: 1639.720 ns/op
Iteration   4: 5377.460 ns/op
Iteration   5: 1862.357 ns/op
Iteration   6: 2007.574 ns/op
Iteration   7: 5345.730 ns/op
Iteration   8: 1886.658 ns/op
Iteration   9: 1742.744 ns/op
Iteration  10: 1736.187 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3044.051 ±(99.9%) 2470.914 ns/op [Average]
  (min, avg, max) = (1639.720, 3044.051, 13663.317), stdev = 2845.508
  CI (99.9%): [573.138, 5514.965] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 99.67% complete, ETA 00:00:14
# Fork: 1 of 2
# Warmup Iteration   1: 4331.061 ns/op
# Warmup Iteration   2: 4786.697 ns/op
# Warmup Iteration   3: 2646.205 ns/op
Iteration   1: 34172.782 ns/op
Iteration   2: 2211.527 ns/op
Iteration   3: 1643.157 ns/op
Iteration   4: 13857.566 ns/op
Iteration   5: 1879.529 ns/op
Iteration   6: 2056.866 ns/op
Iteration   7: 10012.929 ns/op
Iteration   8: 2000.785 ns/op
Iteration   9: 1783.619 ns/op
Iteration  10: 1789.473 ns/op

# Run progress: 99.72% complete, ETA 00:00:11
# Fork: 2 of 2
# Warmup Iteration   1: 5473.452 ns/op
# Warmup Iteration   2: 3191.445 ns/op
# Warmup Iteration   3: 2244.016 ns/op
Iteration   1: 8032.456 ns/op
Iteration   2: 2239.254 ns/op
Iteration   3: 1609.919 ns/op
Iteration   4: 11888.571 ns/op
Iteration   5: 1813.098 ns/op
Iteration   6: 2008.964 ns/op
Iteration   7: 3630.632 ns/op
Iteration   8: 2015.113 ns/op
Iteration   9: 1774.788 ns/op
Iteration  10: 1788.933 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5410.498 ±(99.9%) 6740.170 ns/op [Average]
  (min, avg, max) = (1609.919, 5410.498, 34172.782), stdev = 7761.989
  CI (99.9%): [≈ 0, 12150.668] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 99.78% complete, ETA 00:00:09
# Fork: 1 of 2
# Warmup Iteration   1: 3072.725 ns/op
# Warmup Iteration   2: 1930.979 ns/op
# Warmup Iteration   3: 3478.002 ns/op
Iteration   1: 5005.902 ns/op
Iteration   2: 3157.576 ns/op
Iteration   3: 1761.642 ns/op
Iteration   4: 4110.609 ns/op
Iteration   5: 2019.822 ns/op
Iteration   6: 2090.409 ns/op
Iteration   7: 2170.643 ns/op
Iteration   8: 2091.694 ns/op
Iteration   9: 1947.005 ns/op
Iteration  10: 1847.124 ns/op

# Run progress: 99.83% complete, ETA 00:00:07
# Fork: 2 of 2
# Warmup Iteration   1: 2975.775 ns/op
# Warmup Iteration   2: 1912.695 ns/op
# Warmup Iteration   3: 4905.780 ns/op
Iteration   1: 3134.463 ns/op
Iteration   2: 3521.252 ns/op
Iteration   3: 1741.386 ns/op
Iteration   4: 3539.266 ns/op
Iteration   5: 1997.208 ns/op
Iteration   6: 2056.626 ns/op
Iteration   7: 2103.848 ns/op
Iteration   8: 2056.967 ns/op
Iteration   9: 1863.544 ns/op
Iteration  10: 1817.238 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2501.711 ±(99.9%) 797.645 ns/op [Average]
  (min, avg, max) = (1741.386, 2501.711, 5005.902), stdev = 918.569
  CI (99.9%): [1704.066, 3299.356] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 200 ms each
# Measurement: 10 iterations, 100 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 500, arraySubSize = 256, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 99.89% complete, ETA 00:00:04
# Fork: 1 of 2
# Warmup Iteration   1: 15691.116 ns/op
# Warmup Iteration   2: 18243.445 ns/op
# Warmup Iteration   3: 9810.626 ns/op
Iteration   1: 10223.426 ns/op
Iteration   2: 10604.191 ns/op
Iteration   3: 9592.272 ns/op
Iteration   4: 9174.607 ns/op
Iteration   5: 10321.690 ns/op
Iteration   6: 10435.972 ns/op
Iteration   7: 12780.141 ns/op
Iteration   8: 9974.757 ns/op
Iteration   9: 10098.438 ns/op
Iteration  10: 9890.161 ns/op

# Run progress: 99.94% complete, ETA 00:00:02
# Fork: 2 of 2
# Warmup Iteration   1: 15143.970 ns/op
# Warmup Iteration   2: 28268.914 ns/op
# Warmup Iteration   3: 9959.461 ns/op
Iteration   1: 10425.321 ns/op
Iteration   2: 10580.555 ns/op
Iteration   3: 9776.107 ns/op
Iteration   4: 9334.464 ns/op
Iteration   5: 10367.295 ns/op
Iteration   6: 10504.632 ns/op
Iteration   7: 12967.363 ns/op
Iteration   8: 10078.742 ns/op
Iteration   9: 10199.095 ns/op
Iteration  10: 9981.689 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10365.546 ±(99.9%) 818.651 ns/op [Average]
  (min, avg, max) = (9174.607, 10365.546, 12967.363), stdev = 942.760
  CI (99.9%): [9546.895, 11184.197] (assumes normal distribution)


# Run complete. Total time: 01:11:56

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                (arraySize)  (arraySubSize)  (dataTweaker)  (distBuilder)     (tSorter)  Mode  Cnt      Score       Error  Units
ArraySortBenchmark.sort          500               1     IDENT_____        STAGGER      BASELINE  avgt   20     35.623 ±     0.376  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        STAGGER        DPQ_11  avgt   20   1405.967 ±     8.533  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20   8208.727 ±    38.040  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        STAGGER    DPQ_18_11I  avgt   20   7925.537 ±   122.807  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        STAGGER    DPQ_18_11P  avgt   20   6977.612 ±    71.065  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        STAGGER         RADIX  avgt   20   1447.840 ±     2.897  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SAWTOTH      BASELINE  avgt   20     35.605 ±     0.349  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SAWTOTH        DPQ_11  avgt   20    234.524 ±     0.926  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20    226.532 ±     3.600  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20    230.530 ±     3.071  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20    278.402 ±     7.588  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SAWTOTH         RADIX  avgt   20    349.579 ±     1.843  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        _RANDOM      BASELINE  avgt   20     35.635 ±     0.383  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        _RANDOM        DPQ_11  avgt   20    234.540 ±     0.918  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20    229.715 ±     3.797  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20    227.456 ±     0.788  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20    269.708 ±     1.120  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        _RANDOM         RADIX  avgt   20    349.480 ±     1.887  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        PLATEAU      BASELINE  avgt   20     42.061 ±     6.433  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        PLATEAU        DPQ_11  avgt   20    237.791 ±     1.765  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20    437.045 ±     1.506  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    436.690 ±    14.051  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20    436.174 ±     0.642  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        PLATEAU         RADIX  avgt   20    419.521 ±     1.923  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SHUFFLE      BASELINE  avgt   20     35.579 ±     0.359  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SHUFFLE        DPQ_11  avgt   20    237.643 ±     1.661  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20    978.600 ±     3.724  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20    982.973 ±     2.062  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20   1333.185 ±     1.416  ns/op
ArraySortBenchmark.sort          500               1     IDENT_____        SHUFFLE         RADIX  avgt   20    325.470 ±     1.716  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        STAGGER      BASELINE  avgt   20     36.217 ±     2.141  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        STAGGER        DPQ_11  avgt   20   1892.701 ±    21.617  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20   6248.845 ±    19.691  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        STAGGER    DPQ_18_11I  avgt   20   6261.357 ±    14.841  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   6154.943 ±    19.646  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        STAGGER         RADIX  avgt   20   1841.244 ±    20.426  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SAWTOTH      BASELINE  avgt   20     35.635 ±     0.352  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SAWTOTH        DPQ_11  avgt   20    235.189 ±     2.661  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20    226.002 ±     2.072  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20    227.248 ±     0.789  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20    270.519 ±     0.757  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SAWTOTH         RADIX  avgt   20    349.994 ±     1.442  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        _RANDOM      BASELINE  avgt   20     35.593 ±     0.359  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        _RANDOM        DPQ_11  avgt   20    234.511 ±     0.834  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20    225.873 ±     0.741  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20    233.674 ±     0.755  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20    270.470 ±     0.724  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        _RANDOM         RADIX  avgt   20    349.471 ±     1.940  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        PLATEAU      BASELINE  avgt   20     35.612 ±     0.352  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        PLATEAU        DPQ_11  avgt   20    494.390 ±     6.189  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    429.518 ±     1.404  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    431.254 ±     2.236  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    428.884 ±     0.784  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        PLATEAU         RADIX  avgt   20    386.526 ±     4.129  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SHUFFLE      BASELINE  avgt   20     42.056 ±     6.441  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SHUFFLE        DPQ_11  avgt   20    461.574 ±     1.116  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20   2322.559 ±     8.265  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   2330.866 ±     7.853  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   2010.325 ±     5.324  ns/op
ArraySortBenchmark.sort          500               1     REVERSE___        SHUFFLE         RADIX  avgt   20    803.590 ±    13.983  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        STAGGER      BASELINE  avgt   20     35.612 ±     0.355  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        STAGGER        DPQ_11  avgt   20   1687.141 ±    23.070  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20   7667.151 ±    39.481  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20   7736.794 ±    18.974  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20   6152.704 ±    55.369  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        STAGGER         RADIX  avgt   20   1697.497 ±     4.541  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     42.653 ±     6.318  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20    234.311 ±     0.909  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20    225.688 ±     0.673  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20    229.410 ±     6.385  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20    270.514 ±     0.790  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SAWTOTH         RADIX  avgt   20    349.210 ±     1.979  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        _RANDOM      BASELINE  avgt   20     35.623 ±     0.366  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        _RANDOM        DPQ_11  avgt   20    234.113 ±     0.939  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20    233.212 ±     6.843  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20    227.564 ±     0.827  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20    270.495 ±     0.780  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        _RANDOM         RADIX  avgt   20    349.381 ±     1.786  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        PLATEAU      BASELINE  avgt   20     35.612 ±     0.347  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        PLATEAU        DPQ_11  avgt   20   1133.245 ±     5.944  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    438.188 ±     0.996  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    438.953 ±     1.476  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    439.851 ±     3.006  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        PLATEAU         RADIX  avgt   20    289.710 ±     2.955  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     35.611 ±     0.361  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20    366.948 ±     1.275  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20   3643.253 ±    40.776  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   3596.801 ±    11.781  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20   3306.612 ±    41.988  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_FR        SHUFFLE         RADIX  avgt   20   1473.245 ±     5.473  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        STAGGER      BASELINE  avgt   20     35.623 ±     0.351  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        STAGGER        DPQ_11  avgt   20   1605.095 ±    10.362  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20   7901.007 ±    33.402  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20   8004.766 ±    27.676  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20   6161.675 ±    33.069  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        STAGGER         RADIX  avgt   20   1575.791 ±     4.511  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     35.620 ±     0.364  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20    234.480 ±     0.885  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20    226.446 ±     3.626  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20    227.724 ±     0.586  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20    278.358 ±     7.549  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SAWTOTH         RADIX  avgt   20    349.253 ±     1.903  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        _RANDOM      BASELINE  avgt   20     35.611 ±     0.343  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        _RANDOM        DPQ_11  avgt   20    234.450 ±     0.876  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20    235.743 ±     2.698  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20    242.230 ±    13.248  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20    270.542 ±     0.759  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        _RANDOM         RADIX  avgt   20    349.438 ±     1.994  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        PLATEAU      BASELINE  avgt   20     35.602 ±     0.347  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        PLATEAU        DPQ_11  avgt   20    237.511 ±     1.667  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    436.852 ±     1.459  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    439.818 ±     2.566  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20    436.311 ±     0.780  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        PLATEAU         RADIX  avgt   20    419.370 ±     1.873  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     35.645 ±     0.356  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   1621.168 ±    21.518  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20   2958.176 ±    18.904  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   2954.297 ±    18.092  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20   2486.542 ±    13.719  ns/op
ArraySortBenchmark.sort          500               1     REVERSE_BA        SHUFFLE         RADIX  avgt   20   1626.742 ±     9.647  ns/op
ArraySortBenchmark.sort          500               1     SORT______        STAGGER      BASELINE  avgt   20     38.047 ±     0.272  ns/op
ArraySortBenchmark.sort          500               1     SORT______        STAGGER        DPQ_11  avgt   20    241.026 ±     0.773  ns/op
ArraySortBenchmark.sort          500               1     SORT______        STAGGER  DPQ_18_11_21  avgt   20    995.213 ±     1.759  ns/op
ArraySortBenchmark.sort          500               1     SORT______        STAGGER    DPQ_18_11I  avgt   20   1003.085 ±     1.990  ns/op
ArraySortBenchmark.sort          500               1     SORT______        STAGGER    DPQ_18_11P  avgt   20   1016.051 ±     6.026  ns/op
ArraySortBenchmark.sort          500               1     SORT______        STAGGER         RADIX  avgt   20    460.680 ±     0.977  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SAWTOTH      BASELINE  avgt   20     38.007 ±     0.260  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SAWTOTH        DPQ_11  avgt   20    235.756 ±     0.654  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20    228.452 ±     0.700  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SAWTOTH    DPQ_18_11I  avgt   20    234.279 ±     4.696  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SAWTOTH    DPQ_18_11P  avgt   20    273.116 ±     0.945  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SAWTOTH         RADIX  avgt   20    354.041 ±     2.723  ns/op
ArraySortBenchmark.sort          500               1     SORT______        _RANDOM      BASELINE  avgt   20     38.005 ±     0.261  ns/op
ArraySortBenchmark.sort          500               1     SORT______        _RANDOM        DPQ_11  avgt   20    235.753 ±     0.726  ns/op
ArraySortBenchmark.sort          500               1     SORT______        _RANDOM  DPQ_18_11_21  avgt   20    233.565 ±     4.782  ns/op
ArraySortBenchmark.sort          500               1     SORT______        _RANDOM    DPQ_18_11I  avgt   20    229.894 ±     0.194  ns/op
ArraySortBenchmark.sort          500               1     SORT______        _RANDOM    DPQ_18_11P  avgt   20    273.533 ±     2.179  ns/op
ArraySortBenchmark.sort          500               1     SORT______        _RANDOM         RADIX  avgt   20    353.937 ±     3.074  ns/op
ArraySortBenchmark.sort          500               1     SORT______        PLATEAU      BASELINE  avgt   20     38.023 ±     0.284  ns/op
ArraySortBenchmark.sort          500               1     SORT______        PLATEAU        DPQ_11  avgt   20    239.716 ±     1.138  ns/op
ArraySortBenchmark.sort          500               1     SORT______        PLATEAU  DPQ_18_11_21  avgt   20    440.039 ±     0.660  ns/op
ArraySortBenchmark.sort          500               1     SORT______        PLATEAU    DPQ_18_11I  avgt   20    441.717 ±     2.082  ns/op
ArraySortBenchmark.sort          500               1     SORT______        PLATEAU    DPQ_18_11P  avgt   20    438.253 ±     0.489  ns/op
ArraySortBenchmark.sort          500               1     SORT______        PLATEAU         RADIX  avgt   20    373.817 ±    41.508  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SHUFFLE      BASELINE  avgt   20     37.987 ±     0.273  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SHUFFLE        DPQ_11  avgt   20    238.375 ±     0.654  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    974.956 ±     0.981  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    984.994 ±     1.256  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SHUFFLE    DPQ_18_11P  avgt   20   1335.057 ±     1.072  ns/op
ArraySortBenchmark.sort          500               1     SORT______        SHUFFLE         RADIX  avgt   20    327.425 ±     1.011  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        STAGGER      BASELINE  avgt   20     35.604 ±     0.368  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        STAGGER        DPQ_11  avgt   20   4679.560 ±    91.841  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        STAGGER  DPQ_18_11_21  avgt   20   8364.140 ±    34.017  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        STAGGER    DPQ_18_11I  avgt   20   8265.500 ±    20.234  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        STAGGER    DPQ_18_11P  avgt   20   6135.029 ±    56.546  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        STAGGER         RADIX  avgt   20   8669.015 ±   107.908  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SAWTOTH      BASELINE  avgt   20     35.638 ±     0.372  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SAWTOTH        DPQ_11  avgt   20   2623.632 ±    66.300  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20   1472.771 ±     3.662  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20   1479.429 ±     7.551  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20   1549.482 ±    15.594  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SAWTOTH         RADIX  avgt   20   7885.565 ±    61.021  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        _RANDOM      BASELINE  avgt   20     35.610 ±     0.373  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        _RANDOM        DPQ_11  avgt   20   2627.784 ±    62.345  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20   1482.554 ±    15.820  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        _RANDOM    DPQ_18_11I  avgt   20   1491.866 ±     8.270  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        _RANDOM    DPQ_18_11P  avgt   20   1564.984 ±     5.413  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        _RANDOM         RADIX  avgt   20   7733.491 ±    92.030  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        PLATEAU      BASELINE  avgt   20     35.615 ±     0.363  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        PLATEAU        DPQ_11  avgt   20   2556.184 ±    43.789  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20   1548.079 ±   135.331  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        PLATEAU    DPQ_18_11I  avgt   20   1499.810 ±     4.267  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        PLATEAU    DPQ_18_11P  avgt   20   1537.687 ±   129.577  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        PLATEAU         RADIX  avgt   20   7907.044 ±    41.057  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SHUFFLE      BASELINE  avgt   20     35.607 ±     0.362  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SHUFFLE        DPQ_11  avgt   20   2524.569 ±    21.159  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20   1236.936 ±     1.850  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   1252.733 ±     4.565  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20   1368.893 ±    30.991  ns/op
ArraySortBenchmark.sort          500               1     DITHER____        SHUFFLE         RADIX  avgt   20   8979.639 ±   115.573  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        STAGGER      BASELINE  avgt   20     35.647 ±     0.381  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        STAGGER        DPQ_11  avgt   20   3096.632 ±     5.971  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20   6510.168 ±    21.452  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        STAGGER    DPQ_18_11I  avgt   20   6460.267 ±    14.377  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        STAGGER    DPQ_18_11P  avgt   20   5409.385 ±    28.279  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        STAGGER         RADIX  avgt   20   3225.611 ±     7.440  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SAWTOTH      BASELINE  avgt   20     35.636 ±     0.371  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SAWTOTH        DPQ_11  avgt   20   1756.590 ±    11.736  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20   1107.286 ±    37.316  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20   1116.734 ±    21.986  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20   1471.344 ±     0.886  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SAWTOTH         RADIX  avgt   20   7952.879 ±    30.918  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        _RANDOM      BASELINE  avgt   20     36.437 ±     2.935  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        _RANDOM        DPQ_11  avgt   20   2327.693 ±   208.542  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20   1583.463 ±   430.840  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20   1800.939 ±   592.616  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20   1452.207 ±   226.065  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        _RANDOM         RADIX  avgt   20   7945.182 ±   117.625  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        PLATEAU      BASELINE  avgt   20     35.627 ±     0.364  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        PLATEAU        DPQ_11  avgt   20    237.563 ±     1.701  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20    441.950 ±     0.936  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    443.379 ±     3.106  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20    439.181 ±     1.919  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        PLATEAU         RADIX  avgt   20    419.484 ±     1.859  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SHUFFLE      BASELINE  avgt   20     36.220 ±     2.132  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SHUFFLE        DPQ_11  avgt   20   5844.942 ±   460.166  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20   5457.577 ±   620.106  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   5089.060 ±   279.462  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20   4422.103 ±   445.102  ns/op
ArraySortBenchmark.sort          500               4     IDENT_____        SHUFFLE         RADIX  avgt   20  10145.337 ±   776.472  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        STAGGER      BASELINE  avgt   20     35.608 ±     0.360  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        STAGGER        DPQ_11  avgt   20   3519.359 ±     5.390  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20   5750.213 ±    45.699  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        STAGGER    DPQ_18_11I  avgt   20   5489.282 ±   119.048  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   5616.967 ±    72.602  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        STAGGER         RADIX  avgt   20   3296.899 ±    58.176  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SAWTOTH      BASELINE  avgt   20     35.626 ±     0.351  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SAWTOTH        DPQ_11  avgt   20   2268.737 ±     6.035  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20   1184.032 ±     4.887  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20   1180.489 ±     2.975  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20   1224.749 ±     2.745  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SAWTOTH         RADIX  avgt   20   7960.358 ±    29.271  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        _RANDOM      BASELINE  avgt   20     35.612 ±     0.355  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        _RANDOM        DPQ_11  avgt   20   2207.540 ±   265.608  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20   1221.538 ±   118.213  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20   1264.505 ±   175.995  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20   1138.101 ±    89.815  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        _RANDOM         RADIX  avgt   20   7811.693 ±   149.466  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        PLATEAU      BASELINE  avgt   20     42.045 ±     6.434  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        PLATEAU        DPQ_11  avgt   20    489.844 ±     3.876  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    444.879 ±     0.966  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    442.739 ±     5.670  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    442.270 ±     0.878  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        PLATEAU         RADIX  avgt   20    380.840 ±    18.371  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SHUFFLE      BASELINE  avgt   20     35.591 ±     0.369  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SHUFFLE        DPQ_11  avgt   20   5022.858 ±   148.481  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20   6214.454 ±  1071.172  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   5944.055 ±   965.605  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   5028.103 ±   593.711  ns/op
ArraySortBenchmark.sort          500               4     REVERSE___        SHUFFLE         RADIX  avgt   20  10581.895 ±   583.073  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        STAGGER      BASELINE  avgt   20     35.625 ±     0.369  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        STAGGER        DPQ_11  avgt   20   3351.860 ±     6.189  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20   7884.990 ±    23.505  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20   7874.443 ±    23.809  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20   5515.531 ±    18.087  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        STAGGER         RADIX  avgt   20   3432.546 ±    17.228  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     35.620 ±     0.342  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20   2725.985 ±    62.223  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20   1055.129 ±     3.747  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20   1044.404 ±     6.070  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20   1486.472 ±    10.346  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SAWTOTH         RADIX  avgt   20   8094.072 ±    53.214  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        _RANDOM      BASELINE  avgt   20     35.599 ±     0.362  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        _RANDOM        DPQ_11  avgt   20   2219.729 ±   231.500  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20   1229.597 ±   126.486  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20   1260.719 ±   154.243  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20   1186.117 ±   103.136  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        _RANDOM         RADIX  avgt   20   8158.297 ±   355.936  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        PLATEAU      BASELINE  avgt   20     35.618 ±     0.349  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        PLATEAU        DPQ_11  avgt   20   1039.580 ±     6.576  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    443.279 ±     0.750  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    444.177 ±     4.172  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    437.860 ±     9.693  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        PLATEAU         RADIX  avgt   20    299.627 ±     1.916  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     35.590 ±     0.373  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20  18249.749 ± 46210.781  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20   5434.790 ±  1421.722  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   4785.567 ±   396.906  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20   9246.083 ± 16965.355  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_FR        SHUFFLE         RADIX  avgt   20  10567.597 ±  1095.090  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        STAGGER      BASELINE  avgt   20     35.630 ±     0.355  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        STAGGER        DPQ_11  avgt   20   3608.552 ±    30.698  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20   6767.944 ±    15.731  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20   6830.488 ±    25.241  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20   6877.667 ±    21.428  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        STAGGER         RADIX  avgt   20   3445.280 ±     6.988  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     35.620 ±     0.353  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20   1856.878 ±    30.589  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20   1161.532 ±    28.106  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20   1171.808 ±    23.773  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20   1660.441 ±     6.172  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SAWTOTH         RADIX  avgt   20   7951.635 ±    43.182  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        _RANDOM      BASELINE  avgt   20     35.619 ±     0.356  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        _RANDOM        DPQ_11  avgt   20   2244.762 ±   353.871  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20   1403.578 ±   413.719  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20   1392.891 ±   232.612  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20   1304.550 ±   257.350  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        _RANDOM         RADIX  avgt   20   7915.211 ±    61.350  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        PLATEAU      BASELINE  avgt   20     35.613 ±     0.364  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        PLATEAU        DPQ_11  avgt   20    242.698 ±     6.085  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    444.311 ±     3.534  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    440.448 ±     0.838  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20    448.736 ±     7.916  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        PLATEAU         RADIX  avgt   20    372.981 ±    41.911  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     35.625 ±     0.363  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   4567.936 ±   152.765  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20   6093.812 ±   628.041  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   6082.516 ±   560.189  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20   5322.025 ±   583.917  ns/op
ArraySortBenchmark.sort          500               4     REVERSE_BA        SHUFFLE         RADIX  avgt   20  10506.759 ±   852.544  ns/op
ArraySortBenchmark.sort          500               4     SORT______        STAGGER      BASELINE  avgt   20     44.466 ±     5.798  ns/op
ArraySortBenchmark.sort          500               4     SORT______        STAGGER        DPQ_11  avgt   20    240.715 ±     0.875  ns/op
ArraySortBenchmark.sort          500               4     SORT______        STAGGER  DPQ_18_11_21  avgt   20   1036.038 ±     1.024  ns/op
ArraySortBenchmark.sort          500               4     SORT______        STAGGER    DPQ_18_11I  avgt   20   1048.420 ±     1.592  ns/op
ArraySortBenchmark.sort          500               4     SORT______        STAGGER    DPQ_18_11P  avgt   20   1013.033 ±     3.513  ns/op
ArraySortBenchmark.sort          500               4     SORT______        STAGGER         RADIX  avgt   20    461.090 ±     1.161  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SAWTOTH      BASELINE  avgt   20     38.051 ±     0.289  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SAWTOTH        DPQ_11  avgt   20    239.358 ±     0.567  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20   1182.973 ±     8.739  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SAWTOTH    DPQ_18_11I  avgt   20   1180.538 ±     6.863  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SAWTOTH    DPQ_18_11P  avgt   20   1066.449 ±     4.132  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SAWTOTH         RADIX  avgt   20    440.550 ±     1.294  ns/op
ArraySortBenchmark.sort          500               4     SORT______        _RANDOM      BASELINE  avgt   20     38.040 ±     0.286  ns/op
ArraySortBenchmark.sort          500               4     SORT______        _RANDOM        DPQ_11  avgt   20    241.663 ±     3.232  ns/op
ArraySortBenchmark.sort          500               4     SORT______        _RANDOM  DPQ_18_11_21  avgt   20    919.621 ±    91.939  ns/op
ArraySortBenchmark.sort          500               4     SORT______        _RANDOM    DPQ_18_11I  avgt   20    920.243 ±    93.412  ns/op
ArraySortBenchmark.sort          500               4     SORT______        _RANDOM    DPQ_18_11P  avgt   20    919.323 ±    98.822  ns/op
ArraySortBenchmark.sort          500               4     SORT______        _RANDOM         RADIX  avgt   20    427.718 ±    12.846  ns/op
ArraySortBenchmark.sort          500               4     SORT______        PLATEAU      BASELINE  avgt   20     38.778 ±     2.813  ns/op
ArraySortBenchmark.sort          500               4     SORT______        PLATEAU        DPQ_11  avgt   20    238.900 ±     0.958  ns/op
ArraySortBenchmark.sort          500               4     SORT______        PLATEAU  DPQ_18_11_21  avgt   20    446.583 ±     2.422  ns/op
ArraySortBenchmark.sort          500               4     SORT______        PLATEAU    DPQ_18_11I  avgt   20    445.056 ±     2.277  ns/op
ArraySortBenchmark.sort          500               4     SORT______        PLATEAU    DPQ_18_11P  avgt   20    442.809 ±     0.323  ns/op
ArraySortBenchmark.sort          500               4     SORT______        PLATEAU         RADIX  avgt   20    420.937 ±     0.901  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SHUFFLE      BASELINE  avgt   20     38.007 ±     0.273  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SHUFFLE        DPQ_11  avgt   20    238.676 ±     0.755  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    975.864 ±     1.448  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    985.481 ±     1.678  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SHUFFLE    DPQ_18_11P  avgt   20   1341.993 ±     6.109  ns/op
ArraySortBenchmark.sort          500               4     SORT______        SHUFFLE         RADIX  avgt   20    420.797 ±     0.860  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        STAGGER      BASELINE  avgt   20     35.615 ±     0.357  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        STAGGER        DPQ_11  avgt   20   3098.250 ±    13.090  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        STAGGER  DPQ_18_11_21  avgt   20   6498.060 ±    21.343  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        STAGGER    DPQ_18_11I  avgt   20   6486.195 ±    19.424  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        STAGGER    DPQ_18_11P  avgt   20   5330.657 ±    90.622  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        STAGGER         RADIX  avgt   20   3221.284 ±     2.094  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SAWTOTH      BASELINE  avgt   20     35.622 ±     0.350  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SAWTOTH        DPQ_11  avgt   20   2755.676 ±    23.870  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20   1825.299 ±     9.535  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20   1828.511 ±    15.655  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20   1786.980 ±     6.323  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SAWTOTH         RADIX  avgt   20   7936.654 ±    20.195  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        _RANDOM      BASELINE  avgt   20     35.604 ±     0.350  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        _RANDOM        DPQ_11  avgt   20   3360.633 ±   576.110  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20   2126.683 ±   571.963  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        _RANDOM    DPQ_18_11I  avgt   20   2137.863 ±   480.577  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        _RANDOM    DPQ_18_11P  avgt   20   2229.444 ±   462.652  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        _RANDOM         RADIX  avgt   20   7923.086 ±    25.199  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        PLATEAU      BASELINE  avgt   20     35.630 ±     0.342  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        PLATEAU        DPQ_11  avgt   20   2389.667 ±    12.924  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20   1484.568 ±     9.314  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        PLATEAU    DPQ_18_11I  avgt   20   1524.041 ±    39.742  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        PLATEAU    DPQ_18_11P  avgt   20   1641.004 ±     7.565  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        PLATEAU         RADIX  avgt   20   7901.647 ±    11.980  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SHUFFLE      BASELINE  avgt   20     35.590 ±     0.352  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SHUFFLE        DPQ_11  avgt   20   5613.477 ±  2953.678  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20   5598.394 ±  1128.028  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   4433.560 ±   227.491  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20   7691.454 ±  7281.697  ns/op
ArraySortBenchmark.sort          500               4     DITHER____        SHUFFLE         RADIX  avgt   20   9845.750 ±   205.607  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        STAGGER      BASELINE  avgt   20     35.624 ±     0.356  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        STAGGER        DPQ_11  avgt   20   5604.170 ±    24.970  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20   7516.032 ±    33.007  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        STAGGER    DPQ_18_11I  avgt   20   7474.354 ±    21.098  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        STAGGER    DPQ_18_11P  avgt   20   6512.745 ±    25.713  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        STAGGER         RADIX  avgt   20   9036.777 ±   178.077  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SAWTOTH      BASELINE  avgt   20     35.598 ±     0.359  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SAWTOTH        DPQ_11  avgt   20   5889.442 ±    27.219  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20   4266.660 ±    31.286  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20   4303.102 ±    14.446  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20   4172.940 ±    22.309  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SAWTOTH         RADIX  avgt   20   7965.671 ±    11.054  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        _RANDOM      BASELINE  avgt   20     35.612 ±     0.364  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        _RANDOM        DPQ_11  avgt   20   4617.607 ±  1825.658  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20   4917.238 ±  2001.172  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20   4672.780 ±  1396.154  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20   4521.418 ±   685.828  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        _RANDOM         RADIX  avgt   20   7849.794 ±   119.059  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        PLATEAU      BASELINE  avgt   20     35.600 ±     0.354  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        PLATEAU        DPQ_11  avgt   20    236.429 ±     1.072  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20    455.548 ±     5.627  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    450.773 ±     7.130  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20    455.505 ±     8.129  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        PLATEAU         RADIX  avgt   20    325.609 ±     1.587  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SHUFFLE      BASELINE  avgt   20     35.617 ±     0.367  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SHUFFLE        DPQ_11  avgt   20   6325.965 ±   492.980  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20   2966.844 ±   231.582  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   3379.007 ±   233.279  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20   3081.549 ±   155.530  ns/op
ArraySortBenchmark.sort          500              16     IDENT_____        SHUFFLE         RADIX  avgt   20  10669.315 ±   184.073  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        STAGGER      BASELINE  avgt   20     35.621 ±     0.367  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        STAGGER        DPQ_11  avgt   20   6170.443 ±    53.474  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20   6445.513 ±    20.788  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        STAGGER    DPQ_18_11I  avgt   20   6432.560 ±    34.367  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   6693.397 ±    10.794  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        STAGGER         RADIX  avgt   20   9869.144 ±    66.148  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SAWTOTH      BASELINE  avgt   20     35.604 ±     0.344  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SAWTOTH        DPQ_11  avgt   20   6730.194 ±   203.996  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20   4822.799 ±   143.418  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20   4664.930 ±    26.319  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20   4723.301 ±    15.771  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SAWTOTH         RADIX  avgt   20   8252.610 ±    20.894  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        _RANDOM      BASELINE  avgt   20     42.047 ±     6.412  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        _RANDOM        DPQ_11  avgt   20   5719.495 ±  3160.626  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20   8128.369 ±  5062.149  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20   5480.317 ±  2385.371  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20   5066.585 ±  1558.768  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        _RANDOM         RADIX  avgt   20   7975.442 ±    62.228  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        PLATEAU      BASELINE  avgt   20     35.617 ±     0.360  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        PLATEAU        DPQ_11  avgt   20    491.986 ±     3.042  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    478.483 ±     3.344  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    467.279 ±     0.885  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    481.016 ±     1.060  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        PLATEAU         RADIX  avgt   20    425.806 ±     1.663  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SHUFFLE      BASELINE  avgt   20     35.602 ±     0.340  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SHUFFLE        DPQ_11  avgt   20   6419.986 ±   472.554  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20   4604.239 ±  1245.804  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   4465.806 ±  1128.272  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   4607.015 ±  2080.596  ns/op
ArraySortBenchmark.sort          500              16     REVERSE___        SHUFFLE         RADIX  avgt   20  11467.853 ±   500.298  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        STAGGER      BASELINE  avgt   20     35.665 ±     0.379  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        STAGGER        DPQ_11  avgt   20   6611.594 ±   635.907  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20   7388.259 ±    41.227  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20   7408.855 ±    24.653  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20   6629.006 ±    24.705  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        STAGGER         RADIX  avgt   20   9598.681 ±    57.883  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     35.621 ±     0.352  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20   8065.414 ±   522.351  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20   4047.220 ±    19.157  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20   4007.970 ±    81.918  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20   3986.594 ±    17.008  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SAWTOTH         RADIX  avgt   20   8272.273 ±    11.927  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        _RANDOM      BASELINE  avgt   20     35.603 ±     0.361  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        _RANDOM        DPQ_11  avgt   20   5149.792 ±  3568.150  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20   4525.185 ±  1144.570  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20   4016.473 ±   356.069  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20   4071.962 ±   381.454  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        _RANDOM         RADIX  avgt   20   7959.616 ±    38.168  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        PLATEAU      BASELINE  avgt   20     35.619 ±     0.362  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        PLATEAU        DPQ_11  avgt   20   1042.194 ±     5.582  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    472.864 ±     8.826  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    473.804 ±     9.744  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    483.577 ±     0.733  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        PLATEAU         RADIX  avgt   20    328.006 ±     3.072  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     35.616 ±     0.366  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   7400.725 ±   510.927  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20   5409.645 ±  3105.935  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   6439.683 ±  4031.641  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20  18127.344 ± 41239.789  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_FR        SHUFFLE         RADIX  avgt   20  11161.849 ±   243.132  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        STAGGER      BASELINE  avgt   20     35.610 ±     0.347  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        STAGGER        DPQ_11  avgt   20   5937.389 ±    20.380  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20   6701.778 ±    28.482  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20   6658.915 ±    14.641  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20   5609.619 ±    54.369  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        STAGGER         RADIX  avgt   20   9316.020 ±   188.982  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     36.398 ±     2.934  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20   8739.237 ±   648.671  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20   5175.653 ±    13.835  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20   4813.168 ±    59.159  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20   4931.380 ±   178.173  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SAWTOTH         RADIX  avgt   20   7959.464 ±    19.541  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        _RANDOM      BASELINE  avgt   20     35.585 ±     0.349  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        _RANDOM        DPQ_11  avgt   20   4583.861 ±  2358.431  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20   4765.955 ±  1114.249  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20   4458.684 ±  1141.299  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20   4334.340 ±   697.151  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        _RANDOM         RADIX  avgt   20   7840.777 ±    92.336  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        PLATEAU      BASELINE  avgt   20     35.630 ±     0.345  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        PLATEAU        DPQ_11  avgt   20    236.342 ±     1.142  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    451.505 ±     9.364  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    443.615 ±     1.495  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20    454.740 ±     7.706  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        PLATEAU         RADIX  avgt   20    373.005 ±    41.858  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     35.634 ±     0.368  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   7429.064 ±   461.683  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20   4759.926 ±   666.757  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   5319.977 ±   750.825  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20   4275.241 ±   389.628  ns/op
ArraySortBenchmark.sort          500              16     REVERSE_BA        SHUFFLE         RADIX  avgt   20  11415.091 ±   669.371  ns/op
ArraySortBenchmark.sort          500              16     SORT______        STAGGER      BASELINE  avgt   20     38.022 ±     0.308  ns/op
ArraySortBenchmark.sort          500              16     SORT______        STAGGER        DPQ_11  avgt   20    239.805 ±     1.572  ns/op
ArraySortBenchmark.sort          500              16     SORT______        STAGGER  DPQ_18_11_21  avgt   20    975.975 ±     1.829  ns/op
ArraySortBenchmark.sort          500              16     SORT______        STAGGER    DPQ_18_11I  avgt   20    987.805 ±     2.441  ns/op
ArraySortBenchmark.sort          500              16     SORT______        STAGGER    DPQ_18_11P  avgt   20   1335.871 ±     2.584  ns/op
ArraySortBenchmark.sort          500              16     SORT______        STAGGER         RADIX  avgt   20    327.010 ±     0.997  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SAWTOTH      BASELINE  avgt   20     38.050 ±     0.299  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SAWTOTH        DPQ_11  avgt   20    243.342 ±     0.735  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20   1270.563 ±     3.862  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SAWTOTH    DPQ_18_11I  avgt   20   1275.881 ±     3.050  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SAWTOTH    DPQ_18_11P  avgt   20   1050.962 ±     2.114  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SAWTOTH         RADIX  avgt   20    459.027 ±     0.896  ns/op
ArraySortBenchmark.sort          500              16     SORT______        _RANDOM      BASELINE  avgt   20     38.014 ±     0.265  ns/op
ArraySortBenchmark.sort          500              16     SORT______        _RANDOM        DPQ_11  avgt   20    241.943 ±     1.103  ns/op
ArraySortBenchmark.sort          500              16     SORT______        _RANDOM  DPQ_18_11_21  avgt   20   7085.928 ± 12802.491  ns/op
ArraySortBenchmark.sort          500              16     SORT______        _RANDOM    DPQ_18_11I  avgt   20   2557.602 ±  3652.841  ns/op
ArraySortBenchmark.sort          500              16     SORT______        _RANDOM    DPQ_18_11P  avgt   20   1683.549 ±  1108.982  ns/op
ArraySortBenchmark.sort          500              16     SORT______        _RANDOM         RADIX  avgt   20    439.548 ±    14.767  ns/op
ArraySortBenchmark.sort          500              16     SORT______        PLATEAU      BASELINE  avgt   20     38.065 ±     0.269  ns/op
ArraySortBenchmark.sort          500              16     SORT______        PLATEAU        DPQ_11  avgt   20    238.618 ±     0.624  ns/op
ArraySortBenchmark.sort          500              16     SORT______        PLATEAU  DPQ_18_11_21  avgt   20    453.430 ±     7.688  ns/op
ArraySortBenchmark.sort          500              16     SORT______        PLATEAU    DPQ_18_11I  avgt   20    448.665 ±     1.342  ns/op
ArraySortBenchmark.sort          500              16     SORT______        PLATEAU    DPQ_18_11P  avgt   20    466.025 ±     0.673  ns/op
ArraySortBenchmark.sort          500              16     SORT______        PLATEAU         RADIX  avgt   20    377.106 ±    44.146  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SHUFFLE      BASELINE  avgt   20     38.031 ±     0.279  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SHUFFLE        DPQ_11  avgt   20    238.626 ±     0.880  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    978.886 ±     3.202  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    985.644 ±     1.736  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SHUFFLE    DPQ_18_11P  avgt   20   1335.750 ±     0.963  ns/op
ArraySortBenchmark.sort          500              16     SORT______        SHUFFLE         RADIX  avgt   20    374.168 ±    41.655  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        STAGGER      BASELINE  avgt   20     35.615 ±     0.344  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        STAGGER        DPQ_11  avgt   20   6574.524 ±   872.982  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        STAGGER  DPQ_18_11_21  avgt   20   6962.011 ±    19.420  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        STAGGER    DPQ_18_11I  avgt   20   6944.315 ±    17.382  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        STAGGER    DPQ_18_11P  avgt   20   5361.923 ±    27.437  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        STAGGER         RADIX  avgt   20   9198.340 ±    49.519  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SAWTOTH      BASELINE  avgt   20     42.035 ±     6.438  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SAWTOTH        DPQ_11  avgt   20   3538.488 ±    69.444  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20   5307.918 ±    33.344  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20   5073.073 ±     6.252  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20   4418.824 ±    14.039  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SAWTOTH         RADIX  avgt   20   7862.169 ±    96.817  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        _RANDOM      BASELINE  avgt   20     35.630 ±     0.360  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        _RANDOM        DPQ_11  avgt   20   5117.123 ±  2793.705  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20   4680.723 ±   709.663  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        _RANDOM    DPQ_18_11I  avgt   20   4745.449 ±   919.996  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        _RANDOM    DPQ_18_11P  avgt   20   4944.348 ±  1600.743  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        _RANDOM         RADIX  avgt   20   7969.903 ±    65.878  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        PLATEAU      BASELINE  avgt   20     40.395 ±     4.831  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        PLATEAU        DPQ_11  avgt   20   2722.936 ±     6.230  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20   1894.085 ±    64.367  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        PLATEAU    DPQ_18_11I  avgt   20   1876.051 ±    65.614  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        PLATEAU    DPQ_18_11P  avgt   20   2234.409 ±     9.197  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        PLATEAU         RADIX  avgt   20   7918.726 ±    31.142  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SHUFFLE      BASELINE  avgt   20     35.604 ±     0.371  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SHUFFLE        DPQ_11  avgt   20   4828.718 ±  2301.675  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20   3584.970 ±   906.994  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   3834.707 ±   599.256  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20   3554.083 ±   453.666  ns/op
ArraySortBenchmark.sort          500              16     DITHER____        SHUFFLE         RADIX  avgt   20  10691.512 ±   905.104  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        STAGGER      BASELINE  avgt   20     35.609 ±     0.348  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        STAGGER        DPQ_11  avgt   20  11065.444 ±    25.742  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20   6221.204 ±    61.211  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        STAGGER    DPQ_18_11I  avgt   20   6301.590 ±    25.396  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        STAGGER    DPQ_18_11P  avgt   20   5623.021 ±    46.732  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        STAGGER         RADIX  avgt   20   8406.815 ±   117.944  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SAWTOTH      BASELINE  avgt   20     35.639 ±     0.366  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SAWTOTH        DPQ_11  avgt   20   3559.119 ±     9.069  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20   6838.106 ±    15.184  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20   6812.278 ±    31.569  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20   5403.181 ±    32.256  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SAWTOTH         RADIX  avgt   20   3654.262 ±    10.650  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        _RANDOM      BASELINE  avgt   20     35.642 ±     0.350  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        _RANDOM        DPQ_11  avgt   20   5190.716 ±   139.170  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20   9388.377 ±  5339.189  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20  10100.110 ±  5998.878  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20   7512.236 ±  3190.158  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        _RANDOM         RADIX  avgt   20   7908.015 ±   103.034  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        PLATEAU      BASELINE  avgt   20     35.618 ±     0.364  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        PLATEAU        DPQ_11  avgt   20    236.723 ±     1.350  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20    454.694 ±     4.033  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    513.752 ±     2.583  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20    449.510 ±     1.023  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        PLATEAU         RADIX  avgt   20    372.559 ±    41.989  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SHUFFLE      BASELINE  avgt   20     35.619 ±     0.372  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SHUFFLE        DPQ_11  avgt   20   4002.631 ±   755.669  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20   2593.464 ±   186.114  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   3091.925 ±  2059.794  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20   2461.631 ±   339.951  ns/op
ArraySortBenchmark.sort          500              64     IDENT_____        SHUFFLE         RADIX  avgt   20   4024.937 ±   743.555  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        STAGGER      BASELINE  avgt   20     35.618 ±     0.357  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        STAGGER        DPQ_11  avgt   20   9031.228 ±    37.115  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20   7027.047 ±    16.709  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        STAGGER    DPQ_18_11I  avgt   20   7160.781 ±    31.847  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   7100.834 ±    38.055  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        STAGGER         RADIX  avgt   20   8663.319 ±   172.003  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SAWTOTH      BASELINE  avgt   20     35.620 ±     0.350  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SAWTOTH        DPQ_11  avgt   20   4123.912 ±    24.479  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20   5971.286 ±    13.891  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20   6067.563 ±   105.839  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20   4992.731 ±    83.005  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SAWTOTH         RADIX  avgt   20   4059.115 ±     7.966  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        _RANDOM      BASELINE  avgt   20     35.605 ±     0.346  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        _RANDOM        DPQ_11  avgt   20  22014.366 ± 32899.860  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20   8338.779 ±  7610.454  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20   9491.330 ±  7792.769  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20   7196.678 ±  1900.957  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        _RANDOM         RADIX  avgt   20   8191.913 ±   532.623  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        PLATEAU      BASELINE  avgt   20     35.607 ±     0.381  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        PLATEAU        DPQ_11  avgt   20    485.982 ±     0.835  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    599.003 ±    22.721  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    628.370 ±     0.865  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    601.275 ±     0.763  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        PLATEAU         RADIX  avgt   20    489.123 ±     1.481  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SHUFFLE      BASELINE  avgt   20     42.044 ±     6.440  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SHUFFLE        DPQ_11  avgt   20   4079.423 ±   668.203  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20   4708.018 ±  3229.498  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   4676.761 ±  2379.051  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   4073.277 ±  1806.825  ns/op
ArraySortBenchmark.sort          500              64     REVERSE___        SHUFFLE         RADIX  avgt   20   4195.549 ±   635.249  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        STAGGER      BASELINE  avgt   20     35.623 ±     0.354  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        STAGGER        DPQ_11  avgt   20  10923.281 ±    42.167  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20   6974.307 ±   188.649  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20   7100.719 ±    63.432  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20   7018.606 ±    17.520  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        STAGGER         RADIX  avgt   20   8934.890 ±   105.938  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     35.619 ±     0.367  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20   4818.426 ±    16.170  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20   6289.005 ±   152.104  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20   6215.381 ±   104.096  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20   6332.416 ±    24.472  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SAWTOTH         RADIX  avgt   20   6546.574 ±    19.873  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        _RANDOM      BASELINE  avgt   20     35.632 ±     0.352  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        _RANDOM        DPQ_11  avgt   20   5063.354 ±   170.154  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20  14666.204 ± 23194.707  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20  18013.672 ± 24816.541  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20   6398.698 ±  1512.465  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        _RANDOM         RADIX  avgt   20   7896.020 ±    80.791  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        PLATEAU      BASELINE  avgt   20     35.611 ±     0.367  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        PLATEAU        DPQ_11  avgt   20   1047.852 ±     7.388  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20   1137.090 ±     4.515  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20   1236.562 ±     5.137  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20   1173.299 ±    19.765  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        PLATEAU         RADIX  avgt   20    399.540 ±     2.075  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     42.062 ±     6.410  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   4745.720 ±   872.290  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20   4361.371 ±   679.340  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   4509.094 ±  1082.424  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20   3892.398 ±   670.524  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_FR        SHUFFLE         RADIX  avgt   20  21693.272 ± 47494.600  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        STAGGER      BASELINE  avgt   20     35.629 ±     0.364  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        STAGGER        DPQ_11  avgt   20   9715.690 ±   846.616  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20   7446.925 ±    33.901  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20   7499.147 ±    43.861  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20   7507.858 ±    14.746  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        STAGGER         RADIX  avgt   20   8701.475 ±    90.105  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     35.611 ±     0.366  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20   5193.763 ±    58.806  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20   7257.886 ±    20.096  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20   7106.987 ±    25.957  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20   5618.979 ±    28.166  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SAWTOTH         RADIX  avgt   20   6777.358 ±     6.994  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        _RANDOM      BASELINE  avgt   20     35.613 ±     0.354  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        _RANDOM        DPQ_11  avgt   20  20866.125 ± 56321.304  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20   6738.302 ±  1621.789  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20   5970.558 ±   273.748  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20   7517.910 ±  1914.394  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        _RANDOM         RADIX  avgt   20   7887.499 ±   125.288  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        PLATEAU      BASELINE  avgt   20     35.599 ±     0.346  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        PLATEAU        DPQ_11  avgt   20    236.492 ±     1.390  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    437.326 ±    11.605  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    512.802 ±     1.925  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20    449.481 ±     0.759  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        PLATEAU         RADIX  avgt   20    372.568 ±    41.547  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     35.599 ±     0.359  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   4849.401 ±   650.707  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20   3824.646 ±   517.706  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   3445.473 ±   447.138  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20   3182.268 ±   551.021  ns/op
ArraySortBenchmark.sort          500              64     REVERSE_BA        SHUFFLE         RADIX  avgt   20  19998.478 ± 40280.395  ns/op
ArraySortBenchmark.sort          500              64     SORT______        STAGGER      BASELINE  avgt   20     38.013 ±     0.273  ns/op
ArraySortBenchmark.sort          500              64     SORT______        STAGGER        DPQ_11  avgt   20    242.697 ±     3.137  ns/op
ArraySortBenchmark.sort          500              64     SORT______        STAGGER  DPQ_18_11_21  avgt   20   1042.687 ±     6.943  ns/op
ArraySortBenchmark.sort          500              64     SORT______        STAGGER    DPQ_18_11I  avgt   20   1050.763 ±     3.991  ns/op
ArraySortBenchmark.sort          500              64     SORT______        STAGGER    DPQ_18_11P  avgt   20   1011.642 ±     1.858  ns/op
ArraySortBenchmark.sort          500              64     SORT______        STAGGER         RADIX  avgt   20    423.080 ±     0.867  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SAWTOTH      BASELINE  avgt   20     38.014 ±     0.289  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SAWTOTH        DPQ_11  avgt   20    242.294 ±     0.824  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20   1046.290 ±     0.558  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SAWTOTH    DPQ_18_11I  avgt   20   1067.097 ±     1.054  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SAWTOTH    DPQ_18_11P  avgt   20   1064.856 ±    29.371  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SAWTOTH         RADIX  avgt   20    454.701 ±     0.827  ns/op
ArraySortBenchmark.sort          500              64     SORT______        _RANDOM      BASELINE  avgt   20     38.009 ±     0.269  ns/op
ArraySortBenchmark.sort          500              64     SORT______        _RANDOM        DPQ_11  avgt   20    241.380 ±     0.904  ns/op
ArraySortBenchmark.sort          500              64     SORT______        _RANDOM  DPQ_18_11_21  avgt   20   4090.801 ±  8210.785  ns/op
ArraySortBenchmark.sort          500              64     SORT______        _RANDOM    DPQ_18_11I  avgt   20   7413.397 ± 16967.373  ns/op
ArraySortBenchmark.sort          500              64     SORT______        _RANDOM    DPQ_18_11P  avgt   20   1429.008 ±   666.618  ns/op
ArraySortBenchmark.sort          500              64     SORT______        _RANDOM         RADIX  avgt   20    458.334 ±     2.847  ns/op
ArraySortBenchmark.sort          500              64     SORT______        PLATEAU      BASELINE  avgt   20     38.006 ±     0.268  ns/op
ArraySortBenchmark.sort          500              64     SORT______        PLATEAU        DPQ_11  avgt   20    238.638 ±     0.777  ns/op
ArraySortBenchmark.sort          500              64     SORT______        PLATEAU  DPQ_18_11_21  avgt   20    453.005 ±     0.617  ns/op
ArraySortBenchmark.sort          500              64     SORT______        PLATEAU    DPQ_18_11I  avgt   20    513.840 ±     0.216  ns/op
ArraySortBenchmark.sort          500              64     SORT______        PLATEAU    DPQ_18_11P  avgt   20    451.787 ±     0.183  ns/op
ArraySortBenchmark.sort          500              64     SORT______        PLATEAU         RADIX  avgt   20    374.306 ±    41.756  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SHUFFLE      BASELINE  avgt   20     38.033 ±     0.293  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SHUFFLE        DPQ_11  avgt   20    241.309 ±     1.010  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    975.341 ±     2.361  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    985.278 ±     1.490  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SHUFFLE    DPQ_18_11P  avgt   20   1342.061 ±     5.110  ns/op
ArraySortBenchmark.sort          500              64     SORT______        SHUFFLE         RADIX  avgt   20    374.615 ±    41.733  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        STAGGER      BASELINE  avgt   20     35.612 ±     0.343  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        STAGGER        DPQ_11  avgt   20  11082.361 ±    25.035  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        STAGGER  DPQ_18_11_21  avgt   20   6234.686 ±    45.329  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        STAGGER    DPQ_18_11I  avgt   20   6355.764 ±    76.145  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        STAGGER    DPQ_18_11P  avgt   20   5560.156 ±    68.986  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        STAGGER         RADIX  avgt   20   8584.568 ±    92.053  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SAWTOTH      BASELINE  avgt   20     35.616 ±     0.357  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SAWTOTH        DPQ_11  avgt   20   6057.934 ±   486.086  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20   6445.282 ±    16.895  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20   6420.461 ±    16.793  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20   5276.034 ±    18.414  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SAWTOTH         RADIX  avgt   20   8082.932 ±    17.643  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        _RANDOM      BASELINE  avgt   20     35.624 ±     0.353  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        _RANDOM        DPQ_11  avgt   20   5899.930 ±   152.602  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20   8191.051 ±  4147.227  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        _RANDOM    DPQ_18_11I  avgt   20   7018.140 ±  2839.936  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        _RANDOM    DPQ_18_11P  avgt   20   8346.417 ±  2716.067  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        _RANDOM         RADIX  avgt   20   7887.795 ±   107.424  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        PLATEAU      BASELINE  avgt   20     35.626 ±     0.358  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        PLATEAU        DPQ_11  avgt   20   2875.625 ±    14.643  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20   2023.190 ±     7.977  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        PLATEAU    DPQ_18_11I  avgt   20   2193.499 ±    43.273  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        PLATEAU    DPQ_18_11P  avgt   20   2005.766 ±     5.263  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        PLATEAU         RADIX  avgt   20   8066.703 ±    25.854  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SHUFFLE      BASELINE  avgt   20     35.622 ±     0.346  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SHUFFLE        DPQ_11  avgt   20   6016.141 ±  6031.462  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20   2790.148 ±   246.360  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   3094.598 ±  1730.215  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20   2714.791 ±   424.796  ns/op
ArraySortBenchmark.sort          500              64     DITHER____        SHUFFLE         RADIX  avgt   20  10950.283 ±   887.628  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        STAGGER      BASELINE  avgt   20     35.609 ±     0.359  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        STAGGER        DPQ_11  avgt   20   7778.045 ±    92.948  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20   6594.947 ±    23.614  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        STAGGER    DPQ_18_11I  avgt   20   6790.445 ±   613.635  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        STAGGER    DPQ_18_11P  avgt   20   6604.082 ±    77.149  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        STAGGER         RADIX  avgt   20   8715.897 ±   156.814  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SAWTOTH      BASELINE  avgt   20     35.620 ±     0.350  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SAWTOTH        DPQ_11  avgt   20   1347.472 ±    10.854  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20   9213.409 ±    21.241  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20   8682.028 ±    20.380  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20   6491.664 ±    31.952  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SAWTOTH         RADIX  avgt   20   1388.429 ±     1.822  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        _RANDOM      BASELINE  avgt   20     35.621 ±     0.359  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        _RANDOM        DPQ_11  avgt   20  11638.190 ± 12267.313  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20   7782.916 ±  3860.161  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20   7684.179 ±  3848.794  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20   7971.237 ±  2074.527  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        _RANDOM         RADIX  avgt   20   8564.783 ±   570.808  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        PLATEAU      BASELINE  avgt   20     35.621 ±     0.350  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        PLATEAU        DPQ_11  avgt   20    237.544 ±     1.707  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20   1078.509 ±     4.187  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20   1186.928 ±     1.588  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20   1015.158 ±    40.375  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        PLATEAU         RADIX  avgt   20    419.711 ±     1.866  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SHUFFLE      BASELINE  avgt   20     42.054 ±     6.447  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SHUFFLE        DPQ_11  avgt   20   2054.860 ±   616.059  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20  16685.420 ± 38304.876  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20  24428.547 ± 50413.348  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20   1846.477 ±   536.863  ns/op
ArraySortBenchmark.sort          500             256     IDENT_____        SHUFFLE         RADIX  avgt   20   2197.390 ±   638.539  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        STAGGER      BASELINE  avgt   20     36.423 ±     2.968  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        STAGGER        DPQ_11  avgt   20   5409.242 ±    53.424  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20   7937.363 ±   276.286  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        STAGGER    DPQ_18_11I  avgt   20   7771.147 ±   114.116  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   7449.018 ±    18.674  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        STAGGER         RADIX  avgt   20   8835.739 ±    67.724  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SAWTOTH      BASELINE  avgt   20     35.622 ±     0.378  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SAWTOTH        DPQ_11  avgt   20   1882.325 ±    20.155  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20   9426.486 ±    19.119  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20   9318.929 ±    19.375  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20   8659.227 ±    29.055  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SAWTOTH         RADIX  avgt   20   1834.297 ±    20.667  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        _RANDOM      BASELINE  avgt   20     36.234 ±     2.133  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        _RANDOM        DPQ_11  avgt   20  59177.008 ± 97568.078  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20  14713.983 ± 27440.443  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20   7469.183 ±  3631.116  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20   9469.361 ±  3704.724  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        _RANDOM         RADIX  avgt   20   8710.904 ±   606.411  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        PLATEAU      BASELINE  avgt   20     35.613 ±     0.360  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        PLATEAU        DPQ_11  avgt   20    477.740 ±     5.739  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20   1818.994 ±    20.137  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20   1839.596 ±     8.397  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20   1779.332 ±     6.990  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        PLATEAU         RADIX  avgt   20    779.617 ±     3.659  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SHUFFLE      BASELINE  avgt   20     35.611 ±     0.376  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SHUFFLE        DPQ_11  avgt   20   2301.944 ±   511.872  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20   3144.233 ±  1246.511  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   4145.581 ±  2485.634  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   5158.782 ±  8127.750  ns/op
ArraySortBenchmark.sort          500             256     REVERSE___        SHUFFLE         RADIX  avgt   20   2418.945 ±   488.116  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        STAGGER      BASELINE  avgt   20     35.622 ±     0.355  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        STAGGER        DPQ_11  avgt   20   6142.662 ±    24.123  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20   7675.054 ±    36.881  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20   7771.739 ±    76.308  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20   7451.998 ±    22.543  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        STAGGER         RADIX  avgt   20   8909.399 ±   101.077  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     35.618 ±     0.377  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20   1603.965 ±     5.912  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20   8023.684 ±   134.766  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20   8148.982 ±    16.284  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20   6743.466 ±   117.864  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SAWTOTH         RADIX  avgt   20   3070.941 ±     8.579  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        _RANDOM      BASELINE  avgt   20     35.628 ±     0.367  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        _RANDOM        DPQ_11  avgt   20  12165.849 ± 11392.782  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20   6298.760 ±   443.320  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20   7256.792 ±  3078.481  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20   6253.241 ±  1698.934  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        _RANDOM         RADIX  avgt   20   8372.408 ±   101.850  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        PLATEAU      BASELINE  avgt   20     35.643 ±     0.360  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        PLATEAU        DPQ_11  avgt   20    366.484 ±     1.142  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20   2812.465 ±     8.997  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20   2943.254 ±     7.204  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20   2982.308 ±    33.769  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        PLATEAU         RADIX  avgt   20   1502.190 ±     6.291  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     35.613 ±     0.361  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   2953.395 ±  1634.576  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20   4182.648 ±  1787.526  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   4966.498 ±  2663.999  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20   3670.053 ±   507.342  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_FR        SHUFFLE         RADIX  avgt   20   5005.825 ±  6656.353  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        STAGGER      BASELINE  avgt   20     35.607 ±     0.357  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        STAGGER        DPQ_11  avgt   20   6102.007 ±   426.733  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20   6942.219 ±    45.424  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20   6953.277 ±    60.597  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20   6426.914 ±   250.247  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        STAGGER         RADIX  avgt   20   8823.278 ±    79.831  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     35.623 ±     0.364  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20   1710.583 ±     6.688  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20   8674.053 ±    50.176  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20   8433.577 ±    30.283  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20   5900.736 ±    18.798  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SAWTOTH         RADIX  avgt   20   3643.975 ±     4.475  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        _RANDOM      BASELINE  avgt   20     35.617 ±     0.348  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        _RANDOM        DPQ_11  avgt   20  33055.161 ± 62932.690  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20   7610.161 ±  3893.072  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20   6129.254 ±   302.316  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20   9710.447 ±  8944.421  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        _RANDOM         RADIX  avgt   20   8759.493 ±   588.075  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        PLATEAU      BASELINE  avgt   20     35.616 ±     0.340  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        PLATEAU        DPQ_11  avgt   20   1262.866 ±    36.427  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20   1282.029 ±     1.535  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20   1351.773 ±     6.115  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20   1426.824 ±     5.906  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        PLATEAU         RADIX  avgt   20   1279.444 ±     1.934  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     35.589 ±     0.353  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20  10003.883 ± 22730.753  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20   4326.826 ±  3602.121  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20  10293.262 ± 17307.748  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20  12275.337 ± 32922.948  ns/op
ArraySortBenchmark.sort          500             256     REVERSE_BA        SHUFFLE         RADIX  avgt   20   4491.048 ±  3380.818  ns/op
ArraySortBenchmark.sort          500             256     SORT______        STAGGER      BASELINE  avgt   20     38.041 ±     0.282  ns/op
ArraySortBenchmark.sort          500             256     SORT______        STAGGER        DPQ_11  avgt   20    240.084 ±     1.693  ns/op
ArraySortBenchmark.sort          500             256     SORT______        STAGGER  DPQ_18_11_21  avgt   20    975.470 ±     1.694  ns/op
ArraySortBenchmark.sort          500             256     SORT______        STAGGER    DPQ_18_11I  avgt   20    984.297 ±     2.153  ns/op
ArraySortBenchmark.sort          500             256     SORT______        STAGGER    DPQ_18_11P  avgt   20   1345.273 ±     9.057  ns/op
ArraySortBenchmark.sort          500             256     SORT______        STAGGER         RADIX  avgt   20    327.526 ±     0.831  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SAWTOTH      BASELINE  avgt   20     38.088 ±     0.290  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SAWTOTH        DPQ_11  avgt   20    240.804 ±     0.966  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20   1003.220 ±     2.839  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SAWTOTH    DPQ_18_11I  avgt   20   1003.205 ±     1.636  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SAWTOTH    DPQ_18_11P  avgt   20   1007.533 ±     1.052  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SAWTOTH         RADIX  avgt   20    460.254 ±     0.923  ns/op
ArraySortBenchmark.sort          500             256     SORT______        _RANDOM      BASELINE  avgt   20     38.057 ±     0.289  ns/op
ArraySortBenchmark.sort          500             256     SORT______        _RANDOM        DPQ_11  avgt   20    242.769 ±     5.740  ns/op
ArraySortBenchmark.sort          500             256     SORT______        _RANDOM  DPQ_18_11_21  avgt   20   8221.424 ± 17190.980  ns/op
ArraySortBenchmark.sort          500             256     SORT______        _RANDOM    DPQ_18_11I  avgt   20   2570.945 ±  4412.337  ns/op
ArraySortBenchmark.sort          500             256     SORT______        _RANDOM    DPQ_18_11P  avgt   20   1029.894 ±     6.477  ns/op
ArraySortBenchmark.sort          500             256     SORT______        _RANDOM         RADIX  avgt   20    459.134 ±     2.642  ns/op
ArraySortBenchmark.sort          500             256     SORT______        PLATEAU      BASELINE  avgt   20     37.985 ±     0.261  ns/op
ArraySortBenchmark.sort          500             256     SORT______        PLATEAU        DPQ_11  avgt   20    238.460 ±     0.801  ns/op
ArraySortBenchmark.sort          500             256     SORT______        PLATEAU  DPQ_18_11_21  avgt   20   1107.021 ±    29.279  ns/op
ArraySortBenchmark.sort          500             256     SORT______        PLATEAU    DPQ_18_11I  avgt   20   1186.118 ±     1.895  ns/op
ArraySortBenchmark.sort          500             256     SORT______        PLATEAU    DPQ_18_11P  avgt   20   1124.628 ±    54.811  ns/op
ArraySortBenchmark.sort          500             256     SORT______        PLATEAU         RADIX  avgt   20    422.590 ±     0.992  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SHUFFLE      BASELINE  avgt   20     38.046 ±     0.299  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SHUFFLE        DPQ_11  avgt   20    239.721 ±     1.402  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    976.044 ±     1.091  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    984.282 ±     1.686  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SHUFFLE    DPQ_18_11P  avgt   20   1335.337 ±     1.062  ns/op
ArraySortBenchmark.sort          500             256     SORT______        SHUFFLE         RADIX  avgt   20    374.375 ±    41.113  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        STAGGER      BASELINE  avgt   20     35.623 ±     0.344  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        STAGGER        DPQ_11  avgt   20   6744.343 ±    18.316  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        STAGGER  DPQ_18_11_21  avgt   20   6641.261 ±    32.051  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        STAGGER    DPQ_18_11I  avgt   20   6409.194 ±    22.627  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        STAGGER    DPQ_18_11P  avgt   20   6948.231 ±    25.785  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        STAGGER         RADIX  avgt   20   8750.757 ±    44.015  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SAWTOTH      BASELINE  avgt   20     35.629 ±     0.345  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SAWTOTH        DPQ_11  avgt   20   4773.944 ±    59.112  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20   9287.490 ±    26.047  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20   8870.487 ±    20.264  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20   6453.379 ±    27.244  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SAWTOTH         RADIX  avgt   20   8644.790 ±    27.915  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        _RANDOM      BASELINE  avgt   20     35.611 ±     0.364  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        _RANDOM        DPQ_11  avgt   20   5628.028 ±   387.228  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20  10205.272 ±  6242.702  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        _RANDOM    DPQ_18_11I  avgt   20  16615.813 ± 22595.327  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        _RANDOM    DPQ_18_11P  avgt   20  39103.406 ± 86968.068  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        _RANDOM         RADIX  avgt   20   8659.676 ±    55.222  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        PLATEAU      BASELINE  avgt   20     35.612 ±     0.346  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        PLATEAU        DPQ_11  avgt   20   3236.982 ±   100.826  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20   2532.892 ±    15.880  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        PLATEAU    DPQ_18_11I  avgt   20   2505.734 ±     6.753  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        PLATEAU    DPQ_18_11P  avgt   20   2541.094 ±    20.415  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        PLATEAU         RADIX  avgt   20   8505.810 ±    52.052  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SHUFFLE      BASELINE  avgt   20     35.625 ±     0.365  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SHUFFLE        DPQ_11  avgt   20   6424.533 ± 10733.991  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20   3044.051 ±  2470.914  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   5410.498 ±  6740.170  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20   2501.711 ±   797.645  ns/op
ArraySortBenchmark.sort          500             256     DITHER____        SHUFFLE         RADIX  avgt   20  10365.546 ±   818.651  ns/op

Benchmark result is saved to sort-500.out
