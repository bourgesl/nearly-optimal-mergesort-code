max(arraySize): 100
subSizeList: [1, 4, 16, 64]
# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 0.00% complete, ETA 00:19:12
# Fork: 1 of 2
# Warmup Iteration   1: 22.491 ns/op
# Warmup Iteration   2: 26.603 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.586 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.592 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.134 ns/op
Iteration   9: 15.590 ns/op
Iteration  10: 15.585 ns/op

# Run progress: 0.07% complete, ETA 00:43:37
# Fork: 2 of 2
# Warmup Iteration   1: 22.081 ns/op
# Warmup Iteration   2: 23.080 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.973 ns/op
Iteration   4: 15.950 ns/op
Iteration   5: 15.689 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.107 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.612 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.025 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.578, 16.025, 19.134), stdev = 1.069
  CI (99.9%): [15.096, 16.953] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 0.14% complete, ETA 00:41:18
# Fork: 1 of 2
# Warmup Iteration   1: 3027.332 ns/op
# Warmup Iteration   2: 1093.196 ns/op
# Warmup Iteration   3: 771.971 ns/op
Iteration   1: 753.575 ns/op
Iteration   2: 762.080 ns/op
Iteration   3: 764.050 ns/op
Iteration   4: 764.160 ns/op
Iteration   5: 762.596 ns/op
Iteration   6: 768.935 ns/op
Iteration   7: 752.904 ns/op
Iteration   8: 778.798 ns/op
Iteration   9: 765.408 ns/op
Iteration  10: 778.638 ns/op

# Run progress: 0.21% complete, ETA 00:40:35
# Fork: 2 of 2
# Warmup Iteration   1: 4184.020 ns/op
# Warmup Iteration   2: 1090.867 ns/op
# Warmup Iteration   3: 774.724 ns/op
Iteration   1: 774.381 ns/op
Iteration   2: 781.028 ns/op
Iteration   3: 784.647 ns/op
Iteration   4: 773.640 ns/op
Iteration   5: 783.902 ns/op
Iteration   6: 774.358 ns/op
Iteration   7: 781.907 ns/op
Iteration   8: 786.222 ns/op
Iteration   9: 781.415 ns/op
Iteration  10: 774.643 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  772.364 ±(99.9%) 8.795 ns/op [Average]
  (min, avg, max) = (752.904, 772.364, 786.222), stdev = 10.129
  CI (99.9%): [763.569, 781.160] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 0.28% complete, ETA 00:40:03
# Fork: 1 of 2
# Warmup Iteration   1: 26245.749 ns/op
# Warmup Iteration   2: 857.125 ns/op
# Warmup Iteration   3: 693.108 ns/op
Iteration   1: 635.253 ns/op
Iteration   2: 635.317 ns/op
Iteration   3: 636.502 ns/op
Iteration   4: 637.722 ns/op
Iteration   5: 635.055 ns/op
Iteration   6: 634.933 ns/op
Iteration   7: 636.051 ns/op
Iteration   8: 639.730 ns/op
Iteration   9: 636.215 ns/op
Iteration  10: 636.471 ns/op

# Run progress: 0.35% complete, ETA 00:39:45
# Fork: 2 of 2
# Warmup Iteration   1: 23941.731 ns/op
# Warmup Iteration   2: 1000.302 ns/op
# Warmup Iteration   3: 739.730 ns/op
Iteration   1: 638.580 ns/op
Iteration   2: 638.449 ns/op
Iteration   3: 636.984 ns/op
Iteration   4: 639.592 ns/op
Iteration   5: 637.608 ns/op
Iteration   6: 636.850 ns/op
Iteration   7: 637.774 ns/op
Iteration   8: 637.505 ns/op
Iteration   9: 637.397 ns/op
Iteration  10: 637.082 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  637.053 ±(99.9%) 1.206 ns/op [Average]
  (min, avg, max) = (634.933, 637.053, 639.730), stdev = 1.388
  CI (99.9%): [635.848, 638.259] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 0.42% complete, ETA 00:39:28
# Fork: 1 of 2
# Warmup Iteration   1: 27196.326 ns/op
# Warmup Iteration   2: 897.042 ns/op
# Warmup Iteration   3: 693.026 ns/op
Iteration   1: 647.615 ns/op
Iteration   2: 648.153 ns/op
Iteration   3: 648.595 ns/op
Iteration   4: 649.170 ns/op
Iteration   5: 648.062 ns/op
Iteration   6: 648.716 ns/op
Iteration   7: 648.863 ns/op
Iteration   8: 635.773 ns/op
Iteration   9: 648.851 ns/op
Iteration  10: 648.734 ns/op

# Run progress: 0.49% complete, ETA 00:39:17
# Fork: 2 of 2
# Warmup Iteration   1: 11113.207 ns/op
# Warmup Iteration   2: 875.466 ns/op
# Warmup Iteration   3: 635.035 ns/op
Iteration   1: 634.644 ns/op
Iteration   2: 634.888 ns/op
Iteration   3: 639.344 ns/op
Iteration   4: 637.925 ns/op
Iteration   5: 636.568 ns/op
Iteration   6: 635.647 ns/op
Iteration   7: 636.028 ns/op
Iteration   8: 637.059 ns/op
Iteration   9: 636.500 ns/op
Iteration  10: 634.897 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  641.802 ±(99.9%) 5.501 ns/op [Average]
  (min, avg, max) = (634.644, 641.802, 649.170), stdev = 6.335
  CI (99.9%): [636.301, 647.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 0.56% complete, ETA 00:39:10
# Fork: 1 of 2
# Warmup Iteration   1: 811.573 ns/op
# Warmup Iteration   2: 659.311 ns/op
# Warmup Iteration   3: 489.784 ns/op
Iteration   1: 489.656 ns/op
Iteration   2: 489.555 ns/op
Iteration   3: 489.253 ns/op
Iteration   4: 492.596 ns/op
Iteration   5: 489.739 ns/op
Iteration   6: 489.780 ns/op
Iteration   7: 489.665 ns/op
Iteration   8: 491.090 ns/op
Iteration   9: 489.292 ns/op
Iteration  10: 489.879 ns/op

# Run progress: 0.63% complete, ETA 00:39:06
# Fork: 2 of 2
# Warmup Iteration   1: 813.850 ns/op
# Warmup Iteration   2: 645.291 ns/op
# Warmup Iteration   3: 489.434 ns/op
Iteration   1: 489.591 ns/op
Iteration   2: 489.727 ns/op
Iteration   3: 489.277 ns/op
Iteration   4: 492.455 ns/op
Iteration   5: 489.686 ns/op
Iteration   6: 489.649 ns/op
Iteration   7: 489.545 ns/op
Iteration   8: 491.355 ns/op
Iteration   9: 489.400 ns/op
Iteration  10: 489.808 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  490.050 ±(99.9%) 0.867 ns/op [Average]
  (min, avg, max) = (489.253, 490.050, 492.596), stdev = 0.999
  CI (99.9%): [489.183, 490.917] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 0.69% complete, ETA 00:39:02
# Fork: 1 of 2
# Warmup Iteration   1: 663.724 ns/op
# Warmup Iteration   2: 484.760 ns/op
# Warmup Iteration   3: 355.203 ns/op
Iteration   1: 355.421 ns/op
Iteration   2: 356.053 ns/op
Iteration   3: 355.685 ns/op
Iteration   4: 356.864 ns/op
Iteration   5: 355.446 ns/op
Iteration   6: 356.522 ns/op
Iteration   7: 355.658 ns/op
Iteration   8: 351.156 ns/op
Iteration   9: 363.246 ns/op
Iteration  10: 355.626 ns/op

# Run progress: 0.76% complete, ETA 00:38:58
# Fork: 2 of 2
# Warmup Iteration   1: 768.660 ns/op
# Warmup Iteration   2: 488.380 ns/op
# Warmup Iteration   3: 355.570 ns/op
Iteration   1: 356.017 ns/op
Iteration   2: 356.259 ns/op
Iteration   3: 355.839 ns/op
Iteration   4: 356.976 ns/op
Iteration   5: 355.642 ns/op
Iteration   6: 356.056 ns/op
Iteration   7: 355.637 ns/op
Iteration   8: 351.335 ns/op
Iteration   9: 363.129 ns/op
Iteration  10: 355.559 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  356.206 ±(99.9%) 2.450 ns/op [Average]
  (min, avg, max) = (351.156, 356.206, 363.246), stdev = 2.821
  CI (99.9%): [353.757, 358.656] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 0.83% complete, ETA 00:38:56
# Fork: 1 of 2
# Warmup Iteration   1: 21.973 ns/op
# Warmup Iteration   2: 27.460 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.590 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.964 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.107 ns/op
Iteration   9: 15.585 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 0.90% complete, ETA 00:38:52
# Fork: 2 of 2
# Warmup Iteration   1: 22.126 ns/op
# Warmup Iteration   2: 25.284 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.585 ns/op
Iteration   2: 15.574 ns/op
Iteration   3: 15.971 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.688 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.128 ns/op
Iteration   9: 15.590 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.023 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.574, 16.023, 19.128), stdev = 1.069
  CI (99.9%): [15.094, 16.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 0.97% complete, ETA 00:38:48
# Fork: 1 of 2
# Warmup Iteration   1: 114.307 ns/op
# Warmup Iteration   2: 109.119 ns/op
# Warmup Iteration   3: 70.286 ns/op
Iteration   1: 70.352 ns/op
Iteration   2: 70.315 ns/op
Iteration   3: 70.616 ns/op
Iteration   4: 70.013 ns/op
Iteration   5: 70.509 ns/op
Iteration   6: 70.346 ns/op
Iteration   7: 70.352 ns/op
Iteration   8: 73.732 ns/op
Iteration   9: 71.047 ns/op
Iteration  10: 70.342 ns/op

# Run progress: 1.04% complete, ETA 00:38:42
# Fork: 2 of 2
# Warmup Iteration   1: 115.787 ns/op
# Warmup Iteration   2: 98.029 ns/op
# Warmup Iteration   3: 70.277 ns/op
Iteration   1: 70.318 ns/op
Iteration   2: 70.287 ns/op
Iteration   3: 70.498 ns/op
Iteration   4: 69.896 ns/op
Iteration   5: 70.607 ns/op
Iteration   6: 70.303 ns/op
Iteration   7: 70.316 ns/op
Iteration   8: 73.699 ns/op
Iteration   9: 71.013 ns/op
Iteration  10: 70.356 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.746 ±(99.9%) 0.912 ns/op [Average]
  (min, avg, max) = (69.896, 70.746, 73.732), stdev = 1.050
  CI (99.9%): [69.834, 71.658] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 1.11% complete, ETA 00:38:37
# Fork: 1 of 2
# Warmup Iteration   1: 445.047 ns/op
# Warmup Iteration   2: 95.766 ns/op
# Warmup Iteration   3: 70.748 ns/op
Iteration   1: 70.676 ns/op
Iteration   2: 70.623 ns/op
Iteration   3: 70.821 ns/op
Iteration   4: 70.713 ns/op
Iteration   5: 70.668 ns/op
Iteration   6: 70.786 ns/op
Iteration   7: 70.665 ns/op
Iteration   8: 71.996 ns/op
Iteration   9: 71.086 ns/op
Iteration  10: 70.622 ns/op

# Run progress: 1.18% complete, ETA 00:38:34
# Fork: 2 of 2
# Warmup Iteration   1: 491.185 ns/op
# Warmup Iteration   2: 94.404 ns/op
# Warmup Iteration   3: 70.759 ns/op
Iteration   1: 70.647 ns/op
Iteration   2: 70.722 ns/op
Iteration   3: 70.822 ns/op
Iteration   4: 70.770 ns/op
Iteration   5: 70.670 ns/op
Iteration   6: 70.713 ns/op
Iteration   7: 70.651 ns/op
Iteration   8: 71.958 ns/op
Iteration   9: 71.661 ns/op
Iteration  10: 70.641 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.896 ±(99.9%) 0.380 ns/op [Average]
  (min, avg, max) = (70.622, 70.896, 71.996), stdev = 0.437
  CI (99.9%): [70.516, 71.275] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 1.25% complete, ETA 00:38:29
# Fork: 1 of 2
# Warmup Iteration   1: 232.712 ns/op
# Warmup Iteration   2: 113.350 ns/op
# Warmup Iteration   3: 71.192 ns/op
Iteration   1: 71.136 ns/op
Iteration   2: 71.061 ns/op
Iteration   3: 71.062 ns/op
Iteration   4: 71.191 ns/op
Iteration   5: 71.105 ns/op
Iteration   6: 71.158 ns/op
Iteration   7: 71.198 ns/op
Iteration   8: 72.580 ns/op
Iteration   9: 72.028 ns/op
Iteration  10: 71.291 ns/op

# Run progress: 1.32% complete, ETA 00:38:26
# Fork: 2 of 2
# Warmup Iteration   1: 239.211 ns/op
# Warmup Iteration   2: 118.368 ns/op
# Warmup Iteration   3: 71.119 ns/op
Iteration   1: 71.241 ns/op
Iteration   2: 70.816 ns/op
Iteration   3: 71.058 ns/op
Iteration   4: 71.154 ns/op
Iteration   5: 71.161 ns/op
Iteration   6: 71.061 ns/op
Iteration   7: 71.250 ns/op
Iteration   8: 72.206 ns/op
Iteration   9: 71.159 ns/op
Iteration  10: 71.224 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.307 ±(99.9%) 0.380 ns/op [Average]
  (min, avg, max) = (70.816, 71.307, 72.580), stdev = 0.437
  CI (99.9%): [70.927, 71.687] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 1.39% complete, ETA 00:38:23
# Fork: 1 of 2
# Warmup Iteration   1: 114.928 ns/op
# Warmup Iteration   2: 101.142 ns/op
# Warmup Iteration   3: 73.221 ns/op
Iteration   1: 73.413 ns/op
Iteration   2: 73.426 ns/op
Iteration   3: 73.355 ns/op
Iteration   4: 73.267 ns/op
Iteration   5: 73.309 ns/op
Iteration   6: 73.371 ns/op
Iteration   7: 73.336 ns/op
Iteration   8: 73.317 ns/op
Iteration   9: 73.362 ns/op
Iteration  10: 73.293 ns/op

# Run progress: 1.46% complete, ETA 00:38:20
# Fork: 2 of 2
# Warmup Iteration   1: 115.934 ns/op
# Warmup Iteration   2: 97.587 ns/op
# Warmup Iteration   3: 73.232 ns/op
Iteration   1: 73.249 ns/op
Iteration   2: 73.327 ns/op
Iteration   3: 73.164 ns/op
Iteration   4: 73.420 ns/op
Iteration   5: 73.268 ns/op
Iteration   6: 73.238 ns/op
Iteration   7: 73.263 ns/op
Iteration   8: 73.432 ns/op
Iteration   9: 73.383 ns/op
Iteration  10: 73.277 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.324 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (73.164, 73.324, 73.432), stdev = 0.072
  CI (99.9%): [73.261, 73.386] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 1.53% complete, ETA 00:38:18
# Fork: 1 of 2
# Warmup Iteration   1: 202.023 ns/op
# Warmup Iteration   2: 204.902 ns/op
# Warmup Iteration   3: 112.676 ns/op
Iteration   1: 112.639 ns/op
Iteration   2: 115.404 ns/op
Iteration   3: 112.817 ns/op
Iteration   4: 112.486 ns/op
Iteration   5: 112.625 ns/op
Iteration   6: 114.767 ns/op
Iteration   7: 112.731 ns/op
Iteration   8: 116.617 ns/op
Iteration   9: 123.572 ns/op
Iteration  10: 112.723 ns/op

# Run progress: 1.60% complete, ETA 00:38:16
# Fork: 2 of 2
# Warmup Iteration   1: 203.541 ns/op
# Warmup Iteration   2: 203.975 ns/op
# Warmup Iteration   3: 112.534 ns/op
Iteration   1: 112.501 ns/op
Iteration   2: 115.441 ns/op
Iteration   3: 112.870 ns/op
Iteration   4: 112.435 ns/op
Iteration   5: 112.608 ns/op
Iteration   6: 114.776 ns/op
Iteration   7: 112.532 ns/op
Iteration   8: 116.840 ns/op
Iteration   9: 123.712 ns/op
Iteration  10: 112.494 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.630 ±(99.9%) 2.963 ns/op [Average]
  (min, avg, max) = (112.435, 114.630, 123.712), stdev = 3.412
  CI (99.9%): [111.667, 117.592] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 1.67% complete, ETA 00:38:12
# Fork: 1 of 2
# Warmup Iteration   1: 22.273 ns/op
# Warmup Iteration   2: 25.808 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.586 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.983 ns/op
Iteration   4: 15.959 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.585 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.135 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.586 ns/op

# Run progress: 1.74% complete, ETA 00:38:11
# Fork: 2 of 2
# Warmup Iteration   1: 22.127 ns/op
# Warmup Iteration   2: 26.174 ns/op
# Warmup Iteration   3: 15.769 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.947 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.586 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.111 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.023 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.577, 16.023, 19.135), stdev = 1.071
  CI (99.9%): [15.093, 16.953] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 1.81% complete, ETA 00:38:08
# Fork: 1 of 2
# Warmup Iteration   1: 110.594 ns/op
# Warmup Iteration   2: 103.162 ns/op
# Warmup Iteration   3: 70.309 ns/op
Iteration   1: 70.330 ns/op
Iteration   2: 70.285 ns/op
Iteration   3: 70.535 ns/op
Iteration   4: 70.613 ns/op
Iteration   5: 70.514 ns/op
Iteration   6: 70.300 ns/op
Iteration   7: 70.301 ns/op
Iteration   8: 73.716 ns/op
Iteration   9: 71.004 ns/op
Iteration  10: 70.312 ns/op

# Run progress: 1.88% complete, ETA 00:38:06
# Fork: 2 of 2
# Warmup Iteration   1: 108.624 ns/op
# Warmup Iteration   2: 122.829 ns/op
# Warmup Iteration   3: 70.294 ns/op
Iteration   1: 70.355 ns/op
Iteration   2: 70.288 ns/op
Iteration   3: 70.565 ns/op
Iteration   4: 70.798 ns/op
Iteration   5: 70.695 ns/op
Iteration   6: 70.336 ns/op
Iteration   7: 70.309 ns/op
Iteration   8: 73.747 ns/op
Iteration   9: 71.126 ns/op
Iteration  10: 70.355 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.824 ±(99.9%) 0.889 ns/op [Average]
  (min, avg, max) = (70.285, 70.824, 73.747), stdev = 1.024
  CI (99.9%): [69.935, 71.713] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 1.94% complete, ETA 00:38:05
# Fork: 1 of 2
# Warmup Iteration   1: 826.707 ns/op
# Warmup Iteration   2: 98.258 ns/op
# Warmup Iteration   3: 72.048 ns/op
Iteration   1: 72.080 ns/op
Iteration   2: 72.071 ns/op
Iteration   3: 71.995 ns/op
Iteration   4: 71.930 ns/op
Iteration   5: 72.106 ns/op
Iteration   6: 72.056 ns/op
Iteration   7: 72.028 ns/op
Iteration   8: 73.079 ns/op
Iteration   9: 72.762 ns/op
Iteration  10: 72.050 ns/op

# Run progress: 2.01% complete, ETA 00:38:04
# Fork: 2 of 2
# Warmup Iteration   1: 1301.252 ns/op
# Warmup Iteration   2: 85.069 ns/op
# Warmup Iteration   3: 72.052 ns/op
Iteration   1: 72.195 ns/op
Iteration   2: 72.068 ns/op
Iteration   3: 71.949 ns/op
Iteration   4: 71.521 ns/op
Iteration   5: 72.115 ns/op
Iteration   6: 72.103 ns/op
Iteration   7: 72.071 ns/op
Iteration   8: 73.137 ns/op
Iteration   9: 72.753 ns/op
Iteration  10: 72.109 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  72.209 ±(99.9%) 0.350 ns/op [Average]
  (min, avg, max) = (71.521, 72.209, 73.137), stdev = 0.403
  CI (99.9%): [71.859, 72.559] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 2.08% complete, ETA 00:38:02
# Fork: 1 of 2
# Warmup Iteration   1: 280.088 ns/op
# Warmup Iteration   2: 97.043 ns/op
# Warmup Iteration   3: 71.122 ns/op
Iteration   1: 71.161 ns/op
Iteration   2: 71.076 ns/op
Iteration   3: 71.088 ns/op
Iteration   4: 71.302 ns/op
Iteration   5: 71.302 ns/op
Iteration   6: 71.164 ns/op
Iteration   7: 71.253 ns/op
Iteration   8: 72.629 ns/op
Iteration   9: 71.982 ns/op
Iteration  10: 71.190 ns/op

# Run progress: 2.15% complete, ETA 00:38:01
# Fork: 2 of 2
# Warmup Iteration   1: 286.031 ns/op
# Warmup Iteration   2: 103.480 ns/op
# Warmup Iteration   3: 71.168 ns/op
Iteration   1: 71.148 ns/op
Iteration   2: 71.071 ns/op
Iteration   3: 71.168 ns/op
Iteration   4: 71.235 ns/op
Iteration   5: 71.180 ns/op
Iteration   6: 71.170 ns/op
Iteration   7: 71.235 ns/op
Iteration   8: 72.077 ns/op
Iteration   9: 71.137 ns/op
Iteration  10: 71.313 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.344 ±(99.9%) 0.351 ns/op [Average]
  (min, avg, max) = (71.071, 71.344, 72.629), stdev = 0.404
  CI (99.9%): [70.993, 71.695] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 2.22% complete, ETA 00:37:58
# Fork: 1 of 2
# Warmup Iteration   1: 107.209 ns/op
# Warmup Iteration   2: 106.193 ns/op
# Warmup Iteration   3: 73.202 ns/op
Iteration   1: 73.214 ns/op
Iteration   2: 73.334 ns/op
Iteration   3: 73.173 ns/op
Iteration   4: 73.343 ns/op
Iteration   5: 73.417 ns/op
Iteration   6: 73.213 ns/op
Iteration   7: 73.245 ns/op
Iteration   8: 73.390 ns/op
Iteration   9: 73.390 ns/op
Iteration  10: 73.238 ns/op

# Run progress: 2.29% complete, ETA 00:37:55
# Fork: 2 of 2
# Warmup Iteration   1: 116.224 ns/op
# Warmup Iteration   2: 102.230 ns/op
# Warmup Iteration   3: 73.301 ns/op
Iteration   1: 73.401 ns/op
Iteration   2: 73.226 ns/op
Iteration   3: 73.224 ns/op
Iteration   4: 73.343 ns/op
Iteration   5: 73.370 ns/op
Iteration   6: 73.252 ns/op
Iteration   7: 73.164 ns/op
Iteration   8: 73.458 ns/op
Iteration   9: 73.441 ns/op
Iteration  10: 73.195 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.302 ±(99.9%) 0.083 ns/op [Average]
  (min, avg, max) = (73.164, 73.302, 73.458), stdev = 0.096
  CI (99.9%): [73.218, 73.385] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 2.36% complete, ETA 00:37:55
# Fork: 1 of 2
# Warmup Iteration   1: 197.728 ns/op
# Warmup Iteration   2: 202.625 ns/op
# Warmup Iteration   3: 112.725 ns/op
Iteration   1: 112.632 ns/op
Iteration   2: 115.381 ns/op
Iteration   3: 112.801 ns/op
Iteration   4: 112.483 ns/op
Iteration   5: 112.653 ns/op
Iteration   6: 114.830 ns/op
Iteration   7: 112.686 ns/op
Iteration   8: 116.718 ns/op
Iteration   9: 123.615 ns/op
Iteration  10: 112.651 ns/op

# Run progress: 2.43% complete, ETA 00:37:53
# Fork: 2 of 2
# Warmup Iteration   1: 209.163 ns/op
# Warmup Iteration   2: 210.936 ns/op
# Warmup Iteration   3: 112.565 ns/op
Iteration   1: 112.537 ns/op
Iteration   2: 115.407 ns/op
Iteration   3: 112.900 ns/op
Iteration   4: 112.445 ns/op
Iteration   5: 112.578 ns/op
Iteration   6: 114.886 ns/op
Iteration   7: 112.739 ns/op
Iteration   8: 116.829 ns/op
Iteration   9: 123.521 ns/op
Iteration  10: 112.775 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.653 ±(99.9%) 2.936 ns/op [Average]
  (min, avg, max) = (112.445, 114.653, 123.615), stdev = 3.381
  CI (99.9%): [111.718, 117.589] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 2.50% complete, ETA 00:37:52
# Fork: 1 of 2
# Warmup Iteration   1: 23.032 ns/op
# Warmup Iteration   2: 24.716 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.585 ns/op
Iteration   2: 15.574 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.953 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.589 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.115 ns/op
Iteration   9: 15.569 ns/op
Iteration  10: 15.571 ns/op

# Run progress: 2.57% complete, ETA 00:37:50
# Fork: 2 of 2
# Warmup Iteration   1: 22.678 ns/op
# Warmup Iteration   2: 25.920 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.983 ns/op
Iteration   4: 15.931 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.119 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.569, 16.020, 19.119), stdev = 1.070
  CI (99.9%): [15.090, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 2.64% complete, ETA 00:37:47
# Fork: 1 of 2
# Warmup Iteration   1: 116.989 ns/op
# Warmup Iteration   2: 111.737 ns/op
# Warmup Iteration   3: 76.864 ns/op
Iteration   1: 76.846 ns/op
Iteration   2: 76.850 ns/op
Iteration   3: 76.874 ns/op
Iteration   4: 77.480 ns/op
Iteration   5: 76.997 ns/op
Iteration   6: 76.837 ns/op
Iteration   7: 76.897 ns/op
Iteration   8: 80.080 ns/op
Iteration   9: 77.507 ns/op
Iteration  10: 76.855 ns/op

# Run progress: 2.71% complete, ETA 00:37:46
# Fork: 2 of 2
# Warmup Iteration   1: 143.118 ns/op
# Warmup Iteration   2: 115.147 ns/op
# Warmup Iteration   3: 76.822 ns/op
Iteration   1: 76.790 ns/op
Iteration   2: 76.793 ns/op
Iteration   3: 76.834 ns/op
Iteration   4: 77.146 ns/op
Iteration   5: 76.836 ns/op
Iteration   6: 76.808 ns/op
Iteration   7: 76.810 ns/op
Iteration   8: 79.644 ns/op
Iteration   9: 77.398 ns/op
Iteration  10: 76.770 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  77.253 ±(99.9%) 0.803 ns/op [Average]
  (min, avg, max) = (76.770, 77.253, 80.080), stdev = 0.925
  CI (99.9%): [76.450, 78.056] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 2.78% complete, ETA 00:37:44
# Fork: 1 of 2
# Warmup Iteration   1: 1087.070 ns/op
# Warmup Iteration   2: 141.849 ns/op
# Warmup Iteration   3: 107.272 ns/op
Iteration   1: 107.577 ns/op
Iteration   2: 107.325 ns/op
Iteration   3: 107.414 ns/op
Iteration   4: 107.568 ns/op
Iteration   5: 107.503 ns/op
Iteration   6: 107.351 ns/op
Iteration   7: 107.683 ns/op
Iteration   8: 107.487 ns/op
Iteration   9: 107.305 ns/op
Iteration  10: 107.373 ns/op

# Run progress: 2.85% complete, ETA 00:37:43
# Fork: 2 of 2
# Warmup Iteration   1: 818.701 ns/op
# Warmup Iteration   2: 151.621 ns/op
# Warmup Iteration   3: 107.576 ns/op
Iteration   1: 107.438 ns/op
Iteration   2: 107.585 ns/op
Iteration   3: 107.548 ns/op
Iteration   4: 107.926 ns/op
Iteration   5: 107.657 ns/op
Iteration   6: 107.546 ns/op
Iteration   7: 107.528 ns/op
Iteration   8: 107.505 ns/op
Iteration   9: 107.650 ns/op
Iteration  10: 107.678 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  107.532 ±(99.9%) 0.128 ns/op [Average]
  (min, avg, max) = (107.305, 107.532, 107.926), stdev = 0.148
  CI (99.9%): [107.404, 107.660] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 2.92% complete, ETA 00:37:43
# Fork: 1 of 2
# Warmup Iteration   1: 773.053 ns/op
# Warmup Iteration   2: 138.723 ns/op
# Warmup Iteration   3: 107.317 ns/op
Iteration   1: 107.672 ns/op
Iteration   2: 107.235 ns/op
Iteration   3: 107.326 ns/op
Iteration   4: 107.841 ns/op
Iteration   5: 107.329 ns/op
Iteration   6: 107.499 ns/op
Iteration   7: 107.336 ns/op
Iteration   8: 107.822 ns/op
Iteration   9: 107.272 ns/op
Iteration  10: 107.441 ns/op

# Run progress: 2.99% complete, ETA 00:37:42
# Fork: 2 of 2
# Warmup Iteration   1: 657.749 ns/op
# Warmup Iteration   2: 139.498 ns/op
# Warmup Iteration   3: 107.264 ns/op
Iteration   1: 107.412 ns/op
Iteration   2: 107.318 ns/op
Iteration   3: 107.193 ns/op
Iteration   4: 107.426 ns/op
Iteration   5: 107.533 ns/op
Iteration   6: 107.389 ns/op
Iteration   7: 107.597 ns/op
Iteration   8: 107.731 ns/op
Iteration   9: 107.305 ns/op
Iteration  10: 107.706 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  107.469 ±(99.9%) 0.171 ns/op [Average]
  (min, avg, max) = (107.193, 107.469, 107.841), stdev = 0.197
  CI (99.9%): [107.298, 107.641] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 3.06% complete, ETA 00:37:39
# Fork: 1 of 2
# Warmup Iteration   1: 107.692 ns/op
# Warmup Iteration   2: 97.993 ns/op
# Warmup Iteration   3: 73.177 ns/op
Iteration   1: 73.325 ns/op
Iteration   2: 73.229 ns/op
Iteration   3: 73.235 ns/op
Iteration   4: 73.169 ns/op
Iteration   5: 73.319 ns/op
Iteration   6: 73.299 ns/op
Iteration   7: 73.204 ns/op
Iteration   8: 74.565 ns/op
Iteration   9: 74.470 ns/op
Iteration  10: 73.177 ns/op

# Run progress: 3.13% complete, ETA 00:37:38
# Fork: 2 of 2
# Warmup Iteration   1: 108.386 ns/op
# Warmup Iteration   2: 99.729 ns/op
# Warmup Iteration   3: 73.175 ns/op
Iteration   1: 73.317 ns/op
Iteration   2: 73.393 ns/op
Iteration   3: 73.211 ns/op
Iteration   4: 73.223 ns/op
Iteration   5: 73.293 ns/op
Iteration   6: 73.266 ns/op
Iteration   7: 73.242 ns/op
Iteration   8: 73.290 ns/op
Iteration   9: 73.300 ns/op
Iteration  10: 73.310 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.392 ±(99.9%) 0.338 ns/op [Average]
  (min, avg, max) = (73.169, 73.392, 74.565), stdev = 0.389
  CI (99.9%): [73.054, 73.730] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 3.19% complete, ETA 00:37:36
# Fork: 1 of 2
# Warmup Iteration   1: 182.267 ns/op
# Warmup Iteration   2: 159.023 ns/op
# Warmup Iteration   3: 105.715 ns/op
Iteration   1: 105.631 ns/op
Iteration   2: 108.000 ns/op
Iteration   3: 105.565 ns/op
Iteration   4: 105.762 ns/op
Iteration   5: 105.539 ns/op
Iteration   6: 105.670 ns/op
Iteration   7: 105.772 ns/op
Iteration   8: 108.766 ns/op
Iteration   9: 112.798 ns/op
Iteration  10: 105.726 ns/op

# Run progress: 3.26% complete, ETA 00:37:33
# Fork: 2 of 2
# Warmup Iteration   1: 219.884 ns/op
# Warmup Iteration   2: 207.441 ns/op
# Warmup Iteration   3: 124.389 ns/op
Iteration   1: 124.460 ns/op
Iteration   2: 126.654 ns/op
Iteration   3: 124.390 ns/op
Iteration   4: 124.620 ns/op
Iteration   5: 124.360 ns/op
Iteration   6: 124.419 ns/op
Iteration   7: 124.467 ns/op
Iteration   8: 127.403 ns/op
Iteration   9: 130.481 ns/op
Iteration  10: 124.517 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  116.250 ±(99.9%) 8.516 ns/op [Average]
  (min, avg, max) = (105.539, 116.250, 130.481), stdev = 9.807
  CI (99.9%): [107.734, 124.766] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 3.33% complete, ETA 00:37:31
# Fork: 1 of 2
# Warmup Iteration   1: 21.916 ns/op
# Warmup Iteration   2: 23.949 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.933 ns/op
Iteration   5: 15.676 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.575 ns/op

# Run progress: 3.40% complete, ETA 00:37:29
# Fork: 2 of 2
# Warmup Iteration   1: 23.896 ns/op
# Warmup Iteration   2: 23.806 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.974 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.588 ns/op
Iteration   8: 19.113 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.574, 16.019, 19.117), stdev = 1.070
  CI (99.9%): [15.090, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 3.47% complete, ETA 00:37:27
# Fork: 1 of 2
# Warmup Iteration   1: 255.957 ns/op
# Warmup Iteration   2: 200.284 ns/op
# Warmup Iteration   3: 133.863 ns/op
Iteration   1: 134.388 ns/op
Iteration   2: 133.771 ns/op
Iteration   3: 133.891 ns/op
Iteration   4: 133.846 ns/op
Iteration   5: 133.822 ns/op
Iteration   6: 133.798 ns/op
Iteration   7: 133.838 ns/op
Iteration   8: 137.271 ns/op
Iteration   9: 133.927 ns/op
Iteration  10: 133.812 ns/op

# Run progress: 3.54% complete, ETA 00:37:24
# Fork: 2 of 2
# Warmup Iteration   1: 257.014 ns/op
# Warmup Iteration   2: 197.372 ns/op
# Warmup Iteration   3: 133.754 ns/op
Iteration   1: 133.783 ns/op
Iteration   2: 134.057 ns/op
Iteration   3: 133.883 ns/op
Iteration   4: 134.026 ns/op
Iteration   5: 133.922 ns/op
Iteration   6: 133.755 ns/op
Iteration   7: 133.780 ns/op
Iteration   8: 137.254 ns/op
Iteration   9: 134.156 ns/op
Iteration  10: 133.729 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  134.235 ±(99.9%) 0.909 ns/op [Average]
  (min, avg, max) = (133.729, 134.235, 137.271), stdev = 1.047
  CI (99.9%): [133.326, 135.145] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 3.61% complete, ETA 00:37:22
# Fork: 1 of 2
# Warmup Iteration   1: 327.375 ns/op
# Warmup Iteration   2: 207.056 ns/op
# Warmup Iteration   3: 156.422 ns/op
Iteration   1: 156.488 ns/op
Iteration   2: 156.509 ns/op
Iteration   3: 156.736 ns/op
Iteration   4: 156.870 ns/op
Iteration   5: 156.486 ns/op
Iteration   6: 156.462 ns/op
Iteration   7: 156.511 ns/op
Iteration   8: 156.647 ns/op
Iteration   9: 156.855 ns/op
Iteration  10: 156.565 ns/op

# Run progress: 3.68% complete, ETA 00:37:20
# Fork: 2 of 2
# Warmup Iteration   1: 397.724 ns/op
# Warmup Iteration   2: 206.299 ns/op
# Warmup Iteration   3: 154.715 ns/op
Iteration   1: 154.760 ns/op
Iteration   2: 154.780 ns/op
Iteration   3: 154.951 ns/op
Iteration   4: 155.246 ns/op
Iteration   5: 155.134 ns/op
Iteration   6: 154.834 ns/op
Iteration   7: 154.763 ns/op
Iteration   8: 154.695 ns/op
Iteration   9: 155.908 ns/op
Iteration  10: 154.759 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  155.798 ±(99.9%) 0.765 ns/op [Average]
  (min, avg, max) = (154.695, 155.798, 156.870), stdev = 0.881
  CI (99.9%): [155.033, 156.563] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 3.75% complete, ETA 00:37:19
# Fork: 1 of 2
# Warmup Iteration   1: 551.779 ns/op
# Warmup Iteration   2: 323.500 ns/op
# Warmup Iteration   3: 203.203 ns/op
Iteration   1: 202.753 ns/op
Iteration   2: 202.808 ns/op
Iteration   3: 203.186 ns/op
Iteration   4: 203.124 ns/op
Iteration   5: 202.979 ns/op
Iteration   6: 202.829 ns/op
Iteration   7: 203.279 ns/op
Iteration   8: 202.898 ns/op
Iteration   9: 203.992 ns/op
Iteration  10: 202.844 ns/op

# Run progress: 3.82% complete, ETA 00:37:16
# Fork: 2 of 2
# Warmup Iteration   1: 596.204 ns/op
# Warmup Iteration   2: 265.678 ns/op
# Warmup Iteration   3: 202.626 ns/op
Iteration   1: 203.438 ns/op
Iteration   2: 202.709 ns/op
Iteration   3: 203.074 ns/op
Iteration   4: 203.164 ns/op
Iteration   5: 202.706 ns/op
Iteration   6: 202.724 ns/op
Iteration   7: 203.535 ns/op
Iteration   8: 202.859 ns/op
Iteration   9: 203.220 ns/op
Iteration  10: 202.677 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  203.040 ±(99.9%) 0.294 ns/op [Average]
  (min, avg, max) = (202.677, 203.040, 203.992), stdev = 0.338
  CI (99.9%): [202.746, 203.333] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 3.89% complete, ETA 00:37:14
# Fork: 1 of 2
# Warmup Iteration   1: 114.088 ns/op
# Warmup Iteration   2: 96.774 ns/op
# Warmup Iteration   3: 73.203 ns/op
Iteration   1: 73.192 ns/op
Iteration   2: 73.334 ns/op
Iteration   3: 73.253 ns/op
Iteration   4: 73.278 ns/op
Iteration   5: 73.288 ns/op
Iteration   6: 73.177 ns/op
Iteration   7: 73.227 ns/op
Iteration   8: 73.211 ns/op
Iteration   9: 73.383 ns/op
Iteration  10: 73.289 ns/op

# Run progress: 3.96% complete, ETA 00:37:12
# Fork: 2 of 2
# Warmup Iteration   1: 108.315 ns/op
# Warmup Iteration   2: 112.782 ns/op
# Warmup Iteration   3: 73.396 ns/op
Iteration   1: 73.193 ns/op
Iteration   2: 73.317 ns/op
Iteration   3: 73.235 ns/op
Iteration   4: 73.255 ns/op
Iteration   5: 73.222 ns/op
Iteration   6: 73.241 ns/op
Iteration   7: 73.265 ns/op
Iteration   8: 73.427 ns/op
Iteration   9: 73.357 ns/op
Iteration  10: 73.342 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.274 ±(99.9%) 0.059 ns/op [Average]
  (min, avg, max) = (73.177, 73.274, 73.427), stdev = 0.068
  CI (99.9%): [73.215, 73.333] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 4.03% complete, ETA 00:37:10
# Fork: 1 of 2
# Warmup Iteration   1: 212.956 ns/op
# Warmup Iteration   2: 220.985 ns/op
# Warmup Iteration   3: 124.744 ns/op
Iteration   1: 124.826 ns/op
Iteration   2: 126.350 ns/op
Iteration   3: 124.774 ns/op
Iteration   4: 124.944 ns/op
Iteration   5: 124.820 ns/op
Iteration   6: 124.814 ns/op
Iteration   7: 124.799 ns/op
Iteration   8: 127.785 ns/op
Iteration   9: 130.569 ns/op
Iteration  10: 124.771 ns/op

# Run progress: 4.10% complete, ETA 00:37:08
# Fork: 2 of 2
# Warmup Iteration   1: 227.650 ns/op
# Warmup Iteration   2: 221.343 ns/op
# Warmup Iteration   3: 124.423 ns/op
Iteration   1: 124.455 ns/op
Iteration   2: 126.756 ns/op
Iteration   3: 124.327 ns/op
Iteration   4: 124.518 ns/op
Iteration   5: 124.348 ns/op
Iteration   6: 124.446 ns/op
Iteration   7: 124.436 ns/op
Iteration   8: 127.407 ns/op
Iteration   9: 130.419 ns/op
Iteration  10: 124.421 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.699 ±(99.9%) 1.686 ns/op [Average]
  (min, avg, max) = (124.327, 125.699, 130.569), stdev = 1.942
  CI (99.9%): [124.013, 127.386] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 4.17% complete, ETA 00:37:06
# Fork: 1 of 2
# Warmup Iteration   1: 22.133 ns/op
# Warmup Iteration   2: 24.899 ns/op
# Warmup Iteration   3: 15.784 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.131 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 4.24% complete, ETA 00:37:04
# Fork: 2 of 2
# Warmup Iteration   1: 22.735 ns/op
# Warmup Iteration   2: 26.203 ns/op
# Warmup Iteration   3: 15.756 ns/op
Iteration   1: 15.572 ns/op
Iteration   2: 15.566 ns/op
Iteration   3: 15.972 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.584 ns/op
Iteration   7: 15.571 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.566, 16.019, 19.131), stdev = 1.071
  CI (99.9%): [15.089, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 4.31% complete, ETA 00:37:02
# Fork: 1 of 2
# Warmup Iteration   1: 1754.999 ns/op
# Warmup Iteration   2: 911.763 ns/op
# Warmup Iteration   3: 706.588 ns/op
Iteration   1: 705.774 ns/op
Iteration   2: 705.718 ns/op
Iteration   3: 706.585 ns/op
Iteration   4: 705.830 ns/op
Iteration   5: 705.905 ns/op
Iteration   6: 705.786 ns/op
Iteration   7: 705.735 ns/op
Iteration   8: 709.410 ns/op
Iteration   9: 706.194 ns/op
Iteration  10: 706.466 ns/op

# Run progress: 4.38% complete, ETA 00:37:00
# Fork: 2 of 2
# Warmup Iteration   1: 2042.039 ns/op
# Warmup Iteration   2: 1048.105 ns/op
# Warmup Iteration   3: 706.750 ns/op
Iteration   1: 706.222 ns/op
Iteration   2: 706.343 ns/op
Iteration   3: 707.299 ns/op
Iteration   4: 706.064 ns/op
Iteration   5: 706.076 ns/op
Iteration   6: 706.320 ns/op
Iteration   7: 706.283 ns/op
Iteration   8: 699.413 ns/op
Iteration   9: 705.612 ns/op
Iteration  10: 706.399 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  705.972 ±(99.9%) 1.520 ns/op [Average]
  (min, avg, max) = (699.413, 705.972, 709.410), stdev = 1.751
  CI (99.9%): [704.451, 707.492] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 4.44% complete, ETA 00:36:58
# Fork: 1 of 2
# Warmup Iteration   1: 43325.904 ns/op
# Warmup Iteration   2: 1642.265 ns/op
# Warmup Iteration   3: 1299.428 ns/op
Iteration   1: 1116.500 ns/op
Iteration   2: 1116.018 ns/op
Iteration   3: 1115.519 ns/op
Iteration   4: 1126.795 ns/op
Iteration   5: 1115.918 ns/op
Iteration   6: 1115.950 ns/op
Iteration   7: 1115.940 ns/op
Iteration   8: 1115.928 ns/op
Iteration   9: 1116.073 ns/op
Iteration  10: 1116.232 ns/op

# Run progress: 4.51% complete, ETA 00:36:56
# Fork: 2 of 2
# Warmup Iteration   1: 7794.205 ns/op
# Warmup Iteration   2: 1537.854 ns/op
# Warmup Iteration   3: 1114.675 ns/op
Iteration   1: 1114.511 ns/op
Iteration   2: 1114.214 ns/op
Iteration   3: 1115.345 ns/op
Iteration   4: 1122.059 ns/op
Iteration   5: 1114.591 ns/op
Iteration   6: 1114.954 ns/op
Iteration   7: 1113.794 ns/op
Iteration   8: 1114.954 ns/op
Iteration   9: 1114.404 ns/op
Iteration  10: 1115.482 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1116.259 ±(99.9%) 2.599 ns/op [Average]
  (min, avg, max) = (1113.794, 1116.259, 1126.795), stdev = 2.993
  CI (99.9%): [1113.661, 1118.858] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 4.58% complete, ETA 00:36:55
# Fork: 1 of 2
# Warmup Iteration   1: 7593.158 ns/op
# Warmup Iteration   2: 1593.937 ns/op
# Warmup Iteration   3: 1114.287 ns/op
Iteration   1: 1113.940 ns/op
Iteration   2: 1115.052 ns/op
Iteration   3: 1113.839 ns/op
Iteration   4: 1121.265 ns/op
Iteration   5: 1114.761 ns/op
Iteration   6: 1114.873 ns/op
Iteration   7: 1113.780 ns/op
Iteration   8: 1115.170 ns/op
Iteration   9: 1114.653 ns/op
Iteration  10: 1113.737 ns/op

# Run progress: 4.65% complete, ETA 00:36:53
# Fork: 2 of 2
# Warmup Iteration   1: 12497.440 ns/op
# Warmup Iteration   2: 1423.270 ns/op
# Warmup Iteration   3: 1213.132 ns/op
Iteration   1: 1113.716 ns/op
Iteration   2: 1111.602 ns/op
Iteration   3: 1112.502 ns/op
Iteration   4: 1128.266 ns/op
Iteration   5: 1112.192 ns/op
Iteration   6: 1111.806 ns/op
Iteration   7: 1112.346 ns/op
Iteration   8: 1113.173 ns/op
Iteration   9: 1112.699 ns/op
Iteration  10: 1113.505 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1114.644 ±(99.9%) 3.297 ns/op [Average]
  (min, avg, max) = (1111.602, 1114.644, 1128.266), stdev = 3.797
  CI (99.9%): [1111.347, 1117.941] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 4.72% complete, ETA 00:36:51
# Fork: 1 of 2
# Warmup Iteration   1: 1932.839 ns/op
# Warmup Iteration   2: 1669.123 ns/op
# Warmup Iteration   3: 1321.922 ns/op
Iteration   1: 1319.791 ns/op
Iteration   2: 1301.721 ns/op
Iteration   3: 1303.933 ns/op
Iteration   4: 1292.529 ns/op
Iteration   5: 1316.259 ns/op
Iteration   6: 1321.333 ns/op
Iteration   7: 1324.856 ns/op
Iteration   8: 1322.029 ns/op
Iteration   9: 1318.339 ns/op
Iteration  10: 1320.715 ns/op

# Run progress: 4.79% complete, ETA 00:36:50
# Fork: 2 of 2
# Warmup Iteration   1: 2057.163 ns/op
# Warmup Iteration   2: 1850.216 ns/op
# Warmup Iteration   3: 1279.352 ns/op
Iteration   1: 1294.067 ns/op
Iteration   2: 1278.873 ns/op
Iteration   3: 1284.096 ns/op
Iteration   4: 1279.429 ns/op
Iteration   5: 1278.597 ns/op
Iteration   6: 1278.145 ns/op
Iteration   7: 1277.739 ns/op
Iteration   8: 1277.994 ns/op
Iteration   9: 1277.855 ns/op
Iteration  10: 1277.860 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1297.308 ±(99.9%) 16.623 ns/op [Average]
  (min, avg, max) = (1277.739, 1297.308, 1324.856), stdev = 19.143
  CI (99.9%): [1280.685, 1313.931] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 4.86% complete, ETA 00:36:48
# Fork: 1 of 2
# Warmup Iteration   1: 915.410 ns/op
# Warmup Iteration   2: 647.085 ns/op
# Warmup Iteration   3: 432.342 ns/op
Iteration   1: 432.541 ns/op
Iteration   2: 433.590 ns/op
Iteration   3: 433.038 ns/op
Iteration   4: 435.106 ns/op
Iteration   5: 432.835 ns/op
Iteration   6: 433.411 ns/op
Iteration   7: 432.786 ns/op
Iteration   8: 437.137 ns/op
Iteration   9: 440.125 ns/op
Iteration  10: 432.942 ns/op

# Run progress: 4.93% complete, ETA 00:36:46
# Fork: 2 of 2
# Warmup Iteration   1: 940.837 ns/op
# Warmup Iteration   2: 651.578 ns/op
# Warmup Iteration   3: 432.155 ns/op
Iteration   1: 431.857 ns/op
Iteration   2: 433.506 ns/op
Iteration   3: 432.749 ns/op
Iteration   4: 433.586 ns/op
Iteration   5: 433.013 ns/op
Iteration   6: 432.915 ns/op
Iteration   7: 431.989 ns/op
Iteration   8: 436.481 ns/op
Iteration   9: 438.016 ns/op
Iteration  10: 432.202 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  433.991 ±(99.9%) 1.935 ns/op [Average]
  (min, avg, max) = (431.857, 433.991, 440.125), stdev = 2.229
  CI (99.9%): [432.056, 435.927] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 5.00% complete, ETA 00:36:44
# Fork: 1 of 2
# Warmup Iteration   1: 22.171 ns/op
# Warmup Iteration   2: 26.025 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.925 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.125 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 5.07% complete, ETA 00:36:42
# Fork: 2 of 2
# Warmup Iteration   1: 22.325 ns/op
# Warmup Iteration   2: 25.157 ns/op
# Warmup Iteration   3: 15.766 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.574 ns/op
Iteration   3: 15.992 ns/op
Iteration   4: 15.960 ns/op
Iteration   5: 15.678 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.600 ns/op
Iteration   8: 19.113 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.574, 16.021, 19.125), stdev = 1.071
  CI (99.9%): [15.091, 16.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 5.14% complete, ETA 00:36:40
# Fork: 1 of 2
# Warmup Iteration   1: 117.231 ns/op
# Warmup Iteration   2: 102.948 ns/op
# Warmup Iteration   3: 70.274 ns/op
Iteration   1: 70.299 ns/op
Iteration   2: 70.342 ns/op
Iteration   3: 70.520 ns/op
Iteration   4: 70.790 ns/op
Iteration   5: 70.537 ns/op
Iteration   6: 70.287 ns/op
Iteration   7: 70.318 ns/op
Iteration   8: 73.687 ns/op
Iteration   9: 70.998 ns/op
Iteration  10: 70.286 ns/op

# Run progress: 5.21% complete, ETA 00:36:39
# Fork: 2 of 2
# Warmup Iteration   1: 110.756 ns/op
# Warmup Iteration   2: 106.208 ns/op
# Warmup Iteration   3: 70.303 ns/op
Iteration   1: 70.277 ns/op
Iteration   2: 70.337 ns/op
Iteration   3: 70.506 ns/op
Iteration   4: 70.779 ns/op
Iteration   5: 70.594 ns/op
Iteration   6: 70.286 ns/op
Iteration   7: 70.327 ns/op
Iteration   8: 73.688 ns/op
Iteration   9: 71.021 ns/op
Iteration  10: 70.319 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.810 ±(99.9%) 0.879 ns/op [Average]
  (min, avg, max) = (70.277, 70.810, 73.688), stdev = 1.012
  CI (99.9%): [69.931, 71.689] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 5.28% complete, ETA 00:36:37
# Fork: 1 of 2
# Warmup Iteration   1: 805.574 ns/op
# Warmup Iteration   2: 94.490 ns/op
# Warmup Iteration   3: 72.052 ns/op
Iteration   1: 72.077 ns/op
Iteration   2: 72.074 ns/op
Iteration   3: 71.954 ns/op
Iteration   4: 72.418 ns/op
Iteration   5: 72.135 ns/op
Iteration   6: 72.142 ns/op
Iteration   7: 72.103 ns/op
Iteration   8: 73.138 ns/op
Iteration   9: 72.855 ns/op
Iteration  10: 72.066 ns/op

# Run progress: 5.35% complete, ETA 00:36:35
# Fork: 2 of 2
# Warmup Iteration   1: 593.433 ns/op
# Warmup Iteration   2: 96.179 ns/op
# Warmup Iteration   3: 72.030 ns/op
Iteration   1: 72.069 ns/op
Iteration   2: 72.121 ns/op
Iteration   3: 71.961 ns/op
Iteration   4: 71.569 ns/op
Iteration   5: 72.112 ns/op
Iteration   6: 72.085 ns/op
Iteration   7: 72.171 ns/op
Iteration   8: 73.164 ns/op
Iteration   9: 72.715 ns/op
Iteration  10: 72.164 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  72.255 ±(99.9%) 0.352 ns/op [Average]
  (min, avg, max) = (71.569, 72.255, 73.164), stdev = 0.405
  CI (99.9%): [71.903, 72.606] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 5.42% complete, ETA 00:36:34
# Fork: 1 of 2
# Warmup Iteration   1: 211.346 ns/op
# Warmup Iteration   2: 95.433 ns/op
# Warmup Iteration   3: 71.148 ns/op
Iteration   1: 71.451 ns/op
Iteration   2: 71.078 ns/op
Iteration   3: 71.158 ns/op
Iteration   4: 71.224 ns/op
Iteration   5: 71.169 ns/op
Iteration   6: 71.161 ns/op
Iteration   7: 71.182 ns/op
Iteration   8: 72.175 ns/op
Iteration   9: 71.184 ns/op
Iteration  10: 71.216 ns/op

# Run progress: 5.49% complete, ETA 00:36:32
# Fork: 2 of 2
# Warmup Iteration   1: 243.444 ns/op
# Warmup Iteration   2: 109.320 ns/op
# Warmup Iteration   3: 71.271 ns/op
Iteration   1: 71.168 ns/op
Iteration   2: 70.764 ns/op
Iteration   3: 71.049 ns/op
Iteration   4: 71.341 ns/op
Iteration   5: 71.148 ns/op
Iteration   6: 71.181 ns/op
Iteration   7: 71.178 ns/op
Iteration   8: 72.215 ns/op
Iteration   9: 71.178 ns/op
Iteration  10: 71.178 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.270 ±(99.9%) 0.296 ns/op [Average]
  (min, avg, max) = (70.764, 71.270, 72.215), stdev = 0.341
  CI (99.9%): [70.974, 71.566] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 5.56% complete, ETA 00:36:30
# Fork: 1 of 2
# Warmup Iteration   1: 108.174 ns/op
# Warmup Iteration   2: 105.898 ns/op
# Warmup Iteration   3: 73.193 ns/op
Iteration   1: 73.392 ns/op
Iteration   2: 73.184 ns/op
Iteration   3: 73.202 ns/op
Iteration   4: 73.222 ns/op
Iteration   5: 73.274 ns/op
Iteration   6: 73.381 ns/op
Iteration   7: 73.201 ns/op
Iteration   8: 73.217 ns/op
Iteration   9: 73.352 ns/op
Iteration  10: 73.228 ns/op

# Run progress: 5.63% complete, ETA 00:36:28
# Fork: 2 of 2
# Warmup Iteration   1: 106.600 ns/op
# Warmup Iteration   2: 97.854 ns/op
# Warmup Iteration   3: 73.176 ns/op
Iteration   1: 73.201 ns/op
Iteration   2: 73.328 ns/op
Iteration   3: 73.146 ns/op
Iteration   4: 73.420 ns/op
Iteration   5: 73.398 ns/op
Iteration   6: 73.243 ns/op
Iteration   7: 73.216 ns/op
Iteration   8: 73.209 ns/op
Iteration   9: 73.334 ns/op
Iteration  10: 73.365 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.276 ±(99.9%) 0.074 ns/op [Average]
  (min, avg, max) = (73.146, 73.276, 73.420), stdev = 0.086
  CI (99.9%): [73.201, 73.350] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 5.69% complete, ETA 00:36:26
# Fork: 1 of 2
# Warmup Iteration   1: 203.716 ns/op
# Warmup Iteration   2: 212.770 ns/op
# Warmup Iteration   3: 112.649 ns/op
Iteration   1: 112.609 ns/op
Iteration   2: 115.449 ns/op
Iteration   3: 112.745 ns/op
Iteration   4: 112.523 ns/op
Iteration   5: 112.613 ns/op
Iteration   6: 114.634 ns/op
Iteration   7: 112.737 ns/op
Iteration   8: 116.754 ns/op
Iteration   9: 123.555 ns/op
Iteration  10: 112.748 ns/op

# Run progress: 5.76% complete, ETA 00:36:25
# Fork: 2 of 2
# Warmup Iteration   1: 198.788 ns/op
# Warmup Iteration   2: 181.903 ns/op
# Warmup Iteration   3: 112.556 ns/op
Iteration   1: 112.539 ns/op
Iteration   2: 115.424 ns/op
Iteration   3: 112.944 ns/op
Iteration   4: 112.414 ns/op
Iteration   5: 112.614 ns/op
Iteration   6: 114.560 ns/op
Iteration   7: 112.481 ns/op
Iteration   8: 116.778 ns/op
Iteration   9: 123.612 ns/op
Iteration  10: 112.467 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.610 ±(99.9%) 2.952 ns/op [Average]
  (min, avg, max) = (112.414, 114.610, 123.612), stdev = 3.399
  CI (99.9%): [111.658, 117.562] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 5.83% complete, ETA 00:36:23
# Fork: 1 of 2
# Warmup Iteration   1: 22.359 ns/op
# Warmup Iteration   2: 23.599 ns/op
# Warmup Iteration   3: 15.759 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.585 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.581 ns/op

# Run progress: 5.90% complete, ETA 00:36:21
# Fork: 2 of 2
# Warmup Iteration   1: 22.072 ns/op
# Warmup Iteration   2: 25.986 ns/op
# Warmup Iteration   3: 15.778 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.586 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.113 ns/op
Iteration   9: 15.583 ns/op
Iteration  10: 15.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.576, 16.020, 19.117), stdev = 1.069
  CI (99.9%): [15.092, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 5.97% complete, ETA 00:36:19
# Fork: 1 of 2
# Warmup Iteration   1: 102.708 ns/op
# Warmup Iteration   2: 109.518 ns/op
# Warmup Iteration   3: 70.271 ns/op
Iteration   1: 70.363 ns/op
Iteration   2: 70.301 ns/op
Iteration   3: 70.488 ns/op
Iteration   4: 69.704 ns/op
Iteration   5: 70.481 ns/op
Iteration   6: 70.306 ns/op
Iteration   7: 70.296 ns/op
Iteration   8: 73.727 ns/op
Iteration   9: 71.036 ns/op
Iteration  10: 70.318 ns/op

# Run progress: 6.04% complete, ETA 00:36:17
# Fork: 2 of 2
# Warmup Iteration   1: 110.147 ns/op
# Warmup Iteration   2: 107.339 ns/op
# Warmup Iteration   3: 70.295 ns/op
Iteration   1: 70.346 ns/op
Iteration   2: 70.302 ns/op
Iteration   3: 70.571 ns/op
Iteration   4: 70.800 ns/op
Iteration   5: 70.674 ns/op
Iteration   6: 70.321 ns/op
Iteration   7: 70.287 ns/op
Iteration   8: 73.781 ns/op
Iteration   9: 71.081 ns/op
Iteration  10: 70.340 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.776 ±(99.9%) 0.921 ns/op [Average]
  (min, avg, max) = (69.704, 70.776, 73.781), stdev = 1.061
  CI (99.9%): [69.855, 71.697] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 6.11% complete, ETA 00:36:16
# Fork: 1 of 2
# Warmup Iteration   1: 1601.588 ns/op
# Warmup Iteration   2: 109.436 ns/op
# Warmup Iteration   3: 72.090 ns/op
Iteration   1: 72.105 ns/op
Iteration   2: 72.141 ns/op
Iteration   3: 71.893 ns/op
Iteration   4: 72.416 ns/op
Iteration   5: 72.196 ns/op
Iteration   6: 72.067 ns/op
Iteration   7: 72.066 ns/op
Iteration   8: 73.211 ns/op
Iteration   9: 72.778 ns/op
Iteration  10: 72.086 ns/op

# Run progress: 6.18% complete, ETA 00:36:14
# Fork: 2 of 2
# Warmup Iteration   1: 1175.148 ns/op
# Warmup Iteration   2: 111.332 ns/op
# Warmup Iteration   3: 72.061 ns/op
Iteration   1: 72.093 ns/op
Iteration   2: 72.053 ns/op
Iteration   3: 71.906 ns/op
Iteration   4: 71.807 ns/op
Iteration   5: 72.142 ns/op
Iteration   6: 72.140 ns/op
Iteration   7: 72.073 ns/op
Iteration   8: 73.278 ns/op
Iteration   9: 72.780 ns/op
Iteration  10: 72.081 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  72.266 ±(99.9%) 0.361 ns/op [Average]
  (min, avg, max) = (71.807, 72.266, 73.278), stdev = 0.416
  CI (99.9%): [71.905, 72.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 6.25% complete, ETA 00:36:12
# Fork: 1 of 2
# Warmup Iteration   1: 252.947 ns/op
# Warmup Iteration   2: 98.571 ns/op
# Warmup Iteration   3: 71.213 ns/op
Iteration   1: 71.172 ns/op
Iteration   2: 71.123 ns/op
Iteration   3: 71.092 ns/op
Iteration   4: 71.183 ns/op
Iteration   5: 71.259 ns/op
Iteration   6: 71.130 ns/op
Iteration   7: 71.100 ns/op
Iteration   8: 72.207 ns/op
Iteration   9: 71.191 ns/op
Iteration  10: 71.189 ns/op

# Run progress: 6.32% complete, ETA 00:36:11
# Fork: 2 of 2
# Warmup Iteration   1: 317.297 ns/op
# Warmup Iteration   2: 94.368 ns/op
# Warmup Iteration   3: 71.282 ns/op
Iteration   1: 71.173 ns/op
Iteration   2: 71.066 ns/op
Iteration   3: 71.048 ns/op
Iteration   4: 71.245 ns/op
Iteration   5: 71.244 ns/op
Iteration   6: 71.169 ns/op
Iteration   7: 71.343 ns/op
Iteration   8: 72.640 ns/op
Iteration   9: 72.021 ns/op
Iteration  10: 71.260 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.343 ±(99.9%) 0.371 ns/op [Average]
  (min, avg, max) = (71.048, 71.343, 72.640), stdev = 0.427
  CI (99.9%): [70.972, 71.713] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 6.39% complete, ETA 00:36:09
# Fork: 1 of 2
# Warmup Iteration   1: 108.584 ns/op
# Warmup Iteration   2: 108.283 ns/op
# Warmup Iteration   3: 73.249 ns/op
Iteration   1: 73.261 ns/op
Iteration   2: 73.341 ns/op
Iteration   3: 73.158 ns/op
Iteration   4: 73.264 ns/op
Iteration   5: 73.280 ns/op
Iteration   6: 73.185 ns/op
Iteration   7: 73.193 ns/op
Iteration   8: 73.387 ns/op
Iteration   9: 73.255 ns/op
Iteration  10: 73.220 ns/op

# Run progress: 6.46% complete, ETA 00:36:09
# Fork: 2 of 2
# Warmup Iteration   1: 110.313 ns/op
# Warmup Iteration   2: 95.091 ns/op
# Warmup Iteration   3: 73.173 ns/op
Iteration   1: 73.216 ns/op
Iteration   2: 73.206 ns/op
Iteration   3: 73.148 ns/op
Iteration   4: 73.261 ns/op
Iteration   5: 73.336 ns/op
Iteration   6: 73.174 ns/op
Iteration   7: 73.291 ns/op
Iteration   8: 73.283 ns/op
Iteration   9: 73.242 ns/op
Iteration  10: 73.224 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.246 ±(99.9%) 0.055 ns/op [Average]
  (min, avg, max) = (73.148, 73.246, 73.387), stdev = 0.063
  CI (99.9%): [73.192, 73.301] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 6.53% complete, ETA 00:36:07
# Fork: 1 of 2
# Warmup Iteration   1: 219.458 ns/op
# Warmup Iteration   2: 191.951 ns/op
# Warmup Iteration   3: 112.587 ns/op
Iteration   1: 112.625 ns/op
Iteration   2: 115.452 ns/op
Iteration   3: 113.032 ns/op
Iteration   4: 112.545 ns/op
Iteration   5: 112.726 ns/op
Iteration   6: 114.847 ns/op
Iteration   7: 112.738 ns/op
Iteration   8: 116.797 ns/op
Iteration   9: 123.538 ns/op
Iteration  10: 112.656 ns/op

# Run progress: 6.60% complete, ETA 00:36:05
# Fork: 2 of 2
# Warmup Iteration   1: 207.342 ns/op
# Warmup Iteration   2: 194.427 ns/op
# Warmup Iteration   3: 112.662 ns/op
Iteration   1: 112.600 ns/op
Iteration   2: 115.578 ns/op
Iteration   3: 112.801 ns/op
Iteration   4: 112.427 ns/op
Iteration   5: 112.623 ns/op
Iteration   6: 114.794 ns/op
Iteration   7: 112.695 ns/op
Iteration   8: 116.730 ns/op
Iteration   9: 123.552 ns/op
Iteration  10: 112.751 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.675 ±(99.9%) 2.923 ns/op [Average]
  (min, avg, max) = (112.427, 114.675, 123.552), stdev = 3.366
  CI (99.9%): [111.752, 117.599] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 6.67% complete, ETA 00:36:04
# Fork: 1 of 2
# Warmup Iteration   1: 22.048 ns/op
# Warmup Iteration   2: 26.089 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.674 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 16.066 ns/op

# Run progress: 6.74% complete, ETA 00:36:02
# Fork: 2 of 2
# Warmup Iteration   1: 21.909 ns/op
# Warmup Iteration   2: 26.052 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.676 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.586 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.044 ±(99.9%) 0.922 ns/op [Average]
  (min, avg, max) = (15.573, 16.044, 19.112), stdev = 1.062
  CI (99.9%): [15.121, 16.966] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 6.81% complete, ETA 00:36:00
# Fork: 1 of 2
# Warmup Iteration   1: 117.660 ns/op
# Warmup Iteration   2: 103.237 ns/op
# Warmup Iteration   3: 76.791 ns/op
Iteration   1: 76.797 ns/op
Iteration   2: 76.727 ns/op
Iteration   3: 76.729 ns/op
Iteration   4: 77.155 ns/op
Iteration   5: 76.882 ns/op
Iteration   6: 76.812 ns/op
Iteration   7: 76.772 ns/op
Iteration   8: 79.654 ns/op
Iteration   9: 77.248 ns/op
Iteration  10: 76.763 ns/op

# Run progress: 6.88% complete, ETA 00:35:58
# Fork: 2 of 2
# Warmup Iteration   1: 129.772 ns/op
# Warmup Iteration   2: 118.148 ns/op
# Warmup Iteration   3: 89.540 ns/op
Iteration   1: 89.350 ns/op
Iteration   2: 89.391 ns/op
Iteration   3: 89.543 ns/op
Iteration   4: 89.828 ns/op
Iteration   5: 89.615 ns/op
Iteration   6: 90.130 ns/op
Iteration   7: 89.483 ns/op
Iteration   8: 79.751 ns/op
Iteration   9: 90.009 ns/op
Iteration  10: 89.359 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  82.900 ±(99.9%) 5.478 ns/op [Average]
  (min, avg, max) = (76.727, 82.900, 90.130), stdev = 6.308
  CI (99.9%): [77.422, 88.378] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 6.94% complete, ETA 00:35:57
# Fork: 1 of 2
# Warmup Iteration   1: 1199.781 ns/op
# Warmup Iteration   2: 150.797 ns/op
# Warmup Iteration   3: 114.739 ns/op
Iteration   1: 114.798 ns/op
Iteration   2: 114.856 ns/op
Iteration   3: 114.671 ns/op
Iteration   4: 114.933 ns/op
Iteration   5: 114.825 ns/op
Iteration   6: 114.561 ns/op
Iteration   7: 114.568 ns/op
Iteration   8: 114.401 ns/op
Iteration   9: 114.338 ns/op
Iteration  10: 114.726 ns/op

# Run progress: 7.01% complete, ETA 00:35:55
# Fork: 2 of 2
# Warmup Iteration   1: 829.450 ns/op
# Warmup Iteration   2: 150.812 ns/op
# Warmup Iteration   3: 114.301 ns/op
Iteration   1: 114.371 ns/op
Iteration   2: 114.296 ns/op
Iteration   3: 114.383 ns/op
Iteration   4: 114.401 ns/op
Iteration   5: 114.438 ns/op
Iteration   6: 114.376 ns/op
Iteration   7: 114.518 ns/op
Iteration   8: 114.096 ns/op
Iteration   9: 114.601 ns/op
Iteration  10: 114.383 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.527 ±(99.9%) 0.190 ns/op [Average]
  (min, avg, max) = (114.096, 114.527, 114.933), stdev = 0.218
  CI (99.9%): [114.337, 114.717] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 7.08% complete, ETA 00:35:53
# Fork: 1 of 2
# Warmup Iteration   1: 708.560 ns/op
# Warmup Iteration   2: 152.492 ns/op
# Warmup Iteration   3: 115.729 ns/op
Iteration   1: 115.634 ns/op
Iteration   2: 115.612 ns/op
Iteration   3: 115.648 ns/op
Iteration   4: 115.573 ns/op
Iteration   5: 115.585 ns/op
Iteration   6: 115.834 ns/op
Iteration   7: 115.613 ns/op
Iteration   8: 115.506 ns/op
Iteration   9: 115.724 ns/op
Iteration  10: 115.373 ns/op

# Run progress: 7.15% complete, ETA 00:35:52
# Fork: 2 of 2
# Warmup Iteration   1: 696.346 ns/op
# Warmup Iteration   2: 151.566 ns/op
# Warmup Iteration   3: 115.636 ns/op
Iteration   1: 115.700 ns/op
Iteration   2: 115.701 ns/op
Iteration   3: 115.585 ns/op
Iteration   4: 115.526 ns/op
Iteration   5: 115.894 ns/op
Iteration   6: 115.643 ns/op
Iteration   7: 115.623 ns/op
Iteration   8: 115.839 ns/op
Iteration   9: 115.871 ns/op
Iteration  10: 115.633 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  115.656 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (115.373, 115.656, 115.894), stdev = 0.130
  CI (99.9%): [115.543, 115.768] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 7.22% complete, ETA 00:35:50
# Fork: 1 of 2
# Warmup Iteration   1: 228.571 ns/op
# Warmup Iteration   2: 201.835 ns/op
# Warmup Iteration   3: 140.042 ns/op
Iteration   1: 139.168 ns/op
Iteration   2: 140.455 ns/op
Iteration   3: 141.154 ns/op
Iteration   4: 140.002 ns/op
Iteration   5: 140.169 ns/op
Iteration   6: 139.954 ns/op
Iteration   7: 139.430 ns/op
Iteration   8: 138.727 ns/op
Iteration   9: 139.068 ns/op
Iteration  10: 140.111 ns/op

# Run progress: 7.29% complete, ETA 00:35:48
# Fork: 2 of 2
# Warmup Iteration   1: 206.257 ns/op
# Warmup Iteration   2: 184.216 ns/op
# Warmup Iteration   3: 140.728 ns/op
Iteration   1: 138.630 ns/op
Iteration   2: 139.180 ns/op
Iteration   3: 140.078 ns/op
Iteration   4: 141.169 ns/op
Iteration   5: 139.628 ns/op
Iteration   6: 139.946 ns/op
Iteration   7: 140.089 ns/op
Iteration   8: 139.199 ns/op
Iteration   9: 139.407 ns/op
Iteration  10: 139.660 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  139.761 ±(99.9%) 0.602 ns/op [Average]
  (min, avg, max) = (138.630, 139.761, 141.169), stdev = 0.693
  CI (99.9%): [139.159, 140.363] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 7.36% complete, ETA 00:35:47
# Fork: 1 of 2
# Warmup Iteration   1: 228.177 ns/op
# Warmup Iteration   2: 195.392 ns/op
# Warmup Iteration   3: 124.721 ns/op
Iteration   1: 124.616 ns/op
Iteration   2: 125.559 ns/op
Iteration   3: 125.220 ns/op
Iteration   4: 127.617 ns/op
Iteration   5: 124.642 ns/op
Iteration   6: 124.769 ns/op
Iteration   7: 124.694 ns/op
Iteration   8: 128.598 ns/op
Iteration   9: 132.233 ns/op
Iteration  10: 124.692 ns/op

# Run progress: 7.43% complete, ETA 00:35:45
# Fork: 2 of 2
# Warmup Iteration   1: 226.996 ns/op
# Warmup Iteration   2: 215.828 ns/op
# Warmup Iteration   3: 124.685 ns/op
Iteration   1: 124.684 ns/op
Iteration   2: 125.050 ns/op
Iteration   3: 125.127 ns/op
Iteration   4: 128.004 ns/op
Iteration   5: 124.749 ns/op
Iteration   6: 124.738 ns/op
Iteration   7: 124.663 ns/op
Iteration   8: 127.399 ns/op
Iteration   9: 127.816 ns/op
Iteration  10: 124.742 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.981 ±(99.9%) 1.747 ns/op [Average]
  (min, avg, max) = (124.616, 125.981, 132.233), stdev = 2.012
  CI (99.9%): [124.234, 127.727] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 7.50% complete, ETA 00:35:43
# Fork: 1 of 2
# Warmup Iteration   1: 22.509 ns/op
# Warmup Iteration   2: 26.003 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.935 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.107 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.577 ns/op

# Run progress: 7.57% complete, ETA 00:35:41
# Fork: 2 of 2
# Warmup Iteration   1: 21.998 ns/op
# Warmup Iteration   2: 25.992 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.931 ns/op
Iteration   5: 15.666 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.108 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.574 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.574, 16.017, 19.108), stdev = 1.068
  CI (99.9%): [15.090, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 7.64% complete, ETA 00:35:39
# Fork: 1 of 2
# Warmup Iteration   1: 976.236 ns/op
# Warmup Iteration   2: 540.864 ns/op
# Warmup Iteration   3: 414.688 ns/op
Iteration   1: 415.063 ns/op
Iteration   2: 414.855 ns/op
Iteration   3: 414.626 ns/op
Iteration   4: 414.065 ns/op
Iteration   5: 414.648 ns/op
Iteration   6: 414.373 ns/op
Iteration   7: 414.873 ns/op
Iteration   8: 418.051 ns/op
Iteration   9: 414.615 ns/op
Iteration  10: 414.552 ns/op

# Run progress: 7.71% complete, ETA 00:35:38
# Fork: 2 of 2
# Warmup Iteration   1: 980.721 ns/op
# Warmup Iteration   2: 588.428 ns/op
# Warmup Iteration   3: 413.946 ns/op
Iteration   1: 413.746 ns/op
Iteration   2: 413.749 ns/op
Iteration   3: 414.590 ns/op
Iteration   4: 414.260 ns/op
Iteration   5: 414.024 ns/op
Iteration   6: 413.871 ns/op
Iteration   7: 413.771 ns/op
Iteration   8: 416.770 ns/op
Iteration   9: 413.529 ns/op
Iteration  10: 413.873 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  414.595 ±(99.9%) 0.937 ns/op [Average]
  (min, avg, max) = (413.529, 414.595, 418.051), stdev = 1.079
  CI (99.9%): [413.658, 415.532] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 7.78% complete, ETA 00:35:36
# Fork: 1 of 2
# Warmup Iteration   1: 3695.642 ns/op
# Warmup Iteration   2: 502.385 ns/op
# Warmup Iteration   3: 336.986 ns/op
Iteration   1: 338.219 ns/op
Iteration   2: 337.218 ns/op
Iteration   3: 337.221 ns/op
Iteration   4: 341.356 ns/op
Iteration   5: 337.108 ns/op
Iteration   6: 337.515 ns/op
Iteration   7: 337.679 ns/op
Iteration   8: 337.451 ns/op
Iteration   9: 337.846 ns/op
Iteration  10: 337.029 ns/op

# Run progress: 7.85% complete, ETA 00:35:34
# Fork: 2 of 2
# Warmup Iteration   1: 5045.304 ns/op
# Warmup Iteration   2: 479.745 ns/op
# Warmup Iteration   3: 338.216 ns/op
Iteration   1: 338.529 ns/op
Iteration   2: 342.032 ns/op
Iteration   3: 338.850 ns/op
Iteration   4: 342.469 ns/op
Iteration   5: 338.470 ns/op
Iteration   6: 338.424 ns/op
Iteration   7: 338.310 ns/op
Iteration   8: 338.681 ns/op
Iteration   9: 338.937 ns/op
Iteration  10: 338.195 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  338.577 ±(99.9%) 1.371 ns/op [Average]
  (min, avg, max) = (337.029, 338.577, 342.469), stdev = 1.579
  CI (99.9%): [337.206, 339.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 7.92% complete, ETA 00:35:32
# Fork: 1 of 2
# Warmup Iteration   1: 15116.559 ns/op
# Warmup Iteration   2: 638.229 ns/op
# Warmup Iteration   3: 447.847 ns/op
Iteration   1: 415.426 ns/op
Iteration   2: 415.032 ns/op
Iteration   3: 415.982 ns/op
Iteration   4: 418.405 ns/op
Iteration   5: 414.708 ns/op
Iteration   6: 415.042 ns/op
Iteration   7: 415.157 ns/op
Iteration   8: 418.232 ns/op
Iteration   9: 416.315 ns/op
Iteration  10: 414.136 ns/op

# Run progress: 7.99% complete, ETA 00:35:30
# Fork: 2 of 2
# Warmup Iteration   1: 7475.405 ns/op
# Warmup Iteration   2: 577.688 ns/op
# Warmup Iteration   3: 403.138 ns/op
Iteration   1: 403.432 ns/op
Iteration   2: 403.131 ns/op
Iteration   3: 403.448 ns/op
Iteration   4: 403.587 ns/op
Iteration   5: 402.976 ns/op
Iteration   6: 403.096 ns/op
Iteration   7: 402.885 ns/op
Iteration   8: 403.437 ns/op
Iteration   9: 403.270 ns/op
Iteration  10: 403.116 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  409.541 ±(99.9%) 5.683 ns/op [Average]
  (min, avg, max) = (402.885, 409.541, 418.405), stdev = 6.544
  CI (99.9%): [403.858, 415.223] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 8.06% complete, ETA 00:35:29
# Fork: 1 of 2
# Warmup Iteration   1: 2303.439 ns/op
# Warmup Iteration   2: 2116.743 ns/op
# Warmup Iteration   3: 1560.246 ns/op
Iteration   1: 1564.311 ns/op
Iteration   2: 1558.243 ns/op
Iteration   3: 1564.953 ns/op
Iteration   4: 1565.231 ns/op
Iteration   5: 1565.284 ns/op
Iteration   6: 1566.649 ns/op
Iteration   7: 1563.829 ns/op
Iteration   8: 1566.977 ns/op
Iteration   9: 1564.572 ns/op
Iteration  10: 1558.233 ns/op

# Run progress: 8.13% complete, ETA 00:35:27
# Fork: 2 of 2
# Warmup Iteration   1: 2329.706 ns/op
# Warmup Iteration   2: 2031.778 ns/op
# Warmup Iteration   3: 1599.778 ns/op
Iteration   1: 1582.376 ns/op
Iteration   2: 1592.079 ns/op
Iteration   3: 1593.052 ns/op
Iteration   4: 1594.259 ns/op
Iteration   5: 1590.672 ns/op
Iteration   6: 1620.637 ns/op
Iteration   7: 1609.838 ns/op
Iteration   8: 1589.679 ns/op
Iteration   9: 1594.799 ns/op
Iteration  10: 1607.429 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1580.655 ±(99.9%) 16.595 ns/op [Average]
  (min, avg, max) = (1558.233, 1580.655, 1620.637), stdev = 19.110
  CI (99.9%): [1564.060, 1597.250] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 8.19% complete, ETA 00:35:25
# Fork: 1 of 2
# Warmup Iteration   1: 406.552 ns/op
# Warmup Iteration   2: 332.026 ns/op
# Warmup Iteration   3: 203.380 ns/op
Iteration   1: 203.370 ns/op
Iteration   2: 203.596 ns/op
Iteration   3: 214.580 ns/op
Iteration   4: 209.926 ns/op
Iteration   5: 203.482 ns/op
Iteration   6: 203.410 ns/op
Iteration   7: 203.428 ns/op
Iteration   8: 212.145 ns/op
Iteration   9: 208.289 ns/op
Iteration  10: 203.359 ns/op

# Run progress: 8.26% complete, ETA 00:35:24
# Fork: 2 of 2
# Warmup Iteration   1: 348.154 ns/op
# Warmup Iteration   2: 305.340 ns/op
# Warmup Iteration   3: 202.862 ns/op
Iteration   1: 202.931 ns/op
Iteration   2: 203.081 ns/op
Iteration   3: 214.197 ns/op
Iteration   4: 208.411 ns/op
Iteration   5: 202.633 ns/op
Iteration   6: 202.915 ns/op
Iteration   7: 202.993 ns/op
Iteration   8: 211.025 ns/op
Iteration   9: 207.340 ns/op
Iteration  10: 202.929 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  206.202 ±(99.9%) 3.607 ns/op [Average]
  (min, avg, max) = (202.633, 206.202, 214.580), stdev = 4.154
  CI (99.9%): [202.595, 209.809] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 8.33% complete, ETA 00:35:22
# Fork: 1 of 2
# Warmup Iteration   1: 22.593 ns/op
# Warmup Iteration   2: 24.535 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.574 ns/op
Iteration   3: 16.006 ns/op
Iteration   4: 15.947 ns/op
Iteration   5: 15.690 ns/op
Iteration   6: 15.586 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.575 ns/op

# Run progress: 8.40% complete, ETA 00:35:20
# Fork: 2 of 2
# Warmup Iteration   1: 22.922 ns/op
# Warmup Iteration   2: 24.100 ns/op
# Warmup Iteration   3: 15.762 ns/op
Iteration   1: 15.570 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.983 ns/op
Iteration   4: 15.965 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.584 ns/op
Iteration   8: 19.099 ns/op
Iteration   9: 15.568 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.568, 16.020, 19.110), stdev = 1.067
  CI (99.9%): [15.094, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 8.47% complete, ETA 00:35:19
# Fork: 1 of 2
# Warmup Iteration   1: 2176.784 ns/op
# Warmup Iteration   2: 1128.989 ns/op
# Warmup Iteration   3: 815.707 ns/op
Iteration   1: 807.490 ns/op
Iteration   2: 812.486 ns/op
Iteration   3: 807.472 ns/op
Iteration   4: 807.463 ns/op
Iteration   5: 809.251 ns/op
Iteration   6: 817.191 ns/op
Iteration   7: 809.346 ns/op
Iteration   8: 820.413 ns/op
Iteration   9: 807.740 ns/op
Iteration  10: 814.763 ns/op

# Run progress: 8.54% complete, ETA 00:35:17
# Fork: 2 of 2
# Warmup Iteration   1: 2814.469 ns/op
# Warmup Iteration   2: 1093.904 ns/op
# Warmup Iteration   3: 809.585 ns/op
Iteration   1: 808.234 ns/op
Iteration   2: 814.022 ns/op
Iteration   3: 795.399 ns/op
Iteration   4: 806.404 ns/op
Iteration   5: 807.192 ns/op
Iteration   6: 795.626 ns/op
Iteration   7: 807.492 ns/op
Iteration   8: 815.218 ns/op
Iteration   9: 804.547 ns/op
Iteration  10: 792.727 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  808.024 ±(99.9%) 6.165 ns/op [Average]
  (min, avg, max) = (792.727, 808.024, 820.413), stdev = 7.099
  CI (99.9%): [801.859, 814.189] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 8.61% complete, ETA 00:35:15
# Fork: 1 of 2
# Warmup Iteration   1: 4489.811 ns/op
# Warmup Iteration   2: 1248.349 ns/op
# Warmup Iteration   3: 918.332 ns/op
Iteration   1: 918.840 ns/op
Iteration   2: 917.100 ns/op
Iteration   3: 919.183 ns/op
Iteration   4: 920.883 ns/op
Iteration   5: 917.308 ns/op
Iteration   6: 918.266 ns/op
Iteration   7: 919.228 ns/op
Iteration   8: 928.845 ns/op
Iteration   9: 919.226 ns/op
Iteration  10: 919.221 ns/op

# Run progress: 8.68% complete, ETA 00:35:14
# Fork: 2 of 2
# Warmup Iteration   1: 25469.851 ns/op
# Warmup Iteration   2: 1435.203 ns/op
# Warmup Iteration   3: 965.316 ns/op
Iteration   1: 884.333 ns/op
Iteration   2: 884.200 ns/op
Iteration   3: 883.995 ns/op
Iteration   4: 888.534 ns/op
Iteration   5: 884.081 ns/op
Iteration   6: 884.196 ns/op
Iteration   7: 883.897 ns/op
Iteration   8: 1043.078 ns/op
Iteration   9: 884.536 ns/op
Iteration  10: 884.376 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  910.166 ±(99.9%) 31.219 ns/op [Average]
  (min, avg, max) = (883.897, 910.166, 1043.078), stdev = 35.952
  CI (99.9%): [878.947, 941.385] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 8.75% complete, ETA 00:35:12
# Fork: 1 of 2
# Warmup Iteration   1: 12891.892 ns/op
# Warmup Iteration   2: 1418.720 ns/op
# Warmup Iteration   3: 984.468 ns/op
Iteration   1: 888.699 ns/op
Iteration   2: 887.749 ns/op
Iteration   3: 1044.292 ns/op
Iteration   4: 891.040 ns/op
Iteration   5: 888.100 ns/op
Iteration   6: 888.188 ns/op
Iteration   7: 887.867 ns/op
Iteration   8: 890.349 ns/op
Iteration   9: 888.238 ns/op
Iteration  10: 888.336 ns/op

# Run progress: 8.82% complete, ETA 00:35:10
# Fork: 2 of 2
# Warmup Iteration   1: 34036.666 ns/op
# Warmup Iteration   2: 1443.712 ns/op
# Warmup Iteration   3: 1036.849 ns/op
Iteration   1: 894.548 ns/op
Iteration   2: 894.424 ns/op
Iteration   3: 894.633 ns/op
Iteration   4: 897.813 ns/op
Iteration   5: 893.255 ns/op
Iteration   6: 893.299 ns/op
Iteration   7: 893.963 ns/op
Iteration   8: 893.626 ns/op
Iteration   9: 895.207 ns/op
Iteration  10: 893.794 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  899.371 ±(99.9%) 29.742 ns/op [Average]
  (min, avg, max) = (887.749, 899.371, 1044.292), stdev = 34.251
  CI (99.9%): [869.629, 929.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 8.89% complete, ETA 00:35:08
# Fork: 1 of 2
# Warmup Iteration   1: 1517.928 ns/op
# Warmup Iteration   2: 1116.046 ns/op
# Warmup Iteration   3: 870.938 ns/op
Iteration   1: 870.876 ns/op
Iteration   2: 869.515 ns/op
Iteration   3: 871.452 ns/op
Iteration   4: 877.536 ns/op
Iteration   5: 870.661 ns/op
Iteration   6: 871.189 ns/op
Iteration   7: 871.252 ns/op
Iteration   8: 880.702 ns/op
Iteration   9: 870.136 ns/op
Iteration  10: 870.912 ns/op

# Run progress: 8.96% complete, ETA 00:35:07
# Fork: 2 of 2
# Warmup Iteration   1: 1807.331 ns/op
# Warmup Iteration   2: 1233.259 ns/op
# Warmup Iteration   3: 870.851 ns/op
Iteration   1: 871.209 ns/op
Iteration   2: 868.885 ns/op
Iteration   3: 871.101 ns/op
Iteration   4: 877.705 ns/op
Iteration   5: 871.260 ns/op
Iteration   6: 871.024 ns/op
Iteration   7: 871.184 ns/op
Iteration   8: 880.667 ns/op
Iteration   9: 869.315 ns/op
Iteration  10: 871.273 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  872.393 ±(99.9%) 3.133 ns/op [Average]
  (min, avg, max) = (868.885, 872.393, 880.702), stdev = 3.608
  CI (99.9%): [869.259, 875.526] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 9.03% complete, ETA 00:35:05
# Fork: 1 of 2
# Warmup Iteration   1: 975.754 ns/op
# Warmup Iteration   2: 621.522 ns/op
# Warmup Iteration   3: 407.408 ns/op
Iteration   1: 407.365 ns/op
Iteration   2: 411.904 ns/op
Iteration   3: 407.467 ns/op
Iteration   4: 408.746 ns/op
Iteration   5: 410.369 ns/op
Iteration   6: 407.955 ns/op
Iteration   7: 406.993 ns/op
Iteration   8: 409.557 ns/op
Iteration   9: 412.210 ns/op
Iteration  10: 407.019 ns/op

# Run progress: 9.10% complete, ETA 00:35:03
# Fork: 2 of 2
# Warmup Iteration   1: 1043.702 ns/op
# Warmup Iteration   2: 638.408 ns/op
# Warmup Iteration   3: 408.172 ns/op
Iteration   1: 408.482 ns/op
Iteration   2: 412.563 ns/op
Iteration   3: 408.360 ns/op
Iteration   4: 409.649 ns/op
Iteration   5: 411.008 ns/op
Iteration   6: 407.881 ns/op
Iteration   7: 407.925 ns/op
Iteration   8: 411.122 ns/op
Iteration   9: 412.989 ns/op
Iteration  10: 407.881 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  409.372 ±(99.9%) 1.716 ns/op [Average]
  (min, avg, max) = (406.993, 409.372, 412.989), stdev = 1.976
  CI (99.9%): [407.656, 411.088] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 9.17% complete, ETA 00:35:01
# Fork: 1 of 2
# Warmup Iteration   1: 23.860 ns/op
# Warmup Iteration   2: 23.927 ns/op
# Warmup Iteration   3: 15.756 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.947 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.114 ns/op
Iteration   9: 15.571 ns/op
Iteration  10: 15.584 ns/op

# Run progress: 9.24% complete, ETA 00:35:00
# Fork: 2 of 2
# Warmup Iteration   1: 22.365 ns/op
# Warmup Iteration   2: 26.036 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.940 ns/op
Iteration   5: 15.671 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.571, 16.019, 19.117), stdev = 1.070
  CI (99.9%): [15.090, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 9.31% complete, ETA 00:34:58
# Fork: 1 of 2
# Warmup Iteration   1: 117.544 ns/op
# Warmup Iteration   2: 103.743 ns/op
# Warmup Iteration   3: 70.267 ns/op
Iteration   1: 70.309 ns/op
Iteration   2: 70.295 ns/op
Iteration   3: 70.493 ns/op
Iteration   4: 69.781 ns/op
Iteration   5: 70.445 ns/op
Iteration   6: 70.274 ns/op
Iteration   7: 70.273 ns/op
Iteration   8: 73.763 ns/op
Iteration   9: 71.016 ns/op
Iteration  10: 70.298 ns/op

# Run progress: 9.38% complete, ETA 00:34:56
# Fork: 2 of 2
# Warmup Iteration   1: 103.803 ns/op
# Warmup Iteration   2: 102.787 ns/op
# Warmup Iteration   3: 70.346 ns/op
Iteration   1: 70.340 ns/op
Iteration   2: 70.344 ns/op
Iteration   3: 70.563 ns/op
Iteration   4: 70.766 ns/op
Iteration   5: 70.649 ns/op
Iteration   6: 70.279 ns/op
Iteration   7: 70.413 ns/op
Iteration   8: 73.673 ns/op
Iteration   9: 71.014 ns/op
Iteration  10: 70.324 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.766 ±(99.9%) 0.909 ns/op [Average]
  (min, avg, max) = (69.781, 70.766, 73.763), stdev = 1.047
  CI (99.9%): [69.857, 71.674] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 9.44% complete, ETA 00:34:55
# Fork: 1 of 2
# Warmup Iteration   1: 557.079 ns/op
# Warmup Iteration   2: 106.626 ns/op
# Warmup Iteration   3: 70.665 ns/op
Iteration   1: 70.719 ns/op
Iteration   2: 70.656 ns/op
Iteration   3: 70.799 ns/op
Iteration   4: 70.695 ns/op
Iteration   5: 70.905 ns/op
Iteration   6: 70.729 ns/op
Iteration   7: 70.623 ns/op
Iteration   8: 72.015 ns/op
Iteration   9: 70.891 ns/op
Iteration  10: 70.628 ns/op

# Run progress: 9.51% complete, ETA 00:34:53
# Fork: 2 of 2
# Warmup Iteration   1: 2607.491 ns/op
# Warmup Iteration   2: 94.216 ns/op
# Warmup Iteration   3: 70.800 ns/op
Iteration   1: 70.617 ns/op
Iteration   2: 70.676 ns/op
Iteration   3: 70.764 ns/op
Iteration   4: 70.651 ns/op
Iteration   5: 70.676 ns/op
Iteration   6: 70.626 ns/op
Iteration   7: 70.631 ns/op
Iteration   8: 72.074 ns/op
Iteration   9: 71.047 ns/op
Iteration  10: 70.646 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.853 ±(99.9%) 0.367 ns/op [Average]
  (min, avg, max) = (70.617, 70.853, 72.074), stdev = 0.423
  CI (99.9%): [70.486, 71.221] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 9.58% complete, ETA 00:34:51
# Fork: 1 of 2
# Warmup Iteration   1: 265.973 ns/op
# Warmup Iteration   2: 94.129 ns/op
# Warmup Iteration   3: 71.337 ns/op
Iteration   1: 71.410 ns/op
Iteration   2: 71.076 ns/op
Iteration   3: 71.040 ns/op
Iteration   4: 71.227 ns/op
Iteration   5: 71.431 ns/op
Iteration   6: 71.146 ns/op
Iteration   7: 71.248 ns/op
Iteration   8: 72.627 ns/op
Iteration   9: 72.011 ns/op
Iteration  10: 71.359 ns/op

# Run progress: 9.65% complete, ETA 00:34:50
# Fork: 2 of 2
# Warmup Iteration   1: 246.161 ns/op
# Warmup Iteration   2: 94.858 ns/op
# Warmup Iteration   3: 71.170 ns/op
Iteration   1: 71.096 ns/op
Iteration   2: 70.800 ns/op
Iteration   3: 71.062 ns/op
Iteration   4: 71.161 ns/op
Iteration   5: 71.173 ns/op
Iteration   6: 71.161 ns/op
Iteration   7: 71.140 ns/op
Iteration   8: 72.258 ns/op
Iteration   9: 71.144 ns/op
Iteration  10: 71.166 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.337 ±(99.9%) 0.389 ns/op [Average]
  (min, avg, max) = (70.800, 71.337, 72.627), stdev = 0.448
  CI (99.9%): [70.948, 71.726] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 9.72% complete, ETA 00:34:48
# Fork: 1 of 2
# Warmup Iteration   1: 115.541 ns/op
# Warmup Iteration   2: 96.586 ns/op
# Warmup Iteration   3: 73.194 ns/op
Iteration   1: 73.259 ns/op
Iteration   2: 73.295 ns/op
Iteration   3: 73.258 ns/op
Iteration   4: 73.236 ns/op
Iteration   5: 73.253 ns/op
Iteration   6: 73.288 ns/op
Iteration   7: 73.220 ns/op
Iteration   8: 73.221 ns/op
Iteration   9: 73.189 ns/op
Iteration  10: 73.236 ns/op

# Run progress: 9.79% complete, ETA 00:34:47
# Fork: 2 of 2
# Warmup Iteration   1: 110.309 ns/op
# Warmup Iteration   2: 101.295 ns/op
# Warmup Iteration   3: 73.192 ns/op
Iteration   1: 73.347 ns/op
Iteration   2: 73.309 ns/op
Iteration   3: 73.273 ns/op
Iteration   4: 73.285 ns/op
Iteration   5: 73.257 ns/op
Iteration   6: 73.229 ns/op
Iteration   7: 73.205 ns/op
Iteration   8: 73.446 ns/op
Iteration   9: 73.257 ns/op
Iteration  10: 73.272 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.267 ±(99.9%) 0.049 ns/op [Average]
  (min, avg, max) = (73.189, 73.267, 73.446), stdev = 0.056
  CI (99.9%): [73.218, 73.316] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 9.86% complete, ETA 00:34:45
# Fork: 1 of 2
# Warmup Iteration   1: 225.820 ns/op
# Warmup Iteration   2: 201.270 ns/op
# Warmup Iteration   3: 112.535 ns/op
Iteration   1: 112.595 ns/op
Iteration   2: 115.376 ns/op
Iteration   3: 112.942 ns/op
Iteration   4: 112.382 ns/op
Iteration   5: 112.641 ns/op
Iteration   6: 114.723 ns/op
Iteration   7: 112.449 ns/op
Iteration   8: 116.621 ns/op
Iteration   9: 123.500 ns/op
Iteration  10: 112.475 ns/op

# Run progress: 9.93% complete, ETA 00:34:43
# Fork: 2 of 2
# Warmup Iteration   1: 200.971 ns/op
# Warmup Iteration   2: 200.414 ns/op
# Warmup Iteration   3: 112.525 ns/op
Iteration   1: 112.436 ns/op
Iteration   2: 115.351 ns/op
Iteration   3: 112.975 ns/op
Iteration   4: 112.392 ns/op
Iteration   5: 112.591 ns/op
Iteration   6: 114.559 ns/op
Iteration   7: 112.438 ns/op
Iteration   8: 116.680 ns/op
Iteration   9: 123.582 ns/op
Iteration  10: 112.618 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.566 ±(99.9%) 2.948 ns/op [Average]
  (min, avg, max) = (112.382, 114.566, 123.582), stdev = 3.395
  CI (99.9%): [111.618, 117.514] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 10.00% complete, ETA 00:34:41
# Fork: 1 of 2
# Warmup Iteration   1: 22.568 ns/op
# Warmup Iteration   2: 25.825 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.586 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.954 ns/op
Iteration   5: 15.672 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.130 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 10.07% complete, ETA 00:34:40
# Fork: 2 of 2
# Warmup Iteration   1: 22.083 ns/op
# Warmup Iteration   2: 25.741 ns/op
# Warmup Iteration   3: 15.777 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 16.017 ns/op
Iteration   4: 16.078 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.574 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.121 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.029 ±(99.9%) 0.931 ns/op [Average]
  (min, avg, max) = (15.574, 16.029, 19.130), stdev = 1.073
  CI (99.9%): [15.098, 16.961] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 10.14% complete, ETA 00:34:38
# Fork: 1 of 2
# Warmup Iteration   1: 108.726 ns/op
# Warmup Iteration   2: 107.816 ns/op
# Warmup Iteration   3: 70.297 ns/op
Iteration   1: 70.305 ns/op
Iteration   2: 70.353 ns/op
Iteration   3: 70.549 ns/op
Iteration   4: 70.758 ns/op
Iteration   5: 70.491 ns/op
Iteration   6: 70.349 ns/op
Iteration   7: 70.304 ns/op
Iteration   8: 73.798 ns/op
Iteration   9: 70.939 ns/op
Iteration  10: 70.296 ns/op

# Run progress: 10.21% complete, ETA 00:34:36
# Fork: 2 of 2
# Warmup Iteration   1: 106.832 ns/op
# Warmup Iteration   2: 96.256 ns/op
# Warmup Iteration   3: 70.278 ns/op
Iteration   1: 70.301 ns/op
Iteration   2: 70.275 ns/op
Iteration   3: 70.590 ns/op
Iteration   4: 70.781 ns/op
Iteration   5: 70.723 ns/op
Iteration   6: 70.308 ns/op
Iteration   7: 70.373 ns/op
Iteration   8: 73.831 ns/op
Iteration   9: 71.035 ns/op
Iteration  10: 70.331 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.834 ±(99.9%) 0.908 ns/op [Average]
  (min, avg, max) = (70.275, 70.834, 73.831), stdev = 1.045
  CI (99.9%): [69.927, 71.742] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 10.28% complete, ETA 00:34:34
# Fork: 1 of 2
# Warmup Iteration   1: 435.685 ns/op
# Warmup Iteration   2: 102.319 ns/op
# Warmup Iteration   3: 70.663 ns/op
Iteration   1: 70.652 ns/op
Iteration   2: 70.683 ns/op
Iteration   3: 70.886 ns/op
Iteration   4: 70.801 ns/op
Iteration   5: 70.660 ns/op
Iteration   6: 70.861 ns/op
Iteration   7: 70.707 ns/op
Iteration   8: 71.958 ns/op
Iteration   9: 71.423 ns/op
Iteration  10: 70.776 ns/op

# Run progress: 10.35% complete, ETA 00:34:33
# Fork: 2 of 2
# Warmup Iteration   1: 704.311 ns/op
# Warmup Iteration   2: 95.847 ns/op
# Warmup Iteration   3: 72.055 ns/op
Iteration   1: 72.103 ns/op
Iteration   2: 72.177 ns/op
Iteration   3: 71.925 ns/op
Iteration   4: 71.892 ns/op
Iteration   5: 72.174 ns/op
Iteration   6: 72.250 ns/op
Iteration   7: 72.090 ns/op
Iteration   8: 73.250 ns/op
Iteration   9: 72.680 ns/op
Iteration  10: 72.090 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.602 ±(99.9%) 0.686 ns/op [Average]
  (min, avg, max) = (70.652, 71.602, 73.250), stdev = 0.790
  CI (99.9%): [70.916, 72.288] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 10.42% complete, ETA 00:34:31
# Fork: 1 of 2
# Warmup Iteration   1: 223.157 ns/op
# Warmup Iteration   2: 95.995 ns/op
# Warmup Iteration   3: 71.150 ns/op
Iteration   1: 71.215 ns/op
Iteration   2: 70.995 ns/op
Iteration   3: 71.189 ns/op
Iteration   4: 71.218 ns/op
Iteration   5: 71.124 ns/op
Iteration   6: 71.161 ns/op
Iteration   7: 71.315 ns/op
Iteration   8: 72.151 ns/op
Iteration   9: 71.186 ns/op
Iteration  10: 71.155 ns/op

# Run progress: 10.49% complete, ETA 00:34:29
# Fork: 2 of 2
# Warmup Iteration   1: 243.836 ns/op
# Warmup Iteration   2: 93.820 ns/op
# Warmup Iteration   3: 71.173 ns/op
Iteration   1: 71.176 ns/op
Iteration   2: 71.056 ns/op
Iteration   3: 71.054 ns/op
Iteration   4: 71.238 ns/op
Iteration   5: 71.278 ns/op
Iteration   6: 71.350 ns/op
Iteration   7: 71.265 ns/op
Iteration   8: 72.200 ns/op
Iteration   9: 71.222 ns/op
Iteration  10: 71.196 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.287 ±(99.9%) 0.274 ns/op [Average]
  (min, avg, max) = (70.995, 71.287, 72.200), stdev = 0.316
  CI (99.9%): [71.013, 71.561] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 10.56% complete, ETA 00:34:28
# Fork: 1 of 2
# Warmup Iteration   1: 115.427 ns/op
# Warmup Iteration   2: 101.295 ns/op
# Warmup Iteration   3: 73.192 ns/op
Iteration   1: 73.208 ns/op
Iteration   2: 73.208 ns/op
Iteration   3: 73.203 ns/op
Iteration   4: 73.199 ns/op
Iteration   5: 73.258 ns/op
Iteration   6: 73.237 ns/op
Iteration   7: 73.334 ns/op
Iteration   8: 73.273 ns/op
Iteration   9: 73.370 ns/op
Iteration  10: 73.253 ns/op

# Run progress: 10.63% complete, ETA 00:34:26
# Fork: 2 of 2
# Warmup Iteration   1: 110.319 ns/op
# Warmup Iteration   2: 97.342 ns/op
# Warmup Iteration   3: 73.210 ns/op
Iteration   1: 73.189 ns/op
Iteration   2: 73.281 ns/op
Iteration   3: 73.217 ns/op
Iteration   4: 73.305 ns/op
Iteration   5: 73.233 ns/op
Iteration   6: 73.254 ns/op
Iteration   7: 73.227 ns/op
Iteration   8: 73.330 ns/op
Iteration   9: 73.320 ns/op
Iteration  10: 73.216 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.256 ±(99.9%) 0.045 ns/op [Average]
  (min, avg, max) = (73.189, 73.256, 73.370), stdev = 0.052
  CI (99.9%): [73.210, 73.301] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 10.69% complete, ETA 00:34:25
# Fork: 1 of 2
# Warmup Iteration   1: 217.510 ns/op
# Warmup Iteration   2: 209.697 ns/op
# Warmup Iteration   3: 112.539 ns/op
Iteration   1: 112.462 ns/op
Iteration   2: 115.396 ns/op
Iteration   3: 112.850 ns/op
Iteration   4: 112.380 ns/op
Iteration   5: 112.605 ns/op
Iteration   6: 114.575 ns/op
Iteration   7: 112.399 ns/op
Iteration   8: 116.785 ns/op
Iteration   9: 123.568 ns/op
Iteration  10: 112.480 ns/op

# Run progress: 10.76% complete, ETA 00:34:23
# Fork: 2 of 2
# Warmup Iteration   1: 217.399 ns/op
# Warmup Iteration   2: 193.920 ns/op
# Warmup Iteration   3: 112.559 ns/op
Iteration   1: 112.639 ns/op
Iteration   2: 115.339 ns/op
Iteration   3: 112.882 ns/op
Iteration   4: 112.479 ns/op
Iteration   5: 112.622 ns/op
Iteration   6: 114.677 ns/op
Iteration   7: 112.485 ns/op
Iteration   8: 116.741 ns/op
Iteration   9: 123.544 ns/op
Iteration  10: 112.471 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.569 ±(99.9%) 2.962 ns/op [Average]
  (min, avg, max) = (112.380, 114.569, 123.568), stdev = 3.411
  CI (99.9%): [111.607, 117.531] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 10.83% complete, ETA 00:34:21
# Fork: 1 of 2
# Warmup Iteration   1: 22.303 ns/op
# Warmup Iteration   2: 24.586 ns/op
# Warmup Iteration   3: 15.763 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.983 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.689 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.567 ns/op
Iteration   8: 19.152 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.572 ns/op

# Run progress: 10.90% complete, ETA 00:34:19
# Fork: 2 of 2
# Warmup Iteration   1: 22.588 ns/op
# Warmup Iteration   2: 25.904 ns/op
# Warmup Iteration   3: 15.761 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.944 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.933 ns/op [Average]
  (min, avg, max) = (15.567, 16.020, 19.152), stdev = 1.075
  CI (99.9%): [15.087, 16.954] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 10.97% complete, ETA 00:34:18
# Fork: 1 of 2
# Warmup Iteration   1: 134.871 ns/op
# Warmup Iteration   2: 117.479 ns/op
# Warmup Iteration   3: 78.306 ns/op
Iteration   1: 78.335 ns/op
Iteration   2: 78.351 ns/op
Iteration   3: 78.392 ns/op
Iteration   4: 78.687 ns/op
Iteration   5: 78.359 ns/op
Iteration   6: 78.358 ns/op
Iteration   7: 78.367 ns/op
Iteration   8: 81.224 ns/op
Iteration   9: 78.921 ns/op
Iteration  10: 78.332 ns/op

# Run progress: 11.04% complete, ETA 00:34:16
# Fork: 2 of 2
# Warmup Iteration   1: 129.192 ns/op
# Warmup Iteration   2: 113.765 ns/op
# Warmup Iteration   3: 78.345 ns/op
Iteration   1: 78.391 ns/op
Iteration   2: 78.399 ns/op
Iteration   3: 78.403 ns/op
Iteration   4: 78.771 ns/op
Iteration   5: 78.373 ns/op
Iteration   6: 78.386 ns/op
Iteration   7: 78.369 ns/op
Iteration   8: 81.268 ns/op
Iteration   9: 78.930 ns/op
Iteration  10: 78.385 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  78.750 ±(99.9%) 0.760 ns/op [Average]
  (min, avg, max) = (78.332, 78.750, 81.268), stdev = 0.875
  CI (99.9%): [77.990, 79.510] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 11.11% complete, ETA 00:34:15
# Fork: 1 of 2
# Warmup Iteration   1: 937.927 ns/op
# Warmup Iteration   2: 144.846 ns/op
# Warmup Iteration   3: 108.328 ns/op
Iteration   1: 108.347 ns/op
Iteration   2: 108.284 ns/op
Iteration   3: 108.532 ns/op
Iteration   4: 108.347 ns/op
Iteration   5: 108.311 ns/op
Iteration   6: 108.328 ns/op
Iteration   7: 108.407 ns/op
Iteration   8: 108.235 ns/op
Iteration   9: 108.678 ns/op
Iteration  10: 108.355 ns/op

# Run progress: 11.18% complete, ETA 00:34:13
# Fork: 2 of 2
# Warmup Iteration   1: 4236.816 ns/op
# Warmup Iteration   2: 147.482 ns/op
# Warmup Iteration   3: 108.311 ns/op
Iteration   1: 108.422 ns/op
Iteration   2: 108.382 ns/op
Iteration   3: 108.522 ns/op
Iteration   4: 108.258 ns/op
Iteration   5: 108.422 ns/op
Iteration   6: 108.395 ns/op
Iteration   7: 108.346 ns/op
Iteration   8: 108.305 ns/op
Iteration   9: 108.705 ns/op
Iteration  10: 108.443 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  108.401 ±(99.9%) 0.109 ns/op [Average]
  (min, avg, max) = (108.235, 108.401, 108.705), stdev = 0.126
  CI (99.9%): [108.292, 108.510] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 11.25% complete, ETA 00:34:11
# Fork: 1 of 2
# Warmup Iteration   1: 669.876 ns/op
# Warmup Iteration   2: 145.491 ns/op
# Warmup Iteration   3: 108.966 ns/op
Iteration   1: 108.992 ns/op
Iteration   2: 108.952 ns/op
Iteration   3: 109.010 ns/op
Iteration   4: 108.691 ns/op
Iteration   5: 108.810 ns/op
Iteration   6: 108.857 ns/op
Iteration   7: 109.232 ns/op
Iteration   8: 108.865 ns/op
Iteration   9: 108.758 ns/op
Iteration  10: 109.018 ns/op

# Run progress: 11.32% complete, ETA 00:34:10
# Fork: 2 of 2
# Warmup Iteration   1: 928.432 ns/op
# Warmup Iteration   2: 159.962 ns/op
# Warmup Iteration   3: 119.552 ns/op
Iteration   1: 121.371 ns/op
Iteration   2: 123.011 ns/op
Iteration   3: 109.545 ns/op
Iteration   4: 116.694 ns/op
Iteration   5: 116.939 ns/op
Iteration   6: 118.461 ns/op
Iteration   7: 120.819 ns/op
Iteration   8: 121.799 ns/op
Iteration   9: 122.676 ns/op
Iteration  10: 119.347 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  113.992 ±(99.9%) 5.121 ns/op [Average]
  (min, avg, max) = (108.691, 113.992, 123.011), stdev = 5.897
  CI (99.9%): [108.871, 119.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 11.39% complete, ETA 00:34:08
# Fork: 1 of 2
# Warmup Iteration   1: 186.267 ns/op
# Warmup Iteration   2: 147.923 ns/op
# Warmup Iteration   3: 110.563 ns/op
Iteration   1: 110.561 ns/op
Iteration   2: 110.772 ns/op
Iteration   3: 110.423 ns/op
Iteration   4: 110.508 ns/op
Iteration   5: 110.555 ns/op
Iteration   6: 110.547 ns/op
Iteration   7: 110.855 ns/op
Iteration   8: 110.702 ns/op
Iteration   9: 110.773 ns/op
Iteration  10: 110.554 ns/op

# Run progress: 11.46% complete, ETA 00:34:07
# Fork: 2 of 2
# Warmup Iteration   1: 185.638 ns/op
# Warmup Iteration   2: 147.561 ns/op
# Warmup Iteration   3: 110.575 ns/op
Iteration   1: 110.590 ns/op
Iteration   2: 110.751 ns/op
Iteration   3: 110.753 ns/op
Iteration   4: 110.757 ns/op
Iteration   5: 110.600 ns/op
Iteration   6: 110.589 ns/op
Iteration   7: 110.602 ns/op
Iteration   8: 110.899 ns/op
Iteration   9: 110.492 ns/op
Iteration  10: 110.566 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  110.642 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (110.423, 110.642, 110.899), stdev = 0.130
  CI (99.9%): [110.530, 110.755] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 11.53% complete, ETA 00:34:05
# Fork: 1 of 2
# Warmup Iteration   1: 214.681 ns/op
# Warmup Iteration   2: 197.172 ns/op
# Warmup Iteration   3: 109.987 ns/op
Iteration   1: 109.928 ns/op
Iteration   2: 110.308 ns/op
Iteration   3: 110.032 ns/op
Iteration   4: 110.226 ns/op
Iteration   5: 110.068 ns/op
Iteration   6: 109.894 ns/op
Iteration   7: 109.922 ns/op
Iteration   8: 113.201 ns/op
Iteration   9: 114.162 ns/op
Iteration  10: 109.907 ns/op

# Run progress: 11.60% complete, ETA 00:34:03
# Fork: 2 of 2
# Warmup Iteration   1: 227.307 ns/op
# Warmup Iteration   2: 187.724 ns/op
# Warmup Iteration   3: 109.808 ns/op
Iteration   1: 109.812 ns/op
Iteration   2: 110.337 ns/op
Iteration   3: 109.858 ns/op
Iteration   4: 110.215 ns/op
Iteration   5: 109.940 ns/op
Iteration   6: 109.886 ns/op
Iteration   7: 109.886 ns/op
Iteration   8: 113.067 ns/op
Iteration   9: 114.154 ns/op
Iteration  10: 109.994 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  110.740 ±(99.9%) 1.317 ns/op [Average]
  (min, avg, max) = (109.812, 110.740, 114.162), stdev = 1.517
  CI (99.9%): [109.423, 112.057] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 11.67% complete, ETA 00:34:02
# Fork: 1 of 2
# Warmup Iteration   1: 22.050 ns/op
# Warmup Iteration   2: 25.832 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.995 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.572 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.099 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 11.74% complete, ETA 00:34:00
# Fork: 2 of 2
# Warmup Iteration   1: 22.258 ns/op
# Warmup Iteration   2: 22.711 ns/op
# Warmup Iteration   3: 15.762 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.975 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.120 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.570 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.570, 16.021, 19.120), stdev = 1.068
  CI (99.9%): [15.093, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 11.81% complete, ETA 00:33:58
# Fork: 1 of 2
# Warmup Iteration   1: 1025.769 ns/op
# Warmup Iteration   2: 596.991 ns/op
# Warmup Iteration   3: 422.818 ns/op
Iteration   1: 422.508 ns/op
Iteration   2: 422.167 ns/op
Iteration   3: 423.245 ns/op
Iteration   4: 421.672 ns/op
Iteration   5: 423.019 ns/op
Iteration   6: 422.123 ns/op
Iteration   7: 421.226 ns/op
Iteration   8: 422.362 ns/op
Iteration   9: 421.606 ns/op
Iteration  10: 423.126 ns/op

# Run progress: 11.88% complete, ETA 00:33:57
# Fork: 2 of 2
# Warmup Iteration   1: 1023.003 ns/op
# Warmup Iteration   2: 601.537 ns/op
# Warmup Iteration   3: 416.778 ns/op
Iteration   1: 416.788 ns/op
Iteration   2: 416.515 ns/op
Iteration   3: 416.431 ns/op
Iteration   4: 417.159 ns/op
Iteration   5: 416.813 ns/op
Iteration   6: 429.256 ns/op
Iteration   7: 416.495 ns/op
Iteration   8: 420.027 ns/op
Iteration   9: 416.469 ns/op
Iteration  10: 416.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  420.279 ±(99.9%) 3.030 ns/op [Average]
  (min, avg, max) = (416.431, 420.279, 429.256), stdev = 3.490
  CI (99.9%): [417.249, 423.310] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 11.94% complete, ETA 00:33:55
# Fork: 1 of 2
# Warmup Iteration   1: 6437.647 ns/op
# Warmup Iteration   2: 890.158 ns/op
# Warmup Iteration   3: 649.588 ns/op
Iteration   1: 649.776 ns/op
Iteration   2: 649.745 ns/op
Iteration   3: 651.543 ns/op
Iteration   4: 655.264 ns/op
Iteration   5: 649.768 ns/op
Iteration   6: 649.775 ns/op
Iteration   7: 649.869 ns/op
Iteration   8: 649.628 ns/op
Iteration   9: 649.721 ns/op
Iteration  10: 649.895 ns/op

# Run progress: 12.01% complete, ETA 00:33:54
# Fork: 2 of 2
# Warmup Iteration   1: 4894.969 ns/op
# Warmup Iteration   2: 806.492 ns/op
# Warmup Iteration   3: 667.613 ns/op
Iteration   1: 668.310 ns/op
Iteration   2: 667.956 ns/op
Iteration   3: 668.057 ns/op
Iteration   4: 670.879 ns/op
Iteration   5: 669.369 ns/op
Iteration   6: 668.012 ns/op
Iteration   7: 669.334 ns/op
Iteration   8: 668.485 ns/op
Iteration   9: 669.087 ns/op
Iteration  10: 668.616 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  659.654 ±(99.9%) 8.243 ns/op [Average]
  (min, avg, max) = (649.628, 659.654, 670.879), stdev = 9.492
  CI (99.9%): [651.412, 667.897] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 12.08% complete, ETA 00:33:52
# Fork: 1 of 2
# Warmup Iteration   1: 6375.994 ns/op
# Warmup Iteration   2: 895.047 ns/op
# Warmup Iteration   3: 654.233 ns/op
Iteration   1: 654.189 ns/op
Iteration   2: 654.192 ns/op
Iteration   3: 655.648 ns/op
Iteration   4: 655.478 ns/op
Iteration   5: 654.453 ns/op
Iteration   6: 654.066 ns/op
Iteration   7: 654.387 ns/op
Iteration   8: 654.021 ns/op
Iteration   9: 654.253 ns/op
Iteration  10: 654.201 ns/op

# Run progress: 12.15% complete, ETA 00:33:51
# Fork: 2 of 2
# Warmup Iteration   1: 5509.240 ns/op
# Warmup Iteration   2: 969.815 ns/op
# Warmup Iteration   3: 656.335 ns/op
Iteration   1: 656.480 ns/op
Iteration   2: 655.255 ns/op
Iteration   3: 657.265 ns/op
Iteration   4: 658.281 ns/op
Iteration   5: 657.525 ns/op
Iteration   6: 656.632 ns/op
Iteration   7: 656.093 ns/op
Iteration   8: 656.473 ns/op
Iteration   9: 657.432 ns/op
Iteration  10: 655.447 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  655.589 ±(99.9%) 1.185 ns/op [Average]
  (min, avg, max) = (654.021, 655.589, 658.281), stdev = 1.365
  CI (99.9%): [654.403, 656.774] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 12.22% complete, ETA 00:33:49
# Fork: 1 of 2
# Warmup Iteration   1: 786.413 ns/op
# Warmup Iteration   2: 761.204 ns/op
# Warmup Iteration   3: 514.846 ns/op
Iteration   1: 515.079 ns/op
Iteration   2: 515.013 ns/op
Iteration   3: 515.033 ns/op
Iteration   4: 515.331 ns/op
Iteration   5: 515.344 ns/op
Iteration   6: 515.117 ns/op
Iteration   7: 514.882 ns/op
Iteration   8: 515.842 ns/op
Iteration   9: 515.031 ns/op
Iteration  10: 515.057 ns/op

# Run progress: 12.29% complete, ETA 00:33:47
# Fork: 2 of 2
# Warmup Iteration   1: 896.558 ns/op
# Warmup Iteration   2: 655.788 ns/op
# Warmup Iteration   3: 514.726 ns/op
Iteration   1: 515.067 ns/op
Iteration   2: 515.114 ns/op
Iteration   3: 515.182 ns/op
Iteration   4: 515.234 ns/op
Iteration   5: 515.086 ns/op
Iteration   6: 514.898 ns/op
Iteration   7: 514.996 ns/op
Iteration   8: 515.307 ns/op
Iteration   9: 515.415 ns/op
Iteration  10: 514.995 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  515.151 ±(99.9%) 0.190 ns/op [Average]
  (min, avg, max) = (514.882, 515.151, 515.842), stdev = 0.219
  CI (99.9%): [514.961, 515.341] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 12.36% complete, ETA 00:33:46
# Fork: 1 of 2
# Warmup Iteration   1: 1085.502 ns/op
# Warmup Iteration   2: 546.137 ns/op
# Warmup Iteration   3: 359.765 ns/op
Iteration   1: 360.034 ns/op
Iteration   2: 364.532 ns/op
Iteration   3: 360.149 ns/op
Iteration   4: 362.875 ns/op
Iteration   5: 360.603 ns/op
Iteration   6: 359.748 ns/op
Iteration   7: 359.591 ns/op
Iteration   8: 364.034 ns/op
Iteration   9: 364.587 ns/op
Iteration  10: 359.677 ns/op

# Run progress: 12.43% complete, ETA 00:33:44
# Fork: 2 of 2
# Warmup Iteration   1: 705.865 ns/op
# Warmup Iteration   2: 527.720 ns/op
# Warmup Iteration   3: 363.734 ns/op
Iteration   1: 363.993 ns/op
Iteration   2: 368.220 ns/op
Iteration   3: 363.898 ns/op
Iteration   4: 366.428 ns/op
Iteration   5: 365.103 ns/op
Iteration   6: 363.822 ns/op
Iteration   7: 364.185 ns/op
Iteration   8: 367.973 ns/op
Iteration   9: 370.776 ns/op
Iteration  10: 363.812 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  363.702 ±(99.9%) 2.711 ns/op [Average]
  (min, avg, max) = (359.591, 363.702, 370.776), stdev = 3.122
  CI (99.9%): [360.991, 366.413] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 12.50% complete, ETA 00:33:42
# Fork: 1 of 2
# Warmup Iteration   1: 22.102 ns/op
# Warmup Iteration   2: 24.839 ns/op
# Warmup Iteration   3: 15.769 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.588 ns/op
Iteration   3: 15.972 ns/op
Iteration   4: 15.947 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.585 ns/op
Iteration   7: 15.572 ns/op
Iteration   8: 19.109 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 12.57% complete, ETA 00:33:40
# Fork: 2 of 2
# Warmup Iteration   1: 22.171 ns/op
# Warmup Iteration   2: 22.739 ns/op
# Warmup Iteration   3: 15.762 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.572 ns/op
Iteration   3: 15.974 ns/op
Iteration   4: 15.927 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.573 ns/op
Iteration  10: 15.580 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.572, 16.017, 19.110), stdev = 1.068
  CI (99.9%): [15.090, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 12.64% complete, ETA 00:33:39
# Fork: 1 of 2
# Warmup Iteration   1: 2839.918 ns/op
# Warmup Iteration   2: 956.995 ns/op
# Warmup Iteration   3: 675.963 ns/op
Iteration   1: 676.374 ns/op
Iteration   2: 676.319 ns/op
Iteration   3: 676.438 ns/op
Iteration   4: 689.783 ns/op
Iteration   5: 676.189 ns/op
Iteration   6: 676.380 ns/op
Iteration   7: 676.416 ns/op
Iteration   8: 679.574 ns/op
Iteration   9: 676.134 ns/op
Iteration  10: 676.560 ns/op

# Run progress: 12.71% complete, ETA 00:33:37
# Fork: 2 of 2
# Warmup Iteration   1: 3246.713 ns/op
# Warmup Iteration   2: 919.703 ns/op
# Warmup Iteration   3: 680.600 ns/op
Iteration   1: 679.820 ns/op
Iteration   2: 680.119 ns/op
Iteration   3: 681.034 ns/op
Iteration   4: 680.847 ns/op
Iteration   5: 680.989 ns/op
Iteration   6: 679.455 ns/op
Iteration   7: 680.746 ns/op
Iteration   8: 685.379 ns/op
Iteration   9: 681.219 ns/op
Iteration  10: 680.546 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  679.516 ±(99.9%) 3.036 ns/op [Average]
  (min, avg, max) = (676.134, 679.516, 689.783), stdev = 3.496
  CI (99.9%): [676.480, 682.552] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 12.78% complete, ETA 00:33:35
# Fork: 1 of 2
# Warmup Iteration   1: 49020.441 ns/op
# Warmup Iteration   2: 2508.442 ns/op
# Warmup Iteration   3: 953.374 ns/op
Iteration   1: 815.702 ns/op
Iteration   2: 816.807 ns/op
Iteration   3: 817.724 ns/op
Iteration   4: 830.246 ns/op
Iteration   5: 816.027 ns/op
Iteration   6: 816.246 ns/op
Iteration   7: 816.609 ns/op
Iteration   8: 816.254 ns/op
Iteration   9: 816.782 ns/op
Iteration  10: 815.819 ns/op

# Run progress: 12.85% complete, ETA 00:33:34
# Fork: 2 of 2
# Warmup Iteration   1: 33403.905 ns/op
# Warmup Iteration   2: 1163.402 ns/op
# Warmup Iteration   3: 854.850 ns/op
Iteration   1: 796.678 ns/op
Iteration   2: 796.458 ns/op
Iteration   3: 796.356 ns/op
Iteration   4: 810.171 ns/op
Iteration   5: 796.244 ns/op
Iteration   6: 797.718 ns/op
Iteration   7: 796.012 ns/op
Iteration   8: 795.847 ns/op
Iteration   9: 796.685 ns/op
Iteration  10: 796.136 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  807.826 ±(99.9%) 9.646 ns/op [Average]
  (min, avg, max) = (795.847, 807.826, 830.246), stdev = 11.108
  CI (99.9%): [798.180, 817.472] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 12.92% complete, ETA 00:33:32
# Fork: 1 of 2
# Warmup Iteration   1: 36545.115 ns/op
# Warmup Iteration   2: 1281.837 ns/op
# Warmup Iteration   3: 928.684 ns/op
Iteration   1: 785.699 ns/op
Iteration   2: 785.408 ns/op
Iteration   3: 787.289 ns/op
Iteration   4: 801.626 ns/op
Iteration   5: 785.723 ns/op
Iteration   6: 785.671 ns/op
Iteration   7: 785.342 ns/op
Iteration   8: 784.940 ns/op
Iteration   9: 785.378 ns/op
Iteration  10: 785.106 ns/op

# Run progress: 12.99% complete, ETA 00:33:30
# Fork: 2 of 2
# Warmup Iteration   1: 36841.444 ns/op
# Warmup Iteration   2: 1241.461 ns/op
# Warmup Iteration   3: 922.562 ns/op
Iteration   1: 798.571 ns/op
Iteration   2: 803.169 ns/op
Iteration   3: 806.277 ns/op
Iteration   4: 813.761 ns/op
Iteration   5: 790.977 ns/op
Iteration   6: 796.958 ns/op
Iteration   7: 791.613 ns/op
Iteration   8: 793.420 ns/op
Iteration   9: 799.075 ns/op
Iteration  10: 799.047 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  793.252 ±(99.9%) 7.466 ns/op [Average]
  (min, avg, max) = (784.940, 793.252, 813.761), stdev = 8.597
  CI (99.9%): [785.787, 800.718] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 13.06% complete, ETA 00:33:29
# Fork: 1 of 2
# Warmup Iteration   1: 1016.244 ns/op
# Warmup Iteration   2: 853.387 ns/op
# Warmup Iteration   3: 663.105 ns/op
Iteration   1: 664.463 ns/op
Iteration   2: 672.805 ns/op
Iteration   3: 673.606 ns/op
Iteration   4: 673.405 ns/op
Iteration   5: 671.408 ns/op
Iteration   6: 670.052 ns/op
Iteration   7: 672.209 ns/op
Iteration   8: 662.554 ns/op
Iteration   9: 669.340 ns/op
Iteration  10: 675.231 ns/op

# Run progress: 13.13% complete, ETA 00:33:27
# Fork: 2 of 2
# Warmup Iteration   1: 1128.928 ns/op
# Warmup Iteration   2: 857.153 ns/op
# Warmup Iteration   3: 667.662 ns/op
Iteration   1: 664.130 ns/op
Iteration   2: 667.087 ns/op
Iteration   3: 669.151 ns/op
Iteration   4: 664.481 ns/op
Iteration   5: 668.210 ns/op
Iteration   6: 667.291 ns/op
Iteration   7: 669.173 ns/op
Iteration   8: 668.360 ns/op
Iteration   9: 669.536 ns/op
Iteration  10: 666.917 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  668.970 ±(99.9%) 3.020 ns/op [Average]
  (min, avg, max) = (662.554, 668.970, 675.231), stdev = 3.478
  CI (99.9%): [665.951, 671.990] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 13.19% complete, ETA 00:33:25
# Fork: 1 of 2
# Warmup Iteration   1: 855.218 ns/op
# Warmup Iteration   2: 591.311 ns/op
# Warmup Iteration   3: 396.401 ns/op
Iteration   1: 399.857 ns/op
Iteration   2: 397.241 ns/op
Iteration   3: 397.436 ns/op
Iteration   4: 399.263 ns/op
Iteration   5: 395.608 ns/op
Iteration   6: 396.610 ns/op
Iteration   7: 398.984 ns/op
Iteration   8: 410.470 ns/op
Iteration   9: 391.344 ns/op
Iteration  10: 396.338 ns/op

# Run progress: 13.26% complete, ETA 00:33:24
# Fork: 2 of 2
# Warmup Iteration   1: 792.457 ns/op
# Warmup Iteration   2: 596.542 ns/op
# Warmup Iteration   3: 389.910 ns/op
Iteration   1: 390.061 ns/op
Iteration   2: 400.514 ns/op
Iteration   3: 389.753 ns/op
Iteration   4: 400.723 ns/op
Iteration   5: 400.045 ns/op
Iteration   6: 399.377 ns/op
Iteration   7: 389.704 ns/op
Iteration   8: 388.110 ns/op
Iteration   9: 397.496 ns/op
Iteration  10: 400.092 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  396.951 ±(99.9%) 4.531 ns/op [Average]
  (min, avg, max) = (388.110, 396.951, 410.470), stdev = 5.218
  CI (99.9%): [392.421, 401.482] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 13.33% complete, ETA 00:33:22
# Fork: 1 of 2
# Warmup Iteration   1: 22.281 ns/op
# Warmup Iteration   2: 25.860 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.614 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.574 ns/op
Iteration   8: 19.115 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 13.40% complete, ETA 00:33:20
# Fork: 2 of 2
# Warmup Iteration   1: 22.342 ns/op
# Warmup Iteration   2: 25.846 ns/op
# Warmup Iteration   3: 15.776 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.949 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.100 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.574, 16.021, 19.115), stdev = 1.067
  CI (99.9%): [15.094, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 13.47% complete, ETA 00:33:18
# Fork: 1 of 2
# Warmup Iteration   1: 102.215 ns/op
# Warmup Iteration   2: 97.339 ns/op
# Warmup Iteration   3: 70.277 ns/op
Iteration   1: 70.299 ns/op
Iteration   2: 70.326 ns/op
Iteration   3: 70.485 ns/op
Iteration   4: 70.769 ns/op
Iteration   5: 70.546 ns/op
Iteration   6: 70.300 ns/op
Iteration   7: 70.297 ns/op
Iteration   8: 73.777 ns/op
Iteration   9: 71.099 ns/op
Iteration  10: 70.363 ns/op

# Run progress: 13.54% complete, ETA 00:33:17
# Fork: 2 of 2
# Warmup Iteration   1: 103.628 ns/op
# Warmup Iteration   2: 109.334 ns/op
# Warmup Iteration   3: 70.268 ns/op
Iteration   1: 70.317 ns/op
Iteration   2: 70.362 ns/op
Iteration   3: 70.444 ns/op
Iteration   4: 69.560 ns/op
Iteration   5: 70.543 ns/op
Iteration   6: 70.308 ns/op
Iteration   7: 70.304 ns/op
Iteration   8: 73.728 ns/op
Iteration   9: 71.027 ns/op
Iteration  10: 70.299 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.758 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (69.560, 70.758, 73.777), stdev = 1.070
  CI (99.9%): [69.828, 71.687] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 13.61% complete, ETA 00:33:15
# Fork: 1 of 2
# Warmup Iteration   1: 1148.495 ns/op
# Warmup Iteration   2: 102.192 ns/op
# Warmup Iteration   3: 70.671 ns/op
Iteration   1: 70.611 ns/op
Iteration   2: 70.736 ns/op
Iteration   3: 70.815 ns/op
Iteration   4: 70.659 ns/op
Iteration   5: 70.620 ns/op
Iteration   6: 70.728 ns/op
Iteration   7: 70.698 ns/op
Iteration   8: 73.254 ns/op
Iteration   9: 72.441 ns/op
Iteration  10: 70.651 ns/op

# Run progress: 13.68% complete, ETA 00:33:13
# Fork: 2 of 2
# Warmup Iteration   1: 1408.885 ns/op
# Warmup Iteration   2: 83.779 ns/op
# Warmup Iteration   3: 72.082 ns/op
Iteration   1: 72.080 ns/op
Iteration   2: 72.073 ns/op
Iteration   3: 71.950 ns/op
Iteration   4: 72.388 ns/op
Iteration   5: 72.243 ns/op
Iteration   6: 72.086 ns/op
Iteration   7: 72.120 ns/op
Iteration   8: 73.163 ns/op
Iteration   9: 72.482 ns/op
Iteration  10: 72.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.693 ±(99.9%) 0.784 ns/op [Average]
  (min, avg, max) = (70.611, 71.693, 73.254), stdev = 0.903
  CI (99.9%): [70.909, 72.476] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 13.75% complete, ETA 00:33:12
# Fork: 1 of 2
# Warmup Iteration   1: 242.730 ns/op
# Warmup Iteration   2: 93.647 ns/op
# Warmup Iteration   3: 71.211 ns/op
Iteration   1: 71.184 ns/op
Iteration   2: 70.967 ns/op
Iteration   3: 71.004 ns/op
Iteration   4: 71.195 ns/op
Iteration   5: 71.370 ns/op
Iteration   6: 71.142 ns/op
Iteration   7: 71.404 ns/op
Iteration   8: 72.250 ns/op
Iteration   9: 71.204 ns/op
Iteration  10: 71.140 ns/op

# Run progress: 13.82% complete, ETA 00:33:10
# Fork: 2 of 2
# Warmup Iteration   1: 251.590 ns/op
# Warmup Iteration   2: 95.147 ns/op
# Warmup Iteration   3: 71.169 ns/op
Iteration   1: 71.294 ns/op
Iteration   2: 71.109 ns/op
Iteration   3: 71.093 ns/op
Iteration   4: 71.230 ns/op
Iteration   5: 71.272 ns/op
Iteration   6: 71.282 ns/op
Iteration   7: 71.258 ns/op
Iteration   8: 72.215 ns/op
Iteration   9: 71.156 ns/op
Iteration  10: 71.184 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.298 ±(99.9%) 0.293 ns/op [Average]
  (min, avg, max) = (70.967, 71.298, 72.250), stdev = 0.337
  CI (99.9%): [71.005, 71.590] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 13.89% complete, ETA 00:33:09
# Fork: 1 of 2
# Warmup Iteration   1: 110.980 ns/op
# Warmup Iteration   2: 101.085 ns/op
# Warmup Iteration   3: 73.233 ns/op
Iteration   1: 73.281 ns/op
Iteration   2: 73.326 ns/op
Iteration   3: 73.149 ns/op
Iteration   4: 73.252 ns/op
Iteration   5: 73.404 ns/op
Iteration   6: 73.216 ns/op
Iteration   7: 73.234 ns/op
Iteration   8: 73.177 ns/op
Iteration   9: 73.344 ns/op
Iteration  10: 73.219 ns/op

# Run progress: 13.96% complete, ETA 00:33:07
# Fork: 2 of 2
# Warmup Iteration   1: 108.935 ns/op
# Warmup Iteration   2: 112.746 ns/op
# Warmup Iteration   3: 73.216 ns/op
Iteration   1: 73.192 ns/op
Iteration   2: 73.302 ns/op
Iteration   3: 73.139 ns/op
Iteration   4: 73.254 ns/op
Iteration   5: 73.243 ns/op
Iteration   6: 73.287 ns/op
Iteration   7: 73.394 ns/op
Iteration   8: 74.553 ns/op
Iteration   9: 74.493 ns/op
Iteration  10: 73.329 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.389 ±(99.9%) 0.343 ns/op [Average]
  (min, avg, max) = (73.139, 73.389, 74.553), stdev = 0.395
  CI (99.9%): [73.047, 73.732] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 14.03% complete, ETA 00:33:05
# Fork: 1 of 2
# Warmup Iteration   1: 202.352 ns/op
# Warmup Iteration   2: 200.414 ns/op
# Warmup Iteration   3: 112.664 ns/op
Iteration   1: 112.603 ns/op
Iteration   2: 115.422 ns/op
Iteration   3: 112.846 ns/op
Iteration   4: 112.498 ns/op
Iteration   5: 112.669 ns/op
Iteration   6: 114.730 ns/op
Iteration   7: 112.642 ns/op
Iteration   8: 116.833 ns/op
Iteration   9: 123.577 ns/op
Iteration  10: 112.740 ns/op

# Run progress: 14.10% complete, ETA 00:33:04
# Fork: 2 of 2
# Warmup Iteration   1: 198.980 ns/op
# Warmup Iteration   2: 199.430 ns/op
# Warmup Iteration   3: 112.561 ns/op
Iteration   1: 112.484 ns/op
Iteration   2: 115.402 ns/op
Iteration   3: 112.821 ns/op
Iteration   4: 112.628 ns/op
Iteration   5: 112.785 ns/op
Iteration   6: 114.743 ns/op
Iteration   7: 112.536 ns/op
Iteration   8: 116.745 ns/op
Iteration   9: 123.649 ns/op
Iteration  10: 112.439 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.640 ±(99.9%) 2.953 ns/op [Average]
  (min, avg, max) = (112.439, 114.640, 123.649), stdev = 3.400
  CI (99.9%): [111.687, 117.592] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 14.17% complete, ETA 00:33:02
# Fork: 1 of 2
# Warmup Iteration   1: 22.019 ns/op
# Warmup Iteration   2: 26.014 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.575 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.975 ns/op
Iteration   4: 15.938 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.119 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.588 ns/op

# Run progress: 14.24% complete, ETA 00:33:00
# Fork: 2 of 2
# Warmup Iteration   1: 22.268 ns/op
# Warmup Iteration   2: 26.097 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.935 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.126 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.931 ns/op [Average]
  (min, avg, max) = (15.575, 16.020, 19.126), stdev = 1.072
  CI (99.9%): [15.089, 16.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 14.31% complete, ETA 00:32:59
# Fork: 1 of 2
# Warmup Iteration   1: 104.779 ns/op
# Warmup Iteration   2: 97.300 ns/op
# Warmup Iteration   3: 70.275 ns/op
Iteration   1: 70.305 ns/op
Iteration   2: 70.310 ns/op
Iteration   3: 70.551 ns/op
Iteration   4: 70.324 ns/op
Iteration   5: 70.457 ns/op
Iteration   6: 70.296 ns/op
Iteration   7: 70.305 ns/op
Iteration   8: 73.719 ns/op
Iteration   9: 71.018 ns/op
Iteration  10: 70.327 ns/op

# Run progress: 14.37% complete, ETA 00:32:57
# Fork: 2 of 2
# Warmup Iteration   1: 102.246 ns/op
# Warmup Iteration   2: 103.354 ns/op
# Warmup Iteration   3: 70.295 ns/op
Iteration   1: 70.283 ns/op
Iteration   2: 70.287 ns/op
Iteration   3: 70.475 ns/op
Iteration   4: 70.774 ns/op
Iteration   5: 70.623 ns/op
Iteration   6: 70.295 ns/op
Iteration   7: 70.300 ns/op
Iteration   8: 73.697 ns/op
Iteration   9: 71.065 ns/op
Iteration  10: 70.345 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.788 ±(99.9%) 0.891 ns/op [Average]
  (min, avg, max) = (70.283, 70.788, 73.719), stdev = 1.027
  CI (99.9%): [69.896, 71.679] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 14.44% complete, ETA 00:32:55
# Fork: 1 of 2
# Warmup Iteration   1: 709.079 ns/op
# Warmup Iteration   2: 94.050 ns/op
# Warmup Iteration   3: 72.041 ns/op
Iteration   1: 72.079 ns/op
Iteration   2: 72.039 ns/op
Iteration   3: 71.996 ns/op
Iteration   4: 71.738 ns/op
Iteration   5: 72.253 ns/op
Iteration   6: 72.088 ns/op
Iteration   7: 72.077 ns/op
Iteration   8: 73.130 ns/op
Iteration   9: 72.740 ns/op
Iteration  10: 72.119 ns/op

# Run progress: 14.51% complete, ETA 00:32:54
# Fork: 2 of 2
# Warmup Iteration   1: 453.294 ns/op
# Warmup Iteration   2: 95.694 ns/op
# Warmup Iteration   3: 70.617 ns/op
Iteration   1: 70.859 ns/op
Iteration   2: 70.856 ns/op
Iteration   3: 70.791 ns/op
Iteration   4: 70.735 ns/op
Iteration   5: 70.712 ns/op
Iteration   6: 70.743 ns/op
Iteration   7: 70.634 ns/op
Iteration   8: 71.793 ns/op
Iteration   9: 71.300 ns/op
Iteration  10: 70.682 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.568 ±(99.9%) 0.670 ns/op [Average]
  (min, avg, max) = (70.634, 71.568, 73.130), stdev = 0.771
  CI (99.9%): [70.898, 72.238] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 14.58% complete, ETA 00:32:52
# Fork: 1 of 2
# Warmup Iteration   1: 278.163 ns/op
# Warmup Iteration   2: 93.990 ns/op
# Warmup Iteration   3: 71.128 ns/op
Iteration   1: 71.360 ns/op
Iteration   2: 71.094 ns/op
Iteration   3: 71.101 ns/op
Iteration   4: 71.223 ns/op
Iteration   5: 71.141 ns/op
Iteration   6: 71.155 ns/op
Iteration   7: 71.083 ns/op
Iteration   8: 72.247 ns/op
Iteration   9: 71.162 ns/op
Iteration  10: 71.194 ns/op

# Run progress: 14.65% complete, ETA 00:32:51
# Fork: 2 of 2
# Warmup Iteration   1: 234.717 ns/op
# Warmup Iteration   2: 113.075 ns/op
# Warmup Iteration   3: 71.144 ns/op
Iteration   1: 71.233 ns/op
Iteration   2: 71.063 ns/op
Iteration   3: 71.110 ns/op
Iteration   4: 71.226 ns/op
Iteration   5: 71.484 ns/op
Iteration   6: 71.178 ns/op
Iteration   7: 71.214 ns/op
Iteration   8: 72.268 ns/op
Iteration   9: 71.157 ns/op
Iteration  10: 71.183 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.294 ±(99.9%) 0.298 ns/op [Average]
  (min, avg, max) = (71.063, 71.294, 72.268), stdev = 0.343
  CI (99.9%): [70.996, 71.592] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 14.72% complete, ETA 00:32:49
# Fork: 1 of 2
# Warmup Iteration   1: 109.998 ns/op
# Warmup Iteration   2: 105.309 ns/op
# Warmup Iteration   3: 73.218 ns/op
Iteration   1: 73.212 ns/op
Iteration   2: 73.336 ns/op
Iteration   3: 73.274 ns/op
Iteration   4: 73.174 ns/op
Iteration   5: 73.214 ns/op
Iteration   6: 73.244 ns/op
Iteration   7: 73.198 ns/op
Iteration   8: 73.201 ns/op
Iteration   9: 73.245 ns/op
Iteration  10: 73.208 ns/op

# Run progress: 14.79% complete, ETA 00:32:47
# Fork: 2 of 2
# Warmup Iteration   1: 110.077 ns/op
# Warmup Iteration   2: 95.524 ns/op
# Warmup Iteration   3: 73.383 ns/op
Iteration   1: 73.291 ns/op
Iteration   2: 73.303 ns/op
Iteration   3: 73.181 ns/op
Iteration   4: 73.291 ns/op
Iteration   5: 73.220 ns/op
Iteration   6: 73.258 ns/op
Iteration   7: 73.219 ns/op
Iteration   8: 73.428 ns/op
Iteration   9: 73.359 ns/op
Iteration  10: 73.257 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.256 ±(99.9%) 0.056 ns/op [Average]
  (min, avg, max) = (73.174, 73.256, 73.428), stdev = 0.065
  CI (99.9%): [73.200, 73.312] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 14.86% complete, ETA 00:32:46
# Fork: 1 of 2
# Warmup Iteration   1: 197.987 ns/op
# Warmup Iteration   2: 206.485 ns/op
# Warmup Iteration   3: 112.582 ns/op
Iteration   1: 112.447 ns/op
Iteration   2: 115.405 ns/op
Iteration   3: 112.803 ns/op
Iteration   4: 112.407 ns/op
Iteration   5: 112.595 ns/op
Iteration   6: 114.556 ns/op
Iteration   7: 112.410 ns/op
Iteration   8: 116.810 ns/op
Iteration   9: 123.643 ns/op
Iteration  10: 112.540 ns/op

# Run progress: 14.93% complete, ETA 00:32:44
# Fork: 2 of 2
# Warmup Iteration   1: 197.312 ns/op
# Warmup Iteration   2: 199.253 ns/op
# Warmup Iteration   3: 112.584 ns/op
Iteration   1: 112.591 ns/op
Iteration   2: 115.393 ns/op
Iteration   3: 112.904 ns/op
Iteration   4: 112.396 ns/op
Iteration   5: 112.619 ns/op
Iteration   6: 114.691 ns/op
Iteration   7: 112.451 ns/op
Iteration   8: 116.746 ns/op
Iteration   9: 123.593 ns/op
Iteration  10: 112.444 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.572 ±(99.9%) 2.982 ns/op [Average]
  (min, avg, max) = (112.396, 114.572, 123.643), stdev = 3.434
  CI (99.9%): [111.590, 117.554] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 15.00% complete, ETA 00:32:42
# Fork: 1 of 2
# Warmup Iteration   1: 22.206 ns/op
# Warmup Iteration   2: 24.763 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.572 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.936 ns/op
Iteration   5: 15.666 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.118 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.582 ns/op

# Run progress: 15.07% complete, ETA 00:32:41
# Fork: 2 of 2
# Warmup Iteration   1: 22.524 ns/op
# Warmup Iteration   2: 25.339 ns/op
# Warmup Iteration   3: 15.779 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.950 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.574 ns/op
Iteration   8: 19.116 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.572 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.572, 16.018, 19.118), stdev = 1.071
  CI (99.9%): [15.088, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 15.14% complete, ETA 00:32:39
# Fork: 1 of 2
# Warmup Iteration   1: 111.814 ns/op
# Warmup Iteration   2: 105.496 ns/op
# Warmup Iteration   3: 76.787 ns/op
Iteration   1: 76.828 ns/op
Iteration   2: 76.812 ns/op
Iteration   3: 76.791 ns/op
Iteration   4: 77.153 ns/op
Iteration   5: 76.901 ns/op
Iteration   6: 76.789 ns/op
Iteration   7: 76.848 ns/op
Iteration   8: 79.775 ns/op
Iteration   9: 77.361 ns/op
Iteration  10: 76.792 ns/op

# Run progress: 15.21% complete, ETA 00:32:38
# Fork: 2 of 2
# Warmup Iteration   1: 134.346 ns/op
# Warmup Iteration   2: 115.084 ns/op
# Warmup Iteration   3: 76.738 ns/op
Iteration   1: 76.801 ns/op
Iteration   2: 76.784 ns/op
Iteration   3: 76.792 ns/op
Iteration   4: 77.165 ns/op
Iteration   5: 76.827 ns/op
Iteration   6: 76.775 ns/op
Iteration   7: 76.822 ns/op
Iteration   8: 79.579 ns/op
Iteration   9: 77.365 ns/op
Iteration  10: 76.802 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  77.188 ±(99.9%) 0.758 ns/op [Average]
  (min, avg, max) = (76.775, 77.188, 79.775), stdev = 0.873
  CI (99.9%): [76.430, 77.946] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 15.28% complete, ETA 00:32:36
# Fork: 1 of 2
# Warmup Iteration   1: 1386.654 ns/op
# Warmup Iteration   2: 149.385 ns/op
# Warmup Iteration   3: 115.489 ns/op
Iteration   1: 115.395 ns/op
Iteration   2: 115.429 ns/op
Iteration   3: 115.559 ns/op
Iteration   4: 115.519 ns/op
Iteration   5: 115.590 ns/op
Iteration   6: 115.416 ns/op
Iteration   7: 115.474 ns/op
Iteration   8: 107.495 ns/op
Iteration   9: 115.379 ns/op
Iteration  10: 115.482 ns/op

# Run progress: 15.35% complete, ETA 00:32:34
# Fork: 2 of 2
# Warmup Iteration   1: 651.810 ns/op
# Warmup Iteration   2: 142.713 ns/op
# Warmup Iteration   3: 107.297 ns/op
Iteration   1: 107.321 ns/op
Iteration   2: 107.168 ns/op
Iteration   3: 107.306 ns/op
Iteration   4: 107.213 ns/op
Iteration   5: 107.494 ns/op
Iteration   6: 107.297 ns/op
Iteration   7: 107.474 ns/op
Iteration   8: 115.741 ns/op
Iteration   9: 107.432 ns/op
Iteration  10: 107.386 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  111.429 ±(99.9%) 3.627 ns/op [Average]
  (min, avg, max) = (107.168, 111.429, 115.741), stdev = 4.177
  CI (99.9%): [107.801, 115.056] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 15.42% complete, ETA 00:32:33
# Fork: 1 of 2
# Warmup Iteration   1: 536.432 ns/op
# Warmup Iteration   2: 160.807 ns/op
# Warmup Iteration   3: 107.337 ns/op
Iteration   1: 107.328 ns/op
Iteration   2: 107.246 ns/op
Iteration   3: 107.245 ns/op
Iteration   4: 107.410 ns/op
Iteration   5: 107.355 ns/op
Iteration   6: 107.323 ns/op
Iteration   7: 107.380 ns/op
Iteration   8: 107.822 ns/op
Iteration   9: 107.272 ns/op
Iteration  10: 107.317 ns/op

# Run progress: 15.49% complete, ETA 00:32:31
# Fork: 2 of 2
# Warmup Iteration   1: 1022.908 ns/op
# Warmup Iteration   2: 140.512 ns/op
# Warmup Iteration   3: 107.277 ns/op
Iteration   1: 107.278 ns/op
Iteration   2: 107.219 ns/op
Iteration   3: 107.114 ns/op
Iteration   4: 107.224 ns/op
Iteration   5: 107.350 ns/op
Iteration   6: 107.330 ns/op
Iteration   7: 107.316 ns/op
Iteration   8: 107.875 ns/op
Iteration   9: 107.619 ns/op
Iteration  10: 107.361 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  107.369 ±(99.9%) 0.166 ns/op [Average]
  (min, avg, max) = (107.114, 107.369, 107.875), stdev = 0.191
  CI (99.9%): [107.203, 107.535] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 15.56% complete, ETA 00:32:29
# Fork: 1 of 2
# Warmup Iteration   1: 118.140 ns/op
# Warmup Iteration   2: 97.467 ns/op
# Warmup Iteration   3: 73.205 ns/op
Iteration   1: 73.254 ns/op
Iteration   2: 73.383 ns/op
Iteration   3: 73.200 ns/op
Iteration   4: 73.258 ns/op
Iteration   5: 73.268 ns/op
Iteration   6: 73.263 ns/op
Iteration   7: 73.201 ns/op
Iteration   8: 73.208 ns/op
Iteration   9: 73.392 ns/op
Iteration  10: 73.267 ns/op

# Run progress: 15.63% complete, ETA 00:32:28
# Fork: 2 of 2
# Warmup Iteration   1: 109.726 ns/op
# Warmup Iteration   2: 102.635 ns/op
# Warmup Iteration   3: 73.336 ns/op
Iteration   1: 73.290 ns/op
Iteration   2: 73.191 ns/op
Iteration   3: 73.341 ns/op
Iteration   4: 73.339 ns/op
Iteration   5: 73.212 ns/op
Iteration   6: 73.290 ns/op
Iteration   7: 73.320 ns/op
Iteration   8: 73.231 ns/op
Iteration   9: 73.263 ns/op
Iteration  10: 73.191 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.268 ±(99.9%) 0.054 ns/op [Average]
  (min, avg, max) = (73.191, 73.268, 73.392), stdev = 0.062
  CI (99.9%): [73.214, 73.322] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 15.69% complete, ETA 00:32:26
# Fork: 1 of 2
# Warmup Iteration   1: 220.364 ns/op
# Warmup Iteration   2: 215.636 ns/op
# Warmup Iteration   3: 124.776 ns/op
Iteration   1: 124.794 ns/op
Iteration   2: 126.317 ns/op
Iteration   3: 124.866 ns/op
Iteration   4: 124.936 ns/op
Iteration   5: 124.837 ns/op
Iteration   6: 124.805 ns/op
Iteration   7: 124.844 ns/op
Iteration   8: 128.097 ns/op
Iteration   9: 130.549 ns/op
Iteration  10: 125.107 ns/op

# Run progress: 15.76% complete, ETA 00:32:24
# Fork: 2 of 2
# Warmup Iteration   1: 223.265 ns/op
# Warmup Iteration   2: 220.479 ns/op
# Warmup Iteration   3: 124.764 ns/op
Iteration   1: 124.801 ns/op
Iteration   2: 126.329 ns/op
Iteration   3: 124.782 ns/op
Iteration   4: 124.970 ns/op
Iteration   5: 124.861 ns/op
Iteration   6: 124.808 ns/op
Iteration   7: 124.796 ns/op
Iteration   8: 128.065 ns/op
Iteration   9: 130.546 ns/op
Iteration  10: 124.813 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.896 ±(99.9%) 1.647 ns/op [Average]
  (min, avg, max) = (124.782, 125.896, 130.549), stdev = 1.897
  CI (99.9%): [124.249, 127.543] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 15.83% complete, ETA 00:32:23
# Fork: 1 of 2
# Warmup Iteration   1: 23.422 ns/op
# Warmup Iteration   2: 24.632 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.585 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.990 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.081 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 15.90% complete, ETA 00:32:21
# Fork: 2 of 2
# Warmup Iteration   1: 21.997 ns/op
# Warmup Iteration   2: 26.428 ns/op
# Warmup Iteration   3: 15.752 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.969 ns/op
Iteration   4: 15.959 ns/op
Iteration   5: 15.669 ns/op
Iteration   6: 15.574 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.118 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.925 ns/op [Average]
  (min, avg, max) = (15.574, 16.018, 19.118), stdev = 1.065
  CI (99.9%): [15.093, 16.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 15.97% complete, ETA 00:32:19
# Fork: 1 of 2
# Warmup Iteration   1: 610.068 ns/op
# Warmup Iteration   2: 337.510 ns/op
# Warmup Iteration   3: 231.933 ns/op
Iteration   1: 233.141 ns/op
Iteration   2: 232.059 ns/op
Iteration   3: 231.895 ns/op
Iteration   4: 231.725 ns/op
Iteration   5: 231.887 ns/op
Iteration   6: 231.826 ns/op
Iteration   7: 232.334 ns/op
Iteration   8: 237.222 ns/op
Iteration   9: 232.068 ns/op
Iteration  10: 233.113 ns/op

# Run progress: 16.04% complete, ETA 00:32:18
# Fork: 2 of 2
# Warmup Iteration   1: 557.670 ns/op
# Warmup Iteration   2: 315.354 ns/op
# Warmup Iteration   3: 231.963 ns/op
Iteration   1: 232.006 ns/op
Iteration   2: 233.530 ns/op
Iteration   3: 232.211 ns/op
Iteration   4: 232.652 ns/op
Iteration   5: 232.161 ns/op
Iteration   6: 232.661 ns/op
Iteration   7: 232.116 ns/op
Iteration   8: 236.178 ns/op
Iteration   9: 232.272 ns/op
Iteration  10: 231.838 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  232.745 ±(99.9%) 1.257 ns/op [Average]
  (min, avg, max) = (231.725, 232.745, 237.222), stdev = 1.448
  CI (99.9%): [231.488, 234.002] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 16.11% complete, ETA 00:32:16
# Fork: 1 of 2
# Warmup Iteration   1: 1491.396 ns/op
# Warmup Iteration   2: 527.407 ns/op
# Warmup Iteration   3: 406.856 ns/op
Iteration   1: 407.111 ns/op
Iteration   2: 406.967 ns/op
Iteration   3: 407.507 ns/op
Iteration   4: 406.973 ns/op
Iteration   5: 407.040 ns/op
Iteration   6: 406.899 ns/op
Iteration   7: 406.965 ns/op
Iteration   8: 407.810 ns/op
Iteration   9: 408.297 ns/op
Iteration  10: 406.980 ns/op

# Run progress: 16.18% complete, ETA 00:32:15
# Fork: 2 of 2
# Warmup Iteration   1: 2336.147 ns/op
# Warmup Iteration   2: 595.258 ns/op
# Warmup Iteration   3: 411.662 ns/op
Iteration   1: 411.827 ns/op
Iteration   2: 411.850 ns/op
Iteration   3: 412.366 ns/op
Iteration   4: 412.021 ns/op
Iteration   5: 411.625 ns/op
Iteration   6: 411.987 ns/op
Iteration   7: 411.751 ns/op
Iteration   8: 411.583 ns/op
Iteration   9: 411.743 ns/op
Iteration  10: 411.856 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  409.558 ±(99.9%) 2.075 ns/op [Average]
  (min, avg, max) = (406.899, 409.558, 412.366), stdev = 2.390
  CI (99.9%): [407.483, 411.633] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 16.25% complete, ETA 00:32:13
# Fork: 1 of 2
# Warmup Iteration   1: 2138.229 ns/op
# Warmup Iteration   2: 662.152 ns/op
# Warmup Iteration   3: 520.924 ns/op
Iteration   1: 521.022 ns/op
Iteration   2: 521.064 ns/op
Iteration   3: 523.903 ns/op
Iteration   4: 523.609 ns/op
Iteration   5: 520.618 ns/op
Iteration   6: 521.294 ns/op
Iteration   7: 520.933 ns/op
Iteration   8: 522.385 ns/op
Iteration   9: 521.007 ns/op
Iteration  10: 521.141 ns/op

# Run progress: 16.32% complete, ETA 00:32:11
# Fork: 2 of 2
# Warmup Iteration   1: 2553.620 ns/op
# Warmup Iteration   2: 663.438 ns/op
# Warmup Iteration   3: 510.540 ns/op
Iteration   1: 510.823 ns/op
Iteration   2: 511.289 ns/op
Iteration   3: 513.190 ns/op
Iteration   4: 513.209 ns/op
Iteration   5: 510.721 ns/op
Iteration   6: 511.285 ns/op
Iteration   7: 510.629 ns/op
Iteration   8: 524.595 ns/op
Iteration   9: 524.021 ns/op
Iteration  10: 510.949 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  517.884 ±(99.9%) 4.771 ns/op [Average]
  (min, avg, max) = (510.629, 517.884, 524.595), stdev = 5.494
  CI (99.9%): [513.114, 522.655] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 16.39% complete, ETA 00:32:10
# Fork: 1 of 2
# Warmup Iteration   1: 831.077 ns/op
# Warmup Iteration   2: 652.126 ns/op
# Warmup Iteration   3: 460.291 ns/op
Iteration   1: 460.356 ns/op
Iteration   2: 460.272 ns/op
Iteration   3: 460.167 ns/op
Iteration   4: 463.146 ns/op
Iteration   5: 460.481 ns/op
Iteration   6: 460.436 ns/op
Iteration   7: 460.490 ns/op
Iteration   8: 461.314 ns/op
Iteration   9: 460.514 ns/op
Iteration  10: 460.346 ns/op

# Run progress: 16.46% complete, ETA 00:32:08
# Fork: 2 of 2
# Warmup Iteration   1: 722.229 ns/op
# Warmup Iteration   2: 583.865 ns/op
# Warmup Iteration   3: 460.265 ns/op
Iteration   1: 460.470 ns/op
Iteration   2: 460.346 ns/op
Iteration   3: 460.326 ns/op
Iteration   4: 461.048 ns/op
Iteration   5: 460.455 ns/op
Iteration   6: 460.247 ns/op
Iteration   7: 460.339 ns/op
Iteration   8: 461.308 ns/op
Iteration   9: 460.471 ns/op
Iteration  10: 460.270 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  460.640 ±(99.9%) 0.585 ns/op [Average]
  (min, avg, max) = (460.167, 460.640, 463.146), stdev = 0.674
  CI (99.9%): [460.055, 461.226] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 16.53% complete, ETA 00:32:07
# Fork: 1 of 2
# Warmup Iteration   1: 1062.132 ns/op
# Warmup Iteration   2: 567.530 ns/op
# Warmup Iteration   3: 384.377 ns/op
Iteration   1: 384.276 ns/op
Iteration   2: 384.555 ns/op
Iteration   3: 385.112 ns/op
Iteration   4: 388.247 ns/op
Iteration   5: 384.720 ns/op
Iteration   6: 384.696 ns/op
Iteration   7: 384.817 ns/op
Iteration   8: 388.988 ns/op
Iteration   9: 391.348 ns/op
Iteration  10: 384.619 ns/op

# Run progress: 16.60% complete, ETA 00:32:05
# Fork: 2 of 2
# Warmup Iteration   1: 857.680 ns/op
# Warmup Iteration   2: 602.789 ns/op
# Warmup Iteration   3: 377.944 ns/op
Iteration   1: 378.431 ns/op
Iteration   2: 378.768 ns/op
Iteration   3: 378.888 ns/op
Iteration   4: 382.119 ns/op
Iteration   5: 378.293 ns/op
Iteration   6: 378.376 ns/op
Iteration   7: 377.879 ns/op
Iteration   8: 382.497 ns/op
Iteration   9: 385.066 ns/op
Iteration  10: 378.029 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  382.986 ±(99.9%) 3.501 ns/op [Average]
  (min, avg, max) = (377.879, 382.986, 391.348), stdev = 4.031
  CI (99.9%): [379.485, 386.487] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 16.67% complete, ETA 00:32:03
# Fork: 1 of 2
# Warmup Iteration   1: 22.053 ns/op
# Warmup Iteration   2: 29.007 ns/op
# Warmup Iteration   3: 18.776 ns/op
Iteration   1: 18.790 ns/op
Iteration   2: 18.789 ns/op
Iteration   3: 18.891 ns/op
Iteration   4: 19.185 ns/op
Iteration   5: 18.892 ns/op
Iteration   6: 18.959 ns/op
Iteration   7: 18.960 ns/op
Iteration   8: 19.077 ns/op
Iteration   9: 18.959 ns/op
Iteration  10: 18.966 ns/op

# Run progress: 16.74% complete, ETA 00:32:02
# Fork: 2 of 2
# Warmup Iteration   1: 22.484 ns/op
# Warmup Iteration   2: 30.722 ns/op
# Warmup Iteration   3: 18.769 ns/op
Iteration   1: 18.783 ns/op
Iteration   2: 18.770 ns/op
Iteration   3: 18.880 ns/op
Iteration   4: 19.175 ns/op
Iteration   5: 18.879 ns/op
Iteration   6: 18.944 ns/op
Iteration   7: 18.945 ns/op
Iteration   8: 19.082 ns/op
Iteration   9: 18.957 ns/op
Iteration  10: 18.951 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.942 ±(99.9%) 0.103 ns/op [Average]
  (min, avg, max) = (18.770, 18.942, 19.185), stdev = 0.119
  CI (99.9%): [18.839, 19.045] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 16.81% complete, ETA 00:32:00
# Fork: 1 of 2
# Warmup Iteration   1: 236.296 ns/op
# Warmup Iteration   2: 197.271 ns/op
# Warmup Iteration   3: 136.708 ns/op
Iteration   1: 136.771 ns/op
Iteration   2: 136.890 ns/op
Iteration   3: 136.933 ns/op
Iteration   4: 139.502 ns/op
Iteration   5: 136.756 ns/op
Iteration   6: 136.688 ns/op
Iteration   7: 136.571 ns/op
Iteration   8: 138.943 ns/op
Iteration   9: 137.410 ns/op
Iteration  10: 136.563 ns/op

# Run progress: 16.88% complete, ETA 00:31:59
# Fork: 2 of 2
# Warmup Iteration   1: 238.938 ns/op
# Warmup Iteration   2: 192.995 ns/op
# Warmup Iteration   3: 136.728 ns/op
Iteration   1: 136.631 ns/op
Iteration   2: 136.678 ns/op
Iteration   3: 136.628 ns/op
Iteration   4: 139.771 ns/op
Iteration   5: 136.657 ns/op
Iteration   6: 136.759 ns/op
Iteration   7: 136.637 ns/op
Iteration   8: 138.983 ns/op
Iteration   9: 137.571 ns/op
Iteration  10: 136.713 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  137.303 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (136.563, 137.303, 139.771), stdev = 1.068
  CI (99.9%): [136.375, 138.230] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 16.94% complete, ETA 00:31:57
# Fork: 1 of 2
# Warmup Iteration   1: 1290.803 ns/op
# Warmup Iteration   2: 211.648 ns/op
# Warmup Iteration   3: 156.384 ns/op
Iteration   1: 156.257 ns/op
Iteration   2: 156.235 ns/op
Iteration   3: 156.273 ns/op
Iteration   4: 156.691 ns/op
Iteration   5: 156.181 ns/op
Iteration   6: 156.378 ns/op
Iteration   7: 156.132 ns/op
Iteration   8: 159.102 ns/op
Iteration   9: 158.573 ns/op
Iteration  10: 156.403 ns/op

# Run progress: 17.01% complete, ETA 00:31:55
# Fork: 2 of 2
# Warmup Iteration   1: 416.978 ns/op
# Warmup Iteration   2: 213.436 ns/op
# Warmup Iteration   3: 156.969 ns/op
Iteration   1: 156.989 ns/op
Iteration   2: 157.053 ns/op
Iteration   3: 157.208 ns/op
Iteration   4: 158.335 ns/op
Iteration   5: 157.120 ns/op
Iteration   6: 157.054 ns/op
Iteration   7: 156.999 ns/op
Iteration   8: 159.849 ns/op
Iteration   9: 158.499 ns/op
Iteration  10: 156.941 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  157.214 ±(99.9%) 0.937 ns/op [Average]
  (min, avg, max) = (156.132, 157.214, 159.849), stdev = 1.079
  CI (99.9%): [156.277, 158.150] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 17.08% complete, ETA 00:31:54
# Fork: 1 of 2
# Warmup Iteration   1: 725.325 ns/op
# Warmup Iteration   2: 300.401 ns/op
# Warmup Iteration   3: 212.404 ns/op
Iteration   1: 212.259 ns/op
Iteration   2: 212.340 ns/op
Iteration   3: 216.243 ns/op
Iteration   4: 212.303 ns/op
Iteration   5: 212.494 ns/op
Iteration   6: 212.184 ns/op
Iteration   7: 212.512 ns/op
Iteration   8: 214.978 ns/op
Iteration   9: 212.359 ns/op
Iteration  10: 212.427 ns/op

# Run progress: 17.15% complete, ETA 00:31:52
# Fork: 2 of 2
# Warmup Iteration   1: 591.746 ns/op
# Warmup Iteration   2: 302.675 ns/op
# Warmup Iteration   3: 209.695 ns/op
Iteration   1: 209.742 ns/op
Iteration   2: 209.705 ns/op
Iteration   3: 213.659 ns/op
Iteration   4: 209.718 ns/op
Iteration   5: 209.725 ns/op
Iteration   6: 209.754 ns/op
Iteration   7: 209.719 ns/op
Iteration   8: 212.543 ns/op
Iteration   9: 209.941 ns/op
Iteration  10: 209.817 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  211.721 ±(99.9%) 1.661 ns/op [Average]
  (min, avg, max) = (209.705, 211.721, 216.243), stdev = 1.912
  CI (99.9%): [210.060, 213.382] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 17.22% complete, ETA 00:31:51
# Fork: 1 of 2
# Warmup Iteration   1: 110.817 ns/op
# Warmup Iteration   2: 112.791 ns/op
# Warmup Iteration   3: 70.664 ns/op
Iteration   1: 70.587 ns/op
Iteration   2: 70.657 ns/op
Iteration   3: 70.532 ns/op
Iteration   4: 70.687 ns/op
Iteration   5: 70.608 ns/op
Iteration   6: 70.598 ns/op
Iteration   7: 70.566 ns/op
Iteration   8: 73.425 ns/op
Iteration   9: 72.864 ns/op
Iteration  10: 70.946 ns/op

# Run progress: 17.29% complete, ETA 00:31:49
# Fork: 2 of 2
# Warmup Iteration   1: 115.597 ns/op
# Warmup Iteration   2: 101.372 ns/op
# Warmup Iteration   3: 70.645 ns/op
Iteration   1: 70.587 ns/op
Iteration   2: 70.702 ns/op
Iteration   3: 70.567 ns/op
Iteration   4: 70.687 ns/op
Iteration   5: 70.609 ns/op
Iteration   6: 70.551 ns/op
Iteration   7: 71.119 ns/op
Iteration   8: 73.331 ns/op
Iteration   9: 72.831 ns/op
Iteration  10: 70.974 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  71.171 ±(99.9%) 0.882 ns/op [Average]
  (min, avg, max) = (70.532, 71.171, 73.425), stdev = 1.015
  CI (99.9%): [70.290, 72.053] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 17.36% complete, ETA 00:31:47
# Fork: 1 of 2
# Warmup Iteration   1: 234.634 ns/op
# Warmup Iteration   2: 224.238 ns/op
# Warmup Iteration   3: 162.027 ns/op
Iteration   1: 162.066 ns/op
Iteration   2: 162.685 ns/op
Iteration   3: 162.177 ns/op
Iteration   4: 163.438 ns/op
Iteration   5: 162.775 ns/op
Iteration   6: 162.099 ns/op
Iteration   7: 162.196 ns/op
Iteration   8: 163.124 ns/op
Iteration   9: 173.018 ns/op
Iteration  10: 162.149 ns/op

# Run progress: 17.43% complete, ETA 00:31:46
# Fork: 2 of 2
# Warmup Iteration   1: 249.035 ns/op
# Warmup Iteration   2: 236.637 ns/op
# Warmup Iteration   3: 161.981 ns/op
Iteration   1: 162.086 ns/op
Iteration   2: 162.684 ns/op
Iteration   3: 162.070 ns/op
Iteration   4: 163.524 ns/op
Iteration   5: 162.883 ns/op
Iteration   6: 162.100 ns/op
Iteration   7: 162.246 ns/op
Iteration   8: 163.288 ns/op
Iteration   9: 173.089 ns/op
Iteration  10: 162.137 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  163.592 ±(99.9%) 2.842 ns/op [Average]
  (min, avg, max) = (162.066, 163.592, 173.089), stdev = 3.273
  CI (99.9%): [160.750, 166.434] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 17.50% complete, ETA 00:31:44
# Fork: 1 of 2
# Warmup Iteration   1: 22.167 ns/op
# Warmup Iteration   2: 27.589 ns/op
# Warmup Iteration   3: 18.773 ns/op
Iteration   1: 18.789 ns/op
Iteration   2: 18.771 ns/op
Iteration   3: 18.884 ns/op
Iteration   4: 19.185 ns/op
Iteration   5: 18.899 ns/op
Iteration   6: 18.947 ns/op
Iteration   7: 18.952 ns/op
Iteration   8: 19.075 ns/op
Iteration   9: 18.954 ns/op
Iteration  10: 18.950 ns/op

# Run progress: 17.57% complete, ETA 00:31:42
# Fork: 2 of 2
# Warmup Iteration   1: 22.362 ns/op
# Warmup Iteration   2: 26.987 ns/op
# Warmup Iteration   3: 18.784 ns/op
Iteration   1: 18.775 ns/op
Iteration   2: 18.770 ns/op
Iteration   3: 18.875 ns/op
Iteration   4: 19.174 ns/op
Iteration   5: 18.916 ns/op
Iteration   6: 18.947 ns/op
Iteration   7: 18.949 ns/op
Iteration   8: 19.080 ns/op
Iteration   9: 18.944 ns/op
Iteration  10: 18.942 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.939 ±(99.9%) 0.104 ns/op [Average]
  (min, avg, max) = (18.770, 18.939, 19.185), stdev = 0.119
  CI (99.9%): [18.835, 19.042] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 17.64% complete, ETA 00:31:41
# Fork: 1 of 2
# Warmup Iteration   1: 109.838 ns/op
# Warmup Iteration   2: 103.611 ns/op
# Warmup Iteration   3: 72.787 ns/op
Iteration   1: 72.817 ns/op
Iteration   2: 72.810 ns/op
Iteration   3: 72.852 ns/op
Iteration   4: 73.661 ns/op
Iteration   5: 72.888 ns/op
Iteration   6: 72.799 ns/op
Iteration   7: 72.977 ns/op
Iteration   8: 73.563 ns/op
Iteration   9: 73.148 ns/op
Iteration  10: 73.184 ns/op

# Run progress: 17.71% complete, ETA 00:31:39
# Fork: 2 of 2
# Warmup Iteration   1: 102.277 ns/op
# Warmup Iteration   2: 111.934 ns/op
# Warmup Iteration   3: 72.806 ns/op
Iteration   1: 72.842 ns/op
Iteration   2: 72.817 ns/op
Iteration   3: 72.950 ns/op
Iteration   4: 73.676 ns/op
Iteration   5: 72.923 ns/op
Iteration   6: 72.827 ns/op
Iteration   7: 72.799 ns/op
Iteration   8: 73.584 ns/op
Iteration   9: 73.178 ns/op
Iteration  10: 73.135 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.071 ±(99.9%) 0.270 ns/op [Average]
  (min, avg, max) = (72.799, 73.071, 73.676), stdev = 0.311
  CI (99.9%): [72.801, 73.341] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 17.78% complete, ETA 00:31:38
# Fork: 1 of 2
# Warmup Iteration   1: 718.676 ns/op
# Warmup Iteration   2: 97.817 ns/op
# Warmup Iteration   3: 69.137 ns/op
Iteration   1: 69.613 ns/op
Iteration   2: 70.113 ns/op
Iteration   3: 69.065 ns/op
Iteration   4: 69.251 ns/op
Iteration   5: 69.346 ns/op
Iteration   6: 69.965 ns/op
Iteration   7: 69.349 ns/op
Iteration   8: 72.466 ns/op
Iteration   9: 69.457 ns/op
Iteration  10: 69.484 ns/op

# Run progress: 17.85% complete, ETA 00:31:36
# Fork: 2 of 2
# Warmup Iteration   1: 538.167 ns/op
# Warmup Iteration   2: 99.509 ns/op
# Warmup Iteration   3: 68.069 ns/op
Iteration   1: 68.148 ns/op
Iteration   2: 68.107 ns/op
Iteration   3: 67.942 ns/op
Iteration   4: 68.020 ns/op
Iteration   5: 68.413 ns/op
Iteration   6: 68.111 ns/op
Iteration   7: 68.050 ns/op
Iteration   8: 71.220 ns/op
Iteration   9: 68.157 ns/op
Iteration  10: 68.039 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  69.116 ±(99.9%) 1.040 ns/op [Average]
  (min, avg, max) = (67.942, 69.116, 72.466), stdev = 1.197
  CI (99.9%): [68.076, 70.156] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 17.92% complete, ETA 00:31:34
# Fork: 1 of 2
# Warmup Iteration   1: 255.068 ns/op
# Warmup Iteration   2: 98.303 ns/op
# Warmup Iteration   3: 68.405 ns/op
Iteration   1: 68.318 ns/op
Iteration   2: 68.319 ns/op
Iteration   3: 68.328 ns/op
Iteration   4: 68.410 ns/op
Iteration   5: 68.261 ns/op
Iteration   6: 68.295 ns/op
Iteration   7: 67.348 ns/op
Iteration   8: 71.216 ns/op
Iteration   9: 68.754 ns/op
Iteration  10: 68.295 ns/op

# Run progress: 17.99% complete, ETA 00:31:33
# Fork: 2 of 2
# Warmup Iteration   1: 1098.684 ns/op
# Warmup Iteration   2: 103.112 ns/op
# Warmup Iteration   3: 68.437 ns/op
Iteration   1: 68.311 ns/op
Iteration   2: 68.317 ns/op
Iteration   3: 68.318 ns/op
Iteration   4: 68.378 ns/op
Iteration   5: 68.349 ns/op
Iteration   6: 68.310 ns/op
Iteration   7: 67.335 ns/op
Iteration   8: 71.293 ns/op
Iteration   9: 68.768 ns/op
Iteration  10: 68.307 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  68.561 ±(99.9%) 0.854 ns/op [Average]
  (min, avg, max) = (67.335, 68.561, 71.293), stdev = 0.984
  CI (99.9%): [67.707, 69.416] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 18.06% complete, ETA 00:31:31
# Fork: 1 of 2
# Warmup Iteration   1: 117.707 ns/op
# Warmup Iteration   2: 112.986 ns/op
# Warmup Iteration   3: 70.687 ns/op
Iteration   1: 70.572 ns/op
Iteration   2: 70.640 ns/op
Iteration   3: 70.510 ns/op
Iteration   4: 70.701 ns/op
Iteration   5: 70.617 ns/op
Iteration   6: 70.599 ns/op
Iteration   7: 70.997 ns/op
Iteration   8: 73.237 ns/op
Iteration   9: 70.713 ns/op
Iteration  10: 70.966 ns/op

# Run progress: 18.13% complete, ETA 00:31:30
# Fork: 2 of 2
# Warmup Iteration   1: 113.242 ns/op
# Warmup Iteration   2: 100.956 ns/op
# Warmup Iteration   3: 70.681 ns/op
Iteration   1: 70.572 ns/op
Iteration   2: 70.694 ns/op
Iteration   3: 70.509 ns/op
Iteration   4: 70.684 ns/op
Iteration   5: 70.599 ns/op
Iteration   6: 70.547 ns/op
Iteration   7: 70.590 ns/op
Iteration   8: 73.308 ns/op
Iteration   9: 70.696 ns/op
Iteration  10: 70.916 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.933 ±(99.9%) 0.705 ns/op [Average]
  (min, avg, max) = (70.509, 70.933, 73.308), stdev = 0.812
  CI (99.9%): [70.228, 71.638] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 18.19% complete, ETA 00:31:28
# Fork: 1 of 2
# Warmup Iteration   1: 195.905 ns/op
# Warmup Iteration   2: 204.722 ns/op
# Warmup Iteration   3: 141.420 ns/op
Iteration   1: 142.109 ns/op
Iteration   2: 144.301 ns/op
Iteration   3: 142.446 ns/op
Iteration   4: 143.092 ns/op
Iteration   5: 141.687 ns/op
Iteration   6: 143.924 ns/op
Iteration   7: 141.883 ns/op
Iteration   8: 142.658 ns/op
Iteration   9: 159.013 ns/op
Iteration  10: 142.432 ns/op

# Run progress: 18.26% complete, ETA 00:31:26
# Fork: 2 of 2
# Warmup Iteration   1: 198.864 ns/op
# Warmup Iteration   2: 205.276 ns/op
# Warmup Iteration   3: 141.131 ns/op
Iteration   1: 141.650 ns/op
Iteration   2: 144.205 ns/op
Iteration   3: 141.857 ns/op
Iteration   4: 143.043 ns/op
Iteration   5: 141.536 ns/op
Iteration   6: 143.896 ns/op
Iteration   7: 141.662 ns/op
Iteration   8: 142.420 ns/op
Iteration   9: 158.993 ns/op
Iteration  10: 142.166 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  144.249 ±(99.9%) 4.448 ns/op [Average]
  (min, avg, max) = (141.536, 144.249, 159.013), stdev = 5.122
  CI (99.9%): [139.801, 148.696] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 18.33% complete, ETA 00:31:25
# Fork: 1 of 2
# Warmup Iteration   1: 22.460 ns/op
# Warmup Iteration   2: 31.669 ns/op
# Warmup Iteration   3: 18.789 ns/op
Iteration   1: 18.776 ns/op
Iteration   2: 18.783 ns/op
Iteration   3: 18.881 ns/op
Iteration   4: 19.183 ns/op
Iteration   5: 18.899 ns/op
Iteration   6: 18.952 ns/op
Iteration   7: 18.941 ns/op
Iteration   8: 19.081 ns/op
Iteration   9: 18.938 ns/op
Iteration  10: 18.955 ns/op

# Run progress: 18.40% complete, ETA 00:31:23
# Fork: 2 of 2
# Warmup Iteration   1: 22.083 ns/op
# Warmup Iteration   2: 30.389 ns/op
# Warmup Iteration   3: 18.768 ns/op
Iteration   1: 18.767 ns/op
Iteration   2: 18.783 ns/op
Iteration   3: 18.876 ns/op
Iteration   4: 19.179 ns/op
Iteration   5: 18.888 ns/op
Iteration   6: 18.944 ns/op
Iteration   7: 18.947 ns/op
Iteration   8: 19.073 ns/op
Iteration   9: 18.949 ns/op
Iteration  10: 18.949 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.937 ±(99.9%) 0.104 ns/op [Average]
  (min, avg, max) = (18.767, 18.937, 19.183), stdev = 0.120
  CI (99.9%): [18.833, 19.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 18.47% complete, ETA 00:31:21
# Fork: 1 of 2
# Warmup Iteration   1: 102.841 ns/op
# Warmup Iteration   2: 113.285 ns/op
# Warmup Iteration   3: 72.873 ns/op
Iteration   1: 72.807 ns/op
Iteration   2: 72.842 ns/op
Iteration   3: 72.816 ns/op
Iteration   4: 73.600 ns/op
Iteration   5: 72.910 ns/op
Iteration   6: 72.824 ns/op
Iteration   7: 72.989 ns/op
Iteration   8: 73.587 ns/op
Iteration   9: 73.062 ns/op
Iteration  10: 73.152 ns/op

# Run progress: 18.54% complete, ETA 00:31:20
# Fork: 2 of 2
# Warmup Iteration   1: 102.934 ns/op
# Warmup Iteration   2: 111.749 ns/op
# Warmup Iteration   3: 72.804 ns/op
Iteration   1: 72.869 ns/op
Iteration   2: 72.983 ns/op
Iteration   3: 72.914 ns/op
Iteration   4: 73.591 ns/op
Iteration   5: 72.987 ns/op
Iteration   6: 72.880 ns/op
Iteration   7: 72.796 ns/op
Iteration   8: 73.540 ns/op
Iteration   9: 73.050 ns/op
Iteration  10: 72.983 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.059 ±(99.9%) 0.246 ns/op [Average]
  (min, avg, max) = (72.796, 73.059, 73.600), stdev = 0.283
  CI (99.9%): [72.813, 73.305] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 18.61% complete, ETA 00:31:18
# Fork: 1 of 2
# Warmup Iteration   1: 506.699 ns/op
# Warmup Iteration   2: 99.248 ns/op
# Warmup Iteration   3: 68.155 ns/op
Iteration   1: 68.076 ns/op
Iteration   2: 68.152 ns/op
Iteration   3: 67.962 ns/op
Iteration   4: 68.180 ns/op
Iteration   5: 68.359 ns/op
Iteration   6: 68.135 ns/op
Iteration   7: 68.211 ns/op
Iteration   8: 71.131 ns/op
Iteration   9: 68.207 ns/op
Iteration  10: 68.111 ns/op

# Run progress: 18.68% complete, ETA 00:31:17
# Fork: 2 of 2
# Warmup Iteration   1: 555.130 ns/op
# Warmup Iteration   2: 104.834 ns/op
# Warmup Iteration   3: 69.079 ns/op
Iteration   1: 70.184 ns/op
Iteration   2: 70.363 ns/op
Iteration   3: 69.390 ns/op
Iteration   4: 69.423 ns/op
Iteration   5: 69.341 ns/op
Iteration   6: 70.191 ns/op
Iteration   7: 69.191 ns/op
Iteration   8: 72.433 ns/op
Iteration   9: 69.341 ns/op
Iteration  10: 69.497 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  69.194 ±(99.9%) 1.047 ns/op [Average]
  (min, avg, max) = (67.962, 69.194, 72.433), stdev = 1.206
  CI (99.9%): [68.147, 70.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 18.75% complete, ETA 00:31:15
# Fork: 1 of 2
# Warmup Iteration   1: 535.797 ns/op
# Warmup Iteration   2: 114.017 ns/op
# Warmup Iteration   3: 68.449 ns/op
Iteration   1: 68.288 ns/op
Iteration   2: 68.320 ns/op
Iteration   3: 68.319 ns/op
Iteration   4: 68.398 ns/op
Iteration   5: 68.340 ns/op
Iteration   6: 68.311 ns/op
Iteration   7: 67.506 ns/op
Iteration   8: 71.197 ns/op
Iteration   9: 68.774 ns/op
Iteration  10: 68.295 ns/op

# Run progress: 18.82% complete, ETA 00:31:13
# Fork: 2 of 2
# Warmup Iteration   1: 246.816 ns/op
# Warmup Iteration   2: 97.112 ns/op
# Warmup Iteration   3: 68.465 ns/op
Iteration   1: 68.306 ns/op
Iteration   2: 68.310 ns/op
Iteration   3: 68.339 ns/op
Iteration   4: 68.400 ns/op
Iteration   5: 68.288 ns/op
Iteration   6: 68.296 ns/op
Iteration   7: 68.186 ns/op
Iteration   8: 71.201 ns/op
Iteration   9: 68.813 ns/op
Iteration  10: 68.293 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  68.609 ±(99.9%) 0.798 ns/op [Average]
  (min, avg, max) = (67.506, 68.609, 71.201), stdev = 0.919
  CI (99.9%): [67.811, 69.407] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 18.89% complete, ETA 00:31:12
# Fork: 1 of 2
# Warmup Iteration   1: 109.397 ns/op
# Warmup Iteration   2: 122.875 ns/op
# Warmup Iteration   3: 70.672 ns/op
Iteration   1: 70.592 ns/op
Iteration   2: 70.673 ns/op
Iteration   3: 70.533 ns/op
Iteration   4: 70.717 ns/op
Iteration   5: 70.609 ns/op
Iteration   6: 70.583 ns/op
Iteration   7: 70.584 ns/op
Iteration   8: 73.361 ns/op
Iteration   9: 70.690 ns/op
Iteration  10: 70.950 ns/op

# Run progress: 18.96% complete, ETA 00:31:10
# Fork: 2 of 2
# Warmup Iteration   1: 107.558 ns/op
# Warmup Iteration   2: 102.368 ns/op
# Warmup Iteration   3: 70.675 ns/op
Iteration   1: 70.591 ns/op
Iteration   2: 70.676 ns/op
Iteration   3: 70.503 ns/op
Iteration   4: 70.681 ns/op
Iteration   5: 70.607 ns/op
Iteration   6: 70.582 ns/op
Iteration   7: 70.579 ns/op
Iteration   8: 73.423 ns/op
Iteration   9: 70.692 ns/op
Iteration  10: 70.917 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.927 ±(99.9%) 0.739 ns/op [Average]
  (min, avg, max) = (70.503, 70.927, 73.423), stdev = 0.850
  CI (99.9%): [70.189, 71.666] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 19.03% complete, ETA 00:31:08
# Fork: 1 of 2
# Warmup Iteration   1: 218.113 ns/op
# Warmup Iteration   2: 206.773 ns/op
# Warmup Iteration   3: 141.920 ns/op
Iteration   1: 142.260 ns/op
Iteration   2: 144.511 ns/op
Iteration   3: 142.553 ns/op
Iteration   4: 143.358 ns/op
Iteration   5: 141.691 ns/op
Iteration   6: 143.955 ns/op
Iteration   7: 142.439 ns/op
Iteration   8: 142.862 ns/op
Iteration   9: 158.971 ns/op
Iteration  10: 142.591 ns/op

# Run progress: 19.10% complete, ETA 00:31:07
# Fork: 2 of 2
# Warmup Iteration   1: 206.780 ns/op
# Warmup Iteration   2: 219.639 ns/op
# Warmup Iteration   3: 141.632 ns/op
Iteration   1: 141.887 ns/op
Iteration   2: 144.396 ns/op
Iteration   3: 142.202 ns/op
Iteration   4: 143.200 ns/op
Iteration   5: 141.704 ns/op
Iteration   6: 143.942 ns/op
Iteration   7: 142.327 ns/op
Iteration   8: 142.146 ns/op
Iteration   9: 159.043 ns/op
Iteration  10: 142.553 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  144.430 ±(99.9%) 4.390 ns/op [Average]
  (min, avg, max) = (141.691, 144.430, 159.043), stdev = 5.056
  CI (99.9%): [140.039, 148.820] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 19.17% complete, ETA 00:31:05
# Fork: 1 of 2
# Warmup Iteration   1: 22.624 ns/op
# Warmup Iteration   2: 26.904 ns/op
# Warmup Iteration   3: 18.788 ns/op
Iteration   1: 18.787 ns/op
Iteration   2: 18.780 ns/op
Iteration   3: 18.873 ns/op
Iteration   4: 19.172 ns/op
Iteration   5: 18.894 ns/op
Iteration   6: 18.956 ns/op
Iteration   7: 18.939 ns/op
Iteration   8: 19.079 ns/op
Iteration   9: 18.946 ns/op
Iteration  10: 18.960 ns/op

# Run progress: 19.24% complete, ETA 00:31:03
# Fork: 2 of 2
# Warmup Iteration   1: 22.153 ns/op
# Warmup Iteration   2: 27.125 ns/op
# Warmup Iteration   3: 18.774 ns/op
Iteration   1: 18.770 ns/op
Iteration   2: 18.788 ns/op
Iteration   3: 18.872 ns/op
Iteration   4: 19.175 ns/op
Iteration   5: 18.891 ns/op
Iteration   6: 18.959 ns/op
Iteration   7: 18.960 ns/op
Iteration   8: 19.074 ns/op
Iteration   9: 18.949 ns/op
Iteration  10: 18.951 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.939 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (18.770, 18.939, 19.175), stdev = 0.118
  CI (99.9%): [18.837, 19.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 19.31% complete, ETA 00:31:02
# Fork: 1 of 2
# Warmup Iteration   1: 112.712 ns/op
# Warmup Iteration   2: 138.609 ns/op
# Warmup Iteration   3: 79.076 ns/op
Iteration   1: 79.263 ns/op
Iteration   2: 79.121 ns/op
Iteration   3: 79.264 ns/op
Iteration   4: 79.440 ns/op
Iteration   5: 79.216 ns/op
Iteration   6: 79.063 ns/op
Iteration   7: 79.185 ns/op
Iteration   8: 79.390 ns/op
Iteration   9: 79.326 ns/op
Iteration  10: 79.238 ns/op

# Run progress: 19.38% complete, ETA 00:31:00
# Fork: 2 of 2
# Warmup Iteration   1: 119.402 ns/op
# Warmup Iteration   2: 114.183 ns/op
# Warmup Iteration   3: 79.256 ns/op
Iteration   1: 79.331 ns/op
Iteration   2: 79.348 ns/op
Iteration   3: 79.312 ns/op
Iteration   4: 79.666 ns/op
Iteration   5: 79.639 ns/op
Iteration   6: 79.560 ns/op
Iteration   7: 79.269 ns/op
Iteration   8: 79.083 ns/op
Iteration   9: 79.646 ns/op
Iteration  10: 79.448 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  79.340 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (79.063, 79.340, 79.666), stdev = 0.181
  CI (99.9%): [79.184, 79.497] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 19.44% complete, ETA 00:30:59
# Fork: 1 of 2
# Warmup Iteration   1: 752.255 ns/op
# Warmup Iteration   2: 145.100 ns/op
# Warmup Iteration   3: 105.060 ns/op
Iteration   1: 105.272 ns/op
Iteration   2: 105.596 ns/op
Iteration   3: 105.316 ns/op
Iteration   4: 105.078 ns/op
Iteration   5: 105.175 ns/op
Iteration   6: 105.548 ns/op
Iteration   7: 105.045 ns/op
Iteration   8: 121.298 ns/op
Iteration   9: 105.264 ns/op
Iteration  10: 105.277 ns/op

# Run progress: 19.51% complete, ETA 00:30:57
# Fork: 2 of 2
# Warmup Iteration   1: 759.598 ns/op
# Warmup Iteration   2: 143.253 ns/op
# Warmup Iteration   3: 105.353 ns/op
Iteration   1: 105.066 ns/op
Iteration   2: 105.286 ns/op
Iteration   3: 105.072 ns/op
Iteration   4: 104.665 ns/op
Iteration   5: 105.309 ns/op
Iteration   6: 105.248 ns/op
Iteration   7: 104.920 ns/op
Iteration   8: 121.281 ns/op
Iteration   9: 105.270 ns/op
Iteration  10: 105.259 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  106.812 ±(99.9%) 4.303 ns/op [Average]
  (min, avg, max) = (104.665, 106.812, 121.298), stdev = 4.955
  CI (99.9%): [102.509, 111.115] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 19.58% complete, ETA 00:30:56
# Fork: 1 of 2
# Warmup Iteration   1: 531.521 ns/op
# Warmup Iteration   2: 164.611 ns/op
# Warmup Iteration   3: 113.951 ns/op
Iteration   1: 113.787 ns/op
Iteration   2: 113.828 ns/op
Iteration   3: 113.803 ns/op
Iteration   4: 113.834 ns/op
Iteration   5: 113.754 ns/op
Iteration   6: 113.735 ns/op
Iteration   7: 113.819 ns/op
Iteration   8: 107.414 ns/op
Iteration   9: 113.810 ns/op
Iteration  10: 114.129 ns/op

# Run progress: 19.65% complete, ETA 00:30:54
# Fork: 2 of 2
# Warmup Iteration   1: 831.934 ns/op
# Warmup Iteration   2: 150.153 ns/op
# Warmup Iteration   3: 113.766 ns/op
Iteration   1: 113.816 ns/op
Iteration   2: 113.914 ns/op
Iteration   3: 113.728 ns/op
Iteration   4: 113.824 ns/op
Iteration   5: 113.791 ns/op
Iteration   6: 113.786 ns/op
Iteration   7: 113.837 ns/op
Iteration   8: 107.359 ns/op
Iteration   9: 113.788 ns/op
Iteration  10: 114.081 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  113.192 ±(99.9%) 1.726 ns/op [Average]
  (min, avg, max) = (107.359, 113.192, 114.129), stdev = 1.988
  CI (99.9%): [111.466, 114.918] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 19.72% complete, ETA 00:30:52
# Fork: 1 of 2
# Warmup Iteration   1: 109.106 ns/op
# Warmup Iteration   2: 111.055 ns/op
# Warmup Iteration   3: 70.666 ns/op
Iteration   1: 70.557 ns/op
Iteration   2: 70.659 ns/op
Iteration   3: 70.492 ns/op
Iteration   4: 70.708 ns/op
Iteration   5: 70.622 ns/op
Iteration   6: 70.578 ns/op
Iteration   7: 70.583 ns/op
Iteration   8: 73.213 ns/op
Iteration   9: 70.661 ns/op
Iteration  10: 70.983 ns/op

# Run progress: 19.79% complete, ETA 00:30:51
# Fork: 2 of 2
# Warmup Iteration   1: 112.952 ns/op
# Warmup Iteration   2: 98.844 ns/op
# Warmup Iteration   3: 70.675 ns/op
Iteration   1: 70.581 ns/op
Iteration   2: 70.637 ns/op
Iteration   3: 70.609 ns/op
Iteration   4: 70.726 ns/op
Iteration   5: 70.615 ns/op
Iteration   6: 70.573 ns/op
Iteration   7: 70.614 ns/op
Iteration   8: 73.333 ns/op
Iteration   9: 70.645 ns/op
Iteration  10: 70.931 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.916 ±(99.9%) 0.707 ns/op [Average]
  (min, avg, max) = (70.492, 70.916, 73.333), stdev = 0.815
  CI (99.9%): [70.209, 71.623] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 19.86% complete, ETA 00:30:49
# Fork: 1 of 2
# Warmup Iteration   1: 210.431 ns/op
# Warmup Iteration   2: 225.900 ns/op
# Warmup Iteration   3: 152.837 ns/op
Iteration   1: 152.811 ns/op
Iteration   2: 154.291 ns/op
Iteration   3: 152.803 ns/op
Iteration   4: 153.600 ns/op
Iteration   5: 153.542 ns/op
Iteration   6: 153.235 ns/op
Iteration   7: 153.244 ns/op
Iteration   8: 153.841 ns/op
Iteration   9: 165.069 ns/op
Iteration  10: 153.463 ns/op

# Run progress: 19.93% complete, ETA 00:30:47
# Fork: 2 of 2
# Warmup Iteration   1: 213.424 ns/op
# Warmup Iteration   2: 223.761 ns/op
# Warmup Iteration   3: 152.607 ns/op
Iteration   1: 152.675 ns/op
Iteration   2: 160.125 ns/op
Iteration   3: 152.661 ns/op
Iteration   4: 153.044 ns/op
Iteration   5: 153.569 ns/op
Iteration   6: 153.217 ns/op
Iteration   7: 153.269 ns/op
Iteration   8: 153.676 ns/op
Iteration   9: 164.896 ns/op
Iteration  10: 153.177 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.810 ±(99.9%) 3.316 ns/op [Average]
  (min, avg, max) = (152.661, 154.810, 165.069), stdev = 3.818
  CI (99.9%): [151.495, 158.126] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 20.00% complete, ETA 00:30:46
# Fork: 1 of 2
# Warmup Iteration   1: 22.349 ns/op
# Warmup Iteration   2: 30.820 ns/op
# Warmup Iteration   3: 18.789 ns/op
Iteration   1: 18.769 ns/op
Iteration   2: 18.772 ns/op
Iteration   3: 18.875 ns/op
Iteration   4: 19.193 ns/op
Iteration   5: 18.896 ns/op
Iteration   6: 18.957 ns/op
Iteration   7: 18.949 ns/op
Iteration   8: 19.079 ns/op
Iteration   9: 18.950 ns/op
Iteration  10: 18.949 ns/op

# Run progress: 20.07% complete, ETA 00:30:44
# Fork: 2 of 2
# Warmup Iteration   1: 22.424 ns/op
# Warmup Iteration   2: 30.706 ns/op
# Warmup Iteration   3: 18.769 ns/op
Iteration   1: 18.774 ns/op
Iteration   2: 18.783 ns/op
Iteration   3: 18.871 ns/op
Iteration   4: 19.169 ns/op
Iteration   5: 18.893 ns/op
Iteration   6: 18.953 ns/op
Iteration   7: 18.945 ns/op
Iteration   8: 19.085 ns/op
Iteration   9: 18.944 ns/op
Iteration  10: 18.945 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.937 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (18.769, 18.937, 19.193), stdev = 0.121
  CI (99.9%): [18.832, 19.043] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 20.14% complete, ETA 00:30:43
# Fork: 1 of 2
# Warmup Iteration   1: 246.276 ns/op
# Warmup Iteration   2: 202.867 ns/op
# Warmup Iteration   3: 136.172 ns/op
Iteration   1: 136.344 ns/op
Iteration   2: 136.182 ns/op
Iteration   3: 136.158 ns/op
Iteration   4: 137.116 ns/op
Iteration   5: 135.967 ns/op
Iteration   6: 136.136 ns/op
Iteration   7: 136.023 ns/op
Iteration   8: 137.028 ns/op
Iteration   9: 136.518 ns/op
Iteration  10: 136.051 ns/op

# Run progress: 20.21% complete, ETA 00:30:41
# Fork: 2 of 2
# Warmup Iteration   1: 258.324 ns/op
# Warmup Iteration   2: 197.664 ns/op
# Warmup Iteration   3: 136.308 ns/op
Iteration   1: 136.125 ns/op
Iteration   2: 136.142 ns/op
Iteration   3: 136.166 ns/op
Iteration   4: 137.082 ns/op
Iteration   5: 135.913 ns/op
Iteration   6: 136.433 ns/op
Iteration   7: 136.023 ns/op
Iteration   8: 137.042 ns/op
Iteration   9: 136.340 ns/op
Iteration  10: 136.107 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  136.345 ±(99.9%) 0.347 ns/op [Average]
  (min, avg, max) = (135.913, 136.345, 137.116), stdev = 0.400
  CI (99.9%): [135.998, 136.692] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 20.28% complete, ETA 00:30:39
# Fork: 1 of 2
# Warmup Iteration   1: 379.468 ns/op
# Warmup Iteration   2: 201.792 ns/op
# Warmup Iteration   3: 152.231 ns/op
Iteration   1: 152.361 ns/op
Iteration   2: 152.032 ns/op
Iteration   3: 152.123 ns/op
Iteration   4: 152.119 ns/op
Iteration   5: 151.961 ns/op
Iteration   6: 152.276 ns/op
Iteration   7: 152.036 ns/op
Iteration   8: 154.721 ns/op
Iteration   9: 152.102 ns/op
Iteration  10: 152.247 ns/op

# Run progress: 20.35% complete, ETA 00:30:38
# Fork: 2 of 2
# Warmup Iteration   1: 376.354 ns/op
# Warmup Iteration   2: 212.305 ns/op
# Warmup Iteration   3: 156.860 ns/op
Iteration   1: 156.889 ns/op
Iteration   2: 156.983 ns/op
Iteration   3: 156.620 ns/op
Iteration   4: 156.701 ns/op
Iteration   5: 156.658 ns/op
Iteration   6: 156.760 ns/op
Iteration   7: 156.790 ns/op
Iteration   8: 158.717 ns/op
Iteration   9: 156.981 ns/op
Iteration  10: 157.017 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.705 ±(99.9%) 2.145 ns/op [Average]
  (min, avg, max) = (151.961, 154.705, 158.717), stdev = 2.471
  CI (99.9%): [152.559, 156.850] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 20.42% complete, ETA 00:30:36
# Fork: 1 of 2
# Warmup Iteration   1: 516.488 ns/op
# Warmup Iteration   2: 271.052 ns/op
# Warmup Iteration   3: 200.010 ns/op
Iteration   1: 200.078 ns/op
Iteration   2: 200.027 ns/op
Iteration   3: 203.483 ns/op
Iteration   4: 200.162 ns/op
Iteration   5: 200.510 ns/op
Iteration   6: 200.047 ns/op
Iteration   7: 201.129 ns/op
Iteration   8: 202.827 ns/op
Iteration   9: 202.027 ns/op
Iteration  10: 200.323 ns/op

# Run progress: 20.49% complete, ETA 00:30:35
# Fork: 2 of 2
# Warmup Iteration   1: 437.063 ns/op
# Warmup Iteration   2: 266.971 ns/op
# Warmup Iteration   3: 200.385 ns/op
Iteration   1: 200.647 ns/op
Iteration   2: 200.337 ns/op
Iteration   3: 203.713 ns/op
Iteration   4: 200.378 ns/op
Iteration   5: 200.479 ns/op
Iteration   6: 200.225 ns/op
Iteration   7: 200.294 ns/op
Iteration   8: 202.929 ns/op
Iteration   9: 202.088 ns/op
Iteration  10: 200.397 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  201.105 ±(99.9%) 1.080 ns/op [Average]
  (min, avg, max) = (200.027, 201.105, 203.713), stdev = 1.244
  CI (99.9%): [200.025, 202.185] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 20.56% complete, ETA 00:30:33
# Fork: 1 of 2
# Warmup Iteration   1: 111.006 ns/op
# Warmup Iteration   2: 101.082 ns/op
# Warmup Iteration   3: 70.678 ns/op
Iteration   1: 70.582 ns/op
Iteration   2: 70.689 ns/op
Iteration   3: 70.556 ns/op
Iteration   4: 70.727 ns/op
Iteration   5: 70.618 ns/op
Iteration   6: 70.556 ns/op
Iteration   7: 70.592 ns/op
Iteration   8: 73.266 ns/op
Iteration   9: 70.736 ns/op
Iteration  10: 70.943 ns/op

# Run progress: 20.63% complete, ETA 00:30:31
# Fork: 2 of 2
# Warmup Iteration   1: 109.285 ns/op
# Warmup Iteration   2: 100.683 ns/op
# Warmup Iteration   3: 70.670 ns/op
Iteration   1: 70.618 ns/op
Iteration   2: 70.658 ns/op
Iteration   3: 70.595 ns/op
Iteration   4: 70.708 ns/op
Iteration   5: 70.567 ns/op
Iteration   6: 70.593 ns/op
Iteration   7: 70.578 ns/op
Iteration   8: 73.141 ns/op
Iteration   9: 70.659 ns/op
Iteration  10: 70.911 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.915 ±(99.9%) 0.686 ns/op [Average]
  (min, avg, max) = (70.556, 70.915, 73.266), stdev = 0.790
  CI (99.9%): [70.228, 71.601] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 20.69% complete, ETA 00:30:30
# Fork: 1 of 2
# Warmup Iteration   1: 215.284 ns/op
# Warmup Iteration   2: 210.998 ns/op
# Warmup Iteration   3: 152.814 ns/op
Iteration   1: 152.820 ns/op
Iteration   2: 154.294 ns/op
Iteration   3: 152.793 ns/op
Iteration   4: 153.425 ns/op
Iteration   5: 153.671 ns/op
Iteration   6: 153.534 ns/op
Iteration   7: 153.214 ns/op
Iteration   8: 153.940 ns/op
Iteration   9: 165.105 ns/op
Iteration  10: 153.538 ns/op

# Run progress: 20.76% complete, ETA 00:30:28
# Fork: 2 of 2
# Warmup Iteration   1: 229.633 ns/op
# Warmup Iteration   2: 223.701 ns/op
# Warmup Iteration   3: 152.808 ns/op
Iteration   1: 152.847 ns/op
Iteration   2: 154.311 ns/op
Iteration   3: 152.897 ns/op
Iteration   4: 153.412 ns/op
Iteration   5: 153.523 ns/op
Iteration   6: 153.236 ns/op
Iteration   7: 153.241 ns/op
Iteration   8: 153.857 ns/op
Iteration   9: 164.970 ns/op
Iteration  10: 153.449 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.604 ±(99.9%) 3.121 ns/op [Average]
  (min, avg, max) = (152.793, 154.604, 165.105), stdev = 3.595
  CI (99.9%): [151.482, 157.725] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 20.83% complete, ETA 00:30:27
# Fork: 1 of 2
# Warmup Iteration   1: 22.162 ns/op
# Warmup Iteration   2: 25.932 ns/op
# Warmup Iteration   3: 15.779 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.693 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.584 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.584 ns/op

# Run progress: 20.90% complete, ETA 00:30:25
# Fork: 2 of 2
# Warmup Iteration   1: 22.300 ns/op
# Warmup Iteration   2: 25.910 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.975 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.122 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.574, 16.020, 19.122), stdev = 1.069
  CI (99.9%): [15.092, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 20.97% complete, ETA 00:30:23
# Fork: 1 of 2
# Warmup Iteration   1: 2531.961 ns/op
# Warmup Iteration   2: 1071.191 ns/op
# Warmup Iteration   3: 761.825 ns/op
Iteration   1: 762.965 ns/op
Iteration   2: 764.085 ns/op
Iteration   3: 763.527 ns/op
Iteration   4: 763.043 ns/op
Iteration   5: 763.110 ns/op
Iteration   6: 763.155 ns/op
Iteration   7: 763.037 ns/op
Iteration   8: 766.434 ns/op
Iteration   9: 763.157 ns/op
Iteration  10: 762.858 ns/op

# Run progress: 21.04% complete, ETA 00:30:22
# Fork: 2 of 2
# Warmup Iteration   1: 2248.474 ns/op
# Warmup Iteration   2: 1087.349 ns/op
# Warmup Iteration   3: 761.936 ns/op
Iteration   1: 765.007 ns/op
Iteration   2: 762.942 ns/op
Iteration   3: 774.153 ns/op
Iteration   4: 763.115 ns/op
Iteration   5: 763.218 ns/op
Iteration   6: 775.207 ns/op
Iteration   7: 762.976 ns/op
Iteration   8: 765.582 ns/op
Iteration   9: 764.393 ns/op
Iteration  10: 776.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  765.427 ±(99.9%) 3.811 ns/op [Average]
  (min, avg, max) = (762.858, 765.427, 776.575), stdev = 4.389
  CI (99.9%): [761.616, 769.238] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 21.11% complete, ETA 00:30:20
# Fork: 1 of 2
# Warmup Iteration   1: 11356.735 ns/op
# Warmup Iteration   2: 981.315 ns/op
# Warmup Iteration   3: 667.846 ns/op
Iteration   1: 667.676 ns/op
Iteration   2: 667.391 ns/op
Iteration   3: 668.537 ns/op
Iteration   4: 668.634 ns/op
Iteration   5: 667.450 ns/op
Iteration   6: 667.551 ns/op
Iteration   7: 667.466 ns/op
Iteration   8: 667.804 ns/op
Iteration   9: 667.688 ns/op
Iteration  10: 668.151 ns/op

# Run progress: 21.18% complete, ETA 00:30:18
# Fork: 2 of 2
# Warmup Iteration   1: 20902.679 ns/op
# Warmup Iteration   2: 1000.960 ns/op
# Warmup Iteration   3: 777.886 ns/op
Iteration   1: 709.234 ns/op
Iteration   2: 709.436 ns/op
Iteration   3: 708.962 ns/op
Iteration   4: 722.790 ns/op
Iteration   5: 709.610 ns/op
Iteration   6: 709.041 ns/op
Iteration   7: 709.139 ns/op
Iteration   8: 710.091 ns/op
Iteration   9: 709.872 ns/op
Iteration  10: 709.338 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  689.293 ±(99.9%) 19.287 ns/op [Average]
  (min, avg, max) = (667.391, 689.293, 722.790), stdev = 22.211
  CI (99.9%): [670.006, 708.580] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 21.25% complete, ETA 00:30:17
# Fork: 1 of 2
# Warmup Iteration   1: 40241.990 ns/op
# Warmup Iteration   2: 1434.707 ns/op
# Warmup Iteration   3: 843.043 ns/op
Iteration   1: 722.427 ns/op
Iteration   2: 722.697 ns/op
Iteration   3: 723.510 ns/op
Iteration   4: 736.615 ns/op
Iteration   5: 721.963 ns/op
Iteration   6: 713.863 ns/op
Iteration   7: 715.441 ns/op
Iteration   8: 713.292 ns/op
Iteration   9: 715.399 ns/op
Iteration  10: 715.754 ns/op

# Run progress: 21.32% complete, ETA 00:30:15
# Fork: 2 of 2
# Warmup Iteration   1: 10986.406 ns/op
# Warmup Iteration   2: 1084.972 ns/op
# Warmup Iteration   3: 730.170 ns/op
Iteration   1: 731.285 ns/op
Iteration   2: 727.402 ns/op
Iteration   3: 740.874 ns/op
Iteration   4: 742.440 ns/op
Iteration   5: 729.422 ns/op
Iteration   6: 737.340 ns/op
Iteration   7: 729.203 ns/op
Iteration   8: 728.384 ns/op
Iteration   9: 731.553 ns/op
Iteration  10: 728.266 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  726.357 ±(99.9%) 7.735 ns/op [Average]
  (min, avg, max) = (713.292, 726.357, 742.440), stdev = 8.908
  CI (99.9%): [718.622, 734.092] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 21.39% complete, ETA 00:30:14
# Fork: 1 of 2
# Warmup Iteration   1: 896.275 ns/op
# Warmup Iteration   2: 691.043 ns/op
# Warmup Iteration   3: 533.727 ns/op
Iteration   1: 533.749 ns/op
Iteration   2: 533.674 ns/op
Iteration   3: 533.534 ns/op
Iteration   4: 536.721 ns/op
Iteration   5: 533.936 ns/op
Iteration   6: 533.893 ns/op
Iteration   7: 533.942 ns/op
Iteration   8: 533.862 ns/op
Iteration   9: 533.867 ns/op
Iteration  10: 534.157 ns/op

# Run progress: 21.46% complete, ETA 00:30:12
# Fork: 2 of 2
# Warmup Iteration   1: 838.373 ns/op
# Warmup Iteration   2: 691.130 ns/op
# Warmup Iteration   3: 534.918 ns/op
Iteration   1: 535.050 ns/op
Iteration   2: 535.321 ns/op
Iteration   3: 535.075 ns/op
Iteration   4: 537.849 ns/op
Iteration   5: 535.340 ns/op
Iteration   6: 536.570 ns/op
Iteration   7: 535.027 ns/op
Iteration   8: 535.413 ns/op
Iteration   9: 535.477 ns/op
Iteration  10: 535.351 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  534.891 ±(99.9%) 1.021 ns/op [Average]
  (min, avg, max) = (533.534, 534.891, 537.849), stdev = 1.176
  CI (99.9%): [533.869, 535.912] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 21.53% complete, ETA 00:30:10
# Fork: 1 of 2
# Warmup Iteration   1: 9327.982 ns/op
# Warmup Iteration   2: 4909.290 ns/op
# Warmup Iteration   3: 3710.045 ns/op
Iteration   1: 3708.432 ns/op
Iteration   2: 3715.728 ns/op
Iteration   3: 3717.756 ns/op
Iteration   4: 3712.186 ns/op
Iteration   5: 3713.164 ns/op
Iteration   6: 3710.522 ns/op
Iteration   7: 3708.149 ns/op
Iteration   8: 3706.483 ns/op
Iteration   9: 3770.772 ns/op
Iteration  10: 3711.008 ns/op

# Run progress: 21.60% complete, ETA 00:30:09
# Fork: 2 of 2
# Warmup Iteration   1: 11583.706 ns/op
# Warmup Iteration   2: 5283.130 ns/op
# Warmup Iteration   3: 4207.466 ns/op
Iteration   1: 3845.963 ns/op
Iteration   2: 3845.888 ns/op
Iteration   3: 3853.872 ns/op
Iteration   4: 3829.797 ns/op
Iteration   5: 3830.361 ns/op
Iteration   6: 3894.799 ns/op
Iteration   7: 3833.877 ns/op
Iteration   8: 3866.312 ns/op
Iteration   9: 3960.333 ns/op
Iteration  10: 3830.728 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3788.307 ±(99.9%) 68.676 ns/op [Average]
  (min, avg, max) = (3706.483, 3788.307, 3960.333), stdev = 79.088
  CI (99.9%): [3719.630, 3856.983] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 21.67% complete, ETA 00:30:07
# Fork: 1 of 2
# Warmup Iteration   1: 22.318 ns/op
# Warmup Iteration   2: 24.326 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.587 ns/op
Iteration   3: 16.027 ns/op
Iteration   4: 16.070 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.114 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.581 ns/op

# Run progress: 21.74% complete, ETA 00:30:06
# Fork: 2 of 2
# Warmup Iteration   1: 22.028 ns/op
# Warmup Iteration   2: 25.158 ns/op
# Warmup Iteration   3: 15.777 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.574 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.688 ns/op
Iteration   6: 15.572 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.581 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.029 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.572, 16.029, 19.114), stdev = 1.067
  CI (99.9%): [15.102, 16.956] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 21.81% complete, ETA 00:30:04
# Fork: 1 of 2
# Warmup Iteration   1: 783.604 ns/op
# Warmup Iteration   2: 469.737 ns/op
# Warmup Iteration   3: 324.627 ns/op
Iteration   1: 324.544 ns/op
Iteration   2: 324.444 ns/op
Iteration   3: 325.670 ns/op
Iteration   4: 325.778 ns/op
Iteration   5: 324.703 ns/op
Iteration   6: 324.392 ns/op
Iteration   7: 324.552 ns/op
Iteration   8: 327.404 ns/op
Iteration   9: 324.774 ns/op
Iteration  10: 324.421 ns/op

# Run progress: 21.88% complete, ETA 00:30:02
# Fork: 2 of 2
# Warmup Iteration   1: 819.836 ns/op
# Warmup Iteration   2: 478.269 ns/op
# Warmup Iteration   3: 347.726 ns/op
Iteration   1: 347.122 ns/op
Iteration   2: 347.299 ns/op
Iteration   3: 347.762 ns/op
Iteration   4: 348.152 ns/op
Iteration   5: 347.401 ns/op
Iteration   6: 347.322 ns/op
Iteration   7: 347.336 ns/op
Iteration   8: 350.412 ns/op
Iteration   9: 347.412 ns/op
Iteration  10: 347.334 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  336.412 ±(99.9%) 10.139 ns/op [Average]
  (min, avg, max) = (324.392, 336.412, 350.412), stdev = 11.676
  CI (99.9%): [326.272, 346.551] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 21.94% complete, ETA 00:30:01
# Fork: 1 of 2
# Warmup Iteration   1: 3391.047 ns/op
# Warmup Iteration   2: 548.220 ns/op
# Warmup Iteration   3: 424.331 ns/op
Iteration   1: 424.637 ns/op
Iteration   2: 424.326 ns/op
Iteration   3: 424.382 ns/op
Iteration   4: 424.797 ns/op
Iteration   5: 423.082 ns/op
Iteration   6: 423.892 ns/op
Iteration   7: 424.721 ns/op
Iteration   8: 424.508 ns/op
Iteration   9: 424.301 ns/op
Iteration  10: 424.527 ns/op

# Run progress: 22.01% complete, ETA 00:29:59
# Fork: 2 of 2
# Warmup Iteration   1: 11133.893 ns/op
# Warmup Iteration   2: 590.939 ns/op
# Warmup Iteration   3: 428.867 ns/op
Iteration   1: 428.785 ns/op
Iteration   2: 429.162 ns/op
Iteration   3: 429.820 ns/op
Iteration   4: 428.917 ns/op
Iteration   5: 428.957 ns/op
Iteration   6: 429.001 ns/op
Iteration   7: 428.862 ns/op
Iteration   8: 429.857 ns/op
Iteration   9: 429.030 ns/op
Iteration  10: 429.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  426.731 ±(99.9%) 2.183 ns/op [Average]
  (min, avg, max) = (423.082, 426.731, 429.857), stdev = 2.514
  CI (99.9%): [424.548, 428.914] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 22.08% complete, ETA 00:29:58
# Fork: 1 of 2
# Warmup Iteration   1: 23455.831 ns/op
# Warmup Iteration   2: 741.070 ns/op
# Warmup Iteration   3: 462.200 ns/op
Iteration   1: 422.966 ns/op
Iteration   2: 422.741 ns/op
Iteration   3: 423.459 ns/op
Iteration   4: 423.778 ns/op
Iteration   5: 422.725 ns/op
Iteration   6: 422.746 ns/op
Iteration   7: 422.838 ns/op
Iteration   8: 423.442 ns/op
Iteration   9: 422.841 ns/op
Iteration  10: 422.796 ns/op

# Run progress: 22.15% complete, ETA 00:29:56
# Fork: 2 of 2
# Warmup Iteration   1: 9275.853 ns/op
# Warmup Iteration   2: 576.392 ns/op
# Warmup Iteration   3: 433.025 ns/op
Iteration   1: 433.044 ns/op
Iteration   2: 433.246 ns/op
Iteration   3: 433.934 ns/op
Iteration   4: 433.397 ns/op
Iteration   5: 433.566 ns/op
Iteration   6: 433.667 ns/op
Iteration   7: 433.481 ns/op
Iteration   8: 434.030 ns/op
Iteration   9: 433.163 ns/op
Iteration  10: 433.363 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  428.261 ±(99.9%) 4.667 ns/op [Average]
  (min, avg, max) = (422.725, 428.261, 434.030), stdev = 5.375
  CI (99.9%): [423.594, 432.928] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 22.22% complete, ETA 00:29:54
# Fork: 1 of 2
# Warmup Iteration   1: 1909.511 ns/op
# Warmup Iteration   2: 1232.730 ns/op
# Warmup Iteration   3: 871.461 ns/op
Iteration   1: 873.295 ns/op
Iteration   2: 869.426 ns/op
Iteration   3: 869.824 ns/op
Iteration   4: 870.911 ns/op
Iteration   5: 872.980 ns/op
Iteration   6: 871.738 ns/op
Iteration   7: 872.923 ns/op
Iteration   8: 870.921 ns/op
Iteration   9: 870.634 ns/op
Iteration  10: 872.374 ns/op

# Run progress: 22.29% complete, ETA 00:29:53
# Fork: 2 of 2
# Warmup Iteration   1: 1344.654 ns/op
# Warmup Iteration   2: 1124.296 ns/op
# Warmup Iteration   3: 864.144 ns/op
Iteration   1: 865.079 ns/op
Iteration   2: 865.607 ns/op
Iteration   3: 865.141 ns/op
Iteration   4: 866.877 ns/op
Iteration   5: 864.774 ns/op
Iteration   6: 865.266 ns/op
Iteration   7: 864.215 ns/op
Iteration   8: 867.848 ns/op
Iteration   9: 865.732 ns/op
Iteration  10: 865.287 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  868.543 ±(99.9%) 2.832 ns/op [Average]
  (min, avg, max) = (864.215, 868.543, 873.295), stdev = 3.261
  CI (99.9%): [865.711, 871.374] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 22.36% complete, ETA 00:29:51
# Fork: 1 of 2
# Warmup Iteration   1: 9351.412 ns/op
# Warmup Iteration   2: 4809.808 ns/op
# Warmup Iteration   3: 3411.761 ns/op
Iteration   1: 3414.296 ns/op
Iteration   2: 3414.646 ns/op
Iteration   3: 3420.352 ns/op
Iteration   4: 3403.112 ns/op
Iteration   5: 3401.686 ns/op
Iteration   6: 3408.384 ns/op
Iteration   7: 3400.616 ns/op
Iteration   8: 3408.122 ns/op
Iteration   9: 3444.393 ns/op
Iteration  10: 3401.163 ns/op

# Run progress: 22.43% complete, ETA 00:29:49
# Fork: 2 of 2
# Warmup Iteration   1: 9201.957 ns/op
# Warmup Iteration   2: 5330.624 ns/op
# Warmup Iteration   3: 3674.667 ns/op
Iteration   1: 3667.678 ns/op
Iteration   2: 3667.365 ns/op
Iteration   3: 3673.455 ns/op
Iteration   4: 3651.667 ns/op
Iteration   5: 3653.850 ns/op
Iteration   6: 3668.380 ns/op
Iteration   7: 3652.290 ns/op
Iteration   8: 3645.862 ns/op
Iteration   9: 3696.718 ns/op
Iteration  10: 3650.493 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3537.226 ±(99.9%) 112.505 ns/op [Average]
  (min, avg, max) = (3400.616, 3537.226, 3696.718), stdev = 129.561
  CI (99.9%): [3424.721, 3649.732] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 22.50% complete, ETA 00:29:48
# Fork: 1 of 2
# Warmup Iteration   1: 22.305 ns/op
# Warmup Iteration   2: 22.169 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.986 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.108 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.573 ns/op

# Run progress: 22.57% complete, ETA 00:29:46
# Fork: 2 of 2
# Warmup Iteration   1: 22.075 ns/op
# Warmup Iteration   2: 25.134 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.109 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.573, 16.019, 19.109), stdev = 1.068
  CI (99.9%): [15.092, 16.946] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 22.64% complete, ETA 00:29:44
# Fork: 1 of 2
# Warmup Iteration   1: 1093.754 ns/op
# Warmup Iteration   2: 490.270 ns/op
# Warmup Iteration   3: 362.114 ns/op
Iteration   1: 352.095 ns/op
Iteration   2: 351.516 ns/op
Iteration   3: 350.948 ns/op
Iteration   4: 351.190 ns/op
Iteration   5: 354.217 ns/op
Iteration   6: 350.671 ns/op
Iteration   7: 351.337 ns/op
Iteration   8: 358.529 ns/op
Iteration   9: 356.177 ns/op
Iteration  10: 365.126 ns/op

# Run progress: 22.71% complete, ETA 00:29:43
# Fork: 2 of 2
# Warmup Iteration   1: 1168.951 ns/op
# Warmup Iteration   2: 499.665 ns/op
# Warmup Iteration   3: 349.211 ns/op
Iteration   1: 349.040 ns/op
Iteration   2: 348.947 ns/op
Iteration   3: 349.318 ns/op
Iteration   4: 349.454 ns/op
Iteration   5: 348.653 ns/op
Iteration   6: 348.888 ns/op
Iteration   7: 349.349 ns/op
Iteration   8: 353.198 ns/op
Iteration   9: 349.700 ns/op
Iteration  10: 348.931 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  351.864 ±(99.9%) 3.547 ns/op [Average]
  (min, avg, max) = (348.653, 351.864, 365.126), stdev = 4.084
  CI (99.9%): [348.318, 355.411] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 22.78% complete, ETA 00:29:41
# Fork: 1 of 2
# Warmup Iteration   1: 3811.076 ns/op
# Warmup Iteration   2: 516.682 ns/op
# Warmup Iteration   3: 428.678 ns/op
Iteration   1: 428.856 ns/op
Iteration   2: 428.782 ns/op
Iteration   3: 429.543 ns/op
Iteration   4: 428.834 ns/op
Iteration   5: 428.737 ns/op
Iteration   6: 428.796 ns/op
Iteration   7: 428.780 ns/op
Iteration   8: 429.797 ns/op
Iteration   9: 428.832 ns/op
Iteration  10: 428.845 ns/op

# Run progress: 22.85% complete, ETA 00:29:40
# Fork: 2 of 2
# Warmup Iteration   1: 3422.714 ns/op
# Warmup Iteration   2: 504.459 ns/op
# Warmup Iteration   3: 427.300 ns/op
Iteration   1: 425.243 ns/op
Iteration   2: 425.591 ns/op
Iteration   3: 425.940 ns/op
Iteration   4: 427.039 ns/op
Iteration   5: 425.124 ns/op
Iteration   6: 425.280 ns/op
Iteration   7: 425.898 ns/op
Iteration   8: 426.352 ns/op
Iteration   9: 426.195 ns/op
Iteration  10: 425.993 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  427.423 ±(99.9%) 1.448 ns/op [Average]
  (min, avg, max) = (425.124, 427.423, 429.797), stdev = 1.668
  CI (99.9%): [425.975, 428.871] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 22.92% complete, ETA 00:29:38
# Fork: 1 of 2
# Warmup Iteration   1: 7997.783 ns/op
# Warmup Iteration   2: 550.835 ns/op
# Warmup Iteration   3: 423.922 ns/op
Iteration   1: 424.029 ns/op
Iteration   2: 424.348 ns/op
Iteration   3: 424.598 ns/op
Iteration   4: 424.819 ns/op
Iteration   5: 424.165 ns/op
Iteration   6: 424.207 ns/op
Iteration   7: 424.245 ns/op
Iteration   8: 425.231 ns/op
Iteration   9: 424.528 ns/op
Iteration  10: 424.131 ns/op

# Run progress: 22.99% complete, ETA 00:29:36
# Fork: 2 of 2
# Warmup Iteration   1: 7739.806 ns/op
# Warmup Iteration   2: 558.862 ns/op
# Warmup Iteration   3: 434.708 ns/op
Iteration   1: 433.684 ns/op
Iteration   2: 434.457 ns/op
Iteration   3: 434.335 ns/op
Iteration   4: 434.699 ns/op
Iteration   5: 435.024 ns/op
Iteration   6: 434.558 ns/op
Iteration   7: 434.760 ns/op
Iteration   8: 436.414 ns/op
Iteration   9: 447.411 ns/op
Iteration  10: 435.692 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  430.267 ±(99.9%) 5.738 ns/op [Average]
  (min, avg, max) = (424.029, 430.267, 447.411), stdev = 6.608
  CI (99.9%): [424.528, 436.005] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 23.06% complete, ETA 00:29:35
# Fork: 1 of 2
# Warmup Iteration   1: 1588.987 ns/op
# Warmup Iteration   2: 1251.614 ns/op
# Warmup Iteration   3: 877.259 ns/op
Iteration   1: 877.524 ns/op
Iteration   2: 877.644 ns/op
Iteration   3: 876.506 ns/op
Iteration   4: 876.747 ns/op
Iteration   5: 877.661 ns/op
Iteration   6: 877.157 ns/op
Iteration   7: 876.957 ns/op
Iteration   8: 878.720 ns/op
Iteration   9: 877.937 ns/op
Iteration  10: 877.337 ns/op

# Run progress: 23.13% complete, ETA 00:29:33
# Fork: 2 of 2
# Warmup Iteration   1: 1362.512 ns/op
# Warmup Iteration   2: 1154.224 ns/op
# Warmup Iteration   3: 866.048 ns/op
Iteration   1: 866.034 ns/op
Iteration   2: 866.267 ns/op
Iteration   3: 865.338 ns/op
Iteration   4: 866.551 ns/op
Iteration   5: 866.364 ns/op
Iteration   6: 866.812 ns/op
Iteration   7: 865.970 ns/op
Iteration   8: 867.466 ns/op
Iteration   9: 865.692 ns/op
Iteration  10: 866.212 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  871.845 ±(99.9%) 4.993 ns/op [Average]
  (min, avg, max) = (865.338, 871.845, 878.720), stdev = 5.750
  CI (99.9%): [866.851, 876.838] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 23.19% complete, ETA 00:29:32
# Fork: 1 of 2
# Warmup Iteration   1: 8585.305 ns/op
# Warmup Iteration   2: 5073.655 ns/op
# Warmup Iteration   3: 3617.278 ns/op
Iteration   1: 3617.167 ns/op
Iteration   2: 3619.549 ns/op
Iteration   3: 3623.524 ns/op
Iteration   4: 3608.624 ns/op
Iteration   5: 3609.798 ns/op
Iteration   6: 3613.284 ns/op
Iteration   7: 3610.474 ns/op
Iteration   8: 3600.127 ns/op
Iteration   9: 3626.267 ns/op
Iteration  10: 3610.663 ns/op

# Run progress: 23.26% complete, ETA 00:29:30
# Fork: 2 of 2
# Warmup Iteration   1: 11088.024 ns/op
# Warmup Iteration   2: 4854.344 ns/op
# Warmup Iteration   3: 4010.914 ns/op
Iteration   1: 3695.090 ns/op
Iteration   2: 3692.482 ns/op
Iteration   3: 3692.204 ns/op
Iteration   4: 3675.635 ns/op
Iteration   5: 3675.592 ns/op
Iteration   6: 3719.127 ns/op
Iteration   7: 3673.668 ns/op
Iteration   8: 3700.032 ns/op
Iteration   9: 3746.726 ns/op
Iteration  10: 3674.558 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3654.230 ±(99.9%) 38.792 ns/op [Average]
  (min, avg, max) = (3600.127, 3654.230, 3746.726), stdev = 44.672
  CI (99.9%): [3615.438, 3693.021] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 23.33% complete, ETA 00:29:28
# Fork: 1 of 2
# Warmup Iteration   1: 22.270 ns/op
# Warmup Iteration   2: 25.782 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.585 ns/op
Iteration   3: 15.991 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.114 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.574 ns/op

# Run progress: 23.40% complete, ETA 00:29:27
# Fork: 2 of 2
# Warmup Iteration   1: 22.489 ns/op
# Warmup Iteration   2: 25.821 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.967 ns/op
Iteration   5: 15.678 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.113 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.584 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.574, 16.021, 19.114), stdev = 1.069
  CI (99.9%): [15.092, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 23.47% complete, ETA 00:29:25
# Fork: 1 of 2
# Warmup Iteration   1: 1247.181 ns/op
# Warmup Iteration   2: 500.654 ns/op
# Warmup Iteration   3: 352.484 ns/op
Iteration   1: 352.504 ns/op
Iteration   2: 352.470 ns/op
Iteration   3: 352.574 ns/op
Iteration   4: 352.797 ns/op
Iteration   5: 352.171 ns/op
Iteration   6: 352.766 ns/op
Iteration   7: 352.172 ns/op
Iteration   8: 354.987 ns/op
Iteration   9: 352.505 ns/op
Iteration  10: 352.543 ns/op

# Run progress: 23.54% complete, ETA 00:29:23
# Fork: 2 of 2
# Warmup Iteration   1: 1029.116 ns/op
# Warmup Iteration   2: 474.207 ns/op
# Warmup Iteration   3: 353.317 ns/op
Iteration   1: 353.393 ns/op
Iteration   2: 353.196 ns/op
Iteration   3: 353.065 ns/op
Iteration   4: 353.437 ns/op
Iteration   5: 352.939 ns/op
Iteration   6: 353.307 ns/op
Iteration   7: 353.343 ns/op
Iteration   8: 356.517 ns/op
Iteration   9: 351.921 ns/op
Iteration  10: 352.867 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  353.074 ±(99.9%) 0.905 ns/op [Average]
  (min, avg, max) = (351.921, 353.074, 356.517), stdev = 1.042
  CI (99.9%): [352.169, 353.978] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 23.61% complete, ETA 00:29:22
# Fork: 1 of 2
# Warmup Iteration   1: 3360.345 ns/op
# Warmup Iteration   2: 630.707 ns/op
# Warmup Iteration   3: 453.353 ns/op
Iteration   1: 453.404 ns/op
Iteration   2: 453.544 ns/op
Iteration   3: 454.392 ns/op
Iteration   4: 454.468 ns/op
Iteration   5: 453.441 ns/op
Iteration   6: 453.647 ns/op
Iteration   7: 453.544 ns/op
Iteration   8: 454.637 ns/op
Iteration   9: 453.225 ns/op
Iteration  10: 453.397 ns/op

# Run progress: 23.68% complete, ETA 00:29:20
# Fork: 2 of 2
# Warmup Iteration   1: 9485.167 ns/op
# Warmup Iteration   2: 760.099 ns/op
# Warmup Iteration   3: 457.992 ns/op
Iteration   1: 458.882 ns/op
Iteration   2: 458.693 ns/op
Iteration   3: 459.766 ns/op
Iteration   4: 459.623 ns/op
Iteration   5: 458.430 ns/op
Iteration   6: 458.581 ns/op
Iteration   7: 459.127 ns/op
Iteration   8: 459.242 ns/op
Iteration   9: 460.234 ns/op
Iteration  10: 458.610 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  456.444 ±(99.9%) 2.429 ns/op [Average]
  (min, avg, max) = (453.225, 456.444, 460.234), stdev = 2.797
  CI (99.9%): [454.015, 458.873] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 23.75% complete, ETA 00:29:19
# Fork: 1 of 2
# Warmup Iteration   1: 5559.234 ns/op
# Warmup Iteration   2: 666.396 ns/op
# Warmup Iteration   3: 445.551 ns/op
Iteration   1: 446.147 ns/op
Iteration   2: 445.750 ns/op
Iteration   3: 445.930 ns/op
Iteration   4: 446.678 ns/op
Iteration   5: 446.099 ns/op
Iteration   6: 446.026 ns/op
Iteration   7: 445.921 ns/op
Iteration   8: 445.507 ns/op
Iteration   9: 446.056 ns/op
Iteration  10: 446.517 ns/op

# Run progress: 23.82% complete, ETA 00:29:17
# Fork: 2 of 2
# Warmup Iteration   1: 3926.647 ns/op
# Warmup Iteration   2: 654.952 ns/op
# Warmup Iteration   3: 428.246 ns/op
Iteration   1: 428.682 ns/op
Iteration   2: 428.251 ns/op
Iteration   3: 428.636 ns/op
Iteration   4: 428.609 ns/op
Iteration   5: 428.631 ns/op
Iteration   6: 428.626 ns/op
Iteration   7: 428.646 ns/op
Iteration   8: 428.499 ns/op
Iteration   9: 428.860 ns/op
Iteration  10: 428.519 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  437.329 ±(99.9%) 7.784 ns/op [Average]
  (min, avg, max) = (428.251, 437.329, 446.678), stdev = 8.964
  CI (99.9%): [429.545, 445.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 23.89% complete, ETA 00:29:15
# Fork: 1 of 2
# Warmup Iteration   1: 1389.375 ns/op
# Warmup Iteration   2: 1106.285 ns/op
# Warmup Iteration   3: 868.107 ns/op
Iteration   1: 869.823 ns/op
Iteration   2: 869.968 ns/op
Iteration   3: 870.799 ns/op
Iteration   4: 870.406 ns/op
Iteration   5: 869.383 ns/op
Iteration   6: 868.725 ns/op
Iteration   7: 868.420 ns/op
Iteration   8: 869.879 ns/op
Iteration   9: 867.613 ns/op
Iteration  10: 869.085 ns/op

# Run progress: 23.96% complete, ETA 00:29:14
# Fork: 2 of 2
# Warmup Iteration   1: 1770.203 ns/op
# Warmup Iteration   2: 1109.536 ns/op
# Warmup Iteration   3: 866.419 ns/op
Iteration   1: 866.901 ns/op
Iteration   2: 867.019 ns/op
Iteration   3: 882.095 ns/op
Iteration   4: 867.469 ns/op
Iteration   5: 866.978 ns/op
Iteration   6: 866.954 ns/op
Iteration   7: 879.813 ns/op
Iteration   8: 867.275 ns/op
Iteration   9: 879.840 ns/op
Iteration  10: 884.150 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  871.130 ±(99.9%) 4.784 ns/op [Average]
  (min, avg, max) = (866.901, 871.130, 884.150), stdev = 5.509
  CI (99.9%): [866.345, 875.914] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 24.03% complete, ETA 00:29:12
# Fork: 1 of 2
# Warmup Iteration   1: 11019.284 ns/op
# Warmup Iteration   2: 4919.743 ns/op
# Warmup Iteration   3: 3748.347 ns/op
Iteration   1: 3739.911 ns/op
Iteration   2: 3741.666 ns/op
Iteration   3: 3746.434 ns/op
Iteration   4: 3726.585 ns/op
Iteration   5: 3726.395 ns/op
Iteration   6: 3736.216 ns/op
Iteration   7: 3724.525 ns/op
Iteration   8: 3730.932 ns/op
Iteration   9: 3916.575 ns/op
Iteration  10: 3725.965 ns/op

# Run progress: 24.10% complete, ETA 00:29:10
# Fork: 2 of 2
# Warmup Iteration   1: 11050.751 ns/op
# Warmup Iteration   2: 4902.323 ns/op
# Warmup Iteration   3: 3393.158 ns/op
Iteration   1: 3398.279 ns/op
Iteration   2: 3389.063 ns/op
Iteration   3: 3402.488 ns/op
Iteration   4: 3395.060 ns/op
Iteration   5: 3382.347 ns/op
Iteration   6: 3391.849 ns/op
Iteration   7: 3384.845 ns/op
Iteration   8: 3372.279 ns/op
Iteration   9: 3599.131 ns/op
Iteration  10: 3383.367 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3580.696 ±(99.9%) 161.216 ns/op [Average]
  (min, avg, max) = (3372.279, 3580.696, 3916.575), stdev = 185.657
  CI (99.9%): [3419.479, 3741.912] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 24.17% complete, ETA 00:29:09
# Fork: 1 of 2
# Warmup Iteration   1: 22.009 ns/op
# Warmup Iteration   2: 26.242 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.569 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.941 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.585 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.590 ns/op

# Run progress: 24.24% complete, ETA 00:29:07
# Fork: 2 of 2
# Warmup Iteration   1: 22.091 ns/op
# Warmup Iteration   2: 25.835 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.588 ns/op
Iteration   3: 15.992 ns/op
Iteration   4: 15.937 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.569, 16.020, 19.117), stdev = 1.069
  CI (99.9%): [15.092, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 24.31% complete, ETA 00:29:06
# Fork: 1 of 2
# Warmup Iteration   1: 485.795 ns/op
# Warmup Iteration   2: 323.953 ns/op
# Warmup Iteration   3: 239.118 ns/op
Iteration   1: 239.096 ns/op
Iteration   2: 239.178 ns/op
Iteration   3: 239.005 ns/op
Iteration   4: 242.463 ns/op
Iteration   5: 239.287 ns/op
Iteration   6: 239.220 ns/op
Iteration   7: 239.244 ns/op
Iteration   8: 243.243 ns/op
Iteration   9: 239.308 ns/op
Iteration  10: 239.016 ns/op

# Run progress: 24.38% complete, ETA 00:29:04
# Fork: 2 of 2
# Warmup Iteration   1: 458.798 ns/op
# Warmup Iteration   2: 302.179 ns/op
# Warmup Iteration   3: 229.700 ns/op
Iteration   1: 229.824 ns/op
Iteration   2: 229.763 ns/op
Iteration   3: 230.027 ns/op
Iteration   4: 233.898 ns/op
Iteration   5: 229.842 ns/op
Iteration   6: 229.779 ns/op
Iteration   7: 229.770 ns/op
Iteration   8: 233.682 ns/op
Iteration   9: 229.625 ns/op
Iteration  10: 229.919 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  235.259 ±(99.9%) 4.361 ns/op [Average]
  (min, avg, max) = (229.625, 235.259, 243.243), stdev = 5.022
  CI (99.9%): [230.898, 239.621] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 24.44% complete, ETA 00:29:02
# Fork: 1 of 2
# Warmup Iteration   1: 4062.482 ns/op
# Warmup Iteration   2: 484.085 ns/op
# Warmup Iteration   3: 404.276 ns/op
Iteration   1: 404.968 ns/op
Iteration   2: 404.622 ns/op
Iteration   3: 403.916 ns/op
Iteration   4: 405.652 ns/op
Iteration   5: 404.602 ns/op
Iteration   6: 404.561 ns/op
Iteration   7: 404.016 ns/op
Iteration   8: 405.745 ns/op
Iteration   9: 404.659 ns/op
Iteration  10: 404.767 ns/op

# Run progress: 24.51% complete, ETA 00:29:01
# Fork: 2 of 2
# Warmup Iteration   1: 6211.410 ns/op
# Warmup Iteration   2: 656.715 ns/op
# Warmup Iteration   3: 407.796 ns/op
Iteration   1: 407.910 ns/op
Iteration   2: 406.460 ns/op
Iteration   3: 409.913 ns/op
Iteration   4: 407.489 ns/op
Iteration   5: 407.271 ns/op
Iteration   6: 408.909 ns/op
Iteration   7: 408.105 ns/op
Iteration   8: 406.682 ns/op
Iteration   9: 408.408 ns/op
Iteration  10: 407.822 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  406.324 ±(99.9%) 1.571 ns/op [Average]
  (min, avg, max) = (403.916, 406.324, 409.913), stdev = 1.809
  CI (99.9%): [404.753, 407.894] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 24.58% complete, ETA 00:28:59
# Fork: 1 of 2
# Warmup Iteration   1: 22940.733 ns/op
# Warmup Iteration   2: 592.550 ns/op
# Warmup Iteration   3: 385.741 ns/op
Iteration   1: 356.116 ns/op
Iteration   2: 356.494 ns/op
Iteration   3: 356.216 ns/op
Iteration   4: 356.853 ns/op
Iteration   5: 356.469 ns/op
Iteration   6: 356.115 ns/op
Iteration   7: 356.165 ns/op
Iteration   8: 357.020 ns/op
Iteration   9: 356.670 ns/op
Iteration  10: 356.425 ns/op

# Run progress: 24.65% complete, ETA 00:28:57
# Fork: 2 of 2
# Warmup Iteration   1: 23448.422 ns/op
# Warmup Iteration   2: 686.529 ns/op
# Warmup Iteration   3: 386.406 ns/op
Iteration   1: 356.607 ns/op
Iteration   2: 356.049 ns/op
Iteration   3: 356.406 ns/op
Iteration   4: 356.848 ns/op
Iteration   5: 356.556 ns/op
Iteration   6: 356.229 ns/op
Iteration   7: 356.827 ns/op
Iteration   8: 371.074 ns/op
Iteration   9: 357.096 ns/op
Iteration  10: 356.070 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  357.215 ±(99.9%) 2.846 ns/op [Average]
  (min, avg, max) = (356.049, 357.215, 371.074), stdev = 3.278
  CI (99.9%): [354.369, 360.062] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 24.72% complete, ETA 00:28:56
# Fork: 1 of 2
# Warmup Iteration   1: 213.682 ns/op
# Warmup Iteration   2: 178.922 ns/op
# Warmup Iteration   3: 138.559 ns/op
Iteration   1: 138.626 ns/op
Iteration   2: 138.584 ns/op
Iteration   3: 138.628 ns/op
Iteration   4: 138.912 ns/op
Iteration   5: 138.598 ns/op
Iteration   6: 138.692 ns/op
Iteration   7: 138.457 ns/op
Iteration   8: 138.407 ns/op
Iteration   9: 138.505 ns/op
Iteration  10: 139.451 ns/op

# Run progress: 24.79% complete, ETA 00:28:54
# Fork: 2 of 2
# Warmup Iteration   1: 229.081 ns/op
# Warmup Iteration   2: 182.055 ns/op
# Warmup Iteration   3: 138.609 ns/op
Iteration   1: 138.680 ns/op
Iteration   2: 138.559 ns/op
Iteration   3: 138.425 ns/op
Iteration   4: 138.887 ns/op
Iteration   5: 138.631 ns/op
Iteration   6: 138.628 ns/op
Iteration   7: 138.471 ns/op
Iteration   8: 138.375 ns/op
Iteration   9: 138.511 ns/op
Iteration  10: 138.552 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  138.629 ±(99.9%) 0.207 ns/op [Average]
  (min, avg, max) = (138.375, 138.629, 139.451), stdev = 0.239
  CI (99.9%): [138.422, 138.836] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 1, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 24.86% complete, ETA 00:28:53
# Fork: 1 of 2
# Warmup Iteration   1: 14097.082 ns/op
# Warmup Iteration   2: 10126.388 ns/op
# Warmup Iteration   3: 3941.937 ns/op
Iteration   1: 3884.127 ns/op
Iteration   2: 3881.651 ns/op
Iteration   3: 9834.993 ns/op
Iteration   4: 3563.936 ns/op
Iteration   5: 3848.785 ns/op
Iteration   6: 3867.415 ns/op
Iteration   7: 3855.879 ns/op
Iteration   8: 3834.019 ns/op
Iteration   9: 3801.088 ns/op
Iteration  10: 3572.635 ns/op

# Run progress: 24.93% complete, ETA 00:28:51
# Fork: 2 of 2
# Warmup Iteration   1: 10868.852 ns/op
# Warmup Iteration   2: 73563.413 ns/op
# Warmup Iteration   3: 4307.160 ns/op
Iteration   1: 3907.073 ns/op
Iteration   2: 3884.149 ns/op
Iteration   3: 13898.817 ns/op
Iteration   4: 3633.135 ns/op
Iteration   5: 3942.252 ns/op
Iteration   6: 3951.388 ns/op
Iteration   7: 3889.458 ns/op
Iteration   8: 3901.633 ns/op
Iteration   9: 3920.365 ns/op
Iteration  10: 3648.213 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4626.050 ±(99.9%) 2227.623 ns/op [Average]
  (min, avg, max) = (3563.936, 4626.050, 13898.817), stdev = 2565.334
  CI (99.9%): [2398.427, 6853.674] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 25.00% complete, ETA 00:28:49
# Fork: 1 of 2
# Warmup Iteration   1: 22.548 ns/op
# Warmup Iteration   2: 25.124 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 16.022 ns/op
Iteration   4: 16.068 ns/op
Iteration   5: 15.686 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.115 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.573 ns/op

# Run progress: 25.07% complete, ETA 00:28:48
# Fork: 2 of 2
# Warmup Iteration   1: 22.037 ns/op
# Warmup Iteration   2: 25.280 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.575 ns/op
Iteration   2: 15.572 ns/op
Iteration   3: 15.968 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.107 ns/op
Iteration   9: 15.572 ns/op
Iteration  10: 15.572 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.025 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.572, 16.025, 19.115), stdev = 1.069
  CI (99.9%): [15.097, 16.953] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 25.14% complete, ETA 00:28:46
# Fork: 1 of 2
# Warmup Iteration   1: 19413.194 ns/op
# Warmup Iteration   2: 1001.889 ns/op
# Warmup Iteration   3: 790.121 ns/op
Iteration   1: 738.611 ns/op
Iteration   2: 739.307 ns/op
Iteration   3: 740.134 ns/op
Iteration   4: 760.057 ns/op
Iteration   5: 739.322 ns/op
Iteration   6: 739.372 ns/op
Iteration   7: 740.017 ns/op
Iteration   8: 746.922 ns/op
Iteration   9: 737.739 ns/op
Iteration  10: 738.458 ns/op

# Run progress: 25.21% complete, ETA 00:28:45
# Fork: 2 of 2
# Warmup Iteration   1: 11183.101 ns/op
# Warmup Iteration   2: 1035.707 ns/op
# Warmup Iteration   3: 733.334 ns/op
Iteration   1: 734.272 ns/op
Iteration   2: 732.324 ns/op
Iteration   3: 735.582 ns/op
Iteration   4: 739.002 ns/op
Iteration   5: 734.228 ns/op
Iteration   6: 735.403 ns/op
Iteration   7: 732.750 ns/op
Iteration   8: 743.721 ns/op
Iteration   9: 734.340 ns/op
Iteration  10: 734.636 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  738.810 ±(99.9%) 5.370 ns/op [Average]
  (min, avg, max) = (732.324, 738.810, 760.057), stdev = 6.184
  CI (99.9%): [733.440, 744.180] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 25.28% complete, ETA 00:28:43
# Fork: 1 of 2
# Warmup Iteration   1: 3093.338 ns/op
# Warmup Iteration   2: 1095.926 ns/op
# Warmup Iteration   3: 855.846 ns/op
Iteration   1: 857.742 ns/op
Iteration   2: 856.515 ns/op
Iteration   3: 855.665 ns/op
Iteration   4: 883.632 ns/op
Iteration   5: 855.164 ns/op
Iteration   6: 855.336 ns/op
Iteration   7: 854.991 ns/op
Iteration   8: 856.089 ns/op
Iteration   9: 856.120 ns/op
Iteration  10: 854.849 ns/op

# Run progress: 25.35% complete, ETA 00:28:41
# Fork: 2 of 2
# Warmup Iteration   1: 3044.153 ns/op
# Warmup Iteration   2: 1143.759 ns/op
# Warmup Iteration   3: 854.901 ns/op
Iteration   1: 855.144 ns/op
Iteration   2: 855.374 ns/op
Iteration   3: 855.590 ns/op
Iteration   4: 881.671 ns/op
Iteration   5: 855.661 ns/op
Iteration   6: 855.190 ns/op
Iteration   7: 855.537 ns/op
Iteration   8: 855.232 ns/op
Iteration   9: 855.696 ns/op
Iteration  10: 855.195 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  858.320 ±(99.9%) 7.253 ns/op [Average]
  (min, avg, max) = (854.849, 858.320, 883.632), stdev = 8.352
  CI (99.9%): [851.067, 865.572] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 25.42% complete, ETA 00:28:40
# Fork: 1 of 2
# Warmup Iteration   1: 3070.687 ns/op
# Warmup Iteration   2: 1095.878 ns/op
# Warmup Iteration   3: 855.276 ns/op
Iteration   1: 855.532 ns/op
Iteration   2: 855.498 ns/op
Iteration   3: 855.333 ns/op
Iteration   4: 881.754 ns/op
Iteration   5: 855.637 ns/op
Iteration   6: 855.363 ns/op
Iteration   7: 855.569 ns/op
Iteration   8: 855.532 ns/op
Iteration   9: 856.090 ns/op
Iteration  10: 855.512 ns/op

# Run progress: 25.49% complete, ETA 00:28:38
# Fork: 2 of 2
# Warmup Iteration   1: 3192.538 ns/op
# Warmup Iteration   2: 1158.211 ns/op
# Warmup Iteration   3: 856.262 ns/op
Iteration   1: 856.856 ns/op
Iteration   2: 856.292 ns/op
Iteration   3: 856.544 ns/op
Iteration   4: 882.324 ns/op
Iteration   5: 857.094 ns/op
Iteration   6: 856.657 ns/op
Iteration   7: 856.534 ns/op
Iteration   8: 856.551 ns/op
Iteration   9: 856.737 ns/op
Iteration  10: 856.300 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  858.685 ±(99.9%) 6.953 ns/op [Average]
  (min, avg, max) = (855.333, 858.685, 882.324), stdev = 8.007
  CI (99.9%): [851.733, 865.638] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 25.56% complete, ETA 00:28:37
# Fork: 1 of 2
# Warmup Iteration   1: 1242.956 ns/op
# Warmup Iteration   2: 986.565 ns/op
# Warmup Iteration   3: 767.639 ns/op
Iteration   1: 767.576 ns/op
Iteration   2: 767.401 ns/op
Iteration   3: 768.661 ns/op
Iteration   4: 772.981 ns/op
Iteration   5: 767.902 ns/op
Iteration   6: 767.942 ns/op
Iteration   7: 768.509 ns/op
Iteration   8: 768.434 ns/op
Iteration   9: 768.318 ns/op
Iteration  10: 767.963 ns/op

# Run progress: 25.62% complete, ETA 00:28:35
# Fork: 2 of 2
# Warmup Iteration   1: 1138.132 ns/op
# Warmup Iteration   2: 968.970 ns/op
# Warmup Iteration   3: 768.385 ns/op
Iteration   1: 768.413 ns/op
Iteration   2: 768.015 ns/op
Iteration   3: 768.781 ns/op
Iteration   4: 772.901 ns/op
Iteration   5: 767.763 ns/op
Iteration   6: 768.314 ns/op
Iteration   7: 768.591 ns/op
Iteration   8: 767.909 ns/op
Iteration   9: 768.242 ns/op
Iteration  10: 768.353 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  768.648 ±(99.9%) 1.313 ns/op [Average]
  (min, avg, max) = (767.401, 768.648, 772.981), stdev = 1.512
  CI (99.9%): [767.335, 769.961] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 25.69% complete, ETA 00:28:33
# Fork: 1 of 2
# Warmup Iteration   1: 1749.505 ns/op
# Warmup Iteration   2: 1061.289 ns/op
# Warmup Iteration   3: 733.787 ns/op
Iteration   1: 734.414 ns/op
Iteration   2: 735.067 ns/op
Iteration   3: 732.581 ns/op
Iteration   4: 736.931 ns/op
Iteration   5: 734.037 ns/op
Iteration   6: 734.195 ns/op
Iteration   7: 733.201 ns/op
Iteration   8: 740.620 ns/op
Iteration   9: 741.617 ns/op
Iteration  10: 733.391 ns/op

# Run progress: 25.76% complete, ETA 00:28:32
# Fork: 2 of 2
# Warmup Iteration   1: 2377.658 ns/op
# Warmup Iteration   2: 1061.544 ns/op
# Warmup Iteration   3: 734.021 ns/op
Iteration   1: 733.561 ns/op
Iteration   2: 734.050 ns/op
Iteration   3: 735.737 ns/op
Iteration   4: 737.528 ns/op
Iteration   5: 732.751 ns/op
Iteration   6: 734.675 ns/op
Iteration   7: 733.843 ns/op
Iteration   8: 740.524 ns/op
Iteration   9: 743.061 ns/op
Iteration  10: 732.889 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  735.734 ±(99.9%) 2.805 ns/op [Average]
  (min, avg, max) = (732.581, 735.734, 743.061), stdev = 3.231
  CI (99.9%): [732.928, 738.539] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 25.83% complete, ETA 00:28:30
# Fork: 1 of 2
# Warmup Iteration   1: 22.050 ns/op
# Warmup Iteration   2: 24.464 ns/op
# Warmup Iteration   3: 15.769 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.686 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.128 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.582 ns/op

# Run progress: 25.90% complete, ETA 00:28:29
# Fork: 2 of 2
# Warmup Iteration   1: 22.066 ns/op
# Warmup Iteration   2: 25.684 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.935 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.109 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.573, 16.020, 19.128), stdev = 1.071
  CI (99.9%): [15.090, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 25.97% complete, ETA 00:28:27
# Fork: 1 of 2
# Warmup Iteration   1: 585.846 ns/op
# Warmup Iteration   2: 428.987 ns/op
# Warmup Iteration   3: 318.303 ns/op
Iteration   1: 318.515 ns/op
Iteration   2: 318.814 ns/op
Iteration   3: 318.354 ns/op
Iteration   4: 318.591 ns/op
Iteration   5: 318.659 ns/op
Iteration   6: 318.377 ns/op
Iteration   7: 318.748 ns/op
Iteration   8: 322.298 ns/op
Iteration   9: 318.595 ns/op
Iteration  10: 318.420 ns/op

# Run progress: 26.04% complete, ETA 00:28:25
# Fork: 2 of 2
# Warmup Iteration   1: 606.116 ns/op
# Warmup Iteration   2: 464.973 ns/op
# Warmup Iteration   3: 341.450 ns/op
Iteration   1: 318.805 ns/op
Iteration   2: 318.517 ns/op
Iteration   3: 317.893 ns/op
Iteration   4: 318.825 ns/op
Iteration   5: 319.451 ns/op
Iteration   6: 318.281 ns/op
Iteration   7: 318.441 ns/op
Iteration   8: 323.118 ns/op
Iteration   9: 319.092 ns/op
Iteration  10: 318.521 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  319.016 ±(99.9%) 1.137 ns/op [Average]
  (min, avg, max) = (317.893, 319.016, 323.118), stdev = 1.309
  CI (99.9%): [317.879, 320.152] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 26.11% complete, ETA 00:28:24
# Fork: 1 of 2
# Warmup Iteration   1: 7211.208 ns/op
# Warmup Iteration   2: 631.732 ns/op
# Warmup Iteration   3: 442.933 ns/op
Iteration   1: 444.765 ns/op
Iteration   2: 444.056 ns/op
Iteration   3: 443.102 ns/op
Iteration   4: 442.125 ns/op
Iteration   5: 444.691 ns/op
Iteration   6: 444.778 ns/op
Iteration   7: 444.989 ns/op
Iteration   8: 444.300 ns/op
Iteration   9: 443.921 ns/op
Iteration  10: 444.005 ns/op

# Run progress: 26.18% complete, ETA 00:28:22
# Fork: 2 of 2
# Warmup Iteration   1: 952.140 ns/op
# Warmup Iteration   2: 600.152 ns/op
# Warmup Iteration   3: 463.411 ns/op
Iteration   1: 462.733 ns/op
Iteration   2: 462.954 ns/op
Iteration   3: 462.609 ns/op
Iteration   4: 463.677 ns/op
Iteration   5: 463.453 ns/op
Iteration   6: 463.686 ns/op
Iteration   7: 463.668 ns/op
Iteration   8: 463.788 ns/op
Iteration   9: 462.820 ns/op
Iteration  10: 463.136 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  453.663 ±(99.9%) 8.564 ns/op [Average]
  (min, avg, max) = (442.125, 453.663, 463.788), stdev = 9.862
  CI (99.9%): [445.099, 462.227] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 26.25% complete, ETA 00:28:21
# Fork: 1 of 2
# Warmup Iteration   1: 3783.185 ns/op
# Warmup Iteration   2: 601.195 ns/op
# Warmup Iteration   3: 461.785 ns/op
Iteration   1: 461.933 ns/op
Iteration   2: 462.899 ns/op
Iteration   3: 461.492 ns/op
Iteration   4: 462.480 ns/op
Iteration   5: 462.217 ns/op
Iteration   6: 461.830 ns/op
Iteration   7: 462.043 ns/op
Iteration   8: 461.755 ns/op
Iteration   9: 462.032 ns/op
Iteration  10: 461.758 ns/op

# Run progress: 26.32% complete, ETA 00:28:19
# Fork: 2 of 2
# Warmup Iteration   1: 5093.193 ns/op
# Warmup Iteration   2: 627.661 ns/op
# Warmup Iteration   3: 461.396 ns/op
Iteration   1: 460.880 ns/op
Iteration   2: 462.234 ns/op
Iteration   3: 461.616 ns/op
Iteration   4: 461.954 ns/op
Iteration   5: 461.079 ns/op
Iteration   6: 461.687 ns/op
Iteration   7: 461.918 ns/op
Iteration   8: 461.221 ns/op
Iteration   9: 462.022 ns/op
Iteration  10: 462.285 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  461.867 ±(99.9%) 0.410 ns/op [Average]
  (min, avg, max) = (460.880, 461.867, 462.899), stdev = 0.473
  CI (99.9%): [461.456, 462.277] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 26.39% complete, ETA 00:28:17
# Fork: 1 of 2
# Warmup Iteration   1: 1532.404 ns/op
# Warmup Iteration   2: 1198.908 ns/op
# Warmup Iteration   3: 871.188 ns/op
Iteration   1: 884.749 ns/op
Iteration   2: 871.583 ns/op
Iteration   3: 871.602 ns/op
Iteration   4: 876.569 ns/op
Iteration   5: 872.106 ns/op
Iteration   6: 871.879 ns/op
Iteration   7: 871.778 ns/op
Iteration   8: 883.063 ns/op
Iteration   9: 871.162 ns/op
Iteration  10: 871.550 ns/op

# Run progress: 26.46% complete, ETA 00:28:16
# Fork: 2 of 2
# Warmup Iteration   1: 1418.484 ns/op
# Warmup Iteration   2: 1164.226 ns/op
# Warmup Iteration   3: 871.451 ns/op
Iteration   1: 872.160 ns/op
Iteration   2: 872.298 ns/op
Iteration   3: 871.693 ns/op
Iteration   4: 871.878 ns/op
Iteration   5: 871.601 ns/op
Iteration   6: 871.326 ns/op
Iteration   7: 871.244 ns/op
Iteration   8: 873.010 ns/op
Iteration   9: 870.642 ns/op
Iteration  10: 871.455 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  873.167 ±(99.9%) 3.360 ns/op [Average]
  (min, avg, max) = (870.642, 873.167, 884.749), stdev = 3.869
  CI (99.9%): [869.808, 876.527] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 26.53% complete, ETA 00:28:14
# Fork: 1 of 2
# Warmup Iteration   1: 7964.223 ns/op
# Warmup Iteration   2: 4954.321 ns/op
# Warmup Iteration   3: 3394.734 ns/op
Iteration   1: 3395.290 ns/op
Iteration   2: 3396.534 ns/op
Iteration   3: 3408.734 ns/op
Iteration   4: 3383.248 ns/op
Iteration   5: 3382.887 ns/op
Iteration   6: 3391.569 ns/op
Iteration   7: 3382.884 ns/op
Iteration   8: 3389.439 ns/op
Iteration   9: 3408.617 ns/op
Iteration  10: 3382.225 ns/op

# Run progress: 26.60% complete, ETA 00:28:13
# Fork: 2 of 2
# Warmup Iteration   1: 10838.538 ns/op
# Warmup Iteration   2: 5115.401 ns/op
# Warmup Iteration   3: 3581.271 ns/op
Iteration   1: 3585.666 ns/op
Iteration   2: 3583.317 ns/op
Iteration   3: 3591.164 ns/op
Iteration   4: 3568.319 ns/op
Iteration   5: 3575.418 ns/op
Iteration   6: 3575.796 ns/op
Iteration   7: 3570.640 ns/op
Iteration   8: 3567.184 ns/op
Iteration   9: 3602.970 ns/op
Iteration  10: 3568.715 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3485.531 ±(99.9%) 83.717 ns/op [Average]
  (min, avg, max) = (3382.225, 3485.531, 3602.970), stdev = 96.409
  CI (99.9%): [3401.814, 3569.248] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 26.67% complete, ETA 00:28:11
# Fork: 1 of 2
# Warmup Iteration   1: 22.759 ns/op
# Warmup Iteration   2: 25.994 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.571 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.995 ns/op
Iteration   4: 15.941 ns/op
Iteration   5: 15.686 ns/op
Iteration   6: 15.584 ns/op
Iteration   7: 15.585 ns/op
Iteration   8: 19.100 ns/op
Iteration   9: 15.567 ns/op
Iteration  10: 15.581 ns/op

# Run progress: 26.74% complete, ETA 00:28:09
# Fork: 2 of 2
# Warmup Iteration   1: 22.158 ns/op
# Warmup Iteration   2: 26.529 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.986 ns/op
Iteration   4: 15.939 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.925 ns/op [Average]
  (min, avg, max) = (15.567, 16.019, 19.105), stdev = 1.066
  CI (99.9%): [15.094, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 26.81% complete, ETA 00:28:08
# Fork: 1 of 2
# Warmup Iteration   1: 433.864 ns/op
# Warmup Iteration   2: 1202.046 ns/op
# Warmup Iteration   3: 660.328 ns/op
Iteration   1: 2269.848 ns/op
Iteration   2: 704.864 ns/op
Iteration   3: 2869.301 ns/op
Iteration   4: 4401.997 ns/op
Iteration   5: 1265.111 ns/op
Iteration   6: 375.047 ns/op
Iteration   7: 2151.842 ns/op
Iteration   8: 297.218 ns/op
Iteration   9: 491.658 ns/op
Iteration  10: 397.457 ns/op

# Run progress: 26.88% complete, ETA 00:28:06
# Fork: 2 of 2
# Warmup Iteration   1: 457.728 ns/op
# Warmup Iteration   2: 1171.510 ns/op
# Warmup Iteration   3: 804.626 ns/op
Iteration   1: 9480.195 ns/op
Iteration   2: 706.374 ns/op
Iteration   3: 17780.488 ns/op
Iteration   4: 3737.888 ns/op
Iteration   5: 1352.342 ns/op
Iteration   6: 355.834 ns/op
Iteration   7: 6530.878 ns/op
Iteration   8: 295.875 ns/op
Iteration   9: 468.704 ns/op
Iteration  10: 381.725 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2815.732 ±(99.9%) 3711.509 ns/op [Average]
  (min, avg, max) = (295.875, 2815.732, 17780.488), stdev = 4274.179
  CI (99.9%): [≈ 0, 6527.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 26.94% complete, ETA 00:28:04
# Fork: 1 of 2
# Warmup Iteration   1: 1574.488 ns/op
# Warmup Iteration   2: 37120.395 ns/op
# Warmup Iteration   3: 841.300 ns/op
Iteration   1: 333.359 ns/op
Iteration   2: 920.799 ns/op
Iteration   3: 1189.772 ns/op
Iteration   4: 711.557 ns/op
Iteration   5: 499.280 ns/op
Iteration   6: 554.451 ns/op
Iteration   7: 449.590 ns/op
Iteration   8: 410.249 ns/op
Iteration   9: 435.959 ns/op
Iteration  10: 518.889 ns/op

# Run progress: 27.01% complete, ETA 00:28:03
# Fork: 2 of 2
# Warmup Iteration   1: 2839.635 ns/op
# Warmup Iteration   2: 35019.798 ns/op
# Warmup Iteration   3: 1000.538 ns/op
Iteration   1: 348.152 ns/op
Iteration   2: 703.868 ns/op
Iteration   3: 1210.066 ns/op
Iteration   4: 778.210 ns/op
Iteration   5: 499.325 ns/op
Iteration   6: 565.424 ns/op
Iteration   7: 445.072 ns/op
Iteration   8: 405.350 ns/op
Iteration   9: 431.253 ns/op
Iteration  10: 558.792 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  598.471 ±(99.9%) 220.051 ns/op [Average]
  (min, avg, max) = (333.359, 598.471, 1210.066), stdev = 253.411
  CI (99.9%): [378.420, 818.522] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 27.08% complete, ETA 00:28:01
# Fork: 1 of 2
# Warmup Iteration   1: 1996.958 ns/op
# Warmup Iteration   2: 1154.045 ns/op
# Warmup Iteration   3: 429.533 ns/op
Iteration   1: 873.207 ns/op
Iteration   2: 1116.328 ns/op
Iteration   3: 655.539 ns/op
Iteration   4: 588.758 ns/op
Iteration   5: 474.967 ns/op
Iteration   6: 530.539 ns/op
Iteration   7: 286.024 ns/op
Iteration   8: 381.895 ns/op
Iteration   9: 334.622 ns/op
Iteration  10: 290.062 ns/op

# Run progress: 27.15% complete, ETA 00:27:59
# Fork: 2 of 2
# Warmup Iteration   1: 4288.808 ns/op
# Warmup Iteration   2: 2266.064 ns/op
# Warmup Iteration   3: 506.801 ns/op
Iteration   1: 2744.613 ns/op
Iteration   2: 1140.158 ns/op
Iteration   3: 545.556 ns/op
Iteration   4: 467.288 ns/op
Iteration   5: 467.937 ns/op
Iteration   6: 526.263 ns/op
Iteration   7: 277.888 ns/op
Iteration   8: 376.339 ns/op
Iteration   9: 326.010 ns/op
Iteration  10: 281.873 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  634.293 ±(99.9%) 484.655 ns/op [Average]
  (min, avg, max) = (277.888, 634.293, 2744.613), stdev = 558.130
  CI (99.9%): [149.638, 1118.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 27.22% complete, ETA 00:27:58
# Fork: 1 of 2
# Warmup Iteration   1: 1445.022 ns/op
# Warmup Iteration   2: 1112.046 ns/op
# Warmup Iteration   3: 847.815 ns/op
Iteration   1: 783.087 ns/op
Iteration   2: 854.435 ns/op
Iteration   3: 853.750 ns/op
Iteration   4: 841.749 ns/op
Iteration   5: 864.877 ns/op
Iteration   6: 902.544 ns/op
Iteration   7: 896.037 ns/op
Iteration   8: 915.223 ns/op
Iteration   9: 823.433 ns/op
Iteration  10: 841.719 ns/op

# Run progress: 27.29% complete, ETA 00:27:56
# Fork: 2 of 2
# Warmup Iteration   1: 1666.288 ns/op
# Warmup Iteration   2: 1062.221 ns/op
# Warmup Iteration   3: 837.008 ns/op
Iteration   1: 778.927 ns/op
Iteration   2: 852.493 ns/op
Iteration   3: 847.450 ns/op
Iteration   4: 837.612 ns/op
Iteration   5: 880.070 ns/op
Iteration   6: 899.148 ns/op
Iteration   7: 896.751 ns/op
Iteration   8: 915.407 ns/op
Iteration   9: 820.272 ns/op
Iteration  10: 836.969 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  857.098 ±(99.9%) 34.364 ns/op [Average]
  (min, avg, max) = (778.927, 857.098, 915.407), stdev = 39.574
  CI (99.9%): [822.733, 891.462] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 27.36% complete, ETA 00:27:54
# Fork: 1 of 2
# Warmup Iteration   1: 11304.174 ns/op
# Warmup Iteration   2: 4967.229 ns/op
# Warmup Iteration   3: 3497.547 ns/op
Iteration   1: 3566.732 ns/op
Iteration   2: 3526.401 ns/op
Iteration   3: 3514.754 ns/op
Iteration   4: 3534.215 ns/op
Iteration   5: 3507.292 ns/op
Iteration   6: 3533.749 ns/op
Iteration   7: 3522.104 ns/op
Iteration   8: 3563.501 ns/op
Iteration   9: 3539.211 ns/op
Iteration  10: 3494.193 ns/op

# Run progress: 27.43% complete, ETA 00:27:53
# Fork: 2 of 2
# Warmup Iteration   1: 12532.513 ns/op
# Warmup Iteration   2: 5011.337 ns/op
# Warmup Iteration   3: 3953.329 ns/op
Iteration   1: 3689.518 ns/op
Iteration   2: 3633.068 ns/op
Iteration   3: 3654.707 ns/op
Iteration   4: 3662.983 ns/op
Iteration   5: 3639.293 ns/op
Iteration   6: 3660.260 ns/op
Iteration   7: 3650.602 ns/op
Iteration   8: 3688.775 ns/op
Iteration   9: 3665.527 ns/op
Iteration  10: 3622.993 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3593.494 ±(99.9%) 59.449 ns/op [Average]
  (min, avg, max) = (3494.193, 3593.494, 3689.518), stdev = 68.461
  CI (99.9%): [3534.045, 3652.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 27.50% complete, ETA 00:27:51
# Fork: 1 of 2
# Warmup Iteration   1: 21.992 ns/op
# Warmup Iteration   2: 22.842 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.990 ns/op
Iteration   4: 15.950 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 27.57% complete, ETA 00:27:50
# Fork: 2 of 2
# Warmup Iteration   1: 22.092 ns/op
# Warmup Iteration   2: 25.810 ns/op
# Warmup Iteration   3: 15.776 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.585 ns/op
Iteration   3: 15.992 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.588 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.128 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.022 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.574, 16.022, 19.128), stdev = 1.070
  CI (99.9%): [15.092, 16.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 27.64% complete, ETA 00:27:48
# Fork: 1 of 2
# Warmup Iteration   1: 117.222 ns/op
# Warmup Iteration   2: 122.096 ns/op
# Warmup Iteration   3: 77.822 ns/op
Iteration   1: 77.790 ns/op
Iteration   2: 77.834 ns/op
Iteration   3: 77.720 ns/op
Iteration   4: 77.858 ns/op
Iteration   5: 77.729 ns/op
Iteration   6: 77.824 ns/op
Iteration   7: 77.777 ns/op
Iteration   8: 80.498 ns/op
Iteration   9: 77.807 ns/op
Iteration  10: 77.815 ns/op

# Run progress: 27.71% complete, ETA 00:27:46
# Fork: 2 of 2
# Warmup Iteration   1: 113.933 ns/op
# Warmup Iteration   2: 117.757 ns/op
# Warmup Iteration   3: 77.798 ns/op
Iteration   1: 77.812 ns/op
Iteration   2: 77.812 ns/op
Iteration   3: 77.835 ns/op
Iteration   4: 77.830 ns/op
Iteration   5: 77.751 ns/op
Iteration   6: 77.821 ns/op
Iteration   7: 77.827 ns/op
Iteration   8: 80.420 ns/op
Iteration   9: 77.807 ns/op
Iteration  10: 77.787 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  78.068 ±(99.9%) 0.711 ns/op [Average]
  (min, avg, max) = (77.720, 78.068, 80.498), stdev = 0.819
  CI (99.9%): [77.357, 78.779] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 27.78% complete, ETA 00:27:45
# Fork: 1 of 2
# Warmup Iteration   1: 1693.567 ns/op
# Warmup Iteration   2: 136.302 ns/op
# Warmup Iteration   3: 114.505 ns/op
Iteration   1: 114.556 ns/op
Iteration   2: 114.545 ns/op
Iteration   3: 114.441 ns/op
Iteration   4: 114.538 ns/op
Iteration   5: 114.536 ns/op
Iteration   6: 114.541 ns/op
Iteration   7: 114.554 ns/op
Iteration   8: 114.520 ns/op
Iteration   9: 114.604 ns/op
Iteration  10: 114.500 ns/op

# Run progress: 27.85% complete, ETA 00:27:43
# Fork: 2 of 2
# Warmup Iteration   1: 1690.855 ns/op
# Warmup Iteration   2: 142.402 ns/op
# Warmup Iteration   3: 113.208 ns/op
Iteration   1: 113.164 ns/op
Iteration   2: 113.152 ns/op
Iteration   3: 112.617 ns/op
Iteration   4: 113.249 ns/op
Iteration   5: 113.354 ns/op
Iteration   6: 113.380 ns/op
Iteration   7: 113.174 ns/op
Iteration   8: 113.511 ns/op
Iteration   9: 113.444 ns/op
Iteration  10: 113.150 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  113.877 ±(99.9%) 0.604 ns/op [Average]
  (min, avg, max) = (112.617, 113.877, 114.604), stdev = 0.696
  CI (99.9%): [113.272, 114.481] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 27.92% complete, ETA 00:27:42
# Fork: 1 of 2
# Warmup Iteration   1: 881.637 ns/op
# Warmup Iteration   2: 148.698 ns/op
# Warmup Iteration   3: 110.710 ns/op
Iteration   1: 110.663 ns/op
Iteration   2: 110.825 ns/op
Iteration   3: 111.109 ns/op
Iteration   4: 110.744 ns/op
Iteration   5: 111.014 ns/op
Iteration   6: 110.807 ns/op
Iteration   7: 110.690 ns/op
Iteration   8: 110.646 ns/op
Iteration   9: 110.901 ns/op
Iteration  10: 110.687 ns/op

# Run progress: 27.99% complete, ETA 00:27:40
# Fork: 2 of 2
# Warmup Iteration   1: 463.017 ns/op
# Warmup Iteration   2: 146.599 ns/op
# Warmup Iteration   3: 110.878 ns/op
Iteration   1: 110.938 ns/op
Iteration   2: 110.910 ns/op
Iteration   3: 111.395 ns/op
Iteration   4: 110.877 ns/op
Iteration   5: 111.172 ns/op
Iteration   6: 111.024 ns/op
Iteration   7: 111.034 ns/op
Iteration   8: 111.183 ns/op
Iteration   9: 110.903 ns/op
Iteration  10: 111.163 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  110.934 ±(99.9%) 0.177 ns/op [Average]
  (min, avg, max) = (110.646, 110.934, 111.395), stdev = 0.203
  CI (99.9%): [110.758, 111.111] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 28.06% complete, ETA 00:27:38
# Fork: 1 of 2
# Warmup Iteration   1: 108.786 ns/op
# Warmup Iteration   2: 97.185 ns/op
# Warmup Iteration   3: 73.157 ns/op
Iteration   1: 73.270 ns/op
Iteration   2: 73.306 ns/op
Iteration   3: 73.220 ns/op
Iteration   4: 73.194 ns/op
Iteration   5: 73.227 ns/op
Iteration   6: 73.267 ns/op
Iteration   7: 73.174 ns/op
Iteration   8: 73.210 ns/op
Iteration   9: 73.302 ns/op
Iteration  10: 73.171 ns/op

# Run progress: 28.13% complete, ETA 00:27:37
# Fork: 2 of 2
# Warmup Iteration   1: 109.318 ns/op
# Warmup Iteration   2: 98.223 ns/op
# Warmup Iteration   3: 73.348 ns/op
Iteration   1: 73.376 ns/op
Iteration   2: 73.445 ns/op
Iteration   3: 73.278 ns/op
Iteration   4: 73.367 ns/op
Iteration   5: 73.256 ns/op
Iteration   6: 73.396 ns/op
Iteration   7: 73.245 ns/op
Iteration   8: 73.388 ns/op
Iteration   9: 73.302 ns/op
Iteration  10: 73.377 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.289 ±(99.9%) 0.070 ns/op [Average]
  (min, avg, max) = (73.171, 73.289, 73.445), stdev = 0.080
  CI (99.9%): [73.219, 73.358] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 28.19% complete, ETA 00:27:35
# Fork: 1 of 2
# Warmup Iteration   1: 214.868 ns/op
# Warmup Iteration   2: 222.049 ns/op
# Warmup Iteration   3: 124.776 ns/op
Iteration   1: 124.841 ns/op
Iteration   2: 126.305 ns/op
Iteration   3: 124.811 ns/op
Iteration   4: 124.954 ns/op
Iteration   5: 124.845 ns/op
Iteration   6: 124.810 ns/op
Iteration   7: 124.756 ns/op
Iteration   8: 128.081 ns/op
Iteration   9: 130.555 ns/op
Iteration  10: 124.796 ns/op

# Run progress: 28.26% complete, ETA 00:27:33
# Fork: 2 of 2
# Warmup Iteration   1: 213.569 ns/op
# Warmup Iteration   2: 225.913 ns/op
# Warmup Iteration   3: 124.407 ns/op
Iteration   1: 124.405 ns/op
Iteration   2: 126.671 ns/op
Iteration   3: 124.340 ns/op
Iteration   4: 124.580 ns/op
Iteration   5: 124.300 ns/op
Iteration   6: 124.456 ns/op
Iteration   7: 124.428 ns/op
Iteration   8: 127.300 ns/op
Iteration   9: 130.480 ns/op
Iteration  10: 124.433 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.707 ±(99.9%) 1.700 ns/op [Average]
  (min, avg, max) = (124.300, 125.707, 130.555), stdev = 1.957
  CI (99.9%): [124.008, 127.407] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 28.33% complete, ETA 00:27:32
# Fork: 1 of 2
# Warmup Iteration   1: 23.145 ns/op
# Warmup Iteration   2: 25.958 ns/op
# Warmup Iteration   3: 15.778 ns/op
Iteration   1: 15.586 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.944 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.572 ns/op
Iteration   8: 19.119 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 28.40% complete, ETA 00:27:30
# Fork: 2 of 2
# Warmup Iteration   1: 22.302 ns/op
# Warmup Iteration   2: 24.704 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.569 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.990 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.107 ns/op
Iteration   9: 15.570 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.569, 16.019, 19.119), stdev = 1.069
  CI (99.9%): [15.090, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 28.47% complete, ETA 00:27:29
# Fork: 1 of 2
# Warmup Iteration   1: 1751.131 ns/op
# Warmup Iteration   2: 43517.865 ns/op
# Warmup Iteration   3: 1811.057 ns/op
Iteration   1: 762.096 ns/op
Iteration   2: 36506.464 ns/op
Iteration   3: 611.251 ns/op
Iteration   4: 1055.554 ns/op
Iteration   5: 1104.022 ns/op
Iteration   6: 40116.329 ns/op
Iteration   7: 790.088 ns/op
Iteration   8: 629.362 ns/op
Iteration   9: 574.742 ns/op
Iteration  10: 750.890 ns/op

# Run progress: 28.54% complete, ETA 00:27:27
# Fork: 2 of 2
# Warmup Iteration   1: 1636.276 ns/op
# Warmup Iteration   2: 43145.762 ns/op
# Warmup Iteration   3: 3204.760 ns/op
Iteration   1: 752.561 ns/op
Iteration   2: 43620.707 ns/op
Iteration   3: 579.311 ns/op
Iteration   4: 1213.455 ns/op
Iteration   5: 1281.514 ns/op
Iteration   6: 38043.766 ns/op
Iteration   7: 777.393 ns/op
Iteration   8: 650.837 ns/op
Iteration   9: 601.602 ns/op
Iteration  10: 758.377 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8559.016 ±(99.9%) 13856.776 ns/op [Average]
  (min, avg, max) = (574.742, 8559.016, 43620.707), stdev = 15957.484
  CI (99.9%): [≈ 0, 22415.792] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 28.61% complete, ETA 00:27:25
# Fork: 1 of 2
# Warmup Iteration   1: 7674.608 ns/op
# Warmup Iteration   2: 5586.571 ns/op
# Warmup Iteration   3: 1377.166 ns/op
Iteration   1: 513.951 ns/op
Iteration   2: 2185.349 ns/op
Iteration   3: 2677.089 ns/op
Iteration   4: 738.459 ns/op
Iteration   5: 644.834 ns/op
Iteration   6: 647.858 ns/op
Iteration   7: 571.432 ns/op
Iteration   8: 591.887 ns/op
Iteration   9: 598.674 ns/op
Iteration  10: 709.540 ns/op

# Run progress: 28.68% complete, ETA 00:27:24
# Fork: 2 of 2
# Warmup Iteration   1: 7316.518 ns/op
# Warmup Iteration   2: 6391.179 ns/op
# Warmup Iteration   3: 1378.761 ns/op
Iteration   1: 513.078 ns/op
Iteration   2: 3118.053 ns/op
Iteration   3: 2898.319 ns/op
Iteration   4: 723.673 ns/op
Iteration   5: 645.044 ns/op
Iteration   6: 649.503 ns/op
Iteration   7: 576.687 ns/op
Iteration   8: 577.642 ns/op
Iteration   9: 595.200 ns/op
Iteration  10: 708.573 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1044.242 ±(99.9%) 760.869 ns/op [Average]
  (min, avg, max) = (513.078, 1044.242, 3118.053), stdev = 876.218
  CI (99.9%): [283.373, 1805.112] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 28.75% complete, ETA 00:27:22
# Fork: 1 of 2
# Warmup Iteration   1: 10791.618 ns/op
# Warmup Iteration   2: 22766.306 ns/op
# Warmup Iteration   3: 709.998 ns/op
Iteration   1: 18433.976 ns/op
Iteration   2: 15532.318 ns/op
Iteration   3: 1938.877 ns/op
Iteration   4: 644.638 ns/op
Iteration   5: 648.799 ns/op
Iteration   6: 642.380 ns/op
Iteration   7: 574.998 ns/op
Iteration   8: 629.413 ns/op
Iteration   9: 587.640 ns/op
Iteration  10: 708.267 ns/op

# Run progress: 28.82% complete, ETA 00:27:21
# Fork: 2 of 2
# Warmup Iteration   1: 7779.635 ns/op
# Warmup Iteration   2: 2783.194 ns/op
# Warmup Iteration   3: 707.630 ns/op
Iteration   1: 5338.327 ns/op
Iteration   2: 14062.857 ns/op
Iteration   3: 13443.177 ns/op
Iteration   4: 647.335 ns/op
Iteration   5: 647.515 ns/op
Iteration   6: 639.751 ns/op
Iteration   7: 575.822 ns/op
Iteration   8: 629.594 ns/op
Iteration   9: 588.861 ns/op
Iteration  10: 709.589 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3881.207 ±(99.9%) 5256.311 ns/op [Average]
  (min, avg, max) = (574.998, 3881.207, 18433.976), stdev = 6053.175
  CI (99.9%): [≈ 0, 9137.518] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 28.89% complete, ETA 00:27:19
# Fork: 1 of 2
# Warmup Iteration   1: 958.502 ns/op
# Warmup Iteration   2: 1713.834 ns/op
# Warmup Iteration   3: 590.442 ns/op
Iteration   1: 444.571 ns/op
Iteration   2: 588.537 ns/op
Iteration   3: 597.067 ns/op
Iteration   4: 537.384 ns/op
Iteration   5: 601.841 ns/op
Iteration   6: 509.033 ns/op
Iteration   7: 546.452 ns/op
Iteration   8: 485.040 ns/op
Iteration   9: 490.606 ns/op
Iteration  10: 590.107 ns/op

# Run progress: 28.96% complete, ETA 00:27:17
# Fork: 2 of 2
# Warmup Iteration   1: 835.527 ns/op
# Warmup Iteration   2: 5875.204 ns/op
# Warmup Iteration   3: 589.582 ns/op
Iteration   1: 444.792 ns/op
Iteration   2: 594.549 ns/op
Iteration   3: 597.030 ns/op
Iteration   4: 537.670 ns/op
Iteration   5: 602.147 ns/op
Iteration   6: 509.006 ns/op
Iteration   7: 530.522 ns/op
Iteration   8: 485.628 ns/op
Iteration   9: 490.420 ns/op
Iteration  10: 589.982 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  538.619 ±(99.9%) 46.977 ns/op [Average]
  (min, avg, max) = (444.571, 538.619, 602.147), stdev = 54.099
  CI (99.9%): [491.642, 585.596] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 29.03% complete, ETA 00:27:16
# Fork: 1 of 2
# Warmup Iteration   1: 10771.971 ns/op
# Warmup Iteration   2: 92671.098 ns/op
# Warmup Iteration   3: 4427.732 ns/op
Iteration   1: 4039.948 ns/op
Iteration   2: 3928.027 ns/op
Iteration   3: 3877.506 ns/op
Iteration   4: 3910.851 ns/op
Iteration   5: 3841.806 ns/op
Iteration   6: 6439.133 ns/op
Iteration   7: 3918.944 ns/op
Iteration   8: 3695.091 ns/op
Iteration   9: 3744.755 ns/op
Iteration  10: 3819.520 ns/op

# Run progress: 29.10% complete, ETA 00:27:14
# Fork: 2 of 2
# Warmup Iteration   1: 10837.185 ns/op
# Warmup Iteration   2: 55152.469 ns/op
# Warmup Iteration   3: 4057.212 ns/op
Iteration   1: 4156.757 ns/op
Iteration   2: 4213.747 ns/op
Iteration   3: 3991.134 ns/op
Iteration   4: 4176.792 ns/op
Iteration   5: 4008.073 ns/op
Iteration   6: 45701.766 ns/op
Iteration   7: 4664.671 ns/op
Iteration   8: 3813.348 ns/op
Iteration   9: 3972.904 ns/op
Iteration  10: 4029.782 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6197.228 ±(99.9%) 8090.323 ns/op [Average]
  (min, avg, max) = (3695.091, 6197.228, 45701.766), stdev = 9316.828
  CI (99.9%): [≈ 0, 14287.551] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 29.17% complete, ETA 00:27:13
# Fork: 1 of 2
# Warmup Iteration   1: 22.208 ns/op
# Warmup Iteration   2: 25.370 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.575 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 16.028 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.572 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.581 ns/op

# Run progress: 29.24% complete, ETA 00:27:11
# Fork: 2 of 2
# Warmup Iteration   1: 22.015 ns/op
# Warmup Iteration   2: 25.907 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.944 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.572, 16.019, 19.112), stdev = 1.068
  CI (99.9%): [15.091, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 29.31% complete, ETA 00:27:09
# Fork: 1 of 2
# Warmup Iteration   1: 2664.423 ns/op
# Warmup Iteration   2: 969.412 ns/op
# Warmup Iteration   3: 669.163 ns/op
Iteration   1: 669.513 ns/op
Iteration   2: 669.489 ns/op
Iteration   3: 669.644 ns/op
Iteration   4: 669.002 ns/op
Iteration   5: 669.605 ns/op
Iteration   6: 669.547 ns/op
Iteration   7: 669.816 ns/op
Iteration   8: 672.034 ns/op
Iteration   9: 669.560 ns/op
Iteration  10: 669.233 ns/op

# Run progress: 29.38% complete, ETA 00:27:08
# Fork: 2 of 2
# Warmup Iteration   1: 2425.814 ns/op
# Warmup Iteration   2: 863.469 ns/op
# Warmup Iteration   3: 664.336 ns/op
Iteration   1: 663.849 ns/op
Iteration   2: 664.231 ns/op
Iteration   3: 664.497 ns/op
Iteration   4: 663.738 ns/op
Iteration   5: 679.374 ns/op
Iteration   6: 664.138 ns/op
Iteration   7: 664.113 ns/op
Iteration   8: 667.985 ns/op
Iteration   9: 663.763 ns/op
Iteration  10: 664.610 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  667.887 ±(99.9%) 3.376 ns/op [Average]
  (min, avg, max) = (663.738, 667.887, 679.374), stdev = 3.888
  CI (99.9%): [664.511, 671.263] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 29.44% complete, ETA 00:27:06
# Fork: 1 of 2
# Warmup Iteration   1: 13935.806 ns/op
# Warmup Iteration   2: 1621.412 ns/op
# Warmup Iteration   3: 1212.640 ns/op
Iteration   1: 1116.244 ns/op
Iteration   2: 1101.738 ns/op
Iteration   3: 1109.552 ns/op
Iteration   4: 1141.268 ns/op
Iteration   5: 1109.927 ns/op
Iteration   6: 1102.603 ns/op
Iteration   7: 1115.804 ns/op
Iteration   8: 1119.174 ns/op
Iteration   9: 1116.497 ns/op
Iteration  10: 1102.566 ns/op

# Run progress: 29.51% complete, ETA 00:27:05
# Fork: 2 of 2
# Warmup Iteration   1: 11212.316 ns/op
# Warmup Iteration   2: 1655.781 ns/op
# Warmup Iteration   3: 1101.526 ns/op
Iteration   1: 1101.148 ns/op
Iteration   2: 1100.695 ns/op
Iteration   3: 1102.113 ns/op
Iteration   4: 1126.794 ns/op
Iteration   5: 1101.366 ns/op
Iteration   6: 1101.445 ns/op
Iteration   7: 1101.132 ns/op
Iteration   8: 1101.801 ns/op
Iteration   9: 1101.463 ns/op
Iteration  10: 1101.533 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1108.743 ±(99.9%) 9.493 ns/op [Average]
  (min, avg, max) = (1100.695, 1108.743, 1141.268), stdev = 10.933
  CI (99.9%): [1099.250, 1118.237] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 29.58% complete, ETA 00:27:03
# Fork: 1 of 2
# Warmup Iteration   1: 17616.636 ns/op
# Warmup Iteration   2: 1758.046 ns/op
# Warmup Iteration   3: 1204.327 ns/op
Iteration   1: 1102.505 ns/op
Iteration   2: 1101.739 ns/op
Iteration   3: 1103.042 ns/op
Iteration   4: 1140.347 ns/op
Iteration   5: 1118.125 ns/op
Iteration   6: 1115.227 ns/op
Iteration   7: 1114.987 ns/op
Iteration   8: 1116.126 ns/op
Iteration   9: 1102.069 ns/op
Iteration  10: 1102.298 ns/op

# Run progress: 29.65% complete, ETA 00:27:01
# Fork: 2 of 2
# Warmup Iteration   1: 23509.434 ns/op
# Warmup Iteration   2: 1775.431 ns/op
# Warmup Iteration   3: 1196.621 ns/op
Iteration   1: 1101.399 ns/op
Iteration   2: 1100.535 ns/op
Iteration   3: 1101.218 ns/op
Iteration   4: 1126.841 ns/op
Iteration   5: 1100.719 ns/op
Iteration   6: 1101.334 ns/op
Iteration   7: 1101.045 ns/op
Iteration   8: 1100.757 ns/op
Iteration   9: 1101.418 ns/op
Iteration  10: 1100.404 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1107.607 ±(99.9%) 9.500 ns/op [Average]
  (min, avg, max) = (1100.404, 1107.607, 1140.347), stdev = 10.940
  CI (99.9%): [1098.107, 1117.107] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 29.72% complete, ETA 00:27:00
# Fork: 1 of 2
# Warmup Iteration   1: 1867.106 ns/op
# Warmup Iteration   2: 1423.356 ns/op
# Warmup Iteration   3: 1051.408 ns/op
Iteration   1: 1051.549 ns/op
Iteration   2: 1050.920 ns/op
Iteration   3: 1050.890 ns/op
Iteration   4: 1052.864 ns/op
Iteration   5: 1051.158 ns/op
Iteration   6: 1051.286 ns/op
Iteration   7: 1051.084 ns/op
Iteration   8: 1051.637 ns/op
Iteration   9: 1050.298 ns/op
Iteration  10: 1051.260 ns/op

# Run progress: 29.79% complete, ETA 00:26:58
# Fork: 2 of 2
# Warmup Iteration   1: 1716.771 ns/op
# Warmup Iteration   2: 1352.312 ns/op
# Warmup Iteration   3: 1051.123 ns/op
Iteration   1: 1050.645 ns/op
Iteration   2: 1050.695 ns/op
Iteration   3: 1051.493 ns/op
Iteration   4: 1050.654 ns/op
Iteration   5: 1050.743 ns/op
Iteration   6: 1050.895 ns/op
Iteration   7: 1050.687 ns/op
Iteration   8: 1051.793 ns/op
Iteration   9: 1050.296 ns/op
Iteration  10: 1050.559 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1051.070 ±(99.9%) 0.521 ns/op [Average]
  (min, avg, max) = (1050.296, 1051.070, 1052.864), stdev = 0.601
  CI (99.9%): [1050.549, 1051.592] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 29.86% complete, ETA 00:26:57
# Fork: 1 of 2
# Warmup Iteration   1: 1758.128 ns/op
# Warmup Iteration   2: 1131.894 ns/op
# Warmup Iteration   3: 778.222 ns/op
Iteration   1: 777.886 ns/op
Iteration   2: 775.785 ns/op
Iteration   3: 783.408 ns/op
Iteration   4: 781.060 ns/op
Iteration   5: 777.506 ns/op
Iteration   6: 777.502 ns/op
Iteration   7: 776.381 ns/op
Iteration   8: 787.995 ns/op
Iteration   9: 780.727 ns/op
Iteration  10: 776.984 ns/op

# Run progress: 29.93% complete, ETA 00:26:55
# Fork: 2 of 2
# Warmup Iteration   1: 2028.181 ns/op
# Warmup Iteration   2: 1124.729 ns/op
# Warmup Iteration   3: 777.093 ns/op
Iteration   1: 776.248 ns/op
Iteration   2: 777.554 ns/op
Iteration   3: 782.997 ns/op
Iteration   4: 780.499 ns/op
Iteration   5: 777.919 ns/op
Iteration   6: 776.882 ns/op
Iteration   7: 775.972 ns/op
Iteration   8: 784.872 ns/op
Iteration   9: 781.636 ns/op
Iteration  10: 776.251 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  779.303 ±(99.9%) 2.984 ns/op [Average]
  (min, avg, max) = (775.785, 779.303, 787.995), stdev = 3.437
  CI (99.9%): [776.319, 782.288] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 30.00% complete, ETA 00:26:53
# Fork: 1 of 2
# Warmup Iteration   1: 22.113 ns/op
# Warmup Iteration   2: 25.989 ns/op
# Warmup Iteration   3: 15.782 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.587 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 30.07% complete, ETA 00:26:52
# Fork: 2 of 2
# Warmup Iteration   1: 22.408 ns/op
# Warmup Iteration   2: 24.915 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.933 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.574, 16.019, 19.106), stdev = 1.066
  CI (99.9%): [15.093, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 30.14% complete, ETA 00:26:50
# Fork: 1 of 2
# Warmup Iteration   1: 392.451 ns/op
# Warmup Iteration   2: 385.319 ns/op
# Warmup Iteration   3: 264.696 ns/op
Iteration   1: 264.274 ns/op
Iteration   2: 264.152 ns/op
Iteration   3: 265.807 ns/op
Iteration   4: 270.700 ns/op
Iteration   5: 263.334 ns/op
Iteration   6: 263.352 ns/op
Iteration   7: 263.195 ns/op
Iteration   8: 272.478 ns/op
Iteration   9: 263.728 ns/op
Iteration  10: 266.621 ns/op

# Run progress: 30.21% complete, ETA 00:26:49
# Fork: 2 of 2
# Warmup Iteration   1: 403.083 ns/op
# Warmup Iteration   2: 355.895 ns/op
# Warmup Iteration   3: 269.471 ns/op
Iteration   1: 269.953 ns/op
Iteration   2: 269.901 ns/op
Iteration   3: 269.813 ns/op
Iteration   4: 275.811 ns/op
Iteration   5: 270.247 ns/op
Iteration   6: 269.727 ns/op
Iteration   7: 269.910 ns/op
Iteration   8: 276.865 ns/op
Iteration   9: 269.711 ns/op
Iteration  10: 269.918 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  268.475 ±(99.9%) 3.516 ns/op [Average]
  (min, avg, max) = (263.195, 268.475, 276.865), stdev = 4.049
  CI (99.9%): [264.959, 271.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 30.28% complete, ETA 00:26:47
# Fork: 1 of 2
# Warmup Iteration   1: 1280.040 ns/op
# Warmup Iteration   2: 686.694 ns/op
# Warmup Iteration   3: 532.060 ns/op
Iteration   1: 532.966 ns/op
Iteration   2: 532.287 ns/op
Iteration   3: 528.947 ns/op
Iteration   4: 531.910 ns/op
Iteration   5: 531.864 ns/op
Iteration   6: 532.466 ns/op
Iteration   7: 532.396 ns/op
Iteration   8: 547.485 ns/op
Iteration   9: 532.197 ns/op
Iteration  10: 533.374 ns/op

# Run progress: 30.35% complete, ETA 00:26:45
# Fork: 2 of 2
# Warmup Iteration   1: 1521.809 ns/op
# Warmup Iteration   2: 691.026 ns/op
# Warmup Iteration   3: 543.092 ns/op
Iteration   1: 542.391 ns/op
Iteration   2: 543.281 ns/op
Iteration   3: 555.553 ns/op
Iteration   4: 543.662 ns/op
Iteration   5: 541.440 ns/op
Iteration   6: 545.629 ns/op
Iteration   7: 544.429 ns/op
Iteration   8: 557.285 ns/op
Iteration   9: 541.477 ns/op
Iteration  10: 544.393 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  539.772 ±(99.9%) 7.134 ns/op [Average]
  (min, avg, max) = (528.947, 539.772, 557.285), stdev = 8.216
  CI (99.9%): [532.637, 546.906] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 30.42% complete, ETA 00:26:44
# Fork: 1 of 2
# Warmup Iteration   1: 663.574 ns/op
# Warmup Iteration   2: 391.500 ns/op
# Warmup Iteration   3: 300.311 ns/op
Iteration   1: 300.434 ns/op
Iteration   2: 299.739 ns/op
Iteration   3: 301.195 ns/op
Iteration   4: 301.269 ns/op
Iteration   5: 299.667 ns/op
Iteration   6: 300.124 ns/op
Iteration   7: 299.587 ns/op
Iteration   8: 301.591 ns/op
Iteration   9: 300.935 ns/op
Iteration  10: 299.937 ns/op

# Run progress: 30.49% complete, ETA 00:26:42
# Fork: 2 of 2
# Warmup Iteration   1: 614.552 ns/op
# Warmup Iteration   2: 437.008 ns/op
# Warmup Iteration   3: 299.910 ns/op
Iteration   1: 300.492 ns/op
Iteration   2: 300.200 ns/op
Iteration   3: 300.806 ns/op
Iteration   4: 301.471 ns/op
Iteration   5: 300.111 ns/op
Iteration   6: 299.871 ns/op
Iteration   7: 299.758 ns/op
Iteration   8: 301.555 ns/op
Iteration   9: 299.741 ns/op
Iteration  10: 299.249 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  300.387 ±(99.9%) 0.638 ns/op [Average]
  (min, avg, max) = (299.249, 300.387, 301.591), stdev = 0.734
  CI (99.9%): [299.749, 301.024] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 30.56% complete, ETA 00:26:41
# Fork: 1 of 2
# Warmup Iteration   1: 1486.132 ns/op
# Warmup Iteration   2: 1169.233 ns/op
# Warmup Iteration   3: 904.217 ns/op
Iteration   1: 904.333 ns/op
Iteration   2: 917.279 ns/op
Iteration   3: 904.854 ns/op
Iteration   4: 904.666 ns/op
Iteration   5: 904.278 ns/op
Iteration   6: 904.277 ns/op
Iteration   7: 904.748 ns/op
Iteration   8: 905.667 ns/op
Iteration   9: 904.327 ns/op
Iteration  10: 904.881 ns/op

# Run progress: 30.63% complete, ETA 00:26:39
# Fork: 2 of 2
# Warmup Iteration   1: 1351.047 ns/op
# Warmup Iteration   2: 1164.186 ns/op
# Warmup Iteration   3: 895.872 ns/op
Iteration   1: 896.206 ns/op
Iteration   2: 896.427 ns/op
Iteration   3: 903.486 ns/op
Iteration   4: 907.684 ns/op
Iteration   5: 896.315 ns/op
Iteration   6: 896.432 ns/op
Iteration   7: 897.392 ns/op
Iteration   8: 896.064 ns/op
Iteration   9: 896.261 ns/op
Iteration  10: 896.285 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  902.093 ±(99.9%) 4.813 ns/op [Average]
  (min, avg, max) = (896.064, 902.093, 917.279), stdev = 5.542
  CI (99.9%): [897.281, 906.906] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 30.69% complete, ETA 00:26:37
# Fork: 1 of 2
# Warmup Iteration   1: 13914.681 ns/op
# Warmup Iteration   2: 4813.003 ns/op
# Warmup Iteration   3: 4046.766 ns/op
Iteration   1: 3730.236 ns/op
Iteration   2: 3727.844 ns/op
Iteration   3: 3735.891 ns/op
Iteration   4: 3716.688 ns/op
Iteration   5: 3715.663 ns/op
Iteration   6: 3714.167 ns/op
Iteration   7: 3714.956 ns/op
Iteration   8: 3699.726 ns/op
Iteration   9: 3725.422 ns/op
Iteration  10: 3715.828 ns/op

# Run progress: 30.76% complete, ETA 00:26:36
# Fork: 2 of 2
# Warmup Iteration   1: 11431.557 ns/op
# Warmup Iteration   2: 5021.618 ns/op
# Warmup Iteration   3: 3540.016 ns/op
Iteration   1: 3547.237 ns/op
Iteration   2: 3544.172 ns/op
Iteration   3: 3541.351 ns/op
Iteration   4: 3540.641 ns/op
Iteration   5: 3538.315 ns/op
Iteration   6: 3535.949 ns/op
Iteration   7: 3546.096 ns/op
Iteration   8: 3539.405 ns/op
Iteration   9: 3576.922 ns/op
Iteration  10: 3530.622 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3631.856 ±(99.9%) 78.811 ns/op [Average]
  (min, avg, max) = (3530.622, 3631.856, 3735.891), stdev = 90.759
  CI (99.9%): [3553.046, 3710.667] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 30.83% complete, ETA 00:26:34
# Fork: 1 of 2
# Warmup Iteration   1: 22.047 ns/op
# Warmup Iteration   2: 25.820 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.949 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 30.90% complete, ETA 00:26:33
# Fork: 2 of 2
# Warmup Iteration   1: 22.060 ns/op
# Warmup Iteration   2: 25.991 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.572 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.976 ns/op
Iteration   4: 15.957 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.570 ns/op
Iteration   7: 15.574 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.571 ns/op
Iteration  10: 15.586 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.570, 16.018, 19.110), stdev = 1.068
  CI (99.9%): [15.091, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 30.97% complete, ETA 00:26:31
# Fork: 1 of 2
# Warmup Iteration   1: 505.071 ns/op
# Warmup Iteration   2: 807.838 ns/op
# Warmup Iteration   3: 465.663 ns/op
Iteration   1: 964.950 ns/op
Iteration   2: 2787.471 ns/op
Iteration   3: 1503.398 ns/op
Iteration   4: 397.067 ns/op
Iteration   5: 329.268 ns/op
Iteration   6: 385.627 ns/op
Iteration   7: 702.585 ns/op
Iteration   8: 293.155 ns/op
Iteration   9: 307.916 ns/op
Iteration  10: 374.077 ns/op

# Run progress: 31.04% complete, ETA 00:26:29
# Fork: 2 of 2
# Warmup Iteration   1: 474.491 ns/op
# Warmup Iteration   2: 682.672 ns/op
# Warmup Iteration   3: 389.979 ns/op
Iteration   1: 1467.995 ns/op
Iteration   2: 1486.690 ns/op
Iteration   3: 2462.742 ns/op
Iteration   4: 407.689 ns/op
Iteration   5: 339.186 ns/op
Iteration   6: 392.127 ns/op
Iteration   7: 608.200 ns/op
Iteration   8: 305.686 ns/op
Iteration   9: 316.509 ns/op
Iteration  10: 385.202 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  810.877 ±(99.9%) 649.124 ns/op [Average]
  (min, avg, max) = (293.155, 810.877, 2787.471), stdev = 747.532
  CI (99.9%): [161.753, 1460.001] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 31.11% complete, ETA 00:26:28
# Fork: 1 of 2
# Warmup Iteration   1: 4595.453 ns/op
# Warmup Iteration   2: 1899.776 ns/op
# Warmup Iteration   3: 702.122 ns/op
Iteration   1: 16283.290 ns/op
Iteration   2: 8723.694 ns/op
Iteration   3: 1232.151 ns/op
Iteration   4: 1129.631 ns/op
Iteration   5: 451.723 ns/op
Iteration   6: 506.248 ns/op
Iteration   7: 569.176 ns/op
Iteration   8: 629.349 ns/op
Iteration   9: 520.986 ns/op
Iteration  10: 527.694 ns/op

# Run progress: 31.18% complete, ETA 00:26:26
# Fork: 2 of 2
# Warmup Iteration   1: 11039.930 ns/op
# Warmup Iteration   2: 4790.334 ns/op
# Warmup Iteration   3: 800.930 ns/op
Iteration   1: 16079.875 ns/op
Iteration   2: 2155.048 ns/op
Iteration   3: 1417.128 ns/op
Iteration   4: 910.280 ns/op
Iteration   5: 459.380 ns/op
Iteration   6: 500.303 ns/op
Iteration   7: 570.309 ns/op
Iteration   8: 680.739 ns/op
Iteration   9: 518.807 ns/op
Iteration  10: 536.000 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2720.090 ±(99.9%) 4298.812 ns/op [Average]
  (min, avg, max) = (451.723, 2720.090, 16283.290), stdev = 4950.518
  CI (99.9%): [≈ 0, 7018.902] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 31.25% complete, ETA 00:26:24
# Fork: 1 of 2
# Warmup Iteration   1: 7488.206 ns/op
# Warmup Iteration   2: 2431.973 ns/op
# Warmup Iteration   3: 489.665 ns/op
Iteration   1: 3899.376 ns/op
Iteration   2: 1519.993 ns/op
Iteration   3: 1044.235 ns/op
Iteration   4: 576.110 ns/op
Iteration   5: 269.464 ns/op
Iteration   6: 428.014 ns/op
Iteration   7: 501.475 ns/op
Iteration   8: 579.695 ns/op
Iteration   9: 456.822 ns/op
Iteration  10: 294.755 ns/op

# Run progress: 31.32% complete, ETA 00:26:23
# Fork: 2 of 2
# Warmup Iteration   1: 32997.806 ns/op
# Warmup Iteration   2: 2558.845 ns/op
# Warmup Iteration   3: 425.267 ns/op
Iteration   1: 2986.114 ns/op
Iteration   2: 1187.079 ns/op
Iteration   3: 1119.751 ns/op
Iteration   4: 432.075 ns/op
Iteration   5: 267.021 ns/op
Iteration   6: 430.464 ns/op
Iteration   7: 503.011 ns/op
Iteration   8: 577.575 ns/op
Iteration   9: 454.042 ns/op
Iteration  10: 294.983 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  891.103 ±(99.9%) 823.756 ns/op [Average]
  (min, avg, max) = (267.021, 891.103, 3899.376), stdev = 948.639
  CI (99.9%): [67.346, 1714.859] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 31.39% complete, ETA 00:26:21
# Fork: 1 of 2
# Warmup Iteration   1: 1699.067 ns/op
# Warmup Iteration   2: 1162.495 ns/op
# Warmup Iteration   3: 853.716 ns/op
Iteration   1: 928.583 ns/op
Iteration   2: 885.941 ns/op
Iteration   3: 894.980 ns/op
Iteration   4: 893.404 ns/op
Iteration   5: 808.156 ns/op
Iteration   6: 791.677 ns/op
Iteration   7: 809.238 ns/op
Iteration   8: 747.161 ns/op
Iteration   9: 891.065 ns/op
Iteration  10: 868.365 ns/op

# Run progress: 31.46% complete, ETA 00:26:20
# Fork: 2 of 2
# Warmup Iteration   1: 1335.261 ns/op
# Warmup Iteration   2: 1129.827 ns/op
# Warmup Iteration   3: 851.639 ns/op
Iteration   1: 926.763 ns/op
Iteration   2: 883.862 ns/op
Iteration   3: 894.450 ns/op
Iteration   4: 891.224 ns/op
Iteration   5: 805.838 ns/op
Iteration   6: 790.017 ns/op
Iteration   7: 807.460 ns/op
Iteration   8: 744.380 ns/op
Iteration   9: 889.007 ns/op
Iteration  10: 851.897 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  850.173 ±(99.9%) 49.420 ns/op [Average]
  (min, avg, max) = (744.380, 850.173, 928.583), stdev = 56.912
  CI (99.9%): [800.754, 899.593] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 31.53% complete, ETA 00:26:18
# Fork: 1 of 2
# Warmup Iteration   1: 11355.230 ns/op
# Warmup Iteration   2: 4942.950 ns/op
# Warmup Iteration   3: 3468.024 ns/op
Iteration   1: 3496.720 ns/op
Iteration   2: 3433.304 ns/op
Iteration   3: 3477.235 ns/op
Iteration   4: 3454.112 ns/op
Iteration   5: 3458.232 ns/op
Iteration   6: 3458.227 ns/op
Iteration   7: 3461.559 ns/op
Iteration   8: 3459.646 ns/op
Iteration   9: 3509.224 ns/op
Iteration  10: 3460.790 ns/op

# Run progress: 31.60% complete, ETA 00:26:16
# Fork: 2 of 2
# Warmup Iteration   1: 10542.323 ns/op
# Warmup Iteration   2: 5007.432 ns/op
# Warmup Iteration   3: 3545.128 ns/op
Iteration   1: 3559.789 ns/op
Iteration   2: 3494.013 ns/op
Iteration   3: 3542.865 ns/op
Iteration   4: 3500.507 ns/op
Iteration   5: 3531.611 ns/op
Iteration   6: 3545.712 ns/op
Iteration   7: 3517.878 ns/op
Iteration   8: 3524.755 ns/op
Iteration   9: 3617.471 ns/op
Iteration  10: 3534.395 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3501.902 ±(99.9%) 39.684 ns/op [Average]
  (min, avg, max) = (3433.304, 3501.902, 3617.471), stdev = 45.700
  CI (99.9%): [3462.219, 3541.586] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 31.67% complete, ETA 00:26:15
# Fork: 1 of 2
# Warmup Iteration   1: 22.126 ns/op
# Warmup Iteration   2: 25.848 ns/op
# Warmup Iteration   3: 15.777 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.574 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.938 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.587 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 31.74% complete, ETA 00:26:13
# Fork: 2 of 2
# Warmup Iteration   1: 22.640 ns/op
# Warmup Iteration   2: 25.948 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.585 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.950 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.108 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.581 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.574, 16.019, 19.110), stdev = 1.068
  CI (99.9%): [15.092, 16.946] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 31.81% complete, ETA 00:26:12
# Fork: 1 of 2
# Warmup Iteration   1: 130.840 ns/op
# Warmup Iteration   2: 118.633 ns/op
# Warmup Iteration   3: 88.471 ns/op
Iteration   1: 88.591 ns/op
Iteration   2: 88.553 ns/op
Iteration   3: 88.547 ns/op
Iteration   4: 88.572 ns/op
Iteration   5: 88.444 ns/op
Iteration   6: 88.469 ns/op
Iteration   7: 88.570 ns/op
Iteration   8: 91.353 ns/op
Iteration   9: 88.781 ns/op
Iteration  10: 88.462 ns/op

# Run progress: 31.87% complete, ETA 00:26:10
# Fork: 2 of 2
# Warmup Iteration   1: 131.091 ns/op
# Warmup Iteration   2: 129.917 ns/op
# Warmup Iteration   3: 88.509 ns/op
Iteration   1: 88.504 ns/op
Iteration   2: 88.531 ns/op
Iteration   3: 88.613 ns/op
Iteration   4: 88.649 ns/op
Iteration   5: 88.456 ns/op
Iteration   6: 88.565 ns/op
Iteration   7: 88.545 ns/op
Iteration   8: 91.065 ns/op
Iteration   9: 88.766 ns/op
Iteration  10: 88.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  88.831 ±(99.9%) 0.712 ns/op [Average]
  (min, avg, max) = (88.444, 88.831, 91.353), stdev = 0.819
  CI (99.9%): [88.119, 89.543] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 31.94% complete, ETA 00:26:08
# Fork: 1 of 2
# Warmup Iteration   1: 1050.018 ns/op
# Warmup Iteration   2: 159.582 ns/op
# Warmup Iteration   3: 122.614 ns/op
Iteration   1: 122.620 ns/op
Iteration   2: 122.615 ns/op
Iteration   3: 122.563 ns/op
Iteration   4: 122.734 ns/op
Iteration   5: 122.635 ns/op
Iteration   6: 122.654 ns/op
Iteration   7: 122.638 ns/op
Iteration   8: 122.954 ns/op
Iteration   9: 122.955 ns/op
Iteration  10: 122.601 ns/op

# Run progress: 32.01% complete, ETA 00:26:07
# Fork: 2 of 2
# Warmup Iteration   1: 794.805 ns/op
# Warmup Iteration   2: 156.808 ns/op
# Warmup Iteration   3: 119.043 ns/op
Iteration   1: 119.185 ns/op
Iteration   2: 119.134 ns/op
Iteration   3: 119.444 ns/op
Iteration   4: 119.049 ns/op
Iteration   5: 119.129 ns/op
Iteration   6: 119.106 ns/op
Iteration   7: 119.076 ns/op
Iteration   8: 119.124 ns/op
Iteration   9: 119.323 ns/op
Iteration  10: 119.197 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  120.937 ±(99.9%) 1.572 ns/op [Average]
  (min, avg, max) = (119.049, 120.937, 122.955), stdev = 1.810
  CI (99.9%): [119.365, 122.509] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 32.08% complete, ETA 00:26:05
# Fork: 1 of 2
# Warmup Iteration   1: 616.390 ns/op
# Warmup Iteration   2: 153.636 ns/op
# Warmup Iteration   3: 116.595 ns/op
Iteration   1: 116.599 ns/op
Iteration   2: 116.602 ns/op
Iteration   3: 117.231 ns/op
Iteration   4: 116.565 ns/op
Iteration   5: 116.600 ns/op
Iteration   6: 116.614 ns/op
Iteration   7: 116.583 ns/op
Iteration   8: 116.850 ns/op
Iteration   9: 117.104 ns/op
Iteration  10: 116.640 ns/op

# Run progress: 32.15% complete, ETA 00:26:04
# Fork: 2 of 2
# Warmup Iteration   1: 670.366 ns/op
# Warmup Iteration   2: 154.849 ns/op
# Warmup Iteration   3: 116.565 ns/op
Iteration   1: 116.664 ns/op
Iteration   2: 116.621 ns/op
Iteration   3: 117.180 ns/op
Iteration   4: 116.599 ns/op
Iteration   5: 116.628 ns/op
Iteration   6: 116.707 ns/op
Iteration   7: 116.611 ns/op
Iteration   8: 116.758 ns/op
Iteration   9: 117.067 ns/op
Iteration  10: 116.634 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  116.743 ±(99.9%) 0.190 ns/op [Average]
  (min, avg, max) = (116.565, 116.743, 117.231), stdev = 0.219
  CI (99.9%): [116.553, 116.933] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 32.22% complete, ETA 00:26:02
# Fork: 1 of 2
# Warmup Iteration   1: 280.151 ns/op
# Warmup Iteration   2: 255.531 ns/op
# Warmup Iteration   3: 194.611 ns/op
Iteration   1: 193.555 ns/op
Iteration   2: 194.437 ns/op
Iteration   3: 194.936 ns/op
Iteration   4: 195.770 ns/op
Iteration   5: 193.353 ns/op
Iteration   6: 194.865 ns/op
Iteration   7: 194.311 ns/op
Iteration   8: 194.495 ns/op
Iteration   9: 194.589 ns/op
Iteration  10: 194.108 ns/op

# Run progress: 32.29% complete, ETA 00:26:00
# Fork: 2 of 2
# Warmup Iteration   1: 306.413 ns/op
# Warmup Iteration   2: 269.749 ns/op
# Warmup Iteration   3: 195.874 ns/op
Iteration   1: 194.726 ns/op
Iteration   2: 194.594 ns/op
Iteration   3: 196.892 ns/op
Iteration   4: 194.555 ns/op
Iteration   5: 196.101 ns/op
Iteration   6: 195.216 ns/op
Iteration   7: 194.421 ns/op
Iteration   8: 194.542 ns/op
Iteration   9: 195.716 ns/op
Iteration  10: 195.364 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  194.827 ±(99.9%) 0.726 ns/op [Average]
  (min, avg, max) = (193.353, 194.827, 196.892), stdev = 0.837
  CI (99.9%): [194.101, 195.554] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 32.36% complete, ETA 00:25:59
# Fork: 1 of 2
# Warmup Iteration   1: 246.637 ns/op
# Warmup Iteration   2: 224.304 ns/op
# Warmup Iteration   3: 130.073 ns/op
Iteration   1: 130.143 ns/op
Iteration   2: 130.214 ns/op
Iteration   3: 130.651 ns/op
Iteration   4: 133.221 ns/op
Iteration   5: 130.115 ns/op
Iteration   6: 130.094 ns/op
Iteration   7: 130.120 ns/op
Iteration   8: 132.970 ns/op
Iteration   9: 131.899 ns/op
Iteration  10: 130.104 ns/op

# Run progress: 32.43% complete, ETA 00:25:57
# Fork: 2 of 2
# Warmup Iteration   1: 249.029 ns/op
# Warmup Iteration   2: 211.142 ns/op
# Warmup Iteration   3: 121.138 ns/op
Iteration   1: 121.117 ns/op
Iteration   2: 121.769 ns/op
Iteration   3: 121.527 ns/op
Iteration   4: 125.046 ns/op
Iteration   5: 121.187 ns/op
Iteration   6: 121.203 ns/op
Iteration   7: 121.154 ns/op
Iteration   8: 123.928 ns/op
Iteration   9: 124.798 ns/op
Iteration  10: 121.212 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  126.624 ±(99.9%) 4.047 ns/op [Average]
  (min, avg, max) = (121.117, 126.624, 133.221), stdev = 4.661
  CI (99.9%): [122.576, 130.671] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 32.50% complete, ETA 00:25:56
# Fork: 1 of 2
# Warmup Iteration   1: 23.745 ns/op
# Warmup Iteration   2: 25.984 ns/op
# Warmup Iteration   3: 15.757 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.586 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.938 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.586 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.582 ns/op

# Run progress: 32.57% complete, ETA 00:25:54
# Fork: 2 of 2
# Warmup Iteration   1: 22.636 ns/op
# Warmup Iteration   2: 25.995 ns/op
# Warmup Iteration   3: 15.763 ns/op
Iteration   1: 15.572 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.690 ns/op
Iteration   6: 15.569 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.096 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.925 ns/op [Average]
  (min, avg, max) = (15.569, 16.018, 19.103), stdev = 1.065
  CI (99.9%): [15.094, 16.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 32.64% complete, ETA 00:25:52
# Fork: 1 of 2
# Warmup Iteration   1: 1338.796 ns/op
# Warmup Iteration   2: 42875.606 ns/op
# Warmup Iteration   3: 1703.136 ns/op
Iteration   1: 777.052 ns/op
Iteration   2: 1244.994 ns/op
Iteration   3: 628.532 ns/op
Iteration   4: 22721.245 ns/op
Iteration   5: 38701.710 ns/op
Iteration   6: 1255.445 ns/op
Iteration   7: 592.658 ns/op
Iteration   8: 633.444 ns/op
Iteration   9: 589.208 ns/op
Iteration  10: 614.247 ns/op

# Run progress: 32.71% complete, ETA 00:25:51
# Fork: 2 of 2
# Warmup Iteration   1: 1789.709 ns/op
# Warmup Iteration   2: 42801.221 ns/op
# Warmup Iteration   3: 3372.618 ns/op
Iteration   1: 783.726 ns/op
Iteration   2: 1241.771 ns/op
Iteration   3: 623.135 ns/op
Iteration   4: 35829.766 ns/op
Iteration   5: 50807.346 ns/op
Iteration   6: 1277.139 ns/op
Iteration   7: 586.021 ns/op
Iteration   8: 625.472 ns/op
Iteration   9: 592.841 ns/op
Iteration  10: 606.083 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8036.592 ±(99.9%) 13509.522 ns/op [Average]
  (min, avg, max) = (586.021, 8036.592, 50807.346), stdev = 15557.585
  CI (99.9%): [≈ 0, 21546.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 32.78% complete, ETA 00:25:49
# Fork: 1 of 2
# Warmup Iteration   1: 37222.073 ns/op
# Warmup Iteration   2: 21085.306 ns/op
# Warmup Iteration   3: 53259.027 ns/op
Iteration   1: 15595.518 ns/op
Iteration   2: 814.779 ns/op
Iteration   3: 1550.345 ns/op
Iteration   4: 10049.219 ns/op
Iteration   5: 723.516 ns/op
Iteration   6: 816.961 ns/op
Iteration   7: 754.626 ns/op
Iteration   8: 684.698 ns/op
Iteration   9: 687.298 ns/op
Iteration  10: 733.519 ns/op

# Run progress: 32.85% complete, ETA 00:25:48
# Fork: 2 of 2
# Warmup Iteration   1: 27866.734 ns/op
# Warmup Iteration   2: 12153.203 ns/op
# Warmup Iteration   3: 67372.799 ns/op
Iteration   1: 3684.073 ns/op
Iteration   2: 844.913 ns/op
Iteration   3: 1561.218 ns/op
Iteration   4: 1799.674 ns/op
Iteration   5: 718.859 ns/op
Iteration   6: 812.725 ns/op
Iteration   7: 759.171 ns/op
Iteration   8: 682.533 ns/op
Iteration   9: 688.658 ns/op
Iteration  10: 738.952 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2235.063 ±(99.9%) 3296.421 ns/op [Average]
  (min, avg, max) = (682.533, 2235.063, 15595.518), stdev = 3796.163
  CI (99.9%): [≈ 0, 5531.483] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 32.92% complete, ETA 00:25:46
# Fork: 1 of 2
# Warmup Iteration   1: 21933.828 ns/op
# Warmup Iteration   2: 4583.367 ns/op
# Warmup Iteration   3: 61383.624 ns/op
Iteration   1: 1349.557 ns/op
Iteration   2: 21884.725 ns/op
Iteration   3: 762.747 ns/op
Iteration   4: 1260.507 ns/op
Iteration   5: 616.691 ns/op
Iteration   6: 890.073 ns/op
Iteration   7: 822.438 ns/op
Iteration   8: 757.011 ns/op
Iteration   9: 732.815 ns/op
Iteration  10: 779.982 ns/op

# Run progress: 32.99% complete, ETA 00:25:44
# Fork: 2 of 2
# Warmup Iteration   1: 22067.708 ns/op
# Warmup Iteration   2: 11261.866 ns/op
# Warmup Iteration   3: 64995.162 ns/op
Iteration   1: 23880.720 ns/op
Iteration   2: 1469.045 ns/op
Iteration   3: 784.725 ns/op
Iteration   4: 21540.552 ns/op
Iteration   5: 617.772 ns/op
Iteration   6: 900.078 ns/op
Iteration   7: 826.933 ns/op
Iteration   8: 767.654 ns/op
Iteration   9: 751.522 ns/op
Iteration  10: 786.440 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4109.099 ±(99.9%) 6870.772 ns/op [Average]
  (min, avg, max) = (616.691, 4109.099, 23880.720), stdev = 7912.391
  CI (99.9%): [≈ 0, 10979.871] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 33.06% complete, ETA 00:25:43
# Fork: 1 of 2
# Warmup Iteration   1: 2197.255 ns/op
# Warmup Iteration   2: 1761.827 ns/op
# Warmup Iteration   3: 1229.952 ns/op
Iteration   1: 1278.246 ns/op
Iteration   2: 1180.334 ns/op
Iteration   3: 1213.089 ns/op
Iteration   4: 1194.253 ns/op
Iteration   5: 1123.111 ns/op
Iteration   6: 1118.395 ns/op
Iteration   7: 1176.089 ns/op
Iteration   8: 1236.434 ns/op
Iteration   9: 1205.742 ns/op
Iteration  10: 1228.221 ns/op

# Run progress: 33.13% complete, ETA 00:25:41
# Fork: 2 of 2
# Warmup Iteration   1: 2457.283 ns/op
# Warmup Iteration   2: 1528.335 ns/op
# Warmup Iteration   3: 1240.119 ns/op
Iteration   1: 1274.744 ns/op
Iteration   2: 1182.124 ns/op
Iteration   3: 1213.042 ns/op
Iteration   4: 1192.575 ns/op
Iteration   5: 1125.569 ns/op
Iteration   6: 1119.003 ns/op
Iteration   7: 1181.063 ns/op
Iteration   8: 1196.734 ns/op
Iteration   9: 1189.595 ns/op
Iteration  10: 1239.106 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1193.373 ±(99.9%) 40.521 ns/op [Average]
  (min, avg, max) = (1118.395, 1193.373, 1278.246), stdev = 46.664
  CI (99.9%): [1152.852, 1233.895] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 33.19% complete, ETA 00:25:40
# Fork: 1 of 2
# Warmup Iteration   1: 9909.873 ns/op
# Warmup Iteration   2: 52490.763 ns/op
# Warmup Iteration   3: 5576.122 ns/op
Iteration   1: 4495.489 ns/op
Iteration   2: 4068.721 ns/op
Iteration   3: 4448.068 ns/op
Iteration   4: 4200.384 ns/op
Iteration   5: 4068.943 ns/op
Iteration   6: 55854.585 ns/op
Iteration   7: 4042.484 ns/op
Iteration   8: 3765.873 ns/op
Iteration   9: 3925.986 ns/op
Iteration  10: 4218.211 ns/op

# Run progress: 33.26% complete, ETA 00:25:38
# Fork: 2 of 2
# Warmup Iteration   1: 11142.869 ns/op
# Warmup Iteration   2: 82661.069 ns/op
# Warmup Iteration   3: 5755.618 ns/op
Iteration   1: 4528.038 ns/op
Iteration   2: 4054.590 ns/op
Iteration   3: 4522.379 ns/op
Iteration   4: 4197.567 ns/op
Iteration   5: 4068.259 ns/op
Iteration   6: 54766.617 ns/op
Iteration   7: 4049.931 ns/op
Iteration   8: 3726.825 ns/op
Iteration   9: 3849.983 ns/op
Iteration  10: 4217.178 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9253.506 ±(99.9%) 13679.978 ns/op [Average]
  (min, avg, max) = (3726.825, 9253.506, 55854.585), stdev = 15753.883
  CI (99.9%): [≈ 0, 22933.484] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 33.33% complete, ETA 00:25:36
# Fork: 1 of 2
# Warmup Iteration   1: 22.555 ns/op
# Warmup Iteration   2: 23.048 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.936 ns/op
Iteration   5: 15.678 ns/op
Iteration   6: 15.584 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.574 ns/op

# Run progress: 33.40% complete, ETA 00:25:35
# Fork: 2 of 2
# Warmup Iteration   1: 22.265 ns/op
# Warmup Iteration   2: 25.176 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.991 ns/op
Iteration   4: 15.963 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.119 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.574, 16.020, 19.119), stdev = 1.069
  CI (99.9%): [15.092, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 33.47% complete, ETA 00:25:33
# Fork: 1 of 2
# Warmup Iteration   1: 10963.606 ns/op
# Warmup Iteration   2: 1004.023 ns/op
# Warmup Iteration   3: 737.712 ns/op
Iteration   1: 737.789 ns/op
Iteration   2: 737.676 ns/op
Iteration   3: 737.570 ns/op
Iteration   4: 737.713 ns/op
Iteration   5: 737.635 ns/op
Iteration   6: 737.820 ns/op
Iteration   7: 737.219 ns/op
Iteration   8: 741.732 ns/op
Iteration   9: 738.001 ns/op
Iteration  10: 738.839 ns/op

# Run progress: 33.54% complete, ETA 00:25:32
# Fork: 2 of 2
# Warmup Iteration   1: 11107.062 ns/op
# Warmup Iteration   2: 1076.594 ns/op
# Warmup Iteration   3: 747.713 ns/op
Iteration   1: 747.316 ns/op
Iteration   2: 746.398 ns/op
Iteration   3: 746.542 ns/op
Iteration   4: 746.488 ns/op
Iteration   5: 746.829 ns/op
Iteration   6: 747.250 ns/op
Iteration   7: 747.006 ns/op
Iteration   8: 750.198 ns/op
Iteration   9: 746.594 ns/op
Iteration  10: 746.173 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  742.639 ±(99.9%) 4.091 ns/op [Average]
  (min, avg, max) = (737.219, 742.639, 750.198), stdev = 4.711
  CI (99.9%): [738.548, 746.730] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 33.61% complete, ETA 00:25:30
# Fork: 1 of 2
# Warmup Iteration   1: 20855.543 ns/op
# Warmup Iteration   2: 1212.898 ns/op
# Warmup Iteration   3: 892.666 ns/op
Iteration   1: 824.371 ns/op
Iteration   2: 822.275 ns/op
Iteration   3: 836.450 ns/op
Iteration   4: 829.589 ns/op
Iteration   5: 823.200 ns/op
Iteration   6: 822.933 ns/op
Iteration   7: 824.079 ns/op
Iteration   8: 829.778 ns/op
Iteration   9: 824.020 ns/op
Iteration  10: 823.640 ns/op

# Run progress: 33.68% complete, ETA 00:25:29
# Fork: 2 of 2
# Warmup Iteration   1: 23865.348 ns/op
# Warmup Iteration   2: 1191.427 ns/op
# Warmup Iteration   3: 892.446 ns/op
Iteration   1: 818.018 ns/op
Iteration   2: 829.779 ns/op
Iteration   3: 820.440 ns/op
Iteration   4: 838.147 ns/op
Iteration   5: 817.661 ns/op
Iteration   6: 817.200 ns/op
Iteration   7: 818.475 ns/op
Iteration   8: 820.839 ns/op
Iteration   9: 818.620 ns/op
Iteration  10: 828.133 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  824.382 ±(99.9%) 5.182 ns/op [Average]
  (min, avg, max) = (817.200, 824.382, 838.147), stdev = 5.968
  CI (99.9%): [819.200, 829.565] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 33.75% complete, ETA 00:25:27
# Fork: 1 of 2
# Warmup Iteration   1: 9948.282 ns/op
# Warmup Iteration   2: 1171.808 ns/op
# Warmup Iteration   3: 910.535 ns/op
Iteration   1: 917.248 ns/op
Iteration   2: 911.093 ns/op
Iteration   3: 921.766 ns/op
Iteration   4: 910.650 ns/op
Iteration   5: 910.139 ns/op
Iteration   6: 910.057 ns/op
Iteration   7: 910.292 ns/op
Iteration   8: 912.798 ns/op
Iteration   9: 910.052 ns/op
Iteration  10: 910.117 ns/op

# Run progress: 33.82% complete, ETA 00:25:25
# Fork: 2 of 2
# Warmup Iteration   1: 10947.036 ns/op
# Warmup Iteration   2: 1409.523 ns/op
# Warmup Iteration   3: 908.859 ns/op
Iteration   1: 908.288 ns/op
Iteration   2: 908.220 ns/op
Iteration   3: 919.466 ns/op
Iteration   4: 908.510 ns/op
Iteration   5: 908.366 ns/op
Iteration   6: 908.597 ns/op
Iteration   7: 908.479 ns/op
Iteration   8: 910.623 ns/op
Iteration   9: 909.721 ns/op
Iteration  10: 908.548 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  911.152 ±(99.9%) 3.342 ns/op [Average]
  (min, avg, max) = (908.220, 911.152, 921.766), stdev = 3.849
  CI (99.9%): [907.809, 914.494] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 33.89% complete, ETA 00:25:24
# Fork: 1 of 2
# Warmup Iteration   1: 1699.619 ns/op
# Warmup Iteration   2: 1101.262 ns/op
# Warmup Iteration   3: 866.888 ns/op
Iteration   1: 868.048 ns/op
Iteration   2: 867.870 ns/op
Iteration   3: 866.549 ns/op
Iteration   4: 872.512 ns/op
Iteration   5: 867.662 ns/op
Iteration   6: 867.312 ns/op
Iteration   7: 866.847 ns/op
Iteration   8: 869.644 ns/op
Iteration   9: 868.402 ns/op
Iteration  10: 867.565 ns/op

# Run progress: 33.96% complete, ETA 00:25:22
# Fork: 2 of 2
# Warmup Iteration   1: 1563.582 ns/op
# Warmup Iteration   2: 1113.960 ns/op
# Warmup Iteration   3: 870.010 ns/op
Iteration   1: 870.139 ns/op
Iteration   2: 868.705 ns/op
Iteration   3: 870.334 ns/op
Iteration   4: 876.512 ns/op
Iteration   5: 870.333 ns/op
Iteration   6: 869.814 ns/op
Iteration   7: 870.445 ns/op
Iteration   8: 868.959 ns/op
Iteration   9: 869.656 ns/op
Iteration  10: 871.421 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  869.436 ±(99.9%) 1.985 ns/op [Average]
  (min, avg, max) = (866.549, 869.436, 876.512), stdev = 2.285
  CI (99.9%): [867.452, 871.421] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 34.03% complete, ETA 00:25:20
# Fork: 1 of 2
# Warmup Iteration   1: 2146.437 ns/op
# Warmup Iteration   2: 1029.818 ns/op
# Warmup Iteration   3: 771.558 ns/op
Iteration   1: 772.451 ns/op
Iteration   2: 771.545 ns/op
Iteration   3: 775.200 ns/op
Iteration   4: 776.293 ns/op
Iteration   5: 771.021 ns/op
Iteration   6: 771.189 ns/op
Iteration   7: 772.304 ns/op
Iteration   8: 778.610 ns/op
Iteration   9: 775.419 ns/op
Iteration  10: 772.250 ns/op

# Run progress: 34.10% complete, ETA 00:25:19
# Fork: 2 of 2
# Warmup Iteration   1: 2010.702 ns/op
# Warmup Iteration   2: 1127.276 ns/op
# Warmup Iteration   3: 787.838 ns/op
Iteration   1: 791.274 ns/op
Iteration   2: 789.986 ns/op
Iteration   3: 786.444 ns/op
Iteration   4: 799.306 ns/op
Iteration   5: 788.135 ns/op
Iteration   6: 787.854 ns/op
Iteration   7: 790.803 ns/op
Iteration   8: 789.885 ns/op
Iteration   9: 796.623 ns/op
Iteration  10: 790.111 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  782.335 ±(99.9%) 8.259 ns/op [Average]
  (min, avg, max) = (771.021, 782.335, 799.306), stdev = 9.511
  CI (99.9%): [774.077, 790.594] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 34.17% complete, ETA 00:25:17
# Fork: 1 of 2
# Warmup Iteration   1: 23.488 ns/op
# Warmup Iteration   2: 26.024 ns/op
# Warmup Iteration   3: 15.766 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.933 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.576 ns/op

# Run progress: 34.24% complete, ETA 00:25:16
# Fork: 2 of 2
# Warmup Iteration   1: 22.669 ns/op
# Warmup Iteration   2: 24.412 ns/op
# Warmup Iteration   3: 15.761 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.933 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.572 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.137 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.932 ns/op [Average]
  (min, avg, max) = (15.572, 16.019, 19.137), stdev = 1.073
  CI (99.9%): [15.088, 16.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 34.31% complete, ETA 00:25:14
# Fork: 1 of 2
# Warmup Iteration   1: 520.325 ns/op
# Warmup Iteration   2: 374.783 ns/op
# Warmup Iteration   3: 286.357 ns/op
Iteration   1: 285.620 ns/op
Iteration   2: 286.728 ns/op
Iteration   3: 294.684 ns/op
Iteration   4: 288.134 ns/op
Iteration   5: 292.700 ns/op
Iteration   6: 285.106 ns/op
Iteration   7: 286.752 ns/op
Iteration   8: 288.335 ns/op
Iteration   9: 286.782 ns/op
Iteration  10: 287.056 ns/op

# Run progress: 34.38% complete, ETA 00:25:12
# Fork: 2 of 2
# Warmup Iteration   1: 501.282 ns/op
# Warmup Iteration   2: 390.757 ns/op
# Warmup Iteration   3: 285.789 ns/op
Iteration   1: 286.471 ns/op
Iteration   2: 284.645 ns/op
Iteration   3: 286.547 ns/op
Iteration   4: 287.429 ns/op
Iteration   5: 285.995 ns/op
Iteration   6: 285.308 ns/op
Iteration   7: 285.983 ns/op
Iteration   8: 350.596 ns/op
Iteration   9: 286.246 ns/op
Iteration  10: 285.964 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  290.354 ±(99.9%) 12.493 ns/op [Average]
  (min, avg, max) = (284.645, 290.354, 350.596), stdev = 14.386
  CI (99.9%): [277.861, 302.847] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 34.44% complete, ETA 00:25:11
# Fork: 1 of 2
# Warmup Iteration   1: 5135.306 ns/op
# Warmup Iteration   2: 665.900 ns/op
# Warmup Iteration   3: 446.213 ns/op
Iteration   1: 446.244 ns/op
Iteration   2: 446.276 ns/op
Iteration   3: 446.507 ns/op
Iteration   4: 446.344 ns/op
Iteration   5: 446.383 ns/op
Iteration   6: 446.256 ns/op
Iteration   7: 446.398 ns/op
Iteration   8: 445.978 ns/op
Iteration   9: 446.085 ns/op
Iteration  10: 446.261 ns/op

# Run progress: 34.51% complete, ETA 00:25:09
# Fork: 2 of 2
# Warmup Iteration   1: 3287.012 ns/op
# Warmup Iteration   2: 574.593 ns/op
# Warmup Iteration   3: 442.755 ns/op
Iteration   1: 442.938 ns/op
Iteration   2: 443.081 ns/op
Iteration   3: 443.003 ns/op
Iteration   4: 442.658 ns/op
Iteration   5: 443.054 ns/op
Iteration   6: 442.785 ns/op
Iteration   7: 443.071 ns/op
Iteration   8: 442.576 ns/op
Iteration   9: 442.024 ns/op
Iteration  10: 442.834 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  444.538 ±(99.9%) 1.561 ns/op [Average]
  (min, avg, max) = (442.024, 444.538, 446.507), stdev = 1.797
  CI (99.9%): [442.977, 446.099] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 34.58% complete, ETA 00:25:08
# Fork: 1 of 2
# Warmup Iteration   1: 4938.581 ns/op
# Warmup Iteration   2: 568.737 ns/op
# Warmup Iteration   3: 436.577 ns/op
Iteration   1: 436.811 ns/op
Iteration   2: 436.926 ns/op
Iteration   3: 436.733 ns/op
Iteration   4: 436.839 ns/op
Iteration   5: 436.537 ns/op
Iteration   6: 436.773 ns/op
Iteration   7: 436.680 ns/op
Iteration   8: 436.765 ns/op
Iteration   9: 437.021 ns/op
Iteration  10: 436.723 ns/op

# Run progress: 34.65% complete, ETA 00:25:06
# Fork: 2 of 2
# Warmup Iteration   1: 10984.244 ns/op
# Warmup Iteration   2: 687.961 ns/op
# Warmup Iteration   3: 452.494 ns/op
Iteration   1: 440.229 ns/op
Iteration   2: 443.477 ns/op
Iteration   3: 457.487 ns/op
Iteration   4: 446.264 ns/op
Iteration   5: 442.462 ns/op
Iteration   6: 456.329 ns/op
Iteration   7: 441.891 ns/op
Iteration   8: 439.281 ns/op
Iteration   9: 446.945 ns/op
Iteration  10: 444.090 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  441.313 ±(99.9%) 5.522 ns/op [Average]
  (min, avg, max) = (436.537, 441.313, 457.487), stdev = 6.359
  CI (99.9%): [435.791, 446.835] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 34.72% complete, ETA 00:25:05
# Fork: 1 of 2
# Warmup Iteration   1: 1367.480 ns/op
# Warmup Iteration   2: 1115.599 ns/op
# Warmup Iteration   3: 864.110 ns/op
Iteration   1: 864.334 ns/op
Iteration   2: 864.459 ns/op
Iteration   3: 864.408 ns/op
Iteration   4: 863.397 ns/op
Iteration   5: 864.865 ns/op
Iteration   6: 864.379 ns/op
Iteration   7: 864.699 ns/op
Iteration   8: 862.803 ns/op
Iteration   9: 864.463 ns/op
Iteration  10: 863.843 ns/op

# Run progress: 34.79% complete, ETA 00:25:03
# Fork: 2 of 2
# Warmup Iteration   1: 1664.322 ns/op
# Warmup Iteration   2: 1103.008 ns/op
# Warmup Iteration   3: 859.158 ns/op
Iteration   1: 859.252 ns/op
Iteration   2: 857.395 ns/op
Iteration   3: 860.032 ns/op
Iteration   4: 856.681 ns/op
Iteration   5: 857.531 ns/op
Iteration   6: 858.764 ns/op
Iteration   7: 859.063 ns/op
Iteration   8: 859.282 ns/op
Iteration   9: 858.679 ns/op
Iteration  10: 859.853 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  861.409 ±(99.9%) 2.571 ns/op [Average]
  (min, avg, max) = (856.681, 861.409, 864.865), stdev = 2.961
  CI (99.9%): [858.838, 863.980] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 34.86% complete, ETA 00:25:01
# Fork: 1 of 2
# Warmup Iteration   1: 11006.817 ns/op
# Warmup Iteration   2: 5221.375 ns/op
# Warmup Iteration   3: 4041.176 ns/op
Iteration   1: 3722.360 ns/op
Iteration   2: 3722.692 ns/op
Iteration   3: 3722.961 ns/op
Iteration   4: 3709.516 ns/op
Iteration   5: 3711.498 ns/op
Iteration   6: 3712.202 ns/op
Iteration   7: 3713.019 ns/op
Iteration   8: 3694.858 ns/op
Iteration   9: 3714.755 ns/op
Iteration  10: 3712.884 ns/op

# Run progress: 34.93% complete, ETA 00:25:00
# Fork: 2 of 2
# Warmup Iteration   1: 15182.410 ns/op
# Warmup Iteration   2: 5176.641 ns/op
# Warmup Iteration   3: 4159.668 ns/op
Iteration   1: 3820.070 ns/op
Iteration   2: 3819.112 ns/op
Iteration   3: 3820.985 ns/op
Iteration   4: 3800.894 ns/op
Iteration   5: 3800.542 ns/op
Iteration   6: 3810.707 ns/op
Iteration   7: 3799.514 ns/op
Iteration   8: 3809.040 ns/op
Iteration   9: 3836.529 ns/op
Iteration  10: 3799.961 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3762.705 ±(99.9%) 44.575 ns/op [Average]
  (min, avg, max) = (3694.858, 3762.705, 3836.529), stdev = 51.333
  CI (99.9%): [3718.130, 3807.280] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 35.00% complete, ETA 00:24:58
# Fork: 1 of 2
# Warmup Iteration   1: 22.131 ns/op
# Warmup Iteration   2: 25.759 ns/op
# Warmup Iteration   3: 15.781 ns/op
Iteration   1: 15.575 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.119 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 35.07% complete, ETA 00:24:57
# Fork: 2 of 2
# Warmup Iteration   1: 22.076 ns/op
# Warmup Iteration   2: 26.024 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.585 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.929 ns/op
Iteration   5: 15.689 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.113 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.575, 16.020, 19.119), stdev = 1.070
  CI (99.9%): [15.091, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 35.14% complete, ETA 00:24:55
# Fork: 1 of 2
# Warmup Iteration   1: 495.779 ns/op
# Warmup Iteration   2: 2403.705 ns/op
# Warmup Iteration   3: 724.423 ns/op
Iteration   1: 1380.512 ns/op
Iteration   2: 291.251 ns/op
Iteration   3: 25635.670 ns/op
Iteration   4: 360.764 ns/op
Iteration   5: 333.881 ns/op
Iteration   6: 297.467 ns/op
Iteration   7: 315.436 ns/op
Iteration   8: 347.411 ns/op
Iteration   9: 724.079 ns/op
Iteration  10: 415.544 ns/op

# Run progress: 35.21% complete, ETA 00:24:53
# Fork: 2 of 2
# Warmup Iteration   1: 542.731 ns/op
# Warmup Iteration   2: 1949.972 ns/op
# Warmup Iteration   3: 791.136 ns/op
Iteration   1: 1552.433 ns/op
Iteration   2: 310.426 ns/op
Iteration   3: 25287.585 ns/op
Iteration   4: 362.477 ns/op
Iteration   5: 331.273 ns/op
Iteration   6: 308.798 ns/op
Iteration   7: 314.571 ns/op
Iteration   8: 350.083 ns/op
Iteration   9: 705.064 ns/op
Iteration  10: 425.980 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3002.535 ±(99.9%) 6676.885 ns/op [Average]
  (min, avg, max) = (291.251, 3002.535, 25635.670), stdev = 7689.111
  CI (99.9%): [≈ 0, 9679.420] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 35.28% complete, ETA 00:24:52
# Fork: 1 of 2
# Warmup Iteration   1: 4303.309 ns/op
# Warmup Iteration   2: 25822.593 ns/op
# Warmup Iteration   3: 808.033 ns/op
Iteration   1: 1620.999 ns/op
Iteration   2: 2036.771 ns/op
Iteration   3: 905.159 ns/op
Iteration   4: 830.622 ns/op
Iteration   5: 37887.458 ns/op
Iteration   6: 461.765 ns/op
Iteration   7: 395.049 ns/op
Iteration   8: 409.577 ns/op
Iteration   9: 451.567 ns/op
Iteration  10: 536.225 ns/op

# Run progress: 35.35% complete, ETA 00:24:50
# Fork: 2 of 2
# Warmup Iteration   1: 4344.312 ns/op
# Warmup Iteration   2: 3581.182 ns/op
# Warmup Iteration   3: 763.629 ns/op
Iteration   1: 1687.211 ns/op
Iteration   2: 2094.278 ns/op
Iteration   3: 1902.295 ns/op
Iteration   4: 1028.402 ns/op
Iteration   5: 37620.533 ns/op
Iteration   6: 459.292 ns/op
Iteration   7: 403.663 ns/op
Iteration   8: 427.508 ns/op
Iteration   9: 450.277 ns/op
Iteration  10: 532.412 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4607.053 ±(99.9%) 9857.659 ns/op [Average]
  (min, avg, max) = (395.049, 4607.053, 37887.458), stdev = 11352.094
  CI (99.9%): [≈ 0, 14464.712] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 35.42% complete, ETA 00:24:48
# Fork: 1 of 2
# Warmup Iteration   1: 3948.619 ns/op
# Warmup Iteration   2: 1169.954 ns/op
# Warmup Iteration   3: 465.968 ns/op
Iteration   1: 415.026 ns/op
Iteration   2: 1097.037 ns/op
Iteration   3: 366.157 ns/op
Iteration   4: 1293.785 ns/op
Iteration   5: 51826.431 ns/op
Iteration   6: 261.529 ns/op
Iteration   7: 270.182 ns/op
Iteration   8: 361.816 ns/op
Iteration   9: 249.636 ns/op
Iteration  10: 279.107 ns/op

# Run progress: 35.49% complete, ETA 00:24:47
# Fork: 2 of 2
# Warmup Iteration   1: 4138.790 ns/op
# Warmup Iteration   2: 1017.870 ns/op
# Warmup Iteration   3: 403.669 ns/op
Iteration   1: 857.057 ns/op
Iteration   2: 863.194 ns/op
Iteration   3: 366.124 ns/op
Iteration   4: 791.535 ns/op
Iteration   5: 35836.948 ns/op
Iteration   6: 261.366 ns/op
Iteration   7: 270.313 ns/op
Iteration   8: 358.128 ns/op
Iteration   9: 249.141 ns/op
Iteration  10: 279.399 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4827.696 ±(99.9%) 11803.152 ns/op [Average]
  (min, avg, max) = (249.141, 4827.696, 51826.431), stdev = 13592.527
  CI (99.9%): [≈ 0, 16630.848] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 35.56% complete, ETA 00:24:45
# Fork: 1 of 2
# Warmup Iteration   1: 2118.633 ns/op
# Warmup Iteration   2: 1155.160 ns/op
# Warmup Iteration   3: 851.819 ns/op
Iteration   1: 798.918 ns/op
Iteration   2: 849.176 ns/op
Iteration   3: 818.860 ns/op
Iteration   4: 798.866 ns/op
Iteration   5: 893.090 ns/op
Iteration   6: 886.809 ns/op
Iteration   7: 884.904 ns/op
Iteration   8: 896.814 ns/op
Iteration   9: 905.204 ns/op
Iteration  10: 852.081 ns/op

# Run progress: 35.63% complete, ETA 00:24:44
# Fork: 2 of 2
# Warmup Iteration   1: 1646.691 ns/op
# Warmup Iteration   2: 1150.670 ns/op
# Warmup Iteration   3: 851.389 ns/op
Iteration   1: 798.265 ns/op
Iteration   2: 848.947 ns/op
Iteration   3: 818.623 ns/op
Iteration   4: 798.916 ns/op
Iteration   5: 892.555 ns/op
Iteration   6: 885.681 ns/op
Iteration   7: 886.395 ns/op
Iteration   8: 896.319 ns/op
Iteration   9: 904.850 ns/op
Iteration  10: 851.986 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  858.363 ±(99.9%) 34.681 ns/op [Average]
  (min, avg, max) = (798.265, 858.363, 905.204), stdev = 39.939
  CI (99.9%): [823.682, 893.044] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 35.69% complete, ETA 00:24:42
# Fork: 1 of 2
# Warmup Iteration   1: 11534.283 ns/op
# Warmup Iteration   2: 5152.292 ns/op
# Warmup Iteration   3: 4072.687 ns/op
Iteration   1: 3722.223 ns/op
Iteration   2: 3711.523 ns/op
Iteration   3: 3759.635 ns/op
Iteration   4: 3682.507 ns/op
Iteration   5: 3697.181 ns/op
Iteration   6: 3752.943 ns/op
Iteration   7: 3710.599 ns/op
Iteration   8: 3720.271 ns/op
Iteration   9: 3837.934 ns/op
Iteration  10: 3709.752 ns/op

# Run progress: 35.76% complete, ETA 00:24:41
# Fork: 2 of 2
# Warmup Iteration   1: 11143.540 ns/op
# Warmup Iteration   2: 5353.438 ns/op
# Warmup Iteration   3: 3768.545 ns/op
Iteration   1: 3769.288 ns/op
Iteration   2: 3751.804 ns/op
Iteration   3: 3794.097 ns/op
Iteration   4: 3724.618 ns/op
Iteration   5: 3748.367 ns/op
Iteration   6: 3796.171 ns/op
Iteration   7: 3767.028 ns/op
Iteration   8: 3755.290 ns/op
Iteration   9: 3837.007 ns/op
Iteration  10: 3754.946 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3750.159 ±(99.9%) 37.001 ns/op [Average]
  (min, avg, max) = (3682.507, 3750.159, 3837.934), stdev = 42.611
  CI (99.9%): [3713.158, 3787.160] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 35.83% complete, ETA 00:24:39
# Fork: 1 of 2
# Warmup Iteration   1: 22.789 ns/op
# Warmup Iteration   2: 24.946 ns/op
# Warmup Iteration   3: 15.764 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.939 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.101 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 35.90% complete, ETA 00:24:37
# Fork: 2 of 2
# Warmup Iteration   1: 22.132 ns/op
# Warmup Iteration   2: 22.976 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.931 ns/op
Iteration   5: 15.689 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.589 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.925 ns/op [Average]
  (min, avg, max) = (15.576, 16.018, 19.105), stdev = 1.066
  CI (99.9%): [15.093, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 35.97% complete, ETA 00:24:36
# Fork: 1 of 2
# Warmup Iteration   1: 136.368 ns/op
# Warmup Iteration   2: 135.466 ns/op
# Warmup Iteration   3: 89.331 ns/op
Iteration   1: 89.318 ns/op
Iteration   2: 89.504 ns/op
Iteration   3: 89.443 ns/op
Iteration   4: 89.456 ns/op
Iteration   5: 89.297 ns/op
Iteration   6: 89.338 ns/op
Iteration   7: 89.326 ns/op
Iteration   8: 92.009 ns/op
Iteration   9: 89.773 ns/op
Iteration  10: 89.315 ns/op

# Run progress: 36.04% complete, ETA 00:24:34
# Fork: 2 of 2
# Warmup Iteration   1: 148.052 ns/op
# Warmup Iteration   2: 132.150 ns/op
# Warmup Iteration   3: 89.308 ns/op
Iteration   1: 89.362 ns/op
Iteration   2: 89.502 ns/op
Iteration   3: 89.263 ns/op
Iteration   4: 89.432 ns/op
Iteration   5: 89.523 ns/op
Iteration   6: 89.384 ns/op
Iteration   7: 89.259 ns/op
Iteration   8: 91.951 ns/op
Iteration   9: 89.755 ns/op
Iteration  10: 89.436 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  89.682 ±(99.9%) 0.693 ns/op [Average]
  (min, avg, max) = (89.259, 89.682, 92.009), stdev = 0.798
  CI (99.9%): [88.989, 90.375] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 36.11% complete, ETA 00:24:32
# Fork: 1 of 2
# Warmup Iteration   1: 2780.050 ns/op
# Warmup Iteration   2: 153.056 ns/op
# Warmup Iteration   3: 116.302 ns/op
Iteration   1: 116.340 ns/op
Iteration   2: 116.320 ns/op
Iteration   3: 117.238 ns/op
Iteration   4: 116.675 ns/op
Iteration   5: 116.253 ns/op
Iteration   6: 116.397 ns/op
Iteration   7: 116.330 ns/op
Iteration   8: 116.601 ns/op
Iteration   9: 116.549 ns/op
Iteration  10: 116.430 ns/op

# Run progress: 36.18% complete, ETA 00:24:31
# Fork: 2 of 2
# Warmup Iteration   1: 1161.819 ns/op
# Warmup Iteration   2: 187.572 ns/op
# Warmup Iteration   3: 116.330 ns/op
Iteration   1: 116.305 ns/op
Iteration   2: 116.340 ns/op
Iteration   3: 116.646 ns/op
Iteration   4: 116.689 ns/op
Iteration   5: 116.163 ns/op
Iteration   6: 116.396 ns/op
Iteration   7: 116.307 ns/op
Iteration   8: 116.457 ns/op
Iteration   9: 116.432 ns/op
Iteration  10: 116.338 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  116.460 ±(99.9%) 0.203 ns/op [Average]
  (min, avg, max) = (116.163, 116.460, 117.238), stdev = 0.233
  CI (99.9%): [116.258, 116.663] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 36.25% complete, ETA 00:24:29
# Fork: 1 of 2
# Warmup Iteration   1: 540.356 ns/op
# Warmup Iteration   2: 155.338 ns/op
# Warmup Iteration   3: 113.289 ns/op
Iteration   1: 113.130 ns/op
Iteration   2: 113.083 ns/op
Iteration   3: 113.893 ns/op
Iteration   4: 113.329 ns/op
Iteration   5: 113.560 ns/op
Iteration   6: 113.306 ns/op
Iteration   7: 113.211 ns/op
Iteration   8: 113.519 ns/op
Iteration   9: 113.369 ns/op
Iteration  10: 113.433 ns/op

# Run progress: 36.32% complete, ETA 00:24:28
# Fork: 2 of 2
# Warmup Iteration   1: 703.363 ns/op
# Warmup Iteration   2: 154.641 ns/op
# Warmup Iteration   3: 111.861 ns/op
Iteration   1: 111.891 ns/op
Iteration   2: 112.158 ns/op
Iteration   3: 112.551 ns/op
Iteration   4: 112.165 ns/op
Iteration   5: 112.106 ns/op
Iteration   6: 111.954 ns/op
Iteration   7: 112.147 ns/op
Iteration   8: 112.111 ns/op
Iteration   9: 112.103 ns/op
Iteration  10: 112.004 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  112.751 ±(99.9%) 0.590 ns/op [Average]
  (min, avg, max) = (111.891, 112.751, 113.893), stdev = 0.680
  CI (99.9%): [112.161, 113.342] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 36.39% complete, ETA 00:24:26
# Fork: 1 of 2
# Warmup Iteration   1: 199.352 ns/op
# Warmup Iteration   2: 194.503 ns/op
# Warmup Iteration   3: 136.405 ns/op
Iteration   1: 136.485 ns/op
Iteration   2: 136.457 ns/op
Iteration   3: 136.485 ns/op
Iteration   4: 136.574 ns/op
Iteration   5: 136.530 ns/op
Iteration   6: 136.416 ns/op
Iteration   7: 136.484 ns/op
Iteration   8: 136.548 ns/op
Iteration   9: 136.441 ns/op
Iteration  10: 136.436 ns/op

# Run progress: 36.46% complete, ETA 00:24:24
# Fork: 2 of 2
# Warmup Iteration   1: 200.838 ns/op
# Warmup Iteration   2: 175.973 ns/op
# Warmup Iteration   3: 136.553 ns/op
Iteration   1: 136.491 ns/op
Iteration   2: 136.386 ns/op
Iteration   3: 136.459 ns/op
Iteration   4: 136.509 ns/op
Iteration   5: 136.440 ns/op
Iteration   6: 136.422 ns/op
Iteration   7: 136.452 ns/op
Iteration   8: 136.558 ns/op
Iteration   9: 136.392 ns/op
Iteration  10: 136.423 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  136.469 ±(99.9%) 0.047 ns/op [Average]
  (min, avg, max) = (136.386, 136.469, 136.574), stdev = 0.054
  CI (99.9%): [136.423, 136.516] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 36.53% complete, ETA 00:24:23
# Fork: 1 of 2
# Warmup Iteration   1: 218.494 ns/op
# Warmup Iteration   2: 212.604 ns/op
# Warmup Iteration   3: 116.587 ns/op
Iteration   1: 116.817 ns/op
Iteration   2: 117.806 ns/op
Iteration   3: 116.792 ns/op
Iteration   4: 118.339 ns/op
Iteration   5: 116.388 ns/op
Iteration   6: 116.481 ns/op
Iteration   7: 116.684 ns/op
Iteration   8: 121.412 ns/op
Iteration   9: 120.308 ns/op
Iteration  10: 116.620 ns/op

# Run progress: 36.60% complete, ETA 00:24:21
# Fork: 2 of 2
# Warmup Iteration   1: 249.289 ns/op
# Warmup Iteration   2: 203.693 ns/op
# Warmup Iteration   3: 116.778 ns/op
Iteration   1: 116.706 ns/op
Iteration   2: 117.949 ns/op
Iteration   3: 116.746 ns/op
Iteration   4: 119.486 ns/op
Iteration   5: 116.900 ns/op
Iteration   6: 116.747 ns/op
Iteration   7: 116.820 ns/op
Iteration   8: 121.240 ns/op
Iteration   9: 120.528 ns/op
Iteration  10: 116.820 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  117.879 ±(99.9%) 1.493 ns/op [Average]
  (min, avg, max) = (116.388, 117.879, 121.412), stdev = 1.719
  CI (99.9%): [116.387, 119.372] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 36.67% complete, ETA 00:24:20
# Fork: 1 of 2
# Warmup Iteration   1: 22.119 ns/op
# Warmup Iteration   2: 25.192 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.585 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.936 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.569 ns/op
Iteration   8: 19.099 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.571 ns/op

# Run progress: 36.74% complete, ETA 00:24:18
# Fork: 2 of 2
# Warmup Iteration   1: 22.578 ns/op
# Warmup Iteration   2: 25.940 ns/op
# Warmup Iteration   3: 15.756 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.937 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.569, 16.017, 19.110), stdev = 1.067
  CI (99.9%): [15.091, 16.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 36.81% complete, ETA 00:24:16
# Fork: 1 of 2
# Warmup Iteration   1: 1960.243 ns/op
# Warmup Iteration   2: 46472.559 ns/op
# Warmup Iteration   3: 932.115 ns/op
Iteration   1: 42679.086 ns/op
Iteration   2: 44332.739 ns/op
Iteration   3: 795.748 ns/op
Iteration   4: 767.484 ns/op
Iteration   5: 763.273 ns/op
Iteration   6: 927.864 ns/op
Iteration   7: 557.321 ns/op
Iteration   8: 835.842 ns/op
Iteration   9: 892.970 ns/op
Iteration  10: 1026.428 ns/op

# Run progress: 36.88% complete, ETA 00:24:15
# Fork: 2 of 2
# Warmup Iteration   1: 2375.579 ns/op
# Warmup Iteration   2: 12485.063 ns/op
# Warmup Iteration   3: 931.966 ns/op
Iteration   1: 34443.017 ns/op
Iteration   2: 37817.070 ns/op
Iteration   3: 812.037 ns/op
Iteration   4: 772.189 ns/op
Iteration   5: 768.920 ns/op
Iteration   6: 966.516 ns/op
Iteration   7: 579.698 ns/op
Iteration   8: 857.895 ns/op
Iteration   9: 900.924 ns/op
Iteration  10: 1040.623 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8626.882 ±(99.9%) 13982.191 ns/op [Average]
  (min, avg, max) = (557.321, 8626.882, 44332.739), stdev = 16101.912
  CI (99.9%): [≈ 0, 22609.074] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 36.94% complete, ETA 00:24:13
# Fork: 1 of 2
# Warmup Iteration   1: 12431.779 ns/op
# Warmup Iteration   2: 3059.079 ns/op
# Warmup Iteration   3: 1226.297 ns/op
Iteration   1: 5860.376 ns/op
Iteration   2: 6295.270 ns/op
Iteration   3: 1666.950 ns/op
Iteration   4: 748.114 ns/op
Iteration   5: 903.049 ns/op
Iteration   6: 1112.310 ns/op
Iteration   7: 703.943 ns/op
Iteration   8: 846.122 ns/op
Iteration   9: 774.142 ns/op
Iteration  10: 891.443 ns/op

# Run progress: 37.01% complete, ETA 00:24:12
# Fork: 2 of 2
# Warmup Iteration   1: 28891.937 ns/op
# Warmup Iteration   2: 17405.021 ns/op
# Warmup Iteration   3: 2583.083 ns/op
Iteration   1: 18215.219 ns/op
Iteration   2: 13391.160 ns/op
Iteration   3: 1547.610 ns/op
Iteration   4: 770.955 ns/op
Iteration   5: 928.603 ns/op
Iteration   6: 14007.277 ns/op
Iteration   7: 690.422 ns/op
Iteration   8: 830.260 ns/op
Iteration   9: 743.660 ns/op
Iteration  10: 855.816 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3589.135 ±(99.9%) 4620.564 ns/op [Average]
  (min, avg, max) = (690.422, 3589.135, 18215.219), stdev = 5321.049
  CI (99.9%): [≈ 0, 8209.699] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 37.08% complete, ETA 00:24:10
# Fork: 1 of 2
# Warmup Iteration   1: 11272.307 ns/op
# Warmup Iteration   2: 16918.681 ns/op
# Warmup Iteration   3: 1106.428 ns/op
Iteration   1: 1408.119 ns/op
Iteration   2: 3854.945 ns/op
Iteration   3: 1326.204 ns/op
Iteration   4: 774.265 ns/op
Iteration   5: 929.410 ns/op
Iteration   6: 12640.305 ns/op
Iteration   7: 690.788 ns/op
Iteration   8: 836.578 ns/op
Iteration   9: 740.111 ns/op
Iteration  10: 854.877 ns/op

# Run progress: 37.15% complete, ETA 00:24:08
# Fork: 2 of 2
# Warmup Iteration   1: 7812.846 ns/op
# Warmup Iteration   2: 16304.756 ns/op
# Warmup Iteration   3: 1120.311 ns/op
Iteration   1: 1013.618 ns/op
Iteration   2: 4666.532 ns/op
Iteration   3: 3632.730 ns/op
Iteration   4: 746.422 ns/op
Iteration   5: 898.533 ns/op
Iteration   6: 1531.863 ns/op
Iteration   7: 692.730 ns/op
Iteration   8: 832.453 ns/op
Iteration   9: 742.017 ns/op
Iteration  10: 865.698 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1983.910 ±(99.9%) 2405.181 ns/op [Average]
  (min, avg, max) = (690.788, 1983.910, 12640.305), stdev = 2769.810
  CI (99.9%): [≈ 0, 4389.091] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 37.22% complete, ETA 00:24:07
# Fork: 1 of 2
# Warmup Iteration   1: 1537.826 ns/op
# Warmup Iteration   2: 2813.573 ns/op
# Warmup Iteration   3: 855.574 ns/op
Iteration   1: 745.654 ns/op
Iteration   2: 829.166 ns/op
Iteration   3: 803.751 ns/op
Iteration   4: 732.823 ns/op
Iteration   5: 918.941 ns/op
Iteration   6: 731.364 ns/op
Iteration   7: 710.857 ns/op
Iteration   8: 762.405 ns/op
Iteration   9: 829.979 ns/op
Iteration  10: 856.393 ns/op

# Run progress: 37.29% complete, ETA 00:24:05
# Fork: 2 of 2
# Warmup Iteration   1: 1520.275 ns/op
# Warmup Iteration   2: 80665.346 ns/op
# Warmup Iteration   3: 974.846 ns/op
Iteration   1: 740.482 ns/op
Iteration   2: 819.381 ns/op
Iteration   3: 784.328 ns/op
Iteration   4: 726.030 ns/op
Iteration   5: 917.944 ns/op
Iteration   6: 726.062 ns/op
Iteration   7: 700.607 ns/op
Iteration   8: 755.899 ns/op
Iteration   9: 821.854 ns/op
Iteration  10: 843.693 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  787.881 ±(99.9%) 56.667 ns/op [Average]
  (min, avg, max) = (700.607, 787.881, 918.941), stdev = 65.258
  CI (99.9%): [731.213, 844.548] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 37.36% complete, ETA 00:24:04
# Fork: 1 of 2
# Warmup Iteration   1: 12434.035 ns/op
# Warmup Iteration   2: 15936.703 ns/op
# Warmup Iteration   3: 4267.274 ns/op
Iteration   1: 4260.104 ns/op
Iteration   2: 4003.429 ns/op
Iteration   3: 4248.483 ns/op
Iteration   4: 4046.104 ns/op
Iteration   5: 3910.031 ns/op
Iteration   6: 9183.273 ns/op
Iteration   7: 4019.072 ns/op
Iteration   8: 3688.857 ns/op
Iteration   9: 3866.023 ns/op
Iteration  10: 3927.066 ns/op

# Run progress: 37.43% complete, ETA 00:24:02
# Fork: 2 of 2
# Warmup Iteration   1: 10437.176 ns/op
# Warmup Iteration   2: 14708.317 ns/op
# Warmup Iteration   3: 3955.223 ns/op
Iteration   1: 4255.329 ns/op
Iteration   2: 4022.873 ns/op
Iteration   3: 4239.932 ns/op
Iteration   4: 4052.133 ns/op
Iteration   5: 3915.786 ns/op
Iteration   6: 12787.591 ns/op
Iteration   7: 4004.342 ns/op
Iteration   8: 3784.922 ns/op
Iteration   9: 3846.224 ns/op
Iteration  10: 3923.152 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4699.236 ±(99.9%) 1939.437 ns/op [Average]
  (min, avg, max) = (3688.857, 4699.236, 12787.591), stdev = 2233.459
  CI (99.9%): [2759.799, 6638.674] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 37.50% complete, ETA 00:24:00
# Fork: 1 of 2
# Warmup Iteration   1: 22.073 ns/op
# Warmup Iteration   2: 25.739 ns/op
# Warmup Iteration   3: 15.779 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.587 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.939 ns/op
Iteration   5: 15.678 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.573 ns/op
Iteration   8: 19.111 ns/op
Iteration   9: 15.572 ns/op
Iteration  10: 15.581 ns/op

# Run progress: 37.57% complete, ETA 00:23:59
# Fork: 2 of 2
# Warmup Iteration   1: 22.045 ns/op
# Warmup Iteration   2: 25.205 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.100 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.572, 16.018, 19.111), stdev = 1.067
  CI (99.9%): [15.092, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 37.64% complete, ETA 00:23:57
# Fork: 1 of 2
# Warmup Iteration   1: 2529.237 ns/op
# Warmup Iteration   2: 1054.774 ns/op
# Warmup Iteration   3: 751.232 ns/op
Iteration   1: 750.798 ns/op
Iteration   2: 751.713 ns/op
Iteration   3: 751.261 ns/op
Iteration   4: 751.481 ns/op
Iteration   5: 751.330 ns/op
Iteration   6: 751.226 ns/op
Iteration   7: 751.062 ns/op
Iteration   8: 754.814 ns/op
Iteration   9: 751.214 ns/op
Iteration  10: 751.166 ns/op

# Run progress: 37.71% complete, ETA 00:23:55
# Fork: 2 of 2
# Warmup Iteration   1: 2238.920 ns/op
# Warmup Iteration   2: 1066.544 ns/op
# Warmup Iteration   3: 749.460 ns/op
Iteration   1: 748.780 ns/op
Iteration   2: 748.969 ns/op
Iteration   3: 748.905 ns/op
Iteration   4: 748.941 ns/op
Iteration   5: 748.920 ns/op
Iteration   6: 749.026 ns/op
Iteration   7: 748.949 ns/op
Iteration   8: 752.404 ns/op
Iteration   9: 747.842 ns/op
Iteration  10: 749.157 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  750.398 ±(99.9%) 1.462 ns/op [Average]
  (min, avg, max) = (747.842, 750.398, 754.814), stdev = 1.683
  CI (99.9%): [748.936, 751.860] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 37.78% complete, ETA 00:23:54
# Fork: 1 of 2
# Warmup Iteration   1: 3200.903 ns/op
# Warmup Iteration   2: 1151.590 ns/op
# Warmup Iteration   3: 811.831 ns/op
Iteration   1: 812.205 ns/op
Iteration   2: 812.614 ns/op
Iteration   3: 812.876 ns/op
Iteration   4: 817.629 ns/op
Iteration   5: 813.688 ns/op
Iteration   6: 812.517 ns/op
Iteration   7: 812.393 ns/op
Iteration   8: 812.019 ns/op
Iteration   9: 812.860 ns/op
Iteration  10: 813.938 ns/op

# Run progress: 37.85% complete, ETA 00:23:52
# Fork: 2 of 2
# Warmup Iteration   1: 3062.648 ns/op
# Warmup Iteration   2: 1028.442 ns/op
# Warmup Iteration   3: 795.466 ns/op
Iteration   1: 795.992 ns/op
Iteration   2: 795.504 ns/op
Iteration   3: 811.534 ns/op
Iteration   4: 802.861 ns/op
Iteration   5: 795.995 ns/op
Iteration   6: 795.593 ns/op
Iteration   7: 796.333 ns/op
Iteration   8: 797.655 ns/op
Iteration   9: 796.738 ns/op
Iteration  10: 795.840 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  805.839 ±(99.9%) 7.358 ns/op [Average]
  (min, avg, max) = (795.504, 805.839, 817.629), stdev = 8.474
  CI (99.9%): [798.481, 813.197] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 37.92% complete, ETA 00:23:51
# Fork: 1 of 2
# Warmup Iteration   1: 11047.078 ns/op
# Warmup Iteration   2: 1138.322 ns/op
# Warmup Iteration   3: 774.166 ns/op
Iteration   1: 773.326 ns/op
Iteration   2: 773.526 ns/op
Iteration   3: 777.825 ns/op
Iteration   4: 780.063 ns/op
Iteration   5: 773.287 ns/op
Iteration   6: 773.581 ns/op
Iteration   7: 773.801 ns/op
Iteration   8: 785.901 ns/op
Iteration   9: 774.138 ns/op
Iteration  10: 773.448 ns/op

# Run progress: 37.99% complete, ETA 00:23:49
# Fork: 2 of 2
# Warmup Iteration   1: 7316.935 ns/op
# Warmup Iteration   2: 1162.706 ns/op
# Warmup Iteration   3: 747.599 ns/op
Iteration   1: 745.439 ns/op
Iteration   2: 749.908 ns/op
Iteration   3: 743.709 ns/op
Iteration   4: 748.354 ns/op
Iteration   5: 743.408 ns/op
Iteration   6: 745.219 ns/op
Iteration   7: 743.302 ns/op
Iteration   8: 747.505 ns/op
Iteration   9: 748.665 ns/op
Iteration  10: 743.133 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  760.877 ±(99.9%) 13.694 ns/op [Average]
  (min, avg, max) = (743.133, 760.877, 785.901), stdev = 15.770
  CI (99.9%): [747.183, 774.571] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 38.06% complete, ETA 00:23:47
# Fork: 1 of 2
# Warmup Iteration   1: 1222.628 ns/op
# Warmup Iteration   2: 918.168 ns/op
# Warmup Iteration   3: 720.451 ns/op
Iteration   1: 720.679 ns/op
Iteration   2: 721.003 ns/op
Iteration   3: 719.417 ns/op
Iteration   4: 721.977 ns/op
Iteration   5: 720.821 ns/op
Iteration   6: 720.768 ns/op
Iteration   7: 720.889 ns/op
Iteration   8: 719.551 ns/op
Iteration   9: 721.334 ns/op
Iteration  10: 720.656 ns/op

# Run progress: 38.13% complete, ETA 00:23:46
# Fork: 2 of 2
# Warmup Iteration   1: 1361.662 ns/op
# Warmup Iteration   2: 921.694 ns/op
# Warmup Iteration   3: 720.424 ns/op
Iteration   1: 720.906 ns/op
Iteration   2: 719.703 ns/op
Iteration   3: 720.414 ns/op
Iteration   4: 721.414 ns/op
Iteration   5: 721.308 ns/op
Iteration   6: 721.644 ns/op
Iteration   7: 720.972 ns/op
Iteration   8: 722.040 ns/op
Iteration   9: 721.008 ns/op
Iteration  10: 721.154 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  720.883 ±(99.9%) 0.615 ns/op [Average]
  (min, avg, max) = (719.417, 720.883, 722.040), stdev = 0.708
  CI (99.9%): [720.268, 721.498] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 38.19% complete, ETA 00:23:44
# Fork: 1 of 2
# Warmup Iteration   1: 1871.299 ns/op
# Warmup Iteration   2: 1176.440 ns/op
# Warmup Iteration   3: 793.866 ns/op
Iteration   1: 797.927 ns/op
Iteration   2: 800.241 ns/op
Iteration   3: 794.496 ns/op
Iteration   4: 793.520 ns/op
Iteration   5: 803.513 ns/op
Iteration   6: 798.513 ns/op
Iteration   7: 793.357 ns/op
Iteration   8: 795.812 ns/op
Iteration   9: 791.062 ns/op
Iteration  10: 797.702 ns/op

# Run progress: 38.26% complete, ETA 00:23:43
# Fork: 2 of 2
# Warmup Iteration   1: 1802.232 ns/op
# Warmup Iteration   2: 1164.201 ns/op
# Warmup Iteration   3: 784.010 ns/op
Iteration   1: 791.009 ns/op
Iteration   2: 790.699 ns/op
Iteration   3: 787.637 ns/op
Iteration   4: 792.863 ns/op
Iteration   5: 794.652 ns/op
Iteration   6: 787.278 ns/op
Iteration   7: 785.042 ns/op
Iteration   8: 791.171 ns/op
Iteration   9: 790.568 ns/op
Iteration  10: 802.225 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  793.964 ±(99.9%) 4.303 ns/op [Average]
  (min, avg, max) = (785.042, 793.964, 803.513), stdev = 4.956
  CI (99.9%): [789.661, 798.268] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 38.33% complete, ETA 00:23:41
# Fork: 1 of 2
# Warmup Iteration   1: 23.144 ns/op
# Warmup Iteration   2: 24.817 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.572 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.937 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.585 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.132 ns/op
Iteration   9: 15.586 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 38.40% complete, ETA 00:23:39
# Fork: 2 of 2
# Warmup Iteration   1: 22.380 ns/op
# Warmup Iteration   2: 24.640 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.986 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.095 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.586 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.572, 16.021, 19.132), stdev = 1.069
  CI (99.9%): [15.093, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 38.47% complete, ETA 00:23:38
# Fork: 1 of 2
# Warmup Iteration   1: 489.151 ns/op
# Warmup Iteration   2: 458.624 ns/op
# Warmup Iteration   3: 320.228 ns/op
Iteration   1: 318.911 ns/op
Iteration   2: 320.177 ns/op
Iteration   3: 318.739 ns/op
Iteration   4: 318.963 ns/op
Iteration   5: 317.831 ns/op
Iteration   6: 320.606 ns/op
Iteration   7: 320.233 ns/op
Iteration   8: 321.473 ns/op
Iteration   9: 320.019 ns/op
Iteration  10: 319.540 ns/op

# Run progress: 38.54% complete, ETA 00:23:36
# Fork: 2 of 2
# Warmup Iteration   1: 535.552 ns/op
# Warmup Iteration   2: 433.483 ns/op
# Warmup Iteration   3: 315.114 ns/op
Iteration   1: 315.304 ns/op
Iteration   2: 315.233 ns/op
Iteration   3: 314.062 ns/op
Iteration   4: 315.344 ns/op
Iteration   5: 315.381 ns/op
Iteration   6: 315.970 ns/op
Iteration   7: 315.087 ns/op
Iteration   8: 318.271 ns/op
Iteration   9: 312.947 ns/op
Iteration  10: 318.178 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  317.614 ±(99.9%) 2.154 ns/op [Average]
  (min, avg, max) = (312.947, 317.614, 321.473), stdev = 2.481
  CI (99.9%): [315.459, 319.768] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 38.61% complete, ETA 00:23:35
# Fork: 1 of 2
# Warmup Iteration   1: 2692.914 ns/op
# Warmup Iteration   2: 549.425 ns/op
# Warmup Iteration   3: 408.754 ns/op
Iteration   1: 408.235 ns/op
Iteration   2: 407.708 ns/op
Iteration   3: 410.521 ns/op
Iteration   4: 408.341 ns/op
Iteration   5: 409.263 ns/op
Iteration   6: 407.103 ns/op
Iteration   7: 409.179 ns/op
Iteration   8: 407.062 ns/op
Iteration   9: 409.683 ns/op
Iteration  10: 408.127 ns/op

# Run progress: 38.68% complete, ETA 00:23:33
# Fork: 2 of 2
# Warmup Iteration   1: 6351.578 ns/op
# Warmup Iteration   2: 606.555 ns/op
# Warmup Iteration   3: 398.403 ns/op
Iteration   1: 398.238 ns/op
Iteration   2: 398.715 ns/op
Iteration   3: 400.698 ns/op
Iteration   4: 398.723 ns/op
Iteration   5: 398.662 ns/op
Iteration   6: 398.464 ns/op
Iteration   7: 397.999 ns/op
Iteration   8: 399.253 ns/op
Iteration   9: 398.226 ns/op
Iteration  10: 398.254 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  403.623 ±(99.9%) 4.441 ns/op [Average]
  (min, avg, max) = (397.999, 403.623, 410.521), stdev = 5.114
  CI (99.9%): [399.182, 408.064] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 38.75% complete, ETA 00:23:31
# Fork: 1 of 2
# Warmup Iteration   1: 3170.515 ns/op
# Warmup Iteration   2: 566.217 ns/op
# Warmup Iteration   3: 434.714 ns/op
Iteration   1: 434.420 ns/op
Iteration   2: 435.019 ns/op
Iteration   3: 434.565 ns/op
Iteration   4: 434.588 ns/op
Iteration   5: 434.506 ns/op
Iteration   6: 434.331 ns/op
Iteration   7: 434.328 ns/op
Iteration   8: 433.777 ns/op
Iteration   9: 435.732 ns/op
Iteration  10: 434.468 ns/op

# Run progress: 38.82% complete, ETA 00:23:30
# Fork: 2 of 2
# Warmup Iteration   1: 1800.462 ns/op
# Warmup Iteration   2: 642.748 ns/op
# Warmup Iteration   3: 444.068 ns/op
Iteration   1: 444.238 ns/op
Iteration   2: 444.390 ns/op
Iteration   3: 444.506 ns/op
Iteration   4: 444.472 ns/op
Iteration   5: 444.663 ns/op
Iteration   6: 445.070 ns/op
Iteration   7: 445.011 ns/op
Iteration   8: 463.217 ns/op
Iteration   9: 444.341 ns/op
Iteration  10: 444.103 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  440.487 ±(99.9%) 6.353 ns/op [Average]
  (min, avg, max) = (433.777, 440.487, 463.217), stdev = 7.316
  CI (99.9%): [434.135, 446.840] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 38.89% complete, ETA 00:23:28
# Fork: 1 of 2
# Warmup Iteration   1: 1191.233 ns/op
# Warmup Iteration   2: 1045.981 ns/op
# Warmup Iteration   3: 740.795 ns/op
Iteration   1: 741.268 ns/op
Iteration   2: 740.851 ns/op
Iteration   3: 739.637 ns/op
Iteration   4: 742.319 ns/op
Iteration   5: 741.403 ns/op
Iteration   6: 739.499 ns/op
Iteration   7: 740.773 ns/op
Iteration   8: 739.440 ns/op
Iteration   9: 740.583 ns/op
Iteration  10: 740.569 ns/op

# Run progress: 38.96% complete, ETA 00:23:27
# Fork: 2 of 2
# Warmup Iteration   1: 1309.639 ns/op
# Warmup Iteration   2: 944.867 ns/op
# Warmup Iteration   3: 733.042 ns/op
Iteration   1: 736.465 ns/op
Iteration   2: 731.925 ns/op
Iteration   3: 739.430 ns/op
Iteration   4: 739.294 ns/op
Iteration   5: 736.443 ns/op
Iteration   6: 733.185 ns/op
Iteration   7: 730.652 ns/op
Iteration   8: 735.759 ns/op
Iteration   9: 732.980 ns/op
Iteration  10: 735.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  737.903 ±(99.9%) 3.057 ns/op [Average]
  (min, avg, max) = (730.652, 737.903, 742.319), stdev = 3.520
  CI (99.9%): [734.845, 740.960] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 39.03% complete, ETA 00:23:25
# Fork: 1 of 2
# Warmup Iteration   1: 10731.592 ns/op
# Warmup Iteration   2: 4801.709 ns/op
# Warmup Iteration   3: 4048.961 ns/op
Iteration   1: 3724.520 ns/op
Iteration   2: 3723.548 ns/op
Iteration   3: 3729.802 ns/op
Iteration   4: 3713.562 ns/op
Iteration   5: 3707.568 ns/op
Iteration   6: 3719.262 ns/op
Iteration   7: 3707.891 ns/op
Iteration   8: 3715.600 ns/op
Iteration   9: 3726.455 ns/op
Iteration  10: 3709.055 ns/op

# Run progress: 39.10% complete, ETA 00:23:23
# Fork: 2 of 2
# Warmup Iteration   1: 21736.452 ns/op
# Warmup Iteration   2: 5265.314 ns/op
# Warmup Iteration   3: 4047.848 ns/op
Iteration   1: 3727.455 ns/op
Iteration   2: 3734.478 ns/op
Iteration   3: 3712.130 ns/op
Iteration   4: 3696.337 ns/op
Iteration   5: 3692.964 ns/op
Iteration   6: 3699.377 ns/op
Iteration   7: 3694.661 ns/op
Iteration   8: 3670.046 ns/op
Iteration   9: 3705.925 ns/op
Iteration  10: 3695.420 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3710.303 ±(99.9%) 13.738 ns/op [Average]
  (min, avg, max) = (3670.046, 3710.303, 3734.478), stdev = 15.821
  CI (99.9%): [3696.565, 3724.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 39.17% complete, ETA 00:23:22
# Fork: 1 of 2
# Warmup Iteration   1: 22.008 ns/op
# Warmup Iteration   2: 26.100 ns/op
# Warmup Iteration   3: 15.766 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.571 ns/op
Iteration   3: 16.024 ns/op
Iteration   4: 15.944 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.596 ns/op
Iteration   7: 15.584 ns/op
Iteration   8: 19.108 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 39.24% complete, ETA 00:23:20
# Fork: 2 of 2
# Warmup Iteration   1: 22.030 ns/op
# Warmup Iteration   2: 26.270 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 16.021 ns/op
Iteration   4: 16.071 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.571 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.029 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.571, 16.029, 19.108), stdev = 1.066
  CI (99.9%): [15.103, 16.955] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 39.31% complete, ETA 00:23:19
# Fork: 1 of 2
# Warmup Iteration   1: 467.101 ns/op
# Warmup Iteration   2: 2160.509 ns/op
# Warmup Iteration   3: 590.109 ns/op
Iteration   1: 4354.309 ns/op
Iteration   2: 3094.977 ns/op
Iteration   3: 7579.160 ns/op
Iteration   4: 305.009 ns/op
Iteration   5: 17433.129 ns/op
Iteration   6: 1536.338 ns/op
Iteration   7: 325.313 ns/op
Iteration   8: 352.495 ns/op
Iteration   9: 494.614 ns/op
Iteration  10: 355.463 ns/op

# Run progress: 39.38% complete, ETA 00:23:17
# Fork: 2 of 2
# Warmup Iteration   1: 449.602 ns/op
# Warmup Iteration   2: 1504.106 ns/op
# Warmup Iteration   3: 663.877 ns/op
Iteration   1: 1403.391 ns/op
Iteration   2: 31238.732 ns/op
Iteration   3: 1567.976 ns/op
Iteration   4: 312.633 ns/op
Iteration   5: 1325.763 ns/op
Iteration   6: 1211.761 ns/op
Iteration   7: 324.645 ns/op
Iteration   8: 376.477 ns/op
Iteration   9: 513.294 ns/op
Iteration  10: 353.795 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3722.964 ±(99.9%) 6607.161 ns/op [Average]
  (min, avg, max) = (305.009, 3722.964, 31238.732), stdev = 7608.817
  CI (99.9%): [≈ 0, 10330.125] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 39.44% complete, ETA 00:23:15
# Fork: 1 of 2
# Warmup Iteration   1: 2379.721 ns/op
# Warmup Iteration   2: 6844.390 ns/op
# Warmup Iteration   3: 898.224 ns/op
Iteration   1: 345.206 ns/op
Iteration   2: 1221.237 ns/op
Iteration   3: 1684.090 ns/op
Iteration   4: 703.185 ns/op
Iteration   5: 479.692 ns/op
Iteration   6: 485.550 ns/op
Iteration   7: 423.860 ns/op
Iteration   8: 387.502 ns/op
Iteration   9: 312.702 ns/op
Iteration  10: 542.029 ns/op

# Run progress: 39.51% complete, ETA 00:23:14
# Fork: 2 of 2
# Warmup Iteration   1: 1981.658 ns/op
# Warmup Iteration   2: 1214.239 ns/op
# Warmup Iteration   3: 2042.899 ns/op
Iteration   1: 341.128 ns/op
Iteration   2: 6546.080 ns/op
Iteration   3: 1260.619 ns/op
Iteration   4: 922.701 ns/op
Iteration   5: 762.608 ns/op
Iteration   6: 490.544 ns/op
Iteration   7: 457.162 ns/op
Iteration   8: 389.721 ns/op
Iteration   9: 303.379 ns/op
Iteration  10: 575.045 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  931.702 ±(99.9%) 1191.645 ns/op [Average]
  (min, avg, max) = (303.379, 931.702, 6546.080), stdev = 1372.301
  CI (99.9%): [≈ 0, 2123.348] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 39.58% complete, ETA 00:23:12
# Fork: 1 of 2
# Warmup Iteration   1: 3149.551 ns/op
# Warmup Iteration   2: 1403.019 ns/op
# Warmup Iteration   3: 599.595 ns/op
Iteration   1: 268.024 ns/op
Iteration   2: 1272.886 ns/op
Iteration   3: 592.538 ns/op
Iteration   4: 618.883 ns/op
Iteration   5: 340.777 ns/op
Iteration   6: 508.891 ns/op
Iteration   7: 298.174 ns/op
Iteration   8: 394.763 ns/op
Iteration   9: 326.136 ns/op
Iteration  10: 325.079 ns/op

# Run progress: 39.65% complete, ETA 00:23:10
# Fork: 2 of 2
# Warmup Iteration   1: 1916.426 ns/op
# Warmup Iteration   2: 3646.891 ns/op
# Warmup Iteration   3: 466.124 ns/op
Iteration   1: 268.585 ns/op
Iteration   2: 1452.846 ns/op
Iteration   3: 1121.934 ns/op
Iteration   4: 517.118 ns/op
Iteration   5: 334.120 ns/op
Iteration   6: 517.444 ns/op
Iteration   7: 303.301 ns/op
Iteration   8: 400.861 ns/op
Iteration   9: 325.389 ns/op
Iteration  10: 326.727 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  525.724 ±(99.9%) 301.078 ns/op [Average]
  (min, avg, max) = (268.024, 525.724, 1452.846), stdev = 346.722
  CI (99.9%): [224.646, 826.802] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 39.72% complete, ETA 00:23:09
# Fork: 1 of 2
# Warmup Iteration   1: 1766.475 ns/op
# Warmup Iteration   2: 997.207 ns/op
# Warmup Iteration   3: 861.642 ns/op
Iteration   1: 768.595 ns/op
Iteration   2: 869.573 ns/op
Iteration   3: 912.797 ns/op
Iteration   4: 902.748 ns/op
Iteration   5: 868.856 ns/op
Iteration   6: 899.784 ns/op
Iteration   7: 860.662 ns/op
Iteration   8: 890.879 ns/op
Iteration   9: 788.459 ns/op
Iteration  10: 862.346 ns/op

# Run progress: 39.79% complete, ETA 00:23:07
# Fork: 2 of 2
# Warmup Iteration   1: 2051.541 ns/op
# Warmup Iteration   2: 1013.405 ns/op
# Warmup Iteration   3: 862.178 ns/op
Iteration   1: 763.415 ns/op
Iteration   2: 861.350 ns/op
Iteration   3: 910.070 ns/op
Iteration   4: 888.004 ns/op
Iteration   5: 861.349 ns/op
Iteration   6: 895.858 ns/op
Iteration   7: 855.468 ns/op
Iteration   8: 885.165 ns/op
Iteration   9: 782.841 ns/op
Iteration  10: 862.152 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  859.519 ±(99.9%) 40.493 ns/op [Average]
  (min, avg, max) = (763.415, 859.519, 912.797), stdev = 46.632
  CI (99.9%): [819.025, 900.012] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 39.86% complete, ETA 00:23:06
# Fork: 1 of 2
# Warmup Iteration   1: 11307.893 ns/op
# Warmup Iteration   2: 5038.971 ns/op
# Warmup Iteration   3: 3474.982 ns/op
Iteration   1: 3534.738 ns/op
Iteration   2: 3487.433 ns/op
Iteration   3: 3498.724 ns/op
Iteration   4: 3518.847 ns/op
Iteration   5: 3518.612 ns/op
Iteration   6: 3521.992 ns/op
Iteration   7: 3512.465 ns/op
Iteration   8: 3547.191 ns/op
Iteration   9: 3572.400 ns/op
Iteration  10: 3458.213 ns/op

# Run progress: 39.93% complete, ETA 00:23:04
# Fork: 2 of 2
# Warmup Iteration   1: 10712.230 ns/op
# Warmup Iteration   2: 5269.452 ns/op
# Warmup Iteration   3: 3711.817 ns/op
Iteration   1: 3775.405 ns/op
Iteration   2: 3733.651 ns/op
Iteration   3: 3744.942 ns/op
Iteration   4: 3748.887 ns/op
Iteration   5: 3737.903 ns/op
Iteration   6: 3745.547 ns/op
Iteration   7: 3744.606 ns/op
Iteration   8: 3782.014 ns/op
Iteration   9: 3752.583 ns/op
Iteration  10: 3698.691 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3631.742 ±(99.9%) 104.794 ns/op [Average]
  (min, avg, max) = (3458.213, 3631.742, 3782.014), stdev = 120.681
  CI (99.9%): [3526.948, 3736.536] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 40.00% complete, ETA 00:23:02
# Fork: 1 of 2
# Warmup Iteration   1: 22.097 ns/op
# Warmup Iteration   2: 24.856 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.588 ns/op
Iteration   2: 15.570 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.950 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.587 ns/op
Iteration  10: 15.582 ns/op

# Run progress: 40.07% complete, ETA 00:23:01
# Fork: 2 of 2
# Warmup Iteration   1: 22.367 ns/op
# Warmup Iteration   2: 22.834 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.586 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.953 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.584 ns/op
Iteration   7: 15.573 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.570, 16.021, 19.117), stdev = 1.069
  CI (99.9%): [15.093, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 40.14% complete, ETA 00:22:59
# Fork: 1 of 2
# Warmup Iteration   1: 113.854 ns/op
# Warmup Iteration   2: 114.788 ns/op
# Warmup Iteration   3: 77.243 ns/op
Iteration   1: 77.320 ns/op
Iteration   2: 77.301 ns/op
Iteration   3: 77.288 ns/op
Iteration   4: 77.359 ns/op
Iteration   5: 77.246 ns/op
Iteration   6: 77.298 ns/op
Iteration   7: 77.270 ns/op
Iteration   8: 80.099 ns/op
Iteration   9: 77.470 ns/op
Iteration  10: 77.327 ns/op

# Run progress: 40.21% complete, ETA 00:22:58
# Fork: 2 of 2
# Warmup Iteration   1: 114.735 ns/op
# Warmup Iteration   2: 115.745 ns/op
# Warmup Iteration   3: 77.220 ns/op
Iteration   1: 77.315 ns/op
Iteration   2: 77.255 ns/op
Iteration   3: 77.284 ns/op
Iteration   4: 77.358 ns/op
Iteration   5: 77.247 ns/op
Iteration   6: 77.307 ns/op
Iteration   7: 77.308 ns/op
Iteration   8: 80.182 ns/op
Iteration   9: 77.273 ns/op
Iteration  10: 77.282 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  77.589 ±(99.9%) 0.759 ns/op [Average]
  (min, avg, max) = (77.246, 77.589, 80.182), stdev = 0.874
  CI (99.9%): [76.830, 78.348] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 40.28% complete, ETA 00:22:56
# Fork: 1 of 2
# Warmup Iteration   1: 1804.706 ns/op
# Warmup Iteration   2: 137.147 ns/op
# Warmup Iteration   3: 114.547 ns/op
Iteration   1: 114.488 ns/op
Iteration   2: 114.472 ns/op
Iteration   3: 114.402 ns/op
Iteration   4: 114.618 ns/op
Iteration   5: 114.458 ns/op
Iteration   6: 114.470 ns/op
Iteration   7: 114.554 ns/op
Iteration   8: 114.468 ns/op
Iteration   9: 114.695 ns/op
Iteration  10: 114.476 ns/op

# Run progress: 40.35% complete, ETA 00:22:54
# Fork: 2 of 2
# Warmup Iteration   1: 1790.739 ns/op
# Warmup Iteration   2: 152.610 ns/op
# Warmup Iteration   3: 114.506 ns/op
Iteration   1: 114.554 ns/op
Iteration   2: 114.540 ns/op
Iteration   3: 114.430 ns/op
Iteration   4: 114.532 ns/op
Iteration   5: 114.565 ns/op
Iteration   6: 114.544 ns/op
Iteration   7: 114.508 ns/op
Iteration   8: 114.767 ns/op
Iteration   9: 114.573 ns/op
Iteration  10: 114.545 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  114.533 ±(99.9%) 0.075 ns/op [Average]
  (min, avg, max) = (114.402, 114.533, 114.767), stdev = 0.087
  CI (99.9%): [114.458, 114.608] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 40.42% complete, ETA 00:22:53
# Fork: 1 of 2
# Warmup Iteration   1: 441.096 ns/op
# Warmup Iteration   2: 172.878 ns/op
# Warmup Iteration   3: 110.917 ns/op
Iteration   1: 111.007 ns/op
Iteration   2: 110.888 ns/op
Iteration   3: 111.249 ns/op
Iteration   4: 110.948 ns/op
Iteration   5: 110.828 ns/op
Iteration   6: 110.932 ns/op
Iteration   7: 111.074 ns/op
Iteration   8: 110.982 ns/op
Iteration   9: 111.386 ns/op
Iteration  10: 111.122 ns/op

# Run progress: 40.49% complete, ETA 00:22:51
# Fork: 2 of 2
# Warmup Iteration   1: 521.851 ns/op
# Warmup Iteration   2: 147.314 ns/op
# Warmup Iteration   3: 110.587 ns/op
Iteration   1: 110.524 ns/op
Iteration   2: 110.710 ns/op
Iteration   3: 111.144 ns/op
Iteration   4: 110.672 ns/op
Iteration   5: 110.841 ns/op
Iteration   6: 110.545 ns/op
Iteration   7: 110.941 ns/op
Iteration   8: 110.554 ns/op
Iteration   9: 110.989 ns/op
Iteration  10: 110.499 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  110.892 ±(99.9%) 0.216 ns/op [Average]
  (min, avg, max) = (110.499, 110.892, 111.386), stdev = 0.248
  CI (99.9%): [110.676, 111.107] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 40.56% complete, ETA 00:22:50
# Fork: 1 of 2
# Warmup Iteration   1: 116.768 ns/op
# Warmup Iteration   2: 98.307 ns/op
# Warmup Iteration   3: 73.208 ns/op
Iteration   1: 73.223 ns/op
Iteration   2: 73.300 ns/op
Iteration   3: 73.182 ns/op
Iteration   4: 73.209 ns/op
Iteration   5: 73.256 ns/op
Iteration   6: 73.258 ns/op
Iteration   7: 73.351 ns/op
Iteration   8: 73.402 ns/op
Iteration   9: 73.340 ns/op
Iteration  10: 73.298 ns/op

# Run progress: 40.63% complete, ETA 00:22:48
# Fork: 2 of 2
# Warmup Iteration   1: 108.747 ns/op
# Warmup Iteration   2: 101.025 ns/op
# Warmup Iteration   3: 73.191 ns/op
Iteration   1: 73.391 ns/op
Iteration   2: 73.360 ns/op
Iteration   3: 73.237 ns/op
Iteration   4: 73.189 ns/op
Iteration   5: 73.243 ns/op
Iteration   6: 73.263 ns/op
Iteration   7: 73.281 ns/op
Iteration   8: 73.282 ns/op
Iteration   9: 73.344 ns/op
Iteration  10: 73.265 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.284 ±(99.9%) 0.056 ns/op [Average]
  (min, avg, max) = (73.182, 73.284, 73.402), stdev = 0.064
  CI (99.9%): [73.228, 73.339] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 40.69% complete, ETA 00:22:46
# Fork: 1 of 2
# Warmup Iteration   1: 228.920 ns/op
# Warmup Iteration   2: 216.127 ns/op
# Warmup Iteration   3: 124.738 ns/op
Iteration   1: 124.869 ns/op
Iteration   2: 126.338 ns/op
Iteration   3: 124.791 ns/op
Iteration   4: 124.900 ns/op
Iteration   5: 124.981 ns/op
Iteration   6: 124.818 ns/op
Iteration   7: 124.749 ns/op
Iteration   8: 128.091 ns/op
Iteration   9: 130.536 ns/op
Iteration  10: 124.944 ns/op

# Run progress: 40.76% complete, ETA 00:22:45
# Fork: 2 of 2
# Warmup Iteration   1: 208.126 ns/op
# Warmup Iteration   2: 223.692 ns/op
# Warmup Iteration   3: 124.745 ns/op
Iteration   1: 124.852 ns/op
Iteration   2: 126.317 ns/op
Iteration   3: 124.874 ns/op
Iteration   4: 124.919 ns/op
Iteration   5: 124.824 ns/op
Iteration   6: 124.849 ns/op
Iteration   7: 124.803 ns/op
Iteration   8: 128.048 ns/op
Iteration   9: 130.497 ns/op
Iteration  10: 124.792 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.890 ±(99.9%) 1.640 ns/op [Average]
  (min, avg, max) = (124.749, 125.890, 130.536), stdev = 1.888
  CI (99.9%): [124.250, 127.529] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 40.83% complete, ETA 00:22:43
# Fork: 1 of 2
# Warmup Iteration   1: 22.334 ns/op
# Warmup Iteration   2: 26.001 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.113 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.567 ns/op

# Run progress: 40.90% complete, ETA 00:22:42
# Fork: 2 of 2
# Warmup Iteration   1: 22.145 ns/op
# Warmup Iteration   2: 24.362 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.976 ns/op
Iteration   4: 15.953 ns/op
Iteration   5: 15.691 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.588 ns/op
Iteration   8: 19.139 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.573 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.932 ns/op [Average]
  (min, avg, max) = (15.567, 16.021, 19.139), stdev = 1.073
  CI (99.9%): [15.089, 16.953] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 40.97% complete, ETA 00:22:40
# Fork: 1 of 2
# Warmup Iteration   1: 1953.409 ns/op
# Warmup Iteration   2: 55684.496 ns/op
# Warmup Iteration   3: 41840.179 ns/op
Iteration   1: 752.898 ns/op
Iteration   2: 1042.821 ns/op
Iteration   3: 40179.693 ns/op
Iteration   4: 567.390 ns/op
Iteration   5: 1014.146 ns/op
Iteration   6: 44930.772 ns/op
Iteration   7: 1080.340 ns/op
Iteration   8: 604.374 ns/op
Iteration   9: 946.621 ns/op
Iteration  10: 744.682 ns/op

# Run progress: 41.04% complete, ETA 00:22:38
# Fork: 2 of 2
# Warmup Iteration   1: 1704.535 ns/op
# Warmup Iteration   2: 57094.499 ns/op
# Warmup Iteration   3: 7687.344 ns/op
Iteration   1: 746.745 ns/op
Iteration   2: 1000.764 ns/op
Iteration   3: 48948.164 ns/op
Iteration   4: 565.123 ns/op
Iteration   5: 1034.581 ns/op
Iteration   6: 44876.980 ns/op
Iteration   7: 686.460 ns/op
Iteration   8: 572.746 ns/op
Iteration   9: 834.983 ns/op
Iteration  10: 712.503 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9592.139 ±(99.9%) 15703.622 ns/op [Average]
  (min, avg, max) = (565.123, 9592.139, 48948.164), stdev = 18084.315
  CI (99.9%): [≈ 0, 25295.762] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 41.11% complete, ETA 00:22:37
# Fork: 1 of 2
# Warmup Iteration   1: 11026.617 ns/op
# Warmup Iteration   2: 61915.479 ns/op
# Warmup Iteration   3: 1182.442 ns/op
Iteration   1: 719.565 ns/op
Iteration   2: 824.536 ns/op
Iteration   3: 818.369 ns/op
Iteration   4: 1534.863 ns/op
Iteration   5: 803.621 ns/op
Iteration   6: 884.312 ns/op
Iteration   7: 870.729 ns/op
Iteration   8: 821.148 ns/op
Iteration   9: 744.936 ns/op
Iteration  10: 932.431 ns/op

# Run progress: 41.18% complete, ETA 00:22:35
# Fork: 2 of 2
# Warmup Iteration   1: 14669.833 ns/op
# Warmup Iteration   2: 66434.980 ns/op
# Warmup Iteration   3: 2501.185 ns/op
Iteration   1: 874.722 ns/op
Iteration   2: 803.463 ns/op
Iteration   3: 804.486 ns/op
Iteration   4: 3213.621 ns/op
Iteration   5: 764.793 ns/op
Iteration   6: 812.604 ns/op
Iteration   7: 822.506 ns/op
Iteration   8: 763.391 ns/op
Iteration   9: 730.324 ns/op
Iteration  10: 873.715 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  970.907 ±(99.9%) 481.469 ns/op [Average]
  (min, avg, max) = (719.565, 970.907, 3213.621), stdev = 554.461
  CI (99.9%): [489.437, 1452.376] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 41.25% complete, ETA 00:22:34
# Fork: 1 of 2
# Warmup Iteration   1: 16433.967 ns/op
# Warmup Iteration   2: 65296.955 ns/op
# Warmup Iteration   3: 1961.730 ns/op
Iteration   1: 3774.498 ns/op
Iteration   2: 912.043 ns/op
Iteration   3: 892.346 ns/op
Iteration   4: 1470.062 ns/op
Iteration   5: 877.418 ns/op
Iteration   6: 903.045 ns/op
Iteration   7: 919.608 ns/op
Iteration   8: 879.016 ns/op
Iteration   9: 800.697 ns/op
Iteration  10: 954.575 ns/op

# Run progress: 41.32% complete, ETA 00:22:32
# Fork: 2 of 2
# Warmup Iteration   1: 40688.803 ns/op
# Warmup Iteration   2: 58128.555 ns/op
# Warmup Iteration   3: 36707.031 ns/op
Iteration   1: 6679.742 ns/op
Iteration   2: 1070.256 ns/op
Iteration   3: 894.496 ns/op
Iteration   4: 20185.866 ns/op
Iteration   5: 881.781 ns/op
Iteration   6: 910.484 ns/op
Iteration   7: 919.238 ns/op
Iteration   8: 884.544 ns/op
Iteration   9: 805.723 ns/op
Iteration  10: 969.777 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2329.261 ±(99.9%) 3848.195 ns/op [Average]
  (min, avg, max) = (800.697, 2329.261, 20185.866), stdev = 4431.587
  CI (99.9%): [≈ 0, 6177.455] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 41.39% complete, ETA 00:22:30
# Fork: 1 of 2
# Warmup Iteration   1: 970.864 ns/op
# Warmup Iteration   2: 2142.753 ns/op
# Warmup Iteration   3: 789.651 ns/op
Iteration   1: 648.100 ns/op
Iteration   2: 765.114 ns/op
Iteration   3: 816.640 ns/op
Iteration   4: 733.442 ns/op
Iteration   5: 761.647 ns/op
Iteration   6: 702.401 ns/op
Iteration   7: 726.247 ns/op
Iteration   8: 626.593 ns/op
Iteration   9: 671.371 ns/op
Iteration  10: 789.674 ns/op

# Run progress: 41.46% complete, ETA 00:22:29
# Fork: 2 of 2
# Warmup Iteration   1: 955.851 ns/op
# Warmup Iteration   2: 2904.124 ns/op
# Warmup Iteration   3: 792.727 ns/op
Iteration   1: 641.051 ns/op
Iteration   2: 761.545 ns/op
Iteration   3: 822.051 ns/op
Iteration   4: 730.775 ns/op
Iteration   5: 760.832 ns/op
Iteration   6: 701.701 ns/op
Iteration   7: 726.934 ns/op
Iteration   8: 620.083 ns/op
Iteration   9: 666.525 ns/op
Iteration  10: 792.368 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  723.255 ±(99.9%) 53.884 ns/op [Average]
  (min, avg, max) = (620.083, 723.255, 822.051), stdev = 62.053
  CI (99.9%): [669.371, 777.138] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 41.53% complete, ETA 00:22:27
# Fork: 1 of 2
# Warmup Iteration   1: 13598.061 ns/op
# Warmup Iteration   2: 16253.663 ns/op
# Warmup Iteration   3: 4628.158 ns/op
Iteration   1: 4366.783 ns/op
Iteration   2: 4361.022 ns/op
Iteration   3: 4621.377 ns/op
Iteration   4: 4300.204 ns/op
Iteration   5: 4245.918 ns/op
Iteration   6: 9250.442 ns/op
Iteration   7: 4300.198 ns/op
Iteration   8: 3996.468 ns/op
Iteration   9: 4124.929 ns/op
Iteration  10: 4183.788 ns/op

# Run progress: 41.60% complete, ETA 00:22:26
# Fork: 2 of 2
# Warmup Iteration   1: 15239.302 ns/op
# Warmup Iteration   2: 17826.633 ns/op
# Warmup Iteration   3: 4904.239 ns/op
Iteration   1: 4378.575 ns/op
Iteration   2: 4312.743 ns/op
Iteration   3: 4642.835 ns/op
Iteration   4: 4230.094 ns/op
Iteration   5: 4203.673 ns/op
Iteration   6: 8905.343 ns/op
Iteration   7: 4266.343 ns/op
Iteration   8: 3932.823 ns/op
Iteration   9: 4129.408 ns/op
Iteration  10: 4160.727 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4745.685 ±(99.9%) 1295.913 ns/op [Average]
  (min, avg, max) = (3932.823, 4745.685, 9250.442), stdev = 1492.376
  CI (99.9%): [3449.771, 6041.598] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 41.67% complete, ETA 00:22:24
# Fork: 1 of 2
# Warmup Iteration   1: 22.150 ns/op
# Warmup Iteration   2: 28.811 ns/op
# Warmup Iteration   3: 18.775 ns/op
Iteration   1: 18.774 ns/op
Iteration   2: 18.776 ns/op
Iteration   3: 18.892 ns/op
Iteration   4: 19.176 ns/op
Iteration   5: 18.963 ns/op
Iteration   6: 18.939 ns/op
Iteration   7: 18.947 ns/op
Iteration   8: 19.079 ns/op
Iteration   9: 18.952 ns/op
Iteration  10: 18.959 ns/op

# Run progress: 41.74% complete, ETA 00:22:22
# Fork: 2 of 2
# Warmup Iteration   1: 22.383 ns/op
# Warmup Iteration   2: 30.996 ns/op
# Warmup Iteration   3: 18.771 ns/op
Iteration   1: 18.763 ns/op
Iteration   2: 18.780 ns/op
Iteration   3: 18.873 ns/op
Iteration   4: 19.182 ns/op
Iteration   5: 18.892 ns/op
Iteration   6: 18.952 ns/op
Iteration   7: 18.949 ns/op
Iteration   8: 19.085 ns/op
Iteration   9: 18.953 ns/op
Iteration  10: 18.990 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.944 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (18.763, 18.944, 19.182), stdev = 0.121
  CI (99.9%): [18.839, 19.049] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 41.81% complete, ETA 00:22:21
# Fork: 1 of 2
# Warmup Iteration   1: 278.784 ns/op
# Warmup Iteration   2: 215.304 ns/op
# Warmup Iteration   3: 141.233 ns/op
Iteration   1: 140.840 ns/op
Iteration   2: 141.113 ns/op
Iteration   3: 141.000 ns/op
Iteration   4: 141.587 ns/op
Iteration   5: 141.400 ns/op
Iteration   6: 140.979 ns/op
Iteration   7: 140.870 ns/op
Iteration   8: 142.853 ns/op
Iteration   9: 141.237 ns/op
Iteration  10: 141.280 ns/op

# Run progress: 41.88% complete, ETA 00:22:19
# Fork: 2 of 2
# Warmup Iteration   1: 260.368 ns/op
# Warmup Iteration   2: 194.727 ns/op
# Warmup Iteration   3: 140.660 ns/op
Iteration   1: 140.712 ns/op
Iteration   2: 140.825 ns/op
Iteration   3: 141.026 ns/op
Iteration   4: 141.497 ns/op
Iteration   5: 141.479 ns/op
Iteration   6: 140.817 ns/op
Iteration   7: 141.485 ns/op
Iteration   8: 142.774 ns/op
Iteration   9: 141.226 ns/op
Iteration  10: 141.127 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  141.306 ±(99.9%) 0.501 ns/op [Average]
  (min, avg, max) = (140.712, 141.306, 142.853), stdev = 0.577
  CI (99.9%): [140.805, 141.807] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 41.94% complete, ETA 00:22:18
# Fork: 1 of 2
# Warmup Iteration   1: 429.765 ns/op
# Warmup Iteration   2: 216.803 ns/op
# Warmup Iteration   3: 160.052 ns/op
Iteration   1: 160.479 ns/op
Iteration   2: 160.502 ns/op
Iteration   3: 160.735 ns/op
Iteration   4: 160.594 ns/op
Iteration   5: 160.921 ns/op
Iteration   6: 160.573 ns/op
Iteration   7: 161.155 ns/op
Iteration   8: 162.595 ns/op
Iteration   9: 161.642 ns/op
Iteration  10: 160.529 ns/op

# Run progress: 42.01% complete, ETA 00:22:16
# Fork: 2 of 2
# Warmup Iteration   1: 411.390 ns/op
# Warmup Iteration   2: 250.225 ns/op
# Warmup Iteration   3: 160.053 ns/op
Iteration   1: 160.493 ns/op
Iteration   2: 160.433 ns/op
Iteration   3: 160.754 ns/op
Iteration   4: 160.486 ns/op
Iteration   5: 160.883 ns/op
Iteration   6: 160.495 ns/op
Iteration   7: 160.763 ns/op
Iteration   8: 162.652 ns/op
Iteration   9: 161.603 ns/op
Iteration  10: 160.687 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  160.949 ±(99.9%) 0.581 ns/op [Average]
  (min, avg, max) = (160.433, 160.949, 162.652), stdev = 0.669
  CI (99.9%): [160.368, 161.530] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 42.08% complete, ETA 00:22:14
# Fork: 1 of 2
# Warmup Iteration   1: 679.710 ns/op
# Warmup Iteration   2: 299.987 ns/op
# Warmup Iteration   3: 218.422 ns/op
Iteration   1: 219.169 ns/op
Iteration   2: 206.444 ns/op
Iteration   3: 210.418 ns/op
Iteration   4: 219.593 ns/op
Iteration   5: 206.479 ns/op
Iteration   6: 222.000 ns/op
Iteration   7: 217.463 ns/op
Iteration   8: 208.993 ns/op
Iteration   9: 208.235 ns/op
Iteration  10: 218.633 ns/op

# Run progress: 42.15% complete, ETA 00:22:13
# Fork: 2 of 2
# Warmup Iteration   1: 645.771 ns/op
# Warmup Iteration   2: 286.390 ns/op
# Warmup Iteration   3: 208.685 ns/op
Iteration   1: 208.572 ns/op
Iteration   2: 208.406 ns/op
Iteration   3: 212.163 ns/op
Iteration   4: 208.767 ns/op
Iteration   5: 208.717 ns/op
Iteration   6: 208.650 ns/op
Iteration   7: 208.719 ns/op
Iteration   8: 211.495 ns/op
Iteration   9: 208.874 ns/op
Iteration  10: 208.527 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  211.516 ±(99.9%) 4.251 ns/op [Average]
  (min, avg, max) = (206.444, 211.516, 222.000), stdev = 4.895
  CI (99.9%): [207.265, 215.767] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 42.22% complete, ETA 00:22:11
# Fork: 1 of 2
# Warmup Iteration   1: 111.032 ns/op
# Warmup Iteration   2: 102.427 ns/op
# Warmup Iteration   3: 70.676 ns/op
Iteration   1: 70.597 ns/op
Iteration   2: 70.743 ns/op
Iteration   3: 70.468 ns/op
Iteration   4: 70.681 ns/op
Iteration   5: 70.606 ns/op
Iteration   6: 70.585 ns/op
Iteration   7: 70.590 ns/op
Iteration   8: 73.341 ns/op
Iteration   9: 70.735 ns/op
Iteration  10: 70.956 ns/op

# Run progress: 42.29% complete, ETA 00:22:10
# Fork: 2 of 2
# Warmup Iteration   1: 111.215 ns/op
# Warmup Iteration   2: 104.128 ns/op
# Warmup Iteration   3: 70.641 ns/op
Iteration   1: 70.581 ns/op
Iteration   2: 70.635 ns/op
Iteration   3: 70.438 ns/op
Iteration   4: 70.689 ns/op
Iteration   5: 70.571 ns/op
Iteration   6: 70.604 ns/op
Iteration   7: 70.577 ns/op
Iteration   8: 73.353 ns/op
Iteration   9: 70.637 ns/op
Iteration  10: 70.935 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.916 ±(99.9%) 0.730 ns/op [Average]
  (min, avg, max) = (70.438, 70.916, 73.353), stdev = 0.841
  CI (99.9%): [70.186, 71.646] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 42.36% complete, ETA 00:22:08
# Fork: 1 of 2
# Warmup Iteration   1: 234.283 ns/op
# Warmup Iteration   2: 234.337 ns/op
# Warmup Iteration   3: 161.471 ns/op
Iteration   1: 161.528 ns/op
Iteration   2: 162.545 ns/op
Iteration   3: 161.607 ns/op
Iteration   4: 162.143 ns/op
Iteration   5: 162.058 ns/op
Iteration   6: 161.770 ns/op
Iteration   7: 161.868 ns/op
Iteration   8: 162.330 ns/op
Iteration   9: 170.957 ns/op
Iteration  10: 162.789 ns/op

# Run progress: 42.43% complete, ETA 00:22:06
# Fork: 2 of 2
# Warmup Iteration   1: 266.776 ns/op
# Warmup Iteration   2: 232.873 ns/op
# Warmup Iteration   3: 161.013 ns/op
Iteration   1: 161.069 ns/op
Iteration   2: 162.230 ns/op
Iteration   3: 161.018 ns/op
Iteration   4: 161.332 ns/op
Iteration   5: 162.448 ns/op
Iteration   6: 161.318 ns/op
Iteration   7: 161.308 ns/op
Iteration   8: 162.197 ns/op
Iteration   9: 171.566 ns/op
Iteration  10: 161.620 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  162.785 ±(99.9%) 2.556 ns/op [Average]
  (min, avg, max) = (161.018, 162.785, 171.566), stdev = 2.943
  CI (99.9%): [160.229, 165.341] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 42.50% complete, ETA 00:22:05
# Fork: 1 of 2
# Warmup Iteration   1: 22.146 ns/op
# Warmup Iteration   2: 30.802 ns/op
# Warmup Iteration   3: 18.770 ns/op
Iteration   1: 18.779 ns/op
Iteration   2: 18.788 ns/op
Iteration   3: 18.871 ns/op
Iteration   4: 19.179 ns/op
Iteration   5: 18.899 ns/op
Iteration   6: 18.951 ns/op
Iteration   7: 18.942 ns/op
Iteration   8: 19.076 ns/op
Iteration   9: 18.969 ns/op
Iteration  10: 18.957 ns/op

# Run progress: 42.57% complete, ETA 00:22:03
# Fork: 2 of 2
# Warmup Iteration   1: 22.046 ns/op
# Warmup Iteration   2: 29.521 ns/op
# Warmup Iteration   3: 18.772 ns/op
Iteration   1: 18.781 ns/op
Iteration   2: 18.777 ns/op
Iteration   3: 18.880 ns/op
Iteration   4: 19.175 ns/op
Iteration   5: 18.887 ns/op
Iteration   6: 18.941 ns/op
Iteration   7: 18.957 ns/op
Iteration   8: 19.076 ns/op
Iteration   9: 18.953 ns/op
Iteration  10: 18.952 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.940 ±(99.9%) 0.103 ns/op [Average]
  (min, avg, max) = (18.777, 18.940, 19.179), stdev = 0.118
  CI (99.9%): [18.837, 19.042] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 42.64% complete, ETA 00:22:02
# Fork: 1 of 2
# Warmup Iteration   1: 389.896 ns/op
# Warmup Iteration   2: 320.015 ns/op
# Warmup Iteration   3: 230.379 ns/op
Iteration   1: 230.365 ns/op
Iteration   2: 230.810 ns/op
Iteration   3: 231.106 ns/op
Iteration   4: 239.724 ns/op
Iteration   5: 231.141 ns/op
Iteration   6: 231.071 ns/op
Iteration   7: 230.987 ns/op
Iteration   8: 239.388 ns/op
Iteration   9: 230.751 ns/op
Iteration  10: 230.798 ns/op

# Run progress: 42.71% complete, ETA 00:22:00
# Fork: 2 of 2
# Warmup Iteration   1: 439.520 ns/op
# Warmup Iteration   2: 310.519 ns/op
# Warmup Iteration   3: 231.592 ns/op
Iteration   1: 231.672 ns/op
Iteration   2: 231.495 ns/op
Iteration   3: 231.882 ns/op
Iteration   4: 247.342 ns/op
Iteration   5: 231.899 ns/op
Iteration   6: 231.588 ns/op
Iteration   7: 231.352 ns/op
Iteration   8: 239.694 ns/op
Iteration   9: 231.677 ns/op
Iteration  10: 231.562 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  233.315 ±(99.9%) 3.914 ns/op [Average]
  (min, avg, max) = (230.365, 233.315, 247.342), stdev = 4.507
  CI (99.9%): [229.401, 237.229] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 42.78% complete, ETA 00:21:58
# Fork: 1 of 2
# Warmup Iteration   1: 407.196 ns/op
# Warmup Iteration   2: 256.873 ns/op
# Warmup Iteration   3: 179.264 ns/op
Iteration   1: 176.774 ns/op
Iteration   2: 177.431 ns/op
Iteration   3: 182.021 ns/op
Iteration   4: 176.721 ns/op
Iteration   5: 178.424 ns/op
Iteration   6: 176.981 ns/op
Iteration   7: 177.563 ns/op
Iteration   8: 183.620 ns/op
Iteration   9: 177.602 ns/op
Iteration  10: 178.617 ns/op

# Run progress: 42.85% complete, ETA 00:21:57
# Fork: 2 of 2
# Warmup Iteration   1: 402.597 ns/op
# Warmup Iteration   2: 244.909 ns/op
# Warmup Iteration   3: 179.096 ns/op
Iteration   1: 176.961 ns/op
Iteration   2: 177.210 ns/op
Iteration   3: 183.498 ns/op
Iteration   4: 177.366 ns/op
Iteration   5: 179.152 ns/op
Iteration   6: 177.201 ns/op
Iteration   7: 177.945 ns/op
Iteration   8: 183.696 ns/op
Iteration   9: 178.870 ns/op
Iteration  10: 179.174 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  178.841 ±(99.9%) 2.069 ns/op [Average]
  (min, avg, max) = (176.721, 178.841, 183.696), stdev = 2.383
  CI (99.9%): [176.772, 180.911] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 42.92% complete, ETA 00:21:55
# Fork: 1 of 2
# Warmup Iteration   1: 689.315 ns/op
# Warmup Iteration   2: 265.884 ns/op
# Warmup Iteration   3: 188.097 ns/op
Iteration   1: 188.038 ns/op
Iteration   2: 188.119 ns/op
Iteration   3: 189.032 ns/op
Iteration   4: 187.479 ns/op
Iteration   5: 188.649 ns/op
Iteration   6: 187.380 ns/op
Iteration   7: 187.368 ns/op
Iteration   8: 190.217 ns/op
Iteration   9: 188.357 ns/op
Iteration  10: 188.584 ns/op

# Run progress: 42.99% complete, ETA 00:21:53
# Fork: 2 of 2
# Warmup Iteration   1: 437.410 ns/op
# Warmup Iteration   2: 276.581 ns/op
# Warmup Iteration   3: 193.144 ns/op
Iteration   1: 192.596 ns/op
Iteration   2: 192.566 ns/op
Iteration   3: 195.876 ns/op
Iteration   4: 192.476 ns/op
Iteration   5: 192.888 ns/op
Iteration   6: 192.593 ns/op
Iteration   7: 192.973 ns/op
Iteration   8: 195.797 ns/op
Iteration   9: 193.316 ns/op
Iteration  10: 192.909 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  190.861 ±(99.9%) 2.449 ns/op [Average]
  (min, avg, max) = (187.368, 190.861, 195.876), stdev = 2.821
  CI (99.9%): [188.411, 193.310] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 43.06% complete, ETA 00:21:52
# Fork: 1 of 2
# Warmup Iteration   1: 107.883 ns/op
# Warmup Iteration   2: 108.014 ns/op
# Warmup Iteration   3: 70.743 ns/op
Iteration   1: 70.579 ns/op
Iteration   2: 70.648 ns/op
Iteration   3: 70.453 ns/op
Iteration   4: 70.755 ns/op
Iteration   5: 70.606 ns/op
Iteration   6: 70.596 ns/op
Iteration   7: 70.571 ns/op
Iteration   8: 73.370 ns/op
Iteration   9: 70.713 ns/op
Iteration  10: 70.971 ns/op

# Run progress: 43.13% complete, ETA 00:21:50
# Fork: 2 of 2
# Warmup Iteration   1: 107.547 ns/op
# Warmup Iteration   2: 100.507 ns/op
# Warmup Iteration   3: 70.677 ns/op
Iteration   1: 70.575 ns/op
Iteration   2: 70.658 ns/op
Iteration   3: 70.477 ns/op
Iteration   4: 70.664 ns/op
Iteration   5: 70.584 ns/op
Iteration   6: 70.546 ns/op
Iteration   7: 70.595 ns/op
Iteration   8: 73.331 ns/op
Iteration   9: 70.777 ns/op
Iteration  10: 70.940 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.920 ±(99.9%) 0.731 ns/op [Average]
  (min, avg, max) = (70.453, 70.920, 73.370), stdev = 0.841
  CI (99.9%): [70.190, 71.651] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 43.19% complete, ETA 00:21:49
# Fork: 1 of 2
# Warmup Iteration   1: 250.385 ns/op
# Warmup Iteration   2: 233.799 ns/op
# Warmup Iteration   3: 159.614 ns/op
Iteration   1: 159.396 ns/op
Iteration   2: 160.147 ns/op
Iteration   3: 159.371 ns/op
Iteration   4: 161.200 ns/op
Iteration   5: 160.557 ns/op
Iteration   6: 160.661 ns/op
Iteration   7: 160.648 ns/op
Iteration   8: 160.792 ns/op
Iteration   9: 169.777 ns/op
Iteration  10: 160.712 ns/op

# Run progress: 43.26% complete, ETA 00:21:47
# Fork: 2 of 2
# Warmup Iteration   1: 235.350 ns/op
# Warmup Iteration   2: 221.893 ns/op
# Warmup Iteration   3: 159.667 ns/op
Iteration   1: 159.686 ns/op
Iteration   2: 160.177 ns/op
Iteration   3: 159.703 ns/op
Iteration   4: 161.188 ns/op
Iteration   5: 160.598 ns/op
Iteration   6: 160.776 ns/op
Iteration   7: 160.418 ns/op
Iteration   8: 160.812 ns/op
Iteration   9: 169.565 ns/op
Iteration  10: 160.653 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  161.342 ±(99.9%) 2.516 ns/op [Average]
  (min, avg, max) = (159.371, 161.342, 169.777), stdev = 2.897
  CI (99.9%): [158.826, 163.857] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 43.33% complete, ETA 00:21:46
# Fork: 1 of 2
# Warmup Iteration   1: 22.686 ns/op
# Warmup Iteration   2: 28.546 ns/op
# Warmup Iteration   3: 18.766 ns/op
Iteration   1: 18.764 ns/op
Iteration   2: 18.801 ns/op
Iteration   3: 18.866 ns/op
Iteration   4: 19.166 ns/op
Iteration   5: 18.883 ns/op
Iteration   6: 18.950 ns/op
Iteration   7: 18.957 ns/op
Iteration   8: 19.086 ns/op
Iteration   9: 18.972 ns/op
Iteration  10: 18.980 ns/op

# Run progress: 43.40% complete, ETA 00:21:44
# Fork: 2 of 2
# Warmup Iteration   1: 23.220 ns/op
# Warmup Iteration   2: 31.224 ns/op
# Warmup Iteration   3: 18.772 ns/op
Iteration   1: 18.773 ns/op
Iteration   2: 18.795 ns/op
Iteration   3: 18.876 ns/op
Iteration   4: 19.166 ns/op
Iteration   5: 18.901 ns/op
Iteration   6: 18.946 ns/op
Iteration   7: 18.962 ns/op
Iteration   8: 19.070 ns/op
Iteration   9: 18.950 ns/op
Iteration  10: 18.940 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.940 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (18.764, 18.940, 19.166), stdev = 0.116
  CI (99.9%): [18.839, 19.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 43.47% complete, ETA 00:21:42
# Fork: 1 of 2
# Warmup Iteration   1: 371.924 ns/op
# Warmup Iteration   2: 479.948 ns/op
# Warmup Iteration   3: 207.352 ns/op
Iteration   1: 202.558 ns/op
Iteration   2: 208.408 ns/op
Iteration   3: 211.747 ns/op
Iteration   4: 1063.065 ns/op
Iteration   5: 262.868 ns/op
Iteration   6: 1105.669 ns/op
Iteration   7: 201.258 ns/op
Iteration   8: 215.541 ns/op
Iteration   9: 192.319 ns/op
Iteration  10: 202.504 ns/op

# Run progress: 43.54% complete, ETA 00:21:41
# Fork: 2 of 2
# Warmup Iteration   1: 366.919 ns/op
# Warmup Iteration   2: 658.311 ns/op
# Warmup Iteration   3: 207.408 ns/op
Iteration   1: 202.684 ns/op
Iteration   2: 208.647 ns/op
Iteration   3: 215.956 ns/op
Iteration   4: 863.792 ns/op
Iteration   5: 262.406 ns/op
Iteration   6: 703.050 ns/op
Iteration   7: 200.392 ns/op
Iteration   8: 283.278 ns/op
Iteration   9: 192.068 ns/op
Iteration  10: 203.074 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  360.064 ±(99.9%) 264.446 ns/op [Average]
  (min, avg, max) = (192.068, 360.064, 1105.669), stdev = 304.536
  CI (99.9%): [95.619, 624.510] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 43.61% complete, ETA 00:21:39
# Fork: 1 of 2
# Warmup Iteration   1: 352.343 ns/op
# Warmup Iteration   2: 219.877 ns/op
# Warmup Iteration   3: 159.295 ns/op
Iteration   1: 147.649 ns/op
Iteration   2: 148.598 ns/op
Iteration   3: 166.151 ns/op
Iteration   4: 148.565 ns/op
Iteration   5: 146.818 ns/op
Iteration   6: 148.891 ns/op
Iteration   7: 687.797 ns/op
Iteration   8: 172.498 ns/op
Iteration   9: 148.199 ns/op
Iteration  10: 163.525 ns/op

# Run progress: 43.68% complete, ETA 00:21:37
# Fork: 2 of 2
# Warmup Iteration   1: 373.457 ns/op
# Warmup Iteration   2: 195.528 ns/op
# Warmup Iteration   3: 159.249 ns/op
Iteration   1: 147.748 ns/op
Iteration   2: 148.538 ns/op
Iteration   3: 166.060 ns/op
Iteration   4: 148.555 ns/op
Iteration   5: 146.823 ns/op
Iteration   6: 148.948 ns/op
Iteration   7: 1398.919 ns/op
Iteration   8: 172.316 ns/op
Iteration   9: 148.411 ns/op
Iteration  10: 163.602 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  243.430 ±(99.9%) 257.933 ns/op [Average]
  (min, avg, max) = (146.818, 243.430, 1398.919), stdev = 297.036
  CI (99.9%): [≈ 0, 501.363] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 43.75% complete, ETA 00:21:36
# Fork: 1 of 2
# Warmup Iteration   1: 408.536 ns/op
# Warmup Iteration   2: 1040.259 ns/op
# Warmup Iteration   3: 173.663 ns/op
Iteration   1: 178.387 ns/op
Iteration   2: 192.811 ns/op
Iteration   3: 175.898 ns/op
Iteration   4: 195.013 ns/op
Iteration   5: 191.920 ns/op
Iteration   6: 184.155 ns/op
Iteration   7: 13263.871 ns/op
Iteration   8: 175.194 ns/op
Iteration   9: 184.018 ns/op
Iteration  10: 172.467 ns/op

# Run progress: 43.82% complete, ETA 00:21:34
# Fork: 2 of 2
# Warmup Iteration   1: 405.758 ns/op
# Warmup Iteration   2: 1239.271 ns/op
# Warmup Iteration   3: 182.231 ns/op
Iteration   1: 186.519 ns/op
Iteration   2: 200.563 ns/op
Iteration   3: 177.004 ns/op
Iteration   4: 201.561 ns/op
Iteration   5: 198.687 ns/op
Iteration   6: 191.482 ns/op
Iteration   7: 13692.309 ns/op
Iteration   8: 174.941 ns/op
Iteration   9: 183.688 ns/op
Iteration  10: 172.692 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1514.659 ±(99.9%) 3553.320 ns/op [Average]
  (min, avg, max) = (172.467, 1514.659, 13692.309), stdev = 4092.008
  CI (99.9%): [≈ 0, 5067.979] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 43.89% complete, ETA 00:21:33
# Fork: 1 of 2
# Warmup Iteration   1: 107.227 ns/op
# Warmup Iteration   2: 108.055 ns/op
# Warmup Iteration   3: 70.659 ns/op
Iteration   1: 70.595 ns/op
Iteration   2: 70.654 ns/op
Iteration   3: 70.464 ns/op
Iteration   4: 70.701 ns/op
Iteration   5: 70.548 ns/op
Iteration   6: 70.600 ns/op
Iteration   7: 70.574 ns/op
Iteration   8: 73.219 ns/op
Iteration   9: 70.672 ns/op
Iteration  10: 71.019 ns/op

# Run progress: 43.96% complete, ETA 00:21:31
# Fork: 2 of 2
# Warmup Iteration   1: 110.363 ns/op
# Warmup Iteration   2: 104.626 ns/op
# Warmup Iteration   3: 70.659 ns/op
Iteration   1: 70.570 ns/op
Iteration   2: 70.771 ns/op
Iteration   3: 70.508 ns/op
Iteration   4: 70.720 ns/op
Iteration   5: 70.563 ns/op
Iteration   6: 70.603 ns/op
Iteration   7: 70.580 ns/op
Iteration   8: 73.197 ns/op
Iteration   9: 70.658 ns/op
Iteration  10: 70.942 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.908 ±(99.9%) 0.693 ns/op [Average]
  (min, avg, max) = (70.464, 70.908, 73.219), stdev = 0.798
  CI (99.9%): [70.215, 71.601] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 44.03% complete, ETA 00:21:29
# Fork: 1 of 2
# Warmup Iteration   1: 248.281 ns/op
# Warmup Iteration   2: 233.698 ns/op
# Warmup Iteration   3: 159.120 ns/op
Iteration   1: 160.289 ns/op
Iteration   2: 161.190 ns/op
Iteration   3: 159.060 ns/op
Iteration   4: 161.509 ns/op
Iteration   5: 160.588 ns/op
Iteration   6: 160.482 ns/op
Iteration   7: 160.397 ns/op
Iteration   8: 159.989 ns/op
Iteration   9: 169.289 ns/op
Iteration  10: 159.660 ns/op

# Run progress: 44.10% complete, ETA 00:21:28
# Fork: 2 of 2
# Warmup Iteration   1: 257.222 ns/op
# Warmup Iteration   2: 230.644 ns/op
# Warmup Iteration   3: 159.081 ns/op
Iteration   1: 160.203 ns/op
Iteration   2: 161.168 ns/op
Iteration   3: 159.042 ns/op
Iteration   4: 161.568 ns/op
Iteration   5: 160.606 ns/op
Iteration   6: 160.452 ns/op
Iteration   7: 160.386 ns/op
Iteration   8: 160.003 ns/op
Iteration   9: 169.384 ns/op
Iteration  10: 159.846 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  161.256 ±(99.9%) 2.471 ns/op [Average]
  (min, avg, max) = (159.042, 161.256, 169.384), stdev = 2.846
  CI (99.9%): [158.785, 163.726] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 44.17% complete, ETA 00:21:26
# Fork: 1 of 2
# Warmup Iteration   1: 22.546 ns/op
# Warmup Iteration   2: 30.704 ns/op
# Warmup Iteration   3: 18.774 ns/op
Iteration   1: 18.782 ns/op
Iteration   2: 18.783 ns/op
Iteration   3: 18.874 ns/op
Iteration   4: 19.174 ns/op
Iteration   5: 18.928 ns/op
Iteration   6: 18.951 ns/op
Iteration   7: 18.947 ns/op
Iteration   8: 19.072 ns/op
Iteration   9: 18.949 ns/op
Iteration  10: 18.958 ns/op

# Run progress: 44.24% complete, ETA 00:21:25
# Fork: 2 of 2
# Warmup Iteration   1: 22.054 ns/op
# Warmup Iteration   2: 30.879 ns/op
# Warmup Iteration   3: 18.766 ns/op
Iteration   1: 18.770 ns/op
Iteration   2: 18.794 ns/op
Iteration   3: 18.874 ns/op
Iteration   4: 20.039 ns/op
Iteration   5: 19.973 ns/op
Iteration   6: 19.017 ns/op
Iteration   7: 19.013 ns/op
Iteration   8: 19.788 ns/op
Iteration   9: 19.014 ns/op
Iteration  10: 19.047 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  19.087 ±(99.9%) 0.332 ns/op [Average]
  (min, avg, max) = (18.770, 19.087, 20.039), stdev = 0.382
  CI (99.9%): [18.756, 19.419] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 44.31% complete, ETA 00:21:23
# Fork: 1 of 2
# Warmup Iteration   1: 129.204 ns/op
# Warmup Iteration   2: 114.694 ns/op
# Warmup Iteration   3: 79.541 ns/op
Iteration   1: 79.460 ns/op
Iteration   2: 79.473 ns/op
Iteration   3: 79.412 ns/op
Iteration   4: 79.707 ns/op
Iteration   5: 79.642 ns/op
Iteration   6: 79.500 ns/op
Iteration   7: 79.459 ns/op
Iteration   8: 79.942 ns/op
Iteration   9: 79.499 ns/op
Iteration  10: 79.661 ns/op

# Run progress: 44.38% complete, ETA 00:21:21
# Fork: 2 of 2
# Warmup Iteration   1: 114.782 ns/op
# Warmup Iteration   2: 118.852 ns/op
# Warmup Iteration   3: 80.498 ns/op
Iteration   1: 80.506 ns/op
Iteration   2: 80.256 ns/op
Iteration   3: 80.453 ns/op
Iteration   4: 80.332 ns/op
Iteration   5: 80.163 ns/op
Iteration   6: 80.497 ns/op
Iteration   7: 80.505 ns/op
Iteration   8: 80.550 ns/op
Iteration   9: 80.410 ns/op
Iteration  10: 80.617 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  80.002 ±(99.9%) 0.401 ns/op [Average]
  (min, avg, max) = (79.412, 80.002, 80.617), stdev = 0.462
  CI (99.9%): [79.601, 80.404] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 44.44% complete, ETA 00:21:20
# Fork: 1 of 2
# Warmup Iteration   1: 2083.529 ns/op
# Warmup Iteration   2: 165.469 ns/op
# Warmup Iteration   3: 111.352 ns/op
Iteration   1: 111.149 ns/op
Iteration   2: 111.189 ns/op
Iteration   3: 111.193 ns/op
Iteration   4: 111.214 ns/op
Iteration   5: 111.402 ns/op
Iteration   6: 111.206 ns/op
Iteration   7: 111.130 ns/op
Iteration   8: 113.258 ns/op
Iteration   9: 111.549 ns/op
Iteration  10: 111.238 ns/op

# Run progress: 44.51% complete, ETA 00:21:18
# Fork: 2 of 2
# Warmup Iteration   1: 1702.301 ns/op
# Warmup Iteration   2: 138.742 ns/op
# Warmup Iteration   3: 111.387 ns/op
Iteration   1: 111.114 ns/op
Iteration   2: 111.096 ns/op
Iteration   3: 111.147 ns/op
Iteration   4: 111.089 ns/op
Iteration   5: 111.280 ns/op
Iteration   6: 111.146 ns/op
Iteration   7: 111.025 ns/op
Iteration   8: 113.451 ns/op
Iteration   9: 111.226 ns/op
Iteration  10: 111.281 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  111.419 ±(99.9%) 0.584 ns/op [Average]
  (min, avg, max) = (111.025, 111.419, 113.451), stdev = 0.672
  CI (99.9%): [110.835, 112.003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 44.58% complete, ETA 00:21:17
# Fork: 1 of 2
# Warmup Iteration   1: 469.403 ns/op
# Warmup Iteration   2: 152.772 ns/op
# Warmup Iteration   3: 109.254 ns/op
Iteration   1: 109.426 ns/op
Iteration   2: 109.377 ns/op
Iteration   3: 109.202 ns/op
Iteration   4: 109.249 ns/op
Iteration   5: 109.503 ns/op
Iteration   6: 109.313 ns/op
Iteration   7: 109.245 ns/op
Iteration   8: 110.649 ns/op
Iteration   9: 109.251 ns/op
Iteration  10: 109.475 ns/op

# Run progress: 44.65% complete, ETA 00:21:15
# Fork: 2 of 2
# Warmup Iteration   1: 1054.319 ns/op
# Warmup Iteration   2: 148.350 ns/op
# Warmup Iteration   3: 109.210 ns/op
Iteration   1: 109.123 ns/op
Iteration   2: 109.113 ns/op
Iteration   3: 109.070 ns/op
Iteration   4: 109.102 ns/op
Iteration   5: 109.154 ns/op
Iteration   6: 109.190 ns/op
Iteration   7: 109.443 ns/op
Iteration   8: 110.676 ns/op
Iteration   9: 109.528 ns/op
Iteration  10: 109.341 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  109.421 ±(99.9%) 0.388 ns/op [Average]
  (min, avg, max) = (109.070, 109.421, 110.676), stdev = 0.447
  CI (99.9%): [109.033, 109.810] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 44.72% complete, ETA 00:21:13
# Fork: 1 of 2
# Warmup Iteration   1: 108.313 ns/op
# Warmup Iteration   2: 115.738 ns/op
# Warmup Iteration   3: 70.706 ns/op
Iteration   1: 70.551 ns/op
Iteration   2: 70.708 ns/op
Iteration   3: 70.504 ns/op
Iteration   4: 70.698 ns/op
Iteration   5: 70.629 ns/op
Iteration   6: 70.551 ns/op
Iteration   7: 70.614 ns/op
Iteration   8: 73.253 ns/op
Iteration   9: 70.732 ns/op
Iteration  10: 70.942 ns/op

# Run progress: 44.79% complete, ETA 00:21:12
# Fork: 2 of 2
# Warmup Iteration   1: 113.746 ns/op
# Warmup Iteration   2: 98.916 ns/op
# Warmup Iteration   3: 70.688 ns/op
Iteration   1: 70.588 ns/op
Iteration   2: 70.659 ns/op
Iteration   3: 70.501 ns/op
Iteration   4: 70.692 ns/op
Iteration   5: 70.592 ns/op
Iteration   6: 70.595 ns/op
Iteration   7: 70.991 ns/op
Iteration   8: 73.191 ns/op
Iteration   9: 70.686 ns/op
Iteration  10: 70.919 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.930 ±(99.9%) 0.691 ns/op [Average]
  (min, avg, max) = (70.501, 70.930, 73.253), stdev = 0.796
  CI (99.9%): [70.239, 71.621] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 44.86% complete, ETA 00:21:10
# Fork: 1 of 2
# Warmup Iteration   1: 224.867 ns/op
# Warmup Iteration   2: 225.866 ns/op
# Warmup Iteration   3: 152.647 ns/op
Iteration   1: 152.668 ns/op
Iteration   2: 154.297 ns/op
Iteration   3: 152.755 ns/op
Iteration   4: 153.376 ns/op
Iteration   5: 153.514 ns/op
Iteration   6: 153.309 ns/op
Iteration   7: 153.313 ns/op
Iteration   8: 153.760 ns/op
Iteration   9: 164.814 ns/op
Iteration  10: 153.524 ns/op

# Run progress: 44.93% complete, ETA 00:21:09
# Fork: 2 of 2
# Warmup Iteration   1: 227.844 ns/op
# Warmup Iteration   2: 233.554 ns/op
# Warmup Iteration   3: 153.695 ns/op
Iteration   1: 153.770 ns/op
Iteration   2: 154.536 ns/op
Iteration   3: 153.766 ns/op
Iteration   4: 153.223 ns/op
Iteration   5: 153.261 ns/op
Iteration   6: 153.084 ns/op
Iteration   7: 153.137 ns/op
Iteration   8: 153.273 ns/op
Iteration   9: 164.414 ns/op
Iteration  10: 153.362 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.558 ±(99.9%) 3.011 ns/op [Average]
  (min, avg, max) = (152.668, 154.558, 164.814), stdev = 3.468
  CI (99.9%): [151.547, 157.569] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 45.00% complete, ETA 00:21:07
# Fork: 1 of 2
# Warmup Iteration   1: 22.014 ns/op
# Warmup Iteration   2: 30.845 ns/op
# Warmup Iteration   3: 18.762 ns/op
Iteration   1: 18.773 ns/op
Iteration   2: 18.778 ns/op
Iteration   3: 18.876 ns/op
Iteration   4: 19.180 ns/op
Iteration   5: 18.908 ns/op
Iteration   6: 18.946 ns/op
Iteration   7: 18.954 ns/op
Iteration   8: 19.084 ns/op
Iteration   9: 18.953 ns/op
Iteration  10: 18.955 ns/op

# Run progress: 45.07% complete, ETA 00:21:05
# Fork: 2 of 2
# Warmup Iteration   1: 22.143 ns/op
# Warmup Iteration   2: 31.854 ns/op
# Warmup Iteration   3: 18.786 ns/op
Iteration   1: 18.779 ns/op
Iteration   2: 18.793 ns/op
Iteration   3: 18.870 ns/op
Iteration   4: 19.176 ns/op
Iteration   5: 18.895 ns/op
Iteration   6: 18.949 ns/op
Iteration   7: 18.949 ns/op
Iteration   8: 19.083 ns/op
Iteration   9: 18.951 ns/op
Iteration  10: 18.942 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.940 ±(99.9%) 0.103 ns/op [Average]
  (min, avg, max) = (18.773, 18.940, 19.180), stdev = 0.119
  CI (99.9%): [18.836, 19.043] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 45.14% complete, ETA 00:21:04
# Fork: 1 of 2
# Warmup Iteration   1: 259.436 ns/op
# Warmup Iteration   2: 196.783 ns/op
# Warmup Iteration   3: 136.101 ns/op
Iteration   1: 136.196 ns/op
Iteration   2: 136.331 ns/op
Iteration   3: 136.175 ns/op
Iteration   4: 137.069 ns/op
Iteration   5: 135.956 ns/op
Iteration   6: 136.146 ns/op
Iteration   7: 135.976 ns/op
Iteration   8: 137.007 ns/op
Iteration   9: 136.397 ns/op
Iteration  10: 136.091 ns/op

# Run progress: 45.21% complete, ETA 00:21:02
# Fork: 2 of 2
# Warmup Iteration   1: 257.697 ns/op
# Warmup Iteration   2: 198.633 ns/op
# Warmup Iteration   3: 136.492 ns/op
Iteration   1: 136.167 ns/op
Iteration   2: 136.184 ns/op
Iteration   3: 136.133 ns/op
Iteration   4: 137.104 ns/op
Iteration   5: 135.982 ns/op
Iteration   6: 136.157 ns/op
Iteration   7: 135.977 ns/op
Iteration   8: 136.973 ns/op
Iteration   9: 136.351 ns/op
Iteration  10: 136.110 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  136.324 ±(99.9%) 0.335 ns/op [Average]
  (min, avg, max) = (135.956, 136.324, 137.104), stdev = 0.386
  CI (99.9%): [135.989, 136.659] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 45.28% complete, ETA 00:21:01
# Fork: 1 of 2
# Warmup Iteration   1: 379.733 ns/op
# Warmup Iteration   2: 216.644 ns/op
# Warmup Iteration   3: 153.751 ns/op
Iteration   1: 153.862 ns/op
Iteration   2: 153.884 ns/op
Iteration   3: 153.763 ns/op
Iteration   4: 153.422 ns/op
Iteration   5: 153.812 ns/op
Iteration   6: 153.843 ns/op
Iteration   7: 153.847 ns/op
Iteration   8: 156.525 ns/op
Iteration   9: 154.128 ns/op
Iteration  10: 154.033 ns/op

# Run progress: 45.35% complete, ETA 00:20:59
# Fork: 2 of 2
# Warmup Iteration   1: 454.701 ns/op
# Warmup Iteration   2: 210.232 ns/op
# Warmup Iteration   3: 153.718 ns/op
Iteration   1: 153.800 ns/op
Iteration   2: 153.841 ns/op
Iteration   3: 153.739 ns/op
Iteration   4: 153.279 ns/op
Iteration   5: 153.757 ns/op
Iteration   6: 153.871 ns/op
Iteration   7: 153.842 ns/op
Iteration   8: 156.572 ns/op
Iteration   9: 154.088 ns/op
Iteration  10: 153.967 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.094 ±(99.9%) 0.748 ns/op [Average]
  (min, avg, max) = (153.279, 154.094, 156.572), stdev = 0.862
  CI (99.9%): [153.346, 154.842] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 45.42% complete, ETA 00:20:57
# Fork: 1 of 2
# Warmup Iteration   1: 485.983 ns/op
# Warmup Iteration   2: 287.791 ns/op
# Warmup Iteration   3: 204.796 ns/op
Iteration   1: 204.866 ns/op
Iteration   2: 204.766 ns/op
Iteration   3: 208.470 ns/op
Iteration   4: 204.822 ns/op
Iteration   5: 204.801 ns/op
Iteration   6: 204.788 ns/op
Iteration   7: 204.800 ns/op
Iteration   8: 207.517 ns/op
Iteration   9: 206.411 ns/op
Iteration  10: 204.929 ns/op

# Run progress: 45.49% complete, ETA 00:20:56
# Fork: 2 of 2
# Warmup Iteration   1: 501.356 ns/op
# Warmup Iteration   2: 275.885 ns/op
# Warmup Iteration   3: 204.884 ns/op
Iteration   1: 204.805 ns/op
Iteration   2: 204.745 ns/op
Iteration   3: 208.430 ns/op
Iteration   4: 204.820 ns/op
Iteration   5: 204.742 ns/op
Iteration   6: 204.733 ns/op
Iteration   7: 204.797 ns/op
Iteration   8: 215.118 ns/op
Iteration   9: 206.423 ns/op
Iteration  10: 204.932 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  205.986 ±(99.9%) 2.161 ns/op [Average]
  (min, avg, max) = (204.733, 205.986, 215.118), stdev = 2.488
  CI (99.9%): [203.825, 208.147] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 45.56% complete, ETA 00:20:54
# Fork: 1 of 2
# Warmup Iteration   1: 108.368 ns/op
# Warmup Iteration   2: 102.736 ns/op
# Warmup Iteration   3: 70.673 ns/op
Iteration   1: 70.617 ns/op
Iteration   2: 70.693 ns/op
Iteration   3: 70.462 ns/op
Iteration   4: 70.672 ns/op
Iteration   5: 70.591 ns/op
Iteration   6: 70.585 ns/op
Iteration   7: 70.551 ns/op
Iteration   8: 73.319 ns/op
Iteration   9: 70.651 ns/op
Iteration  10: 70.920 ns/op

# Run progress: 45.63% complete, ETA 00:20:53
# Fork: 2 of 2
# Warmup Iteration   1: 112.866 ns/op
# Warmup Iteration   2: 118.547 ns/op
# Warmup Iteration   3: 70.669 ns/op
Iteration   1: 70.579 ns/op
Iteration   2: 70.737 ns/op
Iteration   3: 70.525 ns/op
Iteration   4: 70.723 ns/op
Iteration   5: 70.595 ns/op
Iteration   6: 70.593 ns/op
Iteration   7: 70.576 ns/op
Iteration   8: 73.364 ns/op
Iteration   9: 70.718 ns/op
Iteration  10: 70.933 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.920 ±(99.9%) 0.726 ns/op [Average]
  (min, avg, max) = (70.462, 70.920, 73.364), stdev = 0.836
  CI (99.9%): [70.194, 71.647] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 45.69% complete, ETA 00:20:51
# Fork: 1 of 2
# Warmup Iteration   1: 220.185 ns/op
# Warmup Iteration   2: 221.447 ns/op
# Warmup Iteration   3: 152.752 ns/op
Iteration   1: 152.758 ns/op
Iteration   2: 154.335 ns/op
Iteration   3: 152.945 ns/op
Iteration   4: 153.388 ns/op
Iteration   5: 153.583 ns/op
Iteration   6: 153.290 ns/op
Iteration   7: 153.214 ns/op
Iteration   8: 153.361 ns/op
Iteration   9: 164.963 ns/op
Iteration  10: 153.391 ns/op

# Run progress: 45.76% complete, ETA 00:20:49
# Fork: 2 of 2
# Warmup Iteration   1: 193.167 ns/op
# Warmup Iteration   2: 183.316 ns/op
# Warmup Iteration   3: 133.899 ns/op
Iteration   1: 133.911 ns/op
Iteration   2: 137.025 ns/op
Iteration   3: 134.234 ns/op
Iteration   4: 135.805 ns/op
Iteration   5: 134.605 ns/op
Iteration   6: 134.897 ns/op
Iteration   7: 134.966 ns/op
Iteration   8: 134.163 ns/op
Iteration   9: 148.681 ns/op
Iteration  10: 135.149 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  145.433 ±(99.9%) 8.801 ns/op [Average]
  (min, avg, max) = (133.911, 145.433, 164.963), stdev = 10.135
  CI (99.9%): [136.632, 154.234] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 45.83% complete, ETA 00:20:48
# Fork: 1 of 2
# Warmup Iteration   1: 21.998 ns/op
# Warmup Iteration   2: 24.980 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.941 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.575 ns/op

# Run progress: 45.90% complete, ETA 00:20:46
# Fork: 2 of 2
# Warmup Iteration   1: 22.479 ns/op
# Warmup Iteration   2: 25.937 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.587 ns/op
Iteration   2: 15.570 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.953 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.586 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.101 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.925 ns/op [Average]
  (min, avg, max) = (15.570, 16.018, 19.104), stdev = 1.066
  CI (99.9%): [15.093, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 45.97% complete, ETA 00:20:45
# Fork: 1 of 2
# Warmup Iteration   1: 14427.065 ns/op
# Warmup Iteration   2: 1042.029 ns/op
# Warmup Iteration   3: 776.409 ns/op
Iteration   1: 721.422 ns/op
Iteration   2: 720.214 ns/op
Iteration   3: 721.196 ns/op
Iteration   4: 726.122 ns/op
Iteration   5: 720.983 ns/op
Iteration   6: 720.610 ns/op
Iteration   7: 720.732 ns/op
Iteration   8: 730.618 ns/op
Iteration   9: 721.171 ns/op
Iteration  10: 720.700 ns/op

# Run progress: 46.04% complete, ETA 00:20:43
# Fork: 2 of 2
# Warmup Iteration   1: 9714.253 ns/op
# Warmup Iteration   2: 942.808 ns/op
# Warmup Iteration   3: 727.026 ns/op
Iteration   1: 726.684 ns/op
Iteration   2: 727.283 ns/op
Iteration   3: 727.160 ns/op
Iteration   4: 731.335 ns/op
Iteration   5: 727.589 ns/op
Iteration   6: 726.913 ns/op
Iteration   7: 726.784 ns/op
Iteration   8: 732.274 ns/op
Iteration   9: 727.531 ns/op
Iteration  10: 727.120 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  725.222 ±(99.9%) 3.445 ns/op [Average]
  (min, avg, max) = (720.214, 725.222, 732.274), stdev = 3.967
  CI (99.9%): [721.778, 728.667] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 46.11% complete, ETA 00:20:41
# Fork: 1 of 2
# Warmup Iteration   1: 7404.937 ns/op
# Warmup Iteration   2: 1071.550 ns/op
# Warmup Iteration   3: 854.962 ns/op
Iteration   1: 855.017 ns/op
Iteration   2: 854.938 ns/op
Iteration   3: 855.192 ns/op
Iteration   4: 881.758 ns/op
Iteration   5: 855.161 ns/op
Iteration   6: 855.168 ns/op
Iteration   7: 854.734 ns/op
Iteration   8: 856.754 ns/op
Iteration   9: 855.836 ns/op
Iteration  10: 854.953 ns/op

# Run progress: 46.18% complete, ETA 00:20:40
# Fork: 2 of 2
# Warmup Iteration   1: 2684.223 ns/op
# Warmup Iteration   2: 1096.591 ns/op
# Warmup Iteration   3: 855.916 ns/op
Iteration   1: 856.406 ns/op
Iteration   2: 855.800 ns/op
Iteration   3: 856.058 ns/op
Iteration   4: 882.633 ns/op
Iteration   5: 857.441 ns/op
Iteration   6: 855.271 ns/op
Iteration   7: 855.529 ns/op
Iteration   8: 857.213 ns/op
Iteration   9: 855.956 ns/op
Iteration  10: 855.288 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  858.355 ±(99.9%) 7.111 ns/op [Average]
  (min, avg, max) = (854.734, 858.355, 882.633), stdev = 8.190
  CI (99.9%): [851.244, 865.467] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 46.25% complete, ETA 00:20:38
# Fork: 1 of 2
# Warmup Iteration   1: 6098.775 ns/op
# Warmup Iteration   2: 1303.350 ns/op
# Warmup Iteration   3: 855.185 ns/op
Iteration   1: 865.835 ns/op
Iteration   2: 865.820 ns/op
Iteration   3: 856.949 ns/op
Iteration   4: 894.790 ns/op
Iteration   5: 868.430 ns/op
Iteration   6: 865.498 ns/op
Iteration   7: 855.517 ns/op
Iteration   8: 869.457 ns/op
Iteration   9: 855.789 ns/op
Iteration  10: 866.167 ns/op

# Run progress: 46.32% complete, ETA 00:20:37
# Fork: 2 of 2
# Warmup Iteration   1: 4104.392 ns/op
# Warmup Iteration   2: 1090.395 ns/op
# Warmup Iteration   3: 854.554 ns/op
Iteration   1: 854.924 ns/op
Iteration   2: 855.048 ns/op
Iteration   3: 855.556 ns/op
Iteration   4: 881.709 ns/op
Iteration   5: 855.339 ns/op
Iteration   6: 854.984 ns/op
Iteration   7: 854.846 ns/op
Iteration   8: 855.057 ns/op
Iteration   9: 855.471 ns/op
Iteration  10: 854.686 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  862.094 ±(99.9%) 9.247 ns/op [Average]
  (min, avg, max) = (854.686, 862.094, 894.790), stdev = 10.649
  CI (99.9%): [852.847, 871.340] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 46.39% complete, ETA 00:20:35
# Fork: 1 of 2
# Warmup Iteration   1: 1272.500 ns/op
# Warmup Iteration   2: 1190.793 ns/op
# Warmup Iteration   3: 768.094 ns/op
Iteration   1: 768.281 ns/op
Iteration   2: 767.614 ns/op
Iteration   3: 768.658 ns/op
Iteration   4: 772.870 ns/op
Iteration   5: 767.956 ns/op
Iteration   6: 767.847 ns/op
Iteration   7: 767.915 ns/op
Iteration   8: 768.272 ns/op
Iteration   9: 768.489 ns/op
Iteration  10: 767.542 ns/op

# Run progress: 46.46% complete, ETA 00:20:33
# Fork: 2 of 2
# Warmup Iteration   1: 1247.504 ns/op
# Warmup Iteration   2: 1000.165 ns/op
# Warmup Iteration   3: 770.054 ns/op
Iteration   1: 770.369 ns/op
Iteration   2: 771.728 ns/op
Iteration   3: 773.320 ns/op
Iteration   4: 775.648 ns/op
Iteration   5: 770.055 ns/op
Iteration   6: 770.088 ns/op
Iteration   7: 770.127 ns/op
Iteration   8: 772.901 ns/op
Iteration   9: 770.544 ns/op
Iteration  10: 770.190 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  770.021 ±(99.9%) 1.972 ns/op [Average]
  (min, avg, max) = (767.542, 770.021, 775.648), stdev = 2.271
  CI (99.9%): [768.049, 771.992] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 46.53% complete, ETA 00:20:32
# Fork: 1 of 2
# Warmup Iteration   1: 2884.293 ns/op
# Warmup Iteration   2: 1106.418 ns/op
# Warmup Iteration   3: 731.566 ns/op
Iteration   1: 731.107 ns/op
Iteration   2: 732.593 ns/op
Iteration   3: 732.859 ns/op
Iteration   4: 735.876 ns/op
Iteration   5: 731.215 ns/op
Iteration   6: 730.943 ns/op
Iteration   7: 729.596 ns/op
Iteration   8: 740.490 ns/op
Iteration   9: 740.795 ns/op
Iteration  10: 732.398 ns/op

# Run progress: 46.60% complete, ETA 00:20:30
# Fork: 2 of 2
# Warmup Iteration   1: 2272.787 ns/op
# Warmup Iteration   2: 1034.316 ns/op
# Warmup Iteration   3: 733.738 ns/op
Iteration   1: 733.788 ns/op
Iteration   2: 735.667 ns/op
Iteration   3: 734.270 ns/op
Iteration   4: 736.248 ns/op
Iteration   5: 733.240 ns/op
Iteration   6: 734.181 ns/op
Iteration   7: 733.710 ns/op
Iteration   8: 740.834 ns/op
Iteration   9: 742.805 ns/op
Iteration  10: 734.997 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  734.880 ±(99.9%) 3.218 ns/op [Average]
  (min, avg, max) = (729.596, 734.880, 742.805), stdev = 3.706
  CI (99.9%): [731.663, 738.098] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 46.67% complete, ETA 00:20:29
# Fork: 1 of 2
# Warmup Iteration   1: 22.510 ns/op
# Warmup Iteration   2: 25.852 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.577 ns/op

# Run progress: 46.74% complete, ETA 00:20:27
# Fork: 2 of 2
# Warmup Iteration   1: 22.060 ns/op
# Warmup Iteration   2: 22.879 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 16.021 ns/op
Iteration   4: 16.074 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.101 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.572 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.027 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.572, 16.027, 19.117), stdev = 1.068
  CI (99.9%): [15.100, 16.954] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 46.81% complete, ETA 00:20:25
# Fork: 1 of 2
# Warmup Iteration   1: 1093.302 ns/op
# Warmup Iteration   2: 672.751 ns/op
# Warmup Iteration   3: 513.841 ns/op
Iteration   1: 502.751 ns/op
Iteration   2: 502.089 ns/op
Iteration   3: 503.308 ns/op
Iteration   4: 502.450 ns/op
Iteration   5: 501.277 ns/op
Iteration   6: 504.294 ns/op
Iteration   7: 502.265 ns/op
Iteration   8: 556.430 ns/op
Iteration   9: 500.888 ns/op
Iteration  10: 503.250 ns/op

# Run progress: 46.88% complete, ETA 00:20:24
# Fork: 2 of 2
# Warmup Iteration   1: 1023.510 ns/op
# Warmup Iteration   2: 673.181 ns/op
# Warmup Iteration   3: 495.798 ns/op
Iteration   1: 497.323 ns/op
Iteration   2: 496.174 ns/op
Iteration   3: 497.844 ns/op
Iteration   4: 495.704 ns/op
Iteration   5: 497.681 ns/op
Iteration   6: 496.351 ns/op
Iteration   7: 497.363 ns/op
Iteration   8: 492.582 ns/op
Iteration   9: 495.933 ns/op
Iteration  10: 496.389 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  502.117 ±(99.9%) 11.471 ns/op [Average]
  (min, avg, max) = (492.582, 502.117, 556.430), stdev = 13.209
  CI (99.9%): [490.647, 513.588] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 46.94% complete, ETA 00:20:22
# Fork: 1 of 2
# Warmup Iteration   1: 12120.944 ns/op
# Warmup Iteration   2: 1647.825 ns/op
# Warmup Iteration   3: 1209.788 ns/op
Iteration   1: 1110.392 ns/op
Iteration   2: 1110.573 ns/op
Iteration   3: 1110.562 ns/op
Iteration   4: 1143.530 ns/op
Iteration   5: 1110.060 ns/op
Iteration   6: 1109.656 ns/op
Iteration   7: 1109.392 ns/op
Iteration   8: 1109.564 ns/op
Iteration   9: 1109.588 ns/op
Iteration  10: 1108.964 ns/op

# Run progress: 47.01% complete, ETA 00:20:21
# Fork: 2 of 2
# Warmup Iteration   1: 10862.701 ns/op
# Warmup Iteration   2: 1625.761 ns/op
# Warmup Iteration   3: 1122.439 ns/op
Iteration   1: 1122.347 ns/op
Iteration   2: 1122.913 ns/op
Iteration   3: 1122.996 ns/op
Iteration   4: 1156.165 ns/op
Iteration   5: 1122.511 ns/op
Iteration   6: 1122.321 ns/op
Iteration   7: 1122.490 ns/op
Iteration   8: 1122.106 ns/op
Iteration   9: 1123.120 ns/op
Iteration  10: 1122.138 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1119.570 ±(99.9%) 10.626 ns/op [Average]
  (min, avg, max) = (1108.964, 1119.570, 1156.165), stdev = 12.237
  CI (99.9%): [1108.943, 1130.196] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 47.08% complete, ETA 00:20:19
# Fork: 1 of 2
# Warmup Iteration   1: 11038.107 ns/op
# Warmup Iteration   2: 1728.937 ns/op
# Warmup Iteration   3: 1121.817 ns/op
Iteration   1: 1122.120 ns/op
Iteration   2: 1122.476 ns/op
Iteration   3: 1122.990 ns/op
Iteration   4: 1156.169 ns/op
Iteration   5: 1122.283 ns/op
Iteration   6: 1122.360 ns/op
Iteration   7: 1122.212 ns/op
Iteration   8: 1122.532 ns/op
Iteration   9: 1122.386 ns/op
Iteration  10: 1122.373 ns/op

# Run progress: 47.15% complete, ETA 00:20:17
# Fork: 2 of 2
# Warmup Iteration   1: 12361.554 ns/op
# Warmup Iteration   2: 1646.039 ns/op
# Warmup Iteration   3: 1207.404 ns/op
Iteration   1: 1107.048 ns/op
Iteration   2: 1106.572 ns/op
Iteration   3: 1115.826 ns/op
Iteration   4: 1141.634 ns/op
Iteration   5: 1114.243 ns/op
Iteration   6: 1106.444 ns/op
Iteration   7: 1106.158 ns/op
Iteration   8: 1114.816 ns/op
Iteration   9: 1106.177 ns/op
Iteration  10: 1106.705 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1119.176 ±(99.9%) 10.883 ns/op [Average]
  (min, avg, max) = (1106.158, 1119.176, 1156.169), stdev = 12.533
  CI (99.9%): [1108.293, 1130.059] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 47.22% complete, ETA 00:20:16
# Fork: 1 of 2
# Warmup Iteration   1: 1639.251 ns/op
# Warmup Iteration   2: 1234.931 ns/op
# Warmup Iteration   3: 951.013 ns/op
Iteration   1: 952.423 ns/op
Iteration   2: 951.670 ns/op
Iteration   3: 951.780 ns/op
Iteration   4: 951.466 ns/op
Iteration   5: 951.107 ns/op
Iteration   6: 951.559 ns/op
Iteration   7: 951.362 ns/op
Iteration   8: 951.594 ns/op
Iteration   9: 951.686 ns/op
Iteration  10: 950.817 ns/op

# Run progress: 47.29% complete, ETA 00:20:14
# Fork: 2 of 2
# Warmup Iteration   1: 2189.071 ns/op
# Warmup Iteration   2: 1223.139 ns/op
# Warmup Iteration   3: 950.000 ns/op
Iteration   1: 950.441 ns/op
Iteration   2: 950.067 ns/op
Iteration   3: 950.868 ns/op
Iteration   4: 950.523 ns/op
Iteration   5: 950.667 ns/op
Iteration   6: 950.784 ns/op
Iteration   7: 951.001 ns/op
Iteration   8: 950.302 ns/op
Iteration   9: 950.568 ns/op
Iteration  10: 949.940 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  951.031 ±(99.9%) 0.563 ns/op [Average]
  (min, avg, max) = (949.940, 951.031, 952.423), stdev = 0.648
  CI (99.9%): [950.469, 951.594] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 47.36% complete, ETA 00:20:13
# Fork: 1 of 2
# Warmup Iteration   1: 12552.487 ns/op
# Warmup Iteration   2: 4860.213 ns/op
# Warmup Iteration   3: 4197.193 ns/op
Iteration   1: 3781.532 ns/op
Iteration   2: 3778.631 ns/op
Iteration   3: 3777.529 ns/op
Iteration   4: 3763.834 ns/op
Iteration   5: 3764.264 ns/op
Iteration   6: 3767.701 ns/op
Iteration   7: 3763.004 ns/op
Iteration   8: 3760.152 ns/op
Iteration   9: 3867.905 ns/op
Iteration  10: 3762.752 ns/op

# Run progress: 47.43% complete, ETA 00:20:11
# Fork: 2 of 2
# Warmup Iteration   1: 12008.191 ns/op
# Warmup Iteration   2: 4992.251 ns/op
# Warmup Iteration   3: 4023.098 ns/op
Iteration   1: 3699.576 ns/op
Iteration   2: 3697.969 ns/op
Iteration   3: 3705.946 ns/op
Iteration   4: 3688.038 ns/op
Iteration   5: 3681.672 ns/op
Iteration   6: 3734.541 ns/op
Iteration   7: 3679.590 ns/op
Iteration   8: 3728.103 ns/op
Iteration   9: 3838.583 ns/op
Iteration  10: 3681.326 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3746.132 ±(99.9%) 45.101 ns/op [Average]
  (min, avg, max) = (3679.590, 3746.132, 3867.905), stdev = 51.939
  CI (99.9%): [3701.031, 3791.234] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 47.50% complete, ETA 00:20:09
# Fork: 1 of 2
# Warmup Iteration   1: 21.918 ns/op
# Warmup Iteration   2: 26.221 ns/op
# Warmup Iteration   3: 15.760 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.689 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.111 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 47.57% complete, ETA 00:20:08
# Fork: 2 of 2
# Warmup Iteration   1: 22.167 ns/op
# Warmup Iteration   2: 25.830 ns/op
# Warmup Iteration   3: 15.769 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.991 ns/op
Iteration   4: 15.939 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.108 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.574, 16.020, 19.111), stdev = 1.068
  CI (99.9%): [15.093, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 47.64% complete, ETA 00:20:06
# Fork: 1 of 2
# Warmup Iteration   1: 1050.693 ns/op
# Warmup Iteration   2: 3230.231 ns/op
# Warmup Iteration   3: 2394.780 ns/op
Iteration   1: 31389.514 ns/op
Iteration   2: 26580.716 ns/op
Iteration   3: 27216.945 ns/op
Iteration   4: 26391.425 ns/op
Iteration   5: 472.882 ns/op
Iteration   6: 30514.501 ns/op
Iteration   7: 548.047 ns/op
Iteration   8: 480.146 ns/op
Iteration   9: 487.063 ns/op
Iteration  10: 474.427 ns/op

# Run progress: 47.71% complete, ETA 00:20:05
# Fork: 2 of 2
# Warmup Iteration   1: 984.282 ns/op
# Warmup Iteration   2: 8523.174 ns/op
# Warmup Iteration   3: 1562.589 ns/op
Iteration   1: 27692.163 ns/op
Iteration   2: 26984.483 ns/op
Iteration   3: 31034.378 ns/op
Iteration   4: 27145.892 ns/op
Iteration   5: 814.229 ns/op
Iteration   6: 27516.162 ns/op
Iteration   7: 631.538 ns/op
Iteration   8: 486.113 ns/op
Iteration   9: 505.557 ns/op
Iteration  10: 483.765 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  14392.497 ±(99.9%) 12397.090 ns/op [Average]
  (min, avg, max) = (472.882, 14392.497, 31389.514), stdev = 14276.508
  CI (99.9%): [1995.407, 26789.588] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 47.78% complete, ETA 00:20:03
# Fork: 1 of 2
# Warmup Iteration   1: 2847.378 ns/op
# Warmup Iteration   2: 3133.886 ns/op
# Warmup Iteration   3: 689.934 ns/op
Iteration   1: 19389.050 ns/op
Iteration   2: 63962.346 ns/op
Iteration   3: 35431.132 ns/op
Iteration   4: 19392.057 ns/op
Iteration   5: 886.428 ns/op
Iteration   6: 574.996 ns/op
Iteration   7: 530.864 ns/op
Iteration   8: 521.815 ns/op
Iteration   9: 505.403 ns/op
Iteration  10: 710.886 ns/op

# Run progress: 47.85% complete, ETA 00:20:01
# Fork: 2 of 2
# Warmup Iteration   1: 10649.135 ns/op
# Warmup Iteration   2: 1496.793 ns/op
# Warmup Iteration   3: 703.147 ns/op
Iteration   1: 757.202 ns/op
Iteration   2: 82786.430 ns/op
Iteration   3: 5194.686 ns/op
Iteration   4: 3051.043 ns/op
Iteration   5: 781.662 ns/op
Iteration   6: 557.742 ns/op
Iteration   7: 522.360 ns/op
Iteration   8: 511.841 ns/op
Iteration   9: 482.216 ns/op
Iteration  10: 669.408 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11860.979 ±(99.9%) 20099.853 ns/op [Average]
  (min, avg, max) = (482.216, 11860.979, 82786.430), stdev = 23147.020
  CI (99.9%): [≈ 0, 31960.831] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 47.92% complete, ETA 00:20:00
# Fork: 1 of 2
# Warmup Iteration   1: 7770.613 ns/op
# Warmup Iteration   2: 17128.668 ns/op
# Warmup Iteration   3: 925.867 ns/op
Iteration   1: 525.161 ns/op
Iteration   2: 70345.638 ns/op
Iteration   3: 469.216 ns/op
Iteration   4: 4559.681 ns/op
Iteration   5: 527.465 ns/op
Iteration   6: 558.045 ns/op
Iteration   7: 524.362 ns/op
Iteration   8: 515.175 ns/op
Iteration   9: 553.418 ns/op
Iteration  10: 384.822 ns/op

# Run progress: 47.99% complete, ETA 00:19:58
# Fork: 2 of 2
# Warmup Iteration   1: 4954.813 ns/op
# Warmup Iteration   2: 2619.341 ns/op
# Warmup Iteration   3: 701.180 ns/op
Iteration   1: 530.773 ns/op
Iteration   2: 71424.870 ns/op
Iteration   3: 497.293 ns/op
Iteration   4: 66941.219 ns/op
Iteration   5: 2117.269 ns/op
Iteration   6: 558.427 ns/op
Iteration   7: 532.303 ns/op
Iteration   8: 524.652 ns/op
Iteration   9: 567.202 ns/op
Iteration  10: 401.447 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11152.922 ±(99.9%) 21888.799 ns/op [Average]
  (min, avg, max) = (384.822, 11152.922, 71424.870), stdev = 25207.174
  CI (99.9%): [≈ 0, 33041.721] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 48.06% complete, ETA 00:19:57
# Fork: 1 of 2
# Warmup Iteration   1: 1753.955 ns/op
# Warmup Iteration   2: 1203.034 ns/op
# Warmup Iteration   3: 936.631 ns/op
Iteration   1: 855.731 ns/op
Iteration   2: 925.486 ns/op
Iteration   3: 918.919 ns/op
Iteration   4: 908.646 ns/op
Iteration   5: 99317.348 ns/op
Iteration   6: 1013.747 ns/op
Iteration   7: 977.104 ns/op
Iteration   8: 1014.853 ns/op
Iteration   9: 914.208 ns/op
Iteration  10: 923.284 ns/op

# Run progress: 48.13% complete, ETA 00:19:55
# Fork: 2 of 2
# Warmup Iteration   1: 1616.661 ns/op
# Warmup Iteration   2: 1193.009 ns/op
# Warmup Iteration   3: 936.542 ns/op
Iteration   1: 854.981 ns/op
Iteration   2: 922.500 ns/op
Iteration   3: 919.148 ns/op
Iteration   4: 922.539 ns/op
Iteration   5: 4246.502 ns/op
Iteration   6: 1040.574 ns/op
Iteration   7: 975.588 ns/op
Iteration   8: 1025.463 ns/op
Iteration   9: 933.702 ns/op
Iteration  10: 942.007 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6027.616 ±(99.9%) 19078.270 ns/op [Average]
  (min, avg, max) = (854.981, 6027.616, 99317.348), stdev = 21970.564
  CI (99.9%): [≈ 0, 25105.886] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 48.19% complete, ETA 00:19:53
# Fork: 1 of 2
# Warmup Iteration   1: 12355.430 ns/op
# Warmup Iteration   2: 4723.289 ns/op
# Warmup Iteration   3: 4062.147 ns/op
Iteration   1: 3684.505 ns/op
Iteration   2: 3714.736 ns/op
Iteration   3: 6084.867 ns/op
Iteration   4: 3702.645 ns/op
Iteration   5: 3714.681 ns/op
Iteration   6: 3702.727 ns/op
Iteration   7: 3709.516 ns/op
Iteration   8: 3711.135 ns/op
Iteration   9: 3823.404 ns/op
Iteration  10: 3699.101 ns/op

# Run progress: 48.26% complete, ETA 00:19:52
# Fork: 2 of 2
# Warmup Iteration   1: 9185.262 ns/op
# Warmup Iteration   2: 4184.795 ns/op
# Warmup Iteration   3: 3425.302 ns/op
Iteration   1: 3422.936 ns/op
Iteration   2: 3435.884 ns/op
Iteration   3: 5650.770 ns/op
Iteration   4: 3398.196 ns/op
Iteration   5: 3421.041 ns/op
Iteration   6: 3406.974 ns/op
Iteration   7: 3413.824 ns/op
Iteration   8: 3421.052 ns/op
Iteration   9: 3417.462 ns/op
Iteration  10: 3411.458 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3797.346 ±(99.9%) 631.349 ns/op [Average]
  (min, avg, max) = (3398.196, 3797.346, 6084.867), stdev = 727.063
  CI (99.9%): [3165.996, 4428.695] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 48.33% complete, ETA 00:19:50
# Fork: 1 of 2
# Warmup Iteration   1: 22.302 ns/op
# Warmup Iteration   2: 25.372 ns/op
# Warmup Iteration   3: 15.764 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.941 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.116 ns/op
Iteration   9: 15.569 ns/op
Iteration  10: 15.586 ns/op

# Run progress: 48.40% complete, ETA 00:19:49
# Fork: 2 of 2
# Warmup Iteration   1: 22.318 ns/op
# Warmup Iteration   2: 25.915 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.996 ns/op
Iteration   4: 15.947 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.574 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.569, 16.020, 19.116), stdev = 1.068
  CI (99.9%): [15.092, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 48.47% complete, ETA 00:19:47
# Fork: 1 of 2
# Warmup Iteration   1: 806.965 ns/op
# Warmup Iteration   2: 437.211 ns/op
# Warmup Iteration   3: 300.182 ns/op
Iteration   1: 301.073 ns/op
Iteration   2: 299.259 ns/op
Iteration   3: 300.471 ns/op
Iteration   4: 300.314 ns/op
Iteration   5: 300.130 ns/op
Iteration   6: 300.086 ns/op
Iteration   7: 300.009 ns/op
Iteration   8: 304.362 ns/op
Iteration   9: 300.150 ns/op
Iteration  10: 299.531 ns/op

# Run progress: 48.54% complete, ETA 00:19:45
# Fork: 2 of 2
# Warmup Iteration   1: 740.287 ns/op
# Warmup Iteration   2: 412.846 ns/op
# Warmup Iteration   3: 300.699 ns/op
Iteration   1: 299.739 ns/op
Iteration   2: 302.540 ns/op
Iteration   3: 300.210 ns/op
Iteration   4: 300.276 ns/op
Iteration   5: 301.364 ns/op
Iteration   6: 301.425 ns/op
Iteration   7: 302.019 ns/op
Iteration   8: 305.594 ns/op
Iteration   9: 301.096 ns/op
Iteration  10: 301.172 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  301.041 ±(99.9%) 1.382 ns/op [Average]
  (min, avg, max) = (299.259, 301.041, 305.594), stdev = 1.591
  CI (99.9%): [299.659, 302.423] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 48.61% complete, ETA 00:19:44
# Fork: 1 of 2
# Warmup Iteration   1: 3360.684 ns/op
# Warmup Iteration   2: 686.150 ns/op
# Warmup Iteration   3: 480.725 ns/op
Iteration   1: 479.611 ns/op
Iteration   2: 479.238 ns/op
Iteration   3: 479.511 ns/op
Iteration   4: 488.485 ns/op
Iteration   5: 482.340 ns/op
Iteration   6: 480.014 ns/op
Iteration   7: 479.999 ns/op
Iteration   8: 491.607 ns/op
Iteration   9: 479.995 ns/op
Iteration  10: 479.577 ns/op

# Run progress: 48.68% complete, ETA 00:19:42
# Fork: 2 of 2
# Warmup Iteration   1: 3623.067 ns/op
# Warmup Iteration   2: 642.914 ns/op
# Warmup Iteration   3: 478.110 ns/op
Iteration   1: 478.567 ns/op
Iteration   2: 479.127 ns/op
Iteration   3: 478.935 ns/op
Iteration   4: 479.829 ns/op
Iteration   5: 478.409 ns/op
Iteration   6: 479.740 ns/op
Iteration   7: 479.481 ns/op
Iteration   8: 479.873 ns/op
Iteration   9: 478.618 ns/op
Iteration  10: 478.902 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  480.593 ±(99.9%) 2.930 ns/op [Average]
  (min, avg, max) = (478.409, 480.593, 491.607), stdev = 3.374
  CI (99.9%): [477.663, 483.523] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 48.75% complete, ETA 00:19:41
# Fork: 1 of 2
# Warmup Iteration   1: 2878.910 ns/op
# Warmup Iteration   2: 620.051 ns/op
# Warmup Iteration   3: 471.698 ns/op
Iteration   1: 472.054 ns/op
Iteration   2: 471.796 ns/op
Iteration   3: 472.797 ns/op
Iteration   4: 471.749 ns/op
Iteration   5: 471.647 ns/op
Iteration   6: 472.001 ns/op
Iteration   7: 471.882 ns/op
Iteration   8: 471.934 ns/op
Iteration   9: 471.735 ns/op
Iteration  10: 471.771 ns/op

# Run progress: 48.82% complete, ETA 00:19:39
# Fork: 2 of 2
# Warmup Iteration   1: 3096.616 ns/op
# Warmup Iteration   2: 595.492 ns/op
# Warmup Iteration   3: 457.683 ns/op
Iteration   1: 457.846 ns/op
Iteration   2: 458.075 ns/op
Iteration   3: 458.129 ns/op
Iteration   4: 457.545 ns/op
Iteration   5: 457.738 ns/op
Iteration   6: 457.413 ns/op
Iteration   7: 457.729 ns/op
Iteration   8: 457.130 ns/op
Iteration   9: 458.157 ns/op
Iteration  10: 457.746 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  464.844 ±(99.9%) 6.325 ns/op [Average]
  (min, avg, max) = (457.130, 464.844, 472.797), stdev = 7.284
  CI (99.9%): [458.519, 471.169] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 48.89% complete, ETA 00:19:37
# Fork: 1 of 2
# Warmup Iteration   1: 1806.854 ns/op
# Warmup Iteration   2: 1082.851 ns/op
# Warmup Iteration   3: 848.282 ns/op
Iteration   1: 847.614 ns/op
Iteration   2: 848.677 ns/op
Iteration   3: 849.134 ns/op
Iteration   4: 849.426 ns/op
Iteration   5: 848.189 ns/op
Iteration   6: 848.108 ns/op
Iteration   7: 847.935 ns/op
Iteration   8: 850.845 ns/op
Iteration   9: 847.549 ns/op
Iteration  10: 847.312 ns/op

# Run progress: 48.96% complete, ETA 00:19:36
# Fork: 2 of 2
# Warmup Iteration   1: 1325.362 ns/op
# Warmup Iteration   2: 1230.111 ns/op
# Warmup Iteration   3: 848.836 ns/op
Iteration   1: 848.465 ns/op
Iteration   2: 848.810 ns/op
Iteration   3: 847.869 ns/op
Iteration   4: 848.398 ns/op
Iteration   5: 848.538 ns/op
Iteration   6: 848.725 ns/op
Iteration   7: 848.196 ns/op
Iteration   8: 846.891 ns/op
Iteration   9: 847.686 ns/op
Iteration  10: 848.306 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  848.334 ±(99.9%) 0.741 ns/op [Average]
  (min, avg, max) = (846.891, 848.334, 850.845), stdev = 0.854
  CI (99.9%): [847.592, 849.075] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 49.03% complete, ETA 00:19:34
# Fork: 1 of 2
# Warmup Iteration   1: 10334.623 ns/op
# Warmup Iteration   2: 5064.927 ns/op
# Warmup Iteration   3: 3423.940 ns/op
Iteration   1: 3431.020 ns/op
Iteration   2: 3422.080 ns/op
Iteration   3: 3437.195 ns/op
Iteration   4: 3411.490 ns/op
Iteration   5: 3429.872 ns/op
Iteration   6: 3415.384 ns/op
Iteration   7: 3426.058 ns/op
Iteration   8: 3404.051 ns/op
Iteration   9: 3475.981 ns/op
Iteration  10: 3411.794 ns/op

# Run progress: 49.10% complete, ETA 00:19:33
# Fork: 2 of 2
# Warmup Iteration   1: 8540.242 ns/op
# Warmup Iteration   2: 5300.521 ns/op
# Warmup Iteration   3: 3597.697 ns/op
Iteration   1: 3598.488 ns/op
Iteration   2: 3599.437 ns/op
Iteration   3: 3606.167 ns/op
Iteration   4: 3588.695 ns/op
Iteration   5: 3586.268 ns/op
Iteration   6: 3593.196 ns/op
Iteration   7: 3586.138 ns/op
Iteration   8: 3587.551 ns/op
Iteration   9: 3636.269 ns/op
Iteration  10: 3584.013 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3511.557 ±(99.9%) 77.312 ns/op [Average]
  (min, avg, max) = (3404.051, 3511.557, 3636.269), stdev = 89.033
  CI (99.9%): [3434.245, 3588.870] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 49.17% complete, ETA 00:19:31
# Fork: 1 of 2
# Warmup Iteration   1: 22.063 ns/op
# Warmup Iteration   2: 24.860 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.976 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.668 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.127 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.575 ns/op

# Run progress: 49.24% complete, ETA 00:19:29
# Fork: 2 of 2
# Warmup Iteration   1: 22.026 ns/op
# Warmup Iteration   2: 24.569 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 16.021 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.569 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.108 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.569, 16.021, 19.127), stdev = 1.071
  CI (99.9%): [15.091, 16.950] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 49.31% complete, ETA 00:19:28
# Fork: 1 of 2
# Warmup Iteration   1: 2642.580 ns/op
# Warmup Iteration   2: 45846.071 ns/op
# Warmup Iteration   3: 4469.240 ns/op
Iteration   1: 796.741 ns/op
Iteration   2: 47055.697 ns/op
Iteration   3: 577.229 ns/op
Iteration   4: 1066.350 ns/op
Iteration   5: 1074.782 ns/op
Iteration   6: 41927.783 ns/op
Iteration   7: 738.033 ns/op
Iteration   8: 629.775 ns/op
Iteration   9: 595.349 ns/op
Iteration  10: 621.363 ns/op

# Run progress: 49.38% complete, ETA 00:19:26
# Fork: 2 of 2
# Warmup Iteration   1: 2160.296 ns/op
# Warmup Iteration   2: 47106.150 ns/op
# Warmup Iteration   3: 6852.150 ns/op
Iteration   1: 834.117 ns/op
Iteration   2: 42635.553 ns/op
Iteration   3: 572.955 ns/op
Iteration   4: 1054.686 ns/op
Iteration   5: 1075.064 ns/op
Iteration   6: 42363.947 ns/op
Iteration   7: 744.386 ns/op
Iteration   8: 640.814 ns/op
Iteration   9: 607.695 ns/op
Iteration  10: 624.181 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9311.825 ±(99.9%) 15250.555 ns/op [Average]
  (min, avg, max) = (572.955, 9311.825, 47055.697), stdev = 17562.562
  CI (99.9%): [≈ 0, 24562.380] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 49.44% complete, ETA 00:19:25
# Fork: 1 of 2
# Warmup Iteration   1: 54889.625 ns/op
# Warmup Iteration   2: 18725.971 ns/op
# Warmup Iteration   3: 13288.902 ns/op
Iteration   1: 762.407 ns/op
Iteration   2: 1350.527 ns/op
Iteration   3: 14271.444 ns/op
Iteration   4: 736.720 ns/op
Iteration   5: 695.449 ns/op
Iteration   6: 732.229 ns/op
Iteration   7: 645.518 ns/op
Iteration   8: 761.627 ns/op
Iteration   9: 749.895 ns/op
Iteration  10: 718.963 ns/op

# Run progress: 49.51% complete, ETA 00:19:23
# Fork: 2 of 2
# Warmup Iteration   1: 35912.834 ns/op
# Warmup Iteration   2: 17334.858 ns/op
# Warmup Iteration   3: 2126.294 ns/op
Iteration   1: 745.796 ns/op
Iteration   2: 14092.939 ns/op
Iteration   3: 3387.900 ns/op
Iteration   4: 741.667 ns/op
Iteration   5: 668.652 ns/op
Iteration   6: 706.287 ns/op
Iteration   7: 633.461 ns/op
Iteration   8: 721.370 ns/op
Iteration   9: 734.008 ns/op
Iteration  10: 715.744 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2228.630 ±(99.9%) 3588.604 ns/op [Average]
  (min, avg, max) = (633.461, 2228.630, 14271.444), stdev = 4132.641
  CI (99.9%): [≈ 0, 5817.234] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 49.58% complete, ETA 00:19:21
# Fork: 1 of 2
# Warmup Iteration   1: 33995.672 ns/op
# Warmup Iteration   2: 22439.341 ns/op
# Warmup Iteration   3: 801.445 ns/op
Iteration   1: 31363.427 ns/op
Iteration   2: 726.924 ns/op
Iteration   3: 18846.684 ns/op
Iteration   4: 619.128 ns/op
Iteration   5: 657.211 ns/op
Iteration   6: 701.227 ns/op
Iteration   7: 627.180 ns/op
Iteration   8: 708.755 ns/op
Iteration   9: 642.450 ns/op
Iteration  10: 700.472 ns/op

# Run progress: 49.65% complete, ETA 00:19:20
# Fork: 2 of 2
# Warmup Iteration   1: 35986.823 ns/op
# Warmup Iteration   2: 26632.492 ns/op
# Warmup Iteration   3: 793.152 ns/op
Iteration   1: 5556.562 ns/op
Iteration   2: 712.036 ns/op
Iteration   3: 16587.282 ns/op
Iteration   4: 623.165 ns/op
Iteration   5: 656.880 ns/op
Iteration   6: 695.647 ns/op
Iteration   7: 618.724 ns/op
Iteration   8: 701.618 ns/op
Iteration   9: 642.471 ns/op
Iteration  10: 691.234 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4153.954 ±(99.9%) 7202.038 ns/op [Average]
  (min, avg, max) = (618.724, 4153.954, 31363.427), stdev = 8293.877
  CI (99.9%): [≈ 0, 11355.992] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 49.72% complete, ETA 00:19:18
# Fork: 1 of 2
# Warmup Iteration   1: 878.647 ns/op
# Warmup Iteration   2: 4383.887 ns/op
# Warmup Iteration   3: 633.984 ns/op
Iteration   1: 491.956 ns/op
Iteration   2: 633.783 ns/op
Iteration   3: 640.235 ns/op
Iteration   4: 574.305 ns/op
Iteration   5: 674.807 ns/op
Iteration   6: 588.862 ns/op
Iteration   7: 580.514 ns/op
Iteration   8: 509.313 ns/op
Iteration   9: 541.417 ns/op
Iteration  10: 635.982 ns/op

# Run progress: 49.79% complete, ETA 00:19:17
# Fork: 2 of 2
# Warmup Iteration   1: 801.641 ns/op
# Warmup Iteration   2: 52303.650 ns/op
# Warmup Iteration   3: 642.137 ns/op
Iteration   1: 492.042 ns/op
Iteration   2: 633.711 ns/op
Iteration   3: 640.497 ns/op
Iteration   4: 590.379 ns/op
Iteration   5: 675.176 ns/op
Iteration   6: 588.751 ns/op
Iteration   7: 579.539 ns/op
Iteration   8: 510.234 ns/op
Iteration   9: 541.363 ns/op
Iteration  10: 642.967 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  588.292 ±(99.9%) 50.972 ns/op [Average]
  (min, avg, max) = (491.956, 588.292, 675.176), stdev = 58.699
  CI (99.9%): [537.320, 639.263] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 4, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 49.86% complete, ETA 00:19:15
# Fork: 1 of 2
# Warmup Iteration   1: 12219.671 ns/op
# Warmup Iteration   2: 21386.791 ns/op
# Warmup Iteration   3: 4850.729 ns/op
Iteration   1: 4346.021 ns/op
Iteration   2: 4168.442 ns/op
Iteration   3: 4223.186 ns/op
Iteration   4: 4216.264 ns/op
Iteration   5: 4139.398 ns/op
Iteration   6: 4509.017 ns/op
Iteration   7: 4167.598 ns/op
Iteration   8: 3923.536 ns/op
Iteration   9: 4014.262 ns/op
Iteration  10: 4115.516 ns/op

# Run progress: 49.93% complete, ETA 00:19:13
# Fork: 2 of 2
# Warmup Iteration   1: 11126.220 ns/op
# Warmup Iteration   2: 41828.358 ns/op
# Warmup Iteration   3: 3825.910 ns/op
Iteration   1: 4080.351 ns/op
Iteration   2: 3923.954 ns/op
Iteration   3: 4029.319 ns/op
Iteration   4: 3929.250 ns/op
Iteration   5: 3850.375 ns/op
Iteration   6: 4238.090 ns/op
Iteration   7: 3949.282 ns/op
Iteration   8: 3678.133 ns/op
Iteration   9: 3744.146 ns/op
Iteration  10: 3813.536 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4052.984 ±(99.9%) 180.191 ns/op [Average]
  (min, avg, max) = (3678.133, 4052.984, 4509.017), stdev = 207.508
  CI (99.9%): [3872.793, 4233.175] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 50.00% complete, ETA 00:19:12
# Fork: 1 of 2
# Warmup Iteration   1: 22.404 ns/op
# Warmup Iteration   2: 26.035 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.586 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.581 ns/op

# Run progress: 50.07% complete, ETA 00:19:10
# Fork: 2 of 2
# Warmup Iteration   1: 22.125 ns/op
# Warmup Iteration   2: 23.709 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.573, 16.019, 19.103), stdev = 1.066
  CI (99.9%): [15.093, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 50.14% complete, ETA 00:19:09
# Fork: 1 of 2
# Warmup Iteration   1: 2147.860 ns/op
# Warmup Iteration   2: 1223.299 ns/op
# Warmup Iteration   3: 866.035 ns/op
Iteration   1: 873.552 ns/op
Iteration   2: 874.044 ns/op
Iteration   3: 865.817 ns/op
Iteration   4: 865.055 ns/op
Iteration   5: 873.750 ns/op
Iteration   6: 865.847 ns/op
Iteration   7: 865.662 ns/op
Iteration   8: 869.771 ns/op
Iteration   9: 865.442 ns/op
Iteration  10: 875.833 ns/op

# Run progress: 50.21% complete, ETA 00:19:07
# Fork: 2 of 2
# Warmup Iteration   1: 1999.807 ns/op
# Warmup Iteration   2: 1187.275 ns/op
# Warmup Iteration   3: 847.161 ns/op
Iteration   1: 845.651 ns/op
Iteration   2: 846.278 ns/op
Iteration   3: 847.229 ns/op
Iteration   4: 845.814 ns/op
Iteration   5: 847.714 ns/op
Iteration   6: 846.697 ns/op
Iteration   7: 846.097 ns/op
Iteration   8: 852.392 ns/op
Iteration   9: 846.544 ns/op
Iteration  10: 846.095 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  858.264 ±(99.9%) 10.396 ns/op [Average]
  (min, avg, max) = (845.651, 858.264, 875.833), stdev = 11.972
  CI (99.9%): [847.869, 868.660] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 50.28% complete, ETA 00:19:05
# Fork: 1 of 2
# Warmup Iteration   1: 21434.925 ns/op
# Warmup Iteration   2: 1132.045 ns/op
# Warmup Iteration   3: 899.458 ns/op
Iteration   1: 826.964 ns/op
Iteration   2: 827.733 ns/op
Iteration   3: 826.879 ns/op
Iteration   4: 830.424 ns/op
Iteration   5: 828.039 ns/op
Iteration   6: 826.491 ns/op
Iteration   7: 827.508 ns/op
Iteration   8: 826.666 ns/op
Iteration   9: 826.429 ns/op
Iteration  10: 826.618 ns/op

# Run progress: 50.35% complete, ETA 00:19:04
# Fork: 2 of 2
# Warmup Iteration   1: 13547.188 ns/op
# Warmup Iteration   2: 1369.288 ns/op
# Warmup Iteration   3: 908.015 ns/op
Iteration   1: 837.627 ns/op
Iteration   2: 837.357 ns/op
Iteration   3: 837.470 ns/op
Iteration   4: 841.566 ns/op
Iteration   5: 837.406 ns/op
Iteration   6: 837.378 ns/op
Iteration   7: 837.156 ns/op
Iteration   8: 838.387 ns/op
Iteration   9: 836.612 ns/op
Iteration  10: 837.140 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  832.593 ±(99.9%) 4.777 ns/op [Average]
  (min, avg, max) = (826.429, 832.593, 841.566), stdev = 5.501
  CI (99.9%): [827.816, 837.369] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 50.42% complete, ETA 00:19:02
# Fork: 1 of 2
# Warmup Iteration   1: 18871.127 ns/op
# Warmup Iteration   2: 1195.198 ns/op
# Warmup Iteration   3: 934.636 ns/op
Iteration   1: 858.324 ns/op
Iteration   2: 857.318 ns/op
Iteration   3: 858.214 ns/op
Iteration   4: 860.924 ns/op
Iteration   5: 857.776 ns/op
Iteration   6: 857.800 ns/op
Iteration   7: 857.389 ns/op
Iteration   8: 860.662 ns/op
Iteration   9: 857.957 ns/op
Iteration  10: 857.757 ns/op

# Run progress: 50.49% complete, ETA 00:19:01
# Fork: 2 of 2
# Warmup Iteration   1: 18708.240 ns/op
# Warmup Iteration   2: 1230.018 ns/op
# Warmup Iteration   3: 965.618 ns/op
Iteration   1: 868.411 ns/op
Iteration   2: 867.960 ns/op
Iteration   3: 869.006 ns/op
Iteration   4: 872.182 ns/op
Iteration   5: 868.055 ns/op
Iteration   6: 867.907 ns/op
Iteration   7: 867.644 ns/op
Iteration   8: 872.424 ns/op
Iteration   9: 868.771 ns/op
Iteration  10: 867.926 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  863.720 ±(99.9%) 4.908 ns/op [Average]
  (min, avg, max) = (857.318, 863.720, 872.424), stdev = 5.652
  CI (99.9%): [858.812, 868.629] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 50.56% complete, ETA 00:18:59
# Fork: 1 of 2
# Warmup Iteration   1: 1522.612 ns/op
# Warmup Iteration   2: 1219.184 ns/op
# Warmup Iteration   3: 943.034 ns/op
Iteration   1: 942.837 ns/op
Iteration   2: 943.105 ns/op
Iteration   3: 942.740 ns/op
Iteration   4: 945.049 ns/op
Iteration   5: 942.498 ns/op
Iteration   6: 943.451 ns/op
Iteration   7: 943.392 ns/op
Iteration   8: 942.846 ns/op
Iteration   9: 942.845 ns/op
Iteration  10: 943.369 ns/op

# Run progress: 50.63% complete, ETA 00:18:57
# Fork: 2 of 2
# Warmup Iteration   1: 1787.900 ns/op
# Warmup Iteration   2: 1188.474 ns/op
# Warmup Iteration   3: 936.848 ns/op
Iteration   1: 937.658 ns/op
Iteration   2: 937.838 ns/op
Iteration   3: 936.620 ns/op
Iteration   4: 937.803 ns/op
Iteration   5: 937.207 ns/op
Iteration   6: 936.841 ns/op
Iteration   7: 937.090 ns/op
Iteration   8: 937.383 ns/op
Iteration   9: 937.790 ns/op
Iteration  10: 936.905 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  940.263 ±(99.9%) 2.676 ns/op [Average]
  (min, avg, max) = (936.620, 940.263, 945.049), stdev = 3.082
  CI (99.9%): [937.587, 942.939] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 50.69% complete, ETA 00:18:56
# Fork: 1 of 2
# Warmup Iteration   1: 8328.828 ns/op
# Warmup Iteration   2: 4803.223 ns/op
# Warmup Iteration   3: 3578.347 ns/op
Iteration   1: 3582.746 ns/op
Iteration   2: 3568.706 ns/op
Iteration   3: 3582.967 ns/op
Iteration   4: 3560.961 ns/op
Iteration   5: 3574.324 ns/op
Iteration   6: 3572.281 ns/op
Iteration   7: 3562.102 ns/op
Iteration   8: 3568.479 ns/op
Iteration   9: 3657.936 ns/op
Iteration  10: 3567.494 ns/op

# Run progress: 50.76% complete, ETA 00:18:54
# Fork: 2 of 2
# Warmup Iteration   1: 11142.852 ns/op
# Warmup Iteration   2: 5319.393 ns/op
# Warmup Iteration   3: 3627.300 ns/op
Iteration   1: 3638.402 ns/op
Iteration   2: 3632.734 ns/op
Iteration   3: 3630.876 ns/op
Iteration   4: 3625.561 ns/op
Iteration   5: 3627.276 ns/op
Iteration   6: 3637.377 ns/op
Iteration   7: 3624.700 ns/op
Iteration   8: 3621.161 ns/op
Iteration   9: 3635.609 ns/op
Iteration  10: 3634.376 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3605.304 ±(99.9%) 28.593 ns/op [Average]
  (min, avg, max) = (3560.961, 3605.304, 3657.936), stdev = 32.928
  CI (99.9%): [3576.710, 3633.897] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 50.83% complete, ETA 00:18:53
# Fork: 1 of 2
# Warmup Iteration   1: 22.474 ns/op
# Warmup Iteration   2: 22.965 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.594 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.968 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.101 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.587 ns/op

# Run progress: 50.90% complete, ETA 00:18:51
# Fork: 2 of 2
# Warmup Iteration   1: 21.989 ns/op
# Warmup Iteration   2: 22.915 ns/op
# Warmup Iteration   3: 15.777 ns/op
Iteration   1: 15.575 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.997 ns/op
Iteration   4: 15.947 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.574 ns/op
Iteration   7: 15.570 ns/op
Iteration   8: 19.123 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.570, 16.021, 19.123), stdev = 1.069
  CI (99.9%): [15.093, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 50.97% complete, ETA 00:18:49
# Fork: 1 of 2
# Warmup Iteration   1: 3988.706 ns/op
# Warmup Iteration   2: 1007.590 ns/op
# Warmup Iteration   3: 755.014 ns/op
Iteration   1: 755.818 ns/op
Iteration   2: 755.826 ns/op
Iteration   3: 755.872 ns/op
Iteration   4: 755.242 ns/op
Iteration   5: 755.816 ns/op
Iteration   6: 755.843 ns/op
Iteration   7: 755.105 ns/op
Iteration   8: 758.595 ns/op
Iteration   9: 756.669 ns/op
Iteration  10: 755.668 ns/op

# Run progress: 51.04% complete, ETA 00:18:48
# Fork: 2 of 2
# Warmup Iteration   1: 7649.470 ns/op
# Warmup Iteration   2: 1121.469 ns/op
# Warmup Iteration   3: 776.478 ns/op
Iteration   1: 776.666 ns/op
Iteration   2: 776.575 ns/op
Iteration   3: 776.291 ns/op
Iteration   4: 776.463 ns/op
Iteration   5: 776.266 ns/op
Iteration   6: 776.633 ns/op
Iteration   7: 776.662 ns/op
Iteration   8: 793.861 ns/op
Iteration   9: 776.407 ns/op
Iteration  10: 776.048 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  767.116 ±(99.9%) 10.415 ns/op [Average]
  (min, avg, max) = (755.105, 767.116, 793.861), stdev = 11.994
  CI (99.9%): [756.701, 777.532] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 51.11% complete, ETA 00:18:46
# Fork: 1 of 2
# Warmup Iteration   1: 11345.484 ns/op
# Warmup Iteration   2: 1307.413 ns/op
# Warmup Iteration   3: 880.614 ns/op
Iteration   1: 881.302 ns/op
Iteration   2: 889.408 ns/op
Iteration   3: 886.831 ns/op
Iteration   4: 880.436 ns/op
Iteration   5: 882.515 ns/op
Iteration   6: 883.169 ns/op
Iteration   7: 895.459 ns/op
Iteration   8: 904.259 ns/op
Iteration   9: 881.652 ns/op
Iteration  10: 880.219 ns/op

# Run progress: 51.18% complete, ETA 00:18:45
# Fork: 2 of 2
# Warmup Iteration   1: 10194.715 ns/op
# Warmup Iteration   2: 1313.978 ns/op
# Warmup Iteration   3: 889.511 ns/op
Iteration   1: 891.042 ns/op
Iteration   2: 890.962 ns/op
Iteration   3: 893.850 ns/op
Iteration   4: 890.906 ns/op
Iteration   5: 890.996 ns/op
Iteration   6: 890.670 ns/op
Iteration   7: 889.765 ns/op
Iteration   8: 908.738 ns/op
Iteration   9: 891.898 ns/op
Iteration  10: 891.680 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  889.788 ±(99.9%) 6.469 ns/op [Average]
  (min, avg, max) = (880.219, 889.788, 908.738), stdev = 7.450
  CI (99.9%): [883.319, 896.257] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 51.25% complete, ETA 00:18:43
# Fork: 1 of 2
# Warmup Iteration   1: 7893.480 ns/op
# Warmup Iteration   2: 1211.237 ns/op
# Warmup Iteration   3: 863.776 ns/op
Iteration   1: 864.567 ns/op
Iteration   2: 851.559 ns/op
Iteration   3: 860.378 ns/op
Iteration   4: 853.804 ns/op
Iteration   5: 851.358 ns/op
Iteration   6: 851.415 ns/op
Iteration   7: 851.225 ns/op
Iteration   8: 854.275 ns/op
Iteration   9: 851.419 ns/op
Iteration  10: 851.662 ns/op

# Run progress: 51.32% complete, ETA 00:18:41
# Fork: 2 of 2
# Warmup Iteration   1: 8598.248 ns/op
# Warmup Iteration   2: 1093.916 ns/op
# Warmup Iteration   3: 851.790 ns/op
Iteration   1: 851.622 ns/op
Iteration   2: 851.532 ns/op
Iteration   3: 859.921 ns/op
Iteration   4: 853.210 ns/op
Iteration   5: 851.356 ns/op
Iteration   6: 851.284 ns/op
Iteration   7: 851.389 ns/op
Iteration   8: 855.283 ns/op
Iteration   9: 851.697 ns/op
Iteration  10: 850.918 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  853.494 ±(99.9%) 3.284 ns/op [Average]
  (min, avg, max) = (850.918, 853.494, 864.567), stdev = 3.782
  CI (99.9%): [850.209, 856.778] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 51.39% complete, ETA 00:18:40
# Fork: 1 of 2
# Warmup Iteration   1: 1260.812 ns/op
# Warmup Iteration   2: 1065.745 ns/op
# Warmup Iteration   3: 843.905 ns/op
Iteration   1: 844.820 ns/op
Iteration   2: 844.856 ns/op
Iteration   3: 844.375 ns/op
Iteration   4: 844.607 ns/op
Iteration   5: 844.513 ns/op
Iteration   6: 844.650 ns/op
Iteration   7: 844.991 ns/op
Iteration   8: 844.684 ns/op
Iteration   9: 844.089 ns/op
Iteration  10: 844.655 ns/op

# Run progress: 51.46% complete, ETA 00:18:38
# Fork: 2 of 2
# Warmup Iteration   1: 1399.002 ns/op
# Warmup Iteration   2: 1230.840 ns/op
# Warmup Iteration   3: 844.686 ns/op
Iteration   1: 845.040 ns/op
Iteration   2: 844.100 ns/op
Iteration   3: 844.958 ns/op
Iteration   4: 844.736 ns/op
Iteration   5: 844.487 ns/op
Iteration   6: 844.773 ns/op
Iteration   7: 844.842 ns/op
Iteration   8: 845.267 ns/op
Iteration   9: 843.923 ns/op
Iteration  10: 844.659 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  844.651 ±(99.9%) 0.292 ns/op [Average]
  (min, avg, max) = (843.923, 844.651, 845.267), stdev = 0.336
  CI (99.9%): [844.360, 844.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 51.53% complete, ETA 00:18:37
# Fork: 1 of 2
# Warmup Iteration   1: 2079.853 ns/op
# Warmup Iteration   2: 1155.804 ns/op
# Warmup Iteration   3: 789.225 ns/op
Iteration   1: 789.663 ns/op
Iteration   2: 791.235 ns/op
Iteration   3: 790.290 ns/op
Iteration   4: 796.397 ns/op
Iteration   5: 790.233 ns/op
Iteration   6: 790.051 ns/op
Iteration   7: 789.969 ns/op
Iteration   8: 795.831 ns/op
Iteration   9: 798.254 ns/op
Iteration  10: 789.934 ns/op

# Run progress: 51.60% complete, ETA 00:18:35
# Fork: 2 of 2
# Warmup Iteration   1: 2012.737 ns/op
# Warmup Iteration   2: 1148.203 ns/op
# Warmup Iteration   3: 800.834 ns/op
Iteration   1: 790.608 ns/op
Iteration   2: 791.818 ns/op
Iteration   3: 791.490 ns/op
Iteration   4: 803.200 ns/op
Iteration   5: 791.860 ns/op
Iteration   6: 790.926 ns/op
Iteration   7: 790.583 ns/op
Iteration   8: 805.763 ns/op
Iteration   9: 809.690 ns/op
Iteration  10: 806.775 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  794.729 ±(99.9%) 5.635 ns/op [Average]
  (min, avg, max) = (789.663, 794.729, 809.690), stdev = 6.489
  CI (99.9%): [789.094, 800.363] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 51.67% complete, ETA 00:18:33
# Fork: 1 of 2
# Warmup Iteration   1: 23.357 ns/op
# Warmup Iteration   2: 22.063 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.572 ns/op
Iteration   8: 19.123 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 51.74% complete, ETA 00:18:32
# Fork: 2 of 2
# Warmup Iteration   1: 22.087 ns/op
# Warmup Iteration   2: 26.056 ns/op
# Warmup Iteration   3: 15.769 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.102 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.580 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.572, 16.020, 19.123), stdev = 1.069
  CI (99.9%): [15.092, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 51.81% complete, ETA 00:18:30
# Fork: 1 of 2
# Warmup Iteration   1: 2146.476 ns/op
# Warmup Iteration   2: 48576.225 ns/op
# Warmup Iteration   3: 2526.195 ns/op
Iteration   1: 39547.391 ns/op
Iteration   2: 40834.785 ns/op
Iteration   3: 38999.405 ns/op
Iteration   4: 39910.024 ns/op
Iteration   5: 704.448 ns/op
Iteration   6: 39552.053 ns/op
Iteration   7: 896.057 ns/op
Iteration   8: 888.670 ns/op
Iteration   9: 712.469 ns/op
Iteration  10: 757.951 ns/op

# Run progress: 51.88% complete, ETA 00:18:29
# Fork: 2 of 2
# Warmup Iteration   1: 2386.599 ns/op
# Warmup Iteration   2: 48855.314 ns/op
# Warmup Iteration   3: 4774.061 ns/op
Iteration   1: 34755.299 ns/op
Iteration   2: 41192.330 ns/op
Iteration   3: 44364.359 ns/op
Iteration   4: 37094.651 ns/op
Iteration   5: 721.969 ns/op
Iteration   6: 39948.306 ns/op
Iteration   7: 887.708 ns/op
Iteration   8: 898.900 ns/op
Iteration   9: 717.795 ns/op
Iteration  10: 776.608 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  20208.059 ±(99.9%) 17359.706 ns/op [Average]
  (min, avg, max) = (704.448, 20208.059, 44364.359), stdev = 19991.463
  CI (99.9%): [2848.353, 37567.765] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 51.94% complete, ETA 00:18:27
# Fork: 1 of 2
# Warmup Iteration   1: 11178.135 ns/op
# Warmup Iteration   2: 60886.281 ns/op
# Warmup Iteration   3: 14684.899 ns/op
Iteration   1: 12773.348 ns/op
Iteration   2: 3227.276 ns/op
Iteration   3: 3085.031 ns/op
Iteration   4: 752.502 ns/op
Iteration   5: 3875.096 ns/op
Iteration   6: 15495.292 ns/op
Iteration   7: 2262.693 ns/op
Iteration   8: 774.754 ns/op
Iteration   9: 897.894 ns/op
Iteration  10: 844.766 ns/op

# Run progress: 52.01% complete, ETA 00:18:25
# Fork: 2 of 2
# Warmup Iteration   1: 30006.167 ns/op
# Warmup Iteration   2: 68245.870 ns/op
# Warmup Iteration   3: 24458.628 ns/op
Iteration   1: 14839.892 ns/op
Iteration   2: 15552.116 ns/op
Iteration   3: 4482.314 ns/op
Iteration   4: 748.640 ns/op
Iteration   5: 2646.690 ns/op
Iteration   6: 15995.173 ns/op
Iteration   7: 2846.450 ns/op
Iteration   8: 777.611 ns/op
Iteration   9: 902.204 ns/op
Iteration  10: 854.874 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5181.731 ±(99.9%) 5136.705 ns/op [Average]
  (min, avg, max) = (748.640, 5181.731, 15995.173), stdev = 5915.438
  CI (99.9%): [45.025, 10318.436] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 52.08% complete, ETA 00:18:24
# Fork: 1 of 2
# Warmup Iteration   1: 9471.868 ns/op
# Warmup Iteration   2: 65343.337 ns/op
# Warmup Iteration   3: 6653.854 ns/op
Iteration   1: 22128.360 ns/op
Iteration   2: 6147.945 ns/op
Iteration   3: 4159.233 ns/op
Iteration   4: 674.972 ns/op
Iteration   5: 2058.983 ns/op
Iteration   6: 936.789 ns/op
Iteration   7: 766.034 ns/op
Iteration   8: 804.733 ns/op
Iteration   9: 670.852 ns/op
Iteration  10: 846.953 ns/op

# Run progress: 52.15% complete, ETA 00:18:22
# Fork: 2 of 2
# Warmup Iteration   1: 12971.473 ns/op
# Warmup Iteration   2: 65305.520 ns/op
# Warmup Iteration   3: 2037.322 ns/op
Iteration   1: 24892.803 ns/op
Iteration   2: 2085.684 ns/op
Iteration   3: 4038.126 ns/op
Iteration   4: 690.255 ns/op
Iteration   5: 15924.412 ns/op
Iteration   6: 918.952 ns/op
Iteration   7: 721.525 ns/op
Iteration   8: 767.405 ns/op
Iteration   9: 686.479 ns/op
Iteration  10: 878.414 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4539.945 ±(99.9%) 6418.546 ns/op [Average]
  (min, avg, max) = (670.852, 4539.945, 24892.803), stdev = 7391.608
  CI (99.9%): [≈ 0, 10958.492] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 52.22% complete, ETA 00:18:21
# Fork: 1 of 2
# Warmup Iteration   1: 2320.562 ns/op
# Warmup Iteration   2: 1279.409 ns/op
# Warmup Iteration   3: 961.905 ns/op
Iteration   1: 940.572 ns/op
Iteration   2: 990.243 ns/op
Iteration   3: 988.494 ns/op
Iteration   4: 953.740 ns/op
Iteration   5: 1020.296 ns/op
Iteration   6: 4966.772 ns/op
Iteration   7: 1052.924 ns/op
Iteration   8: 1091.392 ns/op
Iteration   9: 996.835 ns/op
Iteration  10: 985.111 ns/op

# Run progress: 52.29% complete, ETA 00:18:19
# Fork: 2 of 2
# Warmup Iteration   1: 1711.029 ns/op
# Warmup Iteration   2: 1252.254 ns/op
# Warmup Iteration   3: 968.597 ns/op
Iteration   1: 941.178 ns/op
Iteration   2: 990.555 ns/op
Iteration   3: 986.088 ns/op
Iteration   4: 955.943 ns/op
Iteration   5: 1019.581 ns/op
Iteration   6: 6636.326 ns/op
Iteration   7: 1048.386 ns/op
Iteration   8: 1090.063 ns/op
Iteration   9: 992.408 ns/op
Iteration  10: 985.743 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1481.632 ±(99.9%) 1304.795 ns/op [Average]
  (min, avg, max) = (940.572, 1481.632, 6636.326), stdev = 1502.603
  CI (99.9%): [176.838, 2786.427] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 52.36% complete, ETA 00:18:17
# Fork: 1 of 2
# Warmup Iteration   1: 11054.081 ns/op
# Warmup Iteration   2: 5079.347 ns/op
# Warmup Iteration   3: 3776.224 ns/op
Iteration   1: 3813.794 ns/op
Iteration   2: 3779.226 ns/op
Iteration   3: 3785.448 ns/op
Iteration   4: 3763.003 ns/op
Iteration   5: 3762.667 ns/op
Iteration   6: 3803.883 ns/op
Iteration   7: 3773.410 ns/op
Iteration   8: 3788.986 ns/op
Iteration   9: 3822.058 ns/op
Iteration  10: 3760.670 ns/op

# Run progress: 52.43% complete, ETA 00:18:16
# Fork: 2 of 2
# Warmup Iteration   1: 11932.011 ns/op
# Warmup Iteration   2: 4444.466 ns/op
# Warmup Iteration   3: 3773.430 ns/op
Iteration   1: 3505.998 ns/op
Iteration   2: 3464.335 ns/op
Iteration   3: 3482.829 ns/op
Iteration   4: 3469.384 ns/op
Iteration   5: 3450.576 ns/op
Iteration   6: 3505.871 ns/op
Iteration   7: 3459.950 ns/op
Iteration   8: 3451.767 ns/op
Iteration   9: 3476.923 ns/op
Iteration  10: 3454.571 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3628.767 ±(99.9%) 140.624 ns/op [Average]
  (min, avg, max) = (3450.576, 3628.767, 3822.058), stdev = 161.943
  CI (99.9%): [3488.144, 3769.391] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 52.50% complete, ETA 00:18:14
# Fork: 1 of 2
# Warmup Iteration   1: 22.015 ns/op
# Warmup Iteration   2: 26.638 ns/op
# Warmup Iteration   3: 15.766 ns/op
Iteration   1: 15.575 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.986 ns/op
Iteration   4: 15.944 ns/op
Iteration   5: 15.672 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.142 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.577 ns/op

# Run progress: 52.57% complete, ETA 00:18:13
# Fork: 2 of 2
# Warmup Iteration   1: 22.014 ns/op
# Warmup Iteration   2: 25.789 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.963 ns/op
Iteration   5: 15.688 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.573 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.931 ns/op [Average]
  (min, avg, max) = (15.573, 16.021, 19.142), stdev = 1.073
  CI (99.9%): [15.090, 16.952] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 52.64% complete, ETA 00:18:11
# Fork: 1 of 2
# Warmup Iteration   1: 137.942 ns/op
# Warmup Iteration   2: 137.932 ns/op
# Warmup Iteration   3: 92.302 ns/op
Iteration   1: 92.361 ns/op
Iteration   2: 92.540 ns/op
Iteration   3: 92.662 ns/op
Iteration   4: 92.850 ns/op
Iteration   5: 92.615 ns/op
Iteration   6: 92.328 ns/op
Iteration   7: 92.461 ns/op
Iteration   8: 94.518 ns/op
Iteration   9: 92.147 ns/op
Iteration  10: 92.701 ns/op

# Run progress: 52.71% complete, ETA 00:18:09
# Fork: 2 of 2
# Warmup Iteration   1: 137.044 ns/op
# Warmup Iteration   2: 136.204 ns/op
# Warmup Iteration   3: 93.735 ns/op
Iteration   1: 93.274 ns/op
Iteration   2: 93.224 ns/op
Iteration   3: 92.864 ns/op
Iteration   4: 93.833 ns/op
Iteration   5: 92.853 ns/op
Iteration   6: 93.054 ns/op
Iteration   7: 93.137 ns/op
Iteration   8: 94.883 ns/op
Iteration   9: 93.038 ns/op
Iteration  10: 93.493 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  93.042 ±(99.9%) 0.611 ns/op [Average]
  (min, avg, max) = (92.147, 93.042, 94.883), stdev = 0.704
  CI (99.9%): [92.431, 93.653] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 52.78% complete, ETA 00:18:08
# Fork: 1 of 2
# Warmup Iteration   1: 2382.804 ns/op
# Warmup Iteration   2: 161.759 ns/op
# Warmup Iteration   3: 113.032 ns/op
Iteration   1: 113.228 ns/op
Iteration   2: 112.709 ns/op
Iteration   3: 113.143 ns/op
Iteration   4: 112.991 ns/op
Iteration   5: 112.321 ns/op
Iteration   6: 112.941 ns/op
Iteration   7: 112.488 ns/op
Iteration   8: 112.348 ns/op
Iteration   9: 113.435 ns/op
Iteration  10: 112.464 ns/op

# Run progress: 52.85% complete, ETA 00:18:06
# Fork: 2 of 2
# Warmup Iteration   1: 619.188 ns/op
# Warmup Iteration   2: 147.809 ns/op
# Warmup Iteration   3: 111.947 ns/op
Iteration   1: 111.600 ns/op
Iteration   2: 111.702 ns/op
Iteration   3: 111.731 ns/op
Iteration   4: 111.198 ns/op
Iteration   5: 111.651 ns/op
Iteration   6: 111.510 ns/op
Iteration   7: 111.261 ns/op
Iteration   8: 111.487 ns/op
Iteration   9: 111.645 ns/op
Iteration  10: 111.468 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  112.166 ±(99.9%) 0.627 ns/op [Average]
  (min, avg, max) = (111.198, 112.166, 113.435), stdev = 0.722
  CI (99.9%): [111.539, 112.793] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 52.92% complete, ETA 00:18:05
# Fork: 1 of 2
# Warmup Iteration   1: 1333.534 ns/op
# Warmup Iteration   2: 147.517 ns/op
# Warmup Iteration   3: 113.061 ns/op
Iteration   1: 113.688 ns/op
Iteration   2: 111.961 ns/op
Iteration   3: 114.205 ns/op
Iteration   4: 114.231 ns/op
Iteration   5: 112.922 ns/op
Iteration   6: 109.298 ns/op
Iteration   7: 113.437 ns/op
Iteration   8: 113.561 ns/op
Iteration   9: 112.963 ns/op
Iteration  10: 111.430 ns/op

# Run progress: 52.99% complete, ETA 00:18:03
# Fork: 2 of 2
# Warmup Iteration   1: 1918.983 ns/op
# Warmup Iteration   2: 126.449 ns/op
# Warmup Iteration   3: 110.402 ns/op
Iteration   1: 111.784 ns/op
Iteration   2: 112.178 ns/op
Iteration   3: 114.845 ns/op
Iteration   4: 113.894 ns/op
Iteration   5: 108.926 ns/op
Iteration   6: 109.796 ns/op
Iteration   7: 109.001 ns/op
Iteration   8: 112.457 ns/op
Iteration   9: 111.625 ns/op
Iteration  10: 108.896 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  112.055 ±(99.9%) 1.685 ns/op [Average]
  (min, avg, max) = (108.896, 112.055, 114.845), stdev = 1.941
  CI (99.9%): [110.370, 113.740] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 53.06% complete, ETA 00:18:01
# Fork: 1 of 2
# Warmup Iteration   1: 110.728 ns/op
# Warmup Iteration   2: 95.320 ns/op
# Warmup Iteration   3: 73.181 ns/op
Iteration   1: 73.243 ns/op
Iteration   2: 73.367 ns/op
Iteration   3: 73.255 ns/op
Iteration   4: 73.331 ns/op
Iteration   5: 73.324 ns/op
Iteration   6: 73.287 ns/op
Iteration   7: 73.327 ns/op
Iteration   8: 73.467 ns/op
Iteration   9: 73.371 ns/op
Iteration  10: 73.264 ns/op

# Run progress: 53.13% complete, ETA 00:18:00
# Fork: 2 of 2
# Warmup Iteration   1: 109.177 ns/op
# Warmup Iteration   2: 111.851 ns/op
# Warmup Iteration   3: 73.228 ns/op
Iteration   1: 73.207 ns/op
Iteration   2: 73.345 ns/op
Iteration   3: 73.122 ns/op
Iteration   4: 73.153 ns/op
Iteration   5: 73.242 ns/op
Iteration   6: 73.271 ns/op
Iteration   7: 73.500 ns/op
Iteration   8: 73.369 ns/op
Iteration   9: 73.318 ns/op
Iteration  10: 73.185 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.297 ±(99.9%) 0.083 ns/op [Average]
  (min, avg, max) = (73.122, 73.297, 73.500), stdev = 0.095
  CI (99.9%): [73.215, 73.380] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 53.19% complete, ETA 00:17:58
# Fork: 1 of 2
# Warmup Iteration   1: 214.785 ns/op
# Warmup Iteration   2: 219.674 ns/op
# Warmup Iteration   3: 124.771 ns/op
Iteration   1: 124.754 ns/op
Iteration   2: 126.316 ns/op
Iteration   3: 124.793 ns/op
Iteration   4: 124.947 ns/op
Iteration   5: 124.850 ns/op
Iteration   6: 124.789 ns/op
Iteration   7: 124.804 ns/op
Iteration   8: 127.765 ns/op
Iteration   9: 130.525 ns/op
Iteration  10: 124.801 ns/op

# Run progress: 53.26% complete, ETA 00:17:57
# Fork: 2 of 2
# Warmup Iteration   1: 210.511 ns/op
# Warmup Iteration   2: 218.515 ns/op
# Warmup Iteration   3: 124.787 ns/op
Iteration   1: 124.774 ns/op
Iteration   2: 126.326 ns/op
Iteration   3: 124.774 ns/op
Iteration   4: 124.960 ns/op
Iteration   5: 124.810 ns/op
Iteration   6: 124.849 ns/op
Iteration   7: 124.900 ns/op
Iteration   8: 128.106 ns/op
Iteration   9: 130.542 ns/op
Iteration  10: 124.816 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.860 ±(99.9%) 1.639 ns/op [Average]
  (min, avg, max) = (124.754, 125.860, 130.542), stdev = 1.887
  CI (99.9%): [124.221, 127.499] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 53.33% complete, ETA 00:17:55
# Fork: 1 of 2
# Warmup Iteration   1: 22.065 ns/op
# Warmup Iteration   2: 26.206 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.572 ns/op
Iteration   8: 19.102 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.589 ns/op

# Run progress: 53.40% complete, ETA 00:17:53
# Fork: 2 of 2
# Warmup Iteration   1: 22.337 ns/op
# Warmup Iteration   2: 26.743 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.587 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.688 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.584 ns/op
Iteration   8: 19.102 ns/op
Iteration   9: 15.585 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.925 ns/op [Average]
  (min, avg, max) = (15.572, 16.020, 19.102), stdev = 1.065
  CI (99.9%): [15.095, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 53.47% complete, ETA 00:17:52
# Fork: 1 of 2
# Warmup Iteration   1: 1406.670 ns/op
# Warmup Iteration   2: 3653.661 ns/op
# Warmup Iteration   3: 595.469 ns/op
Iteration   1: 18624.768 ns/op
Iteration   2: 27786.075 ns/op
Iteration   3: 27897.233 ns/op
Iteration   4: 748.201 ns/op
Iteration   5: 35346.857 ns/op
Iteration   6: 23211.813 ns/op
Iteration   7: 875.043 ns/op
Iteration   8: 416.741 ns/op
Iteration   9: 397.882 ns/op
Iteration  10: 684.696 ns/op

# Run progress: 53.54% complete, ETA 00:17:50
# Fork: 2 of 2
# Warmup Iteration   1: 1584.461 ns/op
# Warmup Iteration   2: 10860.445 ns/op
# Warmup Iteration   3: 667.828 ns/op
Iteration   1: 19723.952 ns/op
Iteration   2: 26234.953 ns/op
Iteration   3: 29304.470 ns/op
Iteration   4: 752.344 ns/op
Iteration   5: 32962.177 ns/op
Iteration   6: 23717.429 ns/op
Iteration   7: 861.415 ns/op
Iteration   8: 384.481 ns/op
Iteration   9: 382.716 ns/op
Iteration  10: 669.222 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  13549.123 ±(99.9%) 11957.974 ns/op [Average]
  (min, avg, max) = (382.716, 13549.123, 35346.857), stdev = 13770.820
  CI (99.9%): [1591.150, 25507.097] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 53.61% complete, ETA 00:17:49
# Fork: 1 of 2
# Warmup Iteration   1: 2937.041 ns/op
# Warmup Iteration   2: 20523.921 ns/op
# Warmup Iteration   3: 798.239 ns/op
Iteration   1: 288.739 ns/op
Iteration   2: 381.694 ns/op
Iteration   3: 48575.231 ns/op
Iteration   4: 10233.569 ns/op
Iteration   5: 2428.957 ns/op
Iteration   6: 339.926 ns/op
Iteration   7: 447.166 ns/op
Iteration   8: 335.962 ns/op
Iteration   9: 338.638 ns/op
Iteration  10: 499.475 ns/op

# Run progress: 53.68% complete, ETA 00:17:47
# Fork: 2 of 2
# Warmup Iteration   1: 2832.024 ns/op
# Warmup Iteration   2: 21499.758 ns/op
# Warmup Iteration   3: 20517.645 ns/op
Iteration   1: 278.440 ns/op
Iteration   2: 372.778 ns/op
Iteration   3: 53533.504 ns/op
Iteration   4: 13159.045 ns/op
Iteration   5: 12022.424 ns/op
Iteration   6: 363.873 ns/op
Iteration   7: 454.550 ns/op
Iteration   8: 330.097 ns/op
Iteration   9: 336.628 ns/op
Iteration  10: 506.052 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7261.337 ±(99.9%) 13513.191 ns/op [Average]
  (min, avg, max) = (278.440, 7261.337, 53533.504), stdev = 15561.811
  CI (99.9%): [≈ 0, 20774.528] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 53.75% complete, ETA 00:17:45
# Fork: 1 of 2
# Warmup Iteration   1: 1678.370 ns/op
# Warmup Iteration   2: 38043.776 ns/op
# Warmup Iteration   3: 27017.956 ns/op
Iteration   1: 357.063 ns/op
Iteration   2: 456.829 ns/op
Iteration   3: 47493.144 ns/op
Iteration   4: 1518.439 ns/op
Iteration   5: 663.182 ns/op
Iteration   6: 404.006 ns/op
Iteration   7: 519.023 ns/op
Iteration   8: 442.250 ns/op
Iteration   9: 419.874 ns/op
Iteration  10: 593.316 ns/op

# Run progress: 53.82% complete, ETA 00:17:44
# Fork: 2 of 2
# Warmup Iteration   1: 1532.530 ns/op
# Warmup Iteration   2: 39954.211 ns/op
# Warmup Iteration   3: 33651.626 ns/op
Iteration   1: 327.654 ns/op
Iteration   2: 429.199 ns/op
Iteration   3: 49233.449 ns/op
Iteration   4: 27703.703 ns/op
Iteration   5: 672.260 ns/op
Iteration   6: 403.514 ns/op
Iteration   7: 526.329 ns/op
Iteration   8: 453.276 ns/op
Iteration   9: 417.438 ns/op
Iteration  10: 597.659 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6681.580 ±(99.9%) 13452.976 ns/op [Average]
  (min, avg, max) = (327.654, 6681.580, 49233.449), stdev = 15492.468
  CI (99.9%): [≈ 0, 20134.557] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 53.89% complete, ETA 00:17:42
# Fork: 1 of 2
# Warmup Iteration   1: 272.082 ns/op
# Warmup Iteration   2: 1111.040 ns/op
# Warmup Iteration   3: 306.316 ns/op
Iteration   1: 187.115 ns/op
Iteration   2: 225.424 ns/op
Iteration   3: 317.891 ns/op
Iteration   4: 349.820 ns/op
Iteration   5: 347.516 ns/op
Iteration   6: 411.371 ns/op
Iteration   7: 387.601 ns/op
Iteration   8: 190.747 ns/op
Iteration   9: 207.187 ns/op
Iteration  10: 306.656 ns/op

# Run progress: 53.96% complete, ETA 00:17:41
# Fork: 2 of 2
# Warmup Iteration   1: 254.003 ns/op
# Warmup Iteration   2: 784.714 ns/op
# Warmup Iteration   3: 306.757 ns/op
Iteration   1: 186.689 ns/op
Iteration   2: 224.888 ns/op
Iteration   3: 316.177 ns/op
Iteration   4: 350.337 ns/op
Iteration   5: 348.756 ns/op
Iteration   6: 623.195 ns/op
Iteration   7: 387.093 ns/op
Iteration   8: 190.529 ns/op
Iteration   9: 207.449 ns/op
Iteration  10: 306.677 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  303.656 ±(99.9%) 93.452 ns/op [Average]
  (min, avg, max) = (186.689, 303.656, 623.195), stdev = 107.620
  CI (99.9%): [210.204, 397.108] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 54.03% complete, ETA 00:17:39
# Fork: 1 of 2
# Warmup Iteration   1: 1266.975 ns/op
# Warmup Iteration   2: 37189.185 ns/op
# Warmup Iteration   3: 1063.495 ns/op
Iteration   1: 573.591 ns/op
Iteration   2: 785.596 ns/op
Iteration   3: 957.678 ns/op
Iteration   4: 1054.489 ns/op
Iteration   5: 38742.979 ns/op
Iteration   6: 845.484 ns/op
Iteration   7: 1142.758 ns/op
Iteration   8: 657.144 ns/op
Iteration   9: 881.099 ns/op
Iteration  10: 1210.060 ns/op

# Run progress: 54.10% complete, ETA 00:17:37
# Fork: 2 of 2
# Warmup Iteration   1: 1153.815 ns/op
# Warmup Iteration   2: 28654.141 ns/op
# Warmup Iteration   3: 1096.990 ns/op
Iteration   1: 585.123 ns/op
Iteration   2: 807.932 ns/op
Iteration   3: 976.040 ns/op
Iteration   4: 1087.237 ns/op
Iteration   5: 4028.400 ns/op
Iteration   6: 817.032 ns/op
Iteration   7: 1115.542 ns/op
Iteration   8: 635.988 ns/op
Iteration   9: 854.058 ns/op
Iteration  10: 1170.943 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2946.459 ±(99.9%) 7343.506 ns/op [Average]
  (min, avg, max) = (573.591, 2946.459, 38742.979), stdev = 8456.792
  CI (99.9%): [≈ 0, 10289.964] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 54.17% complete, ETA 00:17:36
# Fork: 1 of 2
# Warmup Iteration   1: 22.981 ns/op
# Warmup Iteration   2: 24.886 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.993 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.584 ns/op
Iteration   8: 19.122 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 54.24% complete, ETA 00:17:34
# Fork: 2 of 2
# Warmup Iteration   1: 22.132 ns/op
# Warmup Iteration   2: 26.021 ns/op
# Warmup Iteration   3: 15.778 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.944 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.574 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.570 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.570, 16.021, 19.122), stdev = 1.070
  CI (99.9%): [15.092, 16.950] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 54.31% complete, ETA 00:17:33
# Fork: 1 of 2
# Warmup Iteration   1: 3123.331 ns/op
# Warmup Iteration   2: 1273.425 ns/op
# Warmup Iteration   3: 902.963 ns/op
Iteration   1: 902.811 ns/op
Iteration   2: 902.788 ns/op
Iteration   3: 903.091 ns/op
Iteration   4: 903.318 ns/op
Iteration   5: 903.117 ns/op
Iteration   6: 903.159 ns/op
Iteration   7: 903.033 ns/op
Iteration   8: 906.446 ns/op
Iteration   9: 903.011 ns/op
Iteration  10: 903.118 ns/op

# Run progress: 54.37% complete, ETA 00:17:31
# Fork: 2 of 2
# Warmup Iteration   1: 2973.132 ns/op
# Warmup Iteration   2: 1225.750 ns/op
# Warmup Iteration   3: 908.834 ns/op
Iteration   1: 908.287 ns/op
Iteration   2: 909.884 ns/op
Iteration   3: 909.227 ns/op
Iteration   4: 908.637 ns/op
Iteration   5: 909.089 ns/op
Iteration   6: 908.024 ns/op
Iteration   7: 908.832 ns/op
Iteration   8: 912.313 ns/op
Iteration   9: 909.306 ns/op
Iteration  10: 909.175 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  906.333 ±(99.9%) 2.794 ns/op [Average]
  (min, avg, max) = (902.788, 906.333, 912.313), stdev = 3.218
  CI (99.9%): [903.539, 909.127] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 54.44% complete, ETA 00:17:29
# Fork: 1 of 2
# Warmup Iteration   1: 18668.425 ns/op
# Warmup Iteration   2: 1236.645 ns/op
# Warmup Iteration   3: 956.016 ns/op
Iteration   1: 883.388 ns/op
Iteration   2: 881.338 ns/op
Iteration   3: 880.813 ns/op
Iteration   4: 879.194 ns/op
Iteration   5: 880.274 ns/op
Iteration   6: 882.585 ns/op
Iteration   7: 880.742 ns/op
Iteration   8: 881.242 ns/op
Iteration   9: 880.187 ns/op
Iteration  10: 880.403 ns/op

# Run progress: 54.51% complete, ETA 00:17:28
# Fork: 2 of 2
# Warmup Iteration   1: 14345.508 ns/op
# Warmup Iteration   2: 1164.132 ns/op
# Warmup Iteration   3: 945.794 ns/op
Iteration   1: 873.440 ns/op
Iteration   2: 873.239 ns/op
Iteration   3: 876.231 ns/op
Iteration   4: 874.465 ns/op
Iteration   5: 873.465 ns/op
Iteration   6: 873.990 ns/op
Iteration   7: 873.710 ns/op
Iteration   8: 873.750 ns/op
Iteration   9: 873.498 ns/op
Iteration  10: 874.868 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  877.541 ±(99.9%) 3.227 ns/op [Average]
  (min, avg, max) = (873.239, 877.541, 883.388), stdev = 3.716
  CI (99.9%): [874.314, 880.768] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 54.58% complete, ETA 00:17:26
# Fork: 1 of 2
# Warmup Iteration   1: 10744.513 ns/op
# Warmup Iteration   2: 1301.339 ns/op
# Warmup Iteration   3: 902.039 ns/op
Iteration   1: 901.296 ns/op
Iteration   2: 901.922 ns/op
Iteration   3: 921.913 ns/op
Iteration   4: 904.371 ns/op
Iteration   5: 901.267 ns/op
Iteration   6: 901.508 ns/op
Iteration   7: 917.334 ns/op
Iteration   8: 907.548 ns/op
Iteration   9: 907.572 ns/op
Iteration  10: 901.925 ns/op

# Run progress: 54.65% complete, ETA 00:17:25
# Fork: 2 of 2
# Warmup Iteration   1: 10019.441 ns/op
# Warmup Iteration   2: 1336.858 ns/op
# Warmup Iteration   3: 903.909 ns/op
Iteration   1: 902.918 ns/op
Iteration   2: 910.079 ns/op
Iteration   3: 905.093 ns/op
Iteration   4: 905.202 ns/op
Iteration   5: 903.005 ns/op
Iteration   6: 907.518 ns/op
Iteration   7: 910.266 ns/op
Iteration   8: 909.062 ns/op
Iteration   9: 902.924 ns/op
Iteration  10: 902.654 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  906.269 ±(99.9%) 4.768 ns/op [Average]
  (min, avg, max) = (901.267, 906.269, 921.913), stdev = 5.491
  CI (99.9%): [901.501, 911.037] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 54.72% complete, ETA 00:17:23
# Fork: 1 of 2
# Warmup Iteration   1: 1979.179 ns/op
# Warmup Iteration   2: 1265.859 ns/op
# Warmup Iteration   3: 1001.782 ns/op
Iteration   1: 1004.040 ns/op
Iteration   2: 1001.725 ns/op
Iteration   3: 1000.059 ns/op
Iteration   4: 1001.587 ns/op
Iteration   5: 1002.493 ns/op
Iteration   6: 1002.666 ns/op
Iteration   7: 1002.684 ns/op
Iteration   8: 1002.691 ns/op
Iteration   9: 1000.694 ns/op
Iteration  10: 1004.280 ns/op

# Run progress: 54.79% complete, ETA 00:17:21
# Fork: 2 of 2
# Warmup Iteration   1: 2235.625 ns/op
# Warmup Iteration   2: 1287.485 ns/op
# Warmup Iteration   3: 1002.999 ns/op
Iteration   1: 1004.517 ns/op
Iteration   2: 1003.974 ns/op
Iteration   3: 1002.772 ns/op
Iteration   4: 1002.856 ns/op
Iteration   5: 1003.618 ns/op
Iteration   6: 1004.447 ns/op
Iteration   7: 1002.931 ns/op
Iteration   8: 1002.087 ns/op
Iteration   9: 1003.516 ns/op
Iteration  10: 1003.973 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1002.881 ±(99.9%) 1.062 ns/op [Average]
  (min, avg, max) = (1000.059, 1002.881, 1004.517), stdev = 1.223
  CI (99.9%): [1001.818, 1003.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 54.86% complete, ETA 00:17:20
# Fork: 1 of 2
# Warmup Iteration   1: 11025.508 ns/op
# Warmup Iteration   2: 5334.223 ns/op
# Warmup Iteration   3: 3737.549 ns/op
Iteration   1: 3737.389 ns/op
Iteration   2: 3734.273 ns/op
Iteration   3: 3742.918 ns/op
Iteration   4: 3723.309 ns/op
Iteration   5: 3725.910 ns/op
Iteration   6: 3730.067 ns/op
Iteration   7: 3726.388 ns/op
Iteration   8: 3725.749 ns/op
Iteration   9: 3732.660 ns/op
Iteration  10: 3732.768 ns/op

# Run progress: 54.93% complete, ETA 00:17:18
# Fork: 2 of 2
# Warmup Iteration   1: 11152.054 ns/op
# Warmup Iteration   2: 5493.033 ns/op
# Warmup Iteration   3: 4447.173 ns/op
Iteration   1: 4055.178 ns/op
Iteration   2: 4055.580 ns/op
Iteration   3: 4060.705 ns/op
Iteration   4: 4045.009 ns/op
Iteration   5: 4042.123 ns/op
Iteration   6: 4049.914 ns/op
Iteration   7: 4041.472 ns/op
Iteration   8: 4036.928 ns/op
Iteration   9: 4048.261 ns/op
Iteration  10: 4041.306 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3889.395 ±(99.9%) 141.110 ns/op [Average]
  (min, avg, max) = (3723.309, 3889.395, 4060.705), stdev = 162.503
  CI (99.9%): [3748.285, 4030.505] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 55.00% complete, ETA 00:17:17
# Fork: 1 of 2
# Warmup Iteration   1: 22.553 ns/op
# Warmup Iteration   2: 26.012 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 16.029 ns/op
Iteration   4: 16.076 ns/op
Iteration   5: 15.693 ns/op
Iteration   6: 15.589 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.587 ns/op

# Run progress: 55.07% complete, ETA 00:17:15
# Fork: 2 of 2
# Warmup Iteration   1: 22.107 ns/op
# Warmup Iteration   2: 25.932 ns/op
# Warmup Iteration   3: 15.756 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.588 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.114 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.030 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.573, 16.030, 19.114), stdev = 1.068
  CI (99.9%): [15.103, 16.958] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 55.14% complete, ETA 00:17:13
# Fork: 1 of 2
# Warmup Iteration   1: 2623.436 ns/op
# Warmup Iteration   2: 901.962 ns/op
# Warmup Iteration   3: 644.632 ns/op
Iteration   1: 631.833 ns/op
Iteration   2: 630.393 ns/op
Iteration   3: 632.532 ns/op
Iteration   4: 634.273 ns/op
Iteration   5: 632.035 ns/op
Iteration   6: 631.906 ns/op
Iteration   7: 633.528 ns/op
Iteration   8: 635.347 ns/op
Iteration   9: 634.101 ns/op
Iteration  10: 631.603 ns/op

# Run progress: 55.21% complete, ETA 00:17:12
# Fork: 2 of 2
# Warmup Iteration   1: 2378.667 ns/op
# Warmup Iteration   2: 823.937 ns/op
# Warmup Iteration   3: 655.754 ns/op
Iteration   1: 646.171 ns/op
Iteration   2: 647.202 ns/op
Iteration   3: 647.791 ns/op
Iteration   4: 647.063 ns/op
Iteration   5: 646.239 ns/op
Iteration   6: 657.657 ns/op
Iteration   7: 647.122 ns/op
Iteration   8: 654.288 ns/op
Iteration   9: 647.272 ns/op
Iteration  10: 646.690 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  640.752 ±(99.9%) 7.554 ns/op [Average]
  (min, avg, max) = (630.393, 640.752, 657.657), stdev = 8.699
  CI (99.9%): [633.198, 648.306] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 55.28% complete, ETA 00:17:10
# Fork: 1 of 2
# Warmup Iteration   1: 9255.337 ns/op
# Warmup Iteration   2: 1093.994 ns/op
# Warmup Iteration   3: 784.875 ns/op
Iteration   1: 796.728 ns/op
Iteration   2: 785.139 ns/op
Iteration   3: 794.244 ns/op
Iteration   4: 791.026 ns/op
Iteration   5: 785.051 ns/op
Iteration   6: 785.063 ns/op
Iteration   7: 785.622 ns/op
Iteration   8: 841.074 ns/op
Iteration   9: 786.942 ns/op
Iteration  10: 785.501 ns/op

# Run progress: 55.35% complete, ETA 00:17:09
# Fork: 2 of 2
# Warmup Iteration   1: 5358.453 ns/op
# Warmup Iteration   2: 1075.092 ns/op
# Warmup Iteration   3: 801.353 ns/op
Iteration   1: 789.297 ns/op
Iteration   2: 789.294 ns/op
Iteration   3: 791.074 ns/op
Iteration   4: 794.466 ns/op
Iteration   5: 789.527 ns/op
Iteration   6: 789.337 ns/op
Iteration   7: 790.376 ns/op
Iteration   8: 788.122 ns/op
Iteration   9: 788.062 ns/op
Iteration  10: 789.028 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  791.749 ±(99.9%) 10.474 ns/op [Average]
  (min, avg, max) = (785.051, 791.749, 841.074), stdev = 12.061
  CI (99.9%): [781.275, 802.222] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 55.42% complete, ETA 00:17:07
# Fork: 1 of 2
# Warmup Iteration   1: 11517.570 ns/op
# Warmup Iteration   2: 1217.480 ns/op
# Warmup Iteration   3: 724.986 ns/op
Iteration   1: 666.244 ns/op
Iteration   2: 665.982 ns/op
Iteration   3: 666.605 ns/op
Iteration   4: 667.826 ns/op
Iteration   5: 665.901 ns/op
Iteration   6: 666.406 ns/op
Iteration   7: 665.747 ns/op
Iteration   8: 678.024 ns/op
Iteration   9: 666.863 ns/op
Iteration  10: 665.859 ns/op

# Run progress: 55.49% complete, ETA 00:17:05
# Fork: 2 of 2
# Warmup Iteration   1: 44439.285 ns/op
# Warmup Iteration   2: 1177.056 ns/op
# Warmup Iteration   3: 808.110 ns/op
Iteration   1: 692.046 ns/op
Iteration   2: 691.805 ns/op
Iteration   3: 691.838 ns/op
Iteration   4: 693.521 ns/op
Iteration   5: 692.281 ns/op
Iteration   6: 691.977 ns/op
Iteration   7: 691.639 ns/op
Iteration   8: 692.611 ns/op
Iteration   9: 692.361 ns/op
Iteration  10: 692.090 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  679.881 ±(99.9%) 11.219 ns/op [Average]
  (min, avg, max) = (665.747, 679.881, 693.521), stdev = 12.920
  CI (99.9%): [668.662, 691.100] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 55.56% complete, ETA 00:17:04
# Fork: 1 of 2
# Warmup Iteration   1: 1437.337 ns/op
# Warmup Iteration   2: 1281.691 ns/op
# Warmup Iteration   3: 962.238 ns/op
Iteration   1: 964.587 ns/op
Iteration   2: 962.517 ns/op
Iteration   3: 964.622 ns/op
Iteration   4: 961.968 ns/op
Iteration   5: 964.203 ns/op
Iteration   6: 963.975 ns/op
Iteration   7: 963.817 ns/op
Iteration   8: 963.003 ns/op
Iteration   9: 963.804 ns/op
Iteration  10: 963.946 ns/op

# Run progress: 55.63% complete, ETA 00:17:02
# Fork: 2 of 2
# Warmup Iteration   1: 1579.075 ns/op
# Warmup Iteration   2: 1225.389 ns/op
# Warmup Iteration   3: 965.210 ns/op
Iteration   1: 964.893 ns/op
Iteration   2: 964.808 ns/op
Iteration   3: 967.746 ns/op
Iteration   4: 965.397 ns/op
Iteration   5: 964.789 ns/op
Iteration   6: 966.007 ns/op
Iteration   7: 964.696 ns/op
Iteration   8: 965.523 ns/op
Iteration   9: 965.262 ns/op
Iteration  10: 964.644 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  964.510 ±(99.9%) 1.088 ns/op [Average]
  (min, avg, max) = (961.968, 964.510, 967.746), stdev = 1.254
  CI (99.9%): [963.422, 965.599] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 55.69% complete, ETA 00:17:01
# Fork: 1 of 2
# Warmup Iteration   1: 2175.641 ns/op
# Warmup Iteration   2: 1116.389 ns/op
# Warmup Iteration   3: 818.888 ns/op
Iteration   1: 819.006 ns/op
Iteration   2: 819.411 ns/op
Iteration   3: 823.224 ns/op
Iteration   4: 831.077 ns/op
Iteration   5: 819.713 ns/op
Iteration   6: 818.543 ns/op
Iteration   7: 819.790 ns/op
Iteration   8: 828.684 ns/op
Iteration   9: 824.493 ns/op
Iteration  10: 819.905 ns/op

# Run progress: 55.76% complete, ETA 00:16:59
# Fork: 2 of 2
# Warmup Iteration   1: 2068.733 ns/op
# Warmup Iteration   2: 1175.931 ns/op
# Warmup Iteration   3: 819.221 ns/op
Iteration   1: 818.424 ns/op
Iteration   2: 819.671 ns/op
Iteration   3: 824.142 ns/op
Iteration   4: 830.842 ns/op
Iteration   5: 818.386 ns/op
Iteration   6: 819.018 ns/op
Iteration   7: 819.302 ns/op
Iteration   8: 827.648 ns/op
Iteration   9: 823.763 ns/op
Iteration  10: 820.942 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  822.299 ±(99.9%) 3.681 ns/op [Average]
  (min, avg, max) = (818.386, 822.299, 831.077), stdev = 4.239
  CI (99.9%): [818.618, 825.980] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 55.83% complete, ETA 00:16:57
# Fork: 1 of 2
# Warmup Iteration   1: 22.502 ns/op
# Warmup Iteration   2: 21.951 ns/op
# Warmup Iteration   3: 15.763 ns/op
Iteration   1: 15.572 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.995 ns/op
Iteration   4: 15.933 ns/op
Iteration   5: 15.689 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.574 ns/op
Iteration   8: 19.107 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.576 ns/op

# Run progress: 55.90% complete, ETA 00:16:56
# Fork: 2 of 2
# Warmup Iteration   1: 22.655 ns/op
# Warmup Iteration   2: 25.844 ns/op
# Warmup Iteration   3: 15.786 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.937 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.572, 16.019, 19.107), stdev = 1.067
  CI (99.9%): [15.093, 16.946] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 55.97% complete, ETA 00:16:54
# Fork: 1 of 2
# Warmup Iteration   1: 7654.809 ns/op
# Warmup Iteration   2: 61694.998 ns/op
# Warmup Iteration   3: 5674.502 ns/op
Iteration   1: 40811.476 ns/op
Iteration   2: 949.056 ns/op
Iteration   3: 628.675 ns/op
Iteration   4: 43755.968 ns/op
Iteration   5: 40783.916 ns/op
Iteration   6: 1534.739 ns/op
Iteration   7: 1008.493 ns/op
Iteration   8: 735.568 ns/op
Iteration   9: 800.540 ns/op
Iteration  10: 766.431 ns/op

# Run progress: 56.04% complete, ETA 00:16:53
# Fork: 2 of 2
# Warmup Iteration   1: 7617.060 ns/op
# Warmup Iteration   2: 52586.623 ns/op
# Warmup Iteration   3: 3795.227 ns/op
Iteration   1: 38991.566 ns/op
Iteration   2: 1669.275 ns/op
Iteration   3: 629.293 ns/op
Iteration   4: 42676.276 ns/op
Iteration   5: 38044.273 ns/op
Iteration   6: 1082.483 ns/op
Iteration   7: 1042.737 ns/op
Iteration   8: 731.863 ns/op
Iteration   9: 820.927 ns/op
Iteration  10: 788.531 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  12912.604 ±(99.9%) 16320.358 ns/op [Average]
  (min, avg, max) = (628.675, 12912.604, 43755.968), stdev = 18794.549
  CI (99.9%): [≈ 0, 29232.962] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 56.11% complete, ETA 00:16:51
# Fork: 1 of 2
# Warmup Iteration   1: 8840.587 ns/op
# Warmup Iteration   2: 16530.481 ns/op
# Warmup Iteration   3: 1218.869 ns/op
Iteration   1: 14523.465 ns/op
Iteration   2: 13368.192 ns/op
Iteration   3: 2209.848 ns/op
Iteration   4: 5023.213 ns/op
Iteration   5: 12828.039 ns/op
Iteration   6: 2985.910 ns/op
Iteration   7: 14820.900 ns/op
Iteration   8: 923.653 ns/op
Iteration   9: 875.189 ns/op
Iteration  10: 896.405 ns/op

# Run progress: 56.18% complete, ETA 00:16:49
# Fork: 2 of 2
# Warmup Iteration   1: 10877.877 ns/op
# Warmup Iteration   2: 20104.305 ns/op
# Warmup Iteration   3: 1162.166 ns/op
Iteration   1: 4984.214 ns/op
Iteration   2: 14578.123 ns/op
Iteration   3: 1752.198 ns/op
Iteration   4: 3820.439 ns/op
Iteration   5: 11633.689 ns/op
Iteration   6: 3886.699 ns/op
Iteration   7: 3520.795 ns/op
Iteration   8: 933.829 ns/op
Iteration   9: 883.020 ns/op
Iteration  10: 905.297 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5767.656 ±(99.9%) 4757.604 ns/op [Average]
  (min, avg, max) = (875.189, 5767.656, 14820.900), stdev = 5478.864
  CI (99.9%): [1010.052, 10525.260] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 56.25% complete, ETA 00:16:48
# Fork: 1 of 2
# Warmup Iteration   1: 39779.214 ns/op
# Warmup Iteration   2: 7701.600 ns/op
# Warmup Iteration   3: 1396.775 ns/op
Iteration   1: 23451.576 ns/op
Iteration   2: 71808.337 ns/op
Iteration   3: 11359.098 ns/op
Iteration   4: 3776.345 ns/op
Iteration   5: 21216.433 ns/op
Iteration   6: 939.056 ns/op
Iteration   7: 973.602 ns/op
Iteration   8: 908.745 ns/op
Iteration   9: 862.751 ns/op
Iteration  10: 880.940 ns/op

# Run progress: 56.32% complete, ETA 00:16:46
# Fork: 2 of 2
# Warmup Iteration   1: 11008.283 ns/op
# Warmup Iteration   2: 17605.258 ns/op
# Warmup Iteration   3: 1175.186 ns/op
Iteration   1: 19988.698 ns/op
Iteration   2: 85283.930 ns/op
Iteration   3: 15970.951 ns/op
Iteration   4: 15877.874 ns/op
Iteration   5: 18828.253 ns/op
Iteration   6: 956.762 ns/op
Iteration   7: 999.121 ns/op
Iteration   8: 917.798 ns/op
Iteration   9: 883.479 ns/op
Iteration  10: 903.046 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  14839.340 ±(99.9%) 20353.862 ns/op [Average]
  (min, avg, max) = (862.751, 14839.340, 85283.930), stdev = 23439.538
  CI (99.9%): [≈ 0, 35193.202] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 56.39% complete, ETA 00:16:45
# Fork: 1 of 2
# Warmup Iteration   1: 1979.534 ns/op
# Warmup Iteration   2: 1537.499 ns/op
# Warmup Iteration   3: 1007.711 ns/op
Iteration   1: 5373.286 ns/op
Iteration   2: 1034.730 ns/op
Iteration   3: 1045.163 ns/op
Iteration   4: 1012.894 ns/op
Iteration   5: 935.989 ns/op
Iteration   6: 932.378 ns/op
Iteration   7: 938.110 ns/op
Iteration   8: 904.319 ns/op
Iteration   9: 1068.350 ns/op
Iteration  10: 1022.462 ns/op

# Run progress: 56.46% complete, ETA 00:16:43
# Fork: 2 of 2
# Warmup Iteration   1: 1666.491 ns/op
# Warmup Iteration   2: 1416.852 ns/op
# Warmup Iteration   3: 998.594 ns/op
Iteration   1: 20218.288 ns/op
Iteration   2: 1030.161 ns/op
Iteration   3: 1051.945 ns/op
Iteration   4: 1006.410 ns/op
Iteration   5: 942.214 ns/op
Iteration   6: 929.618 ns/op
Iteration   7: 943.150 ns/op
Iteration   8: 896.141 ns/op
Iteration   9: 1080.265 ns/op
Iteration  10: 1020.952 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2169.341 ±(99.9%) 3786.041 ns/op [Average]
  (min, avg, max) = (896.141, 2169.341, 20218.288), stdev = 4360.010
  CI (99.9%): [≈ 0, 5955.382] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 56.53% complete, ETA 00:16:41
# Fork: 1 of 2
# Warmup Iteration   1: 10721.839 ns/op
# Warmup Iteration   2: 5061.021 ns/op
# Warmup Iteration   3: 3553.066 ns/op
Iteration   1: 3580.138 ns/op
Iteration   2: 3512.404 ns/op
Iteration   3: 3539.829 ns/op
Iteration   4: 3523.046 ns/op
Iteration   5: 3512.344 ns/op
Iteration   6: 3569.692 ns/op
Iteration   7: 3557.323 ns/op
Iteration   8: 3511.021 ns/op
Iteration   9: 3586.057 ns/op
Iteration  10: 3544.947 ns/op

# Run progress: 56.60% complete, ETA 00:16:40
# Fork: 2 of 2
# Warmup Iteration   1: 9316.827 ns/op
# Warmup Iteration   2: 4972.174 ns/op
# Warmup Iteration   3: 3484.561 ns/op
Iteration   1: 3511.829 ns/op
Iteration   2: 3465.205 ns/op
Iteration   3: 3440.148 ns/op
Iteration   4: 3478.247 ns/op
Iteration   5: 3461.909 ns/op
Iteration   6: 3466.656 ns/op
Iteration   7: 3495.590 ns/op
Iteration   8: 3460.748 ns/op
Iteration   9: 3670.134 ns/op
Iteration  10: 3488.376 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3518.782 ±(99.9%) 48.015 ns/op [Average]
  (min, avg, max) = (3440.148, 3518.782, 3670.134), stdev = 55.294
  CI (99.9%): [3470.768, 3566.797] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 56.67% complete, ETA 00:16:38
# Fork: 1 of 2
# Warmup Iteration   1: 21.956 ns/op
# Warmup Iteration   2: 25.565 ns/op
# Warmup Iteration   3: 15.783 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.572 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.942 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.585 ns/op
Iteration   8: 19.121 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.575 ns/op

# Run progress: 56.74% complete, ETA 00:16:37
# Fork: 2 of 2
# Warmup Iteration   1: 22.943 ns/op
# Warmup Iteration   2: 24.923 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.986 ns/op
Iteration   4: 15.939 ns/op
Iteration   5: 15.689 ns/op
Iteration   6: 15.572 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.572 ns/op
Iteration  10: 15.574 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.572, 16.019, 19.121), stdev = 1.069
  CI (99.9%): [15.090, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 56.81% complete, ETA 00:16:35
# Fork: 1 of 2
# Warmup Iteration   1: 332.755 ns/op
# Warmup Iteration   2: 328.711 ns/op
# Warmup Iteration   3: 224.439 ns/op
Iteration   1: 223.870 ns/op
Iteration   2: 223.980 ns/op
Iteration   3: 223.877 ns/op
Iteration   4: 224.114 ns/op
Iteration   5: 224.055 ns/op
Iteration   6: 223.949 ns/op
Iteration   7: 223.919 ns/op
Iteration   8: 232.733 ns/op
Iteration   9: 224.466 ns/op
Iteration  10: 223.840 ns/op

# Run progress: 56.88% complete, ETA 00:16:33
# Fork: 2 of 2
# Warmup Iteration   1: 337.734 ns/op
# Warmup Iteration   2: 313.760 ns/op
# Warmup Iteration   3: 224.341 ns/op
Iteration   1: 223.994 ns/op
Iteration   2: 224.708 ns/op
Iteration   3: 223.819 ns/op
Iteration   4: 224.155 ns/op
Iteration   5: 224.017 ns/op
Iteration   6: 223.927 ns/op
Iteration   7: 224.499 ns/op
Iteration   8: 232.202 ns/op
Iteration   9: 225.143 ns/op
Iteration  10: 223.840 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  224.955 ±(99.9%) 2.251 ns/op [Average]
  (min, avg, max) = (223.819, 224.955, 232.733), stdev = 2.593
  CI (99.9%): [222.704, 227.207] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 56.94% complete, ETA 00:16:32
# Fork: 1 of 2
# Warmup Iteration   1: 1805.241 ns/op
# Warmup Iteration   2: 211.504 ns/op
# Warmup Iteration   3: 153.158 ns/op
Iteration   1: 153.012 ns/op
Iteration   2: 153.059 ns/op
Iteration   3: 154.334 ns/op
Iteration   4: 153.848 ns/op
Iteration   5: 154.122 ns/op
Iteration   6: 153.070 ns/op
Iteration   7: 153.037 ns/op
Iteration   8: 154.704 ns/op
Iteration   9: 153.685 ns/op
Iteration  10: 153.112 ns/op

# Run progress: 57.01% complete, ETA 00:16:30
# Fork: 2 of 2
# Warmup Iteration   1: 2998.169 ns/op
# Warmup Iteration   2: 211.489 ns/op
# Warmup Iteration   3: 153.262 ns/op
Iteration   1: 153.315 ns/op
Iteration   2: 153.436 ns/op
Iteration   3: 153.837 ns/op
Iteration   4: 153.868 ns/op
Iteration   5: 153.890 ns/op
Iteration   6: 153.203 ns/op
Iteration   7: 153.267 ns/op
Iteration   8: 153.984 ns/op
Iteration   9: 154.076 ns/op
Iteration  10: 153.346 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  153.610 ±(99.9%) 0.427 ns/op [Average]
  (min, avg, max) = (153.012, 153.610, 154.704), stdev = 0.492
  CI (99.9%): [153.183, 154.037] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 57.08% complete, ETA 00:16:29
# Fork: 1 of 2
# Warmup Iteration   1: 1118.775 ns/op
# Warmup Iteration   2: 197.158 ns/op
# Warmup Iteration   3: 144.235 ns/op
Iteration   1: 144.341 ns/op
Iteration   2: 144.276 ns/op
Iteration   3: 144.471 ns/op
Iteration   4: 144.324 ns/op
Iteration   5: 144.294 ns/op
Iteration   6: 144.286 ns/op
Iteration   7: 144.543 ns/op
Iteration   8: 144.542 ns/op
Iteration   9: 144.660 ns/op
Iteration  10: 144.249 ns/op

# Run progress: 57.15% complete, ETA 00:16:27
# Fork: 2 of 2
# Warmup Iteration   1: 958.330 ns/op
# Warmup Iteration   2: 198.885 ns/op
# Warmup Iteration   3: 144.239 ns/op
Iteration   1: 144.310 ns/op
Iteration   2: 144.291 ns/op
Iteration   3: 144.502 ns/op
Iteration   4: 144.316 ns/op
Iteration   5: 144.264 ns/op
Iteration   6: 144.538 ns/op
Iteration   7: 144.275 ns/op
Iteration   8: 144.544 ns/op
Iteration   9: 144.682 ns/op
Iteration  10: 144.293 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  144.400 ±(99.9%) 0.124 ns/op [Average]
  (min, avg, max) = (144.249, 144.400, 144.682), stdev = 0.143
  CI (99.9%): [144.276, 144.524] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 57.22% complete, ETA 00:16:25
# Fork: 1 of 2
# Warmup Iteration   1: 708.242 ns/op
# Warmup Iteration   2: 634.103 ns/op
# Warmup Iteration   3: 493.699 ns/op
Iteration   1: 493.215 ns/op
Iteration   2: 493.125 ns/op
Iteration   3: 494.839 ns/op
Iteration   4: 493.284 ns/op
Iteration   5: 493.024 ns/op
Iteration   6: 493.146 ns/op
Iteration   7: 493.104 ns/op
Iteration   8: 493.191 ns/op
Iteration   9: 494.682 ns/op
Iteration  10: 493.114 ns/op

# Run progress: 57.29% complete, ETA 00:16:24
# Fork: 2 of 2
# Warmup Iteration   1: 765.303 ns/op
# Warmup Iteration   2: 627.433 ns/op
# Warmup Iteration   3: 493.835 ns/op
Iteration   1: 493.188 ns/op
Iteration   2: 493.436 ns/op
Iteration   3: 494.508 ns/op
Iteration   4: 493.352 ns/op
Iteration   5: 493.426 ns/op
Iteration   6: 493.469 ns/op
Iteration   7: 493.588 ns/op
Iteration   8: 493.462 ns/op
Iteration   9: 493.280 ns/op
Iteration  10: 493.171 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  493.480 ±(99.9%) 0.468 ns/op [Average]
  (min, avg, max) = (493.024, 493.480, 494.839), stdev = 0.539
  CI (99.9%): [493.012, 493.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 57.36% complete, ETA 00:16:22
# Fork: 1 of 2
# Warmup Iteration   1: 276.702 ns/op
# Warmup Iteration   2: 250.899 ns/op
# Warmup Iteration   3: 148.678 ns/op
Iteration   1: 148.850 ns/op
Iteration   2: 148.807 ns/op
Iteration   3: 151.383 ns/op
Iteration   4: 149.203 ns/op
Iteration   5: 148.839 ns/op
Iteration   6: 148.798 ns/op
Iteration   7: 148.800 ns/op
Iteration   8: 151.959 ns/op
Iteration   9: 151.467 ns/op
Iteration  10: 148.738 ns/op

# Run progress: 57.43% complete, ETA 00:16:21
# Fork: 2 of 2
# Warmup Iteration   1: 270.369 ns/op
# Warmup Iteration   2: 227.535 ns/op
# Warmup Iteration   3: 147.804 ns/op
Iteration   1: 147.726 ns/op
Iteration   2: 147.968 ns/op
Iteration   3: 150.591 ns/op
Iteration   4: 148.493 ns/op
Iteration   5: 147.761 ns/op
Iteration   6: 147.814 ns/op
Iteration   7: 147.716 ns/op
Iteration   8: 151.442 ns/op
Iteration   9: 150.780 ns/op
Iteration  10: 147.754 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  149.244 ±(99.9%) 1.266 ns/op [Average]
  (min, avg, max) = (147.716, 149.244, 151.959), stdev = 1.457
  CI (99.9%): [147.979, 150.510] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 57.50% complete, ETA 00:16:19
# Fork: 1 of 2
# Warmup Iteration   1: 22.033 ns/op
# Warmup Iteration   2: 25.918 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.930 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.114 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 57.57% complete, ETA 00:16:17
# Fork: 2 of 2
# Warmup Iteration   1: 22.156 ns/op
# Warmup Iteration   2: 25.805 ns/op
# Warmup Iteration   3: 15.769 ns/op
Iteration   1: 15.569 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.686 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.586 ns/op
Iteration  10: 15.574 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.569, 16.019, 19.114), stdev = 1.068
  CI (99.9%): [15.091, 16.946] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 57.64% complete, ETA 00:16:16
# Fork: 1 of 2
# Warmup Iteration   1: 1547.347 ns/op
# Warmup Iteration   2: 28939.878 ns/op
# Warmup Iteration   3: 1597.553 ns/op
Iteration   1: 533.259 ns/op
Iteration   2: 708.913 ns/op
Iteration   3: 891.357 ns/op
Iteration   4: 37285.497 ns/op
Iteration   5: 901.094 ns/op
Iteration   6: 640.468 ns/op
Iteration   7: 894.154 ns/op
Iteration   8: 464.892 ns/op
Iteration   9: 560.075 ns/op
Iteration  10: 589.638 ns/op

# Run progress: 57.71% complete, ETA 00:16:14
# Fork: 2 of 2
# Warmup Iteration   1: 1324.564 ns/op
# Warmup Iteration   2: 6025.789 ns/op
# Warmup Iteration   3: 1549.561 ns/op
Iteration   1: 536.479 ns/op
Iteration   2: 767.256 ns/op
Iteration   3: 838.896 ns/op
Iteration   4: 39294.512 ns/op
Iteration   5: 827.737 ns/op
Iteration   6: 656.636 ns/op
Iteration   7: 877.095 ns/op
Iteration   8: 472.048 ns/op
Iteration   9: 557.035 ns/op
Iteration  10: 615.882 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4445.646 ±(99.9%) 10055.599 ns/op [Average]
  (min, avg, max) = (464.892, 4445.646, 39294.512), stdev = 11580.043
  CI (99.9%): [≈ 0, 14501.245] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 57.78% complete, ETA 00:16:13
# Fork: 1 of 2
# Warmup Iteration   1: 28359.308 ns/op
# Warmup Iteration   2: 40890.287 ns/op
# Warmup Iteration   3: 1326.938 ns/op
Iteration   1: 515.084 ns/op
Iteration   2: 476.234 ns/op
Iteration   3: 1604.876 ns/op
Iteration   4: 1638.369 ns/op
Iteration   5: 580.297 ns/op
Iteration   6: 464.356 ns/op
Iteration   7: 611.898 ns/op
Iteration   8: 920.003 ns/op
Iteration   9: 407.055 ns/op
Iteration  10: 500.675 ns/op

# Run progress: 57.85% complete, ETA 00:16:11
# Fork: 2 of 2
# Warmup Iteration   1: 37807.912 ns/op
# Warmup Iteration   2: 27659.830 ns/op
# Warmup Iteration   3: 630.956 ns/op
Iteration   1: 534.587 ns/op
Iteration   2: 483.681 ns/op
Iteration   3: 3846.883 ns/op
Iteration   4: 1586.721 ns/op
Iteration   5: 554.289 ns/op
Iteration   6: 460.843 ns/op
Iteration   7: 581.584 ns/op
Iteration   8: 906.854 ns/op
Iteration   9: 406.646 ns/op
Iteration  10: 495.897 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  878.842 ±(99.9%) 702.121 ns/op [Average]
  (min, avg, max) = (406.646, 878.842, 3846.883), stdev = 808.564
  CI (99.9%): [176.720, 1580.963] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 57.92% complete, ETA 00:16:09
# Fork: 1 of 2
# Warmup Iteration   1: 39035.909 ns/op
# Warmup Iteration   2: 45608.053 ns/op
# Warmup Iteration   3: 31604.926 ns/op
Iteration   1: 723.840 ns/op
Iteration   2: 615.918 ns/op
Iteration   3: 1051.457 ns/op
Iteration   4: 25901.912 ns/op
Iteration   5: 561.201 ns/op
Iteration   6: 543.748 ns/op
Iteration   7: 25631.746 ns/op
Iteration   8: 976.629 ns/op
Iteration   9: 459.883 ns/op
Iteration  10: 600.278 ns/op

# Run progress: 57.99% complete, ETA 00:16:08
# Fork: 2 of 2
# Warmup Iteration   1: 17107.897 ns/op
# Warmup Iteration   2: 49473.120 ns/op
# Warmup Iteration   3: 9166.929 ns/op
Iteration   1: 595.743 ns/op
Iteration   2: 496.072 ns/op
Iteration   3: 989.093 ns/op
Iteration   4: 24530.482 ns/op
Iteration   5: 537.820 ns/op
Iteration   6: 539.752 ns/op
Iteration   7: 27414.518 ns/op
Iteration   8: 968.065 ns/op
Iteration   9: 458.894 ns/op
Iteration  10: 606.297 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5710.167 ±(99.9%) 8990.946 ns/op [Average]
  (min, avg, max) = (458.894, 5710.167, 27414.518), stdev = 10353.987
  CI (99.9%): [≈ 0, 14701.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 58.06% complete, ETA 00:16:06
# Fork: 1 of 2
# Warmup Iteration   1: 2741.431 ns/op
# Warmup Iteration   2: 3765.421 ns/op
# Warmup Iteration   3: 1250.561 ns/op
Iteration   1: 2632.222 ns/op
Iteration   2: 1223.433 ns/op
Iteration   3: 1202.714 ns/op
Iteration   4: 1200.779 ns/op
Iteration   5: 1166.826 ns/op
Iteration   6: 1229.878 ns/op
Iteration   7: 1167.836 ns/op
Iteration   8: 1251.167 ns/op
Iteration   9: 1256.074 ns/op
Iteration  10: 1203.280 ns/op

# Run progress: 58.13% complete, ETA 00:16:05
# Fork: 2 of 2
# Warmup Iteration   1: 2343.141 ns/op
# Warmup Iteration   2: 5222.616 ns/op
# Warmup Iteration   3: 1256.179 ns/op
Iteration   1: 9573.493 ns/op
Iteration   2: 1238.363 ns/op
Iteration   3: 1203.588 ns/op
Iteration   4: 1215.894 ns/op
Iteration   5: 1165.356 ns/op
Iteration   6: 1246.104 ns/op
Iteration   7: 1168.345 ns/op
Iteration   8: 1314.244 ns/op
Iteration   9: 1293.756 ns/op
Iteration  10: 1202.175 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1707.776 ±(99.9%) 1631.215 ns/op [Average]
  (min, avg, max) = (1165.356, 1707.776, 9573.493), stdev = 1878.510
  CI (99.9%): [76.561, 3338.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 58.19% complete, ETA 00:16:03
# Fork: 1 of 2
# Warmup Iteration   1: 1392.000 ns/op
# Warmup Iteration   2: 31298.342 ns/op
# Warmup Iteration   3: 1083.580 ns/op
Iteration   1: 802.335 ns/op
Iteration   2: 841.569 ns/op
Iteration   3: 1068.539 ns/op
Iteration   4: 1234.000 ns/op
Iteration   5: 39760.318 ns/op
Iteration   6: 717.538 ns/op
Iteration   7: 992.736 ns/op
Iteration   8: 574.743 ns/op
Iteration   9: 820.953 ns/op
Iteration  10: 1069.244 ns/op

# Run progress: 58.26% complete, ETA 00:16:01
# Fork: 2 of 2
# Warmup Iteration   1: 1347.115 ns/op
# Warmup Iteration   2: 9171.538 ns/op
# Warmup Iteration   3: 1071.307 ns/op
Iteration   1: 805.738 ns/op
Iteration   2: 835.906 ns/op
Iteration   3: 1014.226 ns/op
Iteration   4: 1049.136 ns/op
Iteration   5: 38167.082 ns/op
Iteration   6: 748.889 ns/op
Iteration   7: 1047.629 ns/op
Iteration   8: 612.815 ns/op
Iteration   9: 856.612 ns/op
Iteration  10: 1124.882 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4707.244 ±(99.9%) 10176.764 ns/op [Average]
  (min, avg, max) = (574.743, 4707.244, 39760.318), stdev = 11719.576
  CI (99.9%): [≈ 0, 14884.008] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 58.33% complete, ETA 00:16:00
# Fork: 1 of 2
# Warmup Iteration   1: 22.363 ns/op
# Warmup Iteration   2: 25.795 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.992 ns/op
Iteration   4: 15.960 ns/op
Iteration   5: 15.681 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.120 ns/op
Iteration   9: 15.590 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 58.40% complete, ETA 00:15:58
# Fork: 2 of 2
# Warmup Iteration   1: 22.304 ns/op
# Warmup Iteration   2: 27.472 ns/op
# Warmup Iteration   3: 15.764 ns/op
Iteration   1: 15.591 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.990 ns/op
Iteration   4: 15.953 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.023 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.575, 16.023, 19.120), stdev = 1.069
  CI (99.9%): [15.095, 16.952] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 58.47% complete, ETA 00:15:57
# Fork: 1 of 2
# Warmup Iteration   1: 1942.721 ns/op
# Warmup Iteration   2: 834.555 ns/op
# Warmup Iteration   3: 646.878 ns/op
Iteration   1: 646.553 ns/op
Iteration   2: 646.775 ns/op
Iteration   3: 647.587 ns/op
Iteration   4: 647.418 ns/op
Iteration   5: 647.086 ns/op
Iteration   6: 646.828 ns/op
Iteration   7: 647.015 ns/op
Iteration   8: 651.419 ns/op
Iteration   9: 647.174 ns/op
Iteration  10: 646.471 ns/op

# Run progress: 58.54% complete, ETA 00:15:55
# Fork: 2 of 2
# Warmup Iteration   1: 1607.247 ns/op
# Warmup Iteration   2: 938.431 ns/op
# Warmup Iteration   3: 651.055 ns/op
Iteration   1: 650.755 ns/op
Iteration   2: 650.855 ns/op
Iteration   3: 651.620 ns/op
Iteration   4: 650.845 ns/op
Iteration   5: 651.274 ns/op
Iteration   6: 650.498 ns/op
Iteration   7: 650.688 ns/op
Iteration   8: 655.091 ns/op
Iteration   9: 651.277 ns/op
Iteration  10: 650.856 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  649.404 ±(99.9%) 2.116 ns/op [Average]
  (min, avg, max) = (646.471, 649.404, 655.091), stdev = 2.437
  CI (99.9%): [647.288, 651.521] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 58.61% complete, ETA 00:15:53
# Fork: 1 of 2
# Warmup Iteration   1: 8874.125 ns/op
# Warmup Iteration   2: 1292.322 ns/op
# Warmup Iteration   3: 1019.151 ns/op
Iteration   1: 1019.906 ns/op
Iteration   2: 1019.216 ns/op
Iteration   3: 1019.228 ns/op
Iteration   4: 1019.772 ns/op
Iteration   5: 1019.361 ns/op
Iteration   6: 1019.671 ns/op
Iteration   7: 1019.956 ns/op
Iteration   8: 1018.215 ns/op
Iteration   9: 1019.686 ns/op
Iteration  10: 1019.875 ns/op

# Run progress: 58.68% complete, ETA 00:15:52
# Fork: 2 of 2
# Warmup Iteration   1: 28803.441 ns/op
# Warmup Iteration   2: 1502.573 ns/op
# Warmup Iteration   3: 1122.093 ns/op
Iteration   1: 1027.931 ns/op
Iteration   2: 1027.728 ns/op
Iteration   3: 1030.104 ns/op
Iteration   4: 1030.214 ns/op
Iteration   5: 1028.852 ns/op
Iteration   6: 1028.518 ns/op
Iteration   7: 1028.480 ns/op
Iteration   8: 1029.333 ns/op
Iteration   9: 1030.051 ns/op
Iteration  10: 1029.132 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1024.261 ±(99.9%) 4.297 ns/op [Average]
  (min, avg, max) = (1018.215, 1024.261, 1030.214), stdev = 4.949
  CI (99.9%): [1019.964, 1028.559] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 58.75% complete, ETA 00:15:50
# Fork: 1 of 2
# Warmup Iteration   1: 10643.983 ns/op
# Warmup Iteration   2: 1552.441 ns/op
# Warmup Iteration   3: 1026.848 ns/op
Iteration   1: 1026.392 ns/op
Iteration   2: 1026.809 ns/op
Iteration   3: 1028.231 ns/op
Iteration   4: 1027.809 ns/op
Iteration   5: 1028.012 ns/op
Iteration   6: 1025.833 ns/op
Iteration   7: 1025.763 ns/op
Iteration   8: 1021.964 ns/op
Iteration   9: 1026.750 ns/op
Iteration  10: 1027.682 ns/op

# Run progress: 58.82% complete, ETA 00:15:49
# Fork: 2 of 2
# Warmup Iteration   1: 57541.822 ns/op
# Warmup Iteration   2: 1667.699 ns/op
# Warmup Iteration   3: 1194.186 ns/op
Iteration   1: 1026.334 ns/op
Iteration   2: 1033.052 ns/op
Iteration   3: 1026.069 ns/op
Iteration   4: 1024.835 ns/op
Iteration   5: 1025.597 ns/op
Iteration   6: 1027.247 ns/op
Iteration   7: 1032.328 ns/op
Iteration   8: 1036.354 ns/op
Iteration   9: 1038.456 ns/op
Iteration  10: 1026.010 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1028.076 ±(99.9%) 3.462 ns/op [Average]
  (min, avg, max) = (1021.964, 1028.076, 1038.456), stdev = 3.987
  CI (99.9%): [1024.615, 1031.538] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 58.89% complete, ETA 00:15:47
# Fork: 1 of 2
# Warmup Iteration   1: 1832.356 ns/op
# Warmup Iteration   2: 1330.439 ns/op
# Warmup Iteration   3: 1054.067 ns/op
Iteration   1: 1051.112 ns/op
Iteration   2: 1041.717 ns/op
Iteration   3: 1056.368 ns/op
Iteration   4: 1043.871 ns/op
Iteration   5: 1041.637 ns/op
Iteration   6: 1042.751 ns/op
Iteration   7: 1054.549 ns/op
Iteration   8: 1042.494 ns/op
Iteration   9: 1054.150 ns/op
Iteration  10: 1041.971 ns/op

# Run progress: 58.96% complete, ETA 00:15:45
# Fork: 2 of 2
# Warmup Iteration   1: 2025.879 ns/op
# Warmup Iteration   2: 1330.635 ns/op
# Warmup Iteration   3: 1037.684 ns/op
Iteration   1: 1037.686 ns/op
Iteration   2: 1052.057 ns/op
Iteration   3: 1049.981 ns/op
Iteration   4: 1054.229 ns/op
Iteration   5: 1037.688 ns/op
Iteration   6: 1051.287 ns/op
Iteration   7: 1038.275 ns/op
Iteration   8: 1036.269 ns/op
Iteration   9: 1038.226 ns/op
Iteration  10: 1037.411 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1045.186 ±(99.9%) 6.029 ns/op [Average]
  (min, avg, max) = (1036.269, 1045.186, 1056.368), stdev = 6.943
  CI (99.9%): [1039.158, 1051.215] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 59.03% complete, ETA 00:15:44
# Fork: 1 of 2
# Warmup Iteration   1: 11053.988 ns/op
# Warmup Iteration   2: 5744.328 ns/op
# Warmup Iteration   3: 3951.794 ns/op
Iteration   1: 3950.908 ns/op
Iteration   2: 3955.737 ns/op
Iteration   3: 3970.247 ns/op
Iteration   4: 3938.653 ns/op
Iteration   5: 3942.757 ns/op
Iteration   6: 3950.264 ns/op
Iteration   7: 3940.152 ns/op
Iteration   8: 3937.007 ns/op
Iteration   9: 3953.736 ns/op
Iteration  10: 3947.450 ns/op

# Run progress: 59.10% complete, ETA 00:15:42
# Fork: 2 of 2
# Warmup Iteration   1: 13835.785 ns/op
# Warmup Iteration   2: 5297.291 ns/op
# Warmup Iteration   3: 4250.023 ns/op
Iteration   1: 3847.977 ns/op
Iteration   2: 3851.676 ns/op
Iteration   3: 3851.852 ns/op
Iteration   4: 3834.731 ns/op
Iteration   5: 3829.080 ns/op
Iteration   6: 3841.481 ns/op
Iteration   7: 3831.791 ns/op
Iteration   8: 3835.547 ns/op
Iteration   9: 3839.655 ns/op
Iteration  10: 3836.663 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3894.368 ±(99.9%) 49.001 ns/op [Average]
  (min, avg, max) = (3829.080, 3894.368, 3970.247), stdev = 56.430
  CI (99.9%): [3845.367, 3943.369] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 59.17% complete, ETA 00:15:41
# Fork: 1 of 2
# Warmup Iteration   1: 22.820 ns/op
# Warmup Iteration   2: 24.512 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.958 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.586 ns/op
Iteration   8: 19.111 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 59.24% complete, ETA 00:15:39
# Fork: 2 of 2
# Warmup Iteration   1: 22.539 ns/op
# Warmup Iteration   2: 25.843 ns/op
# Warmup Iteration   3: 15.782 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.969 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.571 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.022 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.571, 16.022, 19.112), stdev = 1.068
  CI (99.9%): [15.095, 16.950] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 59.31% complete, ETA 00:15:37
# Fork: 1 of 2
# Warmup Iteration   1: 2558.922 ns/op
# Warmup Iteration   2: 1007.915 ns/op
# Warmup Iteration   3: 719.623 ns/op
Iteration   1: 724.982 ns/op
Iteration   2: 728.204 ns/op
Iteration   3: 724.720 ns/op
Iteration   4: 726.554 ns/op
Iteration   5: 728.220 ns/op
Iteration   6: 727.507 ns/op
Iteration   7: 726.428 ns/op
Iteration   8: 729.986 ns/op
Iteration   9: 726.851 ns/op
Iteration  10: 726.214 ns/op

# Run progress: 59.38% complete, ETA 00:15:36
# Fork: 2 of 2
# Warmup Iteration   1: 2557.417 ns/op
# Warmup Iteration   2: 1024.871 ns/op
# Warmup Iteration   3: 722.141 ns/op
Iteration   1: 727.241 ns/op
Iteration   2: 724.959 ns/op
Iteration   3: 723.421 ns/op
Iteration   4: 724.989 ns/op
Iteration   5: 724.896 ns/op
Iteration   6: 727.860 ns/op
Iteration   7: 729.462 ns/op
Iteration   8: 726.087 ns/op
Iteration   9: 727.334 ns/op
Iteration  10: 721.076 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  726.349 ±(99.9%) 1.809 ns/op [Average]
  (min, avg, max) = (721.076, 726.349, 729.986), stdev = 2.083
  CI (99.9%): [724.541, 728.158] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 59.44% complete, ETA 00:15:34
# Fork: 1 of 2
# Warmup Iteration   1: 7727.533 ns/op
# Warmup Iteration   2: 1156.360 ns/op
# Warmup Iteration   3: 848.825 ns/op
Iteration   1: 850.215 ns/op
Iteration   2: 849.525 ns/op
Iteration   3: 849.607 ns/op
Iteration   4: 850.119 ns/op
Iteration   5: 849.282 ns/op
Iteration   6: 849.834 ns/op
Iteration   7: 848.895 ns/op
Iteration   8: 848.828 ns/op
Iteration   9: 855.848 ns/op
Iteration  10: 849.835 ns/op

# Run progress: 59.51% complete, ETA 00:15:32
# Fork: 2 of 2
# Warmup Iteration   1: 7737.117 ns/op
# Warmup Iteration   2: 1155.036 ns/op
# Warmup Iteration   3: 845.202 ns/op
Iteration   1: 845.857 ns/op
Iteration   2: 846.105 ns/op
Iteration   3: 847.847 ns/op
Iteration   4: 846.324 ns/op
Iteration   5: 845.303 ns/op
Iteration   6: 846.134 ns/op
Iteration   7: 845.926 ns/op
Iteration   8: 847.427 ns/op
Iteration   9: 845.500 ns/op
Iteration  10: 846.810 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  848.261 ±(99.9%) 2.168 ns/op [Average]
  (min, avg, max) = (845.303, 848.261, 855.848), stdev = 2.497
  CI (99.9%): [846.093, 850.429] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 59.58% complete, ETA 00:15:31
# Fork: 1 of 2
# Warmup Iteration   1: 7749.035 ns/op
# Warmup Iteration   2: 1166.235 ns/op
# Warmup Iteration   3: 846.264 ns/op
Iteration   1: 846.000 ns/op
Iteration   2: 845.916 ns/op
Iteration   3: 847.110 ns/op
Iteration   4: 846.333 ns/op
Iteration   5: 845.953 ns/op
Iteration   6: 845.530 ns/op
Iteration   7: 846.019 ns/op
Iteration   8: 847.401 ns/op
Iteration   9: 845.207 ns/op
Iteration  10: 845.712 ns/op

# Run progress: 59.65% complete, ETA 00:15:29
# Fork: 2 of 2
# Warmup Iteration   1: 10984.059 ns/op
# Warmup Iteration   2: 1135.605 ns/op
# Warmup Iteration   3: 854.708 ns/op
Iteration   1: 854.825 ns/op
Iteration   2: 855.823 ns/op
Iteration   3: 854.003 ns/op
Iteration   4: 855.341 ns/op
Iteration   5: 855.209 ns/op
Iteration   6: 855.089 ns/op
Iteration   7: 853.658 ns/op
Iteration   8: 857.381 ns/op
Iteration   9: 854.949 ns/op
Iteration  10: 854.152 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  850.581 ±(99.9%) 4.046 ns/op [Average]
  (min, avg, max) = (845.207, 850.581, 857.381), stdev = 4.659
  CI (99.9%): [846.535, 854.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 59.72% complete, ETA 00:15:28
# Fork: 1 of 2
# Warmup Iteration   1: 1646.442 ns/op
# Warmup Iteration   2: 1196.004 ns/op
# Warmup Iteration   3: 927.940 ns/op
Iteration   1: 928.171 ns/op
Iteration   2: 927.728 ns/op
Iteration   3: 927.971 ns/op
Iteration   4: 929.962 ns/op
Iteration   5: 929.556 ns/op
Iteration   6: 929.436 ns/op
Iteration   7: 930.648 ns/op
Iteration   8: 929.147 ns/op
Iteration   9: 928.497 ns/op
Iteration  10: 930.063 ns/op

# Run progress: 59.79% complete, ETA 00:15:26
# Fork: 2 of 2
# Warmup Iteration   1: 1968.714 ns/op
# Warmup Iteration   2: 1212.481 ns/op
# Warmup Iteration   3: 927.740 ns/op
Iteration   1: 926.783 ns/op
Iteration   2: 935.848 ns/op
Iteration   3: 935.167 ns/op
Iteration   4: 935.159 ns/op
Iteration   5: 935.745 ns/op
Iteration   6: 930.476 ns/op
Iteration   7: 934.505 ns/op
Iteration   8: 935.388 ns/op
Iteration   9: 936.920 ns/op
Iteration  10: 929.882 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  931.353 ±(99.9%) 2.875 ns/op [Average]
  (min, avg, max) = (926.783, 931.353, 936.920), stdev = 3.311
  CI (99.9%): [928.478, 934.228] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 59.86% complete, ETA 00:15:25
# Fork: 1 of 2
# Warmup Iteration   1: 2490.409 ns/op
# Warmup Iteration   2: 1241.132 ns/op
# Warmup Iteration   3: 846.515 ns/op
Iteration   1: 849.604 ns/op
Iteration   2: 846.340 ns/op
Iteration   3: 867.649 ns/op
Iteration   4: 907.382 ns/op
Iteration   5: 848.541 ns/op
Iteration   6: 845.971 ns/op
Iteration   7: 846.682 ns/op
Iteration   8: 853.654 ns/op
Iteration   9: 852.159 ns/op
Iteration  10: 847.891 ns/op

# Run progress: 59.93% complete, ETA 00:15:23
# Fork: 2 of 2
# Warmup Iteration   1: 1835.872 ns/op
# Warmup Iteration   2: 1241.948 ns/op
# Warmup Iteration   3: 845.194 ns/op
Iteration   1: 844.365 ns/op
Iteration   2: 844.892 ns/op
Iteration   3: 845.532 ns/op
Iteration   4: 856.538 ns/op
Iteration   5: 844.468 ns/op
Iteration   6: 852.624 ns/op
Iteration   7: 849.715 ns/op
Iteration   8: 851.530 ns/op
Iteration   9: 855.756 ns/op
Iteration  10: 845.026 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  852.816 ±(99.9%) 12.166 ns/op [Average]
  (min, avg, max) = (844.365, 852.816, 907.382), stdev = 14.010
  CI (99.9%): [840.650, 864.982] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 60.00% complete, ETA 00:15:21
# Fork: 1 of 2
# Warmup Iteration   1: 22.027 ns/op
# Warmup Iteration   2: 24.096 ns/op
# Warmup Iteration   3: 15.769 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.956 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.137 ns/op
Iteration   9: 15.591 ns/op
Iteration  10: 15.584 ns/op

# Run progress: 60.07% complete, ETA 00:15:20
# Fork: 2 of 2
# Warmup Iteration   1: 22.198 ns/op
# Warmup Iteration   2: 25.944 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.952 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.592 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.023 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.575, 16.023, 19.137), stdev = 1.071
  CI (99.9%): [15.093, 16.954] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 60.14% complete, ETA 00:15:18
# Fork: 1 of 2
# Warmup Iteration   1: 2171.183 ns/op
# Warmup Iteration   2: 59116.217 ns/op
# Warmup Iteration   3: 2451.971 ns/op
Iteration   1: 51009.596 ns/op
Iteration   2: 45551.232 ns/op
Iteration   3: 51884.786 ns/op
Iteration   4: 1896.465 ns/op
Iteration   5: 710.957 ns/op
Iteration   6: 611.511 ns/op
Iteration   7: 681.011 ns/op
Iteration   8: 993.308 ns/op
Iteration   9: 1019.166 ns/op
Iteration  10: 646.436 ns/op

# Run progress: 60.21% complete, ETA 00:15:17
# Fork: 2 of 2
# Warmup Iteration   1: 2739.956 ns/op
# Warmup Iteration   2: 55648.709 ns/op
# Warmup Iteration   3: 2904.326 ns/op
Iteration   1: 43156.894 ns/op
Iteration   2: 44156.280 ns/op
Iteration   3: 43978.881 ns/op
Iteration   4: 1072.218 ns/op
Iteration   5: 698.274 ns/op
Iteration   6: 619.835 ns/op
Iteration   7: 669.028 ns/op
Iteration   8: 949.660 ns/op
Iteration   9: 1010.436 ns/op
Iteration  10: 642.943 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  14597.946 ±(99.9%) 18757.450 ns/op [Average]
  (min, avg, max) = (611.511, 14597.946, 51884.786), stdev = 21601.107
  CI (99.9%): [≈ 0, 33355.396] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 60.28% complete, ETA 00:15:15
# Fork: 1 of 2
# Warmup Iteration   1: 7418.747 ns/op
# Warmup Iteration   2: 1931.312 ns/op
# Warmup Iteration   3: 1356.335 ns/op
Iteration   1: 2470.500 ns/op
Iteration   2: 3902.548 ns/op
Iteration   3: 99595.312 ns/op
Iteration   4: 2226.983 ns/op
Iteration   5: 1016.219 ns/op
Iteration   6: 6090.179 ns/op
Iteration   7: 2506.639 ns/op
Iteration   8: 756.747 ns/op
Iteration   9: 963.361 ns/op
Iteration  10: 898.344 ns/op

# Run progress: 60.35% complete, ETA 00:15:13
# Fork: 2 of 2
# Warmup Iteration   1: 7481.148 ns/op
# Warmup Iteration   2: 2521.281 ns/op
# Warmup Iteration   3: 1333.556 ns/op
Iteration   1: 2388.357 ns/op
Iteration   2: 12556.871 ns/op
Iteration   3: 101440.522 ns/op
Iteration   4: 2943.467 ns/op
Iteration   5: 1058.540 ns/op
Iteration   6: 1263.005 ns/op
Iteration   7: 16602.769 ns/op
Iteration   8: 782.113 ns/op
Iteration   9: 962.137 ns/op
Iteration  10: 911.665 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  13066.814 ±(99.9%) 26217.992 ns/op [Average]
  (min, avg, max) = (756.747, 13066.814, 101440.522), stdev = 30192.679
  CI (99.9%): [≈ 0, 39284.806] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 60.42% complete, ETA 00:15:12
# Fork: 1 of 2
# Warmup Iteration   1: 7548.688 ns/op
# Warmup Iteration   2: 4487.242 ns/op
# Warmup Iteration   3: 1894.598 ns/op
Iteration   1: 827.955 ns/op
Iteration   2: 2219.705 ns/op
Iteration   3: 126057.985 ns/op
Iteration   4: 21883.302 ns/op
Iteration   5: 956.490 ns/op
Iteration   6: 839.456 ns/op
Iteration   7: 2718.582 ns/op
Iteration   8: 650.458 ns/op
Iteration   9: 996.445 ns/op
Iteration  10: 737.870 ns/op

# Run progress: 60.49% complete, ETA 00:15:10
# Fork: 2 of 2
# Warmup Iteration   1: 7299.146 ns/op
# Warmup Iteration   2: 6399.502 ns/op
# Warmup Iteration   3: 1463.894 ns/op
Iteration   1: 850.476 ns/op
Iteration   2: 2656.261 ns/op
Iteration   3: 112245.847 ns/op
Iteration   4: 14523.042 ns/op
Iteration   5: 964.054 ns/op
Iteration   6: 851.639 ns/op
Iteration   7: 4371.849 ns/op
Iteration   8: 655.016 ns/op
Iteration   9: 1002.850 ns/op
Iteration  10: 752.512 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  14838.090 ±(99.9%) 31387.065 ns/op [Average]
  (min, avg, max) = (650.458, 14838.090, 126057.985), stdev = 36145.391
  CI (99.9%): [≈ 0, 46225.155] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 60.56% complete, ETA 00:15:09
# Fork: 1 of 2
# Warmup Iteration   1: 1719.754 ns/op
# Warmup Iteration   2: 1368.428 ns/op
# Warmup Iteration   3: 1025.432 ns/op
Iteration   1: 974.086 ns/op
Iteration   2: 1000.005 ns/op
Iteration   3: 966.693 ns/op
Iteration   4: 946.353 ns/op
Iteration   5: 1045.291 ns/op
Iteration   6: 1057.012 ns/op
Iteration   7: 1007.637 ns/op
Iteration   8: 1068.211 ns/op
Iteration   9: 1069.682 ns/op
Iteration  10: 1028.301 ns/op

# Run progress: 60.62% complete, ETA 00:15:07
# Fork: 2 of 2
# Warmup Iteration   1: 2068.379 ns/op
# Warmup Iteration   2: 1365.851 ns/op
# Warmup Iteration   3: 1007.485 ns/op
Iteration   1: 972.595 ns/op
Iteration   2: 994.769 ns/op
Iteration   3: 969.718 ns/op
Iteration   4: 938.425 ns/op
Iteration   5: 1034.040 ns/op
Iteration   6: 1056.813 ns/op
Iteration   7: 1020.958 ns/op
Iteration   8: 1068.607 ns/op
Iteration   9: 1065.018 ns/op
Iteration  10: 1007.155 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1014.568 ±(99.9%) 37.472 ns/op [Average]
  (min, avg, max) = (938.425, 1014.568, 1069.682), stdev = 43.153
  CI (99.9%): [977.096, 1052.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 60.69% complete, ETA 00:15:05
# Fork: 1 of 2
# Warmup Iteration   1: 9815.750 ns/op
# Warmup Iteration   2: 4404.267 ns/op
# Warmup Iteration   3: 3438.612 ns/op
Iteration   1: 3433.143 ns/op
Iteration   2: 3452.426 ns/op
Iteration   3: 3469.042 ns/op
Iteration   4: 3423.083 ns/op
Iteration   5: 3421.280 ns/op
Iteration   6: 3434.148 ns/op
Iteration   7: 3427.881 ns/op
Iteration   8: 3427.887 ns/op
Iteration   9: 3600.787 ns/op
Iteration  10: 3429.169 ns/op

# Run progress: 60.76% complete, ETA 00:15:04
# Fork: 2 of 2
# Warmup Iteration   1: 10744.288 ns/op
# Warmup Iteration   2: 5308.702 ns/op
# Warmup Iteration   3: 3752.536 ns/op
Iteration   1: 3718.936 ns/op
Iteration   2: 3743.961 ns/op
Iteration   3: 3782.584 ns/op
Iteration   4: 3711.722 ns/op
Iteration   5: 3739.547 ns/op
Iteration   6: 3758.195 ns/op
Iteration   7: 3725.468 ns/op
Iteration   8: 3744.138 ns/op
Iteration   9: 3898.943 ns/op
Iteration  10: 3740.282 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3604.131 ±(99.9%) 143.152 ns/op [Average]
  (min, avg, max) = (3421.280, 3604.131, 3898.943), stdev = 164.854
  CI (99.9%): [3460.979, 3747.283] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 60.83% complete, ETA 00:15:02
# Fork: 1 of 2
# Warmup Iteration   1: 22.388 ns/op
# Warmup Iteration   2: 26.042 ns/op
# Warmup Iteration   3: 15.788 ns/op
Iteration   1: 15.585 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 60.90% complete, ETA 00:15:01
# Fork: 2 of 2
# Warmup Iteration   1: 22.003 ns/op
# Warmup Iteration   2: 25.587 ns/op
# Warmup Iteration   3: 15.766 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.565 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.941 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.572 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.098 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.572 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.565, 16.017, 19.106), stdev = 1.066
  CI (99.9%): [15.091, 16.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 60.97% complete, ETA 00:14:59
# Fork: 1 of 2
# Warmup Iteration   1: 341.128 ns/op
# Warmup Iteration   2: 331.228 ns/op
# Warmup Iteration   3: 227.605 ns/op
Iteration   1: 227.662 ns/op
Iteration   2: 227.643 ns/op
Iteration   3: 228.709 ns/op
Iteration   4: 237.579 ns/op
Iteration   5: 227.583 ns/op
Iteration   6: 227.607 ns/op
Iteration   7: 228.144 ns/op
Iteration   8: 236.501 ns/op
Iteration   9: 227.876 ns/op
Iteration  10: 227.479 ns/op

# Run progress: 61.04% complete, ETA 00:14:57
# Fork: 2 of 2
# Warmup Iteration   1: 336.949 ns/op
# Warmup Iteration   2: 331.974 ns/op
# Warmup Iteration   3: 227.803 ns/op
Iteration   1: 227.628 ns/op
Iteration   2: 228.284 ns/op
Iteration   3: 229.139 ns/op
Iteration   4: 237.763 ns/op
Iteration   5: 227.942 ns/op
Iteration   6: 227.857 ns/op
Iteration   7: 227.738 ns/op
Iteration   8: 237.239 ns/op
Iteration   9: 227.916 ns/op
Iteration  10: 227.721 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  229.801 ±(99.9%) 3.351 ns/op [Average]
  (min, avg, max) = (227.479, 229.801, 237.763), stdev = 3.859
  CI (99.9%): [226.450, 233.151] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 61.11% complete, ETA 00:14:56
# Fork: 1 of 2
# Warmup Iteration   1: 616.819 ns/op
# Warmup Iteration   2: 411.446 ns/op
# Warmup Iteration   3: 315.655 ns/op
Iteration   1: 315.847 ns/op
Iteration   2: 315.819 ns/op
Iteration   3: 317.267 ns/op
Iteration   4: 319.378 ns/op
Iteration   5: 316.422 ns/op
Iteration   6: 315.789 ns/op
Iteration   7: 315.674 ns/op
Iteration   8: 382.533 ns/op
Iteration   9: 315.957 ns/op
Iteration  10: 315.817 ns/op

# Run progress: 61.18% complete, ETA 00:14:54
# Fork: 2 of 2
# Warmup Iteration   1: 616.554 ns/op
# Warmup Iteration   2: 437.405 ns/op
# Warmup Iteration   3: 314.896 ns/op
Iteration   1: 314.191 ns/op
Iteration   2: 314.721 ns/op
Iteration   3: 317.036 ns/op
Iteration   4: 316.935 ns/op
Iteration   5: 313.541 ns/op
Iteration   6: 313.989 ns/op
Iteration   7: 313.923 ns/op
Iteration   8: 318.247 ns/op
Iteration   9: 313.759 ns/op
Iteration  10: 313.833 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  319.034 ±(99.9%) 13.051 ns/op [Average]
  (min, avg, max) = (313.541, 319.034, 382.533), stdev = 15.030
  CI (99.9%): [305.983, 332.085] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 61.25% complete, ETA 00:14:53
# Fork: 1 of 2
# Warmup Iteration   1: 860.401 ns/op
# Warmup Iteration   2: 393.289 ns/op
# Warmup Iteration   3: 293.412 ns/op
Iteration   1: 293.342 ns/op
Iteration   2: 293.218 ns/op
Iteration   3: 295.120 ns/op
Iteration   4: 293.652 ns/op
Iteration   5: 293.023 ns/op
Iteration   6: 292.950 ns/op
Iteration   7: 292.925 ns/op
Iteration   8: 293.455 ns/op
Iteration   9: 293.426 ns/op
Iteration  10: 293.166 ns/op

# Run progress: 61.32% complete, ETA 00:14:51
# Fork: 2 of 2
# Warmup Iteration   1: 618.235 ns/op
# Warmup Iteration   2: 397.162 ns/op
# Warmup Iteration   3: 303.363 ns/op
Iteration   1: 302.766 ns/op
Iteration   2: 303.294 ns/op
Iteration   3: 303.457 ns/op
Iteration   4: 309.810 ns/op
Iteration   5: 304.170 ns/op
Iteration   6: 304.859 ns/op
Iteration   7: 302.353 ns/op
Iteration   8: 307.135 ns/op
Iteration   9: 302.019 ns/op
Iteration  10: 302.783 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  298.846 ±(99.9%) 5.059 ns/op [Average]
  (min, avg, max) = (292.925, 298.846, 309.810), stdev = 5.826
  CI (99.9%): [293.787, 303.906] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 61.39% complete, ETA 00:14:49
# Fork: 1 of 2
# Warmup Iteration   1: 387.103 ns/op
# Warmup Iteration   2: 349.031 ns/op
# Warmup Iteration   3: 268.355 ns/op
Iteration   1: 268.351 ns/op
Iteration   2: 268.372 ns/op
Iteration   3: 268.182 ns/op
Iteration   4: 268.557 ns/op
Iteration   5: 268.327 ns/op
Iteration   6: 268.287 ns/op
Iteration   7: 268.266 ns/op
Iteration   8: 268.339 ns/op
Iteration   9: 268.290 ns/op
Iteration  10: 268.327 ns/op

# Run progress: 61.46% complete, ETA 00:14:48
# Fork: 2 of 2
# Warmup Iteration   1: 388.571 ns/op
# Warmup Iteration   2: 351.227 ns/op
# Warmup Iteration   3: 268.269 ns/op
Iteration   1: 268.416 ns/op
Iteration   2: 268.456 ns/op
Iteration   3: 268.369 ns/op
Iteration   4: 268.480 ns/op
Iteration   5: 268.290 ns/op
Iteration   6: 268.393 ns/op
Iteration   7: 268.317 ns/op
Iteration   8: 268.311 ns/op
Iteration   9: 268.330 ns/op
Iteration  10: 268.302 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  268.348 ±(99.9%) 0.072 ns/op [Average]
  (min, avg, max) = (268.182, 268.348, 268.557), stdev = 0.083
  CI (99.9%): [268.276, 268.420] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 61.53% complete, ETA 00:14:46
# Fork: 1 of 2
# Warmup Iteration   1: 272.991 ns/op
# Warmup Iteration   2: 212.563 ns/op
# Warmup Iteration   3: 131.777 ns/op
Iteration   1: 131.670 ns/op
Iteration   2: 131.698 ns/op
Iteration   3: 131.613 ns/op
Iteration   4: 131.825 ns/op
Iteration   5: 131.777 ns/op
Iteration   6: 131.620 ns/op
Iteration   7: 131.636 ns/op
Iteration   8: 134.482 ns/op
Iteration   9: 135.850 ns/op
Iteration  10: 131.657 ns/op

# Run progress: 61.60% complete, ETA 00:14:45
# Fork: 2 of 2
# Warmup Iteration   1: 328.765 ns/op
# Warmup Iteration   2: 217.068 ns/op
# Warmup Iteration   3: 131.978 ns/op
Iteration   1: 131.833 ns/op
Iteration   2: 131.888 ns/op
Iteration   3: 131.662 ns/op
Iteration   4: 131.777 ns/op
Iteration   5: 131.683 ns/op
Iteration   6: 131.856 ns/op
Iteration   7: 131.810 ns/op
Iteration   8: 134.694 ns/op
Iteration   9: 135.812 ns/op
Iteration  10: 131.592 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  132.422 ±(99.9%) 1.269 ns/op [Average]
  (min, avg, max) = (131.592, 132.422, 135.850), stdev = 1.461
  CI (99.9%): [131.153, 133.691] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 61.67% complete, ETA 00:14:43
# Fork: 1 of 2
# Warmup Iteration   1: 22.835 ns/op
# Warmup Iteration   2: 22.721 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.572 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.949 ns/op
Iteration   5: 15.672 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.573 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.576 ns/op

# Run progress: 61.74% complete, ETA 00:14:41
# Fork: 2 of 2
# Warmup Iteration   1: 22.572 ns/op
# Warmup Iteration   2: 25.974 ns/op
# Warmup Iteration   3: 15.783 ns/op
Iteration   1: 15.575 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.962 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.581 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (15.572, 16.019, 19.117), stdev = 1.071
  CI (99.9%): [15.089, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 61.81% complete, ETA 00:14:40
# Fork: 1 of 2
# Warmup Iteration   1: 1621.584 ns/op
# Warmup Iteration   2: 9378.832 ns/op
# Warmup Iteration   3: 610.704 ns/op
Iteration   1: 30201.070 ns/op
Iteration   2: 580.018 ns/op
Iteration   3: 30855.585 ns/op
Iteration   4: 657.668 ns/op
Iteration   5: 542.024 ns/op
Iteration   6: 623.181 ns/op
Iteration   7: 640.254 ns/op
Iteration   8: 538.774 ns/op
Iteration   9: 557.937 ns/op
Iteration  10: 613.384 ns/op

# Run progress: 61.88% complete, ETA 00:14:38
# Fork: 2 of 2
# Warmup Iteration   1: 1262.398 ns/op
# Warmup Iteration   2: 26916.203 ns/op
# Warmup Iteration   3: 610.887 ns/op
Iteration   1: 27043.479 ns/op
Iteration   2: 577.891 ns/op
Iteration   3: 36182.097 ns/op
Iteration   4: 648.090 ns/op
Iteration   5: 539.355 ns/op
Iteration   6: 619.488 ns/op
Iteration   7: 635.570 ns/op
Iteration   8: 535.617 ns/op
Iteration   9: 554.855 ns/op
Iteration  10: 602.693 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6687.452 ±(99.9%) 10940.224 ns/op [Average]
  (min, avg, max) = (535.617, 6687.452, 36182.097), stdev = 12598.778
  CI (99.9%): [≈ 0, 17627.675] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 61.94% complete, ETA 00:14:37
# Fork: 1 of 2
# Warmup Iteration   1: 7512.345 ns/op
# Warmup Iteration   2: 25813.113 ns/op
# Warmup Iteration   3: 57033.623 ns/op
Iteration   1: 593.279 ns/op
Iteration   2: 593.579 ns/op
Iteration   3: 18432.059 ns/op
Iteration   4: 766.514 ns/op
Iteration   5: 737.330 ns/op
Iteration   6: 616.189 ns/op
Iteration   7: 3331.301 ns/op
Iteration   8: 743.482 ns/op
Iteration   9: 603.432 ns/op
Iteration  10: 584.874 ns/op

# Run progress: 62.01% complete, ETA 00:14:35
# Fork: 2 of 2
# Warmup Iteration   1: 5042.202 ns/op
# Warmup Iteration   2: 61784.199 ns/op
# Warmup Iteration   3: 25316.445 ns/op
Iteration   1: 923.715 ns/op
Iteration   2: 600.147 ns/op
Iteration   3: 1838.938 ns/op
Iteration   4: 742.111 ns/op
Iteration   5: 713.608 ns/op
Iteration   6: 603.947 ns/op
Iteration   7: 1402.761 ns/op
Iteration   8: 745.812 ns/op
Iteration   9: 604.293 ns/op
Iteration  10: 583.413 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1788.039 ±(99.9%) 3448.312 ns/op [Average]
  (min, avg, max) = (583.413, 1788.039, 18432.059), stdev = 3971.081
  CI (99.9%): [≈ 0, 5236.351] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 62.08% complete, ETA 00:14:33
# Fork: 1 of 2
# Warmup Iteration   1: 7545.930 ns/op
# Warmup Iteration   2: 49198.060 ns/op
# Warmup Iteration   3: 55715.785 ns/op
Iteration   1: 667.527 ns/op
Iteration   2: 630.540 ns/op
Iteration   3: 14284.848 ns/op
Iteration   4: 742.455 ns/op
Iteration   5: 707.199 ns/op
Iteration   6: 589.865 ns/op
Iteration   7: 1373.552 ns/op
Iteration   8: 746.047 ns/op
Iteration   9: 599.224 ns/op
Iteration  10: 577.201 ns/op

# Run progress: 62.15% complete, ETA 00:14:32
# Fork: 2 of 2
# Warmup Iteration   1: 7632.534 ns/op
# Warmup Iteration   2: 60801.368 ns/op
# Warmup Iteration   3: 11442.287 ns/op
Iteration   1: 564.209 ns/op
Iteration   2: 562.971 ns/op
Iteration   3: 6423.064 ns/op
Iteration   4: 748.293 ns/op
Iteration   5: 706.076 ns/op
Iteration   6: 595.155 ns/op
Iteration   7: 1016.666 ns/op
Iteration   8: 740.225 ns/op
Iteration   9: 610.190 ns/op
Iteration  10: 577.543 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1673.143 ±(99.9%) 2810.534 ns/op [Average]
  (min, avg, max) = (562.971, 1673.143, 14284.848), stdev = 3236.615
  CI (99.9%): [≈ 0, 4483.676] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 62.22% complete, ETA 00:14:30
# Fork: 1 of 2
# Warmup Iteration   1: 1131.592 ns/op
# Warmup Iteration   2: 58459.572 ns/op
# Warmup Iteration   3: 977.737 ns/op
Iteration   1: 513.018 ns/op
Iteration   2: 548.163 ns/op
Iteration   3: 597.365 ns/op
Iteration   4: 649.803 ns/op
Iteration   5: 692.615 ns/op
Iteration   6: 605.721 ns/op
Iteration   7: 623.363 ns/op
Iteration   8: 566.151 ns/op
Iteration   9: 592.653 ns/op
Iteration  10: 632.439 ns/op

# Run progress: 62.29% complete, ETA 00:14:29
# Fork: 2 of 2
# Warmup Iteration   1: 833.187 ns/op
# Warmup Iteration   2: 49198.727 ns/op
# Warmup Iteration   3: 1066.121 ns/op
Iteration   1: 498.498 ns/op
Iteration   2: 550.103 ns/op
Iteration   3: 598.906 ns/op
Iteration   4: 651.710 ns/op
Iteration   5: 694.515 ns/op
Iteration   6: 604.151 ns/op
Iteration   7: 626.606 ns/op
Iteration   8: 566.329 ns/op
Iteration   9: 593.879 ns/op
Iteration  10: 635.120 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  602.055 ±(99.9%) 45.250 ns/op [Average]
  (min, avg, max) = (498.498, 602.055, 694.515), stdev = 52.110
  CI (99.9%): [556.805, 647.306] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 62.36% complete, ETA 00:14:27
# Fork: 1 of 2
# Warmup Iteration   1: 1937.827 ns/op
# Warmup Iteration   2: 32575.564 ns/op
# Warmup Iteration   3: 1238.819 ns/op
Iteration   1: 844.162 ns/op
Iteration   2: 952.087 ns/op
Iteration   3: 1092.124 ns/op
Iteration   4: 1193.189 ns/op
Iteration   5: 44286.248 ns/op
Iteration   6: 7354.671 ns/op
Iteration   7: 1216.565 ns/op
Iteration   8: 699.963 ns/op
Iteration   9: 901.381 ns/op
Iteration  10: 1237.469 ns/op

# Run progress: 62.43% complete, ETA 00:14:25
# Fork: 2 of 2
# Warmup Iteration   1: 1866.584 ns/op
# Warmup Iteration   2: 32767.142 ns/op
# Warmup Iteration   3: 1211.631 ns/op
Iteration   1: 841.265 ns/op
Iteration   2: 925.865 ns/op
Iteration   3: 1085.234 ns/op
Iteration   4: 1191.555 ns/op
Iteration   5: 33341.270 ns/op
Iteration   6: 33329.983 ns/op
Iteration   7: 1207.170 ns/op
Iteration   8: 696.767 ns/op
Iteration   9: 884.218 ns/op
Iteration  10: 1226.842 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6725.402 ±(99.9%) 11530.739 ns/op [Average]
  (min, avg, max) = (696.767, 6725.402, 44286.248), stdev = 13278.816
  CI (99.9%): [≈ 0, 18256.140] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 62.50% complete, ETA 00:14:24
# Fork: 1 of 2
# Warmup Iteration   1: 22.055 ns/op
# Warmup Iteration   2: 26.139 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.972 ns/op
Iteration   4: 15.937 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.085 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 62.57% complete, ETA 00:14:22
# Fork: 2 of 2
# Warmup Iteration   1: 22.639 ns/op
# Warmup Iteration   2: 25.774 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.676 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.584 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.924 ns/op [Average]
  (min, avg, max) = (15.574, 16.017, 19.110), stdev = 1.064
  CI (99.9%): [15.093, 16.941] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 62.64% complete, ETA 00:14:21
# Fork: 1 of 2
# Warmup Iteration   1: 2687.943 ns/op
# Warmup Iteration   2: 1139.487 ns/op
# Warmup Iteration   3: 796.008 ns/op
Iteration   1: 796.339 ns/op
Iteration   2: 796.194 ns/op
Iteration   3: 797.590 ns/op
Iteration   4: 797.157 ns/op
Iteration   5: 797.725 ns/op
Iteration   6: 796.260 ns/op
Iteration   7: 795.649 ns/op
Iteration   8: 799.925 ns/op
Iteration   9: 797.440 ns/op
Iteration  10: 796.110 ns/op

# Run progress: 62.71% complete, ETA 00:14:19
# Fork: 2 of 2
# Warmup Iteration   1: 2704.980 ns/op
# Warmup Iteration   2: 1114.659 ns/op
# Warmup Iteration   3: 790.353 ns/op
Iteration   1: 790.441 ns/op
Iteration   2: 790.462 ns/op
Iteration   3: 790.507 ns/op
Iteration   4: 791.134 ns/op
Iteration   5: 789.820 ns/op
Iteration   6: 790.336 ns/op
Iteration   7: 790.562 ns/op
Iteration   8: 792.900 ns/op
Iteration   9: 790.248 ns/op
Iteration  10: 790.201 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  793.850 ±(99.9%) 2.980 ns/op [Average]
  (min, avg, max) = (789.820, 793.850, 799.925), stdev = 3.432
  CI (99.9%): [790.870, 796.830] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 62.78% complete, ETA 00:14:17
# Fork: 1 of 2
# Warmup Iteration   1: 14189.469 ns/op
# Warmup Iteration   2: 1070.782 ns/op
# Warmup Iteration   3: 918.659 ns/op
Iteration   1: 843.821 ns/op
Iteration   2: 843.539 ns/op
Iteration   3: 844.361 ns/op
Iteration   4: 845.435 ns/op
Iteration   5: 843.799 ns/op
Iteration   6: 843.764 ns/op
Iteration   7: 843.738 ns/op
Iteration   8: 845.079 ns/op
Iteration   9: 843.446 ns/op
Iteration  10: 843.696 ns/op

# Run progress: 62.85% complete, ETA 00:14:16
# Fork: 2 of 2
# Warmup Iteration   1: 11278.035 ns/op
# Warmup Iteration   2: 1223.298 ns/op
# Warmup Iteration   3: 849.615 ns/op
Iteration   1: 849.511 ns/op
Iteration   2: 849.517 ns/op
Iteration   3: 848.957 ns/op
Iteration   4: 849.722 ns/op
Iteration   5: 849.435 ns/op
Iteration   6: 849.557 ns/op
Iteration   7: 849.281 ns/op
Iteration   8: 849.809 ns/op
Iteration   9: 850.692 ns/op
Iteration  10: 849.373 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  846.827 ±(99.9%) 2.506 ns/op [Average]
  (min, avg, max) = (843.446, 846.827, 850.692), stdev = 2.885
  CI (99.9%): [844.321, 849.332] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 62.92% complete, ETA 00:14:14
# Fork: 1 of 2
# Warmup Iteration   1: 12387.671 ns/op
# Warmup Iteration   2: 1075.179 ns/op
# Warmup Iteration   3: 921.020 ns/op
Iteration   1: 844.837 ns/op
Iteration   2: 843.807 ns/op
Iteration   3: 844.430 ns/op
Iteration   4: 844.501 ns/op
Iteration   5: 843.271 ns/op
Iteration   6: 843.988 ns/op
Iteration   7: 844.206 ns/op
Iteration   8: 844.558 ns/op
Iteration   9: 844.077 ns/op
Iteration  10: 844.732 ns/op

# Run progress: 62.99% complete, ETA 00:14:13
# Fork: 2 of 2
# Warmup Iteration   1: 44198.088 ns/op
# Warmup Iteration   2: 1363.124 ns/op
# Warmup Iteration   3: 1011.079 ns/op
Iteration   1: 866.175 ns/op
Iteration   2: 866.014 ns/op
Iteration   3: 866.958 ns/op
Iteration   4: 884.418 ns/op
Iteration   5: 866.200 ns/op
Iteration   6: 865.962 ns/op
Iteration   7: 865.749 ns/op
Iteration   8: 866.756 ns/op
Iteration   9: 866.083 ns/op
Iteration  10: 865.867 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  856.129 ±(99.9%) 11.144 ns/op [Average]
  (min, avg, max) = (843.271, 856.129, 884.418), stdev = 12.833
  CI (99.9%): [844.986, 867.273] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 63.06% complete, ETA 00:14:11
# Fork: 1 of 2
# Warmup Iteration   1: 1602.997 ns/op
# Warmup Iteration   2: 1287.805 ns/op
# Warmup Iteration   3: 1001.029 ns/op
Iteration   1: 1002.814 ns/op
Iteration   2: 1001.411 ns/op
Iteration   3: 1002.269 ns/op
Iteration   4: 1003.032 ns/op
Iteration   5: 1001.403 ns/op
Iteration   6: 1001.564 ns/op
Iteration   7: 1001.353 ns/op
Iteration   8: 1006.774 ns/op
Iteration   9: 1000.272 ns/op
Iteration  10: 1001.653 ns/op

# Run progress: 63.13% complete, ETA 00:14:09
# Fork: 2 of 2
# Warmup Iteration   1: 1931.429 ns/op
# Warmup Iteration   2: 1414.304 ns/op
# Warmup Iteration   3: 998.758 ns/op
Iteration   1: 998.960 ns/op
Iteration   2: 1008.929 ns/op
Iteration   3: 999.669 ns/op
Iteration   4: 1012.667 ns/op
Iteration   5: 1007.558 ns/op
Iteration   6: 999.394 ns/op
Iteration   7: 999.189 ns/op
Iteration   8: 1020.566 ns/op
Iteration   9: 999.311 ns/op
Iteration  10: 1012.977 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1004.088 ±(99.9%) 5.025 ns/op [Average]
  (min, avg, max) = (998.960, 1004.088, 1020.566), stdev = 5.787
  CI (99.9%): [999.063, 1009.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 63.19% complete, ETA 00:14:08
# Fork: 1 of 2
# Warmup Iteration   1: 10256.510 ns/op
# Warmup Iteration   2: 5198.178 ns/op
# Warmup Iteration   3: 3678.616 ns/op
Iteration   1: 3678.726 ns/op
Iteration   2: 3678.940 ns/op
Iteration   3: 3684.681 ns/op
Iteration   4: 3668.190 ns/op
Iteration   5: 3667.094 ns/op
Iteration   6: 3676.301 ns/op
Iteration   7: 3669.301 ns/op
Iteration   8: 3678.298 ns/op
Iteration   9: 3686.614 ns/op
Iteration  10: 3667.420 ns/op

# Run progress: 63.26% complete, ETA 00:14:06
# Fork: 2 of 2
# Warmup Iteration   1: 13973.470 ns/op
# Warmup Iteration   2: 5341.962 ns/op
# Warmup Iteration   3: 4227.279 ns/op
Iteration   1: 3868.297 ns/op
Iteration   2: 3865.966 ns/op
Iteration   3: 3877.555 ns/op
Iteration   4: 3868.702 ns/op
Iteration   5: 3858.995 ns/op
Iteration   6: 3870.339 ns/op
Iteration   7: 3855.562 ns/op
Iteration   8: 3866.371 ns/op
Iteration   9: 3881.962 ns/op
Iteration  10: 3855.087 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3771.220 ±(99.9%) 85.497 ns/op [Average]
  (min, avg, max) = (3667.094, 3771.220, 3881.962), stdev = 98.458
  CI (99.9%): [3685.723, 3856.717] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 63.33% complete, ETA 00:14:05
# Fork: 1 of 2
# Warmup Iteration   1: 22.220 ns/op
# Warmup Iteration   2: 26.048 ns/op
# Warmup Iteration   3: 15.758 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.993 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.577 ns/op

# Run progress: 63.40% complete, ETA 00:14:03
# Fork: 2 of 2
# Warmup Iteration   1: 22.268 ns/op
# Warmup Iteration   2: 24.875 ns/op
# Warmup Iteration   3: 15.777 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.973 ns/op
Iteration   4: 15.952 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.576, 16.019, 19.105), stdev = 1.067
  CI (99.9%): [15.093, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 63.47% complete, ETA 00:14:01
# Fork: 1 of 2
# Warmup Iteration   1: 2978.316 ns/op
# Warmup Iteration   2: 969.387 ns/op
# Warmup Iteration   3: 685.245 ns/op
Iteration   1: 685.432 ns/op
Iteration   2: 685.545 ns/op
Iteration   3: 683.946 ns/op
Iteration   4: 685.715 ns/op
Iteration   5: 683.601 ns/op
Iteration   6: 684.813 ns/op
Iteration   7: 686.465 ns/op
Iteration   8: 687.612 ns/op
Iteration   9: 684.971 ns/op
Iteration  10: 684.611 ns/op

# Run progress: 63.54% complete, ETA 00:14:00
# Fork: 2 of 2
# Warmup Iteration   1: 2716.944 ns/op
# Warmup Iteration   2: 958.487 ns/op
# Warmup Iteration   3: 688.324 ns/op
Iteration   1: 688.339 ns/op
Iteration   2: 689.171 ns/op
Iteration   3: 689.050 ns/op
Iteration   4: 688.932 ns/op
Iteration   5: 688.748 ns/op
Iteration   6: 689.192 ns/op
Iteration   7: 688.002 ns/op
Iteration   8: 695.088 ns/op
Iteration   9: 688.310 ns/op
Iteration  10: 688.727 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  687.313 ±(99.9%) 2.305 ns/op [Average]
  (min, avg, max) = (683.601, 687.313, 695.088), stdev = 2.654
  CI (99.9%): [685.009, 689.618] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 63.61% complete, ETA 00:13:58
# Fork: 1 of 2
# Warmup Iteration   1: 35554.259 ns/op
# Warmup Iteration   2: 1835.054 ns/op
# Warmup Iteration   3: 1192.853 ns/op
Iteration   1: 1022.788 ns/op
Iteration   2: 1023.007 ns/op
Iteration   3: 1023.269 ns/op
Iteration   4: 1048.199 ns/op
Iteration   5: 1023.229 ns/op
Iteration   6: 1023.086 ns/op
Iteration   7: 1022.665 ns/op
Iteration   8: 1021.711 ns/op
Iteration   9: 1022.661 ns/op
Iteration  10: 1023.156 ns/op

# Run progress: 63.68% complete, ETA 00:13:57
# Fork: 2 of 2
# Warmup Iteration   1: 10895.372 ns/op
# Warmup Iteration   2: 1758.808 ns/op
# Warmup Iteration   3: 1020.842 ns/op
Iteration   1: 1024.028 ns/op
Iteration   2: 1021.125 ns/op
Iteration   3: 1021.380 ns/op
Iteration   4: 1073.192 ns/op
Iteration   5: 1021.372 ns/op
Iteration   6: 1021.134 ns/op
Iteration   7: 1021.139 ns/op
Iteration   8: 1055.474 ns/op
Iteration   9: 1070.330 ns/op
Iteration  10: 1037.700 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1031.032 ±(99.9%) 14.630 ns/op [Average]
  (min, avg, max) = (1021.125, 1031.032, 1073.192), stdev = 16.848
  CI (99.9%): [1016.402, 1045.663] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 63.75% complete, ETA 00:13:55
# Fork: 1 of 2
# Warmup Iteration   1: 13134.663 ns/op
# Warmup Iteration   2: 1460.174 ns/op
# Warmup Iteration   3: 1132.349 ns/op
Iteration   1: 1304.640 ns/op
Iteration   2: 1032.132 ns/op
Iteration   3: 1022.277 ns/op
Iteration   4: 1271.780 ns/op
Iteration   5: 1265.776 ns/op
Iteration   6: 1226.880 ns/op
Iteration   7: 1255.772 ns/op
Iteration   8: 1192.563 ns/op
Iteration   9: 1315.538 ns/op
Iteration  10: 1227.659 ns/op

# Run progress: 63.82% complete, ETA 00:13:53
# Fork: 2 of 2
# Warmup Iteration   1: 60044.706 ns/op
# Warmup Iteration   2: 1921.862 ns/op
# Warmup Iteration   3: 1491.498 ns/op
Iteration   1: 1280.184 ns/op
Iteration   2: 1233.873 ns/op
Iteration   3: 1313.082 ns/op
Iteration   4: 1058.782 ns/op
Iteration   5: 1034.290 ns/op
Iteration   6: 1034.560 ns/op
Iteration   7: 1047.820 ns/op
Iteration   8: 1034.003 ns/op
Iteration   9: 1053.292 ns/op
Iteration  10: 1034.516 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1161.971 ±(99.9%) 102.364 ns/op [Average]
  (min, avg, max) = (1022.277, 1161.971, 1315.538), stdev = 117.883
  CI (99.9%): [1059.607, 1264.335] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 63.89% complete, ETA 00:13:52
# Fork: 1 of 2
# Warmup Iteration   1: 1725.375 ns/op
# Warmup Iteration   2: 1020.193 ns/op
# Warmup Iteration   3: 753.121 ns/op
Iteration   1: 755.907 ns/op
Iteration   2: 761.549 ns/op
Iteration   3: 752.488 ns/op
Iteration   4: 752.910 ns/op
Iteration   5: 760.115 ns/op
Iteration   6: 752.860 ns/op
Iteration   7: 753.397 ns/op
Iteration   8: 752.765 ns/op
Iteration   9: 751.584 ns/op
Iteration  10: 761.412 ns/op

# Run progress: 63.96% complete, ETA 00:13:50
# Fork: 2 of 2
# Warmup Iteration   1: 1340.821 ns/op
# Warmup Iteration   2: 973.923 ns/op
# Warmup Iteration   3: 764.280 ns/op
Iteration   1: 754.994 ns/op
Iteration   2: 754.640 ns/op
Iteration   3: 764.631 ns/op
Iteration   4: 765.777 ns/op
Iteration   5: 763.109 ns/op
Iteration   6: 754.561 ns/op
Iteration   7: 754.619 ns/op
Iteration   8: 761.032 ns/op
Iteration   9: 754.388 ns/op
Iteration  10: 762.637 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  757.269 ±(99.9%) 4.047 ns/op [Average]
  (min, avg, max) = (751.584, 757.269, 765.777), stdev = 4.661
  CI (99.9%): [753.221, 761.316] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 64.03% complete, ETA 00:13:49
# Fork: 1 of 2
# Warmup Iteration   1: 2161.617 ns/op
# Warmup Iteration   2: 1231.015 ns/op
# Warmup Iteration   3: 838.684 ns/op
Iteration   1: 837.727 ns/op
Iteration   2: 838.976 ns/op
Iteration   3: 841.137 ns/op
Iteration   4: 848.148 ns/op
Iteration   5: 839.338 ns/op
Iteration   6: 837.996 ns/op
Iteration   7: 837.870 ns/op
Iteration   8: 845.928 ns/op
Iteration   9: 847.283 ns/op
Iteration  10: 837.738 ns/op

# Run progress: 64.10% complete, ETA 00:13:47
# Fork: 2 of 2
# Warmup Iteration   1: 1970.529 ns/op
# Warmup Iteration   2: 1222.455 ns/op
# Warmup Iteration   3: 839.387 ns/op
Iteration   1: 850.005 ns/op
Iteration   2: 846.010 ns/op
Iteration   3: 840.290 ns/op
Iteration   4: 856.663 ns/op
Iteration   5: 847.471 ns/op
Iteration   6: 840.445 ns/op
Iteration   7: 843.946 ns/op
Iteration   8: 845.234 ns/op
Iteration   9: 849.320 ns/op
Iteration  10: 846.630 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  843.908 ±(99.9%) 4.519 ns/op [Average]
  (min, avg, max) = (837.727, 843.908, 856.663), stdev = 5.204
  CI (99.9%): [839.389, 848.427] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 64.17% complete, ETA 00:13:45
# Fork: 1 of 2
# Warmup Iteration   1: 21.947 ns/op
# Warmup Iteration   2: 25.209 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.975 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.686 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.100 ns/op
Iteration   9: 15.587 ns/op
Iteration  10: 15.586 ns/op

# Run progress: 64.24% complete, ETA 00:13:44
# Fork: 2 of 2
# Warmup Iteration   1: 22.442 ns/op
# Warmup Iteration   2: 25.860 ns/op
# Warmup Iteration   3: 15.777 ns/op
Iteration   1: 15.585 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.994 ns/op
Iteration   4: 15.942 ns/op
Iteration   5: 15.676 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.570 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.570, 16.019, 19.112), stdev = 1.067
  CI (99.9%): [15.093, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 64.31% complete, ETA 00:13:42
# Fork: 1 of 2
# Warmup Iteration   1: 1517.153 ns/op
# Warmup Iteration   2: 53141.373 ns/op
# Warmup Iteration   3: 701.899 ns/op
Iteration   1: 677.188 ns/op
Iteration   2: 41425.899 ns/op
Iteration   3: 36044.413 ns/op
Iteration   4: 46587.814 ns/op
Iteration   5: 40898.242 ns/op
Iteration   6: 688.104 ns/op
Iteration   7: 652.472 ns/op
Iteration   8: 639.642 ns/op
Iteration   9: 755.837 ns/op
Iteration  10: 700.733 ns/op

# Run progress: 64.38% complete, ETA 00:13:41
# Fork: 2 of 2
# Warmup Iteration   1: 1669.301 ns/op
# Warmup Iteration   2: 26824.181 ns/op
# Warmup Iteration   3: 696.931 ns/op
Iteration   1: 690.121 ns/op
Iteration   2: 43544.773 ns/op
Iteration   3: 34735.896 ns/op
Iteration   4: 54751.518 ns/op
Iteration   5: 41752.344 ns/op
Iteration   6: 681.764 ns/op
Iteration   7: 639.611 ns/op
Iteration   8: 629.132 ns/op
Iteration   9: 749.207 ns/op
Iteration  10: 699.237 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  17397.197 ±(99.9%) 18532.827 ns/op [Average]
  (min, avg, max) = (629.132, 17397.197, 54751.518), stdev = 21342.431
  CI (99.9%): [≈ 0, 35930.024] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 64.44% complete, ETA 00:13:39
# Fork: 1 of 2
# Warmup Iteration   1: 19898.279 ns/op
# Warmup Iteration   2: 2994.847 ns/op
# Warmup Iteration   3: 3495.487 ns/op
Iteration   1: 13457.014 ns/op
Iteration   2: 997.196 ns/op
Iteration   3: 4799.161 ns/op
Iteration   4: 31743.128 ns/op
Iteration   5: 76753.034 ns/op
Iteration   6: 862.625 ns/op
Iteration   7: 1216.715 ns/op
Iteration   8: 942.524 ns/op
Iteration   9: 1126.194 ns/op
Iteration  10: 1163.913 ns/op

# Run progress: 64.51% complete, ETA 00:13:37
# Fork: 2 of 2
# Warmup Iteration   1: 10428.769 ns/op
# Warmup Iteration   2: 3086.395 ns/op
# Warmup Iteration   3: 3669.464 ns/op
Iteration   1: 12955.715 ns/op
Iteration   2: 1000.432 ns/op
Iteration   3: 18659.317 ns/op
Iteration   4: 36471.760 ns/op
Iteration   5: 12475.594 ns/op
Iteration   6: 848.011 ns/op
Iteration   7: 1061.208 ns/op
Iteration   8: 882.761 ns/op
Iteration   9: 997.228 ns/op
Iteration  10: 1043.981 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  10972.875 ±(99.9%) 16317.345 ns/op [Average]
  (min, avg, max) = (848.011, 10972.875, 76753.034), stdev = 18791.079
  CI (99.9%): [≈ 0, 27290.220] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 64.58% complete, ETA 00:13:36
# Fork: 1 of 2
# Warmup Iteration   1: 11078.924 ns/op
# Warmup Iteration   2: 3538.958 ns/op
# Warmup Iteration   3: 3164.653 ns/op
Iteration   1: 15786.305 ns/op
Iteration   2: 994.628 ns/op
Iteration   3: 16238.445 ns/op
Iteration   4: 61704.139 ns/op
Iteration   5: 22937.943 ns/op
Iteration   6: 884.087 ns/op
Iteration   7: 1055.843 ns/op
Iteration   8: 784.526 ns/op
Iteration   9: 987.164 ns/op
Iteration  10: 1073.585 ns/op

# Run progress: 64.65% complete, ETA 00:13:34
# Fork: 2 of 2
# Warmup Iteration   1: 11174.402 ns/op
# Warmup Iteration   2: 3754.140 ns/op
# Warmup Iteration   3: 2509.718 ns/op
Iteration   1: 22689.453 ns/op
Iteration   2: 1001.779 ns/op
Iteration   3: 6217.170 ns/op
Iteration   4: 80033.657 ns/op
Iteration   5: 9128.901 ns/op
Iteration   6: 905.391 ns/op
Iteration   7: 1207.067 ns/op
Iteration   8: 824.851 ns/op
Iteration   9: 1136.530 ns/op
Iteration  10: 1180.366 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  12338.591 ±(99.9%) 18747.440 ns/op [Average]
  (min, avg, max) = (784.526, 12338.591, 80033.657), stdev = 21589.580
  CI (99.9%): [≈ 0, 31086.032] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 64.72% complete, ETA 00:13:33
# Fork: 1 of 2
# Warmup Iteration   1: 1920.591 ns/op
# Warmup Iteration   2: 1236.735 ns/op
# Warmup Iteration   3: 1043.855 ns/op
Iteration   1: 905.686 ns/op
Iteration   2: 1020.257 ns/op
Iteration   3: 1029.311 ns/op
Iteration   4: 1037.802 ns/op
Iteration   5: 1025.372 ns/op
Iteration   6: 23957.175 ns/op
Iteration   7: 1011.550 ns/op
Iteration   8: 1053.985 ns/op
Iteration   9: 968.719 ns/op
Iteration  10: 1045.689 ns/op

# Run progress: 64.79% complete, ETA 00:13:31
# Fork: 2 of 2
# Warmup Iteration   1: 1687.128 ns/op
# Warmup Iteration   2: 1235.111 ns/op
# Warmup Iteration   3: 1043.982 ns/op
Iteration   1: 903.845 ns/op
Iteration   2: 1020.542 ns/op
Iteration   3: 1029.053 ns/op
Iteration   4: 1035.042 ns/op
Iteration   5: 1027.375 ns/op
Iteration   6: 91232.888 ns/op
Iteration   7: 1988.123 ns/op
Iteration   8: 1058.268 ns/op
Iteration   9: 970.298 ns/op
Iteration  10: 1044.292 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6718.264 ±(99.9%) 17836.151 ns/op [Average]
  (min, avg, max) = (903.845, 6718.264, 91232.888), stdev = 20540.139
  CI (99.9%): [≈ 0, 24554.415] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 64.86% complete, ETA 00:13:29
# Fork: 1 of 2
# Warmup Iteration   1: 12321.858 ns/op
# Warmup Iteration   2: 4820.973 ns/op
# Warmup Iteration   3: 4068.569 ns/op
Iteration   1: 3762.592 ns/op
Iteration   2: 3723.466 ns/op
Iteration   3: 3729.208 ns/op
Iteration   4: 3729.666 ns/op
Iteration   5: 3703.011 ns/op
Iteration   6: 3745.514 ns/op
Iteration   7: 3710.635 ns/op
Iteration   8: 3725.533 ns/op
Iteration   9: 3867.672 ns/op
Iteration  10: 3714.377 ns/op

# Run progress: 64.93% complete, ETA 00:13:28
# Fork: 2 of 2
# Warmup Iteration   1: 9550.978 ns/op
# Warmup Iteration   2: 4971.582 ns/op
# Warmup Iteration   3: 3488.162 ns/op
Iteration   1: 3544.587 ns/op
Iteration   2: 3498.611 ns/op
Iteration   3: 3501.188 ns/op
Iteration   4: 3494.811 ns/op
Iteration   5: 3476.791 ns/op
Iteration   6: 3519.751 ns/op
Iteration   7: 3490.551 ns/op
Iteration   8: 3515.699 ns/op
Iteration   9: 3504.744 ns/op
Iteration  10: 3481.955 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3622.018 ±(99.9%) 110.542 ns/op [Average]
  (min, avg, max) = (3476.791, 3622.018, 3867.672), stdev = 127.300
  CI (99.9%): [3511.477, 3732.560] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 65.00% complete, ETA 00:13:26
# Fork: 1 of 2
# Warmup Iteration   1: 22.221 ns/op
# Warmup Iteration   2: 25.779 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.590 ns/op
Iteration   3: 15.986 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 65.07% complete, ETA 00:13:25
# Fork: 2 of 2
# Warmup Iteration   1: 24.537 ns/op
# Warmup Iteration   2: 26.557 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.939 ns/op
Iteration   5: 15.672 ns/op
Iteration   6: 15.571 ns/op
Iteration   7: 15.584 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.571, 16.018, 19.106), stdev = 1.067
  CI (99.9%): [15.091, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 65.14% complete, ETA 00:13:23
# Fork: 1 of 2
# Warmup Iteration   1: 155.006 ns/op
# Warmup Iteration   2: 141.731 ns/op
# Warmup Iteration   3: 92.585 ns/op
Iteration   1: 92.611 ns/op
Iteration   2: 92.307 ns/op
Iteration   3: 92.261 ns/op
Iteration   4: 92.629 ns/op
Iteration   5: 92.732 ns/op
Iteration   6: 92.427 ns/op
Iteration   7: 92.189 ns/op
Iteration   8: 94.632 ns/op
Iteration   9: 92.408 ns/op
Iteration  10: 92.638 ns/op

# Run progress: 65.21% complete, ETA 00:13:21
# Fork: 2 of 2
# Warmup Iteration   1: 135.192 ns/op
# Warmup Iteration   2: 140.332 ns/op
# Warmup Iteration   3: 92.418 ns/op
Iteration   1: 92.148 ns/op
Iteration   2: 92.447 ns/op
Iteration   3: 92.754 ns/op
Iteration   4: 92.887 ns/op
Iteration   5: 92.940 ns/op
Iteration   6: 92.288 ns/op
Iteration   7: 92.647 ns/op
Iteration   8: 94.386 ns/op
Iteration   9: 92.483 ns/op
Iteration  10: 92.445 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  92.713 ±(99.9%) 0.567 ns/op [Average]
  (min, avg, max) = (92.148, 92.713, 94.632), stdev = 0.653
  CI (99.9%): [92.146, 93.280] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 65.28% complete, ETA 00:13:20
# Fork: 1 of 2
# Warmup Iteration   1: 935.633 ns/op
# Warmup Iteration   2: 167.517 ns/op
# Warmup Iteration   3: 111.491 ns/op
Iteration   1: 111.249 ns/op
Iteration   2: 111.228 ns/op
Iteration   3: 111.355 ns/op
Iteration   4: 111.361 ns/op
Iteration   5: 111.187 ns/op
Iteration   6: 111.995 ns/op
Iteration   7: 111.292 ns/op
Iteration   8: 111.931 ns/op
Iteration   9: 111.673 ns/op
Iteration  10: 111.157 ns/op

# Run progress: 65.35% complete, ETA 00:13:18
# Fork: 2 of 2
# Warmup Iteration   1: 1072.923 ns/op
# Warmup Iteration   2: 149.041 ns/op
# Warmup Iteration   3: 112.382 ns/op
Iteration   1: 112.393 ns/op
Iteration   2: 112.236 ns/op
Iteration   3: 112.406 ns/op
Iteration   4: 112.500 ns/op
Iteration   5: 112.561 ns/op
Iteration   6: 112.135 ns/op
Iteration   7: 112.352 ns/op
Iteration   8: 112.748 ns/op
Iteration   9: 112.181 ns/op
Iteration  10: 112.504 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  111.922 ±(99.9%) 0.479 ns/op [Average]
  (min, avg, max) = (111.157, 111.922, 112.748), stdev = 0.551
  CI (99.9%): [111.443, 112.401] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 65.42% complete, ETA 00:13:17
# Fork: 1 of 2
# Warmup Iteration   1: 1824.388 ns/op
# Warmup Iteration   2: 151.064 ns/op
# Warmup Iteration   3: 107.717 ns/op
Iteration   1: 110.392 ns/op
Iteration   2: 112.700 ns/op
Iteration   3: 115.029 ns/op
Iteration   4: 114.324 ns/op
Iteration   5: 108.192 ns/op
Iteration   6: 110.214 ns/op
Iteration   7: 109.797 ns/op
Iteration   8: 113.723 ns/op
Iteration   9: 110.554 ns/op
Iteration  10: 108.733 ns/op

# Run progress: 65.49% complete, ETA 00:13:15
# Fork: 2 of 2
# Warmup Iteration   1: 1562.261 ns/op
# Warmup Iteration   2: 132.152 ns/op
# Warmup Iteration   3: 107.478 ns/op
Iteration   1: 109.370 ns/op
Iteration   2: 112.364 ns/op
Iteration   3: 115.200 ns/op
Iteration   4: 114.081 ns/op
Iteration   5: 109.916 ns/op
Iteration   6: 108.091 ns/op
Iteration   7: 106.542 ns/op
Iteration   8: 112.475 ns/op
Iteration   9: 108.872 ns/op
Iteration  10: 109.902 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  111.024 ±(99.9%) 2.203 ns/op [Average]
  (min, avg, max) = (106.542, 111.024, 115.200), stdev = 2.537
  CI (99.9%): [108.820, 113.227] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 65.56% complete, ETA 00:13:13
# Fork: 1 of 2
# Warmup Iteration   1: 108.715 ns/op
# Warmup Iteration   2: 96.769 ns/op
# Warmup Iteration   3: 73.225 ns/op
Iteration   1: 73.283 ns/op
Iteration   2: 73.305 ns/op
Iteration   3: 73.135 ns/op
Iteration   4: 73.311 ns/op
Iteration   5: 73.229 ns/op
Iteration   6: 73.209 ns/op
Iteration   7: 73.265 ns/op
Iteration   8: 73.394 ns/op
Iteration   9: 73.387 ns/op
Iteration  10: 73.231 ns/op

# Run progress: 65.63% complete, ETA 00:13:12
# Fork: 2 of 2
# Warmup Iteration   1: 110.308 ns/op
# Warmup Iteration   2: 112.193 ns/op
# Warmup Iteration   3: 73.198 ns/op
Iteration   1: 73.218 ns/op
Iteration   2: 73.366 ns/op
Iteration   3: 73.181 ns/op
Iteration   4: 73.263 ns/op
Iteration   5: 73.235 ns/op
Iteration   6: 73.191 ns/op
Iteration   7: 73.210 ns/op
Iteration   8: 73.209 ns/op
Iteration   9: 73.370 ns/op
Iteration  10: 73.220 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.261 ±(99.9%) 0.064 ns/op [Average]
  (min, avg, max) = (73.135, 73.261, 73.394), stdev = 0.073
  CI (99.9%): [73.197, 73.324] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 65.69% complete, ETA 00:13:10
# Fork: 1 of 2
# Warmup Iteration   1: 221.199 ns/op
# Warmup Iteration   2: 207.859 ns/op
# Warmup Iteration   3: 124.757 ns/op
Iteration   1: 124.807 ns/op
Iteration   2: 126.366 ns/op
Iteration   3: 124.801 ns/op
Iteration   4: 124.996 ns/op
Iteration   5: 124.814 ns/op
Iteration   6: 124.779 ns/op
Iteration   7: 124.801 ns/op
Iteration   8: 128.108 ns/op
Iteration   9: 130.542 ns/op
Iteration  10: 124.824 ns/op

# Run progress: 65.76% complete, ETA 00:13:09
# Fork: 2 of 2
# Warmup Iteration   1: 210.687 ns/op
# Warmup Iteration   2: 217.633 ns/op
# Warmup Iteration   3: 124.749 ns/op
Iteration   1: 124.807 ns/op
Iteration   2: 126.346 ns/op
Iteration   3: 124.785 ns/op
Iteration   4: 124.979 ns/op
Iteration   5: 124.799 ns/op
Iteration   6: 124.789 ns/op
Iteration   7: 124.833 ns/op
Iteration   8: 128.083 ns/op
Iteration   9: 130.502 ns/op
Iteration  10: 124.812 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.879 ±(99.9%) 1.653 ns/op [Average]
  (min, avg, max) = (124.779, 125.879, 130.542), stdev = 1.904
  CI (99.9%): [124.226, 127.532] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 65.83% complete, ETA 00:13:07
# Fork: 1 of 2
# Warmup Iteration   1: 22.477 ns/op
# Warmup Iteration   2: 25.825 ns/op
# Warmup Iteration   3: 15.785 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.938 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.568 ns/op
Iteration   7: 15.573 ns/op
Iteration   8: 19.116 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.585 ns/op

# Run progress: 65.90% complete, ETA 00:13:05
# Fork: 2 of 2
# Warmup Iteration   1: 22.600 ns/op
# Warmup Iteration   2: 25.760 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.594 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.952 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.588 ns/op
Iteration  10: 15.581 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.568, 16.021, 19.116), stdev = 1.068
  CI (99.9%): [15.094, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 65.97% complete, ETA 00:13:04
# Fork: 1 of 2
# Warmup Iteration   1: 1004.903 ns/op
# Warmup Iteration   2: 491.275 ns/op
# Warmup Iteration   3: 3025.004 ns/op
Iteration   1: 369.115 ns/op
Iteration   2: 31310.807 ns/op
Iteration   3: 631.266 ns/op
Iteration   4: 806.062 ns/op
Iteration   5: 48378.062 ns/op
Iteration   6: 31777.757 ns/op
Iteration   7: 825.548 ns/op
Iteration   8: 388.461 ns/op
Iteration   9: 401.989 ns/op
Iteration  10: 735.135 ns/op

# Run progress: 66.04% complete, ETA 00:13:02
# Fork: 2 of 2
# Warmup Iteration   1: 947.170 ns/op
# Warmup Iteration   2: 552.385 ns/op
# Warmup Iteration   3: 2374.608 ns/op
Iteration   1: 390.281 ns/op
Iteration   2: 38642.770 ns/op
Iteration   3: 633.502 ns/op
Iteration   4: 814.016 ns/op
Iteration   5: 44997.942 ns/op
Iteration   6: 35209.226 ns/op
Iteration   7: 827.258 ns/op
Iteration   8: 390.100 ns/op
Iteration   9: 402.803 ns/op
Iteration  10: 748.257 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11934.018 ±(99.9%) 15743.589 ns/op [Average]
  (min, avg, max) = (369.115, 11934.018, 48378.062), stdev = 18130.340
  CI (99.9%): [≈ 0, 27677.607] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 66.11% complete, ETA 00:13:01
# Fork: 1 of 2
# Warmup Iteration   1: 5922.280 ns/op
# Warmup Iteration   2: 46975.298 ns/op
# Warmup Iteration   3: 1612.826 ns/op
Iteration   1: 538.176 ns/op
Iteration   2: 635.297 ns/op
Iteration   3: 783.634 ns/op
Iteration   4: 851.982 ns/op
Iteration   5: 1512.480 ns/op
Iteration   6: 64125.368 ns/op
Iteration   7: 2396.556 ns/op
Iteration   8: 540.514 ns/op
Iteration   9: 563.197 ns/op
Iteration  10: 743.448 ns/op

# Run progress: 66.18% complete, ETA 00:12:59
# Fork: 2 of 2
# Warmup Iteration   1: 4781.763 ns/op
# Warmup Iteration   2: 46247.061 ns/op
# Warmup Iteration   3: 1289.965 ns/op
Iteration   1: 538.092 ns/op
Iteration   2: 642.176 ns/op
Iteration   3: 792.882 ns/op
Iteration   4: 875.685 ns/op
Iteration   5: 1909.689 ns/op
Iteration   6: 68173.345 ns/op
Iteration   7: 3318.320 ns/op
Iteration   8: 553.833 ns/op
Iteration   9: 570.482 ns/op
Iteration  10: 762.398 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7541.378 ±(99.9%) 17425.766 ns/op [Average]
  (min, avg, max) = (538.092, 7541.378, 68173.345), stdev = 20067.538
  CI (99.9%): [≈ 0, 24967.144] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 66.25% complete, ETA 00:12:57
# Fork: 1 of 2
# Warmup Iteration   1: 4514.121 ns/op
# Warmup Iteration   2: 63930.958 ns/op
# Warmup Iteration   3: 1252.769 ns/op
Iteration   1: 17589.620 ns/op
Iteration   2: 693.172 ns/op
Iteration   3: 20728.664 ns/op
Iteration   4: 2294.589 ns/op
Iteration   5: 832.251 ns/op
Iteration   6: 9512.107 ns/op
Iteration   7: 760.464 ns/op
Iteration   8: 614.153 ns/op
Iteration   9: 607.353 ns/op
Iteration  10: 791.921 ns/op

# Run progress: 66.32% complete, ETA 00:12:56
# Fork: 2 of 2
# Warmup Iteration   1: 7156.136 ns/op
# Warmup Iteration   2: 66116.610 ns/op
# Warmup Iteration   3: 4068.411 ns/op
Iteration   1: 903.187 ns/op
Iteration   2: 665.534 ns/op
Iteration   3: 26405.364 ns/op
Iteration   4: 1950.792 ns/op
Iteration   5: 832.762 ns/op
Iteration   6: 11699.488 ns/op
Iteration   7: 727.003 ns/op
Iteration   8: 598.991 ns/op
Iteration   9: 593.652 ns/op
Iteration  10: 749.941 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4977.550 ±(99.9%) 6855.131 ns/op [Average]
  (min, avg, max) = (593.652, 4977.550, 26405.364), stdev = 7894.379
  CI (99.9%): [≈ 0, 11832.682] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 66.39% complete, ETA 00:12:54
# Fork: 1 of 2
# Warmup Iteration   1: 723.630 ns/op
# Warmup Iteration   2: 2301.817 ns/op
# Warmup Iteration   3: 563.877 ns/op
Iteration   1: 508.199 ns/op
Iteration   2: 542.045 ns/op
Iteration   3: 620.500 ns/op
Iteration   4: 660.430 ns/op
Iteration   5: 602.294 ns/op
Iteration   6: 1438.238 ns/op
Iteration   7: 659.107 ns/op
Iteration   8: 495.026 ns/op
Iteration   9: 491.473 ns/op
Iteration  10: 584.735 ns/op

# Run progress: 66.46% complete, ETA 00:12:53
# Fork: 2 of 2
# Warmup Iteration   1: 734.504 ns/op
# Warmup Iteration   2: 11146.838 ns/op
# Warmup Iteration   3: 564.070 ns/op
Iteration   1: 504.275 ns/op
Iteration   2: 542.739 ns/op
Iteration   3: 620.416 ns/op
Iteration   4: 661.770 ns/op
Iteration   5: 602.094 ns/op
Iteration   6: 1156.436 ns/op
Iteration   7: 658.944 ns/op
Iteration   8: 496.546 ns/op
Iteration   9: 491.601 ns/op
Iteration  10: 583.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  646.022 ±(99.9%) 204.636 ns/op [Average]
  (min, avg, max) = (491.473, 646.022, 1438.238), stdev = 235.659
  CI (99.9%): [441.387, 850.658] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 66.53% complete, ETA 00:12:51
# Fork: 1 of 2
# Warmup Iteration   1: 1712.809 ns/op
# Warmup Iteration   2: 36835.728 ns/op
# Warmup Iteration   3: 1152.131 ns/op
Iteration   1: 841.426 ns/op
Iteration   2: 956.082 ns/op
Iteration   3: 1153.621 ns/op
Iteration   4: 1192.335 ns/op
Iteration   5: 1194.134 ns/op
Iteration   6: 925.912 ns/op
Iteration   7: 1188.109 ns/op
Iteration   8: 638.902 ns/op
Iteration   9: 921.480 ns/op
Iteration  10: 1151.592 ns/op

# Run progress: 66.60% complete, ETA 00:12:49
# Fork: 2 of 2
# Warmup Iteration   1: 1585.291 ns/op
# Warmup Iteration   2: 37453.854 ns/op
# Warmup Iteration   3: 1152.219 ns/op
Iteration   1: 834.251 ns/op
Iteration   2: 956.596 ns/op
Iteration   3: 1162.202 ns/op
Iteration   4: 1192.511 ns/op
Iteration   5: 1194.718 ns/op
Iteration   6: 925.770 ns/op
Iteration   7: 1202.596 ns/op
Iteration   8: 638.484 ns/op
Iteration   9: 938.594 ns/op
Iteration  10: 1151.804 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1018.056 ±(99.9%) 161.099 ns/op [Average]
  (min, avg, max) = (638.484, 1018.056, 1202.596), stdev = 185.522
  CI (99.9%): [856.957, 1179.155] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 66.67% complete, ETA 00:12:48
# Fork: 1 of 2
# Warmup Iteration   1: 22.493 ns/op
# Warmup Iteration   2: 31.007 ns/op
# Warmup Iteration   3: 18.780 ns/op
Iteration   1: 18.784 ns/op
Iteration   2: 18.782 ns/op
Iteration   3: 18.874 ns/op
Iteration   4: 19.174 ns/op
Iteration   5: 18.891 ns/op
Iteration   6: 18.959 ns/op
Iteration   7: 18.957 ns/op
Iteration   8: 19.076 ns/op
Iteration   9: 18.945 ns/op
Iteration  10: 18.951 ns/op

# Run progress: 66.74% complete, ETA 00:12:46
# Fork: 2 of 2
# Warmup Iteration   1: 22.033 ns/op
# Warmup Iteration   2: 30.926 ns/op
# Warmup Iteration   3: 18.769 ns/op
Iteration   1: 18.764 ns/op
Iteration   2: 18.772 ns/op
Iteration   3: 18.880 ns/op
Iteration   4: 19.178 ns/op
Iteration   5: 18.901 ns/op
Iteration   6: 18.945 ns/op
Iteration   7: 18.947 ns/op
Iteration   8: 19.079 ns/op
Iteration   9: 18.947 ns/op
Iteration  10: 18.944 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.938 ±(99.9%) 0.104 ns/op [Average]
  (min, avg, max) = (18.764, 18.938, 19.178), stdev = 0.119
  CI (99.9%): [18.834, 19.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 66.81% complete, ETA 00:12:45
# Fork: 1 of 2
# Warmup Iteration   1: 255.240 ns/op
# Warmup Iteration   2: 204.308 ns/op
# Warmup Iteration   3: 136.146 ns/op
Iteration   1: 136.176 ns/op
Iteration   2: 136.195 ns/op
Iteration   3: 136.176 ns/op
Iteration   4: 137.099 ns/op
Iteration   5: 135.943 ns/op
Iteration   6: 136.122 ns/op
Iteration   7: 136.013 ns/op
Iteration   8: 137.072 ns/op
Iteration   9: 136.329 ns/op
Iteration  10: 136.068 ns/op

# Run progress: 66.88% complete, ETA 00:12:43
# Fork: 2 of 2
# Warmup Iteration   1: 257.257 ns/op
# Warmup Iteration   2: 208.316 ns/op
# Warmup Iteration   3: 136.131 ns/op
Iteration   1: 136.184 ns/op
Iteration   2: 136.159 ns/op
Iteration   3: 136.119 ns/op
Iteration   4: 137.102 ns/op
Iteration   5: 135.970 ns/op
Iteration   6: 136.168 ns/op
Iteration   7: 136.018 ns/op
Iteration   8: 137.022 ns/op
Iteration   9: 136.321 ns/op
Iteration  10: 136.130 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  136.319 ±(99.9%) 0.347 ns/op [Average]
  (min, avg, max) = (135.943, 136.319, 137.102), stdev = 0.399
  CI (99.9%): [135.973, 136.666] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 66.94% complete, ETA 00:12:41
# Fork: 1 of 2
# Warmup Iteration   1: 386.205 ns/op
# Warmup Iteration   2: 211.634 ns/op
# Warmup Iteration   3: 156.893 ns/op
Iteration   1: 156.735 ns/op
Iteration   2: 156.783 ns/op
Iteration   3: 156.573 ns/op
Iteration   4: 156.725 ns/op
Iteration   5: 156.700 ns/op
Iteration   6: 156.803 ns/op
Iteration   7: 156.973 ns/op
Iteration   8: 158.768 ns/op
Iteration   9: 156.939 ns/op
Iteration  10: 157.006 ns/op

# Run progress: 67.01% complete, ETA 00:12:40
# Fork: 2 of 2
# Warmup Iteration   1: 382.300 ns/op
# Warmup Iteration   2: 210.783 ns/op
# Warmup Iteration   3: 153.764 ns/op
Iteration   1: 153.857 ns/op
Iteration   2: 153.956 ns/op
Iteration   3: 153.705 ns/op
Iteration   4: 153.623 ns/op
Iteration   5: 153.901 ns/op
Iteration   6: 153.875 ns/op
Iteration   7: 153.809 ns/op
Iteration   8: 156.498 ns/op
Iteration   9: 154.067 ns/op
Iteration  10: 154.057 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  155.568 ±(99.9%) 1.424 ns/op [Average]
  (min, avg, max) = (153.623, 155.568, 158.768), stdev = 1.639
  CI (99.9%): [154.144, 156.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 67.08% complete, ETA 00:12:38
# Fork: 1 of 2
# Warmup Iteration   1: 472.446 ns/op
# Warmup Iteration   2: 271.079 ns/op
# Warmup Iteration   3: 200.042 ns/op
Iteration   1: 199.993 ns/op
Iteration   2: 200.060 ns/op
Iteration   3: 203.656 ns/op
Iteration   4: 200.180 ns/op
Iteration   5: 200.096 ns/op
Iteration   6: 199.997 ns/op
Iteration   7: 200.207 ns/op
Iteration   8: 202.809 ns/op
Iteration   9: 202.050 ns/op
Iteration  10: 200.279 ns/op

# Run progress: 67.15% complete, ETA 00:12:37
# Fork: 2 of 2
# Warmup Iteration   1: 468.897 ns/op
# Warmup Iteration   2: 303.381 ns/op
# Warmup Iteration   3: 204.808 ns/op
Iteration   1: 204.732 ns/op
Iteration   2: 204.742 ns/op
Iteration   3: 208.405 ns/op
Iteration   4: 204.842 ns/op
Iteration   5: 204.643 ns/op
Iteration   6: 204.843 ns/op
Iteration   7: 204.759 ns/op
Iteration   8: 207.599 ns/op
Iteration   9: 206.457 ns/op
Iteration  10: 205.173 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  203.276 ±(99.9%) 2.389 ns/op [Average]
  (min, avg, max) = (199.993, 203.276, 208.405), stdev = 2.751
  CI (99.9%): [200.887, 205.665] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 67.22% complete, ETA 00:12:35
# Fork: 1 of 2
# Warmup Iteration   1: 117.839 ns/op
# Warmup Iteration   2: 117.698 ns/op
# Warmup Iteration   3: 70.663 ns/op
Iteration   1: 70.590 ns/op
Iteration   2: 70.656 ns/op
Iteration   3: 70.434 ns/op
Iteration   4: 70.699 ns/op
Iteration   5: 70.599 ns/op
Iteration   6: 70.565 ns/op
Iteration   7: 70.571 ns/op
Iteration   8: 73.366 ns/op
Iteration   9: 70.666 ns/op
Iteration  10: 70.945 ns/op

# Run progress: 67.29% complete, ETA 00:12:33
# Fork: 2 of 2
# Warmup Iteration   1: 108.190 ns/op
# Warmup Iteration   2: 117.030 ns/op
# Warmup Iteration   3: 70.674 ns/op
Iteration   1: 70.575 ns/op
Iteration   2: 70.659 ns/op
Iteration   3: 70.470 ns/op
Iteration   4: 70.719 ns/op
Iteration   5: 70.551 ns/op
Iteration   6: 70.600 ns/op
Iteration   7: 70.596 ns/op
Iteration   8: 73.330 ns/op
Iteration   9: 70.671 ns/op
Iteration  10: 70.956 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.911 ±(99.9%) 0.732 ns/op [Average]
  (min, avg, max) = (70.434, 70.911, 73.366), stdev = 0.843
  CI (99.9%): [70.179, 71.643] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 67.36% complete, ETA 00:12:32
# Fork: 1 of 2
# Warmup Iteration   1: 187.931 ns/op
# Warmup Iteration   2: 196.605 ns/op
# Warmup Iteration   3: 133.921 ns/op
Iteration   1: 133.901 ns/op
Iteration   2: 137.058 ns/op
Iteration   3: 133.960 ns/op
Iteration   4: 135.711 ns/op
Iteration   5: 134.631 ns/op
Iteration   6: 134.884 ns/op
Iteration   7: 134.819 ns/op
Iteration   8: 134.170 ns/op
Iteration   9: 148.659 ns/op
Iteration  10: 134.888 ns/op

# Run progress: 67.43% complete, ETA 00:12:30
# Fork: 2 of 2
# Warmup Iteration   1: 217.794 ns/op
# Warmup Iteration   2: 201.420 ns/op
# Warmup Iteration   3: 152.839 ns/op
Iteration   1: 152.838 ns/op
Iteration   2: 154.306 ns/op
Iteration   3: 152.957 ns/op
Iteration   4: 153.363 ns/op
Iteration   5: 153.761 ns/op
Iteration   6: 153.194 ns/op
Iteration   7: 153.189 ns/op
Iteration   8: 153.840 ns/op
Iteration   9: 166.146 ns/op
Iteration  10: 153.447 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  145.486 ±(99.9%) 8.965 ns/op [Average]
  (min, avg, max) = (133.901, 145.486, 166.146), stdev = 10.324
  CI (99.9%): [136.521, 154.451] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 67.50% complete, ETA 00:12:28
# Fork: 1 of 2
# Warmup Iteration   1: 22.388 ns/op
# Warmup Iteration   2: 30.677 ns/op
# Warmup Iteration   3: 18.771 ns/op
Iteration   1: 18.774 ns/op
Iteration   2: 18.774 ns/op
Iteration   3: 18.874 ns/op
Iteration   4: 19.177 ns/op
Iteration   5: 18.898 ns/op
Iteration   6: 18.942 ns/op
Iteration   7: 18.944 ns/op
Iteration   8: 19.076 ns/op
Iteration   9: 18.951 ns/op
Iteration  10: 18.957 ns/op

# Run progress: 67.57% complete, ETA 00:12:27
# Fork: 2 of 2
# Warmup Iteration   1: 22.490 ns/op
# Warmup Iteration   2: 29.190 ns/op
# Warmup Iteration   3: 18.774 ns/op
Iteration   1: 18.793 ns/op
Iteration   2: 18.801 ns/op
Iteration   3: 18.874 ns/op
Iteration   4: 19.184 ns/op
Iteration   5: 18.894 ns/op
Iteration   6: 18.950 ns/op
Iteration   7: 18.951 ns/op
Iteration   8: 19.068 ns/op
Iteration   9: 18.947 ns/op
Iteration  10: 18.960 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.939 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (18.774, 18.939, 19.184), stdev = 0.117
  CI (99.9%): [18.838, 19.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 67.64% complete, ETA 00:12:25
# Fork: 1 of 2
# Warmup Iteration   1: 265.874 ns/op
# Warmup Iteration   2: 201.106 ns/op
# Warmup Iteration   3: 136.638 ns/op
Iteration   1: 136.698 ns/op
Iteration   2: 136.674 ns/op
Iteration   3: 136.611 ns/op
Iteration   4: 139.886 ns/op
Iteration   5: 136.706 ns/op
Iteration   6: 136.802 ns/op
Iteration   7: 136.762 ns/op
Iteration   8: 138.887 ns/op
Iteration   9: 137.615 ns/op
Iteration  10: 136.561 ns/op

# Run progress: 67.71% complete, ETA 00:12:24
# Fork: 2 of 2
# Warmup Iteration   1: 251.266 ns/op
# Warmup Iteration   2: 206.753 ns/op
# Warmup Iteration   3: 136.720 ns/op
Iteration   1: 136.711 ns/op
Iteration   2: 136.737 ns/op
Iteration   3: 136.768 ns/op
Iteration   4: 139.030 ns/op
Iteration   5: 136.714 ns/op
Iteration   6: 136.681 ns/op
Iteration   7: 136.635 ns/op
Iteration   8: 138.517 ns/op
Iteration   9: 136.806 ns/op
Iteration  10: 136.610 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  137.221 ±(99.9%) 0.872 ns/op [Average]
  (min, avg, max) = (136.561, 137.221, 139.886), stdev = 1.004
  CI (99.9%): [136.349, 138.093] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 67.78% complete, ETA 00:12:22
# Fork: 1 of 2
# Warmup Iteration   1: 505.046 ns/op
# Warmup Iteration   2: 236.484 ns/op
# Warmup Iteration   3: 159.485 ns/op
Iteration   1: 159.156 ns/op
Iteration   2: 158.991 ns/op
Iteration   3: 159.112 ns/op
Iteration   4: 159.713 ns/op
Iteration   5: 159.512 ns/op
Iteration   6: 159.136 ns/op
Iteration   7: 159.276 ns/op
Iteration   8: 162.124 ns/op
Iteration   9: 160.960 ns/op
Iteration  10: 159.578 ns/op

# Run progress: 67.85% complete, ETA 00:12:20
# Fork: 2 of 2
# Warmup Iteration   1: 557.401 ns/op
# Warmup Iteration   2: 219.734 ns/op
# Warmup Iteration   3: 160.236 ns/op
Iteration   1: 159.540 ns/op
Iteration   2: 159.638 ns/op
Iteration   3: 159.365 ns/op
Iteration   4: 160.056 ns/op
Iteration   5: 159.658 ns/op
Iteration   6: 159.567 ns/op
Iteration   7: 159.610 ns/op
Iteration   8: 162.395 ns/op
Iteration   9: 160.653 ns/op
Iteration  10: 159.931 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  159.899 ±(99.9%) 0.819 ns/op [Average]
  (min, avg, max) = (158.991, 159.899, 162.395), stdev = 0.943
  CI (99.9%): [159.080, 160.717] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 67.92% complete, ETA 00:12:19
# Fork: 1 of 2
# Warmup Iteration   1: 559.841 ns/op
# Warmup Iteration   2: 277.345 ns/op
# Warmup Iteration   3: 206.432 ns/op
Iteration   1: 206.419 ns/op
Iteration   2: 206.460 ns/op
Iteration   3: 209.860 ns/op
Iteration   4: 206.348 ns/op
Iteration   5: 206.650 ns/op
Iteration   6: 206.460 ns/op
Iteration   7: 206.453 ns/op
Iteration   8: 209.286 ns/op
Iteration   9: 206.843 ns/op
Iteration  10: 206.780 ns/op

# Run progress: 67.99% complete, ETA 00:12:17
# Fork: 2 of 2
# Warmup Iteration   1: 636.896 ns/op
# Warmup Iteration   2: 271.882 ns/op
# Warmup Iteration   3: 206.431 ns/op
Iteration   1: 206.453 ns/op
Iteration   2: 206.431 ns/op
Iteration   3: 210.150 ns/op
Iteration   4: 206.401 ns/op
Iteration   5: 206.387 ns/op
Iteration   6: 206.394 ns/op
Iteration   7: 206.473 ns/op
Iteration   8: 209.344 ns/op
Iteration   9: 206.794 ns/op
Iteration  10: 206.633 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  207.151 ±(99.9%) 1.134 ns/op [Average]
  (min, avg, max) = (206.348, 207.151, 210.150), stdev = 1.306
  CI (99.9%): [206.017, 208.285] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 68.06% complete, ETA 00:12:16
# Fork: 1 of 2
# Warmup Iteration   1: 107.859 ns/op
# Warmup Iteration   2: 104.589 ns/op
# Warmup Iteration   3: 70.670 ns/op
Iteration   1: 70.597 ns/op
Iteration   2: 70.656 ns/op
Iteration   3: 70.503 ns/op
Iteration   4: 70.716 ns/op
Iteration   5: 70.594 ns/op
Iteration   6: 70.586 ns/op
Iteration   7: 70.981 ns/op
Iteration   8: 73.272 ns/op
Iteration   9: 70.749 ns/op
Iteration  10: 70.927 ns/op

# Run progress: 68.13% complete, ETA 00:12:14
# Fork: 2 of 2
# Warmup Iteration   1: 118.025 ns/op
# Warmup Iteration   2: 99.767 ns/op
# Warmup Iteration   3: 70.654 ns/op
Iteration   1: 70.553 ns/op
Iteration   2: 70.643 ns/op
Iteration   3: 70.481 ns/op
Iteration   4: 70.742 ns/op
Iteration   5: 70.620 ns/op
Iteration   6: 70.581 ns/op
Iteration   7: 70.580 ns/op
Iteration   8: 73.281 ns/op
Iteration   9: 70.667 ns/op
Iteration  10: 70.944 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.934 ±(99.9%) 0.706 ns/op [Average]
  (min, avg, max) = (70.481, 70.934, 73.281), stdev = 0.813
  CI (99.9%): [70.228, 71.640] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 68.19% complete, ETA 00:12:12
# Fork: 1 of 2
# Warmup Iteration   1: 231.568 ns/op
# Warmup Iteration   2: 218.961 ns/op
# Warmup Iteration   3: 160.659 ns/op
Iteration   1: 160.739 ns/op
Iteration   2: 161.203 ns/op
Iteration   3: 160.809 ns/op
Iteration   4: 161.355 ns/op
Iteration   5: 161.623 ns/op
Iteration   6: 161.588 ns/op
Iteration   7: 161.584 ns/op
Iteration   8: 161.234 ns/op
Iteration   9: 170.963 ns/op
Iteration  10: 161.825 ns/op

# Run progress: 68.26% complete, ETA 00:12:11
# Fork: 2 of 2
# Warmup Iteration   1: 266.784 ns/op
# Warmup Iteration   2: 233.464 ns/op
# Warmup Iteration   3: 160.760 ns/op
Iteration   1: 160.872 ns/op
Iteration   2: 161.469 ns/op
Iteration   3: 160.948 ns/op
Iteration   4: 161.068 ns/op
Iteration   5: 161.693 ns/op
Iteration   6: 161.805 ns/op
Iteration   7: 161.847 ns/op
Iteration   8: 161.580 ns/op
Iteration   9: 170.227 ns/op
Iteration  10: 161.986 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  162.321 ±(99.9%) 2.480 ns/op [Average]
  (min, avg, max) = (160.739, 162.321, 170.963), stdev = 2.856
  CI (99.9%): [159.841, 164.801] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 68.33% complete, ETA 00:12:09
# Fork: 1 of 2
# Warmup Iteration   1: 22.742 ns/op
# Warmup Iteration   2: 31.861 ns/op
# Warmup Iteration   3: 18.764 ns/op
Iteration   1: 18.784 ns/op
Iteration   2: 18.771 ns/op
Iteration   3: 18.901 ns/op
Iteration   4: 19.175 ns/op
Iteration   5: 18.892 ns/op
Iteration   6: 18.948 ns/op
Iteration   7: 18.960 ns/op
Iteration   8: 19.083 ns/op
Iteration   9: 18.980 ns/op
Iteration  10: 18.964 ns/op

# Run progress: 68.40% complete, ETA 00:12:08
# Fork: 2 of 2
# Warmup Iteration   1: 21.923 ns/op
# Warmup Iteration   2: 29.909 ns/op
# Warmup Iteration   3: 18.779 ns/op
Iteration   1: 18.770 ns/op
Iteration   2: 18.773 ns/op
Iteration   3: 18.879 ns/op
Iteration   4: 19.179 ns/op
Iteration   5: 18.895 ns/op
Iteration   6: 18.943 ns/op
Iteration   7: 18.950 ns/op
Iteration   8: 19.077 ns/op
Iteration   9: 18.955 ns/op
Iteration  10: 18.950 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.941 ±(99.9%) 0.104 ns/op [Average]
  (min, avg, max) = (18.770, 18.941, 19.179), stdev = 0.120
  CI (99.9%): [18.837, 19.046] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 68.47% complete, ETA 00:12:06
# Fork: 1 of 2
# Warmup Iteration   1: 247.412 ns/op
# Warmup Iteration   2: 197.833 ns/op
# Warmup Iteration   3: 140.811 ns/op
Iteration   1: 143.119 ns/op
Iteration   2: 141.027 ns/op
Iteration   3: 140.924 ns/op
Iteration   4: 141.190 ns/op
Iteration   5: 140.652 ns/op
Iteration   6: 140.413 ns/op
Iteration   7: 140.940 ns/op
Iteration   8: 143.864 ns/op
Iteration   9: 138.605 ns/op
Iteration  10: 141.097 ns/op

# Run progress: 68.54% complete, ETA 00:12:04
# Fork: 2 of 2
# Warmup Iteration   1: 275.289 ns/op
# Warmup Iteration   2: 184.538 ns/op
# Warmup Iteration   3: 140.825 ns/op
Iteration   1: 143.163 ns/op
Iteration   2: 141.081 ns/op
Iteration   3: 140.665 ns/op
Iteration   4: 140.809 ns/op
Iteration   5: 141.021 ns/op
Iteration   6: 140.431 ns/op
Iteration   7: 140.920 ns/op
Iteration   8: 143.696 ns/op
Iteration   9: 138.847 ns/op
Iteration  10: 141.166 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  141.181 ±(99.9%) 1.185 ns/op [Average]
  (min, avg, max) = (138.605, 141.181, 143.864), stdev = 1.365
  CI (99.9%): [139.997, 142.366] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 68.61% complete, ETA 00:12:03
# Fork: 1 of 2
# Warmup Iteration   1: 335.497 ns/op
# Warmup Iteration   2: 229.915 ns/op
# Warmup Iteration   3: 409.846 ns/op
Iteration   1: 164.149 ns/op
Iteration   2: 2090.750 ns/op
Iteration   3: 9724.015 ns/op
Iteration   4: 686.617 ns/op
Iteration   5: 161.934 ns/op
Iteration   6: 167.491 ns/op
Iteration   7: 167.404 ns/op
Iteration   8: 170.642 ns/op
Iteration   9: 167.007 ns/op
Iteration  10: 171.087 ns/op

# Run progress: 68.68% complete, ETA 00:12:01
# Fork: 2 of 2
# Warmup Iteration   1: 378.423 ns/op
# Warmup Iteration   2: 231.342 ns/op
# Warmup Iteration   3: 382.978 ns/op
Iteration   1: 164.161 ns/op
Iteration   2: 3960.229 ns/op
Iteration   3: 9792.200 ns/op
Iteration   4: 511.157 ns/op
Iteration   5: 162.187 ns/op
Iteration   6: 166.555 ns/op
Iteration   7: 165.608 ns/op
Iteration   8: 169.821 ns/op
Iteration   9: 167.525 ns/op
Iteration  10: 170.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1455.030 ±(99.9%) 2591.922 ns/op [Average]
  (min, avg, max) = (161.934, 1455.030, 9792.200), stdev = 2984.861
  CI (99.9%): [≈ 0, 4046.952] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 68.75% complete, ETA 00:12:00
# Fork: 1 of 2
# Warmup Iteration   1: 474.466 ns/op
# Warmup Iteration   2: 374.214 ns/op
# Warmup Iteration   3: 675.698 ns/op
Iteration   1: 219.070 ns/op
Iteration   2: 17150.298 ns/op
Iteration   3: 226.339 ns/op
Iteration   4: 847.567 ns/op
Iteration   5: 215.412 ns/op
Iteration   6: 233.721 ns/op
Iteration   7: 234.000 ns/op
Iteration   8: 228.430 ns/op
Iteration   9: 235.964 ns/op
Iteration  10: 234.817 ns/op

# Run progress: 68.82% complete, ETA 00:11:58
# Fork: 2 of 2
# Warmup Iteration   1: 421.626 ns/op
# Warmup Iteration   2: 302.957 ns/op
# Warmup Iteration   3: 418.656 ns/op
Iteration   1: 223.414 ns/op
Iteration   2: 19804.449 ns/op
Iteration   3: 245.102 ns/op
Iteration   4: 16020.621 ns/op
Iteration   5: 219.317 ns/op
Iteration   6: 234.816 ns/op
Iteration   7: 234.356 ns/op
Iteration   8: 228.688 ns/op
Iteration   9: 235.427 ns/op
Iteration  10: 232.462 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2875.213 ±(99.9%) 5561.042 ns/op [Average]
  (min, avg, max) = (215.412, 2875.213, 19804.449), stdev = 6404.104
  CI (99.9%): [≈ 0, 8436.255] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 68.89% complete, ETA 00:11:56
# Fork: 1 of 2
# Warmup Iteration   1: 115.240 ns/op
# Warmup Iteration   2: 106.670 ns/op
# Warmup Iteration   3: 70.675 ns/op
Iteration   1: 70.586 ns/op
Iteration   2: 70.671 ns/op
Iteration   3: 70.497 ns/op
Iteration   4: 70.701 ns/op
Iteration   5: 70.619 ns/op
Iteration   6: 70.576 ns/op
Iteration   7: 70.580 ns/op
Iteration   8: 73.181 ns/op
Iteration   9: 70.685 ns/op
Iteration  10: 70.976 ns/op

# Run progress: 68.96% complete, ETA 00:11:55
# Fork: 2 of 2
# Warmup Iteration   1: 108.578 ns/op
# Warmup Iteration   2: 104.894 ns/op
# Warmup Iteration   3: 70.643 ns/op
Iteration   1: 70.581 ns/op
Iteration   2: 70.640 ns/op
Iteration   3: 70.556 ns/op
Iteration   4: 70.721 ns/op
Iteration   5: 70.603 ns/op
Iteration   6: 70.611 ns/op
Iteration   7: 70.542 ns/op
Iteration   8: 73.176 ns/op
Iteration   9: 70.729 ns/op
Iteration  10: 70.921 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.908 ±(99.9%) 0.682 ns/op [Average]
  (min, avg, max) = (70.497, 70.908, 73.181), stdev = 0.785
  CI (99.9%): [70.226, 71.590] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 69.03% complete, ETA 00:11:53
# Fork: 1 of 2
# Warmup Iteration   1: 255.708 ns/op
# Warmup Iteration   2: 245.735 ns/op
# Warmup Iteration   3: 173.593 ns/op
Iteration   1: 166.436 ns/op
Iteration   2: 169.650 ns/op
Iteration   3: 174.411 ns/op
Iteration   4: 178.818 ns/op
Iteration   5: 175.239 ns/op
Iteration   6: 166.304 ns/op
Iteration   7: 177.034 ns/op
Iteration   8: 163.127 ns/op
Iteration   9: 176.914 ns/op
Iteration  10: 173.814 ns/op

# Run progress: 69.10% complete, ETA 00:11:52
# Fork: 2 of 2
# Warmup Iteration   1: 234.920 ns/op
# Warmup Iteration   2: 241.982 ns/op
# Warmup Iteration   3: 173.714 ns/op
Iteration   1: 166.532 ns/op
Iteration   2: 169.583 ns/op
Iteration   3: 174.461 ns/op
Iteration   4: 178.723 ns/op
Iteration   5: 175.330 ns/op
Iteration   6: 166.233 ns/op
Iteration   7: 176.907 ns/op
Iteration   8: 163.207 ns/op
Iteration   9: 176.950 ns/op
Iteration  10: 173.738 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  172.171 ±(99.9%) 4.555 ns/op [Average]
  (min, avg, max) = (163.127, 172.171, 178.818), stdev = 5.246
  CI (99.9%): [167.615, 176.726] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 69.17% complete, ETA 00:11:50
# Fork: 1 of 2
# Warmup Iteration   1: 22.316 ns/op
# Warmup Iteration   2: 30.845 ns/op
# Warmup Iteration   3: 18.762 ns/op
Iteration   1: 18.779 ns/op
Iteration   2: 18.785 ns/op
Iteration   3: 18.874 ns/op
Iteration   4: 19.172 ns/op
Iteration   5: 18.893 ns/op
Iteration   6: 18.945 ns/op
Iteration   7: 18.945 ns/op
Iteration   8: 19.095 ns/op
Iteration   9: 18.947 ns/op
Iteration  10: 18.949 ns/op

# Run progress: 69.24% complete, ETA 00:11:48
# Fork: 2 of 2
# Warmup Iteration   1: 22.163 ns/op
# Warmup Iteration   2: 30.922 ns/op
# Warmup Iteration   3: 18.767 ns/op
Iteration   1: 18.779 ns/op
Iteration   2: 18.775 ns/op
Iteration   3: 18.903 ns/op
Iteration   4: 19.172 ns/op
Iteration   5: 18.896 ns/op
Iteration   6: 18.965 ns/op
Iteration   7: 18.942 ns/op
Iteration   8: 19.089 ns/op
Iteration   9: 18.949 ns/op
Iteration  10: 18.957 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.941 ±(99.9%) 0.103 ns/op [Average]
  (min, avg, max) = (18.775, 18.941, 19.172), stdev = 0.119
  CI (99.9%): [18.837, 19.044] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 69.31% complete, ETA 00:11:47
# Fork: 1 of 2
# Warmup Iteration   1: 134.480 ns/op
# Warmup Iteration   2: 144.587 ns/op
# Warmup Iteration   3: 94.885 ns/op
Iteration   1: 94.834 ns/op
Iteration   2: 94.773 ns/op
Iteration   3: 95.066 ns/op
Iteration   4: 94.604 ns/op
Iteration   5: 94.827 ns/op
Iteration   6: 95.083 ns/op
Iteration   7: 95.204 ns/op
Iteration   8: 94.536 ns/op
Iteration   9: 94.702 ns/op
Iteration  10: 95.124 ns/op

# Run progress: 69.38% complete, ETA 00:11:45
# Fork: 2 of 2
# Warmup Iteration   1: 142.114 ns/op
# Warmup Iteration   2: 137.715 ns/op
# Warmup Iteration   3: 95.025 ns/op
Iteration   1: 95.009 ns/op
Iteration   2: 94.483 ns/op
Iteration   3: 95.016 ns/op
Iteration   4: 94.503 ns/op
Iteration   5: 94.968 ns/op
Iteration   6: 95.119 ns/op
Iteration   7: 95.207 ns/op
Iteration   8: 94.871 ns/op
Iteration   9: 95.410 ns/op
Iteration  10: 95.146 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  94.924 ±(99.9%) 0.227 ns/op [Average]
  (min, avg, max) = (94.483, 94.924, 95.410), stdev = 0.262
  CI (99.9%): [94.697, 95.152] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 69.44% complete, ETA 00:11:44
# Fork: 1 of 2
# Warmup Iteration   1: 635.502 ns/op
# Warmup Iteration   2: 150.920 ns/op
# Warmup Iteration   3: 109.122 ns/op
Iteration   1: 108.742 ns/op
Iteration   2: 108.905 ns/op
Iteration   3: 113.204 ns/op
Iteration   4: 109.407 ns/op
Iteration   5: 108.813 ns/op
Iteration   6: 108.860 ns/op
Iteration   7: 109.331 ns/op
Iteration   8: 111.350 ns/op
Iteration   9: 108.978 ns/op
Iteration  10: 108.773 ns/op

# Run progress: 69.51% complete, ETA 00:11:42
# Fork: 2 of 2
# Warmup Iteration   1: 592.855 ns/op
# Warmup Iteration   2: 149.256 ns/op
# Warmup Iteration   3: 109.153 ns/op
Iteration   1: 108.891 ns/op
Iteration   2: 109.025 ns/op
Iteration   3: 113.090 ns/op
Iteration   4: 109.131 ns/op
Iteration   5: 108.837 ns/op
Iteration   6: 109.007 ns/op
Iteration   7: 109.085 ns/op
Iteration   8: 111.700 ns/op
Iteration   9: 109.575 ns/op
Iteration  10: 109.150 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  109.693 ±(99.9%) 1.236 ns/op [Average]
  (min, avg, max) = (108.742, 109.693, 113.204), stdev = 1.423
  CI (99.9%): [108.457, 110.929] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 69.58% complete, ETA 00:11:40
# Fork: 1 of 2
# Warmup Iteration   1: 4639.711 ns/op
# Warmup Iteration   2: 149.088 ns/op
# Warmup Iteration   3: 104.263 ns/op
Iteration   1: 104.292 ns/op
Iteration   2: 104.968 ns/op
Iteration   3: 107.060 ns/op
Iteration   4: 109.058 ns/op
Iteration   5: 105.692 ns/op
Iteration   6: 104.055 ns/op
Iteration   7: 107.651 ns/op
Iteration   8: 111.615 ns/op
Iteration   9: 108.648 ns/op
Iteration  10: 103.867 ns/op

# Run progress: 69.65% complete, ETA 00:11:39
# Fork: 2 of 2
# Warmup Iteration   1: 1753.228 ns/op
# Warmup Iteration   2: 134.062 ns/op
# Warmup Iteration   3: 106.801 ns/op
Iteration   1: 103.664 ns/op
Iteration   2: 106.274 ns/op
Iteration   3: 111.448 ns/op
Iteration   4: 110.358 ns/op
Iteration   5: 108.441 ns/op
Iteration   6: 106.713 ns/op
Iteration   7: 110.126 ns/op
Iteration   8: 114.120 ns/op
Iteration   9: 107.434 ns/op
Iteration  10: 104.287 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  107.489 ±(99.9%) 2.586 ns/op [Average]
  (min, avg, max) = (103.664, 107.489, 114.120), stdev = 2.978
  CI (99.9%): [104.903, 110.074] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 69.72% complete, ETA 00:11:37
# Fork: 1 of 2
# Warmup Iteration   1: 107.826 ns/op
# Warmup Iteration   2: 101.242 ns/op
# Warmup Iteration   3: 70.671 ns/op
Iteration   1: 70.567 ns/op
Iteration   2: 70.653 ns/op
Iteration   3: 70.420 ns/op
Iteration   4: 70.682 ns/op
Iteration   5: 70.595 ns/op
Iteration   6: 70.594 ns/op
Iteration   7: 70.571 ns/op
Iteration   8: 73.357 ns/op
Iteration   9: 70.692 ns/op
Iteration  10: 70.941 ns/op

# Run progress: 69.79% complete, ETA 00:11:36
# Fork: 2 of 2
# Warmup Iteration   1: 110.423 ns/op
# Warmup Iteration   2: 105.035 ns/op
# Warmup Iteration   3: 70.739 ns/op
Iteration   1: 70.606 ns/op
Iteration   2: 70.655 ns/op
Iteration   3: 70.540 ns/op
Iteration   4: 70.709 ns/op
Iteration   5: 70.624 ns/op
Iteration   6: 70.558 ns/op
Iteration   7: 70.550 ns/op
Iteration   8: 73.299 ns/op
Iteration   9: 70.709 ns/op
Iteration  10: 70.906 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.911 ±(99.9%) 0.725 ns/op [Average]
  (min, avg, max) = (70.420, 70.911, 73.357), stdev = 0.835
  CI (99.9%): [70.186, 71.636] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 69.86% complete, ETA 00:11:34
# Fork: 1 of 2
# Warmup Iteration   1: 215.359 ns/op
# Warmup Iteration   2: 211.688 ns/op
# Warmup Iteration   3: 152.854 ns/op
Iteration   1: 152.856 ns/op
Iteration   2: 154.291 ns/op
Iteration   3: 152.845 ns/op
Iteration   4: 153.444 ns/op
Iteration   5: 153.592 ns/op
Iteration   6: 153.269 ns/op
Iteration   7: 153.266 ns/op
Iteration   8: 153.870 ns/op
Iteration   9: 164.981 ns/op
Iteration  10: 153.431 ns/op

# Run progress: 69.93% complete, ETA 00:11:32
# Fork: 2 of 2
# Warmup Iteration   1: 228.339 ns/op
# Warmup Iteration   2: 202.122 ns/op
# Warmup Iteration   3: 152.776 ns/op
Iteration   1: 152.844 ns/op
Iteration   2: 154.389 ns/op
Iteration   3: 152.729 ns/op
Iteration   4: 153.395 ns/op
Iteration   5: 153.546 ns/op
Iteration   6: 153.275 ns/op
Iteration   7: 153.302 ns/op
Iteration   8: 153.828 ns/op
Iteration   9: 164.818 ns/op
Iteration  10: 153.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.577 ±(99.9%) 3.089 ns/op [Average]
  (min, avg, max) = (152.729, 154.577, 164.981), stdev = 3.557
  CI (99.9%): [151.488, 157.667] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 70.00% complete, ETA 00:11:31
# Fork: 1 of 2
# Warmup Iteration   1: 22.073 ns/op
# Warmup Iteration   2: 30.780 ns/op
# Warmup Iteration   3: 18.772 ns/op
Iteration   1: 18.770 ns/op
Iteration   2: 18.799 ns/op
Iteration   3: 18.898 ns/op
Iteration   4: 19.179 ns/op
Iteration   5: 18.927 ns/op
Iteration   6: 18.952 ns/op
Iteration   7: 18.942 ns/op
Iteration   8: 19.078 ns/op
Iteration   9: 18.962 ns/op
Iteration  10: 18.956 ns/op

# Run progress: 70.07% complete, ETA 00:11:29
# Fork: 2 of 2
# Warmup Iteration   1: 23.721 ns/op
# Warmup Iteration   2: 28.368 ns/op
# Warmup Iteration   3: 18.784 ns/op
Iteration   1: 18.775 ns/op
Iteration   2: 18.797 ns/op
Iteration   3: 18.877 ns/op
Iteration   4: 19.176 ns/op
Iteration   5: 18.897 ns/op
Iteration   6: 18.951 ns/op
Iteration   7: 18.965 ns/op
Iteration   8: 19.080 ns/op
Iteration   9: 18.965 ns/op
Iteration  10: 18.950 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.945 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (18.770, 18.945, 19.179), stdev = 0.116
  CI (99.9%): [18.844, 19.046] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 70.14% complete, ETA 00:11:28
# Fork: 1 of 2
# Warmup Iteration   1: 261.200 ns/op
# Warmup Iteration   2: 202.202 ns/op
# Warmup Iteration   3: 136.451 ns/op
Iteration   1: 136.172 ns/op
Iteration   2: 136.157 ns/op
Iteration   3: 136.175 ns/op
Iteration   4: 137.108 ns/op
Iteration   5: 136.014 ns/op
Iteration   6: 136.133 ns/op
Iteration   7: 136.021 ns/op
Iteration   8: 137.012 ns/op
Iteration   9: 136.421 ns/op
Iteration  10: 136.046 ns/op

# Run progress: 70.21% complete, ETA 00:11:26
# Fork: 2 of 2
# Warmup Iteration   1: 243.728 ns/op
# Warmup Iteration   2: 200.440 ns/op
# Warmup Iteration   3: 136.143 ns/op
Iteration   1: 136.126 ns/op
Iteration   2: 136.119 ns/op
Iteration   3: 136.185 ns/op
Iteration   4: 137.353 ns/op
Iteration   5: 136.085 ns/op
Iteration   6: 136.235 ns/op
Iteration   7: 136.045 ns/op
Iteration   8: 137.034 ns/op
Iteration   9: 136.424 ns/op
Iteration  10: 136.118 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  136.349 ±(99.9%) 0.363 ns/op [Average]
  (min, avg, max) = (136.014, 136.349, 137.353), stdev = 0.418
  CI (99.9%): [135.986, 136.712] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 70.28% complete, ETA 00:11:24
# Fork: 1 of 2
# Warmup Iteration   1: 453.196 ns/op
# Warmup Iteration   2: 227.188 ns/op
# Warmup Iteration   3: 153.864 ns/op
Iteration   1: 153.769 ns/op
Iteration   2: 153.740 ns/op
Iteration   3: 153.771 ns/op
Iteration   4: 153.446 ns/op
Iteration   5: 153.910 ns/op
Iteration   6: 153.749 ns/op
Iteration   7: 153.743 ns/op
Iteration   8: 156.432 ns/op
Iteration   9: 154.106 ns/op
Iteration  10: 154.297 ns/op

# Run progress: 70.35% complete, ETA 00:11:23
# Fork: 2 of 2
# Warmup Iteration   1: 361.638 ns/op
# Warmup Iteration   2: 203.541 ns/op
# Warmup Iteration   3: 152.484 ns/op
Iteration   1: 151.901 ns/op
Iteration   2: 151.977 ns/op
Iteration   3: 151.782 ns/op
Iteration   4: 152.589 ns/op
Iteration   5: 151.896 ns/op
Iteration   6: 151.805 ns/op
Iteration   7: 151.993 ns/op
Iteration   8: 154.772 ns/op
Iteration   9: 152.586 ns/op
Iteration  10: 152.274 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  153.227 ±(99.9%) 1.072 ns/op [Average]
  (min, avg, max) = (151.782, 153.227, 156.432), stdev = 1.234
  CI (99.9%): [152.155, 154.299] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 70.42% complete, ETA 00:11:21
# Fork: 1 of 2
# Warmup Iteration   1: 486.845 ns/op
# Warmup Iteration   2: 274.356 ns/op
# Warmup Iteration   3: 206.888 ns/op
Iteration   1: 207.080 ns/op
Iteration   2: 206.772 ns/op
Iteration   3: 211.421 ns/op
Iteration   4: 207.402 ns/op
Iteration   5: 206.898 ns/op
Iteration   6: 207.678 ns/op
Iteration   7: 207.186 ns/op
Iteration   8: 209.770 ns/op
Iteration   9: 208.801 ns/op
Iteration  10: 207.539 ns/op

# Run progress: 70.49% complete, ETA 00:11:20
# Fork: 2 of 2
# Warmup Iteration   1: 438.747 ns/op
# Warmup Iteration   2: 268.689 ns/op
# Warmup Iteration   3: 200.074 ns/op
Iteration   1: 200.582 ns/op
Iteration   2: 200.136 ns/op
Iteration   3: 203.495 ns/op
Iteration   4: 200.149 ns/op
Iteration   5: 200.054 ns/op
Iteration   6: 200.072 ns/op
Iteration   7: 200.191 ns/op
Iteration   8: 202.807 ns/op
Iteration   9: 202.217 ns/op
Iteration  10: 200.257 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  204.525 ±(99.9%) 3.364 ns/op [Average]
  (min, avg, max) = (200.054, 204.525, 211.421), stdev = 3.873
  CI (99.9%): [201.162, 207.889] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 70.56% complete, ETA 00:11:18
# Fork: 1 of 2
# Warmup Iteration   1: 108.162 ns/op
# Warmup Iteration   2: 123.452 ns/op
# Warmup Iteration   3: 70.670 ns/op
Iteration   1: 70.581 ns/op
Iteration   2: 70.661 ns/op
Iteration   3: 70.559 ns/op
Iteration   4: 70.758 ns/op
Iteration   5: 70.593 ns/op
Iteration   6: 70.595 ns/op
Iteration   7: 70.554 ns/op
Iteration   8: 73.343 ns/op
Iteration   9: 70.695 ns/op
Iteration  10: 70.890 ns/op

# Run progress: 70.63% complete, ETA 00:11:16
# Fork: 2 of 2
# Warmup Iteration   1: 111.916 ns/op
# Warmup Iteration   2: 99.012 ns/op
# Warmup Iteration   3: 70.665 ns/op
Iteration   1: 70.586 ns/op
Iteration   2: 70.626 ns/op
Iteration   3: 70.522 ns/op
Iteration   4: 70.698 ns/op
Iteration   5: 70.595 ns/op
Iteration   6: 70.571 ns/op
Iteration   7: 70.601 ns/op
Iteration   8: 73.384 ns/op
Iteration   9: 70.700 ns/op
Iteration  10: 70.983 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.925 ±(99.9%) 0.731 ns/op [Average]
  (min, avg, max) = (70.522, 70.925, 73.384), stdev = 0.842
  CI (99.9%): [70.194, 71.656] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 70.69% complete, ETA 00:11:15
# Fork: 1 of 2
# Warmup Iteration   1: 221.074 ns/op
# Warmup Iteration   2: 225.506 ns/op
# Warmup Iteration   3: 152.816 ns/op
Iteration   1: 152.851 ns/op
Iteration   2: 154.333 ns/op
Iteration   3: 152.854 ns/op
Iteration   4: 153.530 ns/op
Iteration   5: 153.547 ns/op
Iteration   6: 153.178 ns/op
Iteration   7: 153.165 ns/op
Iteration   8: 153.833 ns/op
Iteration   9: 164.973 ns/op
Iteration  10: 153.502 ns/op

# Run progress: 70.76% complete, ETA 00:11:13
# Fork: 2 of 2
# Warmup Iteration   1: 209.537 ns/op
# Warmup Iteration   2: 225.928 ns/op
# Warmup Iteration   3: 152.781 ns/op
Iteration   1: 152.779 ns/op
Iteration   2: 154.315 ns/op
Iteration   3: 152.844 ns/op
Iteration   4: 153.392 ns/op
Iteration   5: 153.524 ns/op
Iteration   6: 153.241 ns/op
Iteration   7: 153.278 ns/op
Iteration   8: 153.860 ns/op
Iteration   9: 165.017 ns/op
Iteration  10: 153.441 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.573 ±(99.9%) 3.118 ns/op [Average]
  (min, avg, max) = (152.779, 154.573, 165.017), stdev = 3.591
  CI (99.9%): [151.455, 157.691] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 70.83% complete, ETA 00:11:12
# Fork: 1 of 2
# Warmup Iteration   1: 23.505 ns/op
# Warmup Iteration   2: 26.079 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.973 ns/op
Iteration   4: 15.935 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.575 ns/op
Iteration   8: 19.113 ns/op
Iteration   9: 15.573 ns/op
Iteration  10: 15.574 ns/op

# Run progress: 70.90% complete, ETA 00:11:10
# Fork: 2 of 2
# Warmup Iteration   1: 22.046 ns/op
# Warmup Iteration   2: 26.299 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.573 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.938 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.574 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.107 ns/op
Iteration   9: 15.583 ns/op
Iteration  10: 15.571 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.016 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.571, 16.016, 19.113), stdev = 1.069
  CI (99.9%): [15.088, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 70.97% complete, ETA 00:11:08
# Fork: 1 of 2
# Warmup Iteration   1: 2219.562 ns/op
# Warmup Iteration   2: 1117.502 ns/op
# Warmup Iteration   3: 876.365 ns/op
Iteration   1: 875.745 ns/op
Iteration   2: 875.729 ns/op
Iteration   3: 875.680 ns/op
Iteration   4: 874.541 ns/op
Iteration   5: 876.651 ns/op
Iteration   6: 868.114 ns/op
Iteration   7: 875.425 ns/op
Iteration   8: 879.826 ns/op
Iteration   9: 875.475 ns/op
Iteration  10: 873.715 ns/op

# Run progress: 71.04% complete, ETA 00:11:07
# Fork: 2 of 2
# Warmup Iteration   1: 2711.819 ns/op
# Warmup Iteration   2: 1233.520 ns/op
# Warmup Iteration   3: 854.027 ns/op
Iteration   1: 854.097 ns/op
Iteration   2: 854.571 ns/op
Iteration   3: 854.249 ns/op
Iteration   4: 854.505 ns/op
Iteration   5: 854.195 ns/op
Iteration   6: 854.053 ns/op
Iteration   7: 854.080 ns/op
Iteration   8: 857.085 ns/op
Iteration   9: 854.224 ns/op
Iteration  10: 854.119 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  864.804 ±(99.9%) 9.346 ns/op [Average]
  (min, avg, max) = (854.053, 864.804, 879.826), stdev = 10.763
  CI (99.9%): [855.458, 874.150] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 71.11% complete, ETA 00:11:05
# Fork: 1 of 2
# Warmup Iteration   1: 23613.323 ns/op
# Warmup Iteration   2: 1413.119 ns/op
# Warmup Iteration   3: 938.985 ns/op
Iteration   1: 861.317 ns/op
Iteration   2: 861.065 ns/op
Iteration   3: 861.402 ns/op
Iteration   4: 862.940 ns/op
Iteration   5: 861.225 ns/op
Iteration   6: 861.858 ns/op
Iteration   7: 860.471 ns/op
Iteration   8: 862.108 ns/op
Iteration   9: 861.141 ns/op
Iteration  10: 862.014 ns/op

# Run progress: 71.18% complete, ETA 00:11:04
# Fork: 2 of 2
# Warmup Iteration   1: 26289.342 ns/op
# Warmup Iteration   2: 1221.455 ns/op
# Warmup Iteration   3: 922.895 ns/op
Iteration   1: 842.661 ns/op
Iteration   2: 842.579 ns/op
Iteration   3: 842.904 ns/op
Iteration   4: 844.545 ns/op
Iteration   5: 842.427 ns/op
Iteration   6: 842.394 ns/op
Iteration   7: 842.362 ns/op
Iteration   8: 843.789 ns/op
Iteration   9: 842.608 ns/op
Iteration  10: 842.447 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  852.213 ±(99.9%) 8.344 ns/op [Average]
  (min, avg, max) = (842.362, 852.213, 862.940), stdev = 9.609
  CI (99.9%): [843.869, 860.556] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 71.25% complete, ETA 00:11:02
# Fork: 1 of 2
# Warmup Iteration   1: 19311.499 ns/op
# Warmup Iteration   2: 1296.261 ns/op
# Warmup Iteration   3: 966.173 ns/op
Iteration   1: 889.579 ns/op
Iteration   2: 888.772 ns/op
Iteration   3: 888.912 ns/op
Iteration   4: 890.662 ns/op
Iteration   5: 889.370 ns/op
Iteration   6: 888.694 ns/op
Iteration   7: 888.383 ns/op
Iteration   8: 891.025 ns/op
Iteration   9: 889.049 ns/op
Iteration  10: 888.477 ns/op

# Run progress: 71.32% complete, ETA 00:11:00
# Fork: 2 of 2
# Warmup Iteration   1: 28630.880 ns/op
# Warmup Iteration   2: 1442.850 ns/op
# Warmup Iteration   3: 967.261 ns/op
Iteration   1: 890.355 ns/op
Iteration   2: 889.970 ns/op
Iteration   3: 890.486 ns/op
Iteration   4: 891.651 ns/op
Iteration   5: 889.894 ns/op
Iteration   6: 889.858 ns/op
Iteration   7: 889.815 ns/op
Iteration   8: 891.931 ns/op
Iteration   9: 889.657 ns/op
Iteration  10: 890.313 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  889.843 ±(99.9%) 0.866 ns/op [Average]
  (min, avg, max) = (888.383, 889.843, 891.931), stdev = 0.997
  CI (99.9%): [888.976, 890.709] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 71.39% complete, ETA 00:10:59
# Fork: 1 of 2
# Warmup Iteration   1: 2163.947 ns/op
# Warmup Iteration   2: 1281.412 ns/op
# Warmup Iteration   3: 944.136 ns/op
Iteration   1: 944.583 ns/op
Iteration   2: 945.109 ns/op
Iteration   3: 944.566 ns/op
Iteration   4: 945.300 ns/op
Iteration   5: 944.668 ns/op
Iteration   6: 944.674 ns/op
Iteration   7: 944.565 ns/op
Iteration   8: 944.142 ns/op
Iteration   9: 944.873 ns/op
Iteration  10: 944.411 ns/op

# Run progress: 71.46% complete, ETA 00:10:57
# Fork: 2 of 2
# Warmup Iteration   1: 1808.011 ns/op
# Warmup Iteration   2: 1195.165 ns/op
# Warmup Iteration   3: 946.506 ns/op
Iteration   1: 946.692 ns/op
Iteration   2: 946.096 ns/op
Iteration   3: 946.370 ns/op
Iteration   4: 946.748 ns/op
Iteration   5: 946.490 ns/op
Iteration   6: 946.721 ns/op
Iteration   7: 946.607 ns/op
Iteration   8: 947.028 ns/op
Iteration   9: 947.464 ns/op
Iteration  10: 946.819 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  945.696 ±(99.9%) 0.945 ns/op [Average]
  (min, avg, max) = (944.142, 945.696, 947.464), stdev = 1.089
  CI (99.9%): [944.751, 946.642] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 71.53% complete, ETA 00:10:56
# Fork: 1 of 2
# Warmup Iteration   1: 10825.044 ns/op
# Warmup Iteration   2: 5377.300 ns/op
# Warmup Iteration   3: 4292.064 ns/op
Iteration   1: 3930.695 ns/op
Iteration   2: 3926.323 ns/op
Iteration   3: 3936.125 ns/op
Iteration   4: 3917.368 ns/op
Iteration   5: 3921.383 ns/op
Iteration   6: 3958.476 ns/op
Iteration   7: 3921.043 ns/op
Iteration   8: 3933.433 ns/op
Iteration   9: 3922.220 ns/op
Iteration  10: 3917.707 ns/op

# Run progress: 71.60% complete, ETA 00:10:54
# Fork: 2 of 2
# Warmup Iteration   1: 10995.119 ns/op
# Warmup Iteration   2: 5167.426 ns/op
# Warmup Iteration   3: 3881.149 ns/op
Iteration   1: 3882.594 ns/op
Iteration   2: 3884.015 ns/op
Iteration   3: 3883.923 ns/op
Iteration   4: 3882.577 ns/op
Iteration   5: 3890.144 ns/op
Iteration   6: 3887.679 ns/op
Iteration   7: 3891.332 ns/op
Iteration   8: 3896.155 ns/op
Iteration   9: 3887.382 ns/op
Iteration  10: 3885.193 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3907.788 ±(99.9%) 20.032 ns/op [Average]
  (min, avg, max) = (3882.577, 3907.788, 3958.476), stdev = 23.069
  CI (99.9%): [3887.757, 3927.820] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 71.67% complete, ETA 00:10:52
# Fork: 1 of 2
# Warmup Iteration   1: 22.148 ns/op
# Warmup Iteration   2: 26.108 ns/op
# Warmup Iteration   3: 15.782 ns/op
Iteration   1: 15.596 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.935 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.585 ns/op
Iteration   8: 19.129 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.574 ns/op

# Run progress: 71.74% complete, ETA 00:10:51
# Fork: 2 of 2
# Warmup Iteration   1: 22.051 ns/op
# Warmup Iteration   2: 25.742 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 16.002 ns/op
Iteration   4: 15.941 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.095 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.021 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.574, 16.021, 19.129), stdev = 1.068
  CI (99.9%): [15.093, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 71.81% complete, ETA 00:10:49
# Fork: 1 of 2
# Warmup Iteration   1: 2132.760 ns/op
# Warmup Iteration   2: 990.362 ns/op
# Warmup Iteration   3: 698.914 ns/op
Iteration   1: 698.631 ns/op
Iteration   2: 698.860 ns/op
Iteration   3: 699.823 ns/op
Iteration   4: 699.218 ns/op
Iteration   5: 699.140 ns/op
Iteration   6: 698.696 ns/op
Iteration   7: 699.055 ns/op
Iteration   8: 702.496 ns/op
Iteration   9: 700.285 ns/op
Iteration  10: 699.122 ns/op

# Run progress: 71.88% complete, ETA 00:10:48
# Fork: 2 of 2
# Warmup Iteration   1: 1644.245 ns/op
# Warmup Iteration   2: 978.316 ns/op
# Warmup Iteration   3: 701.018 ns/op
Iteration   1: 699.744 ns/op
Iteration   2: 699.667 ns/op
Iteration   3: 700.186 ns/op
Iteration   4: 699.763 ns/op
Iteration   5: 699.691 ns/op
Iteration   6: 699.675 ns/op
Iteration   7: 700.824 ns/op
Iteration   8: 702.758 ns/op
Iteration   9: 699.927 ns/op
Iteration  10: 699.705 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  699.863 ±(99.9%) 0.949 ns/op [Average]
  (min, avg, max) = (698.631, 699.863, 702.758), stdev = 1.093
  CI (99.9%): [698.914, 700.812] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 71.94% complete, ETA 00:10:46
# Fork: 1 of 2
# Warmup Iteration   1: 18557.618 ns/op
# Warmup Iteration   2: 1168.976 ns/op
# Warmup Iteration   3: 1018.307 ns/op
Iteration   1: 935.539 ns/op
Iteration   2: 934.822 ns/op
Iteration   3: 939.026 ns/op
Iteration   4: 943.718 ns/op
Iteration   5: 935.834 ns/op
Iteration   6: 934.924 ns/op
Iteration   7: 936.682 ns/op
Iteration   8: 935.783 ns/op
Iteration   9: 935.103 ns/op
Iteration  10: 934.565 ns/op

# Run progress: 72.01% complete, ETA 00:10:44
# Fork: 2 of 2
# Warmup Iteration   1: 7217.515 ns/op
# Warmup Iteration   2: 1282.865 ns/op
# Warmup Iteration   3: 934.326 ns/op
Iteration   1: 933.797 ns/op
Iteration   2: 933.456 ns/op
Iteration   3: 937.981 ns/op
Iteration   4: 938.869 ns/op
Iteration   5: 933.735 ns/op
Iteration   6: 933.389 ns/op
Iteration   7: 933.287 ns/op
Iteration   8: 934.572 ns/op
Iteration   9: 933.633 ns/op
Iteration  10: 934.272 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  935.649 ±(99.9%) 2.235 ns/op [Average]
  (min, avg, max) = (933.287, 935.649, 943.718), stdev = 2.573
  CI (99.9%): [933.415, 937.884] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 72.08% complete, ETA 00:10:43
# Fork: 1 of 2
# Warmup Iteration   1: 15441.356 ns/op
# Warmup Iteration   2: 1325.343 ns/op
# Warmup Iteration   3: 1081.560 ns/op
Iteration   1: 992.861 ns/op
Iteration   2: 992.922 ns/op
Iteration   3: 994.294 ns/op
Iteration   4: 998.308 ns/op
Iteration   5: 992.749 ns/op
Iteration   6: 992.791 ns/op
Iteration   7: 992.487 ns/op
Iteration   8: 996.997 ns/op
Iteration   9: 992.755 ns/op
Iteration  10: 992.471 ns/op

# Run progress: 72.15% complete, ETA 00:10:41
# Fork: 2 of 2
# Warmup Iteration   1: 9696.662 ns/op
# Warmup Iteration   2: 1468.667 ns/op
# Warmup Iteration   3: 987.617 ns/op
Iteration   1: 986.383 ns/op
Iteration   2: 986.380 ns/op
Iteration   3: 990.709 ns/op
Iteration   4: 992.676 ns/op
Iteration   5: 986.781 ns/op
Iteration   6: 987.454 ns/op
Iteration   7: 986.432 ns/op
Iteration   8: 992.199 ns/op
Iteration   9: 987.286 ns/op
Iteration  10: 986.996 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  991.097 ±(99.9%) 3.143 ns/op [Average]
  (min, avg, max) = (986.380, 991.097, 998.308), stdev = 3.620
  CI (99.9%): [987.953, 994.240] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 72.22% complete, ETA 00:10:40
# Fork: 1 of 2
# Warmup Iteration   1: 1797.090 ns/op
# Warmup Iteration   2: 1127.111 ns/op
# Warmup Iteration   3: 877.497 ns/op
Iteration   1: 877.198 ns/op
Iteration   2: 878.488 ns/op
Iteration   3: 877.956 ns/op
Iteration   4: 878.604 ns/op
Iteration   5: 876.579 ns/op
Iteration   6: 877.400 ns/op
Iteration   7: 877.184 ns/op
Iteration   8: 880.076 ns/op
Iteration   9: 877.870 ns/op
Iteration  10: 877.860 ns/op

# Run progress: 72.29% complete, ETA 00:10:38
# Fork: 2 of 2
# Warmup Iteration   1: 1491.054 ns/op
# Warmup Iteration   2: 1134.640 ns/op
# Warmup Iteration   3: 861.575 ns/op
Iteration   1: 863.009 ns/op
Iteration   2: 878.353 ns/op
Iteration   3: 876.777 ns/op
Iteration   4: 861.860 ns/op
Iteration   5: 861.856 ns/op
Iteration   6: 860.847 ns/op
Iteration   7: 861.706 ns/op
Iteration   8: 870.230 ns/op
Iteration   9: 862.052 ns/op
Iteration  10: 862.979 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  871.944 ±(99.9%) 6.675 ns/op [Average]
  (min, avg, max) = (860.847, 871.944, 880.076), stdev = 7.687
  CI (99.9%): [865.269, 878.619] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 72.36% complete, ETA 00:10:36
# Fork: 1 of 2
# Warmup Iteration   1: 13509.719 ns/op
# Warmup Iteration   2: 4829.998 ns/op
# Warmup Iteration   3: 4048.169 ns/op
Iteration   1: 3679.835 ns/op
Iteration   2: 3678.584 ns/op
Iteration   3: 3683.882 ns/op
Iteration   4: 3675.114 ns/op
Iteration   5: 3667.136 ns/op
Iteration   6: 3673.644 ns/op
Iteration   7: 3668.923 ns/op
Iteration   8: 3671.085 ns/op
Iteration   9: 3682.367 ns/op
Iteration  10: 3674.978 ns/op

# Run progress: 72.43% complete, ETA 00:10:35
# Fork: 2 of 2
# Warmup Iteration   1: 13370.412 ns/op
# Warmup Iteration   2: 5067.594 ns/op
# Warmup Iteration   3: 4104.860 ns/op
Iteration   1: 3766.730 ns/op
Iteration   2: 3771.657 ns/op
Iteration   3: 3776.149 ns/op
Iteration   4: 3758.501 ns/op
Iteration   5: 3754.372 ns/op
Iteration   6: 3787.517 ns/op
Iteration   7: 3753.892 ns/op
Iteration   8: 3779.392 ns/op
Iteration   9: 3764.583 ns/op
Iteration  10: 3757.094 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3721.272 ±(99.9%) 41.440 ns/op [Average]
  (min, avg, max) = (3667.136, 3721.272, 3787.517), stdev = 47.722
  CI (99.9%): [3679.832, 3762.711] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 72.50% complete, ETA 00:10:33
# Fork: 1 of 2
# Warmup Iteration   1: 22.041 ns/op
# Warmup Iteration   2: 26.024 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.953 ns/op
Iteration   5: 15.678 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.116 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 72.57% complete, ETA 00:10:32
# Fork: 2 of 2
# Warmup Iteration   1: 22.451 ns/op
# Warmup Iteration   2: 25.784 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.940 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.573 ns/op
Iteration   8: 19.110 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.573, 16.019, 19.116), stdev = 1.069
  CI (99.9%): [15.091, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 72.64% complete, ETA 00:10:30
# Fork: 1 of 2
# Warmup Iteration   1: 2066.542 ns/op
# Warmup Iteration   2: 49465.153 ns/op
# Warmup Iteration   3: 3235.806 ns/op
Iteration   1: 39408.460 ns/op
Iteration   2: 40126.219 ns/op
Iteration   3: 55126.064 ns/op
Iteration   4: 48208.117 ns/op
Iteration   5: 717.651 ns/op
Iteration   6: 625.923 ns/op
Iteration   7: 880.281 ns/op
Iteration   8: 693.949 ns/op
Iteration   9: 662.007 ns/op
Iteration  10: 860.542 ns/op

# Run progress: 72.71% complete, ETA 00:10:28
# Fork: 2 of 2
# Warmup Iteration   1: 1544.392 ns/op
# Warmup Iteration   2: 51388.664 ns/op
# Warmup Iteration   3: 3551.371 ns/op
Iteration   1: 40289.135 ns/op
Iteration   2: 42828.989 ns/op
Iteration   3: 43432.628 ns/op
Iteration   4: 48502.186 ns/op
Iteration   5: 650.816 ns/op
Iteration   6: 617.200 ns/op
Iteration   7: 881.365 ns/op
Iteration   8: 687.057 ns/op
Iteration   9: 660.430 ns/op
Iteration  10: 851.544 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18335.528 ±(99.9%) 19422.304 ns/op [Average]
  (min, avg, max) = (617.200, 18335.528, 55126.064), stdev = 22366.755
  CI (99.9%): [≈ 0, 37757.832] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 72.78% complete, ETA 00:10:27
# Fork: 1 of 2
# Warmup Iteration   1: 7647.349 ns/op
# Warmup Iteration   2: 2064.365 ns/op
# Warmup Iteration   3: 1476.006 ns/op
Iteration   1: 41608.306 ns/op
Iteration   2: 15127.443 ns/op
Iteration   3: 1294.046 ns/op
Iteration   4: 906.587 ns/op
Iteration   5: 1007.794 ns/op
Iteration   6: 907.979 ns/op
Iteration   7: 1409.021 ns/op
Iteration   8: 886.375 ns/op
Iteration   9: 973.908 ns/op
Iteration  10: 798.050 ns/op

# Run progress: 72.85% complete, ETA 00:10:25
# Fork: 2 of 2
# Warmup Iteration   1: 8566.975 ns/op
# Warmup Iteration   2: 2470.716 ns/op
# Warmup Iteration   3: 1726.049 ns/op
Iteration   1: 40915.791 ns/op
Iteration   2: 13307.783 ns/op
Iteration   3: 1905.678 ns/op
Iteration   4: 910.937 ns/op
Iteration   5: 1010.477 ns/op
Iteration   6: 918.936 ns/op
Iteration   7: 1998.118 ns/op
Iteration   8: 891.113 ns/op
Iteration   9: 978.713 ns/op
Iteration  10: 806.850 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6428.195 ±(99.9%) 10922.827 ns/op [Average]
  (min, avg, max) = (798.050, 6428.195, 41608.306), stdev = 12578.744
  CI (99.9%): [≈ 0, 17351.022] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 72.92% complete, ETA 00:10:24
# Fork: 1 of 2
# Warmup Iteration   1: 37268.705 ns/op
# Warmup Iteration   2: 85997.558 ns/op
# Warmup Iteration   3: 1834.294 ns/op
Iteration   1: 31155.595 ns/op
Iteration   2: 24277.388 ns/op
Iteration   3: 1128.005 ns/op
Iteration   4: 883.055 ns/op
Iteration   5: 917.174 ns/op
Iteration   6: 811.252 ns/op
Iteration   7: 19575.339 ns/op
Iteration   8: 791.614 ns/op
Iteration   9: 859.460 ns/op
Iteration  10: 739.118 ns/op

# Run progress: 72.99% complete, ETA 00:10:22
# Fork: 2 of 2
# Warmup Iteration   1: 8962.560 ns/op
# Warmup Iteration   2: 88392.716 ns/op
# Warmup Iteration   3: 3073.829 ns/op
Iteration   1: 23243.545 ns/op
Iteration   2: 21140.995 ns/op
Iteration   3: 1157.747 ns/op
Iteration   4: 889.387 ns/op
Iteration   5: 908.544 ns/op
Iteration   6: 812.353 ns/op
Iteration   7: 18394.149 ns/op
Iteration   8: 764.803 ns/op
Iteration   9: 859.783 ns/op
Iteration  10: 729.854 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7501.958 ±(99.9%) 9246.118 ns/op [Average]
  (min, avg, max) = (729.854, 7501.958, 31155.595), stdev = 10647.843
  CI (99.9%): [≈ 0, 16748.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 73.06% complete, ETA 00:10:20
# Fork: 1 of 2
# Warmup Iteration   1: 2088.686 ns/op
# Warmup Iteration   2: 1356.405 ns/op
# Warmup Iteration   3: 998.873 ns/op
Iteration   1: 909.475 ns/op
Iteration   2: 3196.364 ns/op
Iteration   3: 1026.020 ns/op
Iteration   4: 983.367 ns/op
Iteration   5: 1009.377 ns/op
Iteration   6: 9427.603 ns/op
Iteration   7: 3782.522 ns/op
Iteration   8: 1079.725 ns/op
Iteration   9: 979.606 ns/op
Iteration  10: 975.763 ns/op

# Run progress: 73.13% complete, ETA 00:10:19
# Fork: 2 of 2
# Warmup Iteration   1: 1888.917 ns/op
# Warmup Iteration   2: 1567.274 ns/op
# Warmup Iteration   3: 984.315 ns/op
Iteration   1: 919.997 ns/op
Iteration   2: 84153.122 ns/op
Iteration   3: 1377.271 ns/op
Iteration   4: 988.681 ns/op
Iteration   5: 1006.488 ns/op
Iteration   6: 87314.361 ns/op
Iteration   7: 65320.851 ns/op
Iteration   8: 1391.886 ns/op
Iteration   9: 979.844 ns/op
Iteration  10: 975.062 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  13389.869 ±(99.9%) 24814.418 ns/op [Average]
  (min, avg, max) = (909.475, 13389.869, 87314.361), stdev = 28576.321
  CI (99.9%): [≈ 0, 38204.288] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 73.19% complete, ETA 00:10:17
# Fork: 1 of 2
# Warmup Iteration   1: 18647.842 ns/op
# Warmup Iteration   2: 4675.893 ns/op
# Warmup Iteration   3: 3823.035 ns/op
Iteration   1: 5433.199 ns/op
Iteration   2: 3538.902 ns/op
Iteration   3: 3591.806 ns/op
Iteration   4: 3511.699 ns/op
Iteration   5: 3561.233 ns/op
Iteration   6: 3536.770 ns/op
Iteration   7: 3532.254 ns/op
Iteration   8: 3538.424 ns/op
Iteration   9: 3522.049 ns/op
Iteration  10: 3549.303 ns/op

# Run progress: 73.26% complete, ETA 00:10:16
# Fork: 2 of 2
# Warmup Iteration   1: 14863.143 ns/op
# Warmup Iteration   2: 5072.919 ns/op
# Warmup Iteration   3: 4068.976 ns/op
Iteration   1: 5826.449 ns/op
Iteration   2: 3707.969 ns/op
Iteration   3: 3727.739 ns/op
Iteration   4: 3683.242 ns/op
Iteration   5: 3696.066 ns/op
Iteration   6: 3708.717 ns/op
Iteration   7: 3694.892 ns/op
Iteration   8: 3693.488 ns/op
Iteration   9: 3691.942 ns/op
Iteration  10: 3692.111 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3821.913 ±(99.9%) 544.025 ns/op [Average]
  (min, avg, max) = (3511.699, 3821.913, 5826.449), stdev = 626.500
  CI (99.9%): [3277.888, 4365.938] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 73.33% complete, ETA 00:10:14
# Fork: 1 of 2
# Warmup Iteration   1: 22.154 ns/op
# Warmup Iteration   2: 24.818 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.934 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.564 ns/op
Iteration   8: 19.116 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.577 ns/op

# Run progress: 73.40% complete, ETA 00:10:12
# Fork: 2 of 2
# Warmup Iteration   1: 22.009 ns/op
# Warmup Iteration   2: 22.869 ns/op
# Warmup Iteration   3: 15.769 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.941 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.570 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.097 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.564, 16.017, 19.116), stdev = 1.068
  CI (99.9%): [15.090, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 73.47% complete, ETA 00:10:11
# Fork: 1 of 2
# Warmup Iteration   1: 1017.423 ns/op
# Warmup Iteration   2: 467.705 ns/op
# Warmup Iteration   3: 340.821 ns/op
Iteration   1: 340.875 ns/op
Iteration   2: 341.132 ns/op
Iteration   3: 340.982 ns/op
Iteration   4: 342.765 ns/op
Iteration   5: 340.945 ns/op
Iteration   6: 340.996 ns/op
Iteration   7: 341.450 ns/op
Iteration   8: 343.781 ns/op
Iteration   9: 341.024 ns/op
Iteration  10: 340.949 ns/op

# Run progress: 73.54% complete, ETA 00:10:09
# Fork: 2 of 2
# Warmup Iteration   1: 983.063 ns/op
# Warmup Iteration   2: 445.485 ns/op
# Warmup Iteration   3: 342.220 ns/op
Iteration   1: 342.942 ns/op
Iteration   2: 342.812 ns/op
Iteration   3: 342.676 ns/op
Iteration   4: 343.837 ns/op
Iteration   5: 342.588 ns/op
Iteration   6: 342.638 ns/op
Iteration   7: 343.141 ns/op
Iteration   8: 343.753 ns/op
Iteration   9: 342.786 ns/op
Iteration  10: 342.778 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  342.243 ±(99.9%) 0.931 ns/op [Average]
  (min, avg, max) = (340.875, 342.243, 343.837), stdev = 1.072
  CI (99.9%): [341.311, 343.174] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 73.61% complete, ETA 00:10:08
# Fork: 1 of 2
# Warmup Iteration   1: 30064.382 ns/op
# Warmup Iteration   2: 938.292 ns/op
# Warmup Iteration   3: 785.589 ns/op
Iteration   1: 719.697 ns/op
Iteration   2: 720.506 ns/op
Iteration   3: 719.018 ns/op
Iteration   4: 750.298 ns/op
Iteration   5: 719.542 ns/op
Iteration   6: 719.585 ns/op
Iteration   7: 720.282 ns/op
Iteration   8: 719.915 ns/op
Iteration   9: 719.326 ns/op
Iteration  10: 719.003 ns/op

# Run progress: 73.68% complete, ETA 00:10:06
# Fork: 2 of 2
# Warmup Iteration   1: 39961.314 ns/op
# Warmup Iteration   2: 1917.947 ns/op
# Warmup Iteration   3: 847.876 ns/op
Iteration   1: 717.253 ns/op
Iteration   2: 716.939 ns/op
Iteration   3: 717.430 ns/op
Iteration   4: 741.074 ns/op
Iteration   5: 717.864 ns/op
Iteration   6: 716.831 ns/op
Iteration   7: 716.931 ns/op
Iteration   8: 716.935 ns/op
Iteration   9: 717.869 ns/op
Iteration  10: 716.642 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  721.147 ±(99.9%) 7.485 ns/op [Average]
  (min, avg, max) = (716.642, 721.147, 750.298), stdev = 8.620
  CI (99.9%): [713.662, 728.632] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 73.75% complete, ETA 00:10:04
# Fork: 1 of 2
# Warmup Iteration   1: 11514.727 ns/op
# Warmup Iteration   2: 938.188 ns/op
# Warmup Iteration   3: 728.573 ns/op
Iteration   1: 728.804 ns/op
Iteration   2: 728.003 ns/op
Iteration   3: 728.751 ns/op
Iteration   4: 744.604 ns/op
Iteration   5: 727.357 ns/op
Iteration   6: 727.799 ns/op
Iteration   7: 728.670 ns/op
Iteration   8: 728.532 ns/op
Iteration   9: 728.853 ns/op
Iteration  10: 728.514 ns/op

# Run progress: 73.82% complete, ETA 00:10:03
# Fork: 2 of 2
# Warmup Iteration   1: 12828.085 ns/op
# Warmup Iteration   2: 915.398 ns/op
# Warmup Iteration   3: 781.903 ns/op
Iteration   1: 721.960 ns/op
Iteration   2: 721.514 ns/op
Iteration   3: 722.081 ns/op
Iteration   4: 741.779 ns/op
Iteration   5: 721.337 ns/op
Iteration   6: 721.341 ns/op
Iteration   7: 720.840 ns/op
Iteration   8: 720.830 ns/op
Iteration   9: 722.182 ns/op
Iteration  10: 721.303 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  726.753 ±(99.9%) 5.710 ns/op [Average]
  (min, avg, max) = (720.830, 726.753, 744.604), stdev = 6.576
  CI (99.9%): [721.043, 732.463] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 73.89% complete, ETA 00:10:01
# Fork: 1 of 2
# Warmup Iteration   1: 1265.192 ns/op
# Warmup Iteration   2: 1016.058 ns/op
# Warmup Iteration   3: 702.799 ns/op
Iteration   1: 703.074 ns/op
Iteration   2: 703.424 ns/op
Iteration   3: 703.310 ns/op
Iteration   4: 703.694 ns/op
Iteration   5: 703.238 ns/op
Iteration   6: 703.170 ns/op
Iteration   7: 703.259 ns/op
Iteration   8: 703.579 ns/op
Iteration   9: 704.027 ns/op
Iteration  10: 703.233 ns/op

# Run progress: 73.96% complete, ETA 00:10:00
# Fork: 2 of 2
# Warmup Iteration   1: 1532.718 ns/op
# Warmup Iteration   2: 1100.088 ns/op
# Warmup Iteration   3: 703.113 ns/op
Iteration   1: 703.208 ns/op
Iteration   2: 703.466 ns/op
Iteration   3: 704.160 ns/op
Iteration   4: 703.622 ns/op
Iteration   5: 703.111 ns/op
Iteration   6: 703.231 ns/op
Iteration   7: 703.086 ns/op
Iteration   8: 702.951 ns/op
Iteration   9: 703.323 ns/op
Iteration  10: 703.080 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  703.362 ±(99.9%) 0.276 ns/op [Average]
  (min, avg, max) = (702.951, 703.362, 704.160), stdev = 0.317
  CI (99.9%): [703.087, 703.638] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 74.03% complete, ETA 00:09:58
# Fork: 1 of 2
# Warmup Iteration   1: 12073.124 ns/op
# Warmup Iteration   2: 5107.728 ns/op
# Warmup Iteration   3: 4094.905 ns/op
Iteration   1: 3774.090 ns/op
Iteration   2: 3737.864 ns/op
Iteration   3: 3778.506 ns/op
Iteration   4: 3728.644 ns/op
Iteration   5: 3762.008 ns/op
Iteration   6: 3779.857 ns/op
Iteration   7: 3749.677 ns/op
Iteration   8: 3708.832 ns/op
Iteration   9: 3737.094 ns/op
Iteration  10: 3760.186 ns/op

# Run progress: 74.10% complete, ETA 00:09:56
# Fork: 2 of 2
# Warmup Iteration   1: 10196.026 ns/op
# Warmup Iteration   2: 4832.995 ns/op
# Warmup Iteration   3: 3421.661 ns/op
Iteration   1: 3425.601 ns/op
Iteration   2: 3418.238 ns/op
Iteration   3: 3421.512 ns/op
Iteration   4: 3417.057 ns/op
Iteration   5: 3399.817 ns/op
Iteration   6: 3409.966 ns/op
Iteration   7: 3410.945 ns/op
Iteration   8: 3408.271 ns/op
Iteration   9: 3408.674 ns/op
Iteration  10: 3407.808 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3582.232 ±(99.9%) 151.681 ns/op [Average]
  (min, avg, max) = (3399.817, 3582.232, 3779.857), stdev = 174.676
  CI (99.9%): [3430.552, 3733.913] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 74.17% complete, ETA 00:09:55
# Fork: 1 of 2
# Warmup Iteration   1: 23.341 ns/op
# Warmup Iteration   2: 25.788 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.571 ns/op
Iteration   3: 16.003 ns/op
Iteration   4: 15.966 ns/op
Iteration   5: 15.677 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.114 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.587 ns/op

# Run progress: 74.24% complete, ETA 00:09:53
# Fork: 2 of 2
# Warmup Iteration   1: 22.490 ns/op
# Warmup Iteration   2: 25.825 ns/op
# Warmup Iteration   3: 15.779 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.115 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.022 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.571, 16.022, 19.115), stdev = 1.069
  CI (99.9%): [15.094, 16.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 74.31% complete, ETA 00:09:52
# Fork: 1 of 2
# Warmup Iteration   1: 997.135 ns/op
# Warmup Iteration   2: 26102.245 ns/op
# Warmup Iteration   3: 664.725 ns/op
Iteration   1: 18939.033 ns/op
Iteration   2: 31255.718 ns/op
Iteration   3: 26622.651 ns/op
Iteration   4: 804.152 ns/op
Iteration   5: 35117.352 ns/op
Iteration   6: 25778.259 ns/op
Iteration   7: 779.295 ns/op
Iteration   8: 422.827 ns/op
Iteration   9: 423.199 ns/op
Iteration  10: 637.153 ns/op

# Run progress: 74.38% complete, ETA 00:09:50
# Fork: 2 of 2
# Warmup Iteration   1: 1066.159 ns/op
# Warmup Iteration   2: 10223.614 ns/op
# Warmup Iteration   3: 657.495 ns/op
Iteration   1: 22800.741 ns/op
Iteration   2: 26336.353 ns/op
Iteration   3: 27154.264 ns/op
Iteration   4: 817.902 ns/op
Iteration   5: 37564.637 ns/op
Iteration   6: 28070.047 ns/op
Iteration   7: 795.464 ns/op
Iteration   8: 408.038 ns/op
Iteration   9: 419.778 ns/op
Iteration  10: 639.631 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  14289.325 ±(99.9%) 12618.877 ns/op [Average]
  (min, avg, max) = (408.038, 14289.325, 37564.637), stdev = 14531.917
  CI (99.9%): [1670.448, 26908.201] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 74.44% complete, ETA 00:09:48
# Fork: 1 of 2
# Warmup Iteration   1: 18606.398 ns/op
# Warmup Iteration   2: 665.073 ns/op
# Warmup Iteration   3: 582.479 ns/op
Iteration   1: 444.049 ns/op
Iteration   2: 462.960 ns/op
Iteration   3: 14529.314 ns/op
Iteration   4: 701.567 ns/op
Iteration   5: 11998.694 ns/op
Iteration   6: 517.643 ns/op
Iteration   7: 624.198 ns/op
Iteration   8: 431.676 ns/op
Iteration   9: 434.362 ns/op
Iteration  10: 573.269 ns/op

# Run progress: 74.51% complete, ETA 00:09:47
# Fork: 2 of 2
# Warmup Iteration   1: 18221.265 ns/op
# Warmup Iteration   2: 754.309 ns/op
# Warmup Iteration   3: 581.738 ns/op
Iteration   1: 443.779 ns/op
Iteration   2: 455.260 ns/op
Iteration   3: 14279.139 ns/op
Iteration   4: 653.489 ns/op
Iteration   5: 1367.750 ns/op
Iteration   6: 494.889 ns/op
Iteration   7: 601.363 ns/op
Iteration   8: 420.996 ns/op
Iteration   9: 412.722 ns/op
Iteration  10: 549.966 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2519.854 ±(99.9%) 4170.173 ns/op [Average]
  (min, avg, max) = (412.722, 2519.854, 14529.314), stdev = 4802.377
  CI (99.9%): [≈ 0, 6690.027] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 74.58% complete, ETA 00:09:45
# Fork: 1 of 2
# Warmup Iteration   1: 17108.216 ns/op
# Warmup Iteration   2: 581.849 ns/op
# Warmup Iteration   3: 652.646 ns/op
Iteration   1: 20843.294 ns/op
Iteration   2: 533.313 ns/op
Iteration   3: 17842.673 ns/op
Iteration   4: 22434.705 ns/op
Iteration   5: 625.318 ns/op
Iteration   6: 497.717 ns/op
Iteration   7: 602.901 ns/op
Iteration   8: 481.250 ns/op
Iteration   9: 461.883 ns/op
Iteration  10: 607.862 ns/op

# Run progress: 74.65% complete, ETA 00:09:44
# Fork: 2 of 2
# Warmup Iteration   1: 24688.983 ns/op
# Warmup Iteration   2: 605.875 ns/op
# Warmup Iteration   3: 698.502 ns/op
Iteration   1: 14628.604 ns/op
Iteration   2: 540.929 ns/op
Iteration   3: 16750.780 ns/op
Iteration   4: 2683.182 ns/op
Iteration   5: 633.385 ns/op
Iteration   6: 507.193 ns/op
Iteration   7: 620.001 ns/op
Iteration   8: 499.984 ns/op
Iteration   9: 471.833 ns/op
Iteration  10: 627.416 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5144.711 ±(99.9%) 6994.801 ns/op [Average]
  (min, avg, max) = (461.883, 5144.711, 22434.705), stdev = 8055.223
  CI (99.9%): [≈ 0, 12139.512] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 74.72% complete, ETA 00:09:42
# Fork: 1 of 2
# Warmup Iteration   1: 375.639 ns/op
# Warmup Iteration   2: 1178.706 ns/op
# Warmup Iteration   3: 344.630 ns/op
Iteration   1: 221.743 ns/op
Iteration   2: 589.575 ns/op
Iteration   3: 378.436 ns/op
Iteration   4: 410.024 ns/op
Iteration   5: 405.607 ns/op
Iteration   6: 945.985 ns/op
Iteration   7: 445.392 ns/op
Iteration   8: 239.677 ns/op
Iteration   9: 258.562 ns/op
Iteration  10: 367.448 ns/op

# Run progress: 74.79% complete, ETA 00:09:40
# Fork: 2 of 2
# Warmup Iteration   1: 341.701 ns/op
# Warmup Iteration   2: 847.982 ns/op
# Warmup Iteration   3: 344.833 ns/op
Iteration   1: 222.347 ns/op
Iteration   2: 944.674 ns/op
Iteration   3: 378.108 ns/op
Iteration   4: 410.164 ns/op
Iteration   5: 405.290 ns/op
Iteration   6: 767.888 ns/op
Iteration   7: 446.360 ns/op
Iteration   8: 240.533 ns/op
Iteration   9: 260.698 ns/op
Iteration  10: 369.393 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  435.395 ±(99.9%) 189.231 ns/op [Average]
  (min, avg, max) = (221.743, 435.395, 945.985), stdev = 217.919
  CI (99.9%): [246.164, 624.627] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 16, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 74.86% complete, ETA 00:09:39
# Fork: 1 of 2
# Warmup Iteration   1: 16224.757 ns/op
# Warmup Iteration   2: 85099.556 ns/op
# Warmup Iteration   3: 4821.461 ns/op
Iteration   1: 4885.349 ns/op
Iteration   2: 4117.042 ns/op
Iteration   3: 4051.284 ns/op
Iteration   4: 4151.980 ns/op
Iteration   5: 4163.849 ns/op
Iteration   6: 4102.005 ns/op
Iteration   7: 4344.357 ns/op
Iteration   8: 3829.037 ns/op
Iteration   9: 4045.889 ns/op
Iteration  10: 4244.926 ns/op

# Run progress: 74.93% complete, ETA 00:09:37
# Fork: 2 of 2
# Warmup Iteration   1: 12927.287 ns/op
# Warmup Iteration   2: 28125.771 ns/op
# Warmup Iteration   3: 5117.943 ns/op
Iteration   1: 4062.901 ns/op
Iteration   2: 4140.839 ns/op
Iteration   3: 4131.948 ns/op
Iteration   4: 4198.337 ns/op
Iteration   5: 4199.606 ns/op
Iteration   6: 4154.849 ns/op
Iteration   7: 4408.387 ns/op
Iteration   8: 3969.140 ns/op
Iteration   9: 4114.339 ns/op
Iteration  10: 4356.747 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4183.641 ±(99.9%) 183.492 ns/op [Average]
  (min, avg, max) = (3829.037, 4183.641, 4885.349), stdev = 211.310
  CI (99.9%): [4000.149, 4367.133] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 75.00% complete, ETA 00:09:36
# Fork: 1 of 2
# Warmup Iteration   1: 23.234 ns/op
# Warmup Iteration   2: 25.916 ns/op
# Warmup Iteration   3: 15.792 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.570 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.574 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.096 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 75.07% complete, ETA 00:09:34
# Fork: 2 of 2
# Warmup Iteration   1: 22.558 ns/op
# Warmup Iteration   2: 24.029 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.100 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.573 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.925 ns/op [Average]
  (min, avg, max) = (15.570, 16.017, 19.100), stdev = 1.065
  CI (99.9%): [15.092, 16.942] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 75.14% complete, ETA 00:09:32
# Fork: 1 of 2
# Warmup Iteration   1: 3928.481 ns/op
# Warmup Iteration   2: 1401.468 ns/op
# Warmup Iteration   3: 980.861 ns/op
Iteration   1: 978.183 ns/op
Iteration   2: 983.467 ns/op
Iteration   3: 990.223 ns/op
Iteration   4: 985.276 ns/op
Iteration   5: 982.194 ns/op
Iteration   6: 990.540 ns/op
Iteration   7: 984.362 ns/op
Iteration   8: 988.862 ns/op
Iteration   9: 985.507 ns/op
Iteration  10: 979.675 ns/op

# Run progress: 75.21% complete, ETA 00:09:31
# Fork: 2 of 2
# Warmup Iteration   1: 4431.864 ns/op
# Warmup Iteration   2: 1316.109 ns/op
# Warmup Iteration   3: 972.182 ns/op
Iteration   1: 970.964 ns/op
Iteration   2: 971.350 ns/op
Iteration   3: 970.925 ns/op
Iteration   4: 976.526 ns/op
Iteration   5: 970.045 ns/op
Iteration   6: 970.189 ns/op
Iteration   7: 971.089 ns/op
Iteration   8: 971.282 ns/op
Iteration   9: 972.128 ns/op
Iteration  10: 973.205 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  978.300 ±(99.9%) 6.435 ns/op [Average]
  (min, avg, max) = (970.045, 978.300, 990.540), stdev = 7.411
  CI (99.9%): [971.864, 984.735] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 75.28% complete, ETA 00:09:29
# Fork: 1 of 2
# Warmup Iteration   1: 15220.952 ns/op
# Warmup Iteration   2: 1633.052 ns/op
# Warmup Iteration   3: 1188.587 ns/op
Iteration   1: 1090.306 ns/op
Iteration   2: 1089.571 ns/op
Iteration   3: 1090.661 ns/op
Iteration   4: 1090.325 ns/op
Iteration   5: 1088.443 ns/op
Iteration   6: 1089.641 ns/op
Iteration   7: 1089.986 ns/op
Iteration   8: 1087.962 ns/op
Iteration   9: 1089.947 ns/op
Iteration  10: 1089.710 ns/op

# Run progress: 75.35% complete, ETA 00:09:28
# Fork: 2 of 2
# Warmup Iteration   1: 7625.325 ns/op
# Warmup Iteration   2: 1434.497 ns/op
# Warmup Iteration   3: 1096.714 ns/op
Iteration   1: 1095.366 ns/op
Iteration   2: 1094.850 ns/op
Iteration   3: 1095.412 ns/op
Iteration   4: 1096.016 ns/op
Iteration   5: 1097.297 ns/op
Iteration   6: 1096.746 ns/op
Iteration   7: 1096.648 ns/op
Iteration   8: 1096.373 ns/op
Iteration   9: 1096.524 ns/op
Iteration  10: 1096.788 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1092.929 ±(99.9%) 2.995 ns/op [Average]
  (min, avg, max) = (1087.962, 1092.929, 1097.297), stdev = 3.449
  CI (99.9%): [1089.933, 1095.924] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 75.42% complete, ETA 00:09:26
# Fork: 1 of 2
# Warmup Iteration   1: 18154.032 ns/op
# Warmup Iteration   2: 1794.010 ns/op
# Warmup Iteration   3: 1184.248 ns/op
Iteration   1: 1088.434 ns/op
Iteration   2: 1088.111 ns/op
Iteration   3: 1088.042 ns/op
Iteration   4: 1089.070 ns/op
Iteration   5: 1089.023 ns/op
Iteration   6: 1088.423 ns/op
Iteration   7: 1096.694 ns/op
Iteration   8: 1089.594 ns/op
Iteration   9: 1088.480 ns/op
Iteration  10: 1097.369 ns/op

# Run progress: 75.49% complete, ETA 00:09:24
# Fork: 2 of 2
# Warmup Iteration   1: 7843.630 ns/op
# Warmup Iteration   2: 1695.717 ns/op
# Warmup Iteration   3: 1091.475 ns/op
Iteration   1: 1091.879 ns/op
Iteration   2: 1091.707 ns/op
Iteration   3: 1092.879 ns/op
Iteration   4: 1093.227 ns/op
Iteration   5: 1091.572 ns/op
Iteration   6: 1091.973 ns/op
Iteration   7: 1092.390 ns/op
Iteration   8: 1092.643 ns/op
Iteration   9: 1093.203 ns/op
Iteration  10: 1092.307 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1091.351 ±(99.9%) 2.349 ns/op [Average]
  (min, avg, max) = (1088.042, 1091.351, 1097.369), stdev = 2.705
  CI (99.9%): [1089.002, 1093.700] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 75.56% complete, ETA 00:09:23
# Fork: 1 of 2
# Warmup Iteration   1: 1626.012 ns/op
# Warmup Iteration   2: 1389.903 ns/op
# Warmup Iteration   3: 1025.934 ns/op
Iteration   1: 1017.203 ns/op
Iteration   2: 1018.170 ns/op
Iteration   3: 1020.426 ns/op
Iteration   4: 1031.120 ns/op
Iteration   5: 1016.389 ns/op
Iteration   6: 1016.640 ns/op
Iteration   7: 1033.018 ns/op
Iteration   8: 1026.993 ns/op
Iteration   9: 1029.425 ns/op
Iteration  10: 1016.245 ns/op

# Run progress: 75.63% complete, ETA 00:09:21
# Fork: 2 of 2
# Warmup Iteration   1: 1611.820 ns/op
# Warmup Iteration   2: 1318.498 ns/op
# Warmup Iteration   3: 1015.634 ns/op
Iteration   1: 1015.780 ns/op
Iteration   2: 1029.347 ns/op
Iteration   3: 1021.250 ns/op
Iteration   4: 1017.841 ns/op
Iteration   5: 1015.569 ns/op
Iteration   6: 1017.719 ns/op
Iteration   7: 1017.604 ns/op
Iteration   8: 1017.941 ns/op
Iteration   9: 1025.674 ns/op
Iteration  10: 1017.655 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1021.100 ±(99.9%) 5.041 ns/op [Average]
  (min, avg, max) = (1015.569, 1021.100, 1033.018), stdev = 5.805
  CI (99.9%): [1016.059, 1026.141] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 75.69% complete, ETA 00:09:20
# Fork: 1 of 2
# Warmup Iteration   1: 10695.472 ns/op
# Warmup Iteration   2: 5218.783 ns/op
# Warmup Iteration   3: 4221.689 ns/op
Iteration   1: 3851.626 ns/op
Iteration   2: 3854.270 ns/op
Iteration   3: 3856.712 ns/op
Iteration   4: 3839.390 ns/op
Iteration   5: 3836.539 ns/op
Iteration   6: 3847.716 ns/op
Iteration   7: 3837.352 ns/op
Iteration   8: 3843.655 ns/op
Iteration   9: 3938.425 ns/op
Iteration  10: 3833.760 ns/op

# Run progress: 75.76% complete, ETA 00:09:18
# Fork: 2 of 2
# Warmup Iteration   1: 9421.182 ns/op
# Warmup Iteration   2: 5065.315 ns/op
# Warmup Iteration   3: 3606.304 ns/op
Iteration   1: 3602.610 ns/op
Iteration   2: 3602.154 ns/op
Iteration   3: 3602.883 ns/op
Iteration   4: 3596.598 ns/op
Iteration   5: 3595.470 ns/op
Iteration   6: 3606.054 ns/op
Iteration   7: 3597.046 ns/op
Iteration   8: 3585.679 ns/op
Iteration   9: 3600.846 ns/op
Iteration  10: 3597.709 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3726.325 ±(99.9%) 115.221 ns/op [Average]
  (min, avg, max) = (3585.679, 3726.325, 3938.425), stdev = 132.689
  CI (99.9%): [3611.104, 3841.546] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 75.83% complete, ETA 00:09:16
# Fork: 1 of 2
# Warmup Iteration   1: 22.216 ns/op
# Warmup Iteration   2: 22.832 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.575 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.989 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.676 ns/op
Iteration   6: 15.571 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.120 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.590 ns/op

# Run progress: 75.90% complete, ETA 00:09:15
# Fork: 2 of 2
# Warmup Iteration   1: 21.996 ns/op
# Warmup Iteration   2: 24.396 ns/op
# Warmup Iteration   3: 15.759 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.587 ns/op
Iteration   3: 15.992 ns/op
Iteration   4: 15.961 ns/op
Iteration   5: 15.686 ns/op
Iteration   6: 15.584 ns/op
Iteration   7: 15.574 ns/op
Iteration   8: 19.098 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.022 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.571, 16.022, 19.120), stdev = 1.067
  CI (99.9%): [15.095, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 75.97% complete, ETA 00:09:13
# Fork: 1 of 2
# Warmup Iteration   1: 1991.675 ns/op
# Warmup Iteration   2: 1096.364 ns/op
# Warmup Iteration   3: 781.401 ns/op
Iteration   1: 781.047 ns/op
Iteration   2: 781.070 ns/op
Iteration   3: 781.437 ns/op
Iteration   4: 782.337 ns/op
Iteration   5: 788.109 ns/op
Iteration   6: 787.849 ns/op
Iteration   7: 781.033 ns/op
Iteration   8: 791.366 ns/op
Iteration   9: 781.045 ns/op
Iteration  10: 781.592 ns/op

# Run progress: 76.04% complete, ETA 00:09:12
# Fork: 2 of 2
# Warmup Iteration   1: 1808.144 ns/op
# Warmup Iteration   2: 1114.158 ns/op
# Warmup Iteration   3: 778.467 ns/op
Iteration   1: 771.676 ns/op
Iteration   2: 779.439 ns/op
Iteration   3: 780.454 ns/op
Iteration   4: 772.195 ns/op
Iteration   5: 779.719 ns/op
Iteration   6: 779.537 ns/op
Iteration   7: 779.094 ns/op
Iteration   8: 783.103 ns/op
Iteration   9: 780.465 ns/op
Iteration  10: 779.401 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  781.098 ±(99.9%) 3.929 ns/op [Average]
  (min, avg, max) = (771.676, 781.098, 791.366), stdev = 4.524
  CI (99.9%): [777.170, 785.027] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 76.11% complete, ETA 00:09:10
# Fork: 1 of 2
# Warmup Iteration   1: 6649.693 ns/op
# Warmup Iteration   2: 1350.838 ns/op
# Warmup Iteration   3: 846.809 ns/op
Iteration   1: 846.973 ns/op
Iteration   2: 846.120 ns/op
Iteration   3: 848.306 ns/op
Iteration   4: 845.769 ns/op
Iteration   5: 846.327 ns/op
Iteration   6: 846.172 ns/op
Iteration   7: 846.382 ns/op
Iteration   8: 847.125 ns/op
Iteration   9: 846.742 ns/op
Iteration  10: 846.410 ns/op

# Run progress: 76.18% complete, ETA 00:09:08
# Fork: 2 of 2
# Warmup Iteration   1: 7592.538 ns/op
# Warmup Iteration   2: 1336.593 ns/op
# Warmup Iteration   3: 862.854 ns/op
Iteration   1: 862.443 ns/op
Iteration   2: 861.259 ns/op
Iteration   3: 847.781 ns/op
Iteration   4: 853.528 ns/op
Iteration   5: 862.209 ns/op
Iteration   6: 860.068 ns/op
Iteration   7: 862.777 ns/op
Iteration   8: 849.112 ns/op
Iteration   9: 864.368 ns/op
Iteration  10: 860.684 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  852.528 ±(99.9%) 6.375 ns/op [Average]
  (min, avg, max) = (845.769, 852.528, 864.368), stdev = 7.342
  CI (99.9%): [846.152, 858.903] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 76.25% complete, ETA 00:09:07
# Fork: 1 of 2
# Warmup Iteration   1: 63470.721 ns/op
# Warmup Iteration   2: 1926.311 ns/op
# Warmup Iteration   3: 985.097 ns/op
Iteration   1: 842.991 ns/op
Iteration   2: 844.636 ns/op
Iteration   3: 844.847 ns/op
Iteration   4: 867.353 ns/op
Iteration   5: 844.190 ns/op
Iteration   6: 841.483 ns/op
Iteration   7: 843.873 ns/op
Iteration   8: 844.905 ns/op
Iteration   9: 841.543 ns/op
Iteration  10: 844.721 ns/op

# Run progress: 76.32% complete, ETA 00:09:05
# Fork: 2 of 2
# Warmup Iteration   1: 61107.926 ns/op
# Warmup Iteration   2: 2023.638 ns/op
# Warmup Iteration   3: 997.016 ns/op
Iteration   1: 837.860 ns/op
Iteration   2: 836.385 ns/op
Iteration   3: 838.134 ns/op
Iteration   4: 861.787 ns/op
Iteration   5: 837.216 ns/op
Iteration   6: 837.227 ns/op
Iteration   7: 836.828 ns/op
Iteration   8: 840.398 ns/op
Iteration   9: 837.196 ns/op
Iteration  10: 837.415 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  843.049 ±(99.9%) 7.003 ns/op [Average]
  (min, avg, max) = (836.385, 843.049, 867.353), stdev = 8.064
  CI (99.9%): [836.047, 850.052] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 76.39% complete, ETA 00:09:04
# Fork: 1 of 2
# Warmup Iteration   1: 944.768 ns/op
# Warmup Iteration   2: 807.663 ns/op
# Warmup Iteration   3: 569.596 ns/op
Iteration   1: 569.809 ns/op
Iteration   2: 570.002 ns/op
Iteration   3: 569.779 ns/op
Iteration   4: 570.148 ns/op
Iteration   5: 569.771 ns/op
Iteration   6: 569.855 ns/op
Iteration   7: 569.757 ns/op
Iteration   8: 569.711 ns/op
Iteration   9: 569.850 ns/op
Iteration  10: 569.630 ns/op

# Run progress: 76.46% complete, ETA 00:09:02
# Fork: 2 of 2
# Warmup Iteration   1: 1016.744 ns/op
# Warmup Iteration   2: 730.428 ns/op
# Warmup Iteration   3: 569.606 ns/op
Iteration   1: 569.736 ns/op
Iteration   2: 569.888 ns/op
Iteration   3: 569.865 ns/op
Iteration   4: 570.006 ns/op
Iteration   5: 569.871 ns/op
Iteration   6: 569.813 ns/op
Iteration   7: 570.066 ns/op
Iteration   8: 569.681 ns/op
Iteration   9: 569.790 ns/op
Iteration  10: 569.804 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  569.842 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (569.630, 569.842, 570.148), stdev = 0.130
  CI (99.9%): [569.729, 569.955] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 76.53% complete, ETA 00:09:00
# Fork: 1 of 2
# Warmup Iteration   1: 525.144 ns/op
# Warmup Iteration   2: 467.416 ns/op
# Warmup Iteration   3: 308.957 ns/op
Iteration   1: 309.128 ns/op
Iteration   2: 311.136 ns/op
Iteration   3: 309.557 ns/op
Iteration   4: 314.799 ns/op
Iteration   5: 309.182 ns/op
Iteration   6: 308.999 ns/op
Iteration   7: 308.884 ns/op
Iteration   8: 312.739 ns/op
Iteration   9: 318.879 ns/op
Iteration  10: 308.616 ns/op

# Run progress: 76.60% complete, ETA 00:08:59
# Fork: 2 of 2
# Warmup Iteration   1: 596.417 ns/op
# Warmup Iteration   2: 478.067 ns/op
# Warmup Iteration   3: 309.218 ns/op
Iteration   1: 309.051 ns/op
Iteration   2: 311.339 ns/op
Iteration   3: 309.892 ns/op
Iteration   4: 314.397 ns/op
Iteration   5: 309.273 ns/op
Iteration   6: 309.596 ns/op
Iteration   7: 308.932 ns/op
Iteration   8: 312.519 ns/op
Iteration   9: 318.473 ns/op
Iteration  10: 308.716 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  311.205 ±(99.9%) 2.753 ns/op [Average]
  (min, avg, max) = (308.616, 311.205, 318.879), stdev = 3.171
  CI (99.9%): [308.452, 313.959] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 76.67% complete, ETA 00:08:57
# Fork: 1 of 2
# Warmup Iteration   1: 22.141 ns/op
# Warmup Iteration   2: 24.760 ns/op
# Warmup Iteration   3: 15.766 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.947 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.562 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 76.74% complete, ETA 00:08:56
# Fork: 2 of 2
# Warmup Iteration   1: 23.133 ns/op
# Warmup Iteration   2: 22.858 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.587 ns/op
Iteration   2: 15.575 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.562, 16.017, 19.103), stdev = 1.066
  CI (99.9%): [15.091, 16.943] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 76.81% complete, ETA 00:08:54
# Fork: 1 of 2
# Warmup Iteration   1: 3012.832 ns/op
# Warmup Iteration   2: 56486.878 ns/op
# Warmup Iteration   3: 6212.624 ns/op
Iteration   1: 40423.179 ns/op
Iteration   2: 743.072 ns/op
Iteration   3: 61755.680 ns/op
Iteration   4: 46694.555 ns/op
Iteration   5: 836.582 ns/op
Iteration   6: 60874.167 ns/op
Iteration   7: 44319.676 ns/op
Iteration   8: 1062.343 ns/op
Iteration   9: 834.882 ns/op
Iteration  10: 870.866 ns/op

# Run progress: 76.88% complete, ETA 00:08:52
# Fork: 2 of 2
# Warmup Iteration   1: 2815.877 ns/op
# Warmup Iteration   2: 55425.300 ns/op
# Warmup Iteration   3: 3206.404 ns/op
Iteration   1: 43602.235 ns/op
Iteration   2: 737.396 ns/op
Iteration   3: 55445.910 ns/op
Iteration   4: 47025.100 ns/op
Iteration   5: 837.981 ns/op
Iteration   6: 53274.805 ns/op
Iteration   7: 41164.704 ns/op
Iteration   8: 799.250 ns/op
Iteration   9: 835.109 ns/op
Iteration  10: 879.228 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  25150.836 ±(99.9%) 22159.854 ns/op [Average]
  (min, avg, max) = (737.396, 25150.836, 61755.680), stdev = 25519.320
  CI (99.9%): [2990.982, 47310.690] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 76.94% complete, ETA 00:08:51
# Fork: 1 of 2
# Warmup Iteration   1: 29945.519 ns/op
# Warmup Iteration   2: 3254.125 ns/op
# Warmup Iteration   3: 1150.690 ns/op
Iteration   1: 37091.197 ns/op
Iteration   2: 12451.355 ns/op
Iteration   3: 3019.580 ns/op
Iteration   4: 1769.409 ns/op
Iteration   5: 3954.494 ns/op
Iteration   6: 2039.670 ns/op
Iteration   7: 1065.488 ns/op
Iteration   8: 830.784 ns/op
Iteration   9: 871.554 ns/op
Iteration  10: 871.333 ns/op

# Run progress: 77.01% complete, ETA 00:08:49
# Fork: 2 of 2
# Warmup Iteration   1: 14952.076 ns/op
# Warmup Iteration   2: 4695.895 ns/op
# Warmup Iteration   3: 1604.923 ns/op
Iteration   1: 33784.660 ns/op
Iteration   2: 5432.215 ns/op
Iteration   3: 2087.143 ns/op
Iteration   4: 1294.186 ns/op
Iteration   5: 5702.349 ns/op
Iteration   6: 2110.571 ns/op
Iteration   7: 1056.584 ns/op
Iteration   8: 825.561 ns/op
Iteration   9: 870.240 ns/op
Iteration  10: 865.896 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5899.713 ±(99.9%) 9101.447 ns/op [Average]
  (min, avg, max) = (825.561, 5899.713, 37091.197), stdev = 10481.240
  CI (99.9%): [≈ 0, 15001.161] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 77.08% complete, ETA 00:08:48
# Fork: 1 of 2
# Warmup Iteration   1: 38761.210 ns/op
# Warmup Iteration   2: 27712.333 ns/op
# Warmup Iteration   3: 1810.814 ns/op
Iteration   1: 78392.574 ns/op
Iteration   2: 35074.477 ns/op
Iteration   3: 6315.288 ns/op
Iteration   4: 29160.697 ns/op
Iteration   5: 14618.089 ns/op
Iteration   6: 2943.502 ns/op
Iteration   7: 1111.317 ns/op
Iteration   8: 877.906 ns/op
Iteration   9: 759.446 ns/op
Iteration  10: 939.025 ns/op

# Run progress: 77.15% complete, ETA 00:08:46
# Fork: 2 of 2
# Warmup Iteration   1: 35667.189 ns/op
# Warmup Iteration   2: 25072.142 ns/op
# Warmup Iteration   3: 1731.673 ns/op
Iteration   1: 78262.713 ns/op
Iteration   2: 67413.324 ns/op
Iteration   3: 10628.522 ns/op
Iteration   4: 22470.576 ns/op
Iteration   5: 19693.967 ns/op
Iteration   6: 8962.230 ns/op
Iteration   7: 1105.166 ns/op
Iteration   8: 880.569 ns/op
Iteration   9: 774.137 ns/op
Iteration  10: 939.821 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  19066.167 ±(99.9%) 22696.855 ns/op [Average]
  (min, avg, max) = (759.446, 19066.167, 78392.574), stdev = 26137.732
  CI (99.9%): [≈ 0, 41763.023] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 77.22% complete, ETA 00:08:44
# Fork: 1 of 2
# Warmup Iteration   1: 1974.682 ns/op
# Warmup Iteration   2: 1328.180 ns/op
# Warmup Iteration   3: 1007.396 ns/op
Iteration   1: 962.187 ns/op
Iteration   2: 1006.726 ns/op
Iteration   3: 1028.028 ns/op
Iteration   4: 988.450 ns/op
Iteration   5: 7214.161 ns/op
Iteration   6: 122485.118 ns/op
Iteration   7: 1072.737 ns/op
Iteration   8: 1090.631 ns/op
Iteration   9: 1005.137 ns/op
Iteration  10: 992.708 ns/op

# Run progress: 77.29% complete, ETA 00:08:43
# Fork: 2 of 2
# Warmup Iteration   1: 1969.303 ns/op
# Warmup Iteration   2: 1312.452 ns/op
# Warmup Iteration   3: 996.928 ns/op
Iteration   1: 956.047 ns/op
Iteration   2: 1004.047 ns/op
Iteration   3: 1026.448 ns/op
Iteration   4: 984.295 ns/op
Iteration   5: 84603.071 ns/op
Iteration   6: 3689.914 ns/op
Iteration   7: 1084.480 ns/op
Iteration   8: 1090.472 ns/op
Iteration   9: 1009.662 ns/op
Iteration  10: 1003.114 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  11714.872 ±(99.9%) 27817.241 ns/op [Average]
  (min, avg, max) = (956.047, 11714.872, 122485.118), stdev = 32034.376
  CI (99.9%): [≈ 0, 39532.112] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 77.36% complete, ETA 00:08:41
# Fork: 1 of 2
# Warmup Iteration   1: 12957.261 ns/op
# Warmup Iteration   2: 5239.869 ns/op
# Warmup Iteration   3: 4190.135 ns/op
Iteration   1: 3831.847 ns/op
Iteration   2: 3820.642 ns/op
Iteration   3: 6290.484 ns/op
Iteration   4: 3799.248 ns/op
Iteration   5: 3781.415 ns/op
Iteration   6: 3821.349 ns/op
Iteration   7: 3809.114 ns/op
Iteration   8: 3818.250 ns/op
Iteration   9: 3805.155 ns/op
Iteration  10: 3779.765 ns/op

# Run progress: 77.43% complete, ETA 00:08:40
# Fork: 2 of 2
# Warmup Iteration   1: 10965.268 ns/op
# Warmup Iteration   2: 5136.201 ns/op
# Warmup Iteration   3: 4151.585 ns/op
Iteration   1: 3790.294 ns/op
Iteration   2: 3777.385 ns/op
Iteration   3: 5861.284 ns/op
Iteration   4: 3731.375 ns/op
Iteration   5: 3728.303 ns/op
Iteration   6: 3772.623 ns/op
Iteration   7: 3739.930 ns/op
Iteration   8: 3754.532 ns/op
Iteration   9: 3751.637 ns/op
Iteration  10: 3748.254 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4010.644 ±(99.9%) 616.889 ns/op [Average]
  (min, avg, max) = (3728.303, 4010.644, 6290.484), stdev = 710.410
  CI (99.9%): [3393.755, 4627.533] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 77.50% complete, ETA 00:08:38
# Fork: 1 of 2
# Warmup Iteration   1: 22.594 ns/op
# Warmup Iteration   2: 22.556 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.976 ns/op
Iteration   4: 15.949 ns/op
Iteration   5: 15.667 ns/op
Iteration   6: 15.574 ns/op
Iteration   7: 15.585 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.569 ns/op

# Run progress: 77.57% complete, ETA 00:08:36
# Fork: 2 of 2
# Warmup Iteration   1: 24.039 ns/op
# Warmup Iteration   2: 25.382 ns/op
# Warmup Iteration   3: 15.782 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.574 ns/op
Iteration   3: 15.973 ns/op
Iteration   4: 15.934 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.575 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.016 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.569, 16.016, 19.112), stdev = 1.068
  CI (99.9%): [15.089, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 77.64% complete, ETA 00:08:35
# Fork: 1 of 2
# Warmup Iteration   1: 235.632 ns/op
# Warmup Iteration   2: 197.925 ns/op
# Warmup Iteration   3: 133.574 ns/op
Iteration   1: 133.830 ns/op
Iteration   2: 133.697 ns/op
Iteration   3: 133.944 ns/op
Iteration   4: 133.997 ns/op
Iteration   5: 134.523 ns/op
Iteration   6: 133.703 ns/op
Iteration   7: 133.839 ns/op
Iteration   8: 137.801 ns/op
Iteration   9: 133.997 ns/op
Iteration  10: 133.826 ns/op

# Run progress: 77.71% complete, ETA 00:08:33
# Fork: 2 of 2
# Warmup Iteration   1: 243.926 ns/op
# Warmup Iteration   2: 178.578 ns/op
# Warmup Iteration   3: 133.711 ns/op
Iteration   1: 133.734 ns/op
Iteration   2: 134.223 ns/op
Iteration   3: 133.838 ns/op
Iteration   4: 133.975 ns/op
Iteration   5: 133.956 ns/op
Iteration   6: 133.656 ns/op
Iteration   7: 133.673 ns/op
Iteration   8: 138.125 ns/op
Iteration   9: 134.245 ns/op
Iteration  10: 133.829 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  134.320 ±(99.9%) 1.099 ns/op [Average]
  (min, avg, max) = (133.656, 134.320, 138.125), stdev = 1.265
  CI (99.9%): [133.222, 135.419] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 77.78% complete, ETA 00:08:32
# Fork: 1 of 2
# Warmup Iteration   1: 376.090 ns/op
# Warmup Iteration   2: 202.187 ns/op
# Warmup Iteration   3: 156.421 ns/op
Iteration   1: 156.662 ns/op
Iteration   2: 156.577 ns/op
Iteration   3: 156.732 ns/op
Iteration   4: 156.814 ns/op
Iteration   5: 156.491 ns/op
Iteration   6: 156.528 ns/op
Iteration   7: 156.498 ns/op
Iteration   8: 156.649 ns/op
Iteration   9: 156.829 ns/op
Iteration  10: 156.488 ns/op

# Run progress: 77.85% complete, ETA 00:08:30
# Fork: 2 of 2
# Warmup Iteration   1: 444.551 ns/op
# Warmup Iteration   2: 205.111 ns/op
# Warmup Iteration   3: 159.096 ns/op
Iteration   1: 159.123 ns/op
Iteration   2: 159.116 ns/op
Iteration   3: 159.009 ns/op
Iteration   4: 159.211 ns/op
Iteration   5: 159.197 ns/op
Iteration   6: 159.241 ns/op
Iteration   7: 159.254 ns/op
Iteration   8: 158.738 ns/op
Iteration   9: 158.715 ns/op
Iteration  10: 159.129 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  157.850 ±(99.9%) 1.099 ns/op [Average]
  (min, avg, max) = (156.488, 157.850, 159.254), stdev = 1.266
  CI (99.9%): [156.751, 158.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 77.92% complete, ETA 00:08:28
# Fork: 1 of 2
# Warmup Iteration   1: 610.814 ns/op
# Warmup Iteration   2: 280.603 ns/op
# Warmup Iteration   3: 207.594 ns/op
Iteration   1: 207.472 ns/op
Iteration   2: 207.493 ns/op
Iteration   3: 207.517 ns/op
Iteration   4: 207.665 ns/op
Iteration   5: 207.545 ns/op
Iteration   6: 207.431 ns/op
Iteration   7: 207.498 ns/op
Iteration   8: 216.219 ns/op
Iteration   9: 208.185 ns/op
Iteration  10: 207.336 ns/op

# Run progress: 77.99% complete, ETA 00:08:27
# Fork: 2 of 2
# Warmup Iteration   1: 497.886 ns/op
# Warmup Iteration   2: 276.378 ns/op
# Warmup Iteration   3: 202.734 ns/op
Iteration   1: 202.822 ns/op
Iteration   2: 202.826 ns/op
Iteration   3: 203.223 ns/op
Iteration   4: 204.292 ns/op
Iteration   5: 202.800 ns/op
Iteration   6: 202.730 ns/op
Iteration   7: 202.766 ns/op
Iteration   8: 202.935 ns/op
Iteration   9: 203.903 ns/op
Iteration  10: 202.927 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  205.779 ±(99.9%) 2.898 ns/op [Average]
  (min, avg, max) = (202.730, 205.779, 216.219), stdev = 3.337
  CI (99.9%): [202.881, 208.677] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 78.06% complete, ETA 00:08:25
# Fork: 1 of 2
# Warmup Iteration   1: 110.039 ns/op
# Warmup Iteration   2: 102.036 ns/op
# Warmup Iteration   3: 73.258 ns/op
Iteration   1: 73.214 ns/op
Iteration   2: 73.293 ns/op
Iteration   3: 73.283 ns/op
Iteration   4: 73.288 ns/op
Iteration   5: 73.219 ns/op
Iteration   6: 73.229 ns/op
Iteration   7: 73.233 ns/op
Iteration   8: 73.372 ns/op
Iteration   9: 73.295 ns/op
Iteration  10: 73.428 ns/op

# Run progress: 78.13% complete, ETA 00:08:24
# Fork: 2 of 2
# Warmup Iteration   1: 109.432 ns/op
# Warmup Iteration   2: 101.006 ns/op
# Warmup Iteration   3: 73.365 ns/op
Iteration   1: 73.258 ns/op
Iteration   2: 73.354 ns/op
Iteration   3: 73.118 ns/op
Iteration   4: 73.257 ns/op
Iteration   5: 73.252 ns/op
Iteration   6: 73.157 ns/op
Iteration   7: 73.154 ns/op
Iteration   8: 73.225 ns/op
Iteration   9: 73.272 ns/op
Iteration  10: 73.214 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  73.256 ±(99.9%) 0.064 ns/op [Average]
  (min, avg, max) = (73.118, 73.256, 73.428), stdev = 0.074
  CI (99.9%): [73.192, 73.320] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 78.19% complete, ETA 00:08:22
# Fork: 1 of 2
# Warmup Iteration   1: 217.587 ns/op
# Warmup Iteration   2: 209.371 ns/op
# Warmup Iteration   3: 124.964 ns/op
Iteration   1: 124.788 ns/op
Iteration   2: 126.326 ns/op
Iteration   3: 124.858 ns/op
Iteration   4: 125.043 ns/op
Iteration   5: 124.772 ns/op
Iteration   6: 124.843 ns/op
Iteration   7: 124.801 ns/op
Iteration   8: 128.088 ns/op
Iteration   9: 130.495 ns/op
Iteration  10: 124.754 ns/op

# Run progress: 78.26% complete, ETA 00:08:20
# Fork: 2 of 2
# Warmup Iteration   1: 210.303 ns/op
# Warmup Iteration   2: 219.334 ns/op
# Warmup Iteration   3: 124.820 ns/op
Iteration   1: 124.757 ns/op
Iteration   2: 126.270 ns/op
Iteration   3: 124.766 ns/op
Iteration   4: 124.957 ns/op
Iteration   5: 124.820 ns/op
Iteration   6: 124.802 ns/op
Iteration   7: 124.806 ns/op
Iteration   8: 128.082 ns/op
Iteration   9: 130.541 ns/op
Iteration  10: 124.837 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  125.870 ±(99.9%) 1.651 ns/op [Average]
  (min, avg, max) = (124.754, 125.870, 130.541), stdev = 1.901
  CI (99.9%): [124.220, 127.521] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 78.33% complete, ETA 00:08:19
# Fork: 1 of 2
# Warmup Iteration   1: 22.400 ns/op
# Warmup Iteration   2: 25.858 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.581 ns/op
Iteration   3: 15.971 ns/op
Iteration   4: 15.960 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.590 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.109 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.582 ns/op

# Run progress: 78.40% complete, ETA 00:08:17
# Fork: 2 of 2
# Warmup Iteration   1: 23.095 ns/op
# Warmup Iteration   2: 23.133 ns/op
# Warmup Iteration   3: 15.763 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.935 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.571 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.101 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.577 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.571, 16.019, 19.109), stdev = 1.066
  CI (99.9%): [15.093, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 78.47% complete, ETA 00:08:16
# Fork: 1 of 2
# Warmup Iteration   1: 1301.703 ns/op
# Warmup Iteration   2: 22907.765 ns/op
# Warmup Iteration   3: 411.171 ns/op
Iteration   1: 252.979 ns/op
Iteration   2: 417.800 ns/op
Iteration   3: 258.994 ns/op
Iteration   4: 315.373 ns/op
Iteration   5: 23896.938 ns/op
Iteration   6: 22030.547 ns/op
Iteration   7: 482.548 ns/op
Iteration   8: 359.018 ns/op
Iteration   9: 300.039 ns/op
Iteration  10: 229.404 ns/op

# Run progress: 78.54% complete, ETA 00:08:14
# Fork: 2 of 2
# Warmup Iteration   1: 1331.204 ns/op
# Warmup Iteration   2: 22871.428 ns/op
# Warmup Iteration   3: 685.617 ns/op
Iteration   1: 241.519 ns/op
Iteration   2: 413.110 ns/op
Iteration   3: 253.816 ns/op
Iteration   4: 313.672 ns/op
Iteration   5: 29237.787 ns/op
Iteration   6: 24570.842 ns/op
Iteration   7: 510.229 ns/op
Iteration   8: 411.119 ns/op
Iteration   9: 315.520 ns/op
Iteration  10: 228.818 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5252.004 ±(99.9%) 8831.283 ns/op [Average]
  (min, avg, max) = (228.818, 5252.004, 29237.787), stdev = 10170.118
  CI (99.9%): [≈ 0, 14083.286] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 78.61% complete, ETA 00:08:12
# Fork: 1 of 2
# Warmup Iteration   1: 4599.415 ns/op
# Warmup Iteration   2: 418.485 ns/op
# Warmup Iteration   3: 228.693 ns/op
Iteration   1: 235.368 ns/op
Iteration   2: 26949.153 ns/op
Iteration   3: 21008.478 ns/op
Iteration   4: 20220.592 ns/op
Iteration   5: 13546.727 ns/op
Iteration   6: 13336.753 ns/op
Iteration   7: 1245.736 ns/op
Iteration   8: 322.999 ns/op
Iteration   9: 282.998 ns/op
Iteration  10: 254.043 ns/op

# Run progress: 78.68% complete, ETA 00:08:11
# Fork: 2 of 2
# Warmup Iteration   1: 5756.289 ns/op
# Warmup Iteration   2: 433.322 ns/op
# Warmup Iteration   3: 235.660 ns/op
Iteration   1: 241.164 ns/op
Iteration   2: 25575.135 ns/op
Iteration   3: 20657.253 ns/op
Iteration   4: 21702.689 ns/op
Iteration   5: 9267.847 ns/op
Iteration   6: 980.731 ns/op
Iteration   7: 1051.709 ns/op
Iteration   8: 315.356 ns/op
Iteration   9: 286.055 ns/op
Iteration  10: 267.646 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8887.422 ±(99.9%) 8909.339 ns/op [Average]
  (min, avg, max) = (235.368, 8887.422, 26949.153), stdev = 10260.008
  CI (99.9%): [≈ 0, 17796.760] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 78.75% complete, ETA 00:08:09
# Fork: 1 of 2
# Warmup Iteration   1: 1489.062 ns/op
# Warmup Iteration   2: 18207.335 ns/op
# Warmup Iteration   3: 262.523 ns/op
Iteration   1: 282.815 ns/op
Iteration   2: 1133.366 ns/op
Iteration   3: 434.553 ns/op
Iteration   4: 335.007 ns/op
Iteration   5: 296.891 ns/op
Iteration   6: 12534.254 ns/op
Iteration   7: 42757.701 ns/op
Iteration   8: 26824.315 ns/op
Iteration   9: 360.901 ns/op
Iteration  10: 285.321 ns/op

# Run progress: 78.82% complete, ETA 00:08:08
# Fork: 2 of 2
# Warmup Iteration   1: 2141.083 ns/op
# Warmup Iteration   2: 18931.489 ns/op
# Warmup Iteration   3: 265.142 ns/op
Iteration   1: 285.626 ns/op
Iteration   2: 1113.413 ns/op
Iteration   3: 2042.181 ns/op
Iteration   4: 328.120 ns/op
Iteration   5: 300.309 ns/op
Iteration   6: 12950.549 ns/op
Iteration   7: 14855.706 ns/op
Iteration   8: 378.064 ns/op
Iteration   9: 321.540 ns/op
Iteration  10: 278.931 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5904.978 ±(99.9%) 9767.374 ns/op [Average]
  (min, avg, max) = (278.931, 5904.978, 42757.701), stdev = 11248.122
  CI (99.9%): [≈ 0, 15672.352] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 78.89% complete, ETA 00:08:06
# Fork: 1 of 2
# Warmup Iteration   1: 258.884 ns/op
# Warmup Iteration   2: 605.586 ns/op
# Warmup Iteration   3: 187.362 ns/op
Iteration   1: 182.630 ns/op
Iteration   2: 207.612 ns/op
Iteration   3: 161.435 ns/op
Iteration   4: 181.487 ns/op
Iteration   5: 217.814 ns/op
Iteration   6: 208.491 ns/op
Iteration   7: 223.059 ns/op
Iteration   8: 189.817 ns/op
Iteration   9: 177.465 ns/op
Iteration  10: 145.558 ns/op

# Run progress: 78.96% complete, ETA 00:08:04
# Fork: 2 of 2
# Warmup Iteration   1: 262.653 ns/op
# Warmup Iteration   2: 372.328 ns/op
# Warmup Iteration   3: 182.229 ns/op
Iteration   1: 181.961 ns/op
Iteration   2: 207.110 ns/op
Iteration   3: 161.511 ns/op
Iteration   4: 181.451 ns/op
Iteration   5: 263.830 ns/op
Iteration   6: 208.457 ns/op
Iteration   7: 223.060 ns/op
Iteration   8: 189.795 ns/op
Iteration   9: 177.457 ns/op
Iteration  10: 144.838 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  191.742 ±(99.9%) 25.086 ns/op [Average]
  (min, avg, max) = (144.838, 191.742, 263.830), stdev = 28.889
  CI (99.9%): [166.656, 216.827] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = IDENT_____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 79.03% complete, ETA 00:08:03
# Fork: 1 of 2
# Warmup Iteration   1: 1276.420 ns/op
# Warmup Iteration   2: 3666.321 ns/op
# Warmup Iteration   3: 2221.843 ns/op
Iteration   1: 395.257 ns/op
Iteration   2: 707.104 ns/op
Iteration   3: 324.019 ns/op
Iteration   4: 510.121 ns/op
Iteration   5: 341.451 ns/op
Iteration   6: 555.054 ns/op
Iteration   7: 779.176 ns/op
Iteration   8: 565.238 ns/op
Iteration   9: 352.546 ns/op
Iteration  10: 386.582 ns/op

# Run progress: 79.10% complete, ETA 00:08:01
# Fork: 2 of 2
# Warmup Iteration   1: 1133.211 ns/op
# Warmup Iteration   2: 1291.373 ns/op
# Warmup Iteration   3: 1970.030 ns/op
Iteration   1: 399.129 ns/op
Iteration   2: 707.063 ns/op
Iteration   3: 323.681 ns/op
Iteration   4: 507.652 ns/op
Iteration   5: 341.980 ns/op
Iteration   6: 555.508 ns/op
Iteration   7: 775.157 ns/op
Iteration   8: 564.272 ns/op
Iteration   9: 353.231 ns/op
Iteration  10: 390.412 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  491.732 ±(99.9%) 134.256 ns/op [Average]
  (min, avg, max) = (323.681, 491.732, 779.176), stdev = 154.610
  CI (99.9%): [357.476, 625.988] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 79.17% complete, ETA 00:08:00
# Fork: 1 of 2
# Warmup Iteration   1: 22.071 ns/op
# Warmup Iteration   2: 24.940 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.588 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.120 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.582 ns/op

# Run progress: 79.24% complete, ETA 00:07:58
# Fork: 2 of 2
# Warmup Iteration   1: 22.075 ns/op
# Warmup Iteration   2: 25.966 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.952 ns/op
Iteration   5: 15.660 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.096 ns/op
Iteration   9: 15.571 ns/op
Iteration  10: 15.571 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.571, 16.018, 19.120), stdev = 1.068
  CI (99.9%): [15.091, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 79.31% complete, ETA 00:07:56
# Fork: 1 of 2
# Warmup Iteration   1: 2210.158 ns/op
# Warmup Iteration   2: 1294.112 ns/op
# Warmup Iteration   3: 907.252 ns/op
Iteration   1: 908.039 ns/op
Iteration   2: 907.284 ns/op
Iteration   3: 908.361 ns/op
Iteration   4: 907.903 ns/op
Iteration   5: 906.147 ns/op
Iteration   6: 907.465 ns/op
Iteration   7: 907.463 ns/op
Iteration   8: 909.999 ns/op
Iteration   9: 907.355 ns/op
Iteration  10: 908.566 ns/op

# Run progress: 79.38% complete, ETA 00:07:55
# Fork: 2 of 2
# Warmup Iteration   1: 2245.762 ns/op
# Warmup Iteration   2: 1217.821 ns/op
# Warmup Iteration   3: 897.660 ns/op
Iteration   1: 886.444 ns/op
Iteration   2: 897.441 ns/op
Iteration   3: 886.881 ns/op
Iteration   4: 894.296 ns/op
Iteration   5: 898.077 ns/op
Iteration   6: 886.574 ns/op
Iteration   7: 885.718 ns/op
Iteration   8: 897.647 ns/op
Iteration   9: 894.849 ns/op
Iteration  10: 895.271 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  900.089 ±(99.9%) 7.622 ns/op [Average]
  (min, avg, max) = (885.718, 900.089, 909.999), stdev = 8.778
  CI (99.9%): [892.467, 907.711] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 79.44% complete, ETA 00:07:53
# Fork: 1 of 2
# Warmup Iteration   1: 11151.670 ns/op
# Warmup Iteration   2: 1345.477 ns/op
# Warmup Iteration   3: 904.743 ns/op
Iteration   1: 905.435 ns/op
Iteration   2: 905.136 ns/op
Iteration   3: 905.101 ns/op
Iteration   4: 906.457 ns/op
Iteration   5: 905.751 ns/op
Iteration   6: 905.447 ns/op
Iteration   7: 905.356 ns/op
Iteration   8: 905.503 ns/op
Iteration   9: 907.067 ns/op
Iteration  10: 907.187 ns/op

# Run progress: 79.51% complete, ETA 00:07:52
# Fork: 2 of 2
# Warmup Iteration   1: 28124.744 ns/op
# Warmup Iteration   2: 1332.096 ns/op
# Warmup Iteration   3: 986.395 ns/op
Iteration   1: 904.044 ns/op
Iteration   2: 904.135 ns/op
Iteration   3: 904.520 ns/op
Iteration   4: 904.031 ns/op
Iteration   5: 903.405 ns/op
Iteration   6: 903.878 ns/op
Iteration   7: 903.732 ns/op
Iteration   8: 903.923 ns/op
Iteration   9: 903.295 ns/op
Iteration  10: 903.908 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  904.866 ±(99.9%) 1.010 ns/op [Average]
  (min, avg, max) = (903.295, 904.866, 907.187), stdev = 1.163
  CI (99.9%): [903.856, 905.875] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 79.58% complete, ETA 00:07:50
# Fork: 1 of 2
# Warmup Iteration   1: 16320.215 ns/op
# Warmup Iteration   2: 1333.810 ns/op
# Warmup Iteration   3: 987.406 ns/op
Iteration   1: 907.952 ns/op
Iteration   2: 907.701 ns/op
Iteration   3: 908.005 ns/op
Iteration   4: 906.727 ns/op
Iteration   5: 907.440 ns/op
Iteration   6: 906.837 ns/op
Iteration   7: 907.649 ns/op
Iteration   8: 907.940 ns/op
Iteration   9: 908.011 ns/op
Iteration  10: 907.179 ns/op

# Run progress: 79.65% complete, ETA 00:07:48
# Fork: 2 of 2
# Warmup Iteration   1: 15320.139 ns/op
# Warmup Iteration   2: 1216.529 ns/op
# Warmup Iteration   3: 987.968 ns/op
Iteration   1: 905.300 ns/op
Iteration   2: 904.869 ns/op
Iteration   3: 905.071 ns/op
Iteration   4: 905.121 ns/op
Iteration   5: 904.445 ns/op
Iteration   6: 904.979 ns/op
Iteration   7: 904.644 ns/op
Iteration   8: 904.837 ns/op
Iteration   9: 905.675 ns/op
Iteration  10: 905.127 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  906.275 ±(99.9%) 1.184 ns/op [Average]
  (min, avg, max) = (904.445, 906.275, 908.011), stdev = 1.364
  CI (99.9%): [905.091, 907.460] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 79.72% complete, ETA 00:07:47
# Fork: 1 of 2
# Warmup Iteration   1: 1694.891 ns/op
# Warmup Iteration   2: 1534.845 ns/op
# Warmup Iteration   3: 1053.188 ns/op
Iteration   1: 1055.105 ns/op
Iteration   2: 1051.241 ns/op
Iteration   3: 1041.134 ns/op
Iteration   4: 1052.613 ns/op
Iteration   5: 1052.764 ns/op
Iteration   6: 1052.607 ns/op
Iteration   7: 1052.090 ns/op
Iteration   8: 1038.455 ns/op
Iteration   9: 1050.173 ns/op
Iteration  10: 1053.397 ns/op

# Run progress: 79.79% complete, ETA 00:07:45
# Fork: 2 of 2
# Warmup Iteration   1: 2326.904 ns/op
# Warmup Iteration   2: 1342.904 ns/op
# Warmup Iteration   3: 1044.610 ns/op
Iteration   1: 1045.575 ns/op
Iteration   2: 1042.442 ns/op
Iteration   3: 1046.221 ns/op
Iteration   4: 1051.562 ns/op
Iteration   5: 1043.832 ns/op
Iteration   6: 1050.343 ns/op
Iteration   7: 1048.767 ns/op
Iteration   8: 1040.727 ns/op
Iteration   9: 1045.615 ns/op
Iteration  10: 1045.862 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1048.026 ±(99.9%) 4.246 ns/op [Average]
  (min, avg, max) = (1038.455, 1048.026, 1055.105), stdev = 4.889
  CI (99.9%): [1043.780, 1052.272] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 79.86% complete, ETA 00:07:44
# Fork: 1 of 2
# Warmup Iteration   1: 10992.977 ns/op
# Warmup Iteration   2: 4983.600 ns/op
# Warmup Iteration   3: 4024.224 ns/op
Iteration   1: 3701.861 ns/op
Iteration   2: 3697.367 ns/op
Iteration   3: 3703.212 ns/op
Iteration   4: 3688.141 ns/op
Iteration   5: 3679.962 ns/op
Iteration   6: 3691.441 ns/op
Iteration   7: 3681.415 ns/op
Iteration   8: 3690.387 ns/op
Iteration   9: 3693.173 ns/op
Iteration  10: 3682.457 ns/op

# Run progress: 79.93% complete, ETA 00:07:42
# Fork: 2 of 2
# Warmup Iteration   1: 7584.984 ns/op
# Warmup Iteration   2: 4959.468 ns/op
# Warmup Iteration   3: 3553.122 ns/op
Iteration   1: 3554.685 ns/op
Iteration   2: 3553.801 ns/op
Iteration   3: 3563.255 ns/op
Iteration   4: 3543.560 ns/op
Iteration   5: 3549.045 ns/op
Iteration   6: 3549.956 ns/op
Iteration   7: 3545.141 ns/op
Iteration   8: 3554.124 ns/op
Iteration   9: 3564.526 ns/op
Iteration  10: 3554.508 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3622.101 ±(99.9%) 61.663 ns/op [Average]
  (min, avg, max) = (3543.560, 3622.101, 3703.212), stdev = 71.011
  CI (99.9%): [3560.438, 3683.764] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 80.00% complete, ETA 00:07:40
# Fork: 1 of 2
# Warmup Iteration   1: 22.158 ns/op
# Warmup Iteration   2: 26.072 ns/op
# Warmup Iteration   3: 15.784 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.573 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.577 ns/op
Iteration   7: 15.569 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.569 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 80.07% complete, ETA 00:07:39
# Fork: 2 of 2
# Warmup Iteration   1: 22.169 ns/op
# Warmup Iteration   2: 25.823 ns/op
# Warmup Iteration   3: 15.763 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.684 ns/op
Iteration   6: 15.572 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.569, 16.017, 19.106), stdev = 1.067
  CI (99.9%): [15.090, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 80.14% complete, ETA 00:07:37
# Fork: 1 of 2
# Warmup Iteration   1: 1458.951 ns/op
# Warmup Iteration   2: 853.137 ns/op
# Warmup Iteration   3: 636.970 ns/op
Iteration   1: 639.508 ns/op
Iteration   2: 638.625 ns/op
Iteration   3: 637.865 ns/op
Iteration   4: 638.442 ns/op
Iteration   5: 637.633 ns/op
Iteration   6: 639.722 ns/op
Iteration   7: 638.442 ns/op
Iteration   8: 640.470 ns/op
Iteration   9: 638.299 ns/op
Iteration  10: 639.212 ns/op

# Run progress: 80.21% complete, ETA 00:07:36
# Fork: 2 of 2
# Warmup Iteration   1: 1492.610 ns/op
# Warmup Iteration   2: 863.928 ns/op
# Warmup Iteration   3: 646.405 ns/op
Iteration   1: 646.139 ns/op
Iteration   2: 646.579 ns/op
Iteration   3: 646.269 ns/op
Iteration   4: 646.821 ns/op
Iteration   5: 646.922 ns/op
Iteration   6: 645.959 ns/op
Iteration   7: 645.865 ns/op
Iteration   8: 650.816 ns/op
Iteration   9: 645.995 ns/op
Iteration  10: 646.184 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  642.788 ±(99.9%) 3.680 ns/op [Average]
  (min, avg, max) = (637.633, 642.788, 650.816), stdev = 4.238
  CI (99.9%): [639.108, 646.468] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 80.28% complete, ETA 00:07:34
# Fork: 1 of 2
# Warmup Iteration   1: 52996.439 ns/op
# Warmup Iteration   2: 1429.454 ns/op
# Warmup Iteration   3: 961.857 ns/op
Iteration   1: 817.610 ns/op
Iteration   2: 816.284 ns/op
Iteration   3: 815.972 ns/op
Iteration   4: 833.769 ns/op
Iteration   5: 816.116 ns/op
Iteration   6: 815.433 ns/op
Iteration   7: 815.904 ns/op
Iteration   8: 819.420 ns/op
Iteration   9: 819.240 ns/op
Iteration  10: 816.468 ns/op

# Run progress: 80.35% complete, ETA 00:07:32
# Fork: 2 of 2
# Warmup Iteration   1: 33119.775 ns/op
# Warmup Iteration   2: 1377.840 ns/op
# Warmup Iteration   3: 912.348 ns/op
Iteration   1: 836.122 ns/op
Iteration   2: 835.869 ns/op
Iteration   3: 837.211 ns/op
Iteration   4: 856.643 ns/op
Iteration   5: 836.167 ns/op
Iteration   6: 835.789 ns/op
Iteration   7: 835.699 ns/op
Iteration   8: 836.475 ns/op
Iteration   9: 835.966 ns/op
Iteration  10: 835.907 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  828.403 ±(99.9%) 10.092 ns/op [Average]
  (min, avg, max) = (815.433, 828.403, 856.643), stdev = 11.622
  CI (99.9%): [818.311, 838.495] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 80.42% complete, ETA 00:07:31
# Fork: 1 of 2
# Warmup Iteration   1: 60915.288 ns/op
# Warmup Iteration   2: 2017.484 ns/op
# Warmup Iteration   3: 945.585 ns/op
Iteration   1: 807.014 ns/op
Iteration   2: 807.660 ns/op
Iteration   3: 807.938 ns/op
Iteration   4: 822.534 ns/op
Iteration   5: 807.519 ns/op
Iteration   6: 806.004 ns/op
Iteration   7: 806.408 ns/op
Iteration   8: 807.859 ns/op
Iteration   9: 806.809 ns/op
Iteration  10: 806.450 ns/op

# Run progress: 80.49% complete, ETA 00:07:29
# Fork: 2 of 2
# Warmup Iteration   1: 37140.668 ns/op
# Warmup Iteration   2: 1323.998 ns/op
# Warmup Iteration   3: 964.130 ns/op
Iteration   1: 818.027 ns/op
Iteration   2: 817.551 ns/op
Iteration   3: 820.983 ns/op
Iteration   4: 836.143 ns/op
Iteration   5: 818.208 ns/op
Iteration   6: 816.326 ns/op
Iteration   7: 817.139 ns/op
Iteration   8: 818.579 ns/op
Iteration   9: 818.492 ns/op
Iteration  10: 816.955 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  814.230 ±(99.9%) 6.780 ns/op [Average]
  (min, avg, max) = (806.004, 814.230, 836.143), stdev = 7.808
  CI (99.9%): [807.450, 821.010] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 80.56% complete, ETA 00:07:28
# Fork: 1 of 2
# Warmup Iteration   1: 1884.824 ns/op
# Warmup Iteration   2: 1656.413 ns/op
# Warmup Iteration   3: 1165.815 ns/op
Iteration   1: 1163.838 ns/op
Iteration   2: 1179.532 ns/op
Iteration   3: 1166.771 ns/op
Iteration   4: 1165.331 ns/op
Iteration   5: 1164.643 ns/op
Iteration   6: 1164.495 ns/op
Iteration   7: 1169.127 ns/op
Iteration   8: 1164.988 ns/op
Iteration   9: 1185.803 ns/op
Iteration  10: 1164.195 ns/op

# Run progress: 80.63% complete, ETA 00:07:26
# Fork: 2 of 2
# Warmup Iteration   1: 1725.102 ns/op
# Warmup Iteration   2: 1824.029 ns/op
# Warmup Iteration   3: 1165.859 ns/op
Iteration   1: 1164.768 ns/op
Iteration   2: 1163.850 ns/op
Iteration   3: 1166.595 ns/op
Iteration   4: 1165.496 ns/op
Iteration   5: 1164.150 ns/op
Iteration   6: 1166.498 ns/op
Iteration   7: 1164.877 ns/op
Iteration   8: 1165.704 ns/op
Iteration   9: 1163.860 ns/op
Iteration  10: 1163.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1166.905 ±(99.9%) 4.900 ns/op [Average]
  (min, avg, max) = (1163.579, 1166.905, 1185.803), stdev = 5.643
  CI (99.9%): [1162.005, 1171.805] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 80.69% complete, ETA 00:07:24
# Fork: 1 of 2
# Warmup Iteration   1: 865.481 ns/op
# Warmup Iteration   2: 600.024 ns/op
# Warmup Iteration   3: 403.460 ns/op
Iteration   1: 403.896 ns/op
Iteration   2: 406.069 ns/op
Iteration   3: 405.494 ns/op
Iteration   4: 410.417 ns/op
Iteration   5: 403.915 ns/op
Iteration   6: 403.720 ns/op
Iteration   7: 403.533 ns/op
Iteration   8: 408.858 ns/op
Iteration   9: 412.512 ns/op
Iteration  10: 403.569 ns/op

# Run progress: 80.76% complete, ETA 00:07:23
# Fork: 2 of 2
# Warmup Iteration   1: 1338.608 ns/op
# Warmup Iteration   2: 565.912 ns/op
# Warmup Iteration   3: 402.913 ns/op
Iteration   1: 402.994 ns/op
Iteration   2: 405.400 ns/op
Iteration   3: 404.522 ns/op
Iteration   4: 409.479 ns/op
Iteration   5: 402.979 ns/op
Iteration   6: 402.864 ns/op
Iteration   7: 403.408 ns/op
Iteration   8: 407.821 ns/op
Iteration   9: 411.425 ns/op
Iteration  10: 402.830 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  405.785 ±(99.9%) 2.728 ns/op [Average]
  (min, avg, max) = (402.830, 405.785, 412.512), stdev = 3.142
  CI (99.9%): [403.057, 408.514] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 80.83% complete, ETA 00:07:21
# Fork: 1 of 2
# Warmup Iteration   1: 22.550 ns/op
# Warmup Iteration   2: 24.721 ns/op
# Warmup Iteration   3: 15.765 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.943 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.586 ns/op
Iteration  10: 15.584 ns/op

# Run progress: 80.90% complete, ETA 00:07:20
# Fork: 2 of 2
# Warmup Iteration   1: 22.467 ns/op
# Warmup Iteration   2: 25.828 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.571 ns/op
Iteration   7: 15.570 ns/op
Iteration   8: 19.098 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.570, 16.018, 19.112), stdev = 1.067
  CI (99.9%): [15.091, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 80.97% complete, ETA 00:07:18
# Fork: 1 of 2
# Warmup Iteration   1: 3455.255 ns/op
# Warmup Iteration   2: 53168.573 ns/op
# Warmup Iteration   3: 2520.189 ns/op
Iteration   1: 801.652 ns/op
Iteration   2: 47642.656 ns/op
Iteration   3: 856.617 ns/op
Iteration   4: 56566.321 ns/op
Iteration   5: 767.282 ns/op
Iteration   6: 51935.834 ns/op
Iteration   7: 1213.685 ns/op
Iteration   8: 747.149 ns/op
Iteration   9: 715.162 ns/op
Iteration  10: 687.431 ns/op

# Run progress: 81.04% complete, ETA 00:07:16
# Fork: 2 of 2
# Warmup Iteration   1: 4710.210 ns/op
# Warmup Iteration   2: 17418.837 ns/op
# Warmup Iteration   3: 1794.246 ns/op
Iteration   1: 803.792 ns/op
Iteration   2: 49352.513 ns/op
Iteration   3: 805.281 ns/op
Iteration   4: 51923.014 ns/op
Iteration   5: 741.902 ns/op
Iteration   6: 52142.354 ns/op
Iteration   7: 1128.028 ns/op
Iteration   8: 746.523 ns/op
Iteration   9: 710.885 ns/op
Iteration  10: 681.737 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16048.491 ±(99.9%) 20775.640 ns/op [Average]
  (min, avg, max) = (681.737, 16048.491, 56566.321), stdev = 23925.258
  CI (99.9%): [≈ 0, 36824.131] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 81.11% complete, ETA 00:07:15
# Fork: 1 of 2
# Warmup Iteration   1: 8618.065 ns/op
# Warmup Iteration   2: 5145.789 ns/op
# Warmup Iteration   3: 1255.422 ns/op
Iteration   1: 2421.433 ns/op
Iteration   2: 1400.972 ns/op
Iteration   3: 1971.966 ns/op
Iteration   4: 1988.484 ns/op
Iteration   5: 1622.869 ns/op
Iteration   6: 2073.094 ns/op
Iteration   7: 876.110 ns/op
Iteration   8: 976.165 ns/op
Iteration   9: 865.072 ns/op
Iteration  10: 958.543 ns/op

# Run progress: 81.18% complete, ETA 00:07:13
# Fork: 2 of 2
# Warmup Iteration   1: 7679.612 ns/op
# Warmup Iteration   2: 8210.341 ns/op
# Warmup Iteration   3: 1110.858 ns/op
Iteration   1: 2407.321 ns/op
Iteration   2: 2154.383 ns/op
Iteration   3: 1926.509 ns/op
Iteration   4: 2011.784 ns/op
Iteration   5: 1632.501 ns/op
Iteration   6: 2070.826 ns/op
Iteration   7: 886.468 ns/op
Iteration   8: 984.347 ns/op
Iteration   9: 873.620 ns/op
Iteration  10: 968.191 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1553.533 ±(99.9%) 500.919 ns/op [Average]
  (min, avg, max) = (865.072, 1553.533, 2421.433), stdev = 576.859
  CI (99.9%): [1052.614, 2054.452] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 81.25% complete, ETA 00:07:12
# Fork: 1 of 2
# Warmup Iteration   1: 10799.859 ns/op
# Warmup Iteration   2: 22919.531 ns/op
# Warmup Iteration   3: 1325.244 ns/op
Iteration   1: 24596.984 ns/op
Iteration   2: 27800.911 ns/op
Iteration   3: 14199.950 ns/op
Iteration   4: 19186.339 ns/op
Iteration   5: 898.934 ns/op
Iteration   6: 934.233 ns/op
Iteration   7: 884.128 ns/op
Iteration   8: 971.913 ns/op
Iteration   9: 915.038 ns/op
Iteration  10: 937.629 ns/op

# Run progress: 81.32% complete, ETA 00:07:10
# Fork: 2 of 2
# Warmup Iteration   1: 34517.942 ns/op
# Warmup Iteration   2: 6842.764 ns/op
# Warmup Iteration   3: 1448.770 ns/op
Iteration   1: 26668.795 ns/op
Iteration   2: 28121.404 ns/op
Iteration   3: 15417.762 ns/op
Iteration   4: 16895.753 ns/op
Iteration   5: 899.158 ns/op
Iteration   6: 934.354 ns/op
Iteration   7: 886.629 ns/op
Iteration   8: 965.300 ns/op
Iteration   9: 916.048 ns/op
Iteration  10: 940.602 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9198.593 ±(99.9%) 9534.934 ns/op [Average]
  (min, avg, max) = (884.128, 9198.593, 28121.404), stdev = 10980.444
  CI (99.9%): [≈ 0, 18733.527] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 81.39% complete, ETA 00:07:08
# Fork: 1 of 2
# Warmup Iteration   1: 1464.414 ns/op
# Warmup Iteration   2: 1383.687 ns/op
# Warmup Iteration   3: 3232.568 ns/op
Iteration   1: 2679.828 ns/op
Iteration   2: 1070.759 ns/op
Iteration   3: 1066.821 ns/op
Iteration   4: 1014.890 ns/op
Iteration   5: 946.206 ns/op
Iteration   6: 941.394 ns/op
Iteration   7: 948.734 ns/op
Iteration   8: 909.207 ns/op
Iteration   9: 1087.354 ns/op
Iteration  10: 1042.470 ns/op

# Run progress: 81.46% complete, ETA 00:07:07
# Fork: 2 of 2
# Warmup Iteration   1: 1726.856 ns/op
# Warmup Iteration   2: 1384.123 ns/op
# Warmup Iteration   3: 3365.782 ns/op
Iteration   1: 5407.257 ns/op
Iteration   2: 1058.068 ns/op
Iteration   3: 1067.088 ns/op
Iteration   4: 1014.487 ns/op
Iteration   5: 947.416 ns/op
Iteration   6: 939.266 ns/op
Iteration   7: 949.112 ns/op
Iteration   8: 908.219 ns/op
Iteration   9: 1089.976 ns/op
Iteration  10: 1041.744 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1306.515 ±(99.9%) 900.627 ns/op [Average]
  (min, avg, max) = (908.219, 1306.515, 5407.257), stdev = 1037.163
  CI (99.9%): [405.888, 2207.141] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 81.53% complete, ETA 00:07:05
# Fork: 1 of 2
# Warmup Iteration   1: 10857.520 ns/op
# Warmup Iteration   2: 5557.674 ns/op
# Warmup Iteration   3: 3826.060 ns/op
Iteration   1: 3848.536 ns/op
Iteration   2: 3807.155 ns/op
Iteration   3: 3777.905 ns/op
Iteration   4: 5926.369 ns/op
Iteration   5: 3802.960 ns/op
Iteration   6: 3847.853 ns/op
Iteration   7: 3835.495 ns/op
Iteration   8: 3818.678 ns/op
Iteration   9: 3953.057 ns/op
Iteration  10: 3817.736 ns/op

# Run progress: 81.60% complete, ETA 00:07:04
# Fork: 2 of 2
# Warmup Iteration   1: 10375.770 ns/op
# Warmup Iteration   2: 5181.543 ns/op
# Warmup Iteration   3: 3755.409 ns/op
Iteration   1: 3781.194 ns/op
Iteration   2: 3716.899 ns/op
Iteration   3: 3683.821 ns/op
Iteration   4: 6979.496 ns/op
Iteration   5: 3705.013 ns/op
Iteration   6: 3746.586 ns/op
Iteration   7: 3738.366 ns/op
Iteration   8: 3717.769 ns/op
Iteration   9: 3729.116 ns/op
Iteration  10: 3729.926 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4048.197 ±(99.9%) 731.480 ns/op [Average]
  (min, avg, max) = (3683.821, 4048.197, 6979.496), stdev = 842.374
  CI (99.9%): [3316.716, 4779.677] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 81.67% complete, ETA 00:07:02
# Fork: 1 of 2
# Warmup Iteration   1: 21.936 ns/op
# Warmup Iteration   2: 26.179 ns/op
# Warmup Iteration   3: 15.781 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.939 ns/op
Iteration   5: 15.663 ns/op
Iteration   6: 15.572 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 81.74% complete, ETA 00:07:00
# Fork: 2 of 2
# Warmup Iteration   1: 22.197 ns/op
# Warmup Iteration   2: 25.272 ns/op
# Warmup Iteration   3: 15.793 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.591 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.127 ns/op
Iteration   9: 15.584 ns/op
Iteration  10: 15.581 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.572, 16.019, 19.127), stdev = 1.070
  CI (99.9%): [15.090, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 81.81% complete, ETA 00:06:59
# Fork: 1 of 2
# Warmup Iteration   1: 829.285 ns/op
# Warmup Iteration   2: 451.015 ns/op
# Warmup Iteration   3: 336.194 ns/op
Iteration   1: 336.016 ns/op
Iteration   2: 336.828 ns/op
Iteration   3: 337.677 ns/op
Iteration   4: 338.884 ns/op
Iteration   5: 336.457 ns/op
Iteration   6: 336.140 ns/op
Iteration   7: 336.358 ns/op
Iteration   8: 338.249 ns/op
Iteration   9: 336.611 ns/op
Iteration  10: 336.267 ns/op

# Run progress: 81.88% complete, ETA 00:06:57
# Fork: 2 of 2
# Warmup Iteration   1: 1045.588 ns/op
# Warmup Iteration   2: 472.093 ns/op
# Warmup Iteration   3: 343.790 ns/op
Iteration   1: 343.379 ns/op
Iteration   2: 348.776 ns/op
Iteration   3: 344.458 ns/op
Iteration   4: 345.754 ns/op
Iteration   5: 344.000 ns/op
Iteration   6: 343.134 ns/op
Iteration   7: 348.535 ns/op
Iteration   8: 347.621 ns/op
Iteration   9: 344.042 ns/op
Iteration  10: 348.043 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  341.361 ±(99.9%) 4.197 ns/op [Average]
  (min, avg, max) = (336.016, 341.361, 348.776), stdev = 4.834
  CI (99.9%): [337.164, 345.559] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 81.94% complete, ETA 00:06:56
# Fork: 1 of 2
# Warmup Iteration   1: 5143.528 ns/op
# Warmup Iteration   2: 535.713 ns/op
# Warmup Iteration   3: 339.441 ns/op
Iteration   1: 339.720 ns/op
Iteration   2: 339.793 ns/op
Iteration   3: 339.593 ns/op
Iteration   4: 342.722 ns/op
Iteration   5: 339.279 ns/op
Iteration   6: 339.004 ns/op
Iteration   7: 339.778 ns/op
Iteration   8: 339.331 ns/op
Iteration   9: 339.624 ns/op
Iteration  10: 339.495 ns/op

# Run progress: 82.01% complete, ETA 00:06:54
# Fork: 2 of 2
# Warmup Iteration   1: 3775.677 ns/op
# Warmup Iteration   2: 477.256 ns/op
# Warmup Iteration   3: 336.194 ns/op
Iteration   1: 336.505 ns/op
Iteration   2: 336.316 ns/op
Iteration   3: 337.552 ns/op
Iteration   4: 340.377 ns/op
Iteration   5: 336.599 ns/op
Iteration   6: 336.334 ns/op
Iteration   7: 336.214 ns/op
Iteration   8: 336.389 ns/op
Iteration   9: 336.191 ns/op
Iteration  10: 336.317 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  338.357 ±(99.9%) 1.648 ns/op [Average]
  (min, avg, max) = (336.191, 338.357, 342.722), stdev = 1.898
  CI (99.9%): [336.708, 340.005] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 82.08% complete, ETA 00:06:52
# Fork: 1 of 2
# Warmup Iteration   1: 7747.702 ns/op
# Warmup Iteration   2: 670.442 ns/op
# Warmup Iteration   3: 415.361 ns/op
Iteration   1: 416.177 ns/op
Iteration   2: 416.792 ns/op
Iteration   3: 415.192 ns/op
Iteration   4: 464.575 ns/op
Iteration   5: 415.968 ns/op
Iteration   6: 416.413 ns/op
Iteration   7: 415.251 ns/op
Iteration   8: 418.038 ns/op
Iteration   9: 416.251 ns/op
Iteration  10: 414.836 ns/op

# Run progress: 82.15% complete, ETA 00:06:51
# Fork: 2 of 2
# Warmup Iteration   1: 10792.155 ns/op
# Warmup Iteration   2: 631.457 ns/op
# Warmup Iteration   3: 422.064 ns/op
Iteration   1: 421.818 ns/op
Iteration   2: 421.241 ns/op
Iteration   3: 424.362 ns/op
Iteration   4: 424.363 ns/op
Iteration   5: 422.520 ns/op
Iteration   6: 421.883 ns/op
Iteration   7: 421.893 ns/op
Iteration   8: 422.959 ns/op
Iteration   9: 421.350 ns/op
Iteration  10: 421.898 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  421.689 ±(99.9%) 9.226 ns/op [Average]
  (min, avg, max) = (414.836, 421.689, 464.575), stdev = 10.625
  CI (99.9%): [412.463, 430.915] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 82.22% complete, ETA 00:06:49
# Fork: 1 of 2
# Warmup Iteration   1: 2012.113 ns/op
# Warmup Iteration   2: 1652.589 ns/op
# Warmup Iteration   3: 1288.178 ns/op
Iteration   1: 1295.320 ns/op
Iteration   2: 1287.916 ns/op
Iteration   3: 1289.024 ns/op
Iteration   4: 1295.179 ns/op
Iteration   5: 1288.451 ns/op
Iteration   6: 1288.386 ns/op
Iteration   7: 1287.960 ns/op
Iteration   8: 1288.317 ns/op
Iteration   9: 1295.385 ns/op
Iteration  10: 1290.663 ns/op

# Run progress: 82.29% complete, ETA 00:06:48
# Fork: 2 of 2
# Warmup Iteration   1: 2013.308 ns/op
# Warmup Iteration   2: 1665.882 ns/op
# Warmup Iteration   3: 1299.831 ns/op
Iteration   1: 1310.211 ns/op
Iteration   2: 1310.340 ns/op
Iteration   3: 1310.264 ns/op
Iteration   4: 1310.041 ns/op
Iteration   5: 1310.320 ns/op
Iteration   6: 1308.698 ns/op
Iteration   7: 1300.262 ns/op
Iteration   8: 1310.601 ns/op
Iteration   9: 1300.499 ns/op
Iteration  10: 1301.054 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1298.945 ±(99.9%) 8.119 ns/op [Average]
  (min, avg, max) = (1287.916, 1298.945, 1310.601), stdev = 9.350
  CI (99.9%): [1290.826, 1307.063] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 82.36% complete, ETA 00:06:46
# Fork: 1 of 2
# Warmup Iteration   1: 471.691 ns/op
# Warmup Iteration   2: 317.557 ns/op
# Warmup Iteration   3: 205.976 ns/op
Iteration   1: 206.086 ns/op
Iteration   2: 205.711 ns/op
Iteration   3: 215.504 ns/op
Iteration   4: 214.896 ns/op
Iteration   5: 206.091 ns/op
Iteration   6: 206.134 ns/op
Iteration   7: 206.008 ns/op
Iteration   8: 214.574 ns/op
Iteration   9: 207.953 ns/op
Iteration  10: 206.124 ns/op

# Run progress: 82.43% complete, ETA 00:06:44
# Fork: 2 of 2
# Warmup Iteration   1: 360.628 ns/op
# Warmup Iteration   2: 328.115 ns/op
# Warmup Iteration   3: 205.776 ns/op
Iteration   1: 205.817 ns/op
Iteration   2: 205.905 ns/op
Iteration   3: 215.636 ns/op
Iteration   4: 214.834 ns/op
Iteration   5: 205.942 ns/op
Iteration   6: 205.889 ns/op
Iteration   7: 206.024 ns/op
Iteration   8: 214.476 ns/op
Iteration   9: 207.730 ns/op
Iteration  10: 205.866 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  208.860 ±(99.9%) 3.614 ns/op [Average]
  (min, avg, max) = (205.711, 208.860, 215.636), stdev = 4.162
  CI (99.9%): [205.246, 212.474] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 82.50% complete, ETA 00:06:43
# Fork: 1 of 2
# Warmup Iteration   1: 22.499 ns/op
# Warmup Iteration   2: 26.031 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.983 ns/op
Iteration   4: 15.954 ns/op
Iteration   5: 15.686 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.586 ns/op
Iteration   8: 19.119 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 82.57% complete, ETA 00:06:41
# Fork: 2 of 2
# Warmup Iteration   1: 21.977 ns/op
# Warmup Iteration   2: 25.967 ns/op
# Warmup Iteration   3: 15.788 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.986 ns/op
Iteration   4: 15.934 ns/op
Iteration   5: 15.674 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.102 ns/op
Iteration   9: 15.581 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.578, 16.020, 19.119), stdev = 1.068
  CI (99.9%): [15.093, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 82.64% complete, ETA 00:06:40
# Fork: 1 of 2
# Warmup Iteration   1: 1593.928 ns/op
# Warmup Iteration   2: 8080.090 ns/op
# Warmup Iteration   3: 440.380 ns/op
Iteration   1: 459.616 ns/op
Iteration   2: 572.582 ns/op
Iteration   3: 30707.461 ns/op
Iteration   4: 487.907 ns/op
Iteration   5: 475.035 ns/op
Iteration   6: 577.086 ns/op
Iteration   7: 573.606 ns/op
Iteration   8: 440.729 ns/op
Iteration   9: 470.848 ns/op
Iteration  10: 439.069 ns/op

# Run progress: 82.71% complete, ETA 00:06:38
# Fork: 2 of 2
# Warmup Iteration   1: 1410.521 ns/op
# Warmup Iteration   2: 3757.567 ns/op
# Warmup Iteration   3: 441.403 ns/op
Iteration   1: 460.471 ns/op
Iteration   2: 615.001 ns/op
Iteration   3: 30243.914 ns/op
Iteration   4: 533.774 ns/op
Iteration   5: 498.317 ns/op
Iteration   6: 600.894 ns/op
Iteration   7: 583.164 ns/op
Iteration   8: 469.669 ns/op
Iteration   9: 495.066 ns/op
Iteration  10: 462.188 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3508.320 ±(99.9%) 8008.954 ns/op [Average]
  (min, avg, max) = (439.069, 3508.320, 30707.461), stdev = 9223.123
  CI (99.9%): [≈ 0, 11517.273] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 82.78% complete, ETA 00:06:36
# Fork: 1 of 2
# Warmup Iteration   1: 25074.893 ns/op
# Warmup Iteration   2: 37909.144 ns/op
# Warmup Iteration   3: 3313.548 ns/op
Iteration   1: 489.499 ns/op
Iteration   2: 439.081 ns/op
Iteration   3: 394.960 ns/op
Iteration   4: 428.937 ns/op
Iteration   5: 395.485 ns/op
Iteration   6: 13904.144 ns/op
Iteration   7: 451.112 ns/op
Iteration   8: 908.773 ns/op
Iteration   9: 401.447 ns/op
Iteration  10: 421.261 ns/op

# Run progress: 82.85% complete, ETA 00:06:35
# Fork: 2 of 2
# Warmup Iteration   1: 27832.589 ns/op
# Warmup Iteration   2: 40707.627 ns/op
# Warmup Iteration   3: 2462.431 ns/op
Iteration   1: 483.832 ns/op
Iteration   2: 447.501 ns/op
Iteration   3: 404.055 ns/op
Iteration   4: 446.243 ns/op
Iteration   5: 401.885 ns/op
Iteration   6: 1668.444 ns/op
Iteration   7: 462.702 ns/op
Iteration   8: 899.677 ns/op
Iteration   9: 401.079 ns/op
Iteration  10: 432.733 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1214.143 ±(99.9%) 2606.992 ns/op [Average]
  (min, avg, max) = (394.960, 1214.143, 13904.144), stdev = 3002.216
  CI (99.9%): [≈ 0, 3821.135] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 82.92% complete, ETA 00:06:33
# Fork: 1 of 2
# Warmup Iteration   1: 28891.011 ns/op
# Warmup Iteration   2: 48490.498 ns/op
# Warmup Iteration   3: 25042.700 ns/op
Iteration   1: 774.600 ns/op
Iteration   2: 24452.399 ns/op
Iteration   3: 20999.341 ns/op
Iteration   4: 537.664 ns/op
Iteration   5: 478.278 ns/op
Iteration   6: 20718.718 ns/op
Iteration   7: 19715.125 ns/op
Iteration   8: 911.069 ns/op
Iteration   9: 487.640 ns/op
Iteration  10: 485.165 ns/op

# Run progress: 82.99% complete, ETA 00:06:32
# Fork: 2 of 2
# Warmup Iteration   1: 48941.388 ns/op
# Warmup Iteration   2: 45365.861 ns/op
# Warmup Iteration   3: 7596.329 ns/op
Iteration   1: 628.750 ns/op
Iteration   2: 25062.705 ns/op
Iteration   3: 20809.006 ns/op
Iteration   4: 553.159 ns/op
Iteration   5: 495.796 ns/op
Iteration   6: 22539.911 ns/op
Iteration   7: 550.542 ns/op
Iteration   8: 911.671 ns/op
Iteration   9: 489.440 ns/op
Iteration  10: 483.012 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  8104.200 ±(99.9%) 9167.027 ns/op [Average]
  (min, avg, max) = (478.278, 8104.200, 25062.705), stdev = 10556.762
  CI (99.9%): [≈ 0, 17271.227] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 83.06% complete, ETA 00:06:30
# Fork: 1 of 2
# Warmup Iteration   1: 2369.079 ns/op
# Warmup Iteration   2: 2038.313 ns/op
# Warmup Iteration   3: 2069.668 ns/op
Iteration   1: 1241.261 ns/op
Iteration   2: 1229.493 ns/op
Iteration   3: 1252.242 ns/op
Iteration   4: 1243.125 ns/op
Iteration   5: 1239.647 ns/op
Iteration   6: 1236.988 ns/op
Iteration   7: 1230.687 ns/op
Iteration   8: 1234.409 ns/op
Iteration   9: 1254.255 ns/op
Iteration  10: 1268.631 ns/op

# Run progress: 83.13% complete, ETA 00:06:28
# Fork: 2 of 2
# Warmup Iteration   1: 2815.860 ns/op
# Warmup Iteration   2: 2235.518 ns/op
# Warmup Iteration   3: 1960.657 ns/op
Iteration   1: 1243.904 ns/op
Iteration   2: 1220.295 ns/op
Iteration   3: 1251.515 ns/op
Iteration   4: 1238.864 ns/op
Iteration   5: 1251.499 ns/op
Iteration   6: 1245.331 ns/op
Iteration   7: 1213.381 ns/op
Iteration   8: 1240.638 ns/op
Iteration   9: 1248.538 ns/op
Iteration  10: 1267.934 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1242.632 ±(99.9%) 11.859 ns/op [Average]
  (min, avg, max) = (1213.381, 1242.632, 1268.631), stdev = 13.656
  CI (99.9%): [1230.773, 1254.490] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE___, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 83.19% complete, ETA 00:06:27
# Fork: 1 of 2
# Warmup Iteration   1: 1517.631 ns/op
# Warmup Iteration   2: 19501.120 ns/op
# Warmup Iteration   3: 986.290 ns/op
Iteration   1: 508.781 ns/op
Iteration   2: 753.972 ns/op
Iteration   3: 422.520 ns/op
Iteration   4: 535.802 ns/op
Iteration   5: 433.477 ns/op
Iteration   6: 628.863 ns/op
Iteration   7: 727.400 ns/op
Iteration   8: 555.073 ns/op
Iteration   9: 444.215 ns/op
Iteration  10: 539.402 ns/op

# Run progress: 83.26% complete, ETA 00:06:25
# Fork: 2 of 2
# Warmup Iteration   1: 1678.561 ns/op
# Warmup Iteration   2: 20605.085 ns/op
# Warmup Iteration   3: 1625.060 ns/op
Iteration   1: 533.602 ns/op
Iteration   2: 786.160 ns/op
Iteration   3: 437.003 ns/op
Iteration   4: 553.835 ns/op
Iteration   5: 451.171 ns/op
Iteration   6: 661.140 ns/op
Iteration   7: 772.216 ns/op
Iteration   8: 577.443 ns/op
Iteration   9: 461.887 ns/op
Iteration  10: 557.811 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  567.089 ±(99.9%) 102.632 ns/op [Average]
  (min, avg, max) = (422.520, 567.089, 786.160), stdev = 118.191
  CI (99.9%): [464.457, 669.721] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 83.33% complete, ETA 00:06:24
# Fork: 1 of 2
# Warmup Iteration   1: 22.182 ns/op
# Warmup Iteration   2: 25.773 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.936 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.104 ns/op
Iteration   9: 15.583 ns/op
Iteration  10: 15.582 ns/op

# Run progress: 83.40% complete, ETA 00:06:22
# Fork: 2 of 2
# Warmup Iteration   1: 22.076 ns/op
# Warmup Iteration   2: 25.979 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.586 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 16.013 ns/op
Iteration   4: 16.068 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.580 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.586 ns/op
Iteration  10: 15.583 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.027 ±(99.9%) 0.925 ns/op [Average]
  (min, avg, max) = (15.576, 16.027, 19.104), stdev = 1.065
  CI (99.9%): [15.102, 16.952] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 83.47% complete, ETA 00:06:20
# Fork: 1 of 2
# Warmup Iteration   1: 3156.376 ns/op
# Warmup Iteration   2: 948.014 ns/op
# Warmup Iteration   3: 675.388 ns/op
Iteration   1: 676.429 ns/op
Iteration   2: 676.119 ns/op
Iteration   3: 675.670 ns/op
Iteration   4: 672.989 ns/op
Iteration   5: 675.115 ns/op
Iteration   6: 674.622 ns/op
Iteration   7: 676.945 ns/op
Iteration   8: 679.439 ns/op
Iteration   9: 675.670 ns/op
Iteration  10: 674.550 ns/op

# Run progress: 83.54% complete, ETA 00:06:19
# Fork: 2 of 2
# Warmup Iteration   1: 2861.284 ns/op
# Warmup Iteration   2: 967.284 ns/op
# Warmup Iteration   3: 677.078 ns/op
Iteration   1: 678.343 ns/op
Iteration   2: 677.820 ns/op
Iteration   3: 678.085 ns/op
Iteration   4: 677.991 ns/op
Iteration   5: 677.864 ns/op
Iteration   6: 678.310 ns/op
Iteration   7: 678.344 ns/op
Iteration   8: 681.410 ns/op
Iteration   9: 677.637 ns/op
Iteration  10: 678.447 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  677.090 ±(99.9%) 1.697 ns/op [Average]
  (min, avg, max) = (672.989, 677.090, 681.410), stdev = 1.954
  CI (99.9%): [675.393, 678.787] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 83.61% complete, ETA 00:06:17
# Fork: 1 of 2
# Warmup Iteration   1: 31825.267 ns/op
# Warmup Iteration   2: 1623.458 ns/op
# Warmup Iteration   3: 1189.679 ns/op
Iteration   1: 1094.251 ns/op
Iteration   2: 1093.623 ns/op
Iteration   3: 1094.848 ns/op
Iteration   4: 1098.772 ns/op
Iteration   5: 1093.561 ns/op
Iteration   6: 1093.301 ns/op
Iteration   7: 1093.372 ns/op
Iteration   8: 1099.500 ns/op
Iteration   9: 1093.845 ns/op
Iteration  10: 1093.332 ns/op

# Run progress: 83.68% complete, ETA 00:06:16
# Fork: 2 of 2
# Warmup Iteration   1: 8277.048 ns/op
# Warmup Iteration   2: 1419.545 ns/op
# Warmup Iteration   3: 1100.977 ns/op
Iteration   1: 1101.630 ns/op
Iteration   2: 1101.863 ns/op
Iteration   3: 1102.254 ns/op
Iteration   4: 1106.115 ns/op
Iteration   5: 1102.053 ns/op
Iteration   6: 1101.098 ns/op
Iteration   7: 1101.350 ns/op
Iteration   8: 1105.297 ns/op
Iteration   9: 1101.597 ns/op
Iteration  10: 1101.092 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1098.638 ±(99.9%) 3.807 ns/op [Average]
  (min, avg, max) = (1093.301, 1098.638, 1106.115), stdev = 4.384
  CI (99.9%): [1094.831, 1102.444] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 83.75% complete, ETA 00:06:14
# Fork: 1 of 2
# Warmup Iteration   1: 7722.800 ns/op
# Warmup Iteration   2: 1471.004 ns/op
# Warmup Iteration   3: 1082.039 ns/op
Iteration   1: 1075.655 ns/op
Iteration   2: 1074.955 ns/op
Iteration   3: 1078.247 ns/op
Iteration   4: 1079.932 ns/op
Iteration   5: 1075.356 ns/op
Iteration   6: 1075.545 ns/op
Iteration   7: 1075.834 ns/op
Iteration   8: 1082.111 ns/op
Iteration   9: 1076.439 ns/op
Iteration  10: 1080.994 ns/op

# Run progress: 83.82% complete, ETA 00:06:12
# Fork: 2 of 2
# Warmup Iteration   1: 14340.650 ns/op
# Warmup Iteration   2: 1456.043 ns/op
# Warmup Iteration   3: 1168.840 ns/op
Iteration   1: 1073.884 ns/op
Iteration   2: 1073.293 ns/op
Iteration   3: 1075.812 ns/op
Iteration   4: 1078.168 ns/op
Iteration   5: 1074.101 ns/op
Iteration   6: 1072.441 ns/op
Iteration   7: 1072.970 ns/op
Iteration   8: 1079.508 ns/op
Iteration   9: 1073.255 ns/op
Iteration  10: 1073.120 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1076.081 ±(99.9%) 2.479 ns/op [Average]
  (min, avg, max) = (1072.441, 1076.081, 1082.111), stdev = 2.855
  CI (99.9%): [1073.602, 1078.560] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 83.89% complete, ETA 00:06:11
# Fork: 1 of 2
# Warmup Iteration   1: 1920.649 ns/op
# Warmup Iteration   2: 1350.193 ns/op
# Warmup Iteration   3: 1045.114 ns/op
Iteration   1: 1045.435 ns/op
Iteration   2: 1045.380 ns/op
Iteration   3: 1050.073 ns/op
Iteration   4: 1045.476 ns/op
Iteration   5: 1059.213 ns/op
Iteration   6: 1061.680 ns/op
Iteration   7: 1062.075 ns/op
Iteration   8: 1045.962 ns/op
Iteration   9: 1045.380 ns/op
Iteration  10: 1057.676 ns/op

# Run progress: 83.96% complete, ETA 00:06:09
# Fork: 2 of 2
# Warmup Iteration   1: 1671.579 ns/op
# Warmup Iteration   2: 1344.603 ns/op
# Warmup Iteration   3: 1044.376 ns/op
Iteration   1: 1044.581 ns/op
Iteration   2: 1044.575 ns/op
Iteration   3: 1047.889 ns/op
Iteration   4: 1046.221 ns/op
Iteration   5: 1044.761 ns/op
Iteration   6: 1044.768 ns/op
Iteration   7: 1044.536 ns/op
Iteration   8: 1045.158 ns/op
Iteration   9: 1044.299 ns/op
Iteration  10: 1043.962 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1048.455 ±(99.9%) 5.394 ns/op [Average]
  (min, avg, max) = (1043.962, 1048.455, 1062.075), stdev = 6.212
  CI (99.9%): [1043.061, 1053.849] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 84.03% complete, ETA 00:06:08
# Fork: 1 of 2
# Warmup Iteration   1: 10725.923 ns/op
# Warmup Iteration   2: 5524.154 ns/op
# Warmup Iteration   3: 3871.925 ns/op
Iteration   1: 3854.688 ns/op
Iteration   2: 3866.801 ns/op
Iteration   3: 3858.423 ns/op
Iteration   4: 3858.220 ns/op
Iteration   5: 3837.926 ns/op
Iteration   6: 3893.653 ns/op
Iteration   7: 3854.768 ns/op
Iteration   8: 3862.483 ns/op
Iteration   9: 3847.635 ns/op
Iteration  10: 3839.339 ns/op

# Run progress: 84.10% complete, ETA 00:06:06
# Fork: 2 of 2
# Warmup Iteration   1: 12247.676 ns/op
# Warmup Iteration   2: 4757.891 ns/op
# Warmup Iteration   3: 4079.375 ns/op
Iteration   1: 3721.074 ns/op
Iteration   2: 3717.756 ns/op
Iteration   3: 3722.389 ns/op
Iteration   4: 3710.965 ns/op
Iteration   5: 3709.633 ns/op
Iteration   6: 3715.323 ns/op
Iteration   7: 3708.163 ns/op
Iteration   8: 3718.923 ns/op
Iteration   9: 3713.399 ns/op
Iteration  10: 3710.551 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3786.105 ±(99.9%) 64.280 ns/op [Average]
  (min, avg, max) = (3708.163, 3786.105, 3893.653), stdev = 74.025
  CI (99.9%): [3721.826, 3850.385] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 84.17% complete, ETA 00:06:04
# Fork: 1 of 2
# Warmup Iteration   1: 22.125 ns/op
# Warmup Iteration   2: 26.235 ns/op
# Warmup Iteration   3: 15.760 ns/op
Iteration   1: 15.580 ns/op
Iteration   2: 15.589 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.944 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.576 ns/op
Iteration   8: 19.100 ns/op
Iteration   9: 15.572 ns/op
Iteration  10: 15.581 ns/op

# Run progress: 84.24% complete, ETA 00:06:03
# Fork: 2 of 2
# Warmup Iteration   1: 21.993 ns/op
# Warmup Iteration   2: 25.843 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.991 ns/op
Iteration   4: 15.937 ns/op
Iteration   5: 15.688 ns/op
Iteration   6: 15.576 ns/op
Iteration   7: 15.585 ns/op
Iteration   8: 19.124 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.572, 16.020, 19.124), stdev = 1.068
  CI (99.9%): [15.093, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 84.31% complete, ETA 00:06:01
# Fork: 1 of 2
# Warmup Iteration   1: 3228.123 ns/op
# Warmup Iteration   2: 1213.424 ns/op
# Warmup Iteration   3: 846.401 ns/op
Iteration   1: 846.840 ns/op
Iteration   2: 846.144 ns/op
Iteration   3: 847.542 ns/op
Iteration   4: 846.284 ns/op
Iteration   5: 846.016 ns/op
Iteration   6: 846.313 ns/op
Iteration   7: 846.260 ns/op
Iteration   8: 849.773 ns/op
Iteration   9: 846.278 ns/op
Iteration  10: 845.549 ns/op

# Run progress: 84.38% complete, ETA 00:06:00
# Fork: 2 of 2
# Warmup Iteration   1: 4904.348 ns/op
# Warmup Iteration   2: 1241.837 ns/op
# Warmup Iteration   3: 846.856 ns/op
Iteration   1: 846.510 ns/op
Iteration   2: 846.393 ns/op
Iteration   3: 848.495 ns/op
Iteration   4: 846.865 ns/op
Iteration   5: 846.422 ns/op
Iteration   6: 846.503 ns/op
Iteration   7: 846.899 ns/op
Iteration   8: 851.025 ns/op
Iteration   9: 847.026 ns/op
Iteration  10: 846.654 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  846.990 ±(99.9%) 1.155 ns/op [Average]
  (min, avg, max) = (845.549, 846.990, 851.025), stdev = 1.331
  CI (99.9%): [845.834, 848.145] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 84.44% complete, ETA 00:05:58
# Fork: 1 of 2
# Warmup Iteration   1: 7465.629 ns/op
# Warmup Iteration   2: 1656.825 ns/op
# Warmup Iteration   3: 1177.341 ns/op
Iteration   1: 1177.820 ns/op
Iteration   2: 1178.219 ns/op
Iteration   3: 1178.112 ns/op
Iteration   4: 1179.711 ns/op
Iteration   5: 1178.026 ns/op
Iteration   6: 1177.911 ns/op
Iteration   7: 1178.017 ns/op
Iteration   8: 1177.893 ns/op
Iteration   9: 1177.740 ns/op
Iteration  10: 1177.930 ns/op

# Run progress: 84.51% complete, ETA 00:05:56
# Fork: 2 of 2
# Warmup Iteration   1: 13947.729 ns/op
# Warmup Iteration   2: 1522.063 ns/op
# Warmup Iteration   3: 1295.268 ns/op
Iteration   1: 1194.446 ns/op
Iteration   2: 1194.246 ns/op
Iteration   3: 1195.158 ns/op
Iteration   4: 1195.755 ns/op
Iteration   5: 1193.373 ns/op
Iteration   6: 1195.513 ns/op
Iteration   7: 1194.052 ns/op
Iteration   8: 1195.143 ns/op
Iteration   9: 1194.162 ns/op
Iteration  10: 1196.289 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1186.476 ±(99.9%) 7.456 ns/op [Average]
  (min, avg, max) = (1177.740, 1186.476, 1196.289), stdev = 8.586
  CI (99.9%): [1179.020, 1193.931] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 84.58% complete, ETA 00:05:55
# Fork: 1 of 2
# Warmup Iteration   1: 10724.743 ns/op
# Warmup Iteration   2: 2018.291 ns/op
# Warmup Iteration   3: 1201.201 ns/op
Iteration   1: 1200.556 ns/op
Iteration   2: 1200.162 ns/op
Iteration   3: 1202.529 ns/op
Iteration   4: 1201.890 ns/op
Iteration   5: 1201.565 ns/op
Iteration   6: 1199.759 ns/op
Iteration   7: 1200.587 ns/op
Iteration   8: 1201.608 ns/op
Iteration   9: 1202.390 ns/op
Iteration  10: 1199.014 ns/op

# Run progress: 84.65% complete, ETA 00:05:53
# Fork: 2 of 2
# Warmup Iteration   1: 10038.409 ns/op
# Warmup Iteration   2: 1523.150 ns/op
# Warmup Iteration   3: 1188.709 ns/op
Iteration   1: 1190.036 ns/op
Iteration   2: 1188.991 ns/op
Iteration   3: 1188.039 ns/op
Iteration   4: 1188.887 ns/op
Iteration   5: 1189.513 ns/op
Iteration   6: 1189.222 ns/op
Iteration   7: 1188.981 ns/op
Iteration   8: 1188.975 ns/op
Iteration   9: 1189.716 ns/op
Iteration  10: 1189.775 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1195.110 ±(99.9%) 5.310 ns/op [Average]
  (min, avg, max) = (1188.039, 1195.110, 1202.529), stdev = 6.115
  CI (99.9%): [1189.799, 1200.420] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 84.72% complete, ETA 00:05:52
# Fork: 1 of 2
# Warmup Iteration   1: 1717.549 ns/op
# Warmup Iteration   2: 1226.570 ns/op
# Warmup Iteration   3: 956.089 ns/op
Iteration   1: 956.416 ns/op
Iteration   2: 957.126 ns/op
Iteration   3: 956.936 ns/op
Iteration   4: 959.893 ns/op
Iteration   5: 956.836 ns/op
Iteration   6: 956.848 ns/op
Iteration   7: 956.767 ns/op
Iteration   8: 962.279 ns/op
Iteration   9: 957.824 ns/op
Iteration  10: 956.952 ns/op

# Run progress: 84.79% complete, ETA 00:05:50
# Fork: 2 of 2
# Warmup Iteration   1: 1950.973 ns/op
# Warmup Iteration   2: 1237.438 ns/op
# Warmup Iteration   3: 956.309 ns/op
Iteration   1: 956.696 ns/op
Iteration   2: 957.211 ns/op
Iteration   3: 956.736 ns/op
Iteration   4: 959.912 ns/op
Iteration   5: 956.781 ns/op
Iteration   6: 956.889 ns/op
Iteration   7: 956.858 ns/op
Iteration   8: 962.739 ns/op
Iteration   9: 957.972 ns/op
Iteration  10: 956.590 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  957.813 ±(99.9%) 1.630 ns/op [Average]
  (min, avg, max) = (956.416, 957.813, 962.739), stdev = 1.877
  CI (99.9%): [956.183, 959.443] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 84.86% complete, ETA 00:05:48
# Fork: 1 of 2
# Warmup Iteration   1: 1556.179 ns/op
# Warmup Iteration   2: 958.206 ns/op
# Warmup Iteration   3: 666.779 ns/op
Iteration   1: 667.041 ns/op
Iteration   2: 667.536 ns/op
Iteration   3: 673.845 ns/op
Iteration   4: 673.803 ns/op
Iteration   5: 666.886 ns/op
Iteration   6: 666.729 ns/op
Iteration   7: 666.889 ns/op
Iteration   8: 675.594 ns/op
Iteration   9: 671.988 ns/op
Iteration  10: 666.959 ns/op

# Run progress: 84.93% complete, ETA 00:05:47
# Fork: 2 of 2
# Warmup Iteration   1: 1522.024 ns/op
# Warmup Iteration   2: 978.487 ns/op
# Warmup Iteration   3: 664.421 ns/op
Iteration   1: 664.507 ns/op
Iteration   2: 665.280 ns/op
Iteration   3: 670.893 ns/op
Iteration   4: 671.478 ns/op
Iteration   5: 664.135 ns/op
Iteration   6: 664.257 ns/op
Iteration   7: 664.595 ns/op
Iteration   8: 673.488 ns/op
Iteration   9: 670.251 ns/op
Iteration  10: 664.567 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  668.536 ±(99.9%) 3.271 ns/op [Average]
  (min, avg, max) = (664.135, 668.536, 675.594), stdev = 3.767
  CI (99.9%): [665.265, 671.807] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 85.00% complete, ETA 00:05:45
# Fork: 1 of 2
# Warmup Iteration   1: 24.316 ns/op
# Warmup Iteration   2: 25.563 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.579 ns/op
Iteration   3: 15.970 ns/op
Iteration   4: 15.953 ns/op
Iteration   5: 15.675 ns/op
Iteration   6: 15.573 ns/op
Iteration   7: 15.571 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.586 ns/op
Iteration  10: 15.584 ns/op

# Run progress: 85.07% complete, ETA 00:05:44
# Fork: 2 of 2
# Warmup Iteration   1: 22.406 ns/op
# Warmup Iteration   2: 25.929 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.577 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.947 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.101 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.571, 16.019, 19.112), stdev = 1.067
  CI (99.9%): [15.092, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 85.14% complete, ETA 00:05:42
# Fork: 1 of 2
# Warmup Iteration   1: 3049.155 ns/op
# Warmup Iteration   2: 57458.201 ns/op
# Warmup Iteration   3: 3424.499 ns/op
Iteration   1: 47905.192 ns/op
Iteration   2: 42933.796 ns/op
Iteration   3: 47175.935 ns/op
Iteration   4: 42033.310 ns/op
Iteration   5: 913.511 ns/op
Iteration   6: 875.467 ns/op
Iteration   7: 719.768 ns/op
Iteration   8: 924.004 ns/op
Iteration   9: 766.238 ns/op
Iteration  10: 745.217 ns/op

# Run progress: 85.21% complete, ETA 00:05:40
# Fork: 2 of 2
# Warmup Iteration   1: 2234.699 ns/op
# Warmup Iteration   2: 61355.006 ns/op
# Warmup Iteration   3: 4889.565 ns/op
Iteration   1: 46448.441 ns/op
Iteration   2: 50054.817 ns/op
Iteration   3: 58891.708 ns/op
Iteration   4: 41984.612 ns/op
Iteration   5: 1471.859 ns/op
Iteration   6: 886.905 ns/op
Iteration   7: 726.368 ns/op
Iteration   8: 928.597 ns/op
Iteration   9: 771.435 ns/op
Iteration  10: 750.048 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  19395.361 ±(99.9%) 20423.602 ns/op [Average]
  (min, avg, max) = (719.768, 19395.361, 58891.708), stdev = 23519.851
  CI (99.9%): [≈ 0, 39818.964] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 85.28% complete, ETA 00:05:39
# Fork: 1 of 2
# Warmup Iteration   1: 17259.082 ns/op
# Warmup Iteration   2: 2798.564 ns/op
# Warmup Iteration   3: 1179.904 ns/op
Iteration   1: 1734.532 ns/op
Iteration   2: 1563.485 ns/op
Iteration   3: 1594.776 ns/op
Iteration   4: 954.947 ns/op
Iteration   5: 953.371 ns/op
Iteration   6: 761.286 ns/op
Iteration   7: 1036.939 ns/op
Iteration   8: 776.635 ns/op
Iteration   9: 951.464 ns/op
Iteration  10: 912.345 ns/op

# Run progress: 85.35% complete, ETA 00:05:37
# Fork: 2 of 2
# Warmup Iteration   1: 29234.486 ns/op
# Warmup Iteration   2: 6565.463 ns/op
# Warmup Iteration   3: 1584.494 ns/op
Iteration   1: 1179.038 ns/op
Iteration   2: 1436.848 ns/op
Iteration   3: 1954.308 ns/op
Iteration   4: 992.448 ns/op
Iteration   5: 955.292 ns/op
Iteration   6: 773.195 ns/op
Iteration   7: 1056.324 ns/op
Iteration   8: 790.799 ns/op
Iteration   9: 961.046 ns/op
Iteration  10: 928.845 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1113.396 ±(99.9%) 303.221 ns/op [Average]
  (min, avg, max) = (761.286, 1113.396, 1954.308), stdev = 349.189
  CI (99.9%): [810.175, 1416.617] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 85.42% complete, ETA 00:05:36
# Fork: 1 of 2
# Warmup Iteration   1: 11184.094 ns/op
# Warmup Iteration   2: 7443.072 ns/op
# Warmup Iteration   3: 1420.792 ns/op
Iteration   1: 18002.952 ns/op
Iteration   2: 1583.775 ns/op
Iteration   3: 2799.950 ns/op
Iteration   4: 1048.694 ns/op
Iteration   5: 1055.653 ns/op
Iteration   6: 2805.451 ns/op
Iteration   7: 1057.051 ns/op
Iteration   8: 753.523 ns/op
Iteration   9: 1025.002 ns/op
Iteration  10: 923.264 ns/op

# Run progress: 85.49% complete, ETA 00:05:34
# Fork: 2 of 2
# Warmup Iteration   1: 11434.866 ns/op
# Warmup Iteration   2: 5620.200 ns/op
# Warmup Iteration   3: 2479.693 ns/op
Iteration   1: 2660.450 ns/op
Iteration   2: 2170.267 ns/op
Iteration   3: 2045.795 ns/op
Iteration   4: 1050.709 ns/op
Iteration   5: 1062.196 ns/op
Iteration   6: 11138.965 ns/op
Iteration   7: 1056.215 ns/op
Iteration   8: 765.575 ns/op
Iteration   9: 1040.825 ns/op
Iteration  10: 932.615 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2748.946 ±(99.9%) 3689.128 ns/op [Average]
  (min, avg, max) = (753.523, 2748.946, 18002.952), stdev = 4248.406
  CI (99.9%): [≈ 0, 6438.075] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 85.56% complete, ETA 00:05:32
# Fork: 1 of 2
# Warmup Iteration   1: 2561.571 ns/op
# Warmup Iteration   2: 1412.032 ns/op
# Warmup Iteration   3: 1046.734 ns/op
Iteration   1: 989.176 ns/op
Iteration   2: 1026.440 ns/op
Iteration   3: 1040.389 ns/op
Iteration   4: 1003.567 ns/op
Iteration   5: 1059.069 ns/op
Iteration   6: 1071.596 ns/op
Iteration   7: 1042.784 ns/op
Iteration   8: 1094.549 ns/op
Iteration   9: 1099.902 ns/op
Iteration  10: 1046.992 ns/op

# Run progress: 85.63% complete, ETA 00:05:31
# Fork: 2 of 2
# Warmup Iteration   1: 2170.493 ns/op
# Warmup Iteration   2: 1414.886 ns/op
# Warmup Iteration   3: 1049.250 ns/op
Iteration   1: 1015.883 ns/op
Iteration   2: 1030.671 ns/op
Iteration   3: 1025.706 ns/op
Iteration   4: 996.748 ns/op
Iteration   5: 1071.267 ns/op
Iteration   6: 1084.019 ns/op
Iteration   7: 1044.539 ns/op
Iteration   8: 1096.870 ns/op
Iteration   9: 1105.387 ns/op
Iteration  10: 1049.956 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1049.775 ±(99.9%) 30.509 ns/op [Average]
  (min, avg, max) = (989.176, 1049.775, 1105.387), stdev = 35.134
  CI (99.9%): [1019.266, 1080.285] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 85.69% complete, ETA 00:05:29
# Fork: 1 of 2
# Warmup Iteration   1: 11678.355 ns/op
# Warmup Iteration   2: 5130.023 ns/op
# Warmup Iteration   3: 4111.512 ns/op
Iteration   1: 3732.121 ns/op
Iteration   2: 3752.296 ns/op
Iteration   3: 3803.483 ns/op
Iteration   4: 3714.988 ns/op
Iteration   5: 5928.412 ns/op
Iteration   6: 3733.160 ns/op
Iteration   7: 3712.312 ns/op
Iteration   8: 3721.406 ns/op
Iteration   9: 3729.285 ns/op
Iteration  10: 3726.781 ns/op

# Run progress: 85.76% complete, ETA 00:05:28
# Fork: 2 of 2
# Warmup Iteration   1: 16859.688 ns/op
# Warmup Iteration   2: 5187.509 ns/op
# Warmup Iteration   3: 4124.463 ns/op
Iteration   1: 3755.875 ns/op
Iteration   2: 3792.265 ns/op
Iteration   3: 3828.737 ns/op
Iteration   4: 3733.641 ns/op
Iteration   5: 7022.279 ns/op
Iteration   6: 3781.682 ns/op
Iteration   7: 3760.129 ns/op
Iteration   8: 3763.759 ns/op
Iteration   9: 3770.967 ns/op
Iteration  10: 3768.233 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4026.591 ±(99.9%) 743.833 ns/op [Average]
  (min, avg, max) = (3712.312, 4026.591, 7022.279), stdev = 856.600
  CI (99.9%): [3282.757, 4770.424] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 85.83% complete, ETA 00:05:26
# Fork: 1 of 2
# Warmup Iteration   1: 22.181 ns/op
# Warmup Iteration   2: 25.917 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.941 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.595 ns/op
Iteration  10: 15.585 ns/op

# Run progress: 85.90% complete, ETA 00:05:24
# Fork: 2 of 2
# Warmup Iteration   1: 22.434 ns/op
# Warmup Iteration   2: 25.809 ns/op
# Warmup Iteration   3: 15.763 ns/op
Iteration   1: 15.571 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.991 ns/op
Iteration   4: 15.957 ns/op
Iteration   5: 15.689 ns/op
Iteration   6: 15.585 ns/op
Iteration   7: 15.573 ns/op
Iteration   8: 19.114 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.581 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.022 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.571, 16.022, 19.114), stdev = 1.067
  CI (99.9%): [15.095, 16.949] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 85.97% complete, ETA 00:05:23
# Fork: 1 of 2
# Warmup Iteration   1: 1044.132 ns/op
# Warmup Iteration   2: 594.569 ns/op
# Warmup Iteration   3: 419.609 ns/op
Iteration   1: 418.229 ns/op
Iteration   2: 418.319 ns/op
Iteration   3: 418.907 ns/op
Iteration   4: 418.632 ns/op
Iteration   5: 418.863 ns/op
Iteration   6: 418.821 ns/op
Iteration   7: 418.414 ns/op
Iteration   8: 420.497 ns/op
Iteration   9: 418.526 ns/op
Iteration  10: 419.105 ns/op

# Run progress: 86.04% complete, ETA 00:05:21
# Fork: 2 of 2
# Warmup Iteration   1: 1272.921 ns/op
# Warmup Iteration   2: 566.234 ns/op
# Warmup Iteration   3: 417.974 ns/op
Iteration   1: 417.695 ns/op
Iteration   2: 417.635 ns/op
Iteration   3: 417.817 ns/op
Iteration   4: 417.529 ns/op
Iteration   5: 417.655 ns/op
Iteration   6: 417.859 ns/op
Iteration   7: 417.972 ns/op
Iteration   8: 420.930 ns/op
Iteration   9: 418.332 ns/op
Iteration  10: 417.661 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  418.470 ±(99.9%) 0.790 ns/op [Average]
  (min, avg, max) = (417.529, 418.470, 420.930), stdev = 0.909
  CI (99.9%): [417.680, 419.260] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 86.11% complete, ETA 00:05:20
# Fork: 1 of 2
# Warmup Iteration   1: 24191.326 ns/op
# Warmup Iteration   2: 1046.905 ns/op
# Warmup Iteration   3: 721.665 ns/op
Iteration   1: 661.876 ns/op
Iteration   2: 661.490 ns/op
Iteration   3: 662.254 ns/op
Iteration   4: 662.976 ns/op
Iteration   5: 661.382 ns/op
Iteration   6: 661.570 ns/op
Iteration   7: 661.703 ns/op
Iteration   8: 662.927 ns/op
Iteration   9: 661.974 ns/op
Iteration  10: 661.547 ns/op

# Run progress: 86.18% complete, ETA 00:05:18
# Fork: 2 of 2
# Warmup Iteration   1: 16624.948 ns/op
# Warmup Iteration   2: 1045.222 ns/op
# Warmup Iteration   3: 725.973 ns/op
Iteration   1: 667.700 ns/op
Iteration   2: 667.356 ns/op
Iteration   3: 667.469 ns/op
Iteration   4: 668.675 ns/op
Iteration   5: 667.329 ns/op
Iteration   6: 667.298 ns/op
Iteration   7: 667.298 ns/op
Iteration   8: 667.888 ns/op
Iteration   9: 667.581 ns/op
Iteration  10: 667.231 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  664.776 ±(99.9%) 2.537 ns/op [Average]
  (min, avg, max) = (661.382, 664.776, 668.675), stdev = 2.922
  CI (99.9%): [662.239, 667.314] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 86.25% complete, ETA 00:05:16
# Fork: 1 of 2
# Warmup Iteration   1: 7582.232 ns/op
# Warmup Iteration   2: 926.317 ns/op
# Warmup Iteration   3: 661.004 ns/op
Iteration   1: 661.234 ns/op
Iteration   2: 661.396 ns/op
Iteration   3: 661.067 ns/op
Iteration   4: 664.084 ns/op
Iteration   5: 662.084 ns/op
Iteration   6: 660.371 ns/op
Iteration   7: 660.051 ns/op
Iteration   8: 662.240 ns/op
Iteration   9: 661.455 ns/op
Iteration  10: 660.691 ns/op

# Run progress: 86.32% complete, ETA 00:05:15
# Fork: 2 of 2
# Warmup Iteration   1: 7484.695 ns/op
# Warmup Iteration   2: 917.631 ns/op
# Warmup Iteration   3: 684.493 ns/op
Iteration   1: 684.626 ns/op
Iteration   2: 679.795 ns/op
Iteration   3: 685.014 ns/op
Iteration   4: 685.016 ns/op
Iteration   5: 683.412 ns/op
Iteration   6: 682.797 ns/op
Iteration   7: 684.913 ns/op
Iteration   8: 682.560 ns/op
Iteration   9: 684.627 ns/op
Iteration  10: 684.028 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  672.573 ±(99.9%) 9.966 ns/op [Average]
  (min, avg, max) = (660.051, 672.573, 685.016), stdev = 11.477
  CI (99.9%): [662.607, 682.539] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 86.39% complete, ETA 00:05:13
# Fork: 1 of 2
# Warmup Iteration   1: 826.286 ns/op
# Warmup Iteration   2: 653.646 ns/op
# Warmup Iteration   3: 514.889 ns/op
Iteration   1: 515.406 ns/op
Iteration   2: 514.877 ns/op
Iteration   3: 514.924 ns/op
Iteration   4: 515.023 ns/op
Iteration   5: 515.085 ns/op
Iteration   6: 514.891 ns/op
Iteration   7: 515.052 ns/op
Iteration   8: 515.208 ns/op
Iteration   9: 515.126 ns/op
Iteration  10: 515.210 ns/op

# Run progress: 86.46% complete, ETA 00:05:12
# Fork: 2 of 2
# Warmup Iteration   1: 749.085 ns/op
# Warmup Iteration   2: 656.467 ns/op
# Warmup Iteration   3: 514.875 ns/op
Iteration   1: 514.806 ns/op
Iteration   2: 515.077 ns/op
Iteration   3: 515.133 ns/op
Iteration   4: 515.309 ns/op
Iteration   5: 515.059 ns/op
Iteration   6: 515.123 ns/op
Iteration   7: 515.154 ns/op
Iteration   8: 515.387 ns/op
Iteration   9: 515.384 ns/op
Iteration  10: 515.014 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  515.113 ±(99.9%) 0.148 ns/op [Average]
  (min, avg, max) = (514.806, 515.113, 515.406), stdev = 0.171
  CI (99.9%): [514.964, 515.261] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 86.53% complete, ETA 00:05:10
# Fork: 1 of 2
# Warmup Iteration   1: 874.369 ns/op
# Warmup Iteration   2: 558.276 ns/op
# Warmup Iteration   3: 371.750 ns/op
Iteration   1: 372.031 ns/op
Iteration   2: 372.537 ns/op
Iteration   3: 372.204 ns/op
Iteration   4: 373.122 ns/op
Iteration   5: 371.838 ns/op
Iteration   6: 372.172 ns/op
Iteration   7: 371.917 ns/op
Iteration   8: 368.688 ns/op
Iteration   9: 377.125 ns/op
Iteration  10: 371.941 ns/op

# Run progress: 86.60% complete, ETA 00:05:08
# Fork: 2 of 2
# Warmup Iteration   1: 819.408 ns/op
# Warmup Iteration   2: 556.372 ns/op
# Warmup Iteration   3: 381.765 ns/op
Iteration   1: 382.363 ns/op
Iteration   2: 382.715 ns/op
Iteration   3: 382.998 ns/op
Iteration   4: 382.598 ns/op
Iteration   5: 382.160 ns/op
Iteration   6: 382.221 ns/op
Iteration   7: 382.281 ns/op
Iteration   8: 378.839 ns/op
Iteration   9: 382.321 ns/op
Iteration  10: 382.382 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  377.223 ±(99.9%) 4.557 ns/op [Average]
  (min, avg, max) = (368.688, 377.223, 382.998), stdev = 5.248
  CI (99.9%): [372.665, 381.780] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 86.67% complete, ETA 00:05:07
# Fork: 1 of 2
# Warmup Iteration   1: 22.328 ns/op
# Warmup Iteration   2: 22.833 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.930 ns/op
Iteration   5: 15.673 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.574 ns/op
Iteration   8: 19.116 ns/op
Iteration   9: 15.583 ns/op
Iteration  10: 15.583 ns/op

# Run progress: 86.74% complete, ETA 00:05:05
# Fork: 2 of 2
# Warmup Iteration   1: 22.613 ns/op
# Warmup Iteration   2: 25.978 ns/op
# Warmup Iteration   3: 15.761 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.586 ns/op
Iteration   3: 15.993 ns/op
Iteration   4: 15.938 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.112 ns/op
Iteration   9: 15.575 ns/op
Iteration  10: 15.582 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.929 ns/op [Average]
  (min, avg, max) = (15.573, 16.019, 19.116), stdev = 1.069
  CI (99.9%): [15.091, 16.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 86.81% complete, ETA 00:05:04
# Fork: 1 of 2
# Warmup Iteration   1: 2258.189 ns/op
# Warmup Iteration   2: 5645.268 ns/op
# Warmup Iteration   3: 955.524 ns/op
Iteration   1: 484.017 ns/op
Iteration   2: 39206.430 ns/op
Iteration   3: 436.712 ns/op
Iteration   4: 25507.047 ns/op
Iteration   5: 32501.324 ns/op
Iteration   6: 602.152 ns/op
Iteration   7: 558.179 ns/op
Iteration   8: 576.796 ns/op
Iteration   9: 522.305 ns/op
Iteration  10: 456.468 ns/op

# Run progress: 86.88% complete, ETA 00:05:02
# Fork: 2 of 2
# Warmup Iteration   1: 1603.886 ns/op
# Warmup Iteration   2: 35491.225 ns/op
# Warmup Iteration   3: 1415.556 ns/op
Iteration   1: 477.061 ns/op
Iteration   2: 39596.175 ns/op
Iteration   3: 445.536 ns/op
Iteration   4: 27317.592 ns/op
Iteration   5: 26573.459 ns/op
Iteration   6: 589.055 ns/op
Iteration   7: 555.501 ns/op
Iteration   8: 563.761 ns/op
Iteration   9: 517.519 ns/op
Iteration  10: 451.019 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9896.905 ±(99.9%) 13077.269 ns/op [Average]
  (min, avg, max) = (436.712, 9896.905, 39596.175), stdev = 15059.802
  CI (99.9%): [≈ 0, 22974.174] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 86.94% complete, ETA 00:05:00
# Fork: 1 of 2
# Warmup Iteration   1: 5176.553 ns/op
# Warmup Iteration   2: 65418.385 ns/op
# Warmup Iteration   3: 794.540 ns/op
Iteration   1: 37754.135 ns/op
Iteration   2: 18303.962 ns/op
Iteration   3: 634.301 ns/op
Iteration   4: 1682.838 ns/op
Iteration   5: 665.663 ns/op
Iteration   6: 612.109 ns/op
Iteration   7: 1005.075 ns/op
Iteration   8: 781.950 ns/op
Iteration   9: 689.580 ns/op
Iteration  10: 578.944 ns/op

# Run progress: 87.01% complete, ETA 00:04:59
# Fork: 2 of 2
# Warmup Iteration   1: 10982.263 ns/op
# Warmup Iteration   2: 67026.569 ns/op
# Warmup Iteration   3: 760.368 ns/op
Iteration   1: 38032.946 ns/op
Iteration   2: 73681.126 ns/op
Iteration   3: 12835.000 ns/op
Iteration   4: 6040.955 ns/op
Iteration   5: 666.261 ns/op
Iteration   6: 611.353 ns/op
Iteration   7: 1020.752 ns/op
Iteration   8: 775.249 ns/op
Iteration   9: 693.810 ns/op
Iteration  10: 580.028 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9882.302 ±(99.9%) 16540.347 ns/op [Average]
  (min, avg, max) = (578.944, 9882.302, 73681.126), stdev = 19047.888
  CI (99.9%): [≈ 0, 26422.649] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 87.08% complete, ETA 00:04:57
# Fork: 1 of 2
# Warmup Iteration   1: 7534.671 ns/op
# Warmup Iteration   2: 71434.759 ns/op
# Warmup Iteration   3: 754.466 ns/op
Iteration   1: 47331.237 ns/op
Iteration   2: 15091.500 ns/op
Iteration   3: 630.969 ns/op
Iteration   4: 12260.035 ns/op
Iteration   5: 669.189 ns/op
Iteration   6: 611.002 ns/op
Iteration   7: 1113.927 ns/op
Iteration   8: 748.135 ns/op
Iteration   9: 684.780 ns/op
Iteration  10: 589.018 ns/op

# Run progress: 87.15% complete, ETA 00:04:56
# Fork: 2 of 2
# Warmup Iteration   1: 10946.129 ns/op
# Warmup Iteration   2: 29504.640 ns/op
# Warmup Iteration   3: 1175.781 ns/op
Iteration   1: 4431.262 ns/op
Iteration   2: 1192.362 ns/op
Iteration   3: 627.390 ns/op
Iteration   4: 13461.274 ns/op
Iteration   5: 665.492 ns/op
Iteration   6: 602.252 ns/op
Iteration   7: 3882.128 ns/op
Iteration   8: 740.029 ns/op
Iteration   9: 663.958 ns/op
Iteration  10: 572.976 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5328.446 ±(99.9%) 9500.146 ns/op [Average]
  (min, avg, max) = (572.976, 5328.446, 47331.237), stdev = 10940.382
  CI (99.9%): [≈ 0, 14828.592] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 87.22% complete, ETA 00:04:54
# Fork: 1 of 2
# Warmup Iteration   1: 943.468 ns/op
# Warmup Iteration   2: 9592.892 ns/op
# Warmup Iteration   3: 842.027 ns/op
Iteration   1: 499.938 ns/op
Iteration   2: 620.811 ns/op
Iteration   3: 529.761 ns/op
Iteration   4: 541.854 ns/op
Iteration   5: 558.924 ns/op
Iteration   6: 575.511 ns/op
Iteration   7: 590.875 ns/op
Iteration   8: 595.689 ns/op
Iteration   9: 544.714 ns/op
Iteration  10: 510.481 ns/op

# Run progress: 87.29% complete, ETA 00:04:52
# Fork: 2 of 2
# Warmup Iteration   1: 826.278 ns/op
# Warmup Iteration   2: 2537.846 ns/op
# Warmup Iteration   3: 1028.390 ns/op
Iteration   1: 518.443 ns/op
Iteration   2: 704.460 ns/op
Iteration   3: 548.548 ns/op
Iteration   4: 597.182 ns/op
Iteration   5: 620.406 ns/op
Iteration   6: 628.902 ns/op
Iteration   7: 651.797 ns/op
Iteration   8: 654.259 ns/op
Iteration   9: 563.224 ns/op
Iteration  10: 532.776 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  579.428 ±(99.9%) 47.446 ns/op [Average]
  (min, avg, max) = (499.938, 579.428, 704.460), stdev = 54.639
  CI (99.9%): [531.981, 626.874] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_FR, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 87.36% complete, ETA 00:04:51
# Fork: 1 of 2
# Warmup Iteration   1: 1611.035 ns/op
# Warmup Iteration   2: 938.878 ns/op
# Warmup Iteration   3: 1190.244 ns/op
Iteration   1: 742.536 ns/op
Iteration   2: 33353.430 ns/op
Iteration   3: 595.696 ns/op
Iteration   4: 667.238 ns/op
Iteration   5: 638.725 ns/op
Iteration   6: 837.721 ns/op
Iteration   7: 886.806 ns/op
Iteration   8: 674.095 ns/op
Iteration   9: 644.159 ns/op
Iteration  10: 572.036 ns/op

# Run progress: 87.43% complete, ETA 00:04:49
# Fork: 2 of 2
# Warmup Iteration   1: 1581.084 ns/op
# Warmup Iteration   2: 924.831 ns/op
# Warmup Iteration   3: 1193.079 ns/op
Iteration   1: 734.650 ns/op
Iteration   2: 33467.959 ns/op
Iteration   3: 603.263 ns/op
Iteration   4: 677.776 ns/op
Iteration   5: 638.092 ns/op
Iteration   6: 835.884 ns/op
Iteration   7: 895.703 ns/op
Iteration   8: 673.392 ns/op
Iteration   9: 643.071 ns/op
Iteration  10: 581.069 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3968.165 ±(99.9%) 8744.017 ns/op [Average]
  (min, avg, max) = (572.036, 3968.165, 33467.959), stdev = 10069.623
  CI (99.9%): [≈ 0, 12712.182] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 87.50% complete, ETA 00:04:48
# Fork: 1 of 2
# Warmup Iteration   1: 22.060 ns/op
# Warmup Iteration   2: 25.387 ns/op
# Warmup Iteration   3: 15.764 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 16.015 ns/op
Iteration   4: 16.070 ns/op
Iteration   5: 15.679 ns/op
Iteration   6: 15.584 ns/op
Iteration   7: 15.581 ns/op
Iteration   8: 19.091 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.577 ns/op

# Run progress: 87.57% complete, ETA 00:04:46
# Fork: 2 of 2
# Warmup Iteration   1: 22.373 ns/op
# Warmup Iteration   2: 27.400 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.579 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.983 ns/op
Iteration   4: 15.937 ns/op
Iteration   5: 15.678 ns/op
Iteration   6: 15.583 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.117 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.026 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.576, 16.026, 19.117), stdev = 1.066
  CI (99.9%): [15.101, 16.952] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 87.64% complete, ETA 00:04:44
# Fork: 1 of 2
# Warmup Iteration   1: 6255.142 ns/op
# Warmup Iteration   2: 1344.557 ns/op
# Warmup Iteration   3: 936.330 ns/op
Iteration   1: 957.668 ns/op
Iteration   2: 931.025 ns/op
Iteration   3: 933.866 ns/op
Iteration   4: 933.970 ns/op
Iteration   5: 955.650 ns/op
Iteration   6: 940.064 ns/op
Iteration   7: 958.004 ns/op
Iteration   8: 942.609 ns/op
Iteration   9: 938.821 ns/op
Iteration  10: 950.070 ns/op

# Run progress: 87.71% complete, ETA 00:04:43
# Fork: 2 of 2
# Warmup Iteration   1: 5737.176 ns/op
# Warmup Iteration   2: 1147.347 ns/op
# Warmup Iteration   3: 884.580 ns/op
Iteration   1: 885.482 ns/op
Iteration   2: 885.415 ns/op
Iteration   3: 884.208 ns/op
Iteration   4: 894.783 ns/op
Iteration   5: 893.540 ns/op
Iteration   6: 893.246 ns/op
Iteration   7: 893.419 ns/op
Iteration   8: 898.606 ns/op
Iteration   9: 896.606 ns/op
Iteration  10: 885.466 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  917.626 ±(99.9%) 24.663 ns/op [Average]
  (min, avg, max) = (884.208, 917.626, 958.004), stdev = 28.402
  CI (99.9%): [892.963, 942.289] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 87.78% complete, ETA 00:04:41
# Fork: 1 of 2
# Warmup Iteration   1: 13600.487 ns/op
# Warmup Iteration   2: 1069.183 ns/op
# Warmup Iteration   3: 922.977 ns/op
Iteration   1: 847.984 ns/op
Iteration   2: 847.755 ns/op
Iteration   3: 848.924 ns/op
Iteration   4: 846.454 ns/op
Iteration   5: 847.730 ns/op
Iteration   6: 848.675 ns/op
Iteration   7: 847.946 ns/op
Iteration   8: 847.944 ns/op
Iteration   9: 849.387 ns/op
Iteration  10: 849.426 ns/op

# Run progress: 87.85% complete, ETA 00:04:40
# Fork: 2 of 2
# Warmup Iteration   1: 10998.060 ns/op
# Warmup Iteration   2: 1099.004 ns/op
# Warmup Iteration   3: 847.172 ns/op
Iteration   1: 848.147 ns/op
Iteration   2: 845.902 ns/op
Iteration   3: 846.701 ns/op
Iteration   4: 846.562 ns/op
Iteration   5: 848.405 ns/op
Iteration   6: 847.732 ns/op
Iteration   7: 847.894 ns/op
Iteration   8: 847.359 ns/op
Iteration   9: 847.964 ns/op
Iteration  10: 849.141 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  847.902 ±(99.9%) 0.839 ns/op [Average]
  (min, avg, max) = (845.902, 847.902, 849.426), stdev = 0.966
  CI (99.9%): [847.062, 848.741] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 87.92% complete, ETA 00:04:38
# Fork: 1 of 2
# Warmup Iteration   1: 11438.877 ns/op
# Warmup Iteration   2: 1232.580 ns/op
# Warmup Iteration   3: 842.182 ns/op
Iteration   1: 841.329 ns/op
Iteration   2: 842.792 ns/op
Iteration   3: 842.610 ns/op
Iteration   4: 841.267 ns/op
Iteration   5: 841.412 ns/op
Iteration   6: 840.918 ns/op
Iteration   7: 841.402 ns/op
Iteration   8: 840.923 ns/op
Iteration   9: 840.936 ns/op
Iteration  10: 841.396 ns/op

# Run progress: 87.99% complete, ETA 00:04:36
# Fork: 2 of 2
# Warmup Iteration   1: 35941.526 ns/op
# Warmup Iteration   2: 1483.913 ns/op
# Warmup Iteration   3: 1027.715 ns/op
Iteration   1: 873.899 ns/op
Iteration   2: 864.646 ns/op
Iteration   3: 865.515 ns/op
Iteration   4: 864.838 ns/op
Iteration   5: 863.774 ns/op
Iteration   6: 864.195 ns/op
Iteration   7: 862.829 ns/op
Iteration   8: 864.055 ns/op
Iteration   9: 863.906 ns/op
Iteration  10: 863.263 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  853.295 ±(99.9%) 10.689 ns/op [Average]
  (min, avg, max) = (840.918, 853.295, 873.899), stdev = 12.309
  CI (99.9%): [842.607, 863.984] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 88.06% complete, ETA 00:04:35
# Fork: 1 of 2
# Warmup Iteration   1: 2109.901 ns/op
# Warmup Iteration   2: 1491.511 ns/op
# Warmup Iteration   3: 1059.483 ns/op
Iteration   1: 1059.647 ns/op
Iteration   2: 1059.742 ns/op
Iteration   3: 1060.410 ns/op
Iteration   4: 1060.959 ns/op
Iteration   5: 1059.901 ns/op
Iteration   6: 1060.219 ns/op
Iteration   7: 1059.312 ns/op
Iteration   8: 1060.857 ns/op
Iteration   9: 1059.881 ns/op
Iteration  10: 1059.656 ns/op

# Run progress: 88.13% complete, ETA 00:04:33
# Fork: 2 of 2
# Warmup Iteration   1: 1669.515 ns/op
# Warmup Iteration   2: 1363.107 ns/op
# Warmup Iteration   3: 1058.416 ns/op
Iteration   1: 1059.203 ns/op
Iteration   2: 1059.553 ns/op
Iteration   3: 1060.175 ns/op
Iteration   4: 1060.720 ns/op
Iteration   5: 1059.194 ns/op
Iteration   6: 1059.084 ns/op
Iteration   7: 1059.209 ns/op
Iteration   8: 1060.576 ns/op
Iteration   9: 1059.291 ns/op
Iteration  10: 1058.933 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1059.826 ±(99.9%) 0.547 ns/op [Average]
  (min, avg, max) = (1058.933, 1059.826, 1060.959), stdev = 0.630
  CI (99.9%): [1059.279, 1060.373] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 88.19% complete, ETA 00:04:32
# Fork: 1 of 2
# Warmup Iteration   1: 10287.524 ns/op
# Warmup Iteration   2: 5343.871 ns/op
# Warmup Iteration   3: 3842.314 ns/op
Iteration   1: 3841.853 ns/op
Iteration   2: 3840.902 ns/op
Iteration   3: 3851.538 ns/op
Iteration   4: 3824.613 ns/op
Iteration   5: 3818.308 ns/op
Iteration   6: 3829.035 ns/op
Iteration   7: 3823.123 ns/op
Iteration   8: 3789.016 ns/op
Iteration   9: 3983.170 ns/op
Iteration  10: 3826.943 ns/op

# Run progress: 88.26% complete, ETA 00:04:30
# Fork: 2 of 2
# Warmup Iteration   1: 15416.758 ns/op
# Warmup Iteration   2: 5031.446 ns/op
# Warmup Iteration   3: 4243.549 ns/op
Iteration   1: 3884.223 ns/op
Iteration   2: 3882.860 ns/op
Iteration   3: 3907.398 ns/op
Iteration   4: 3866.939 ns/op
Iteration   5: 3862.642 ns/op
Iteration   6: 3881.327 ns/op
Iteration   7: 3866.080 ns/op
Iteration   8: 3867.206 ns/op
Iteration   9: 3878.285 ns/op
Iteration  10: 3870.056 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3859.776 ±(99.9%) 35.506 ns/op [Average]
  (min, avg, max) = (3789.016, 3859.776, 3983.170), stdev = 40.889
  CI (99.9%): [3824.270, 3895.282] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 88.33% complete, ETA 00:04:28
# Fork: 1 of 2
# Warmup Iteration   1: 22.262 ns/op
# Warmup Iteration   2: 24.703 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.574 ns/op
Iteration   2: 15.573 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.671 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.100 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.586 ns/op

# Run progress: 88.40% complete, ETA 00:04:27
# Fork: 2 of 2
# Warmup Iteration   1: 22.177 ns/op
# Warmup Iteration   2: 25.870 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.585 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.949 ns/op
Iteration   5: 15.686 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.115 ns/op
Iteration   9: 15.582 ns/op
Iteration  10: 15.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.573, 16.020, 19.115), stdev = 1.067
  CI (99.9%): [15.093, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 88.47% complete, ETA 00:04:25
# Fork: 1 of 2
# Warmup Iteration   1: 3142.771 ns/op
# Warmup Iteration   2: 1125.342 ns/op
# Warmup Iteration   3: 793.267 ns/op
Iteration   1: 788.972 ns/op
Iteration   2: 788.639 ns/op
Iteration   3: 789.637 ns/op
Iteration   4: 786.060 ns/op
Iteration   5: 788.646 ns/op
Iteration   6: 789.198 ns/op
Iteration   7: 789.426 ns/op
Iteration   8: 792.802 ns/op
Iteration   9: 788.995 ns/op
Iteration  10: 789.350 ns/op

# Run progress: 88.54% complete, ETA 00:04:24
# Fork: 2 of 2
# Warmup Iteration   1: 3467.204 ns/op
# Warmup Iteration   2: 1077.516 ns/op
# Warmup Iteration   3: 766.219 ns/op
Iteration   1: 786.626 ns/op
Iteration   2: 775.361 ns/op
Iteration   3: 787.686 ns/op
Iteration   4: 763.928 ns/op
Iteration   5: 774.420 ns/op
Iteration   6: 786.431 ns/op
Iteration   7: 769.319 ns/op
Iteration   8: 773.991 ns/op
Iteration   9: 770.370 ns/op
Iteration  10: 771.449 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  782.565 ±(99.9%) 7.728 ns/op [Average]
  (min, avg, max) = (763.928, 782.565, 792.802), stdev = 8.900
  CI (99.9%): [774.837, 790.293] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 88.61% complete, ETA 00:04:22
# Fork: 1 of 2
# Warmup Iteration   1: 16780.732 ns/op
# Warmup Iteration   2: 986.727 ns/op
# Warmup Iteration   3: 804.229 ns/op
Iteration   1: 738.891 ns/op
Iteration   2: 737.378 ns/op
Iteration   3: 744.841 ns/op
Iteration   4: 741.203 ns/op
Iteration   5: 737.486 ns/op
Iteration   6: 737.365 ns/op
Iteration   7: 738.071 ns/op
Iteration   8: 742.936 ns/op
Iteration   9: 737.691 ns/op
Iteration  10: 737.518 ns/op

# Run progress: 88.68% complete, ETA 00:04:20
# Fork: 2 of 2
# Warmup Iteration   1: 24577.467 ns/op
# Warmup Iteration   2: 1168.945 ns/op
# Warmup Iteration   3: 812.099 ns/op
Iteration   1: 740.168 ns/op
Iteration   2: 740.116 ns/op
Iteration   3: 745.920 ns/op
Iteration   4: 741.356 ns/op
Iteration   5: 739.713 ns/op
Iteration   6: 739.772 ns/op
Iteration   7: 739.660 ns/op
Iteration   8: 744.028 ns/op
Iteration   9: 739.653 ns/op
Iteration  10: 740.018 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  740.189 ±(99.9%) 2.208 ns/op [Average]
  (min, avg, max) = (737.365, 740.189, 745.920), stdev = 2.543
  CI (99.9%): [737.981, 742.398] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 88.75% complete, ETA 00:04:19
# Fork: 1 of 2
# Warmup Iteration   1: 32358.619 ns/op
# Warmup Iteration   2: 1088.860 ns/op
# Warmup Iteration   3: 797.867 ns/op
Iteration   1: 734.182 ns/op
Iteration   2: 733.894 ns/op
Iteration   3: 734.797 ns/op
Iteration   4: 751.840 ns/op
Iteration   5: 734.265 ns/op
Iteration   6: 733.795 ns/op
Iteration   7: 733.653 ns/op
Iteration   8: 735.234 ns/op
Iteration   9: 733.976 ns/op
Iteration  10: 734.066 ns/op

# Run progress: 88.82% complete, ETA 00:04:17
# Fork: 2 of 2
# Warmup Iteration   1: 27992.163 ns/op
# Warmup Iteration   2: 1007.339 ns/op
# Warmup Iteration   3: 767.784 ns/op
Iteration   1: 713.493 ns/op
Iteration   2: 711.960 ns/op
Iteration   3: 712.629 ns/op
Iteration   4: 714.268 ns/op
Iteration   5: 712.224 ns/op
Iteration   6: 713.308 ns/op
Iteration   7: 711.767 ns/op
Iteration   8: 711.732 ns/op
Iteration   9: 712.264 ns/op
Iteration  10: 713.208 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  724.328 ±(99.9%) 10.910 ns/op [Average]
  (min, avg, max) = (711.732, 724.328, 751.840), stdev = 12.564
  CI (99.9%): [713.418, 735.238] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 88.89% complete, ETA 00:04:16
# Fork: 1 of 2
# Warmup Iteration   1: 837.503 ns/op
# Warmup Iteration   2: 711.570 ns/op
# Warmup Iteration   3: 559.973 ns/op
Iteration   1: 560.253 ns/op
Iteration   2: 560.863 ns/op
Iteration   3: 561.381 ns/op
Iteration   4: 562.223 ns/op
Iteration   5: 553.488 ns/op
Iteration   6: 560.983 ns/op
Iteration   7: 559.939 ns/op
Iteration   8: 561.108 ns/op
Iteration   9: 561.177 ns/op
Iteration  10: 561.465 ns/op

# Run progress: 88.96% complete, ETA 00:04:14
# Fork: 2 of 2
# Warmup Iteration   1: 824.088 ns/op
# Warmup Iteration   2: 871.264 ns/op
# Warmup Iteration   3: 556.718 ns/op
Iteration   1: 556.689 ns/op
Iteration   2: 556.597 ns/op
Iteration   3: 565.081 ns/op
Iteration   4: 557.276 ns/op
Iteration   5: 562.944 ns/op
Iteration   6: 556.065 ns/op
Iteration   7: 562.940 ns/op
Iteration   8: 564.895 ns/op
Iteration   9: 563.123 ns/op
Iteration  10: 559.617 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  560.405 ±(99.9%) 2.635 ns/op [Average]
  (min, avg, max) = (553.488, 560.405, 565.081), stdev = 3.034
  CI (99.9%): [557.770, 563.040] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 89.03% complete, ETA 00:04:12
# Fork: 1 of 2
# Warmup Iteration   1: 1659.070 ns/op
# Warmup Iteration   2: 1067.667 ns/op
# Warmup Iteration   3: 733.532 ns/op
Iteration   1: 733.674 ns/op
Iteration   2: 734.184 ns/op
Iteration   3: 735.230 ns/op
Iteration   4: 820.804 ns/op
Iteration   5: 733.509 ns/op
Iteration   6: 733.666 ns/op
Iteration   7: 733.686 ns/op
Iteration   8: 738.280 ns/op
Iteration   9: 738.690 ns/op
Iteration  10: 733.607 ns/op

# Run progress: 89.10% complete, ETA 00:04:11
# Fork: 2 of 2
# Warmup Iteration   1: 1595.114 ns/op
# Warmup Iteration   2: 1065.622 ns/op
# Warmup Iteration   3: 732.323 ns/op
Iteration   1: 732.394 ns/op
Iteration   2: 734.133 ns/op
Iteration   3: 733.800 ns/op
Iteration   4: 745.397 ns/op
Iteration   5: 732.970 ns/op
Iteration   6: 733.380 ns/op
Iteration   7: 732.624 ns/op
Iteration   8: 737.821 ns/op
Iteration   9: 738.721 ns/op
Iteration  10: 733.092 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  739.483 ±(99.9%) 16.845 ns/op [Average]
  (min, avg, max) = (732.394, 739.483, 820.804), stdev = 19.399
  CI (99.9%): [722.638, 756.328] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 89.17% complete, ETA 00:04:09
# Fork: 1 of 2
# Warmup Iteration   1: 22.578 ns/op
# Warmup Iteration   2: 25.803 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.584 ns/op
Iteration   2: 15.586 ns/op
Iteration   3: 15.982 ns/op
Iteration   4: 15.940 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.567 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.100 ns/op
Iteration   9: 15.573 ns/op
Iteration  10: 15.578 ns/op

# Run progress: 89.24% complete, ETA 00:04:08
# Fork: 2 of 2
# Warmup Iteration   1: 23.689 ns/op
# Warmup Iteration   2: 25.853 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.571 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.940 ns/op
Iteration   5: 15.688 ns/op
Iteration   6: 15.571 ns/op
Iteration   7: 15.580 ns/op
Iteration   8: 19.122 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.928 ns/op [Average]
  (min, avg, max) = (15.567, 16.018, 19.122), stdev = 1.069
  CI (99.9%): [15.090, 16.946] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 89.31% complete, ETA 00:04:06
# Fork: 1 of 2
# Warmup Iteration   1: 4400.715 ns/op
# Warmup Iteration   2: 52274.619 ns/op
# Warmup Iteration   3: 2489.664 ns/op
Iteration   1: 750.531 ns/op
Iteration   2: 45526.781 ns/op
Iteration   3: 44112.115 ns/op
Iteration   4: 48336.606 ns/op
Iteration   5: 779.971 ns/op
Iteration   6: 53293.892 ns/op
Iteration   7: 40998.396 ns/op
Iteration   8: 6031.703 ns/op
Iteration   9: 852.485 ns/op
Iteration  10: 807.297 ns/op

# Run progress: 89.38% complete, ETA 00:04:04
# Fork: 2 of 2
# Warmup Iteration   1: 2973.807 ns/op
# Warmup Iteration   2: 6219.162 ns/op
# Warmup Iteration   3: 2405.247 ns/op
Iteration   1: 755.819 ns/op
Iteration   2: 49496.127 ns/op
Iteration   3: 38962.993 ns/op
Iteration   4: 56621.502 ns/op
Iteration   5: 812.273 ns/op
Iteration   6: 58805.938 ns/op
Iteration   7: 49717.654 ns/op
Iteration   8: 3428.056 ns/op
Iteration   9: 841.056 ns/op
Iteration  10: 805.902 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  25086.855 ±(99.9%) 21313.464 ns/op [Average]
  (min, avg, max) = (750.531, 25086.855, 58805.938), stdev = 24544.617
  CI (99.9%): [3773.391, 46400.319] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 89.44% complete, ETA 00:04:03
# Fork: 1 of 2
# Warmup Iteration   1: 51469.699 ns/op
# Warmup Iteration   2: 9088.740 ns/op
# Warmup Iteration   3: 1629.647 ns/op
Iteration   1: 812.360 ns/op
Iteration   2: 961.408 ns/op
Iteration   3: 1969.038 ns/op
Iteration   4: 4254.503 ns/op
Iteration   5: 1041.279 ns/op
Iteration   6: 1655.727 ns/op
Iteration   7: 983.162 ns/op
Iteration   8: 821.527 ns/op
Iteration   9: 985.989 ns/op
Iteration  10: 930.172 ns/op

# Run progress: 89.51% complete, ETA 00:04:01
# Fork: 2 of 2
# Warmup Iteration   1: 31507.195 ns/op
# Warmup Iteration   2: 5607.100 ns/op
# Warmup Iteration   3: 1286.607 ns/op
Iteration   1: 780.618 ns/op
Iteration   2: 938.742 ns/op
Iteration   3: 1218.404 ns/op
Iteration   4: 2062.781 ns/op
Iteration   5: 1034.638 ns/op
Iteration   6: 12123.628 ns/op
Iteration   7: 981.739 ns/op
Iteration   8: 821.947 ns/op
Iteration   9: 984.330 ns/op
Iteration  10: 933.127 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1814.756 ±(99.9%) 2216.229 ns/op [Average]
  (min, avg, max) = (780.618, 1814.756, 12123.628), stdev = 2552.213
  CI (99.9%): [≈ 0, 4030.985] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 89.58% complete, ETA 00:04:00
# Fork: 1 of 2
# Warmup Iteration   1: 37516.112 ns/op
# Warmup Iteration   2: 10398.003 ns/op
# Warmup Iteration   3: 1443.537 ns/op
Iteration   1: 18355.398 ns/op
Iteration   2: 995.590 ns/op
Iteration   3: 17380.598 ns/op
Iteration   4: 24232.337 ns/op
Iteration   5: 1059.154 ns/op
Iteration   6: 7888.921 ns/op
Iteration   7: 964.997 ns/op
Iteration   8: 830.849 ns/op
Iteration   9: 966.793 ns/op
Iteration  10: 973.656 ns/op

# Run progress: 89.65% complete, ETA 00:03:58
# Fork: 2 of 2
# Warmup Iteration   1: 28202.524 ns/op
# Warmup Iteration   2: 5496.122 ns/op
# Warmup Iteration   3: 1330.638 ns/op
Iteration   1: 2134.216 ns/op
Iteration   2: 996.831 ns/op
Iteration   3: 18494.353 ns/op
Iteration   4: 23750.206 ns/op
Iteration   5: 1075.338 ns/op
Iteration   6: 14771.718 ns/op
Iteration   7: 973.471 ns/op
Iteration   8: 830.776 ns/op
Iteration   9: 986.280 ns/op
Iteration  10: 969.422 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6931.545 ±(99.9%) 7632.049 ns/op [Average]
  (min, avg, max) = (830.776, 6931.545, 24232.337), stdev = 8789.079
  CI (99.9%): [≈ 0, 14563.594] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 89.72% complete, ETA 00:03:56
# Fork: 1 of 2
# Warmup Iteration   1: 2123.374 ns/op
# Warmup Iteration   2: 99412.613 ns/op
# Warmup Iteration   3: 1232.273 ns/op
Iteration   1: 938.530 ns/op
Iteration   2: 1052.524 ns/op
Iteration   3: 1096.182 ns/op
Iteration   4: 1074.957 ns/op
Iteration   5: 1068.981 ns/op
Iteration   6: 82018.890 ns/op
Iteration   7: 1951.344 ns/op
Iteration   8: 1071.005 ns/op
Iteration   9: 979.869 ns/op
Iteration  10: 1075.112 ns/op

# Run progress: 89.79% complete, ETA 00:03:55
# Fork: 2 of 2
# Warmup Iteration   1: 2478.065 ns/op
# Warmup Iteration   2: 11459.088 ns/op
# Warmup Iteration   3: 1093.653 ns/op
Iteration   1: 934.138 ns/op
Iteration   2: 1056.860 ns/op
Iteration   3: 1094.860 ns/op
Iteration   4: 1075.045 ns/op
Iteration   5: 1071.513 ns/op
Iteration   6: 86023.588 ns/op
Iteration   7: 1029.608 ns/op
Iteration   8: 1059.878 ns/op
Iteration   9: 986.830 ns/op
Iteration  10: 1093.804 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9387.676 ±(99.9%) 22171.951 ns/op [Average]
  (min, avg, max) = (934.138, 9387.676, 86023.588), stdev = 25533.252
  CI (99.9%): [≈ 0, 31559.627] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 89.86% complete, ETA 00:03:53
# Fork: 1 of 2
# Warmup Iteration   1: 12657.510 ns/op
# Warmup Iteration   2: 4880.045 ns/op
# Warmup Iteration   3: 4178.376 ns/op
Iteration   1: 3874.757 ns/op
Iteration   2: 3865.825 ns/op
Iteration   3: 6237.618 ns/op
Iteration   4: 3787.605 ns/op
Iteration   5: 3771.478 ns/op
Iteration   6: 3798.327 ns/op
Iteration   7: 3791.265 ns/op
Iteration   8: 3776.343 ns/op
Iteration   9: 3954.884 ns/op
Iteration  10: 3771.437 ns/op

# Run progress: 89.93% complete, ETA 00:03:52
# Fork: 2 of 2
# Warmup Iteration   1: 11475.366 ns/op
# Warmup Iteration   2: 5167.221 ns/op
# Warmup Iteration   3: 4110.337 ns/op
Iteration   1: 3784.458 ns/op
Iteration   2: 3746.401 ns/op
Iteration   3: 6155.680 ns/op
Iteration   4: 3707.460 ns/op
Iteration   5: 3715.619 ns/op
Iteration   6: 3733.464 ns/op
Iteration   7: 3729.816 ns/op
Iteration   8: 3783.362 ns/op
Iteration   9: 3774.463 ns/op
Iteration  10: 3721.175 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4024.072 ±(99.9%) 647.330 ns/op [Average]
  (min, avg, max) = (3707.460, 4024.072, 6237.618), stdev = 745.466
  CI (99.9%): [3376.742, 4671.402] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 90.00% complete, ETA 00:03:50
# Fork: 1 of 2
# Warmup Iteration   1: 23.391 ns/op
# Warmup Iteration   2: 24.418 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.582 ns/op
Iteration   3: 15.988 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.674 ns/op
Iteration   6: 15.571 ns/op
Iteration   7: 15.572 ns/op
Iteration   8: 19.098 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.580 ns/op

# Run progress: 90.07% complete, ETA 00:03:48
# Fork: 2 of 2
# Warmup Iteration   1: 22.288 ns/op
# Warmup Iteration   2: 26.089 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.576 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.946 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.584 ns/op
Iteration   7: 15.570 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.566 ns/op
Iteration  10: 15.585 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.017 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.566, 16.017, 19.103), stdev = 1.066
  CI (99.9%): [15.091, 16.942] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 90.14% complete, ETA 00:03:47
# Fork: 1 of 2
# Warmup Iteration   1: 1664.194 ns/op
# Warmup Iteration   2: 467.519 ns/op
# Warmup Iteration   3: 323.885 ns/op
Iteration   1: 323.409 ns/op
Iteration   2: 323.688 ns/op
Iteration   3: 323.622 ns/op
Iteration   4: 324.077 ns/op
Iteration   5: 323.656 ns/op
Iteration   6: 323.978 ns/op
Iteration   7: 323.408 ns/op
Iteration   8: 327.036 ns/op
Iteration   9: 323.456 ns/op
Iteration  10: 323.890 ns/op

# Run progress: 90.21% complete, ETA 00:03:45
# Fork: 2 of 2
# Warmup Iteration   1: 1428.029 ns/op
# Warmup Iteration   2: 493.770 ns/op
# Warmup Iteration   3: 330.580 ns/op
Iteration   1: 330.487 ns/op
Iteration   2: 330.279 ns/op
Iteration   3: 330.277 ns/op
Iteration   4: 332.060 ns/op
Iteration   5: 330.314 ns/op
Iteration   6: 330.413 ns/op
Iteration   7: 330.845 ns/op
Iteration   8: 332.452 ns/op
Iteration   9: 330.606 ns/op
Iteration  10: 330.222 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  327.409 ±(99.9%) 3.123 ns/op [Average]
  (min, avg, max) = (323.408, 327.409, 332.452), stdev = 3.596
  CI (99.9%): [324.286, 330.531] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 90.28% complete, ETA 00:03:44
# Fork: 1 of 2
# Warmup Iteration   1: 686.190 ns/op
# Warmup Iteration   2: 482.448 ns/op
# Warmup Iteration   3: 333.343 ns/op
Iteration   1: 333.330 ns/op
Iteration   2: 333.455 ns/op
Iteration   3: 337.976 ns/op
Iteration   4: 481.066 ns/op
Iteration   5: 333.367 ns/op
Iteration   6: 333.443 ns/op
Iteration   7: 333.604 ns/op
Iteration   8: 333.966 ns/op
Iteration   9: 334.214 ns/op
Iteration  10: 333.509 ns/op

# Run progress: 90.35% complete, ETA 00:03:42
# Fork: 2 of 2
# Warmup Iteration   1: 672.794 ns/op
# Warmup Iteration   2: 435.379 ns/op
# Warmup Iteration   3: 334.092 ns/op
Iteration   1: 334.729 ns/op
Iteration   2: 334.555 ns/op
Iteration   3: 337.590 ns/op
Iteration   4: 341.217 ns/op
Iteration   5: 334.470 ns/op
Iteration   6: 334.572 ns/op
Iteration   7: 333.886 ns/op
Iteration   8: 331.733 ns/op
Iteration   9: 334.492 ns/op
Iteration  10: 334.066 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  341.962 ±(99.9%) 28.488 ns/op [Average]
  (min, avg, max) = (331.733, 341.962, 481.066), stdev = 32.807
  CI (99.9%): [313.474, 370.450] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 90.42% complete, ETA 00:03:40
# Fork: 1 of 2
# Warmup Iteration   1: 1700.385 ns/op
# Warmup Iteration   2: 502.026 ns/op
# Warmup Iteration   3: 386.416 ns/op
Iteration   1: 386.811 ns/op
Iteration   2: 386.865 ns/op
Iteration   3: 387.036 ns/op
Iteration   4: 386.572 ns/op
Iteration   5: 386.655 ns/op
Iteration   6: 386.082 ns/op
Iteration   7: 385.971 ns/op
Iteration   8: 386.359 ns/op
Iteration   9: 387.441 ns/op
Iteration  10: 386.681 ns/op

# Run progress: 90.49% complete, ETA 00:03:39
# Fork: 2 of 2
# Warmup Iteration   1: 3732.909 ns/op
# Warmup Iteration   2: 610.630 ns/op
# Warmup Iteration   3: 395.908 ns/op
Iteration   1: 395.967 ns/op
Iteration   2: 395.820 ns/op
Iteration   3: 396.595 ns/op
Iteration   4: 396.711 ns/op
Iteration   5: 395.823 ns/op
Iteration   6: 395.709 ns/op
Iteration   7: 396.368 ns/op
Iteration   8: 395.892 ns/op
Iteration   9: 396.423 ns/op
Iteration  10: 395.775 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  391.378 ±(99.9%) 4.229 ns/op [Average]
  (min, avg, max) = (385.971, 391.378, 396.711), stdev = 4.870
  CI (99.9%): [387.149, 395.606] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 90.56% complete, ETA 00:03:37
# Fork: 1 of 2
# Warmup Iteration   1: 423.413 ns/op
# Warmup Iteration   2: 331.271 ns/op
# Warmup Iteration   3: 255.851 ns/op
Iteration   1: 256.101 ns/op
Iteration   2: 255.808 ns/op
Iteration   3: 255.931 ns/op
Iteration   4: 256.663 ns/op
Iteration   5: 256.126 ns/op
Iteration   6: 255.862 ns/op
Iteration   7: 255.695 ns/op
Iteration   8: 255.845 ns/op
Iteration   9: 256.574 ns/op
Iteration  10: 255.622 ns/op

# Run progress: 90.63% complete, ETA 00:03:36
# Fork: 2 of 2
# Warmup Iteration   1: 416.924 ns/op
# Warmup Iteration   2: 333.612 ns/op
# Warmup Iteration   3: 255.816 ns/op
Iteration   1: 255.762 ns/op
Iteration   2: 255.734 ns/op
Iteration   3: 255.865 ns/op
Iteration   4: 256.624 ns/op
Iteration   5: 255.847 ns/op
Iteration   6: 256.178 ns/op
Iteration   7: 255.894 ns/op
Iteration   8: 255.991 ns/op
Iteration   9: 256.191 ns/op
Iteration  10: 256.089 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  256.020 ±(99.9%) 0.264 ns/op [Average]
  (min, avg, max) = (255.622, 256.020, 256.663), stdev = 0.304
  CI (99.9%): [255.756, 256.284] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 90.69% complete, ETA 00:03:34
# Fork: 1 of 2
# Warmup Iteration   1: 843.337 ns/op
# Warmup Iteration   2: 510.535 ns/op
# Warmup Iteration   3: 325.973 ns/op
Iteration   1: 325.853 ns/op
Iteration   2: 327.155 ns/op
Iteration   3: 340.779 ns/op
Iteration   4: 355.155 ns/op
Iteration   5: 326.029 ns/op
Iteration   6: 325.858 ns/op
Iteration   7: 325.723 ns/op
Iteration   8: 330.039 ns/op
Iteration   9: 335.301 ns/op
Iteration  10: 326.326 ns/op

# Run progress: 90.76% complete, ETA 00:03:32
# Fork: 2 of 2
# Warmup Iteration   1: 740.974 ns/op
# Warmup Iteration   2: 498.435 ns/op
# Warmup Iteration   3: 328.661 ns/op
Iteration   1: 328.783 ns/op
Iteration   2: 329.316 ns/op
Iteration   3: 329.081 ns/op
Iteration   4: 334.862 ns/op
Iteration   5: 328.455 ns/op
Iteration   6: 328.742 ns/op
Iteration   7: 328.648 ns/op
Iteration   8: 332.484 ns/op
Iteration   9: 335.332 ns/op
Iteration  10: 328.409 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  331.117 ±(99.9%) 6.015 ns/op [Average]
  (min, avg, max) = (325.723, 331.117, 355.155), stdev = 6.926
  CI (99.9%): [325.102, 337.131] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 90.83% complete, ETA 00:03:31
# Fork: 1 of 2
# Warmup Iteration   1: 22.101 ns/op
# Warmup Iteration   2: 25.449 ns/op
# Warmup Iteration   3: 15.767 ns/op
Iteration   1: 15.578 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 16.021 ns/op
Iteration   4: 15.961 ns/op
Iteration   5: 15.682 ns/op
Iteration   6: 15.596 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.103 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.584 ns/op

# Run progress: 90.90% complete, ETA 00:03:29
# Fork: 2 of 2
# Warmup Iteration   1: 23.234 ns/op
# Warmup Iteration   2: 25.519 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.584 ns/op
Iteration   3: 15.981 ns/op
Iteration   4: 15.938 ns/op
Iteration   5: 15.676 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.022 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.575, 16.022, 19.106), stdev = 1.066
  CI (99.9%): [15.096, 16.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 90.97% complete, ETA 00:03:28
# Fork: 1 of 2
# Warmup Iteration   1: 1263.949 ns/op
# Warmup Iteration   2: 457.286 ns/op
# Warmup Iteration   3: 295.599 ns/op
Iteration   1: 316.675 ns/op
Iteration   2: 27199.894 ns/op
Iteration   3: 332.093 ns/op
Iteration   4: 388.190 ns/op
Iteration   5: 327.808 ns/op
Iteration   6: 32685.974 ns/op
Iteration   7: 480.505 ns/op
Iteration   8: 383.741 ns/op
Iteration   9: 348.689 ns/op
Iteration  10: 311.478 ns/op

# Run progress: 91.04% complete, ETA 00:03:26
# Fork: 2 of 2
# Warmup Iteration   1: 1184.659 ns/op
# Warmup Iteration   2: 481.442 ns/op
# Warmup Iteration   3: 299.954 ns/op
Iteration   1: 320.922 ns/op
Iteration   2: 32501.170 ns/op
Iteration   3: 329.416 ns/op
Iteration   4: 393.112 ns/op
Iteration   5: 326.743 ns/op
Iteration   6: 36279.051 ns/op
Iteration   7: 495.372 ns/op
Iteration   8: 385.478 ns/op
Iteration   9: 340.738 ns/op
Iteration  10: 323.826 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  6723.544 ±(99.9%) 11407.071 ns/op [Average]
  (min, avg, max) = (311.478, 6723.544, 36279.051), stdev = 13136.400
  CI (99.9%): [≈ 0, 18130.615] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 91.11% complete, ETA 00:03:24
# Fork: 1 of 2
# Warmup Iteration   1: 2569.390 ns/op
# Warmup Iteration   2: 47585.839 ns/op
# Warmup Iteration   3: 835.671 ns/op
Iteration   1: 511.852 ns/op
Iteration   2: 607.228 ns/op
Iteration   3: 520.371 ns/op
Iteration   4: 569.480 ns/op
Iteration   5: 526.875 ns/op
Iteration   6: 63644.424 ns/op
Iteration   7: 766.727 ns/op
Iteration   8: 567.826 ns/op
Iteration   9: 538.157 ns/op
Iteration  10: 528.368 ns/op

# Run progress: 91.18% complete, ETA 00:03:23
# Fork: 2 of 2
# Warmup Iteration   1: 2659.216 ns/op
# Warmup Iteration   2: 52446.201 ns/op
# Warmup Iteration   3: 1433.260 ns/op
Iteration   1: 502.172 ns/op
Iteration   2: 593.403 ns/op
Iteration   3: 514.875 ns/op
Iteration   4: 560.086 ns/op
Iteration   5: 511.903 ns/op
Iteration   6: 72533.638 ns/op
Iteration   7: 1621.566 ns/op
Iteration   8: 544.709 ns/op
Iteration   9: 512.748 ns/op
Iteration  10: 495.780 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  7358.609 ±(99.9%) 18079.879 ns/op [Average]
  (min, avg, max) = (495.780, 7358.609, 72533.638), stdev = 20820.816
  CI (99.9%): [≈ 0, 25438.489] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 91.25% complete, ETA 00:03:21
# Fork: 1 of 2
# Warmup Iteration   1: 6660.304 ns/op
# Warmup Iteration   2: 63194.570 ns/op
# Warmup Iteration   3: 12853.289 ns/op
Iteration   1: 547.077 ns/op
Iteration   2: 644.662 ns/op
Iteration   3: 574.366 ns/op
Iteration   4: 610.370 ns/op
Iteration   5: 574.051 ns/op
Iteration   6: 17926.827 ns/op
Iteration   7: 1221.231 ns/op
Iteration   8: 598.486 ns/op
Iteration   9: 568.188 ns/op
Iteration  10: 523.271 ns/op

# Run progress: 91.32% complete, ETA 00:03:20
# Fork: 2 of 2
# Warmup Iteration   1: 4823.556 ns/op
# Warmup Iteration   2: 58156.465 ns/op
# Warmup Iteration   3: 1295.589 ns/op
Iteration   1: 545.708 ns/op
Iteration   2: 637.898 ns/op
Iteration   3: 569.755 ns/op
Iteration   4: 602.374 ns/op
Iteration   5: 573.106 ns/op
Iteration   6: 13808.669 ns/op
Iteration   7: 634.989 ns/op
Iteration   8: 594.246 ns/op
Iteration   9: 570.954 ns/op
Iteration  10: 522.101 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2142.416 ±(99.9%) 4119.071 ns/op [Average]
  (min, avg, max) = (522.101, 2142.416, 17926.827), stdev = 4743.528
  CI (99.9%): [≈ 0, 6261.488] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 91.39% complete, ETA 00:03:18
# Fork: 1 of 2
# Warmup Iteration   1: 730.374 ns/op
# Warmup Iteration   2: 1803.893 ns/op
# Warmup Iteration   3: 605.535 ns/op
Iteration   1: 488.251 ns/op
Iteration   2: 538.419 ns/op
Iteration   3: 516.162 ns/op
Iteration   4: 39006.743 ns/op
Iteration   5: 895.584 ns/op
Iteration   6: 576.810 ns/op
Iteration   7: 612.486 ns/op
Iteration   8: 511.386 ns/op
Iteration   9: 490.633 ns/op
Iteration  10: 449.511 ns/op

# Run progress: 91.46% complete, ETA 00:03:16
# Fork: 2 of 2
# Warmup Iteration   1: 938.580 ns/op
# Warmup Iteration   2: 1271.862 ns/op
# Warmup Iteration   3: 612.067 ns/op
Iteration   1: 476.673 ns/op
Iteration   2: 525.370 ns/op
Iteration   3: 499.308 ns/op
Iteration   4: 1612.789 ns/op
Iteration   5: 446.412 ns/op
Iteration   6: 577.641 ns/op
Iteration   7: 606.065 ns/op
Iteration   8: 511.587 ns/op
Iteration   9: 489.117 ns/op
Iteration  10: 450.137 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2514.054 ±(99.9%) 7462.128 ns/op [Average]
  (min, avg, max) = (446.412, 2514.054, 39006.743), stdev = 8593.397
  CI (99.9%): [≈ 0, 9976.182] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = REVERSE_BA, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 91.53% complete, ETA 00:03:15
# Fork: 1 of 2
# Warmup Iteration   1: 1795.670 ns/op
# Warmup Iteration   2: 1009.826 ns/op
# Warmup Iteration   3: 1165.275 ns/op
Iteration   1: 764.937 ns/op
Iteration   2: 32165.976 ns/op
Iteration   3: 676.167 ns/op
Iteration   4: 695.809 ns/op
Iteration   5: 643.720 ns/op
Iteration   6: 922.198 ns/op
Iteration   7: 881.126 ns/op
Iteration   8: 632.166 ns/op
Iteration   9: 643.524 ns/op
Iteration  10: 658.931 ns/op

# Run progress: 91.60% complete, ETA 00:03:13
# Fork: 2 of 2
# Warmup Iteration   1: 1457.655 ns/op
# Warmup Iteration   2: 1012.407 ns/op
# Warmup Iteration   3: 1337.573 ns/op
Iteration   1: 667.595 ns/op
Iteration   2: 37254.050 ns/op
Iteration   3: 676.114 ns/op
Iteration   4: 696.246 ns/op
Iteration   5: 644.173 ns/op
Iteration   6: 920.905 ns/op
Iteration   7: 881.354 ns/op
Iteration   8: 631.850 ns/op
Iteration   9: 642.611 ns/op
Iteration  10: 671.263 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  4118.536 ±(99.9%) 9113.434 ns/op [Average]
  (min, avg, max) = (631.850, 4118.536, 37254.050), stdev = 10495.045
  CI (99.9%): [≈ 0, 13231.970] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 91.67% complete, ETA 00:03:12
# Fork: 1 of 2
# Warmup Iteration   1: 22.322 ns/op
# Warmup Iteration   2: 30.919 ns/op
# Warmup Iteration   3: 18.765 ns/op
Iteration   1: 18.768 ns/op
Iteration   2: 18.778 ns/op
Iteration   3: 18.887 ns/op
Iteration   4: 19.179 ns/op
Iteration   5: 18.903 ns/op
Iteration   6: 18.954 ns/op
Iteration   7: 18.950 ns/op
Iteration   8: 19.086 ns/op
Iteration   9: 18.971 ns/op
Iteration  10: 18.950 ns/op

# Run progress: 91.74% complete, ETA 00:03:10
# Fork: 2 of 2
# Warmup Iteration   1: 22.403 ns/op
# Warmup Iteration   2: 30.799 ns/op
# Warmup Iteration   3: 18.780 ns/op
Iteration   1: 18.807 ns/op
Iteration   2: 18.770 ns/op
Iteration   3: 18.869 ns/op
Iteration   4: 19.177 ns/op
Iteration   5: 18.883 ns/op
Iteration   6: 18.967 ns/op
Iteration   7: 18.949 ns/op
Iteration   8: 19.089 ns/op
Iteration   9: 18.966 ns/op
Iteration  10: 18.953 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.943 ±(99.9%) 0.104 ns/op [Average]
  (min, avg, max) = (18.768, 18.943, 19.179), stdev = 0.120
  CI (99.9%): [18.838, 19.047] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 91.81% complete, ETA 00:03:08
# Fork: 1 of 2
# Warmup Iteration   1: 266.991 ns/op
# Warmup Iteration   2: 206.571 ns/op
# Warmup Iteration   3: 140.889 ns/op
Iteration   1: 140.744 ns/op
Iteration   2: 140.702 ns/op
Iteration   3: 140.708 ns/op
Iteration   4: 141.989 ns/op
Iteration   5: 141.094 ns/op
Iteration   6: 140.808 ns/op
Iteration   7: 140.922 ns/op
Iteration   8: 142.896 ns/op
Iteration   9: 141.122 ns/op
Iteration  10: 140.934 ns/op

# Run progress: 91.88% complete, ETA 00:03:07
# Fork: 2 of 2
# Warmup Iteration   1: 282.554 ns/op
# Warmup Iteration   2: 179.576 ns/op
# Warmup Iteration   3: 140.799 ns/op
Iteration   1: 141.587 ns/op
Iteration   2: 140.795 ns/op
Iteration   3: 141.065 ns/op
Iteration   4: 141.600 ns/op
Iteration   5: 141.388 ns/op
Iteration   6: 140.918 ns/op
Iteration   7: 140.739 ns/op
Iteration   8: 142.769 ns/op
Iteration   9: 140.987 ns/op
Iteration  10: 141.390 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  141.258 ±(99.9%) 0.557 ns/op [Average]
  (min, avg, max) = (140.702, 141.258, 142.896), stdev = 0.641
  CI (99.9%): [140.701, 141.815] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 91.94% complete, ETA 00:03:05
# Fork: 1 of 2
# Warmup Iteration   1: 418.642 ns/op
# Warmup Iteration   2: 220.591 ns/op
# Warmup Iteration   3: 161.638 ns/op
Iteration   1: 162.061 ns/op
Iteration   2: 162.033 ns/op
Iteration   3: 161.107 ns/op
Iteration   4: 161.548 ns/op
Iteration   5: 160.931 ns/op
Iteration   6: 162.008 ns/op
Iteration   7: 162.181 ns/op
Iteration   8: 163.319 ns/op
Iteration   9: 162.145 ns/op
Iteration  10: 161.866 ns/op

# Run progress: 92.01% complete, ETA 00:03:04
# Fork: 2 of 2
# Warmup Iteration   1: 421.296 ns/op
# Warmup Iteration   2: 215.531 ns/op
# Warmup Iteration   3: 160.183 ns/op
Iteration   1: 160.553 ns/op
Iteration   2: 160.465 ns/op
Iteration   3: 160.825 ns/op
Iteration   4: 160.742 ns/op
Iteration   5: 160.915 ns/op
Iteration   6: 160.543 ns/op
Iteration   7: 161.172 ns/op
Iteration   8: 162.680 ns/op
Iteration   9: 161.646 ns/op
Iteration  10: 160.554 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  161.465 ±(99.9%) 0.699 ns/op [Average]
  (min, avg, max) = (160.465, 161.465, 163.319), stdev = 0.805
  CI (99.9%): [160.766, 162.164] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 92.08% complete, ETA 00:03:02
# Fork: 1 of 2
# Warmup Iteration   1: 651.572 ns/op
# Warmup Iteration   2: 281.722 ns/op
# Warmup Iteration   3: 208.619 ns/op
Iteration   1: 208.648 ns/op
Iteration   2: 208.595 ns/op
Iteration   3: 212.203 ns/op
Iteration   4: 208.707 ns/op
Iteration   5: 208.863 ns/op
Iteration   6: 208.583 ns/op
Iteration   7: 208.789 ns/op
Iteration   8: 211.528 ns/op
Iteration   9: 209.159 ns/op
Iteration  10: 208.589 ns/op

# Run progress: 92.15% complete, ETA 00:03:00
# Fork: 2 of 2
# Warmup Iteration   1: 652.934 ns/op
# Warmup Iteration   2: 306.192 ns/op
# Warmup Iteration   3: 208.817 ns/op
Iteration   1: 208.728 ns/op
Iteration   2: 208.664 ns/op
Iteration   3: 212.502 ns/op
Iteration   4: 208.425 ns/op
Iteration   5: 208.930 ns/op
Iteration   6: 208.655 ns/op
Iteration   7: 208.516 ns/op
Iteration   8: 211.134 ns/op
Iteration   9: 209.080 ns/op
Iteration  10: 208.705 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  209.350 ±(99.9%) 1.141 ns/op [Average]
  (min, avg, max) = (208.425, 209.350, 212.502), stdev = 1.314
  CI (99.9%): [208.209, 210.491] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 92.22% complete, ETA 00:02:59
# Fork: 1 of 2
# Warmup Iteration   1: 113.650 ns/op
# Warmup Iteration   2: 100.365 ns/op
# Warmup Iteration   3: 70.679 ns/op
Iteration   1: 70.613 ns/op
Iteration   2: 70.649 ns/op
Iteration   3: 70.504 ns/op
Iteration   4: 70.666 ns/op
Iteration   5: 70.593 ns/op
Iteration   6: 70.549 ns/op
Iteration   7: 70.571 ns/op
Iteration   8: 73.180 ns/op
Iteration   9: 70.672 ns/op
Iteration  10: 70.945 ns/op

# Run progress: 92.29% complete, ETA 00:02:57
# Fork: 2 of 2
# Warmup Iteration   1: 112.150 ns/op
# Warmup Iteration   2: 104.752 ns/op
# Warmup Iteration   3: 70.679 ns/op
Iteration   1: 70.597 ns/op
Iteration   2: 70.671 ns/op
Iteration   3: 70.530 ns/op
Iteration   4: 70.697 ns/op
Iteration   5: 70.568 ns/op
Iteration   6: 70.564 ns/op
Iteration   7: 70.561 ns/op
Iteration   8: 73.339 ns/op
Iteration   9: 70.687 ns/op
Iteration  10: 70.925 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.904 ±(99.9%) 0.707 ns/op [Average]
  (min, avg, max) = (70.504, 70.904, 73.339), stdev = 0.814
  CI (99.9%): [70.197, 71.611] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 92.36% complete, ETA 00:02:56
# Fork: 1 of 2
# Warmup Iteration   1: 265.310 ns/op
# Warmup Iteration   2: 232.424 ns/op
# Warmup Iteration   3: 161.155 ns/op
Iteration   1: 161.198 ns/op
Iteration   2: 162.608 ns/op
Iteration   3: 161.172 ns/op
Iteration   4: 161.268 ns/op
Iteration   5: 162.436 ns/op
Iteration   6: 161.258 ns/op
Iteration   7: 161.169 ns/op
Iteration   8: 162.427 ns/op
Iteration   9: 171.493 ns/op
Iteration  10: 161.950 ns/op

# Run progress: 92.43% complete, ETA 00:02:54
# Fork: 2 of 2
# Warmup Iteration   1: 235.893 ns/op
# Warmup Iteration   2: 233.767 ns/op
# Warmup Iteration   3: 161.007 ns/op
Iteration   1: 161.113 ns/op
Iteration   2: 164.452 ns/op
Iteration   3: 161.010 ns/op
Iteration   4: 161.236 ns/op
Iteration   5: 162.354 ns/op
Iteration   6: 161.260 ns/op
Iteration   7: 161.223 ns/op
Iteration   8: 162.166 ns/op
Iteration   9: 171.538 ns/op
Iteration  10: 161.699 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  162.751 ±(99.9%) 2.698 ns/op [Average]
  (min, avg, max) = (161.010, 162.751, 171.538), stdev = 3.107
  CI (99.9%): [160.053, 165.449] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 92.50% complete, ETA 00:02:52
# Fork: 1 of 2
# Warmup Iteration   1: 22.039 ns/op
# Warmup Iteration   2: 30.712 ns/op
# Warmup Iteration   3: 18.767 ns/op
Iteration   1: 18.790 ns/op
Iteration   2: 18.793 ns/op
Iteration   3: 18.875 ns/op
Iteration   4: 19.178 ns/op
Iteration   5: 18.920 ns/op
Iteration   6: 18.960 ns/op
Iteration   7: 18.949 ns/op
Iteration   8: 19.072 ns/op
Iteration   9: 18.943 ns/op
Iteration  10: 18.941 ns/op

# Run progress: 92.57% complete, ETA 00:02:51
# Fork: 2 of 2
# Warmup Iteration   1: 22.539 ns/op
# Warmup Iteration   2: 30.728 ns/op
# Warmup Iteration   3: 18.765 ns/op
Iteration   1: 18.796 ns/op
Iteration   2: 18.776 ns/op
Iteration   3: 18.896 ns/op
Iteration   4: 19.178 ns/op
Iteration   5: 18.911 ns/op
Iteration   6: 18.958 ns/op
Iteration   7: 18.952 ns/op
Iteration   8: 19.093 ns/op
Iteration   9: 18.958 ns/op
Iteration  10: 18.950 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.944 ±(99.9%) 0.100 ns/op [Average]
  (min, avg, max) = (18.776, 18.944, 19.178), stdev = 0.116
  CI (99.9%): [18.844, 19.045] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 92.64% complete, ETA 00:02:49
# Fork: 1 of 2
# Warmup Iteration   1: 251.995 ns/op
# Warmup Iteration   2: 203.174 ns/op
# Warmup Iteration   3: 137.449 ns/op
Iteration   1: 137.449 ns/op
Iteration   2: 137.475 ns/op
Iteration   3: 137.480 ns/op
Iteration   4: 140.148 ns/op
Iteration   5: 137.580 ns/op
Iteration   6: 137.579 ns/op
Iteration   7: 137.490 ns/op
Iteration   8: 139.559 ns/op
Iteration   9: 138.169 ns/op
Iteration  10: 137.783 ns/op

# Run progress: 92.71% complete, ETA 00:02:48
# Fork: 2 of 2
# Warmup Iteration   1: 245.623 ns/op
# Warmup Iteration   2: 197.424 ns/op
# Warmup Iteration   3: 137.425 ns/op
Iteration   1: 137.938 ns/op
Iteration   2: 137.519 ns/op
Iteration   3: 137.466 ns/op
Iteration   4: 139.983 ns/op
Iteration   5: 137.595 ns/op
Iteration   6: 137.599 ns/op
Iteration   7: 137.518 ns/op
Iteration   8: 139.311 ns/op
Iteration   9: 138.188 ns/op
Iteration  10: 137.598 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  138.071 ±(99.9%) 0.782 ns/op [Average]
  (min, avg, max) = (137.449, 138.071, 140.148), stdev = 0.901
  CI (99.9%): [137.289, 138.853] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 92.78% complete, ETA 00:02:46
# Fork: 1 of 2
# Warmup Iteration   1: 397.825 ns/op
# Warmup Iteration   2: 210.208 ns/op
# Warmup Iteration   3: 156.971 ns/op
Iteration   1: 157.099 ns/op
Iteration   2: 157.032 ns/op
Iteration   3: 157.177 ns/op
Iteration   4: 158.339 ns/op
Iteration   5: 156.959 ns/op
Iteration   6: 157.007 ns/op
Iteration   7: 156.986 ns/op
Iteration   8: 160.135 ns/op
Iteration   9: 158.427 ns/op
Iteration  10: 156.932 ns/op

# Run progress: 92.85% complete, ETA 00:02:44
# Fork: 2 of 2
# Warmup Iteration   1: 425.926 ns/op
# Warmup Iteration   2: 217.201 ns/op
# Warmup Iteration   3: 159.364 ns/op
Iteration   1: 159.545 ns/op
Iteration   2: 159.640 ns/op
Iteration   3: 159.660 ns/op
Iteration   4: 160.002 ns/op
Iteration   5: 159.199 ns/op
Iteration   6: 159.512 ns/op
Iteration   7: 159.544 ns/op
Iteration   8: 162.029 ns/op
Iteration   9: 160.221 ns/op
Iteration  10: 159.416 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  158.743 ±(99.9%) 1.285 ns/op [Average]
  (min, avg, max) = (156.932, 158.743, 162.029), stdev = 1.480
  CI (99.9%): [157.458, 160.028] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 92.92% complete, ETA 00:02:43
# Fork: 1 of 2
# Warmup Iteration   1: 877.193 ns/op
# Warmup Iteration   2: 286.484 ns/op
# Warmup Iteration   3: 209.771 ns/op
Iteration   1: 209.790 ns/op
Iteration   2: 209.795 ns/op
Iteration   3: 213.601 ns/op
Iteration   4: 209.710 ns/op
Iteration   5: 209.822 ns/op
Iteration   6: 209.817 ns/op
Iteration   7: 209.940 ns/op
Iteration   8: 212.573 ns/op
Iteration   9: 210.097 ns/op
Iteration  10: 209.910 ns/op

# Run progress: 92.99% complete, ETA 00:02:41
# Fork: 2 of 2
# Warmup Iteration   1: 836.511 ns/op
# Warmup Iteration   2: 287.462 ns/op
# Warmup Iteration   3: 217.261 ns/op
Iteration   1: 217.367 ns/op
Iteration   2: 217.290 ns/op
Iteration   3: 220.704 ns/op
Iteration   4: 217.063 ns/op
Iteration   5: 217.335 ns/op
Iteration   6: 217.193 ns/op
Iteration   7: 217.130 ns/op
Iteration   8: 219.987 ns/op
Iteration   9: 218.111 ns/op
Iteration  10: 217.680 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  214.246 ±(99.9%) 3.519 ns/op [Average]
  (min, avg, max) = (209.710, 214.246, 220.704), stdev = 4.053
  CI (99.9%): [210.727, 217.765] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 93.06% complete, ETA 00:02:40
# Fork: 1 of 2
# Warmup Iteration   1: 109.536 ns/op
# Warmup Iteration   2: 100.403 ns/op
# Warmup Iteration   3: 70.662 ns/op
Iteration   1: 70.576 ns/op
Iteration   2: 70.675 ns/op
Iteration   3: 70.566 ns/op
Iteration   4: 70.699 ns/op
Iteration   5: 70.562 ns/op
Iteration   6: 70.569 ns/op
Iteration   7: 70.577 ns/op
Iteration   8: 73.198 ns/op
Iteration   9: 70.615 ns/op
Iteration  10: 70.937 ns/op

# Run progress: 93.13% complete, ETA 00:02:38
# Fork: 2 of 2
# Warmup Iteration   1: 110.549 ns/op
# Warmup Iteration   2: 104.465 ns/op
# Warmup Iteration   3: 70.686 ns/op
Iteration   1: 70.577 ns/op
Iteration   2: 70.621 ns/op
Iteration   3: 70.497 ns/op
Iteration   4: 70.712 ns/op
Iteration   5: 70.602 ns/op
Iteration   6: 70.589 ns/op
Iteration   7: 70.582 ns/op
Iteration   8: 73.259 ns/op
Iteration   9: 70.659 ns/op
Iteration  10: 70.943 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.901 ±(99.9%) 0.698 ns/op [Average]
  (min, avg, max) = (70.497, 70.901, 73.259), stdev = 0.804
  CI (99.9%): [70.202, 71.599] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 93.19% complete, ETA 00:02:36
# Fork: 1 of 2
# Warmup Iteration   1: 225.072 ns/op
# Warmup Iteration   2: 241.687 ns/op
# Warmup Iteration   3: 161.960 ns/op
Iteration   1: 162.096 ns/op
Iteration   2: 162.706 ns/op
Iteration   3: 162.092 ns/op
Iteration   4: 163.634 ns/op
Iteration   5: 162.855 ns/op
Iteration   6: 162.217 ns/op
Iteration   7: 162.106 ns/op
Iteration   8: 163.192 ns/op
Iteration   9: 173.025 ns/op
Iteration  10: 161.896 ns/op

# Run progress: 93.26% complete, ETA 00:02:35
# Fork: 2 of 2
# Warmup Iteration   1: 227.699 ns/op
# Warmup Iteration   2: 235.220 ns/op
# Warmup Iteration   3: 159.972 ns/op
Iteration   1: 160.005 ns/op
Iteration   2: 160.107 ns/op
Iteration   3: 160.069 ns/op
Iteration   4: 160.391 ns/op
Iteration   5: 160.431 ns/op
Iteration   6: 160.640 ns/op
Iteration   7: 160.525 ns/op
Iteration   8: 160.712 ns/op
Iteration   9: 170.843 ns/op
Iteration  10: 160.524 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  162.503 ±(99.9%) 2.984 ns/op [Average]
  (min, avg, max) = (160.005, 162.503, 173.025), stdev = 3.436
  CI (99.9%): [159.520, 165.487] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 93.33% complete, ETA 00:02:33
# Fork: 1 of 2
# Warmup Iteration   1: 22.180 ns/op
# Warmup Iteration   2: 28.178 ns/op
# Warmup Iteration   3: 18.762 ns/op
Iteration   1: 18.804 ns/op
Iteration   2: 18.769 ns/op
Iteration   3: 18.871 ns/op
Iteration   4: 19.176 ns/op
Iteration   5: 18.889 ns/op
Iteration   6: 18.947 ns/op
Iteration   7: 18.954 ns/op
Iteration   8: 19.081 ns/op
Iteration   9: 18.946 ns/op
Iteration  10: 18.953 ns/op

# Run progress: 93.40% complete, ETA 00:02:32
# Fork: 2 of 2
# Warmup Iteration   1: 22.357 ns/op
# Warmup Iteration   2: 30.720 ns/op
# Warmup Iteration   3: 18.767 ns/op
Iteration   1: 18.767 ns/op
Iteration   2: 18.768 ns/op
Iteration   3: 18.875 ns/op
Iteration   4: 19.186 ns/op
Iteration   5: 18.894 ns/op
Iteration   6: 18.949 ns/op
Iteration   7: 18.947 ns/op
Iteration   8: 19.081 ns/op
Iteration   9: 18.951 ns/op
Iteration  10: 18.939 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.937 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (18.767, 18.937, 19.186), stdev = 0.121
  CI (99.9%): [18.833, 19.042] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 93.47% complete, ETA 00:02:30
# Fork: 1 of 2
# Warmup Iteration   1: 254.359 ns/op
# Warmup Iteration   2: 592.730 ns/op
# Warmup Iteration   3: 140.941 ns/op
Iteration   1: 141.597 ns/op
Iteration   2: 138.996 ns/op
Iteration   3: 139.026 ns/op
Iteration   4: 140.436 ns/op
Iteration   5: 137.844 ns/op
Iteration   6: 137.811 ns/op
Iteration   7: 140.931 ns/op
Iteration   8: 141.563 ns/op
Iteration   9: 139.252 ns/op
Iteration  10: 141.255 ns/op

# Run progress: 93.54% complete, ETA 00:02:28
# Fork: 2 of 2
# Warmup Iteration   1: 262.282 ns/op
# Warmup Iteration   2: 4810.354 ns/op
# Warmup Iteration   3: 140.956 ns/op
Iteration   1: 141.523 ns/op
Iteration   2: 139.013 ns/op
Iteration   3: 139.090 ns/op
Iteration   4: 140.576 ns/op
Iteration   5: 137.842 ns/op
Iteration   6: 137.806 ns/op
Iteration   7: 140.906 ns/op
Iteration   8: 141.590 ns/op
Iteration   9: 139.198 ns/op
Iteration  10: 141.167 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  139.871 ±(99.9%) 1.237 ns/op [Average]
  (min, avg, max) = (137.806, 139.871, 141.597), stdev = 1.424
  CI (99.9%): [138.634, 141.108] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 93.61% complete, ETA 00:02:27
# Fork: 1 of 2
# Warmup Iteration   1: 381.919 ns/op
# Warmup Iteration   2: 11801.618 ns/op
# Warmup Iteration   3: 158.418 ns/op
Iteration   1: 11951.548 ns/op
Iteration   2: 160.307 ns/op
Iteration   3: 160.393 ns/op
Iteration   4: 163.254 ns/op
Iteration   5: 156.610 ns/op
Iteration   6: 156.734 ns/op
Iteration   7: 157.451 ns/op
Iteration   8: 159.296 ns/op
Iteration   9: 161.026 ns/op
Iteration  10: 157.070 ns/op

# Run progress: 93.68% complete, ETA 00:02:25
# Fork: 2 of 2
# Warmup Iteration   1: 408.590 ns/op
# Warmup Iteration   2: 12413.747 ns/op
# Warmup Iteration   3: 158.264 ns/op
Iteration   1: 9766.731 ns/op
Iteration   2: 160.402 ns/op
Iteration   3: 160.366 ns/op
Iteration   4: 163.621 ns/op
Iteration   5: 156.584 ns/op
Iteration   6: 156.691 ns/op
Iteration   7: 157.409 ns/op
Iteration   8: 159.359 ns/op
Iteration   9: 161.045 ns/op
Iteration  10: 157.073 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1229.148 ±(99.9%) 2876.346 ns/op [Average]
  (min, avg, max) = (156.584, 1229.148, 11951.548), stdev = 3312.404
  CI (99.9%): [≈ 0, 4105.494] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 93.75% complete, ETA 00:02:24
# Fork: 1 of 2
# Warmup Iteration   1: 580.191 ns/op
# Warmup Iteration   2: 17722.156 ns/op
# Warmup Iteration   3: 14488.519 ns/op
Iteration   1: 20707.333 ns/op
Iteration   2: 805.248 ns/op
Iteration   3: 215.207 ns/op
Iteration   4: 215.231 ns/op
Iteration   5: 211.797 ns/op
Iteration   6: 212.683 ns/op
Iteration   7: 213.297 ns/op
Iteration   8: 214.526 ns/op
Iteration   9: 212.510 ns/op
Iteration  10: 213.297 ns/op

# Run progress: 93.82% complete, ETA 00:02:22
# Fork: 2 of 2
# Warmup Iteration   1: 566.982 ns/op
# Warmup Iteration   2: 17073.230 ns/op
# Warmup Iteration   3: 389.035 ns/op
Iteration   1: 16151.792 ns/op
Iteration   2: 679.578 ns/op
Iteration   3: 425.720 ns/op
Iteration   4: 217.918 ns/op
Iteration   5: 213.787 ns/op
Iteration   6: 214.099 ns/op
Iteration   7: 213.799 ns/op
Iteration   8: 216.282 ns/op
Iteration   9: 215.091 ns/op
Iteration  10: 215.309 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  2099.225 ±(99.9%) 4894.031 ns/op [Average]
  (min, avg, max) = (211.797, 2099.225, 20707.333), stdev = 5635.973
  CI (99.9%): [≈ 0, 6993.256] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 93.89% complete, ETA 00:02:20
# Fork: 1 of 2
# Warmup Iteration   1: 115.975 ns/op
# Warmup Iteration   2: 130.522 ns/op
# Warmup Iteration   3: 70.732 ns/op
Iteration   1: 70.569 ns/op
Iteration   2: 70.662 ns/op
Iteration   3: 70.530 ns/op
Iteration   4: 70.767 ns/op
Iteration   5: 70.625 ns/op
Iteration   6: 70.587 ns/op
Iteration   7: 70.553 ns/op
Iteration   8: 73.206 ns/op
Iteration   9: 70.672 ns/op
Iteration  10: 70.932 ns/op

# Run progress: 93.96% complete, ETA 00:02:19
# Fork: 2 of 2
# Warmup Iteration   1: 109.833 ns/op
# Warmup Iteration   2: 106.472 ns/op
# Warmup Iteration   3: 70.666 ns/op
Iteration   1: 70.593 ns/op
Iteration   2: 70.689 ns/op
Iteration   3: 70.464 ns/op
Iteration   4: 70.712 ns/op
Iteration   5: 70.596 ns/op
Iteration   6: 70.561 ns/op
Iteration   7: 70.552 ns/op
Iteration   8: 73.397 ns/op
Iteration   9: 70.686 ns/op
Iteration  10: 70.940 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.915 ±(99.9%) 0.717 ns/op [Average]
  (min, avg, max) = (70.464, 70.915, 73.397), stdev = 0.826
  CI (99.9%): [70.197, 71.632] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 94.03% complete, ETA 00:02:17
# Fork: 1 of 2
# Warmup Iteration   1: 273.046 ns/op
# Warmup Iteration   2: 233.876 ns/op
# Warmup Iteration   3: 161.530 ns/op
Iteration   1: 161.557 ns/op
Iteration   2: 167.299 ns/op
Iteration   3: 160.632 ns/op
Iteration   4: 162.989 ns/op
Iteration   5: 161.324 ns/op
Iteration   6: 164.673 ns/op
Iteration   7: 167.040 ns/op
Iteration   8: 162.335 ns/op
Iteration   9: 172.107 ns/op
Iteration  10: 161.190 ns/op

# Run progress: 94.10% complete, ETA 00:02:16
# Fork: 2 of 2
# Warmup Iteration   1: 232.374 ns/op
# Warmup Iteration   2: 231.753 ns/op
# Warmup Iteration   3: 161.572 ns/op
Iteration   1: 161.579 ns/op
Iteration   2: 167.501 ns/op
Iteration   3: 160.570 ns/op
Iteration   4: 163.078 ns/op
Iteration   5: 161.173 ns/op
Iteration   6: 164.884 ns/op
Iteration   7: 167.052 ns/op
Iteration   8: 162.387 ns/op
Iteration   9: 172.389 ns/op
Iteration  10: 161.177 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  164.147 ±(99.9%) 3.161 ns/op [Average]
  (min, avg, max) = (160.570, 164.147, 172.389), stdev = 3.640
  CI (99.9%): [160.986, 167.308] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 94.17% complete, ETA 00:02:14
# Fork: 1 of 2
# Warmup Iteration   1: 22.643 ns/op
# Warmup Iteration   2: 30.887 ns/op
# Warmup Iteration   3: 18.770 ns/op
Iteration   1: 18.787 ns/op
Iteration   2: 18.798 ns/op
Iteration   3: 18.881 ns/op
Iteration   4: 19.177 ns/op
Iteration   5: 18.890 ns/op
Iteration   6: 18.941 ns/op
Iteration   7: 18.953 ns/op
Iteration   8: 19.076 ns/op
Iteration   9: 18.945 ns/op
Iteration  10: 18.951 ns/op

# Run progress: 94.24% complete, ETA 00:02:12
# Fork: 2 of 2
# Warmup Iteration   1: 22.402 ns/op
# Warmup Iteration   2: 30.969 ns/op
# Warmup Iteration   3: 18.775 ns/op
Iteration   1: 18.782 ns/op
Iteration   2: 18.775 ns/op
Iteration   3: 18.882 ns/op
Iteration   4: 19.174 ns/op
Iteration   5: 18.915 ns/op
Iteration   6: 18.951 ns/op
Iteration   7: 18.952 ns/op
Iteration   8: 19.081 ns/op
Iteration   9: 18.947 ns/op
Iteration  10: 18.946 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.940 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (18.775, 18.940, 19.177), stdev = 0.116
  CI (99.9%): [18.840, 19.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 94.31% complete, ETA 00:02:11
# Fork: 1 of 2
# Warmup Iteration   1: 233.000 ns/op
# Warmup Iteration   2: 203.845 ns/op
# Warmup Iteration   3: 136.479 ns/op
Iteration   1: 136.432 ns/op
Iteration   2: 136.306 ns/op
Iteration   3: 136.282 ns/op
Iteration   4: 137.118 ns/op
Iteration   5: 136.122 ns/op
Iteration   6: 136.510 ns/op
Iteration   7: 136.014 ns/op
Iteration   8: 137.320 ns/op
Iteration   9: 136.377 ns/op
Iteration  10: 136.199 ns/op

# Run progress: 94.38% complete, ETA 00:02:09
# Fork: 2 of 2
# Warmup Iteration   1: 234.205 ns/op
# Warmup Iteration   2: 187.276 ns/op
# Warmup Iteration   3: 136.124 ns/op
Iteration   1: 136.175 ns/op
Iteration   2: 136.211 ns/op
Iteration   3: 136.216 ns/op
Iteration   4: 137.117 ns/op
Iteration   5: 135.973 ns/op
Iteration   6: 136.171 ns/op
Iteration   7: 136.031 ns/op
Iteration   8: 137.022 ns/op
Iteration   9: 136.348 ns/op
Iteration  10: 136.095 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  136.402 ±(99.9%) 0.354 ns/op [Average]
  (min, avg, max) = (135.973, 136.402, 137.320), stdev = 0.407
  CI (99.9%): [136.048, 136.756] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 94.44% complete, ETA 00:02:08
# Fork: 1 of 2
# Warmup Iteration   1: 406.430 ns/op
# Warmup Iteration   2: 213.731 ns/op
# Warmup Iteration   3: 156.877 ns/op
Iteration   1: 156.768 ns/op
Iteration   2: 156.756 ns/op
Iteration   3: 156.417 ns/op
Iteration   4: 156.650 ns/op
Iteration   5: 156.411 ns/op
Iteration   6: 156.829 ns/op
Iteration   7: 156.782 ns/op
Iteration   8: 158.665 ns/op
Iteration   9: 156.918 ns/op
Iteration  10: 156.971 ns/op

# Run progress: 94.51% complete, ETA 00:02:06
# Fork: 2 of 2
# Warmup Iteration   1: 413.109 ns/op
# Warmup Iteration   2: 210.345 ns/op
# Warmup Iteration   3: 152.370 ns/op
Iteration   1: 151.763 ns/op
Iteration   2: 151.769 ns/op
Iteration   3: 151.892 ns/op
Iteration   4: 152.190 ns/op
Iteration   5: 151.914 ns/op
Iteration   6: 151.763 ns/op
Iteration   7: 151.990 ns/op
Iteration   8: 154.861 ns/op
Iteration   9: 152.566 ns/op
Iteration  10: 152.038 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.596 ±(99.9%) 2.177 ns/op [Average]
  (min, avg, max) = (151.763, 154.596, 158.665), stdev = 2.507
  CI (99.9%): [152.419, 156.773] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 94.58% complete, ETA 00:02:04
# Fork: 1 of 2
# Warmup Iteration   1: 455.676 ns/op
# Warmup Iteration   2: 282.245 ns/op
# Warmup Iteration   3: 200.006 ns/op
Iteration   1: 200.283 ns/op
Iteration   2: 200.030 ns/op
Iteration   3: 203.630 ns/op
Iteration   4: 200.155 ns/op
Iteration   5: 200.103 ns/op
Iteration   6: 200.068 ns/op
Iteration   7: 200.199 ns/op
Iteration   8: 202.872 ns/op
Iteration   9: 202.008 ns/op
Iteration  10: 200.189 ns/op

# Run progress: 94.65% complete, ETA 00:02:03
# Fork: 2 of 2
# Warmup Iteration   1: 461.862 ns/op
# Warmup Iteration   2: 319.591 ns/op
# Warmup Iteration   3: 204.767 ns/op
Iteration   1: 204.744 ns/op
Iteration   2: 204.799 ns/op
Iteration   3: 208.527 ns/op
Iteration   4: 204.809 ns/op
Iteration   5: 204.703 ns/op
Iteration   6: 204.752 ns/op
Iteration   7: 204.762 ns/op
Iteration   8: 207.613 ns/op
Iteration   9: 206.830 ns/op
Iteration  10: 204.922 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  203.300 ±(99.9%) 2.403 ns/op [Average]
  (min, avg, max) = (200.030, 203.300, 208.527), stdev = 2.767
  CI (99.9%): [200.897, 205.703] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 94.72% complete, ETA 00:02:01
# Fork: 1 of 2
# Warmup Iteration   1: 112.940 ns/op
# Warmup Iteration   2: 103.771 ns/op
# Warmup Iteration   3: 70.676 ns/op
Iteration   1: 70.562 ns/op
Iteration   2: 70.657 ns/op
Iteration   3: 70.597 ns/op
Iteration   4: 70.715 ns/op
Iteration   5: 70.586 ns/op
Iteration   6: 70.583 ns/op
Iteration   7: 70.550 ns/op
Iteration   8: 73.398 ns/op
Iteration   9: 70.704 ns/op
Iteration  10: 70.932 ns/op

# Run progress: 94.79% complete, ETA 00:02:00
# Fork: 2 of 2
# Warmup Iteration   1: 110.246 ns/op
# Warmup Iteration   2: 107.398 ns/op
# Warmup Iteration   3: 70.660 ns/op
Iteration   1: 70.577 ns/op
Iteration   2: 70.686 ns/op
Iteration   3: 70.517 ns/op
Iteration   4: 70.715 ns/op
Iteration   5: 70.593 ns/op
Iteration   6: 70.568 ns/op
Iteration   7: 70.577 ns/op
Iteration   8: 73.391 ns/op
Iteration   9: 70.655 ns/op
Iteration  10: 70.959 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.926 ±(99.9%) 0.740 ns/op [Average]
  (min, avg, max) = (70.517, 70.926, 73.398), stdev = 0.852
  CI (99.9%): [70.186, 71.666] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 94.86% complete, ETA 00:01:58
# Fork: 1 of 2
# Warmup Iteration   1: 227.528 ns/op
# Warmup Iteration   2: 226.351 ns/op
# Warmup Iteration   3: 152.651 ns/op
Iteration   1: 152.682 ns/op
Iteration   2: 154.378 ns/op
Iteration   3: 152.648 ns/op
Iteration   4: 152.998 ns/op
Iteration   5: 153.588 ns/op
Iteration   6: 153.262 ns/op
Iteration   7: 153.262 ns/op
Iteration   8: 153.742 ns/op
Iteration   9: 164.772 ns/op
Iteration  10: 153.390 ns/op

# Run progress: 94.93% complete, ETA 00:01:56
# Fork: 2 of 2
# Warmup Iteration   1: 210.522 ns/op
# Warmup Iteration   2: 225.166 ns/op
# Warmup Iteration   3: 152.755 ns/op
Iteration   1: 152.886 ns/op
Iteration   2: 154.309 ns/op
Iteration   3: 152.858 ns/op
Iteration   4: 153.362 ns/op
Iteration   5: 153.615 ns/op
Iteration   6: 153.341 ns/op
Iteration   7: 153.236 ns/op
Iteration   8: 153.854 ns/op
Iteration   9: 164.960 ns/op
Iteration  10: 153.599 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.537 ±(99.9%) 3.094 ns/op [Average]
  (min, avg, max) = (152.648, 154.537, 164.960), stdev = 3.563
  CI (99.9%): [151.443, 157.631] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 95.00% complete, ETA 00:01:55
# Fork: 1 of 2
# Warmup Iteration   1: 22.000 ns/op
# Warmup Iteration   2: 28.171 ns/op
# Warmup Iteration   3: 18.767 ns/op
Iteration   1: 18.787 ns/op
Iteration   2: 18.774 ns/op
Iteration   3: 18.876 ns/op
Iteration   4: 19.169 ns/op
Iteration   5: 18.902 ns/op
Iteration   6: 18.949 ns/op
Iteration   7: 18.952 ns/op
Iteration   8: 19.084 ns/op
Iteration   9: 18.961 ns/op
Iteration  10: 18.949 ns/op

# Run progress: 95.07% complete, ETA 00:01:53
# Fork: 2 of 2
# Warmup Iteration   1: 22.042 ns/op
# Warmup Iteration   2: 29.412 ns/op
# Warmup Iteration   3: 18.771 ns/op
Iteration   1: 18.766 ns/op
Iteration   2: 18.777 ns/op
Iteration   3: 18.876 ns/op
Iteration   4: 19.172 ns/op
Iteration   5: 18.896 ns/op
Iteration   6: 18.950 ns/op
Iteration   7: 18.949 ns/op
Iteration   8: 19.075 ns/op
Iteration   9: 18.949 ns/op
Iteration  10: 18.946 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  18.938 ±(99.9%) 0.103 ns/op [Average]
  (min, avg, max) = (18.766, 18.938, 19.172), stdev = 0.118
  CI (99.9%): [18.835, 19.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 95.14% complete, ETA 00:01:52
# Fork: 1 of 2
# Warmup Iteration   1: 248.289 ns/op
# Warmup Iteration   2: 192.226 ns/op
# Warmup Iteration   3: 136.124 ns/op
Iteration   1: 136.182 ns/op
Iteration   2: 136.151 ns/op
Iteration   3: 136.160 ns/op
Iteration   4: 137.146 ns/op
Iteration   5: 135.969 ns/op
Iteration   6: 136.195 ns/op
Iteration   7: 136.026 ns/op
Iteration   8: 137.082 ns/op
Iteration   9: 136.381 ns/op
Iteration  10: 136.059 ns/op

# Run progress: 95.21% complete, ETA 00:01:50
# Fork: 2 of 2
# Warmup Iteration   1: 248.982 ns/op
# Warmup Iteration   2: 191.267 ns/op
# Warmup Iteration   3: 136.222 ns/op
Iteration   1: 136.267 ns/op
Iteration   2: 136.133 ns/op
Iteration   3: 136.165 ns/op
Iteration   4: 137.080 ns/op
Iteration   5: 135.969 ns/op
Iteration   6: 136.493 ns/op
Iteration   7: 136.010 ns/op
Iteration   8: 137.016 ns/op
Iteration   9: 136.277 ns/op
Iteration  10: 136.173 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  136.347 ±(99.9%) 0.346 ns/op [Average]
  (min, avg, max) = (135.969, 136.347, 137.146), stdev = 0.398
  CI (99.9%): [136.001, 136.693] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 95.28% complete, ETA 00:01:48
# Fork: 1 of 2
# Warmup Iteration   1: 393.379 ns/op
# Warmup Iteration   2: 211.336 ns/op
# Warmup Iteration   3: 156.870 ns/op
Iteration   1: 156.834 ns/op
Iteration   2: 156.818 ns/op
Iteration   3: 156.614 ns/op
Iteration   4: 156.699 ns/op
Iteration   5: 156.581 ns/op
Iteration   6: 156.966 ns/op
Iteration   7: 156.869 ns/op
Iteration   8: 158.695 ns/op
Iteration   9: 156.855 ns/op
Iteration  10: 157.056 ns/op

# Run progress: 95.35% complete, ETA 00:01:47
# Fork: 2 of 2
# Warmup Iteration   1: 388.124 ns/op
# Warmup Iteration   2: 207.240 ns/op
# Warmup Iteration   3: 153.672 ns/op
Iteration   1: 153.707 ns/op
Iteration   2: 153.692 ns/op
Iteration   3: 153.779 ns/op
Iteration   4: 153.593 ns/op
Iteration   5: 153.668 ns/op
Iteration   6: 153.740 ns/op
Iteration   7: 153.815 ns/op
Iteration   8: 156.716 ns/op
Iteration   9: 153.923 ns/op
Iteration  10: 154.019 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  155.532 ±(99.9%) 1.469 ns/op [Average]
  (min, avg, max) = (153.593, 155.532, 158.695), stdev = 1.692
  CI (99.9%): [154.063, 157.001] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 95.42% complete, ETA 00:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 544.810 ns/op
# Warmup Iteration   2: 278.406 ns/op
# Warmup Iteration   3: 204.766 ns/op
Iteration   1: 204.833 ns/op
Iteration   2: 204.893 ns/op
Iteration   3: 208.484 ns/op
Iteration   4: 204.762 ns/op
Iteration   5: 204.820 ns/op
Iteration   6: 204.860 ns/op
Iteration   7: 204.736 ns/op
Iteration   8: 207.511 ns/op
Iteration   9: 206.420 ns/op
Iteration  10: 204.993 ns/op

# Run progress: 95.49% complete, ETA 00:01:44
# Fork: 2 of 2
# Warmup Iteration   1: 432.765 ns/op
# Warmup Iteration   2: 272.937 ns/op
# Warmup Iteration   3: 204.741 ns/op
Iteration   1: 204.796 ns/op
Iteration   2: 204.753 ns/op
Iteration   3: 208.483 ns/op
Iteration   4: 204.818 ns/op
Iteration   5: 204.671 ns/op
Iteration   6: 204.635 ns/op
Iteration   7: 204.754 ns/op
Iteration   8: 207.469 ns/op
Iteration   9: 206.428 ns/op
Iteration  10: 204.927 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  205.602 ±(99.9%) 1.164 ns/op [Average]
  (min, avg, max) = (204.635, 205.602, 208.484), stdev = 1.340
  CI (99.9%): [204.438, 206.766] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 95.56% complete, ETA 00:01:42
# Fork: 1 of 2
# Warmup Iteration   1: 118.218 ns/op
# Warmup Iteration   2: 104.630 ns/op
# Warmup Iteration   3: 70.667 ns/op
Iteration   1: 70.572 ns/op
Iteration   2: 70.671 ns/op
Iteration   3: 70.454 ns/op
Iteration   4: 70.680 ns/op
Iteration   5: 70.612 ns/op
Iteration   6: 70.585 ns/op
Iteration   7: 70.572 ns/op
Iteration   8: 73.275 ns/op
Iteration   9: 70.706 ns/op
Iteration  10: 70.944 ns/op

# Run progress: 95.63% complete, ETA 00:01:40
# Fork: 2 of 2
# Warmup Iteration   1: 117.733 ns/op
# Warmup Iteration   2: 104.154 ns/op
# Warmup Iteration   3: 70.710 ns/op
Iteration   1: 70.594 ns/op
Iteration   2: 70.642 ns/op
Iteration   3: 70.554 ns/op
Iteration   4: 70.716 ns/op
Iteration   5: 70.621 ns/op
Iteration   6: 70.602 ns/op
Iteration   7: 70.571 ns/op
Iteration   8: 73.361 ns/op
Iteration   9: 70.714 ns/op
Iteration  10: 70.923 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  70.918 ±(99.9%) 0.720 ns/op [Average]
  (min, avg, max) = (70.454, 70.918, 73.361), stdev = 0.829
  CI (99.9%): [70.199, 71.638] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = SORT______, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 95.69% complete, ETA 00:01:39
# Fork: 1 of 2
# Warmup Iteration   1: 234.817 ns/op
# Warmup Iteration   2: 224.137 ns/op
# Warmup Iteration   3: 153.735 ns/op
Iteration   1: 153.812 ns/op
Iteration   2: 154.528 ns/op
Iteration   3: 153.737 ns/op
Iteration   4: 153.230 ns/op
Iteration   5: 153.304 ns/op
Iteration   6: 153.115 ns/op
Iteration   7: 153.167 ns/op
Iteration   8: 153.371 ns/op
Iteration   9: 164.397 ns/op
Iteration  10: 153.446 ns/op

# Run progress: 95.76% complete, ETA 00:01:37
# Fork: 2 of 2
# Warmup Iteration   1: 220.818 ns/op
# Warmup Iteration   2: 223.059 ns/op
# Warmup Iteration   3: 153.731 ns/op
Iteration   1: 153.764 ns/op
Iteration   2: 154.668 ns/op
Iteration   3: 153.823 ns/op
Iteration   4: 153.234 ns/op
Iteration   5: 153.329 ns/op
Iteration   6: 153.161 ns/op
Iteration   7: 153.173 ns/op
Iteration   8: 153.358 ns/op
Iteration   9: 164.283 ns/op
Iteration  10: 153.380 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  154.614 ±(99.9%) 2.912 ns/op [Average]
  (min, avg, max) = (153.115, 154.614, 164.397), stdev = 3.354
  CI (99.9%): [151.702, 157.526] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = BASELINE)

# Run progress: 95.83% complete, ETA 00:01:36
# Fork: 1 of 2
# Warmup Iteration   1: 22.147 ns/op
# Warmup Iteration   2: 23.588 ns/op
# Warmup Iteration   3: 15.776 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.591 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.942 ns/op
Iteration   5: 15.680 ns/op
Iteration   6: 15.581 ns/op
Iteration   7: 15.582 ns/op
Iteration   8: 19.106 ns/op
Iteration   9: 15.577 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 95.90% complete, ETA 00:01:34
# Fork: 2 of 2
# Warmup Iteration   1: 22.583 ns/op
# Warmup Iteration   2: 26.093 ns/op
# Warmup Iteration   3: 15.771 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.580 ns/op
Iteration   3: 15.984 ns/op
Iteration   4: 15.933 ns/op
Iteration   5: 15.688 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.578 ns/op
Iteration   8: 19.146 ns/op
Iteration   9: 15.574 ns/op
Iteration  10: 15.568 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.932 ns/op [Average]
  (min, avg, max) = (15.568, 16.020, 19.146), stdev = 1.073
  CI (99.9%): [15.089, 16.952] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_11)

# Run progress: 95.97% complete, ETA 00:01:32
# Fork: 1 of 2
# Warmup Iteration   1: 3805.141 ns/op
# Warmup Iteration   2: 1335.119 ns/op
# Warmup Iteration   3: 948.578 ns/op
Iteration   1: 948.292 ns/op
Iteration   2: 947.878 ns/op
Iteration   3: 948.329 ns/op
Iteration   4: 952.801 ns/op
Iteration   5: 948.266 ns/op
Iteration   6: 948.392 ns/op
Iteration   7: 948.719 ns/op
Iteration   8: 951.379 ns/op
Iteration   9: 947.803 ns/op
Iteration  10: 948.316 ns/op

# Run progress: 96.04% complete, ETA 00:01:31
# Fork: 2 of 2
# Warmup Iteration   1: 3654.493 ns/op
# Warmup Iteration   2: 1333.629 ns/op
# Warmup Iteration   3: 974.343 ns/op
Iteration   1: 984.095 ns/op
Iteration   2: 983.780 ns/op
Iteration   3: 981.536 ns/op
Iteration   4: 988.410 ns/op
Iteration   5: 984.508 ns/op
Iteration   6: 983.104 ns/op
Iteration   7: 972.763 ns/op
Iteration   8: 986.089 ns/op
Iteration   9: 984.103 ns/op
Iteration  10: 986.438 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  966.250 ±(99.9%) 15.591 ns/op [Average]
  (min, avg, max) = (947.803, 966.250, 988.410), stdev = 17.955
  CI (99.9%): [950.659, 981.841] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11_21)

# Run progress: 96.11% complete, ETA 00:01:29
# Fork: 1 of 2
# Warmup Iteration   1: 13590.991 ns/op
# Warmup Iteration   2: 1622.426 ns/op
# Warmup Iteration   3: 1195.631 ns/op
Iteration   1: 1082.978 ns/op
Iteration   2: 1082.490 ns/op
Iteration   3: 1082.978 ns/op
Iteration   4: 1082.644 ns/op
Iteration   5: 1082.394 ns/op
Iteration   6: 1082.712 ns/op
Iteration   7: 1081.821 ns/op
Iteration   8: 1083.471 ns/op
Iteration   9: 1081.344 ns/op
Iteration  10: 1081.640 ns/op

# Run progress: 96.18% complete, ETA 00:01:28
# Fork: 2 of 2
# Warmup Iteration   1: 18964.932 ns/op
# Warmup Iteration   2: 1604.865 ns/op
# Warmup Iteration   3: 1198.692 ns/op
Iteration   1: 1099.834 ns/op
Iteration   2: 1101.336 ns/op
Iteration   3: 1100.024 ns/op
Iteration   4: 1102.279 ns/op
Iteration   5: 1109.633 ns/op
Iteration   6: 1099.892 ns/op
Iteration   7: 1093.102 ns/op
Iteration   8: 1098.304 ns/op
Iteration   9: 1105.815 ns/op
Iteration  10: 1093.359 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1091.403 ±(99.9%) 8.533 ns/op [Average]
  (min, avg, max) = (1081.344, 1091.403, 1109.633), stdev = 9.827
  CI (99.9%): [1082.869, 1099.936] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11I)

# Run progress: 96.25% complete, ETA 00:01:26
# Fork: 1 of 2
# Warmup Iteration   1: 8713.577 ns/op
# Warmup Iteration   2: 1405.091 ns/op
# Warmup Iteration   3: 1102.172 ns/op
Iteration   1: 1103.395 ns/op
Iteration   2: 1102.429 ns/op
Iteration   3: 1102.005 ns/op
Iteration   4: 1102.142 ns/op
Iteration   5: 1118.777 ns/op
Iteration   6: 1103.196 ns/op
Iteration   7: 1102.147 ns/op
Iteration   8: 1104.497 ns/op
Iteration   9: 1103.796 ns/op
Iteration  10: 1102.748 ns/op

# Run progress: 96.32% complete, ETA 00:01:24
# Fork: 2 of 2
# Warmup Iteration   1: 10930.275 ns/op
# Warmup Iteration   2: 1568.327 ns/op
# Warmup Iteration   3: 1078.228 ns/op
Iteration   1: 1078.212 ns/op
Iteration   2: 1078.489 ns/op
Iteration   3: 1077.524 ns/op
Iteration   4: 1079.142 ns/op
Iteration   5: 1078.365 ns/op
Iteration   6: 1077.765 ns/op
Iteration   7: 1077.682 ns/op
Iteration   8: 1078.532 ns/op
Iteration   9: 1077.901 ns/op
Iteration  10: 1077.527 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1091.314 ±(99.9%) 12.149 ns/op [Average]
  (min, avg, max) = (1077.524, 1091.314, 1118.777), stdev = 13.991
  CI (99.9%): [1079.165, 1103.462] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = DPQ_18_11P)

# Run progress: 96.39% complete, ETA 00:01:23
# Fork: 1 of 2
# Warmup Iteration   1: 2393.592 ns/op
# Warmup Iteration   2: 1379.867 ns/op
# Warmup Iteration   3: 1016.897 ns/op
Iteration   1: 1017.180 ns/op
Iteration   2: 1016.553 ns/op
Iteration   3: 1039.788 ns/op
Iteration   4: 1021.009 ns/op
Iteration   5: 1016.069 ns/op
Iteration   6: 1032.649 ns/op
Iteration   7: 1015.356 ns/op
Iteration   8: 1016.739 ns/op
Iteration   9: 1016.652 ns/op
Iteration  10: 1016.299 ns/op

# Run progress: 96.46% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: 1601.897 ns/op
# Warmup Iteration   2: 1307.274 ns/op
# Warmup Iteration   3: 1013.532 ns/op
Iteration   1: 1014.619 ns/op
Iteration   2: 1014.244 ns/op
Iteration   3: 1020.044 ns/op
Iteration   4: 1016.360 ns/op
Iteration   5: 1016.191 ns/op
Iteration   6: 1014.300 ns/op
Iteration   7: 1014.037 ns/op
Iteration   8: 1014.991 ns/op
Iteration   9: 1014.692 ns/op
Iteration  10: 1014.198 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1018.098 ±(99.9%) 5.696 ns/op [Average]
  (min, avg, max) = (1014.037, 1018.098, 1039.788), stdev = 6.559
  CI (99.9%): [1012.403, 1023.794] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = STAGGER, tSorter = RADIX)

# Run progress: 96.53% complete, ETA 00:01:20
# Fork: 1 of 2
# Warmup Iteration   1: 15738.822 ns/op
# Warmup Iteration   2: 5062.235 ns/op
# Warmup Iteration   3: 4154.968 ns/op
Iteration   1: 3807.415 ns/op
Iteration   2: 3804.827 ns/op
Iteration   3: 3818.102 ns/op
Iteration   4: 3786.888 ns/op
Iteration   5: 3795.713 ns/op
Iteration   6: 3795.046 ns/op
Iteration   7: 3788.036 ns/op
Iteration   8: 3785.543 ns/op
Iteration   9: 3787.045 ns/op
Iteration  10: 3798.605 ns/op

# Run progress: 96.60% complete, ETA 00:01:18
# Fork: 2 of 2
# Warmup Iteration   1: 10888.346 ns/op
# Warmup Iteration   2: 5113.197 ns/op
# Warmup Iteration   3: 3591.634 ns/op
Iteration   1: 3598.945 ns/op
Iteration   2: 3598.599 ns/op
Iteration   3: 3607.974 ns/op
Iteration   4: 3587.480 ns/op
Iteration   5: 3589.554 ns/op
Iteration   6: 3591.767 ns/op
Iteration   7: 3580.349 ns/op
Iteration   8: 3587.440 ns/op
Iteration   9: 3585.710 ns/op
Iteration  10: 3591.445 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3694.324 ±(99.9%) 91.576 ns/op [Average]
  (min, avg, max) = (3580.349, 3694.324, 3818.102), stdev = 105.459
  CI (99.9%): [3602.748, 3785.900] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = BASELINE)

# Run progress: 96.67% complete, ETA 00:01:16
# Fork: 1 of 2
# Warmup Iteration   1: 22.583 ns/op
# Warmup Iteration   2: 24.765 ns/op
# Warmup Iteration   3: 15.775 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.979 ns/op
Iteration   4: 15.960 ns/op
Iteration   5: 15.692 ns/op
Iteration   6: 15.586 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.094 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.576 ns/op

# Run progress: 96.74% complete, ETA 00:01:15
# Fork: 2 of 2
# Warmup Iteration   1: 23.078 ns/op
# Warmup Iteration   2: 22.938 ns/op
# Warmup Iteration   3: 15.774 ns/op
Iteration   1: 15.571 ns/op
Iteration   2: 15.569 ns/op
Iteration   3: 15.977 ns/op
Iteration   4: 15.944 ns/op
Iteration   5: 15.687 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.572 ns/op
Iteration   8: 19.118 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.576 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.927 ns/op [Average]
  (min, avg, max) = (15.569, 16.019, 19.118), stdev = 1.067
  CI (99.9%): [15.092, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_11)

# Run progress: 96.81% complete, ETA 00:01:13
# Fork: 1 of 2
# Warmup Iteration   1: 2107.819 ns/op
# Warmup Iteration   2: 1149.890 ns/op
# Warmup Iteration   3: 829.780 ns/op
Iteration   1: 830.680 ns/op
Iteration   2: 830.196 ns/op
Iteration   3: 830.415 ns/op
Iteration   4: 830.961 ns/op
Iteration   5: 830.041 ns/op
Iteration   6: 829.927 ns/op
Iteration   7: 830.245 ns/op
Iteration   8: 832.893 ns/op
Iteration   9: 830.953 ns/op
Iteration  10: 837.788 ns/op

# Run progress: 96.88% complete, ETA 00:01:12
# Fork: 2 of 2
# Warmup Iteration   1: 2174.100 ns/op
# Warmup Iteration   2: 1052.047 ns/op
# Warmup Iteration   3: 839.639 ns/op
Iteration   1: 839.528 ns/op
Iteration   2: 839.598 ns/op
Iteration   3: 838.719 ns/op
Iteration   4: 838.436 ns/op
Iteration   5: 839.716 ns/op
Iteration   6: 838.601 ns/op
Iteration   7: 840.964 ns/op
Iteration   8: 842.628 ns/op
Iteration   9: 840.407 ns/op
Iteration  10: 838.178 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  835.544 ±(99.9%) 4.035 ns/op [Average]
  (min, avg, max) = (829.927, 835.544, 842.628), stdev = 4.647
  CI (99.9%): [831.509, 839.579] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11_21)

# Run progress: 96.94% complete, ETA 00:01:10
# Fork: 1 of 2
# Warmup Iteration   1: 25132.539 ns/op
# Warmup Iteration   2: 1048.596 ns/op
# Warmup Iteration   3: 881.236 ns/op
Iteration   1: 809.772 ns/op
Iteration   2: 808.976 ns/op
Iteration   3: 812.066 ns/op
Iteration   4: 809.107 ns/op
Iteration   5: 808.184 ns/op
Iteration   6: 806.712 ns/op
Iteration   7: 809.528 ns/op
Iteration   8: 809.982 ns/op
Iteration   9: 807.632 ns/op
Iteration  10: 809.150 ns/op

# Run progress: 97.01% complete, ETA 00:01:08
# Fork: 2 of 2
# Warmup Iteration   1: 34872.842 ns/op
# Warmup Iteration   2: 1398.578 ns/op
# Warmup Iteration   3: 942.185 ns/op
Iteration   1: 804.417 ns/op
Iteration   2: 806.290 ns/op
Iteration   3: 806.370 ns/op
Iteration   4: 807.956 ns/op
Iteration   5: 806.284 ns/op
Iteration   6: 807.956 ns/op
Iteration   7: 806.643 ns/op
Iteration   8: 807.481 ns/op
Iteration   9: 806.679 ns/op
Iteration  10: 806.437 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  807.881 ±(99.9%) 1.526 ns/op [Average]
  (min, avg, max) = (804.417, 807.881, 812.066), stdev = 1.757
  CI (99.9%): [806.355, 809.407] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11I)

# Run progress: 97.08% complete, ETA 00:01:07
# Fork: 1 of 2
# Warmup Iteration   1: 51091.210 ns/op
# Warmup Iteration   2: 1246.427 ns/op
# Warmup Iteration   3: 906.874 ns/op
Iteration   1: 776.457 ns/op
Iteration   2: 775.054 ns/op
Iteration   3: 777.638 ns/op
Iteration   4: 776.324 ns/op
Iteration   5: 775.351 ns/op
Iteration   6: 775.805 ns/op
Iteration   7: 775.066 ns/op
Iteration   8: 777.199 ns/op
Iteration   9: 775.321 ns/op
Iteration  10: 775.553 ns/op

# Run progress: 97.15% complete, ETA 00:01:05
# Fork: 2 of 2
# Warmup Iteration   1: 38292.548 ns/op
# Warmup Iteration   2: 1313.116 ns/op
# Warmup Iteration   3: 917.673 ns/op
Iteration   1: 771.688 ns/op
Iteration   2: 770.730 ns/op
Iteration   3: 773.910 ns/op
Iteration   4: 772.075 ns/op
Iteration   5: 771.346 ns/op
Iteration   6: 771.293 ns/op
Iteration   7: 771.260 ns/op
Iteration   8: 772.101 ns/op
Iteration   9: 772.167 ns/op
Iteration  10: 771.507 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  773.892 ±(99.9%) 2.002 ns/op [Average]
  (min, avg, max) = (770.730, 773.892, 777.638), stdev = 2.305
  CI (99.9%): [771.891, 775.894] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = DPQ_18_11P)

# Run progress: 97.22% complete, ETA 00:01:04
# Fork: 1 of 2
# Warmup Iteration   1: 1312.341 ns/op
# Warmup Iteration   2: 865.503 ns/op
# Warmup Iteration   3: 670.099 ns/op
Iteration   1: 676.192 ns/op
Iteration   2: 670.231 ns/op
Iteration   3: 670.077 ns/op
Iteration   4: 670.563 ns/op
Iteration   5: 670.132 ns/op
Iteration   6: 670.500 ns/op
Iteration   7: 670.508 ns/op
Iteration   8: 670.155 ns/op
Iteration   9: 671.012 ns/op
Iteration  10: 670.199 ns/op

# Run progress: 97.29% complete, ETA 00:01:02
# Fork: 2 of 2
# Warmup Iteration   1: 1039.340 ns/op
# Warmup Iteration   2: 898.588 ns/op
# Warmup Iteration   3: 667.452 ns/op
Iteration   1: 667.781 ns/op
Iteration   2: 667.785 ns/op
Iteration   3: 667.047 ns/op
Iteration   4: 667.747 ns/op
Iteration   5: 667.478 ns/op
Iteration   6: 667.467 ns/op
Iteration   7: 667.453 ns/op
Iteration   8: 667.595 ns/op
Iteration   9: 667.408 ns/op
Iteration  10: 667.601 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  669.247 ±(99.9%) 1.891 ns/op [Average]
  (min, avg, max) = (667.047, 669.247, 676.192), stdev = 2.178
  CI (99.9%): [667.355, 671.138] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SAWTOTH, tSorter = RADIX)

# Run progress: 97.36% complete, ETA 00:01:00
# Fork: 1 of 2
# Warmup Iteration   1: 15993.360 ns/op
# Warmup Iteration   2: 5141.775 ns/op
# Warmup Iteration   3: 4084.418 ns/op
Iteration   1: 3758.157 ns/op
Iteration   2: 3749.554 ns/op
Iteration   3: 3760.052 ns/op
Iteration   4: 3752.623 ns/op
Iteration   5: 3751.126 ns/op
Iteration   6: 3741.990 ns/op
Iteration   7: 3738.652 ns/op
Iteration   8: 3724.078 ns/op
Iteration   9: 3753.136 ns/op
Iteration  10: 3742.422 ns/op

# Run progress: 97.43% complete, ETA 00:00:59
# Fork: 2 of 2
# Warmup Iteration   1: 13127.228 ns/op
# Warmup Iteration   2: 4972.128 ns/op
# Warmup Iteration   3: 4168.747 ns/op
Iteration   1: 3804.421 ns/op
Iteration   2: 3799.369 ns/op
Iteration   3: 3809.009 ns/op
Iteration   4: 3786.903 ns/op
Iteration   5: 3789.875 ns/op
Iteration   6: 3805.183 ns/op
Iteration   7: 3781.556 ns/op
Iteration   8: 3787.991 ns/op
Iteration   9: 3787.598 ns/op
Iteration  10: 3790.621 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3770.716 ±(99.9%) 22.632 ns/op [Average]
  (min, avg, max) = (3724.078, 3770.716, 3809.009), stdev = 26.063
  CI (99.9%): [3748.084, 3793.347] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = BASELINE)

# Run progress: 97.50% complete, ETA 00:00:57
# Fork: 1 of 2
# Warmup Iteration   1: 22.383 ns/op
# Warmup Iteration   2: 25.799 ns/op
# Warmup Iteration   3: 15.776 ns/op
Iteration   1: 15.573 ns/op
Iteration   2: 15.585 ns/op
Iteration   3: 15.985 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.582 ns/op
Iteration   7: 15.583 ns/op
Iteration   8: 19.105 ns/op
Iteration   9: 15.583 ns/op
Iteration  10: 15.575 ns/op

# Run progress: 97.57% complete, ETA 00:00:56
# Fork: 2 of 2
# Warmup Iteration   1: 22.339 ns/op
# Warmup Iteration   2: 21.962 ns/op
# Warmup Iteration   3: 15.782 ns/op
Iteration   1: 15.576 ns/op
Iteration   2: 15.583 ns/op
Iteration   3: 15.983 ns/op
Iteration   4: 15.948 ns/op
Iteration   5: 15.683 ns/op
Iteration   6: 15.575 ns/op
Iteration   7: 15.564 ns/op
Iteration   8: 19.099 ns/op
Iteration   9: 15.569 ns/op
Iteration  10: 15.579 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.018 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.564, 16.018, 19.105), stdev = 1.066
  CI (99.9%): [15.092, 16.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_11)

# Run progress: 97.64% complete, ETA 00:00:54
# Fork: 1 of 2
# Warmup Iteration   1: 1716.433 ns/op
# Warmup Iteration   2: 62789.046 ns/op
# Warmup Iteration   3: 5078.058 ns/op
Iteration   1: 53786.573 ns/op
Iteration   2: 761.085 ns/op
Iteration   3: 50488.847 ns/op
Iteration   4: 1043.299 ns/op
Iteration   5: 821.610 ns/op
Iteration   6: 48235.118 ns/op
Iteration   7: 1647.003 ns/op
Iteration   8: 745.261 ns/op
Iteration   9: 849.667 ns/op
Iteration  10: 903.011 ns/op

# Run progress: 97.71% complete, ETA 00:00:52
# Fork: 2 of 2
# Warmup Iteration   1: 2796.894 ns/op
# Warmup Iteration   2: 17557.319 ns/op
# Warmup Iteration   3: 2351.110 ns/op
Iteration   1: 53106.480 ns/op
Iteration   2: 750.132 ns/op
Iteration   3: 48306.233 ns/op
Iteration   4: 995.933 ns/op
Iteration   5: 812.417 ns/op
Iteration   6: 44131.607 ns/op
Iteration   7: 864.803 ns/op
Iteration   8: 787.268 ns/op
Iteration   9: 881.377 ns/op
Iteration  10: 921.914 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  15541.982 ±(99.9%) 19972.612 ns/op [Average]
  (min, avg, max) = (745.261, 15541.982, 53786.573), stdev = 23000.490
  CI (99.9%): [≈ 0, 35514.594] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11_21)

# Run progress: 97.78% complete, ETA 00:00:51
# Fork: 1 of 2
# Warmup Iteration   1: 12441.379 ns/op
# Warmup Iteration   2: 26145.510 ns/op
# Warmup Iteration   3: 2006.657 ns/op
Iteration   1: 16121.654 ns/op
Iteration   2: 1019.912 ns/op
Iteration   3: 1252.421 ns/op
Iteration   4: 31078.817 ns/op
Iteration   5: 2253.353 ns/op
Iteration   6: 13713.648 ns/op
Iteration   7: 1101.866 ns/op
Iteration   8: 842.293 ns/op
Iteration   9: 867.549 ns/op
Iteration  10: 905.527 ns/op

# Run progress: 97.85% complete, ETA 00:00:49
# Fork: 2 of 2
# Warmup Iteration   1: 10802.167 ns/op
# Warmup Iteration   2: 23831.062 ns/op
# Warmup Iteration   3: 2372.462 ns/op
Iteration   1: 2118.186 ns/op
Iteration   2: 989.577 ns/op
Iteration   3: 1210.082 ns/op
Iteration   4: 27972.059 ns/op
Iteration   5: 3373.930 ns/op
Iteration   6: 1775.081 ns/op
Iteration   7: 1103.230 ns/op
Iteration   8: 849.913 ns/op
Iteration   9: 853.195 ns/op
Iteration  10: 922.130 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  5516.221 ±(99.9%) 8027.855 ns/op [Average]
  (min, avg, max) = (842.293, 5516.221, 31078.817), stdev = 9244.890
  CI (99.9%): [≈ 0, 13544.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11I)

# Run progress: 97.92% complete, ETA 00:00:48
# Fork: 1 of 2
# Warmup Iteration   1: 13322.463 ns/op
# Warmup Iteration   2: 16087.359 ns/op
# Warmup Iteration   3: 1443.749 ns/op
Iteration   1: 25132.479 ns/op
Iteration   2: 1025.504 ns/op
Iteration   3: 1172.324 ns/op
Iteration   4: 92275.137 ns/op
Iteration   5: 11787.653 ns/op
Iteration   6: 2088.576 ns/op
Iteration   7: 1045.350 ns/op
Iteration   8: 849.801 ns/op
Iteration   9: 847.536 ns/op
Iteration  10: 938.460 ns/op

# Run progress: 97.99% complete, ETA 00:00:46
# Fork: 2 of 2
# Warmup Iteration   1: 11195.354 ns/op
# Warmup Iteration   2: 23111.458 ns/op
# Warmup Iteration   3: 1619.395 ns/op
Iteration   1: 4902.649 ns/op
Iteration   2: 1031.322 ns/op
Iteration   3: 1131.572 ns/op
Iteration   4: 93161.417 ns/op
Iteration   5: 17499.233 ns/op
Iteration   6: 3115.949 ns/op
Iteration   7: 1018.557 ns/op
Iteration   8: 843.963 ns/op
Iteration   9: 843.553 ns/op
Iteration  10: 930.772 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  13082.090 ±(99.9%) 24315.077 ns/op [Average]
  (min, avg, max) = (843.553, 13082.090, 93161.417), stdev = 28001.279
  CI (99.9%): [≈ 0, 37397.168] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = DPQ_18_11P)

# Run progress: 98.06% complete, ETA 00:00:44
# Fork: 1 of 2
# Warmup Iteration   1: 2184.101 ns/op
# Warmup Iteration   2: 1421.528 ns/op
# Warmup Iteration   3: 997.131 ns/op
Iteration   1: 945.517 ns/op
Iteration   2: 82591.421 ns/op
Iteration   3: 1055.175 ns/op
Iteration   4: 1006.654 ns/op
Iteration   5: 1052.433 ns/op
Iteration   6: 75179.564 ns/op
Iteration   7: 1372.177 ns/op
Iteration   8: 1091.421 ns/op
Iteration   9: 1008.626 ns/op
Iteration  10: 995.375 ns/op

# Run progress: 98.13% complete, ETA 00:00:43
# Fork: 2 of 2
# Warmup Iteration   1: 2590.276 ns/op
# Warmup Iteration   2: 1320.635 ns/op
# Warmup Iteration   3: 997.382 ns/op
Iteration   1: 945.687 ns/op
Iteration   2: 11968.566 ns/op
Iteration   3: 1047.166 ns/op
Iteration   4: 995.828 ns/op
Iteration   5: 1044.057 ns/op
Iteration   6: 82245.223 ns/op
Iteration   7: 1069.642 ns/op
Iteration   8: 1112.365 ns/op
Iteration   9: 1032.439 ns/op
Iteration  10: 1018.889 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  13438.911 ±(99.9%) 25030.188 ns/op [Average]
  (min, avg, max) = (945.517, 13438.911, 82591.421), stdev = 28824.802
  CI (99.9%): [≈ 0, 38469.100] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = _RANDOM, tSorter = RADIX)

# Run progress: 98.19% complete, ETA 00:00:41
# Fork: 1 of 2
# Warmup Iteration   1: 16455.782 ns/op
# Warmup Iteration   2: 4907.944 ns/op
# Warmup Iteration   3: 4086.176 ns/op
Iteration   1: 3788.319 ns/op
Iteration   2: 3762.883 ns/op
Iteration   3: 3802.431 ns/op
Iteration   4: 3762.450 ns/op
Iteration   5: 3764.611 ns/op
Iteration   6: 3784.492 ns/op
Iteration   7: 3755.312 ns/op
Iteration   8: 3753.276 ns/op
Iteration   9: 3777.443 ns/op
Iteration  10: 3742.318 ns/op

# Run progress: 98.26% complete, ETA 00:00:40
# Fork: 2 of 2
# Warmup Iteration   1: 15029.994 ns/op
# Warmup Iteration   2: 5232.052 ns/op
# Warmup Iteration   3: 4139.550 ns/op
Iteration   1: 3802.474 ns/op
Iteration   2: 3750.555 ns/op
Iteration   3: 3809.854 ns/op
Iteration   4: 3751.860 ns/op
Iteration   5: 3776.623 ns/op
Iteration   6: 3797.247 ns/op
Iteration   7: 3778.598 ns/op
Iteration   8: 3741.819 ns/op
Iteration   9: 3851.101 ns/op
Iteration  10: 3734.852 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3774.426 ±(99.9%) 24.783 ns/op [Average]
  (min, avg, max) = (3734.852, 3774.426, 3851.101), stdev = 28.541
  CI (99.9%): [3749.643, 3799.209] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = BASELINE)

# Run progress: 98.33% complete, ETA 00:00:38
# Fork: 1 of 2
# Warmup Iteration   1: 22.198 ns/op
# Warmup Iteration   2: 23.549 ns/op
# Warmup Iteration   3: 15.770 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.578 ns/op
Iteration   3: 15.980 ns/op
Iteration   4: 15.951 ns/op
Iteration   5: 15.672 ns/op
Iteration   6: 15.579 ns/op
Iteration   7: 15.579 ns/op
Iteration   8: 19.101 ns/op
Iteration   9: 15.578 ns/op
Iteration  10: 15.582 ns/op

# Run progress: 98.40% complete, ETA 00:00:36
# Fork: 2 of 2
# Warmup Iteration   1: 22.480 ns/op
# Warmup Iteration   2: 25.883 ns/op
# Warmup Iteration   3: 15.768 ns/op
Iteration   1: 15.582 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.974 ns/op
Iteration   4: 15.955 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.578 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.108 ns/op
Iteration   9: 15.580 ns/op
Iteration  10: 15.578 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.019 ±(99.9%) 0.926 ns/op [Average]
  (min, avg, max) = (15.577, 16.019, 19.108), stdev = 1.066
  CI (99.9%): [15.093, 16.945] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_11)

# Run progress: 98.47% complete, ETA 00:00:35
# Fork: 1 of 2
# Warmup Iteration   1: 2682.386 ns/op
# Warmup Iteration   2: 921.059 ns/op
# Warmup Iteration   3: 643.530 ns/op
Iteration   1: 643.583 ns/op
Iteration   2: 643.639 ns/op
Iteration   3: 644.624 ns/op
Iteration   4: 647.384 ns/op
Iteration   5: 644.115 ns/op
Iteration   6: 643.904 ns/op
Iteration   7: 644.208 ns/op
Iteration   8: 648.009 ns/op
Iteration   9: 643.655 ns/op
Iteration  10: 645.433 ns/op

# Run progress: 98.54% complete, ETA 00:00:33
# Fork: 2 of 2
# Warmup Iteration   1: 2813.861 ns/op
# Warmup Iteration   2: 897.027 ns/op
# Warmup Iteration   3: 620.470 ns/op
Iteration   1: 619.392 ns/op
Iteration   2: 619.652 ns/op
Iteration   3: 619.051 ns/op
Iteration   4: 622.376 ns/op
Iteration   5: 618.538 ns/op
Iteration   6: 620.123 ns/op
Iteration   7: 619.171 ns/op
Iteration   8: 624.369 ns/op
Iteration   9: 620.085 ns/op
Iteration  10: 619.248 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  632.528 ±(99.9%) 11.077 ns/op [Average]
  (min, avg, max) = (618.538, 632.528, 648.009), stdev = 12.756
  CI (99.9%): [621.451, 643.605] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11_21)

# Run progress: 98.61% complete, ETA 00:00:32
# Fork: 1 of 2
# Warmup Iteration   1: 11240.866 ns/op
# Warmup Iteration   2: 814.311 ns/op
# Warmup Iteration   3: 554.905 ns/op
Iteration   1: 555.761 ns/op
Iteration   2: 555.819 ns/op
Iteration   3: 554.306 ns/op
Iteration   4: 554.598 ns/op
Iteration   5: 554.775 ns/op
Iteration   6: 555.915 ns/op
Iteration   7: 554.391 ns/op
Iteration   8: 554.111 ns/op
Iteration   9: 555.479 ns/op
Iteration  10: 554.631 ns/op

# Run progress: 98.68% complete, ETA 00:00:30
# Fork: 2 of 2
# Warmup Iteration   1: 18849.364 ns/op
# Warmup Iteration   2: 789.911 ns/op
# Warmup Iteration   3: 599.668 ns/op
Iteration   1: 550.404 ns/op
Iteration   2: 549.893 ns/op
Iteration   3: 550.090 ns/op
Iteration   4: 551.814 ns/op
Iteration   5: 551.103 ns/op
Iteration   6: 549.211 ns/op
Iteration   7: 550.814 ns/op
Iteration   8: 551.524 ns/op
Iteration   9: 549.584 ns/op
Iteration  10: 549.432 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  552.683 ±(99.9%) 2.155 ns/op [Average]
  (min, avg, max) = (549.211, 552.683, 555.915), stdev = 2.482
  CI (99.9%): [550.528, 554.838] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11I)

# Run progress: 98.75% complete, ETA 00:00:28
# Fork: 1 of 2
# Warmup Iteration   1: 25006.497 ns/op
# Warmup Iteration   2: 722.529 ns/op
# Warmup Iteration   3: 614.510 ns/op
Iteration   1: 563.785 ns/op
Iteration   2: 563.110 ns/op
Iteration   3: 567.415 ns/op
Iteration   4: 567.263 ns/op
Iteration   5: 563.519 ns/op
Iteration   6: 563.392 ns/op
Iteration   7: 563.529 ns/op
Iteration   8: 568.264 ns/op
Iteration   9: 563.665 ns/op
Iteration  10: 563.707 ns/op

# Run progress: 98.82% complete, ETA 00:00:27
# Fork: 2 of 2
# Warmup Iteration   1: 28842.385 ns/op
# Warmup Iteration   2: 720.146 ns/op
# Warmup Iteration   3: 612.400 ns/op
Iteration   1: 563.930 ns/op
Iteration   2: 563.451 ns/op
Iteration   3: 564.687 ns/op
Iteration   4: 564.721 ns/op
Iteration   5: 563.723 ns/op
Iteration   6: 563.889 ns/op
Iteration   7: 563.633 ns/op
Iteration   8: 568.629 ns/op
Iteration   9: 564.159 ns/op
Iteration  10: 563.536 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  564.600 ±(99.9%) 1.521 ns/op [Average]
  (min, avg, max) = (563.110, 564.600, 568.629), stdev = 1.752
  CI (99.9%): [563.079, 566.122] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = DPQ_18_11P)

# Run progress: 98.89% complete, ETA 00:00:25
# Fork: 1 of 2
# Warmup Iteration   1: 516.051 ns/op
# Warmup Iteration   2: 422.199 ns/op
# Warmup Iteration   3: 327.282 ns/op
Iteration   1: 327.327 ns/op
Iteration   2: 327.355 ns/op
Iteration   3: 327.318 ns/op
Iteration   4: 329.910 ns/op
Iteration   5: 327.323 ns/op
Iteration   6: 327.356 ns/op
Iteration   7: 327.338 ns/op
Iteration   8: 327.424 ns/op
Iteration   9: 327.401 ns/op
Iteration  10: 327.173 ns/op

# Run progress: 98.96% complete, ETA 00:00:24
# Fork: 2 of 2
# Warmup Iteration   1: 522.436 ns/op
# Warmup Iteration   2: 428.087 ns/op
# Warmup Iteration   3: 330.187 ns/op
Iteration   1: 330.297 ns/op
Iteration   2: 330.351 ns/op
Iteration   3: 330.339 ns/op
Iteration   4: 331.789 ns/op
Iteration   5: 330.230 ns/op
Iteration   6: 330.259 ns/op
Iteration   7: 330.325 ns/op
Iteration   8: 330.272 ns/op
Iteration   9: 330.501 ns/op
Iteration  10: 330.230 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  329.026 ±(99.9%) 1.396 ns/op [Average]
  (min, avg, max) = (327.173, 329.026, 331.789), stdev = 1.608
  CI (99.9%): [327.630, 330.422] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = PLATEAU, tSorter = RADIX)

# Run progress: 99.03% complete, ETA 00:00:22
# Fork: 1 of 2
# Warmup Iteration   1: 15734.561 ns/op
# Warmup Iteration   2: 4996.549 ns/op
# Warmup Iteration   3: 4039.539 ns/op
Iteration   1: 3671.858 ns/op
Iteration   2: 3690.826 ns/op
Iteration   3: 3679.161 ns/op
Iteration   4: 3661.906 ns/op
Iteration   5: 3679.187 ns/op
Iteration   6: 3678.773 ns/op
Iteration   7: 3658.394 ns/op
Iteration   8: 3666.591 ns/op
Iteration   9: 3675.633 ns/op
Iteration  10: 3680.427 ns/op

# Run progress: 99.10% complete, ETA 00:00:20
# Fork: 2 of 2
# Warmup Iteration   1: 8954.057 ns/op
# Warmup Iteration   2: 5274.308 ns/op
# Warmup Iteration   3: 3717.636 ns/op
Iteration   1: 3722.128 ns/op
Iteration   2: 3724.191 ns/op
Iteration   3: 3731.697 ns/op
Iteration   4: 3712.762 ns/op
Iteration   5: 3713.866 ns/op
Iteration   6: 3731.680 ns/op
Iteration   7: 3712.823 ns/op
Iteration   8: 3701.952 ns/op
Iteration   9: 3726.935 ns/op
Iteration  10: 3710.924 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3696.586 ±(99.9%) 21.537 ns/op [Average]
  (min, avg, max) = (3658.394, 3696.586, 3731.697), stdev = 24.802
  CI (99.9%): [3675.049, 3718.123] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = BASELINE)

# Run progress: 99.17% complete, ETA 00:00:19
# Fork: 1 of 2
# Warmup Iteration   1: 21.943 ns/op
# Warmup Iteration   2: 26.142 ns/op
# Warmup Iteration   3: 15.772 ns/op
Iteration   1: 15.581 ns/op
Iteration   2: 15.577 ns/op
Iteration   3: 15.978 ns/op
Iteration   4: 15.964 ns/op
Iteration   5: 15.685 ns/op
Iteration   6: 15.570 ns/op
Iteration   7: 15.584 ns/op
Iteration   8: 19.108 ns/op
Iteration   9: 15.579 ns/op
Iteration  10: 15.579 ns/op

# Run progress: 99.24% complete, ETA 00:00:17
# Fork: 2 of 2
# Warmup Iteration   1: 22.014 ns/op
# Warmup Iteration   2: 25.991 ns/op
# Warmup Iteration   3: 15.773 ns/op
Iteration   1: 15.583 ns/op
Iteration   2: 15.585 ns/op
Iteration   3: 15.987 ns/op
Iteration   4: 15.945 ns/op
Iteration   5: 15.668 ns/op
Iteration   6: 15.574 ns/op
Iteration   7: 15.577 ns/op
Iteration   8: 19.137 ns/op
Iteration   9: 15.576 ns/op
Iteration  10: 15.568 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  16.020 ±(99.9%) 0.931 ns/op [Average]
  (min, avg, max) = (15.568, 16.020, 19.137), stdev = 1.072
  CI (99.9%): [15.089, 16.951] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_11)

# Run progress: 99.31% complete, ETA 00:00:16
# Fork: 1 of 2
# Warmup Iteration   1: 1174.603 ns/op
# Warmup Iteration   2: 529.949 ns/op
# Warmup Iteration   3: 614.834 ns/op
Iteration   1: 317.452 ns/op
Iteration   2: 26752.008 ns/op
Iteration   3: 344.275 ns/op
Iteration   4: 393.666 ns/op
Iteration   5: 33714.235 ns/op
Iteration   6: 33946.543 ns/op
Iteration   7: 504.407 ns/op
Iteration   8: 463.134 ns/op
Iteration   9: 408.138 ns/op
Iteration  10: 294.027 ns/op

# Run progress: 99.38% complete, ETA 00:00:14
# Fork: 2 of 2
# Warmup Iteration   1: 1126.260 ns/op
# Warmup Iteration   2: 530.334 ns/op
# Warmup Iteration   3: 482.332 ns/op
Iteration   1: 311.870 ns/op
Iteration   2: 26982.162 ns/op
Iteration   3: 327.078 ns/op
Iteration   4: 388.823 ns/op
Iteration   5: 33690.625 ns/op
Iteration   6: 30283.072 ns/op
Iteration   7: 504.883 ns/op
Iteration   8: 452.832 ns/op
Iteration   9: 404.564 ns/op
Iteration  10: 298.289 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  9539.104 ±(99.9%) 12547.544 ns/op [Average]
  (min, avg, max) = (294.027, 9539.104, 33946.543), stdev = 14449.770
  CI (99.9%): [≈ 0, 22086.648] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11_21)

# Run progress: 99.44% complete, ETA 00:00:12
# Fork: 1 of 2
# Warmup Iteration   1: 19740.171 ns/op
# Warmup Iteration   2: 640.089 ns/op
# Warmup Iteration   3: 461.974 ns/op
Iteration   1: 427.799 ns/op
Iteration   2: 422.043 ns/op
Iteration   3: 358.719 ns/op
Iteration   4: 397.318 ns/op
Iteration   5: 378.108 ns/op
Iteration   6: 15189.418 ns/op
Iteration   7: 470.217 ns/op
Iteration   8: 419.639 ns/op
Iteration   9: 382.017 ns/op
Iteration  10: 419.832 ns/op

# Run progress: 99.51% complete, ETA 00:00:11
# Fork: 2 of 2
# Warmup Iteration   1: 18643.987 ns/op
# Warmup Iteration   2: 734.187 ns/op
# Warmup Iteration   3: 461.160 ns/op
Iteration   1: 427.885 ns/op
Iteration   2: 431.483 ns/op
Iteration   3: 362.044 ns/op
Iteration   4: 399.581 ns/op
Iteration   5: 380.060 ns/op
Iteration   6: 15065.711 ns/op
Iteration   7: 866.725 ns/op
Iteration   8: 418.717 ns/op
Iteration   9: 378.941 ns/op
Iteration  10: 416.156 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1900.621 ±(99.9%) 3929.148 ns/op [Average]
  (min, avg, max) = (358.719, 1900.621, 15189.418), stdev = 4524.813
  CI (99.9%): [≈ 0, 5829.769] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11I)

# Run progress: 99.58% complete, ETA 00:00:09
# Fork: 1 of 2
# Warmup Iteration   1: 10449.020 ns/op
# Warmup Iteration   2: 681.837 ns/op
# Warmup Iteration   3: 1870.093 ns/op
Iteration   1: 426.298 ns/op
Iteration   2: 519.288 ns/op
Iteration   3: 417.600 ns/op
Iteration   4: 462.708 ns/op
Iteration   5: 432.358 ns/op
Iteration   6: 12855.243 ns/op
Iteration   7: 540.411 ns/op
Iteration   8: 478.810 ns/op
Iteration   9: 422.591 ns/op
Iteration  10: 416.008 ns/op

# Run progress: 99.65% complete, ETA 00:00:08
# Fork: 2 of 2
# Warmup Iteration   1: 24158.080 ns/op
# Warmup Iteration   2: 541.852 ns/op
# Warmup Iteration   3: 16539.091 ns/op
Iteration   1: 411.687 ns/op
Iteration   2: 495.294 ns/op
Iteration   3: 401.376 ns/op
Iteration   4: 444.114 ns/op
Iteration   5: 413.774 ns/op
Iteration   6: 15282.098 ns/op
Iteration   7: 512.263 ns/op
Iteration   8: 466.169 ns/op
Iteration   9: 410.968 ns/op
Iteration  10: 392.340 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  1810.070 ±(99.9%) 3656.655 ns/op [Average]
  (min, avg, max) = (392.340, 1810.070, 15282.098), stdev = 4211.009
  CI (99.9%): [≈ 0, 5466.725] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = DPQ_18_11P)

# Run progress: 99.72% complete, ETA 00:00:06
# Fork: 1 of 2
# Warmup Iteration   1: 339.092 ns/op
# Warmup Iteration   2: 648.254 ns/op
# Warmup Iteration   3: 238.025 ns/op
Iteration   1: 211.700 ns/op
Iteration   2: 2348.675 ns/op
Iteration   3: 213.076 ns/op
Iteration   4: 234.671 ns/op
Iteration   5: 215.634 ns/op
Iteration   6: 267.994 ns/op
Iteration   7: 285.658 ns/op
Iteration   8: 242.170 ns/op
Iteration   9: 229.113 ns/op
Iteration  10: 196.763 ns/op

# Run progress: 99.79% complete, ETA 00:00:04
# Fork: 2 of 2
# Warmup Iteration   1: 411.817 ns/op
# Warmup Iteration   2: 696.594 ns/op
# Warmup Iteration   3: 251.738 ns/op
Iteration   1: 205.173 ns/op
Iteration   2: 901.117 ns/op
Iteration   3: 217.033 ns/op
Iteration   4: 242.288 ns/op
Iteration   5: 224.884 ns/op
Iteration   6: 278.955 ns/op
Iteration   7: 303.918 ns/op
Iteration   8: 253.606 ns/op
Iteration   9: 232.452 ns/op
Iteration  10: 202.487 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  375.368 ±(99.9%) 424.160 ns/op [Average]
  (min, avg, max) = (196.763, 375.368, 2348.675), stdev = 488.463
  CI (99.9%): [≈ 0, 799.528] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_192, Java HotSpot(TM) 64-Bit Server VM, 25.192-b12
# VM invoker: /home/bourgesl/apps/jdk1.8.0/jre/bin/java
# VM options: -Xms1g -Xmx1g -XX:-TieredCompilation -XX:+UnlockDiagnosticVMOptions -XX:GuaranteedSafepointInterval=300000
# Warmup: 3 iterations, 100 ms each
# Measurement: 10 iterations, 50 ms each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: edu.sorting.bench.ArraySortBenchmark.sort
# Parameters: (arraySize = 100, arraySubSize = 64, dataTweaker = DITHER____, distBuilder = SHUFFLE, tSorter = RADIX)

# Run progress: 99.86% complete, ETA 00:00:03
# Fork: 1 of 2
# Warmup Iteration   1: 7836.585 ns/op
# Warmup Iteration   2: 86470.125 ns/op
# Warmup Iteration   3: 5873.294 ns/op
Iteration   1: 3879.956 ns/op
Iteration   2: 4099.385 ns/op
Iteration   3: 3905.765 ns/op
Iteration   4: 3753.491 ns/op
Iteration   5: 4049.684 ns/op
Iteration   6: 4059.341 ns/op
Iteration   7: 4046.954 ns/op
Iteration   8: 3748.959 ns/op
Iteration   9: 3879.232 ns/op
Iteration  10: 3551.127 ns/op

# Run progress: 99.93% complete, ETA 00:00:01
# Fork: 2 of 2
# Warmup Iteration   1: 10130.494 ns/op
# Warmup Iteration   2: 12642.713 ns/op
# Warmup Iteration   3: 4425.624 ns/op
Iteration   1: 3786.551 ns/op
Iteration   2: 3972.383 ns/op
Iteration   3: 3829.398 ns/op
Iteration   4: 3744.131 ns/op
Iteration   5: 3987.535 ns/op
Iteration   6: 3901.687 ns/op
Iteration   7: 3943.043 ns/op
Iteration   8: 3714.873 ns/op
Iteration   9: 3849.934 ns/op
Iteration  10: 3519.021 ns/op


Result "edu.sorting.bench.ArraySortBenchmark.sort":
  3861.122 ±(99.9%) 138.680 ns/op [Average]
  (min, avg, max) = (3519.021, 3861.122, 4099.385), stdev = 159.704
  CI (99.9%): [3722.442, 3999.803] (assumes normal distribution)


# Run complete. Total time: 00:38:24

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                (arraySize)  (arraySubSize)  (dataTweaker)  (distBuilder)     (tSorter)  Mode  Cnt      Score       Error  Units
ArraySortBenchmark.sort          100               1     IDENT_____        STAGGER      BASELINE  avgt   20     16.025 ±     0.929  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        STAGGER        DPQ_11  avgt   20    772.364 ±     8.795  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20    637.053 ±     1.206  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        STAGGER    DPQ_18_11I  avgt   20    641.802 ±     5.501  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        STAGGER    DPQ_18_11P  avgt   20    490.050 ±     0.867  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        STAGGER         RADIX  avgt   20    356.206 ±     2.450  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SAWTOTH      BASELINE  avgt   20     16.023 ±     0.929  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SAWTOTH        DPQ_11  avgt   20     70.746 ±     0.912  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20     70.896 ±     0.380  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20     71.307 ±     0.380  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20     73.324 ±     0.063  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SAWTOTH         RADIX  avgt   20    114.630 ±     2.963  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        _RANDOM      BASELINE  avgt   20     16.023 ±     0.930  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        _RANDOM        DPQ_11  avgt   20     70.824 ±     0.889  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20     72.209 ±     0.350  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20     71.344 ±     0.351  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20     73.302 ±     0.083  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        _RANDOM         RADIX  avgt   20    114.653 ±     2.936  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        PLATEAU      BASELINE  avgt   20     16.020 ±     0.929  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        PLATEAU        DPQ_11  avgt   20     77.253 ±     0.803  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20    107.532 ±     0.128  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    107.469 ±     0.171  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20     73.392 ±     0.338  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        PLATEAU         RADIX  avgt   20    116.250 ±     8.516  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SHUFFLE      BASELINE  avgt   20     16.019 ±     0.929  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SHUFFLE        DPQ_11  avgt   20    134.235 ±     0.909  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20    155.798 ±     0.765  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20    203.040 ±     0.294  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20     73.274 ±     0.059  ns/op
ArraySortBenchmark.sort          100               1     IDENT_____        SHUFFLE         RADIX  avgt   20    125.699 ±     1.686  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        STAGGER      BASELINE  avgt   20     16.019 ±     0.930  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        STAGGER        DPQ_11  avgt   20    705.972 ±     1.520  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20   1116.259 ±     2.599  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        STAGGER    DPQ_18_11I  avgt   20   1114.644 ±     3.297  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   1297.308 ±    16.623  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        STAGGER         RADIX  avgt   20    433.991 ±     1.935  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SAWTOTH      BASELINE  avgt   20     16.021 ±     0.930  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SAWTOTH        DPQ_11  avgt   20     70.810 ±     0.879  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20     72.255 ±     0.352  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20     71.270 ±     0.296  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20     73.276 ±     0.074  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SAWTOTH         RADIX  avgt   20    114.610 ±     2.952  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        _RANDOM      BASELINE  avgt   20     16.020 ±     0.928  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        _RANDOM        DPQ_11  avgt   20     70.776 ±     0.921  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20     72.266 ±     0.361  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20     71.343 ±     0.371  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20     73.246 ±     0.055  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        _RANDOM         RADIX  avgt   20    114.675 ±     2.923  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        PLATEAU      BASELINE  avgt   20     16.044 ±     0.922  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        PLATEAU        DPQ_11  avgt   20     82.900 ±     5.478  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    114.527 ±     0.190  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    115.656 ±     0.113  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    139.761 ±     0.602  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        PLATEAU         RADIX  avgt   20    125.981 ±     1.747  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SHUFFLE      BASELINE  avgt   20     16.017 ±     0.927  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SHUFFLE        DPQ_11  avgt   20    414.595 ±     0.937  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20    338.577 ±     1.371  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20    409.541 ±     5.683  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   1580.655 ±    16.595  ns/op
ArraySortBenchmark.sort          100               1     REVERSE___        SHUFFLE         RADIX  avgt   20    206.202 ±     3.607  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        STAGGER      BASELINE  avgt   20     16.020 ±     0.926  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        STAGGER        DPQ_11  avgt   20    808.024 ±     6.165  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20    910.166 ±    31.219  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20    899.371 ±    29.742  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20    872.393 ±     3.133  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        STAGGER         RADIX  avgt   20    409.372 ±     1.716  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     16.019 ±     0.929  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20     70.766 ±     0.909  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20     70.853 ±     0.367  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20     71.337 ±     0.389  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20     73.267 ±     0.049  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SAWTOTH         RADIX  avgt   20    114.566 ±     2.948  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        _RANDOM      BASELINE  avgt   20     16.029 ±     0.931  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        _RANDOM        DPQ_11  avgt   20     70.834 ±     0.908  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20     71.602 ±     0.686  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20     71.287 ±     0.274  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20     73.256 ±     0.045  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        _RANDOM         RADIX  avgt   20    114.569 ±     2.962  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        PLATEAU      BASELINE  avgt   20     16.020 ±     0.933  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        PLATEAU        DPQ_11  avgt   20     78.750 ±     0.760  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    108.401 ±     0.109  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    113.992 ±     5.121  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    110.642 ±     0.113  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        PLATEAU         RADIX  avgt   20    110.740 ±     1.317  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     16.021 ±     0.927  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20    420.279 ±     3.030  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20    659.654 ±     8.243  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20    655.589 ±     1.185  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20    515.151 ±     0.190  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_FR        SHUFFLE         RADIX  avgt   20    363.702 ±     2.711  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        STAGGER      BASELINE  avgt   20     16.017 ±     0.927  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        STAGGER        DPQ_11  avgt   20    679.516 ±     3.036  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20    807.826 ±     9.646  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20    793.252 ±     7.466  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20    668.970 ±     3.020  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        STAGGER         RADIX  avgt   20    396.951 ±     4.531  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     16.021 ±     0.926  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20     70.758 ±     0.930  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20     71.693 ±     0.784  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20     71.298 ±     0.293  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20     73.389 ±     0.343  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SAWTOTH         RADIX  avgt   20    114.640 ±     2.953  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        _RANDOM      BASELINE  avgt   20     16.020 ±     0.931  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        _RANDOM        DPQ_11  avgt   20     70.788 ±     0.891  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20     71.568 ±     0.670  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20     71.294 ±     0.298  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20     73.256 ±     0.056  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        _RANDOM         RADIX  avgt   20    114.572 ±     2.982  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        PLATEAU      BASELINE  avgt   20     16.018 ±     0.930  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        PLATEAU        DPQ_11  avgt   20     77.188 ±     0.758  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    111.429 ±     3.627  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    107.369 ±     0.166  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20     73.268 ±     0.054  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        PLATEAU         RADIX  avgt   20    125.896 ±     1.647  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     16.018 ±     0.925  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20    232.745 ±     1.257  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20    409.558 ±     2.075  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20    517.884 ±     4.771  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20    460.640 ±     0.585  ns/op
ArraySortBenchmark.sort          100               1     REVERSE_BA        SHUFFLE         RADIX  avgt   20    382.986 ±     3.501  ns/op
ArraySortBenchmark.sort          100               1     SORT______        STAGGER      BASELINE  avgt   20     18.942 ±     0.103  ns/op
ArraySortBenchmark.sort          100               1     SORT______        STAGGER        DPQ_11  avgt   20    137.303 ±     0.927  ns/op
ArraySortBenchmark.sort          100               1     SORT______        STAGGER  DPQ_18_11_21  avgt   20    157.214 ±     0.937  ns/op
ArraySortBenchmark.sort          100               1     SORT______        STAGGER    DPQ_18_11I  avgt   20    211.721 ±     1.661  ns/op
ArraySortBenchmark.sort          100               1     SORT______        STAGGER    DPQ_18_11P  avgt   20     71.171 ±     0.882  ns/op
ArraySortBenchmark.sort          100               1     SORT______        STAGGER         RADIX  avgt   20    163.592 ±     2.842  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SAWTOTH      BASELINE  avgt   20     18.939 ±     0.104  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SAWTOTH        DPQ_11  avgt   20     73.071 ±     0.270  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20     69.116 ±     1.040  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SAWTOTH    DPQ_18_11I  avgt   20     68.561 ±     0.854  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SAWTOTH    DPQ_18_11P  avgt   20     70.933 ±     0.705  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SAWTOTH         RADIX  avgt   20    144.249 ±     4.448  ns/op
ArraySortBenchmark.sort          100               1     SORT______        _RANDOM      BASELINE  avgt   20     18.937 ±     0.104  ns/op
ArraySortBenchmark.sort          100               1     SORT______        _RANDOM        DPQ_11  avgt   20     73.059 ±     0.246  ns/op
ArraySortBenchmark.sort          100               1     SORT______        _RANDOM  DPQ_18_11_21  avgt   20     69.194 ±     1.047  ns/op
ArraySortBenchmark.sort          100               1     SORT______        _RANDOM    DPQ_18_11I  avgt   20     68.609 ±     0.798  ns/op
ArraySortBenchmark.sort          100               1     SORT______        _RANDOM    DPQ_18_11P  avgt   20     70.927 ±     0.739  ns/op
ArraySortBenchmark.sort          100               1     SORT______        _RANDOM         RADIX  avgt   20    144.430 ±     4.390  ns/op
ArraySortBenchmark.sort          100               1     SORT______        PLATEAU      BASELINE  avgt   20     18.939 ±     0.102  ns/op
ArraySortBenchmark.sort          100               1     SORT______        PLATEAU        DPQ_11  avgt   20     79.340 ±     0.157  ns/op
ArraySortBenchmark.sort          100               1     SORT______        PLATEAU  DPQ_18_11_21  avgt   20    106.812 ±     4.303  ns/op
ArraySortBenchmark.sort          100               1     SORT______        PLATEAU    DPQ_18_11I  avgt   20    113.192 ±     1.726  ns/op
ArraySortBenchmark.sort          100               1     SORT______        PLATEAU    DPQ_18_11P  avgt   20     70.916 ±     0.707  ns/op
ArraySortBenchmark.sort          100               1     SORT______        PLATEAU         RADIX  avgt   20    154.810 ±     3.316  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SHUFFLE      BASELINE  avgt   20     18.937 ±     0.105  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SHUFFLE        DPQ_11  avgt   20    136.345 ±     0.347  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    154.705 ±     2.145  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    201.105 ±     1.080  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SHUFFLE    DPQ_18_11P  avgt   20     70.915 ±     0.686  ns/op
ArraySortBenchmark.sort          100               1     SORT______        SHUFFLE         RADIX  avgt   20    154.604 ±     3.121  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        STAGGER      BASELINE  avgt   20     16.020 ±     0.928  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        STAGGER        DPQ_11  avgt   20    765.427 ±     3.811  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        STAGGER  DPQ_18_11_21  avgt   20    689.293 ±    19.287  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        STAGGER    DPQ_18_11I  avgt   20    726.357 ±     7.735  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        STAGGER    DPQ_18_11P  avgt   20    534.891 ±     1.021  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        STAGGER         RADIX  avgt   20   3788.307 ±    68.676  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SAWTOTH      BASELINE  avgt   20     16.029 ±     0.927  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SAWTOTH        DPQ_11  avgt   20    336.412 ±    10.139  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20    426.731 ±     2.183  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20    428.261 ±     4.667  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20    868.543 ±     2.832  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SAWTOTH         RADIX  avgt   20   3537.226 ±   112.505  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        _RANDOM      BASELINE  avgt   20     16.019 ±     0.927  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        _RANDOM        DPQ_11  avgt   20    351.864 ±     3.547  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20    427.423 ±     1.448  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        _RANDOM    DPQ_18_11I  avgt   20    430.267 ±     5.738  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        _RANDOM    DPQ_18_11P  avgt   20    871.845 ±     4.993  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        _RANDOM         RADIX  avgt   20   3654.230 ±    38.792  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        PLATEAU      BASELINE  avgt   20     16.021 ±     0.928  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        PLATEAU        DPQ_11  avgt   20    353.074 ±     0.905  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20    456.444 ±     2.429  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        PLATEAU    DPQ_18_11I  avgt   20    437.329 ±     7.784  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        PLATEAU    DPQ_18_11P  avgt   20    871.130 ±     4.784  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        PLATEAU         RADIX  avgt   20   3580.696 ±   161.216  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SHUFFLE      BASELINE  avgt   20     16.020 ±     0.928  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SHUFFLE        DPQ_11  avgt   20    235.259 ±     4.361  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20    406.324 ±     1.571  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20    357.215 ±     2.846  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20    138.629 ±     0.207  ns/op
ArraySortBenchmark.sort          100               1     DITHER____        SHUFFLE         RADIX  avgt   20   4626.050 ±  2227.623  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        STAGGER      BASELINE  avgt   20     16.025 ±     0.928  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        STAGGER        DPQ_11  avgt   20    738.810 ±     5.370  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20    858.320 ±     7.253  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        STAGGER    DPQ_18_11I  avgt   20    858.685 ±     6.953  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        STAGGER    DPQ_18_11P  avgt   20    768.648 ±     1.313  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        STAGGER         RADIX  avgt   20    735.734 ±     2.805  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SAWTOTH      BASELINE  avgt   20     16.020 ±     0.930  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SAWTOTH        DPQ_11  avgt   20    319.016 ±     1.137  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20    453.663 ±     8.564  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20    461.867 ±     0.410  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20    873.167 ±     3.360  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SAWTOTH         RADIX  avgt   20   3485.531 ±    83.717  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        _RANDOM      BASELINE  avgt   20     16.019 ±     0.925  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        _RANDOM        DPQ_11  avgt   20   2815.732 ±  3711.509  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20    598.471 ±   220.051  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20    634.293 ±   484.655  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20    857.098 ±    34.364  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        _RANDOM         RADIX  avgt   20   3593.494 ±    59.449  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        PLATEAU      BASELINE  avgt   20     16.022 ±     0.930  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        PLATEAU        DPQ_11  avgt   20     78.068 ±     0.711  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20    113.877 ±     0.604  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    110.934 ±     0.177  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20     73.289 ±     0.070  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        PLATEAU         RADIX  avgt   20    125.707 ±     1.700  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SHUFFLE      BASELINE  avgt   20     16.019 ±     0.929  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SHUFFLE        DPQ_11  avgt   20   8559.016 ± 13856.776  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20   1044.242 ±   760.869  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   3881.207 ±  5256.311  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20    538.619 ±    46.977  ns/op
ArraySortBenchmark.sort          100               4     IDENT_____        SHUFFLE         RADIX  avgt   20   6197.228 ±  8090.323  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        STAGGER      BASELINE  avgt   20     16.019 ±     0.928  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        STAGGER        DPQ_11  avgt   20    667.887 ±     3.376  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20   1108.743 ±     9.493  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        STAGGER    DPQ_18_11I  avgt   20   1107.607 ±     9.500  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   1051.070 ±     0.521  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        STAGGER         RADIX  avgt   20    779.303 ±     2.984  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SAWTOTH      BASELINE  avgt   20     16.019 ±     0.926  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SAWTOTH        DPQ_11  avgt   20    268.475 ±     3.516  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20    539.772 ±     7.134  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20    300.387 ±     0.638  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20    902.093 ±     4.813  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SAWTOTH         RADIX  avgt   20   3631.856 ±    78.811  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        _RANDOM      BASELINE  avgt   20     16.018 ±     0.927  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        _RANDOM        DPQ_11  avgt   20    810.877 ±   649.124  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20   2720.090 ±  4298.812  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20    891.103 ±   823.756  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20    850.173 ±    49.420  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        _RANDOM         RADIX  avgt   20   3501.902 ±    39.684  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        PLATEAU      BASELINE  avgt   20     16.019 ±     0.927  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        PLATEAU        DPQ_11  avgt   20     88.831 ±     0.712  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    120.937 ±     1.572  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    116.743 ±     0.190  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    194.827 ±     0.726  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        PLATEAU         RADIX  avgt   20    126.624 ±     4.047  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SHUFFLE      BASELINE  avgt   20     16.018 ±     0.925  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SHUFFLE        DPQ_11  avgt   20   8036.592 ± 13509.522  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20   2235.063 ±  3296.421  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   4109.099 ±  6870.772  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   1193.373 ±    40.521  ns/op
ArraySortBenchmark.sort          100               4     REVERSE___        SHUFFLE         RADIX  avgt   20   9253.506 ± 13679.978  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        STAGGER      BASELINE  avgt   20     16.020 ±     0.928  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        STAGGER        DPQ_11  avgt   20    742.639 ±     4.091  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20    824.382 ±     5.182  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20    911.152 ±     3.342  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20    869.436 ±     1.985  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        STAGGER         RADIX  avgt   20    782.335 ±     8.259  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     16.019 ±     0.932  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20    290.354 ±    12.493  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20    444.538 ±     1.561  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20    441.313 ±     5.522  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20    861.409 ±     2.571  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SAWTOTH         RADIX  avgt   20   3762.705 ±    44.575  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        _RANDOM      BASELINE  avgt   20     16.020 ±     0.929  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        _RANDOM        DPQ_11  avgt   20   3002.535 ±  6676.885  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20   4607.053 ±  9857.659  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20   4827.696 ± 11803.152  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20    858.363 ±    34.681  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        _RANDOM         RADIX  avgt   20   3750.159 ±    37.001  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        PLATEAU      BASELINE  avgt   20     16.018 ±     0.925  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        PLATEAU        DPQ_11  avgt   20     89.682 ±     0.693  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    116.460 ±     0.203  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    112.751 ±     0.590  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    136.469 ±     0.047  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        PLATEAU         RADIX  avgt   20    117.879 ±     1.493  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     16.017 ±     0.926  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   8626.882 ± 13982.191  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20   3589.135 ±  4620.564  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   1983.910 ±  2405.181  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20    787.881 ±    56.667  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_FR        SHUFFLE         RADIX  avgt   20   4699.236 ±  1939.437  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        STAGGER      BASELINE  avgt   20     16.018 ±     0.926  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        STAGGER        DPQ_11  avgt   20    750.398 ±     1.462  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20    805.839 ±     7.358  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20    760.877 ±    13.694  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20    720.883 ±     0.615  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        STAGGER         RADIX  avgt   20    793.964 ±     4.303  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     16.021 ±     0.928  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20    317.614 ±     2.154  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20    403.623 ±     4.441  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20    440.487 ±     6.353  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20    737.903 ±     3.057  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SAWTOTH         RADIX  avgt   20   3710.303 ±    13.738  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        _RANDOM      BASELINE  avgt   20     16.029 ±     0.926  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        _RANDOM        DPQ_11  avgt   20   3722.964 ±  6607.161  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20    931.702 ±  1191.645  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20    525.724 ±   301.078  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20    859.519 ±    40.493  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        _RANDOM         RADIX  avgt   20   3631.742 ±   104.794  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        PLATEAU      BASELINE  avgt   20     16.021 ±     0.928  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        PLATEAU        DPQ_11  avgt   20     77.589 ±     0.759  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    114.533 ±     0.075  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    110.892 ±     0.216  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20     73.284 ±     0.056  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        PLATEAU         RADIX  avgt   20    125.890 ±     1.640  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     16.021 ±     0.932  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   9592.139 ± 15703.622  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20    970.907 ±   481.469  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   2329.261 ±  3848.195  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20    723.255 ±    53.884  ns/op
ArraySortBenchmark.sort          100               4     REVERSE_BA        SHUFFLE         RADIX  avgt   20   4745.685 ±  1295.913  ns/op
ArraySortBenchmark.sort          100               4     SORT______        STAGGER      BASELINE  avgt   20     18.944 ±     0.105  ns/op
ArraySortBenchmark.sort          100               4     SORT______        STAGGER        DPQ_11  avgt   20    141.306 ±     0.501  ns/op
ArraySortBenchmark.sort          100               4     SORT______        STAGGER  DPQ_18_11_21  avgt   20    160.949 ±     0.581  ns/op
ArraySortBenchmark.sort          100               4     SORT______        STAGGER    DPQ_18_11I  avgt   20    211.516 ±     4.251  ns/op
ArraySortBenchmark.sort          100               4     SORT______        STAGGER    DPQ_18_11P  avgt   20     70.916 ±     0.730  ns/op
ArraySortBenchmark.sort          100               4     SORT______        STAGGER         RADIX  avgt   20    162.785 ±     2.556  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SAWTOTH      BASELINE  avgt   20     18.940 ±     0.103  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SAWTOTH        DPQ_11  avgt   20    233.315 ±     3.914  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20    178.841 ±     2.069  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SAWTOTH    DPQ_18_11I  avgt   20    190.861 ±     2.449  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SAWTOTH    DPQ_18_11P  avgt   20     70.920 ±     0.731  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SAWTOTH         RADIX  avgt   20    161.342 ±     2.516  ns/op
ArraySortBenchmark.sort          100               4     SORT______        _RANDOM      BASELINE  avgt   20     18.940 ±     0.101  ns/op
ArraySortBenchmark.sort          100               4     SORT______        _RANDOM        DPQ_11  avgt   20    360.064 ±   264.446  ns/op
ArraySortBenchmark.sort          100               4     SORT______        _RANDOM  DPQ_18_11_21  avgt   20    243.430 ±   257.933  ns/op
ArraySortBenchmark.sort          100               4     SORT______        _RANDOM    DPQ_18_11I  avgt   20   1514.659 ±  3553.320  ns/op
ArraySortBenchmark.sort          100               4     SORT______        _RANDOM    DPQ_18_11P  avgt   20     70.908 ±     0.693  ns/op
ArraySortBenchmark.sort          100               4     SORT______        _RANDOM         RADIX  avgt   20    161.256 ±     2.471  ns/op
ArraySortBenchmark.sort          100               4     SORT______        PLATEAU      BASELINE  avgt   20     19.087 ±     0.332  ns/op
ArraySortBenchmark.sort          100               4     SORT______        PLATEAU        DPQ_11  avgt   20     80.002 ±     0.401  ns/op
ArraySortBenchmark.sort          100               4     SORT______        PLATEAU  DPQ_18_11_21  avgt   20    111.419 ±     0.584  ns/op
ArraySortBenchmark.sort          100               4     SORT______        PLATEAU    DPQ_18_11I  avgt   20    109.421 ±     0.388  ns/op
ArraySortBenchmark.sort          100               4     SORT______        PLATEAU    DPQ_18_11P  avgt   20     70.930 ±     0.691  ns/op
ArraySortBenchmark.sort          100               4     SORT______        PLATEAU         RADIX  avgt   20    154.558 ±     3.011  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SHUFFLE      BASELINE  avgt   20     18.940 ±     0.103  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SHUFFLE        DPQ_11  avgt   20    136.324 ±     0.335  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    154.094 ±     0.748  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    205.986 ±     2.161  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SHUFFLE    DPQ_18_11P  avgt   20     70.920 ±     0.726  ns/op
ArraySortBenchmark.sort          100               4     SORT______        SHUFFLE         RADIX  avgt   20    145.433 ±     8.801  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        STAGGER      BASELINE  avgt   20     16.018 ±     0.925  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        STAGGER        DPQ_11  avgt   20    725.222 ±     3.445  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        STAGGER  DPQ_18_11_21  avgt   20    858.355 ±     7.111  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        STAGGER    DPQ_18_11I  avgt   20    862.094 ±     9.247  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        STAGGER    DPQ_18_11P  avgt   20    770.021 ±     1.972  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        STAGGER         RADIX  avgt   20    734.880 ±     3.218  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SAWTOTH      BASELINE  avgt   20     16.027 ±     0.927  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SAWTOTH        DPQ_11  avgt   20    502.117 ±    11.471  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20   1119.570 ±    10.626  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20   1119.176 ±    10.883  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20    951.031 ±     0.563  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SAWTOTH         RADIX  avgt   20   3746.132 ±    45.101  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        _RANDOM      BASELINE  avgt   20     16.020 ±     0.927  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        _RANDOM        DPQ_11  avgt   20  14392.497 ± 12397.090  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20  11860.979 ± 20099.853  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        _RANDOM    DPQ_18_11I  avgt   20  11152.922 ± 21888.799  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        _RANDOM    DPQ_18_11P  avgt   20   6027.616 ± 19078.270  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        _RANDOM         RADIX  avgt   20   3797.346 ±   631.349  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        PLATEAU      BASELINE  avgt   20     16.020 ±     0.928  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        PLATEAU        DPQ_11  avgt   20    301.041 ±     1.382  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20    480.593 ±     2.930  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        PLATEAU    DPQ_18_11I  avgt   20    464.844 ±     6.325  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        PLATEAU    DPQ_18_11P  avgt   20    848.334 ±     0.741  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        PLATEAU         RADIX  avgt   20   3511.557 ±    77.312  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SHUFFLE      BASELINE  avgt   20     16.021 ±     0.930  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SHUFFLE        DPQ_11  avgt   20   9311.825 ± 15250.555  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20   2228.630 ±  3588.604  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   4153.954 ±  7202.038  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20    588.292 ±    50.972  ns/op
ArraySortBenchmark.sort          100               4     DITHER____        SHUFFLE         RADIX  avgt   20   4052.984 ±   180.191  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        STAGGER      BASELINE  avgt   20     16.019 ±     0.926  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        STAGGER        DPQ_11  avgt   20    858.264 ±    10.396  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20    832.593 ±     4.777  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        STAGGER    DPQ_18_11I  avgt   20    863.720 ±     4.908  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        STAGGER    DPQ_18_11P  avgt   20    940.263 ±     2.676  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        STAGGER         RADIX  avgt   20   3605.304 ±    28.593  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SAWTOTH      BASELINE  avgt   20     16.021 ±     0.928  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SAWTOTH        DPQ_11  avgt   20    767.116 ±    10.415  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20    889.788 ±     6.469  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20    853.494 ±     3.284  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20    844.651 ±     0.292  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SAWTOTH         RADIX  avgt   20    794.729 ±     5.635  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        _RANDOM      BASELINE  avgt   20     16.020 ±     0.928  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        _RANDOM        DPQ_11  avgt   20  20208.059 ± 17359.706  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20   5181.731 ±  5136.705  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20   4539.945 ±  6418.546  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20   1481.632 ±  1304.795  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        _RANDOM         RADIX  avgt   20   3628.767 ±   140.624  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        PLATEAU      BASELINE  avgt   20     16.021 ±     0.931  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        PLATEAU        DPQ_11  avgt   20     93.042 ±     0.611  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20    112.166 ±     0.627  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    112.055 ±     1.685  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20     73.297 ±     0.083  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        PLATEAU         RADIX  avgt   20    125.860 ±     1.639  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SHUFFLE      BASELINE  avgt   20     16.020 ±     0.925  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SHUFFLE        DPQ_11  avgt   20  13549.123 ± 11957.974  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20   7261.337 ± 13513.191  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   6681.580 ± 13452.976  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20    303.656 ±    93.452  ns/op
ArraySortBenchmark.sort          100              16     IDENT_____        SHUFFLE         RADIX  avgt   20   2946.459 ±  7343.506  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        STAGGER      BASELINE  avgt   20     16.021 ±     0.929  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        STAGGER        DPQ_11  avgt   20    906.333 ±     2.794  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20    877.541 ±     3.227  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        STAGGER    DPQ_18_11I  avgt   20    906.269 ±     4.768  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   1002.881 ±     1.062  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        STAGGER         RADIX  avgt   20   3889.395 ±   141.110  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SAWTOTH      BASELINE  avgt   20     16.030 ±     0.927  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SAWTOTH        DPQ_11  avgt   20    640.752 ±     7.554  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20    791.749 ±    10.474  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20    679.881 ±    11.219  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20    964.510 ±     1.088  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SAWTOTH         RADIX  avgt   20    822.299 ±     3.681  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        _RANDOM      BASELINE  avgt   20     16.019 ±     0.926  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        _RANDOM        DPQ_11  avgt   20  12912.604 ± 16320.358  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20   5767.656 ±  4757.604  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20  14839.340 ± 20353.862  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20   2169.341 ±  3786.041  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        _RANDOM         RADIX  avgt   20   3518.782 ±    48.015  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        PLATEAU      BASELINE  avgt   20     16.019 ±     0.929  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        PLATEAU        DPQ_11  avgt   20    224.955 ±     2.251  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    153.610 ±     0.427  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    144.400 ±     0.124  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20    493.480 ±     0.468  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        PLATEAU         RADIX  avgt   20    149.244 ±     1.266  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SHUFFLE      BASELINE  avgt   20     16.019 ±     0.927  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SHUFFLE        DPQ_11  avgt   20   4445.646 ± 10055.599  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20    878.842 ±   702.121  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   5710.167 ±  8990.946  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   1707.776 ±  1631.215  ns/op
ArraySortBenchmark.sort          100              16     REVERSE___        SHUFFLE         RADIX  avgt   20   4707.244 ± 10176.764  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        STAGGER      BASELINE  avgt   20     16.023 ±     0.929  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        STAGGER        DPQ_11  avgt   20    649.404 ±     2.116  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20   1024.261 ±     4.297  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20   1028.076 ±     3.462  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20   1045.186 ±     6.029  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        STAGGER         RADIX  avgt   20   3894.368 ±    49.001  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     16.022 ±     0.927  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20    726.349 ±     1.809  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20    848.261 ±     2.168  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20    850.581 ±     4.046  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20    931.353 ±     2.875  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SAWTOTH         RADIX  avgt   20    852.816 ±    12.166  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        _RANDOM      BASELINE  avgt   20     16.023 ±     0.930  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        _RANDOM        DPQ_11  avgt   20  14597.946 ± 18757.450  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20  13066.814 ± 26217.992  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20  14838.090 ± 31387.065  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20   1014.568 ±    37.472  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        _RANDOM         RADIX  avgt   20   3604.131 ±   143.152  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        PLATEAU      BASELINE  avgt   20     16.017 ±     0.926  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        PLATEAU        DPQ_11  avgt   20    229.801 ±     3.351  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    319.034 ±    13.051  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    298.846 ±     5.059  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    268.348 ±     0.072  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        PLATEAU         RADIX  avgt   20    132.422 ±     1.269  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     16.019 ±     0.930  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   6687.452 ± 10940.224  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20   1788.039 ±  3448.312  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   1673.143 ±  2810.534  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20    602.055 ±    45.250  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_FR        SHUFFLE         RADIX  avgt   20   6725.402 ± 11530.739  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        STAGGER      BASELINE  avgt   20     16.017 ±     0.924  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        STAGGER        DPQ_11  avgt   20    793.850 ±     2.980  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20    846.827 ±     2.506  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20    856.129 ±    11.144  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20   1004.088 ±     5.025  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        STAGGER         RADIX  avgt   20   3771.220 ±    85.497  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     16.019 ±     0.926  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20    687.313 ±     2.305  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20   1031.032 ±    14.630  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20   1161.971 ±   102.364  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20    757.269 ±     4.047  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SAWTOTH         RADIX  avgt   20    843.908 ±     4.519  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        _RANDOM      BASELINE  avgt   20     16.019 ±     0.926  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        _RANDOM        DPQ_11  avgt   20  17397.197 ± 18532.827  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20  10972.875 ± 16317.345  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20  12338.591 ± 18747.440  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20   6718.264 ± 17836.151  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        _RANDOM         RADIX  avgt   20   3622.018 ±   110.542  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        PLATEAU      BASELINE  avgt   20     16.018 ±     0.927  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        PLATEAU        DPQ_11  avgt   20     92.713 ±     0.567  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    111.922 ±     0.479  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    111.024 ±     2.203  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20     73.261 ±     0.064  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        PLATEAU         RADIX  avgt   20    125.879 ±     1.653  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     16.021 ±     0.927  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20  11934.018 ± 15743.589  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20   7541.378 ± 17425.766  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   4977.550 ±  6855.131  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20    646.022 ±   204.636  ns/op
ArraySortBenchmark.sort          100              16     REVERSE_BA        SHUFFLE         RADIX  avgt   20   1018.056 ±   161.099  ns/op
ArraySortBenchmark.sort          100              16     SORT______        STAGGER      BASELINE  avgt   20     18.938 ±     0.104  ns/op
ArraySortBenchmark.sort          100              16     SORT______        STAGGER        DPQ_11  avgt   20    136.319 ±     0.347  ns/op
ArraySortBenchmark.sort          100              16     SORT______        STAGGER  DPQ_18_11_21  avgt   20    155.568 ±     1.424  ns/op
ArraySortBenchmark.sort          100              16     SORT______        STAGGER    DPQ_18_11I  avgt   20    203.276 ±     2.389  ns/op
ArraySortBenchmark.sort          100              16     SORT______        STAGGER    DPQ_18_11P  avgt   20     70.911 ±     0.732  ns/op
ArraySortBenchmark.sort          100              16     SORT______        STAGGER         RADIX  avgt   20    145.486 ±     8.965  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SAWTOTH      BASELINE  avgt   20     18.939 ±     0.102  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SAWTOTH        DPQ_11  avgt   20    137.221 ±     0.872  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20    159.899 ±     0.819  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SAWTOTH    DPQ_18_11I  avgt   20    207.151 ±     1.134  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SAWTOTH    DPQ_18_11P  avgt   20     70.934 ±     0.706  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SAWTOTH         RADIX  avgt   20    162.321 ±     2.480  ns/op
ArraySortBenchmark.sort          100              16     SORT______        _RANDOM      BASELINE  avgt   20     18.941 ±     0.104  ns/op
ArraySortBenchmark.sort          100              16     SORT______        _RANDOM        DPQ_11  avgt   20    141.181 ±     1.185  ns/op
ArraySortBenchmark.sort          100              16     SORT______        _RANDOM  DPQ_18_11_21  avgt   20   1455.030 ±  2591.922  ns/op
ArraySortBenchmark.sort          100              16     SORT______        _RANDOM    DPQ_18_11I  avgt   20   2875.213 ±  5561.042  ns/op
ArraySortBenchmark.sort          100              16     SORT______        _RANDOM    DPQ_18_11P  avgt   20     70.908 ±     0.682  ns/op
ArraySortBenchmark.sort          100              16     SORT______        _RANDOM         RADIX  avgt   20    172.171 ±     4.555  ns/op
ArraySortBenchmark.sort          100              16     SORT______        PLATEAU      BASELINE  avgt   20     18.941 ±     0.103  ns/op
ArraySortBenchmark.sort          100              16     SORT______        PLATEAU        DPQ_11  avgt   20     94.924 ±     0.227  ns/op
ArraySortBenchmark.sort          100              16     SORT______        PLATEAU  DPQ_18_11_21  avgt   20    109.693 ±     1.236  ns/op
ArraySortBenchmark.sort          100              16     SORT______        PLATEAU    DPQ_18_11I  avgt   20    107.489 ±     2.586  ns/op
ArraySortBenchmark.sort          100              16     SORT______        PLATEAU    DPQ_18_11P  avgt   20     70.911 ±     0.725  ns/op
ArraySortBenchmark.sort          100              16     SORT______        PLATEAU         RADIX  avgt   20    154.577 ±     3.089  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SHUFFLE      BASELINE  avgt   20     18.945 ±     0.101  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SHUFFLE        DPQ_11  avgt   20    136.349 ±     0.363  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    153.227 ±     1.072  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    204.525 ±     3.364  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SHUFFLE    DPQ_18_11P  avgt   20     70.925 ±     0.731  ns/op
ArraySortBenchmark.sort          100              16     SORT______        SHUFFLE         RADIX  avgt   20    154.573 ±     3.118  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        STAGGER      BASELINE  avgt   20     16.016 ±     0.928  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        STAGGER        DPQ_11  avgt   20    864.804 ±     9.346  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        STAGGER  DPQ_18_11_21  avgt   20    852.213 ±     8.344  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        STAGGER    DPQ_18_11I  avgt   20    889.843 ±     0.866  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        STAGGER    DPQ_18_11P  avgt   20    945.696 ±     0.945  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        STAGGER         RADIX  avgt   20   3907.788 ±    20.032  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SAWTOTH      BASELINE  avgt   20     16.021 ±     0.928  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SAWTOTH        DPQ_11  avgt   20    699.863 ±     0.949  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20    935.649 ±     2.235  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20    991.097 ±     3.143  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20    871.944 ±     6.675  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SAWTOTH         RADIX  avgt   20   3721.272 ±    41.440  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        _RANDOM      BASELINE  avgt   20     16.019 ±     0.928  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        _RANDOM        DPQ_11  avgt   20  18335.528 ± 19422.304  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20   6428.195 ± 10922.827  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        _RANDOM    DPQ_18_11I  avgt   20   7501.958 ±  9246.118  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        _RANDOM    DPQ_18_11P  avgt   20  13389.869 ± 24814.418  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        _RANDOM         RADIX  avgt   20   3821.913 ±   544.025  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        PLATEAU      BASELINE  avgt   20     16.017 ±     0.927  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        PLATEAU        DPQ_11  avgt   20    342.243 ±     0.931  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20    721.147 ±     7.485  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        PLATEAU    DPQ_18_11I  avgt   20    726.753 ±     5.710  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        PLATEAU    DPQ_18_11P  avgt   20    703.362 ±     0.276  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        PLATEAU         RADIX  avgt   20   3582.232 ±   151.681  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SHUFFLE      BASELINE  avgt   20     16.022 ±     0.928  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SHUFFLE        DPQ_11  avgt   20  14289.325 ± 12618.877  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20   2519.854 ±  4170.173  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   5144.711 ±  6994.801  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20    435.395 ±   189.231  ns/op
ArraySortBenchmark.sort          100              16     DITHER____        SHUFFLE         RADIX  avgt   20   4183.641 ±   183.492  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        STAGGER      BASELINE  avgt   20     16.017 ±     0.925  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        STAGGER        DPQ_11  avgt   20    978.300 ±     6.435  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        STAGGER  DPQ_18_11_21  avgt   20   1092.929 ±     2.995  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        STAGGER    DPQ_18_11I  avgt   20   1091.351 ±     2.349  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        STAGGER    DPQ_18_11P  avgt   20   1021.100 ±     5.041  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        STAGGER         RADIX  avgt   20   3726.325 ±   115.221  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SAWTOTH      BASELINE  avgt   20     16.022 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SAWTOTH        DPQ_11  avgt   20    781.098 ±     3.929  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SAWTOTH  DPQ_18_11_21  avgt   20    852.528 ±     6.375  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SAWTOTH    DPQ_18_11I  avgt   20    843.049 ±     7.003  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SAWTOTH    DPQ_18_11P  avgt   20    569.842 ±     0.113  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SAWTOTH         RADIX  avgt   20    311.205 ±     2.753  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        _RANDOM      BASELINE  avgt   20     16.017 ±     0.926  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        _RANDOM        DPQ_11  avgt   20  25150.836 ± 22159.854  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        _RANDOM  DPQ_18_11_21  avgt   20   5899.713 ±  9101.447  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        _RANDOM    DPQ_18_11I  avgt   20  19066.167 ± 22696.855  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        _RANDOM    DPQ_18_11P  avgt   20  11714.872 ± 27817.241  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        _RANDOM         RADIX  avgt   20   4010.644 ±   616.889  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        PLATEAU      BASELINE  avgt   20     16.016 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        PLATEAU        DPQ_11  avgt   20    134.320 ±     1.099  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        PLATEAU  DPQ_18_11_21  avgt   20    157.850 ±     1.099  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        PLATEAU    DPQ_18_11I  avgt   20    205.779 ±     2.898  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        PLATEAU    DPQ_18_11P  avgt   20     73.256 ±     0.064  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        PLATEAU         RADIX  avgt   20    125.870 ±     1.651  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SHUFFLE      BASELINE  avgt   20     16.019 ±     0.926  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SHUFFLE        DPQ_11  avgt   20   5252.004 ±  8831.283  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SHUFFLE  DPQ_18_11_21  avgt   20   8887.422 ±  8909.339  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SHUFFLE    DPQ_18_11I  avgt   20   5904.978 ±  9767.374  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SHUFFLE    DPQ_18_11P  avgt   20    191.742 ±    25.086  ns/op
ArraySortBenchmark.sort          100              64     IDENT_____        SHUFFLE         RADIX  avgt   20    491.732 ±   134.256  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        STAGGER      BASELINE  avgt   20     16.018 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        STAGGER        DPQ_11  avgt   20    900.089 ±     7.622  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        STAGGER  DPQ_18_11_21  avgt   20    904.866 ±     1.010  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        STAGGER    DPQ_18_11I  avgt   20    906.275 ±     1.184  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        STAGGER    DPQ_18_11P  avgt   20   1048.026 ±     4.246  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        STAGGER         RADIX  avgt   20   3622.101 ±    61.663  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SAWTOTH      BASELINE  avgt   20     16.017 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SAWTOTH        DPQ_11  avgt   20    642.788 ±     3.680  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SAWTOTH  DPQ_18_11_21  avgt   20    828.403 ±    10.092  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SAWTOTH    DPQ_18_11I  avgt   20    814.230 ±     6.780  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SAWTOTH    DPQ_18_11P  avgt   20   1166.905 ±     4.900  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SAWTOTH         RADIX  avgt   20    405.785 ±     2.728  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        _RANDOM      BASELINE  avgt   20     16.018 ±     0.926  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        _RANDOM        DPQ_11  avgt   20  16048.491 ± 20775.640  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        _RANDOM  DPQ_18_11_21  avgt   20   1553.533 ±   500.919  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        _RANDOM    DPQ_18_11I  avgt   20   9198.593 ±  9534.934  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        _RANDOM    DPQ_18_11P  avgt   20   1306.515 ±   900.627  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        _RANDOM         RADIX  avgt   20   4048.197 ±   731.480  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        PLATEAU      BASELINE  avgt   20     16.019 ±     0.929  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        PLATEAU        DPQ_11  avgt   20    341.361 ±     4.197  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        PLATEAU  DPQ_18_11_21  avgt   20    338.357 ±     1.648  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        PLATEAU    DPQ_18_11I  avgt   20    421.689 ±     9.226  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        PLATEAU    DPQ_18_11P  avgt   20   1298.945 ±     8.119  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        PLATEAU         RADIX  avgt   20    208.860 ±     3.614  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SHUFFLE      BASELINE  avgt   20     16.020 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SHUFFLE        DPQ_11  avgt   20   3508.320 ±  8008.954  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SHUFFLE  DPQ_18_11_21  avgt   20   1214.143 ±  2606.992  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SHUFFLE    DPQ_18_11I  avgt   20   8104.200 ±  9167.027  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SHUFFLE    DPQ_18_11P  avgt   20   1242.632 ±    11.859  ns/op
ArraySortBenchmark.sort          100              64     REVERSE___        SHUFFLE         RADIX  avgt   20    567.089 ±   102.632  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        STAGGER      BASELINE  avgt   20     16.027 ±     0.925  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        STAGGER        DPQ_11  avgt   20    677.090 ±     1.697  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        STAGGER  DPQ_18_11_21  avgt   20   1098.638 ±     3.807  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        STAGGER    DPQ_18_11I  avgt   20   1076.081 ±     2.479  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        STAGGER    DPQ_18_11P  avgt   20   1048.455 ±     5.394  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        STAGGER         RADIX  avgt   20   3786.105 ±    64.280  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SAWTOTH      BASELINE  avgt   20     16.020 ±     0.928  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SAWTOTH        DPQ_11  avgt   20    846.990 ±     1.155  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SAWTOTH  DPQ_18_11_21  avgt   20   1186.476 ±     7.456  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SAWTOTH    DPQ_18_11I  avgt   20   1195.110 ±     5.310  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SAWTOTH    DPQ_18_11P  avgt   20    957.813 ±     1.630  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SAWTOTH         RADIX  avgt   20    668.536 ±     3.271  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        _RANDOM      BASELINE  avgt   20     16.019 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        _RANDOM        DPQ_11  avgt   20  19395.361 ± 20423.602  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        _RANDOM  DPQ_18_11_21  avgt   20   1113.396 ±   303.221  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        _RANDOM    DPQ_18_11I  avgt   20   2748.946 ±  3689.128  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        _RANDOM    DPQ_18_11P  avgt   20   1049.775 ±    30.509  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        _RANDOM         RADIX  avgt   20   4026.591 ±   743.833  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        PLATEAU      BASELINE  avgt   20     16.022 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        PLATEAU        DPQ_11  avgt   20    418.470 ±     0.790  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        PLATEAU  DPQ_18_11_21  avgt   20    664.776 ±     2.537  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        PLATEAU    DPQ_18_11I  avgt   20    672.573 ±     9.966  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        PLATEAU    DPQ_18_11P  avgt   20    515.113 ±     0.148  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        PLATEAU         RADIX  avgt   20    377.223 ±     4.557  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SHUFFLE      BASELINE  avgt   20     16.019 ±     0.929  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SHUFFLE        DPQ_11  avgt   20   9896.905 ± 13077.269  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SHUFFLE  DPQ_18_11_21  avgt   20   9882.302 ± 16540.347  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SHUFFLE    DPQ_18_11I  avgt   20   5328.446 ±  9500.146  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SHUFFLE    DPQ_18_11P  avgt   20    579.428 ±    47.446  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_FR        SHUFFLE         RADIX  avgt   20   3968.165 ±  8744.017  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        STAGGER      BASELINE  avgt   20     16.026 ±     0.926  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        STAGGER        DPQ_11  avgt   20    917.626 ±    24.663  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        STAGGER  DPQ_18_11_21  avgt   20    847.902 ±     0.839  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        STAGGER    DPQ_18_11I  avgt   20    853.295 ±    10.689  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        STAGGER    DPQ_18_11P  avgt   20   1059.826 ±     0.547  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        STAGGER         RADIX  avgt   20   3859.776 ±    35.506  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SAWTOTH      BASELINE  avgt   20     16.020 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SAWTOTH        DPQ_11  avgt   20    782.565 ±     7.728  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SAWTOTH  DPQ_18_11_21  avgt   20    740.189 ±     2.208  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SAWTOTH    DPQ_18_11I  avgt   20    724.328 ±    10.910  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SAWTOTH    DPQ_18_11P  avgt   20    560.405 ±     2.635  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SAWTOTH         RADIX  avgt   20    739.483 ±    16.845  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        _RANDOM      BASELINE  avgt   20     16.018 ±     0.928  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        _RANDOM        DPQ_11  avgt   20  25086.855 ± 21313.464  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        _RANDOM  DPQ_18_11_21  avgt   20   1814.756 ±  2216.229  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        _RANDOM    DPQ_18_11I  avgt   20   6931.545 ±  7632.049  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        _RANDOM    DPQ_18_11P  avgt   20   9387.676 ± 22171.951  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        _RANDOM         RADIX  avgt   20   4024.072 ±   647.330  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        PLATEAU      BASELINE  avgt   20     16.017 ±     0.926  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        PLATEAU        DPQ_11  avgt   20    327.409 ±     3.123  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        PLATEAU  DPQ_18_11_21  avgt   20    341.962 ±    28.488  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        PLATEAU    DPQ_18_11I  avgt   20    391.378 ±     4.229  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        PLATEAU    DPQ_18_11P  avgt   20    256.020 ±     0.264  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        PLATEAU         RADIX  avgt   20    331.117 ±     6.015  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SHUFFLE      BASELINE  avgt   20     16.022 ±     0.926  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SHUFFLE        DPQ_11  avgt   20   6723.544 ± 11407.071  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SHUFFLE  DPQ_18_11_21  avgt   20   7358.609 ± 18079.879  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SHUFFLE    DPQ_18_11I  avgt   20   2142.416 ±  4119.071  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SHUFFLE    DPQ_18_11P  avgt   20   2514.054 ±  7462.128  ns/op
ArraySortBenchmark.sort          100              64     REVERSE_BA        SHUFFLE         RADIX  avgt   20   4118.536 ±  9113.434  ns/op
ArraySortBenchmark.sort          100              64     SORT______        STAGGER      BASELINE  avgt   20     18.943 ±     0.104  ns/op
ArraySortBenchmark.sort          100              64     SORT______        STAGGER        DPQ_11  avgt   20    141.258 ±     0.557  ns/op
ArraySortBenchmark.sort          100              64     SORT______        STAGGER  DPQ_18_11_21  avgt   20    161.465 ±     0.699  ns/op
ArraySortBenchmark.sort          100              64     SORT______        STAGGER    DPQ_18_11I  avgt   20    209.350 ±     1.141  ns/op
ArraySortBenchmark.sort          100              64     SORT______        STAGGER    DPQ_18_11P  avgt   20     70.904 ±     0.707  ns/op
ArraySortBenchmark.sort          100              64     SORT______        STAGGER         RADIX  avgt   20    162.751 ±     2.698  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SAWTOTH      BASELINE  avgt   20     18.944 ±     0.100  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SAWTOTH        DPQ_11  avgt   20    138.071 ±     0.782  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SAWTOTH  DPQ_18_11_21  avgt   20    158.743 ±     1.285  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SAWTOTH    DPQ_18_11I  avgt   20    214.246 ±     3.519  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SAWTOTH    DPQ_18_11P  avgt   20     70.901 ±     0.698  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SAWTOTH         RADIX  avgt   20    162.503 ±     2.984  ns/op
ArraySortBenchmark.sort          100              64     SORT______        _RANDOM      BASELINE  avgt   20     18.937 ±     0.105  ns/op
ArraySortBenchmark.sort          100              64     SORT______        _RANDOM        DPQ_11  avgt   20    139.871 ±     1.237  ns/op
ArraySortBenchmark.sort          100              64     SORT______        _RANDOM  DPQ_18_11_21  avgt   20   1229.148 ±  2876.346  ns/op
ArraySortBenchmark.sort          100              64     SORT______        _RANDOM    DPQ_18_11I  avgt   20   2099.225 ±  4894.031  ns/op
ArraySortBenchmark.sort          100              64     SORT______        _RANDOM    DPQ_18_11P  avgt   20     70.915 ±     0.717  ns/op
ArraySortBenchmark.sort          100              64     SORT______        _RANDOM         RADIX  avgt   20    164.147 ±     3.161  ns/op
ArraySortBenchmark.sort          100              64     SORT______        PLATEAU      BASELINE  avgt   20     18.940 ±     0.101  ns/op
ArraySortBenchmark.sort          100              64     SORT______        PLATEAU        DPQ_11  avgt   20    136.402 ±     0.354  ns/op
ArraySortBenchmark.sort          100              64     SORT______        PLATEAU  DPQ_18_11_21  avgt   20    154.596 ±     2.177  ns/op
ArraySortBenchmark.sort          100              64     SORT______        PLATEAU    DPQ_18_11I  avgt   20    203.300 ±     2.403  ns/op
ArraySortBenchmark.sort          100              64     SORT______        PLATEAU    DPQ_18_11P  avgt   20     70.926 ±     0.740  ns/op
ArraySortBenchmark.sort          100              64     SORT______        PLATEAU         RADIX  avgt   20    154.537 ±     3.094  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SHUFFLE      BASELINE  avgt   20     18.938 ±     0.103  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SHUFFLE        DPQ_11  avgt   20    136.347 ±     0.346  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SHUFFLE  DPQ_18_11_21  avgt   20    155.532 ±     1.469  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SHUFFLE    DPQ_18_11I  avgt   20    205.602 ±     1.164  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SHUFFLE    DPQ_18_11P  avgt   20     70.918 ±     0.720  ns/op
ArraySortBenchmark.sort          100              64     SORT______        SHUFFLE         RADIX  avgt   20    154.614 ±     2.912  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        STAGGER      BASELINE  avgt   20     16.020 ±     0.932  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        STAGGER        DPQ_11  avgt   20    966.250 ±    15.591  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        STAGGER  DPQ_18_11_21  avgt   20   1091.403 ±     8.533  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        STAGGER    DPQ_18_11I  avgt   20   1091.314 ±    12.149  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        STAGGER    DPQ_18_11P  avgt   20   1018.098 ±     5.696  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        STAGGER         RADIX  avgt   20   3694.324 ±    91.576  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SAWTOTH      BASELINE  avgt   20     16.019 ±     0.927  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SAWTOTH        DPQ_11  avgt   20    835.544 ±     4.035  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SAWTOTH  DPQ_18_11_21  avgt   20    807.881 ±     1.526  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SAWTOTH    DPQ_18_11I  avgt   20    773.892 ±     2.002  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SAWTOTH    DPQ_18_11P  avgt   20    669.247 ±     1.891  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SAWTOTH         RADIX  avgt   20   3770.716 ±    22.632  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        _RANDOM      BASELINE  avgt   20     16.018 ±     0.926  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        _RANDOM        DPQ_11  avgt   20  15541.982 ± 19972.612  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        _RANDOM  DPQ_18_11_21  avgt   20   5516.221 ±  8027.855  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        _RANDOM    DPQ_18_11I  avgt   20  13082.090 ± 24315.077  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        _RANDOM    DPQ_18_11P  avgt   20  13438.911 ± 25030.188  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        _RANDOM         RADIX  avgt   20   3774.426 ±    24.783  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        PLATEAU      BASELINE  avgt   20     16.019 ±     0.926  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        PLATEAU        DPQ_11  avgt   20    632.528 ±    11.077  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        PLATEAU  DPQ_18_11_21  avgt   20    552.683 ±     2.155  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        PLATEAU    DPQ_18_11I  avgt   20    564.600 ±     1.521  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        PLATEAU    DPQ_18_11P  avgt   20    329.026 ±     1.396  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        PLATEAU         RADIX  avgt   20   3696.586 ±    21.537  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SHUFFLE      BASELINE  avgt   20     16.020 ±     0.931  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SHUFFLE        DPQ_11  avgt   20   9539.104 ± 12547.544  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SHUFFLE  DPQ_18_11_21  avgt   20   1900.621 ±  3929.148  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SHUFFLE    DPQ_18_11I  avgt   20   1810.070 ±  3656.655  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SHUFFLE    DPQ_18_11P  avgt   20    375.368 ±   424.160  ns/op
ArraySortBenchmark.sort          100              64     DITHER____        SHUFFLE         RADIX  avgt   20   3861.122 ±   138.680  ns/op

Benchmark result is saved to sort-100.out
